var XH=Object.create;var eb=Object.defineProperty;var YH=Object.getOwnPropertyDescriptor;var QH=Object.getOwnPropertyNames;var ZH=Object.getPrototypeOf,JH=Object.prototype.hasOwnProperty;var eq=r=>eb(r,"__esModule",{value:!0});var Ar=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),je=(r,e)=>{for(var t in e)eb(r,t,{get:e[t],enumerable:!0})},tq=(r,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of QH(e))!JH.call(r,o)&&(t||o!=="default")&&eb(r,o,{get:()=>e[o],enumerable:!(n=YH(e,o))||n.enumerable});return r},Sp=(r,e)=>tq(eq(eb(r!=null?XH(ZH(r)):{},"default",!e&&r&&r.__esModule?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);var k0=Ar((Kde,C0)=>{C0.exports=Qt;var Ds=null;try{Ds=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Qt(r,e,t){this.low=r|0,this.high=e|0,this.unsigned=!!t}Qt.prototype.__isLong__;Object.defineProperty(Qt.prototype,"__isLong__",{value:!0});function Vn(r){return(r&&r.__isLong__)===!0}Qt.isLong=Vn;var d0={},f0={};function Pp(r,e){var t,n,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(n=f0[r],n)?n:(t=Zt(r,(r|0)<0?-1:0,!0),o&&(f0[r]=t),t)):(r|=0,(o=-128<=r&&r<128)&&(n=d0[r],n)?n:(t=Zt(r,r<0?-1:0,!1),o&&(d0[r]=t),t))}Qt.fromInt=Pp;function Ps(r,e){if(isNaN(r))return e?Dp:Es;if(e){if(r<0)return Dp;if(r>=y0)return I0}else{if(r<=-g0)return Kn;if(r+1>=g0)return x0}return r<0?Ps(-r,e).neg():Zt(r%Dm|0,r/Dm|0,e)}Qt.fromNumber=Ps;function Zt(r,e,t){return new Qt(r,e,t)}Qt.fromBits=Zt;var sb=Math.pow;function GI(r,e,t){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return Es;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var n;if((n=r.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return GI(r.substring(1),e,t).neg();for(var o=Ps(sb(t,8)),s=Es,i=0;i<r.length;i+=8){var a=Math.min(8,r.length-i),u=parseInt(r.substring(i,i+a),t);if(a<8){var p=Ps(sb(t,a));s=s.mul(p).add(Ps(u))}else s=s.mul(o),s=s.add(Ps(u))}return s.unsigned=e,s}Qt.fromString=GI;function Aa(r,e){return typeof r=="number"?Ps(r,e):typeof r=="string"?GI(r,e):Zt(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}Qt.fromValue=Aa;var h0=1<<16,vq=1<<24,Dm=h0*h0,y0=Dm*Dm,g0=y0/2,b0=Pp(vq),Es=Pp(0);Qt.ZERO=Es;var Dp=Pp(0,!0);Qt.UZERO=Dp;var Nm=Pp(1);Qt.ONE=Nm;var T0=Pp(1,!0);Qt.UONE=T0;var zI=Pp(-1);Qt.NEG_ONE=zI;var x0=Zt(-1,2147483647,!1);Qt.MAX_VALUE=x0;var I0=Zt(-1,-1,!0);Qt.MAX_UNSIGNED_VALUE=I0;var Kn=Zt(0,-2147483648,!1);Qt.MIN_VALUE=Kn;var Ie=Qt.prototype;Ie.toInt=function(){return this.unsigned?this.low>>>0:this.low};Ie.toNumber=function(){return this.unsigned?(this.high>>>0)*Dm+(this.low>>>0):this.high*Dm+(this.low>>>0)};Ie.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Kn)){var t=Ps(e),n=this.div(t),o=n.mul(t).sub(this);return n.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var s=Ps(sb(e,6),this.unsigned),i=this,a="";;){var u=i.div(s),p=i.sub(u.mul(s)).toInt()>>>0,l=p.toString(e);if(i=u,i.isZero())return l+a;for(;l.length<6;)l="0"+l;a=""+l+a}};Ie.getHighBits=function(){return this.high};Ie.getHighBitsUnsigned=function(){return this.high>>>0};Ie.getLowBits=function(){return this.low};Ie.getLowBitsUnsigned=function(){return this.low>>>0};Ie.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Kn)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return this.high!=0?t+33:t+1};Ie.isZero=function(){return this.high===0&&this.low===0};Ie.eqz=Ie.isZero;Ie.isNegative=function(){return!this.unsigned&&this.high<0};Ie.isPositive=function(){return this.unsigned||this.high>=0};Ie.isOdd=function(){return(this.low&1)===1};Ie.isEven=function(){return(this.low&1)===0};Ie.equals=function(e){return Vn(e)||(e=Aa(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};Ie.eq=Ie.equals;Ie.notEquals=function(e){return!this.eq(e)};Ie.neq=Ie.notEquals;Ie.ne=Ie.notEquals;Ie.lessThan=function(e){return this.comp(e)<0};Ie.lt=Ie.lessThan;Ie.lessThanOrEqual=function(e){return this.comp(e)<=0};Ie.lte=Ie.lessThanOrEqual;Ie.le=Ie.lessThanOrEqual;Ie.greaterThan=function(e){return this.comp(e)>0};Ie.gt=Ie.greaterThan;Ie.greaterThanOrEqual=function(e){return this.comp(e)>=0};Ie.gte=Ie.greaterThanOrEqual;Ie.ge=Ie.greaterThanOrEqual;Ie.compare=function(e){if(Vn(e)||(e=Aa(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};Ie.comp=Ie.compare;Ie.negate=function(){return!this.unsigned&&this.eq(Kn)?Kn:this.not().add(Nm)};Ie.neg=Ie.negate;Ie.add=function(e){Vn(e)||(e=Aa(e));var t=this.high>>>16,n=this.high&65535,o=this.low>>>16,s=this.low&65535,i=e.high>>>16,a=e.high&65535,u=e.low>>>16,p=e.low&65535,l=0,m=0,c=0,d=0;return d+=s+p,c+=d>>>16,d&=65535,c+=o+u,m+=c>>>16,c&=65535,m+=n+a,l+=m>>>16,m&=65535,l+=t+i,l&=65535,Zt(c<<16|d,l<<16|m,this.unsigned)};Ie.subtract=function(e){return Vn(e)||(e=Aa(e)),this.add(e.neg())};Ie.sub=Ie.subtract;Ie.multiply=function(e){if(this.isZero())return Es;if(Vn(e)||(e=Aa(e)),Ds){var t=Ds.mul(this.low,this.high,e.low,e.high);return Zt(t,Ds.get_high(),this.unsigned)}if(e.isZero())return Es;if(this.eq(Kn))return e.isOdd()?Kn:Es;if(e.eq(Kn))return this.isOdd()?Kn:Es;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(b0)&&e.lt(b0))return Ps(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,o=this.high&65535,s=this.low>>>16,i=this.low&65535,a=e.high>>>16,u=e.high&65535,p=e.low>>>16,l=e.low&65535,m=0,c=0,d=0,f=0;return f+=i*l,d+=f>>>16,f&=65535,d+=s*l,c+=d>>>16,d&=65535,d+=i*p,c+=d>>>16,d&=65535,c+=o*l,m+=c>>>16,c&=65535,c+=s*p,m+=c>>>16,c&=65535,c+=i*u,m+=c>>>16,c&=65535,m+=n*l+o*p+s*u+i*a,m&=65535,Zt(d<<16|f,m<<16|c,this.unsigned)};Ie.mul=Ie.multiply;Ie.divide=function(e){if(Vn(e)||(e=Aa(e)),e.isZero())throw Error("division by zero");if(Ds){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?Ds.div_u:Ds.div_s)(this.low,this.high,e.low,e.high);return Zt(t,Ds.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Dp:Es;var n,o,s;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Dp;if(e.gt(this.shru(1)))return T0;s=Dp}else{if(this.eq(Kn)){if(e.eq(Nm)||e.eq(zI))return Kn;if(e.eq(Kn))return Nm;var i=this.shr(1);return n=i.div(e).shl(1),n.eq(Es)?e.isNegative()?Nm:zI:(o=this.sub(e.mul(n)),s=n.add(o.div(e)),s)}else if(e.eq(Kn))return this.unsigned?Dp:Es;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=Es}for(o=this;o.gte(e);){n=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),u=a<=48?1:sb(2,a-48),p=Ps(n),l=p.mul(e);l.isNegative()||l.gt(o);)n-=u,p=Ps(n,this.unsigned),l=p.mul(e);p.isZero()&&(p=Nm),s=s.add(p),o=o.sub(l)}return s};Ie.div=Ie.divide;Ie.modulo=function(e){if(Vn(e)||(e=Aa(e)),Ds){var t=(this.unsigned?Ds.rem_u:Ds.rem_s)(this.low,this.high,e.low,e.high);return Zt(t,Ds.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};Ie.mod=Ie.modulo;Ie.rem=Ie.modulo;Ie.not=function(){return Zt(~this.low,~this.high,this.unsigned)};Ie.and=function(e){return Vn(e)||(e=Aa(e)),Zt(this.low&e.low,this.high&e.high,this.unsigned)};Ie.or=function(e){return Vn(e)||(e=Aa(e)),Zt(this.low|e.low,this.high|e.high,this.unsigned)};Ie.xor=function(e){return Vn(e)||(e=Aa(e)),Zt(this.low^e.low,this.high^e.high,this.unsigned)};Ie.shiftLeft=function(e){return Vn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Zt(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Zt(0,this.low<<e-32,this.unsigned)};Ie.shl=Ie.shiftLeft;Ie.shiftRight=function(e){return Vn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Zt(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Zt(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};Ie.shr=Ie.shiftRight;Ie.shiftRightUnsigned=function(e){if(Vn(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var n=this.low;return Zt(n>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?Zt(t,0,this.unsigned):Zt(t>>>e-32,0,this.unsigned)};Ie.shru=Ie.shiftRightUnsigned;Ie.shr_u=Ie.shiftRightUnsigned;Ie.toSigned=function(){return this.unsigned?Zt(this.low,this.high,!1):this};Ie.toUnsigned=function(){return this.unsigned?this:Zt(this.low,this.high,!0)};Ie.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};Ie.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};Ie.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};Qt.fromBytes=function(e,t,n){return n?Qt.fromBytesLE(e,t):Qt.fromBytesBE(e,t)};Qt.fromBytesLE=function(e,t){return new Qt(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};Qt.fromBytesBE=function(e,t){return new Qt(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}});var m2=Ar(()=>{});var c2=Ar(()=>{});var j2=Ar((q2,ok)=>{(function(r,e,t){function n(a){var u=this,p=i();u.next=function(){var l=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=l-(u.c=l|0)},u.c=1,u.s0=p(" "),u.s1=p(" "),u.s2=p(" "),u.s0-=p(a),u.s0<0&&(u.s0+=1),u.s1-=p(a),u.s1<0&&(u.s1+=1),u.s2-=p(a),u.s2<0&&(u.s2+=1),p=null}function o(a,u){return u.c=a.c,u.s0=a.s0,u.s1=a.s1,u.s2=a.s2,u}function s(a,u){var p=new n(a),l=u&&u.state,m=p.next;return m.int32=function(){return p.next()*4294967296|0},m.double=function(){return m()+(m()*2097152|0)*11102230246251565e-32},m.quick=m,l&&(typeof l=="object"&&o(l,p),m.state=function(){return o(p,{})}),m}function i(){var a=4022871197,u=function(p){p=String(p);for(var l=0;l<p.length;l++){a+=p.charCodeAt(l);var m=.02519603282416938*a;a=m>>>0,m-=a,m*=a,a=m>>>0,m-=a,a+=m*4294967296}return(a>>>0)*23283064365386963e-26};return u}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(q2,typeof ok=="object"&&ok,typeof define=="function"&&define)});var Y2=Ar((X2,sk)=>{(function(r,e,t){function n(i){var a=this,u="";a.x=0,a.y=0,a.z=0,a.w=0,a.next=function(){var l=a.x^a.x<<11;return a.x=a.y,a.y=a.z,a.z=a.w,a.w^=a.w>>>19^l^l>>>8},i===(i|0)?a.x=i:u+=i;for(var p=0;p<u.length+64;p++)a.x^=u.charCodeAt(p)|0,a.next()}function o(i,a){return a.x=i.x,a.y=i.y,a.z=i.z,a.w=i.w,a}function s(i,a){var u=new n(i),p=a&&a.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=u.next,l.quick=l,p&&(typeof p=="object"&&o(p,u),l.state=function(){return o(u,{})}),l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(X2,typeof sk=="object"&&sk,typeof define=="function"&&define)});var Z2=Ar((Q2,ak)=>{(function(r,e,t){function n(i){var a=this,u="";a.next=function(){var l=a.x^a.x>>>2;return a.x=a.y,a.y=a.z,a.z=a.w,a.w=a.v,(a.d=a.d+362437|0)+(a.v=a.v^a.v<<4^(l^l<<1))|0},a.x=0,a.y=0,a.z=0,a.w=0,a.v=0,i===(i|0)?a.x=i:u+=i;for(var p=0;p<u.length+64;p++)a.x^=u.charCodeAt(p)|0,p==u.length&&(a.d=a.x<<10^a.x>>>4),a.next()}function o(i,a){return a.x=i.x,a.y=i.y,a.z=i.z,a.w=i.w,a.v=i.v,a.d=i.d,a}function s(i,a){var u=new n(i),p=a&&a.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=u.next,l.quick=l,p&&(typeof p=="object"&&o(p,u),l.state=function(){return o(u,{})}),l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(Q2,typeof ak=="object"&&ak,typeof define=="function"&&define)});var e1=Ar((J2,ik)=>{(function(r,e,t){function n(i){var a=this;a.next=function(){var p=a.x,l=a.i,m,c,d;return m=p[l],m^=m>>>7,c=m^m<<24,m=p[l+1&7],c^=m^m>>>10,m=p[l+3&7],c^=m^m>>>3,m=p[l+4&7],c^=m^m<<7,m=p[l+7&7],m=m^m<<13,c^=m^m<<9,p[l]=c,a.i=l+1&7,c};function u(p,l){var m,c,d=[];if(l===(l|0))c=d[0]=l;else for(l=""+l,m=0;m<l.length;++m)d[m&7]=d[m&7]<<15^l.charCodeAt(m)+d[m+1&7]<<13;for(;d.length<8;)d.push(0);for(m=0;m<8&&d[m]===0;++m);for(m==8?c=d[7]=-1:c=d[m],p.x=d,p.i=0,m=256;m>0;--m)p.next()}u(a,i)}function o(i,a){return a.x=i.x.slice(),a.i=i.i,a}function s(i,a){i==null&&(i=+new Date);var u=new n(i),p=a&&a.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=u.next,l.quick=l,p&&(p.x&&o(p,u),l.state=function(){return o(u,{})}),l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(J2,typeof ik=="object"&&ik,typeof define=="function"&&define)});var r1=Ar((t1,uk)=>{(function(r,e,t){function n(i){var a=this;a.next=function(){var p=a.w,l=a.X,m=a.i,c,d;return a.w=p=p+1640531527|0,d=l[m+34&127],c=l[m=m+1&127],d^=d<<13,c^=c<<17,d^=d>>>15,c^=c>>>12,d=l[m]=d^c,a.i=m,d+(p^p>>>16)|0};function u(p,l){var m,c,d,f,h,g=[],y=128;for(l===(l|0)?(c=l,l=null):(l=l+"\0",c=0,y=Math.max(y,l.length)),d=0,f=-32;f<y;++f)l&&(c^=l.charCodeAt((f+32)%l.length)),f===0&&(h=c),c^=c<<10,c^=c>>>15,c^=c<<4,c^=c>>>13,f>=0&&(h=h+1640531527|0,m=g[f&127]^=c+h,d=m==0?d+1:0);for(d>=128&&(g[(l&&l.length||0)&127]=-1),d=127,f=4*128;f>0;--f)c=g[d+34&127],m=g[d=d+1&127],c^=c<<13,m^=m<<17,c^=c>>>15,m^=m>>>12,g[d]=c^m;p.w=h,p.X=g,p.i=d}u(a,i)}function o(i,a){return a.i=i.i,a.w=i.w,a.X=i.X.slice(),a}function s(i,a){i==null&&(i=+new Date);var u=new n(i),p=a&&a.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=u.next,l.quick=l,p&&(p.X&&o(p,u),l.state=function(){return o(u,{})}),l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(t1,typeof uk=="object"&&uk,typeof define=="function"&&define)});var o1=Ar((n1,pk)=>{(function(r,e,t){function n(i){var a=this,u="";a.next=function(){var l=a.b,m=a.c,c=a.d,d=a.a;return l=l<<25^l>>>7^m,m=m-c|0,c=c<<24^c>>>8^d,d=d-l|0,a.b=l=l<<20^l>>>12^m,a.c=m=m-c|0,a.d=c<<16^m>>>16^d,a.a=d-l|0},a.a=0,a.b=0,a.c=-1640531527,a.d=1367130551,i===Math.floor(i)?(a.a=i/4294967296|0,a.b=i|0):u+=i;for(var p=0;p<u.length+20;p++)a.b^=u.charCodeAt(p)|0,a.next()}function o(i,a){return a.a=i.a,a.b=i.b,a.c=i.c,a.d=i.d,a}function s(i,a){var u=new n(i),p=a&&a.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=u.next,l.quick=l,p&&(typeof p=="object"&&o(p,u),l.state=function(){return o(u,{})}),l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(n1,typeof pk=="object"&&pk,typeof define=="function"&&define)});var s1=Ar(()=>{});var i1=Ar((a1,Nb)=>{(function(r,e,t){var n=256,o=6,s=52,i="random",a=t.pow(n,o),u=t.pow(2,s),p=u*2,l=n-1,m;function c(x,I,k){var N=[];I=I==!0?{entropy:!0}:I||{};var E=g(h(I.entropy?[x,T(e)]:x??y(),3),N),M=new d(N),R=function(){for(var B=M.g(o),U=a,W=0;B<u;)B=(B+W)*n,U*=n,W=M.g(1);for(;B>=p;)B/=2,U/=2,W>>>=1;return(B+W)/U};return R.int32=function(){return M.g(4)|0},R.quick=function(){return M.g(4)/4294967296},R.double=R,g(T(M.S),e),(I.pass||k||function(B,U,W,K){return K&&(K.S&&f(K,M),B.state=function(){return f(M,{})}),W?(t[i]=B,U):B})(R,E,"global"in I?I.global:this==t,I.state)}function d(x){var I,k=x.length,N=this,E=0,M=N.i=N.j=0,R=N.S=[];for(k||(x=[k++]);E<n;)R[E]=E++;for(E=0;E<n;E++)R[E]=R[M=l&M+x[E%k]+(I=R[E])],R[M]=I;(N.g=function(B){for(var U,W=0,K=N.i,H=N.j,V=N.S;B--;)U=V[K=l&K+1],W=W*n+V[l&(V[K]=V[H=l&H+U])+(V[H]=U)];return N.i=K,N.j=H,W})(n)}function f(x,I){return I.i=x.i,I.j=x.j,I.S=x.S.slice(),I}function h(x,I){var k=[],N=typeof x,E;if(I&&N=="object")for(E in x)try{k.push(h(x[E],I-1))}catch{}return k.length?k:N=="string"?x:x+"\0"}function g(x,I){for(var k=x+"",N,E=0;E<k.length;)I[l&E]=l&(N^=I[l&E]*19)+k.charCodeAt(E++);return T(I)}function y(){try{var x;return m&&(x=m.randomBytes)?x=x(n):(x=new Uint8Array(n),(r.crypto||r.msCrypto).getRandomValues(x)),T(x)}catch{var I=r.navigator,k=I&&I.plugins;return[+new Date,r,k,r.screen,T(e)]}}function T(x){return String.fromCharCode.apply(0,x)}if(g(t.random(),e),typeof Nb=="object"&&Nb.exports){Nb.exports=c;try{m=s1()}catch{}}else typeof define=="function"&&define.amd?define(function(){return c}):t["seed"+i]=c})(typeof self<"u"?self:a1,[],Math)});var Gd=Ar((nEe,u1)=>{var L8=j2(),_8=Y2(),B8=Z2(),$8=e1(),O8=r1(),z8=o1(),Xp=i1();Xp.alea=L8;Xp.xor128=_8;Xp.xorwow=B8;Xp.xorshift7=$8;Xp.xor4096=O8;Xp.tychei=z8;u1.exports=Xp});var mv=Ar(()=>{});var Bh=Ar(()=>{});var Xc=Ar(()=>{});var K4=Ar(()=>{});var V4=Ar(()=>{});var H4=Ar(()=>{});var q4=Ar((ex,$D)=>{var BD=function(){var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e){e=e||{};function t(){return se.buffer!=ot&&Or(se.buffer),zt}function n(){return se.buffer!=ot&&Or(se.buffer),_n}function o(){return se.buffer!=ot&&Or(se.buffer),$r}function s(){return se.buffer!=ot&&Or(se.buffer),ss}function i(){return se.buffer!=ot&&Or(se.buffer),Bn}var a=typeof e<"u"?e:{},u,p;a.ready=new Promise(function(A,F){u=A,p=F});var l;typeof process<"u"&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var m={},c;for(c in a)a.hasOwnProperty(c)&&(m[c]=a[c]);var d=[],f="./this.program",h=function(A,F){throw F},g=!1,y=!1,T=!1,x=!1;g=typeof window=="object",y=typeof importScripts=="function",T=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",x=!g&&!T&&!y;var I=a.ENVIRONMENT_IS_PTHREAD||!1;I&&(ot=a.buffer);var k="";function N(A){return a.locateFile?a.locateFile(A,k):k+A}var E,M,R,B,U,W;if(T){y?k=Xc().dirname(k)+"/":k=__dirname+"/",E=function(F,z){return U||(U=Bh()),W||(W=Xc()),F=W.normalize(F),U.readFileSync(F,z?null:"utf8")},R=function(F){var z=E(F,!0);return z.buffer||(z=new Uint8Array(z)),Te(z.buffer),z},process.argv.length>1&&(f=process.argv[1].replace(/\\/g,"/")),d=process.argv.slice(2),process.on("uncaughtException",function(A){if(!(A instanceof ud))throw A}),process.on("unhandledRejection",vi),h=function(A){process.exit(A)},a.inspect=function(){return"[Emscripten Module object]"};var K;try{K=K4()}catch(A){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),A}global.Worker=K.Worker}else x?(typeof read<"u"&&(E=function(F){return read(F)}),R=function(F){var z;return typeof readbuffer=="function"?new Uint8Array(readbuffer(F)):(z=read(F,"binary"),Te(typeof z=="object"),z)},typeof scriptArgs<"u"?d=scriptArgs:typeof arguments<"u"&&(d=arguments),typeof quit=="function"&&(h=function(A){quit(A)}),typeof print<"u"&&(typeof console>"u"&&(console={}),console.log=print,console.warn=console.error=typeof printErr<"u"?printErr:print)):(g||y)&&(y?k=self.location.href:typeof document<"u"&&document.currentScript&&(k=document.currentScript.src),typeof r<"u"&&r&&(k=r),k.indexOf("blob:")!==0?k=k.substr(0,k.lastIndexOf("/")+1):k="",T?(E=function(F,z){return U||(U=Bh()),W||(W=Xc()),F=W.normalize(F),U.readFileSync(F,z?null:"utf8")},R=function(F){var z=E(F,!0);return z.buffer||(z=new Uint8Array(z)),Te(z.buffer),z}):(E=function(A){var F=new XMLHttpRequest;return F.open("GET",A,!1),F.send(null),F.responseText},y&&(R=function(A){var F=new XMLHttpRequest;return F.open("GET",A,!1),F.responseType="arraybuffer",F.send(null),new Uint8Array(F.response)}),M=function(A,F,z){var q=new XMLHttpRequest;q.open("GET",A,!0),q.responseType="arraybuffer",q.onload=function(){if(q.status==200||q.status==0&&q.response){F(q.response);return}z()},q.onerror=z,q.send(null)}),B=function(A){document.title=A});T&&typeof performance>"u"&&(global.performance=V4().performance);var H=a.print||console.log.bind(console),V=a.printErr||console.warn.bind(console);for(c in m)m.hasOwnProperty(c)&&(a[c]=m[c]);m=null,a.arguments&&(d=a.arguments),a.thisProgram&&(f=a.thisProgram),a.quit&&(h=a.quit);function j(A){j.shown||(j.shown={}),j.shown[A]||(j.shown[A]=1,V(A))}var ee=Atomics.load,Z=Atomics.store,te=Atomics.compareExchange,oe;a.wasmBinary&&(oe=a.wasmBinary);var ie=a.noExitRuntime||!0;typeof WebAssembly!="object"&&vi("no native wasm support detected");var se,ue,ye=!1,fe;function Te(A,F){A||vi("Assertion failed: "+F)}function Ae(A){var F=a["_"+A];return Te(F,"Cannot call unknown function "+A+", make sure it is exported"),F}function Le(A,F,z,q,xe){var ge={string:function(nn){var Ql=0;if(nn!=null&&nn!==0){var r0=(nn.length<<2)+1;Ql=jl(r0),xt(nn,Ql,r0)}return Ql},array:function(nn){var Ql=jl(nn.length);return Ot(nn,Ql),Ql}};function be(nn){return F==="string"?Y(nn):F==="boolean"?Boolean(nn):nn}var Pe=Ae(A),Nt=[],Er=0;if(q)for(var vr=0;vr<q.length;vr++){var Mu=ge[z[vr]];Mu?(Er===0&&(Er=id()),Nt[vr]=Mu(q[vr])):Nt[vr]=q[vr]}var Yl=Pe.apply(null,Nt);return Yl=be(Yl),Er!==0&&ql(Er),Yl}function Be(A,F,z,q){z=z||[];var xe=z.every(function(be){return be==="number"}),ge=F!=="string";return ge&&xe&&!q?Ae(A):function(){return Le(A,F,z,arguments,q)}}function Ue(A,F,z){for(var q=F+z,xe="";!(F>=q);){var ge=A[F++];if(!ge)return xe;if(!(ge&128)){xe+=String.fromCharCode(ge);continue}var be=A[F++]&63;if((ge&224)==192){xe+=String.fromCharCode((ge&31)<<6|be);continue}var Pe=A[F++]&63;if((ge&240)==224?ge=(ge&15)<<12|be<<6|Pe:ge=(ge&7)<<18|be<<12|Pe<<6|A[F++]&63,ge<65536)xe+=String.fromCharCode(ge);else{var Nt=ge-65536;xe+=String.fromCharCode(55296|Nt>>10,56320|Nt&1023)}}return xe}function Y(A,F){return A?Ue(n(),A,F):""}function ft(A,F,z,q){if(!(q>0))return 0;for(var xe=z,ge=z+q-1,be=0;be<A.length;++be){var Pe=A.charCodeAt(be);if(Pe>=55296&&Pe<=57343){var Nt=A.charCodeAt(++be);Pe=65536+((Pe&1023)<<10)|Nt&1023}if(Pe<=127){if(z>=ge)break;F[z++]=Pe}else if(Pe<=2047){if(z+1>=ge)break;F[z++]=192|Pe>>6,F[z++]=128|Pe&63}else if(Pe<=65535){if(z+2>=ge)break;F[z++]=224|Pe>>12,F[z++]=128|Pe>>6&63,F[z++]=128|Pe&63}else{if(z+3>=ge)break;F[z++]=240|Pe>>18,F[z++]=128|Pe>>12&63,F[z++]=128|Pe>>6&63,F[z++]=128|Pe&63}}return F[z]=0,z-xe}function xt(A,F,z){return ft(A,n(),F,z)}function wt(A){for(var F=0,z=0;z<A.length;++z){var q=A.charCodeAt(z);q>=55296&&q<=57343&&(q=65536+((q&1023)<<10)|A.charCodeAt(++z)&1023),q<=127?++F:q<=2047?F+=2:q<=65535?F+=3:F+=4}return F}function Ot(A,F){t().set(A,F)}function ct(A,F){return A%F>0&&(A+=F-A%F),A}var ot,zt,_n,ir,os,$r,ss,Cn,Bn;function Or(A){ot=A,a.HEAP8=zt=new Int8Array(A),a.HEAP16=ir=new Int16Array(A),a.HEAP32=$r=new Int32Array(A),a.HEAPU8=_n=new Uint8Array(A),a.HEAPU16=os=new Uint16Array(A),a.HEAPU32=ss=new Uint32Array(A),a.HEAPF32=Cn=new Float32Array(A),a.HEAPF64=Bn=new Float64Array(A)}var ro=a.INITIAL_MEMORY||16777216;if(I)se=a.wasmMemory,ot=a.buffer;else if(a.wasmMemory)se=a.wasmMemory;else if(se=new WebAssembly.Memory({initial:ro/65536,maximum:32768,shared:!0}),!(se.buffer instanceof SharedArrayBuffer))throw V("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),T&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");se&&(ot=se.buffer),ro=ot.byteLength,Or(ot);var fr,as=[],is=[],Tp=[],Yc=[],$n=[],Gl=!1,Qc=!1;I||is.push({func:function(){Vg()}});function Ng(){if(!I){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)ox(a.preRun.shift());Ul(as)}}function Dg(){Gl=!0,!I&&Ul(is)}function Pg(){I||Ul(Tp)}function kn(){I||(Qc=!0)}function Eg(){if(!I){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)sx(a.postRun.shift());Ul($n)}}function ox(A){as.unshift(A)}function sx(A){$n.unshift(A)}var us=0,Zc=null,xp=null;function ax(A){Te(!I,"addRunDependency cannot be used in a pthread worker"),us++,a.monitorRunDependencies&&a.monitorRunDependencies(us)}function ix(A){if(us--,a.monitorRunDependencies&&a.monitorRunDependencies(us),us==0&&(Zc!==null&&(clearInterval(Zc),Zc=null),xp)){var F=xp;xp=null,F()}}a.preloadedImages={},a.preloadedAudios={};function vi(A){a.onAbort&&a.onAbort(A),I&&console.error("Pthread aborting at "+new Error().stack),A+="",V(A),ye=!0,fe=1,A="abort("+A+"). Build with -s ASSERTIONS=1 for more info.";var F=new WebAssembly.RuntimeError(A);throw p(F),F}function Ip(A,F){return String.prototype.startsWith?A.startsWith(F):A.indexOf(F)===0}var ux="data:application/octet-stream;base64,";function Mg(A){return Ip(A,ux)}var px="file://";function Fg(A){return Ip(A,px)}var Sn="tfjs-backend-wasm-threaded-simd.wasm";Mg(Sn)||(Sn=N(Sn));function lx(A){try{if(A==Sn&&oe)return new Uint8Array(oe);if(R)return R(A);throw"both async and sync fetching of the wasm failed"}catch(F){vi(F)}}function Rg(){if(!oe&&(g||y)){if(typeof fetch=="function"&&!Fg(Sn))return fetch(Sn,{credentials:"same-origin"}).then(function(A){if(!A.ok)throw"failed to load wasm binary file at '"+Sn+"'";return A.arrayBuffer()}).catch(function(){return lx(Sn)});if(M)return new Promise(function(A,F){M(Sn,function(z){A(new Uint8Array(z))},F)})}return Promise.resolve().then(function(){return lx(Sn)})}function mx(){var A={a:nI};function F(be,Pe){var Nt=be.exports;if(a.asm=Nt,fr=a.asm.nb,ue=Pe,!I){var Er=Me.unusedWorkers.length;Me.unusedWorkers.forEach(function(vr){Me.loadWasmModuleToWorker(vr,function(){--Er||ix("wasm-instantiate")})})}}I||ax("wasm-instantiate");function z(be){F(be.instance,be.module)}function q(be){return Rg().then(function(Pe){return WebAssembly.instantiate(Pe,A)}).then(be,function(Pe){V("failed to asynchronously prepare wasm: "+Pe),vi(Pe)})}function xe(){return!oe&&typeof WebAssembly.instantiateStreaming=="function"&&!Mg(Sn)&&!Fg(Sn)&&typeof fetch=="function"?fetch(Sn,{credentials:"same-origin"}).then(function(be){var Pe=WebAssembly.instantiateStreaming(be,A);return Pe.then(z,function(Nt){return V("wasm streaming compile failed: "+Nt),V("falling back to ArrayBuffer instantiation"),q(z)})}):q(z)}if(a.instantiateWasm)try{var ge=a.instantiateWasm(A,F);return ge}catch(be){return V("Module.instantiateWasm callback failed with error: "+be),!1}return xe().catch(p),{}}var Lg={10216:function(){throw"Canceled!"},10234:function(A,F){setTimeout(function(){YD(A,F)},0)}};function cx(){Me.initRuntime()}function Ul(A){for(;A.length>0;){var F=A.shift();if(typeof F=="function"){F(a);continue}var z=F.func;typeof z=="number"?F.arg===void 0?fr.get(z)():fr.get(z)(F.arg):z(F.arg===void 0?null:F.arg)}}var wu={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function Jc(A,F){if(A<=0||A>t().length||A&!0||F<0)return-28;if(F==0)return 0;F>=2147483647&&(F=1/0);var z=Atomics.load(o(),Xl>>2),q=0;if(z==A){var xe=Atomics.compareExchange(o(),Xl>>2,z,0);if(xe==z&&(--F,q=1,F<=0))return 1}var ge=Atomics.notify(o(),A>>2,F);if(ge>=0)return ge+q;throw"Atomics.notify returned an unexpected value "+ge}a._emscripten_futex_wake=Jc;function dx(A){if(I)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!A)throw"Internal Error! Null pthread_ptr in killThread!";o()[A+12>>2]=0;var F=Me.pthreads[A];F.worker.terminate(),Me.freeThreadData(F),Me.runningWorkers.splice(Me.runningWorkers.indexOf(F.worker),1),F.worker.pthread=void 0}function fx(A){if(I)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!A)throw"Internal Error! Null pthread_ptr in cancelThread!";var F=Me.pthreads[A];F.worker.postMessage({cmd:"cancel"})}function _g(A){if(I)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!A)throw"Internal Error! Null pthread_ptr in cleanupThread!";var F=Me.pthreads[A];if(F){o()[A+12>>2]=0;var z=F.worker;Me.returnWorkerToPool(z)}}var Me={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var A=8,F=0;F<A;++F)Me.allocateUnusedWorker()},initRuntime:function(){for(var A=kp(228),F=0;F<228/4;++F)s()[A/4+F]=0;o()[A+12>>2]=A;var z=A+152;o()[z>>2]=z;for(var q=kp(512),F=0;F<128;++F)s()[q/4+F]=0;Atomics.store(s(),A+100>>2,q),Atomics.store(s(),A+40>>2,A),wI(A,!y,1),jD(A)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Me.threadExitHandlers.length>0;)Me.threadExitHandlers.pop()();I&&Eu()&&qD()},runExitHandlersAndDeinitThread:function(A,F){Atomics.store(s(),A+56>>2,1),Atomics.store(s(),A+60>>2,0),Me.runExitHandlers(),Atomics.store(s(),A+4>>2,F),Atomics.store(s(),A+0>>2,1),Jc(A+0,2147483647),wI(0,0,0)},threadExit:function(A){var F=Eu();F&&(Me.runExitHandlersAndDeinitThread(F,A),I&&postMessage({cmd:"exit"}))},threadCancel:function(){Me.runExitHandlersAndDeinitThread(Eu(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var A in Me.pthreads){var F=Me.pthreads[A];F&&F.worker&&Me.returnWorkerToPool(F.worker)}Me.pthreads={};for(var z=0;z<Me.unusedWorkers.length;++z){var q=Me.unusedWorkers[z];q.terminate()}Me.unusedWorkers=[];for(var z=0;z<Me.runningWorkers.length;++z){var q=Me.runningWorkers[z],F=q.pthread;Me.freeThreadData(F),q.terminate()}Me.runningWorkers=[]},freeThreadData:function(A){if(!!A){if(A.threadInfoStruct){var F=o()[A.threadInfoStruct+100>>2];o()[A.threadInfoStruct+100>>2]=0,ad(F),ad(A.threadInfoStruct)}A.threadInfoStruct=0,A.allocatedOwnStack&&A.stackBase&&ad(A.stackBase),A.stackBase=0,A.worker&&(A.worker.pthread=null)}},returnWorkerToPool:function(A){Me.runWithoutMainThreadQueuedCalls(function(){delete Me.pthreads[A.pthread.threadInfoStruct],Me.unusedWorkers.push(A),Me.runningWorkers.splice(Me.runningWorkers.indexOf(A),1),Me.freeThreadData(A.pthread),A.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(A){o()[t0>>2]=0;try{A()}finally{o()[t0>>2]=1}},receiveObjectTransfer:function(A){},loadWasmModuleToWorker:function(A,F){A.onmessage=function(z){var q=z.data,xe=q.cmd;if(A.pthread&&(Me.currentProxiedOperationCallerThread=A.pthread.threadInfoStruct),q.targetThread&&q.targetThread!=Eu()){var ge=Me.pthreads[q.targetThread];ge?ge.worker.postMessage(z.data,q.transferList):console.error('Internal error! Worker sent a message "'+xe+'" to target pthread '+q.targetThread+", but that thread no longer exists!"),Me.currentProxiedOperationCallerThread=void 0;return}if(xe==="processQueuedMainThreadWork")Yg();else if(xe==="spawnThread")Wg(z.data);else if(xe==="cleanupThread")_g(q.thread);else if(xe==="killThread")dx(q.thread);else if(xe==="cancelThread")fx(q.thread);else if(xe==="loaded")A.loaded=!0,F&&F(A),A.runPthread&&(A.runPthread(),delete A.runPthread);else if(xe==="print")H("Thread "+q.threadId+": "+q.text);else if(xe==="printErr")V("Thread "+q.threadId+": "+q.text);else if(xe==="alert")alert("Thread "+q.threadId+": "+q.text);else if(xe==="exit"){var be=A.pthread&&Atomics.load(s(),A.pthread.threadInfoStruct+64>>2);be&&Me.returnWorkerToPool(A)}else if(xe==="exitProcess")try{qH(q.returnCode)}catch(Pe){if(Pe instanceof ud)return;throw Pe}else xe==="cancelDone"?Me.returnWorkerToPool(A):xe==="objectTransfer"?Me.receiveObjectTransfer(z.data):z.data.target==="setimmediate"?A.postMessage(z.data):V("worker sent an unknown command "+xe);Me.currentProxiedOperationCallerThread=void 0},A.onerror=function(z){V("pthread sent an error! "+z.filename+":"+z.lineno+": "+z.message)},T&&(A.on("message",function(z){A.onmessage({data:z})}),A.on("error",function(z){A.onerror(z)}),A.on("exit",function(z){})),A.postMessage({cmd:"load",urlOrBlob:a.mainScriptUrlOrBlob||r,wasmMemory:se,wasmModule:ue})},allocateUnusedWorker:function(){var A=N("tfjs-backend-wasm-threaded-simd.worker.js");Me.unusedWorkers.push(new Worker(A))},getNewWorker:function(){return Me.unusedWorkers.length==0&&(Me.allocateUnusedWorker(),Me.loadWasmModuleToWorker(Me.unusedWorkers[0])),Me.unusedWorkers.length>0?Me.unusedWorkers.pop():null},busySpinWait:function(A){for(var F=performance.now()+A;performance.now()<F;);}};function hx(A,F){JD(A,F),ql(A)}a.establishStackSpace=hx;function gx(){return ie}a.getNoExitRuntime=gx;function bx(A,F){return fr.get(A)(F)}a.invokeEntryPoint=bx;function yx(A,F,z,q){vi("Assertion failed: "+Y(A)+", at: "+[F?Y(F):"unknown filename",z,q?Y(q):"unknown function"])}function Tx(A,F){var z=_main(A,F)}var Cp;T?Cp=function(){var A=process.hrtime();return A[0]*1e3+A[1]/1e6}:I?Cp=function(){return performance.now()-a.__performance_now_clock_drift}:typeof dateNow<"u"?Cp=dateNow:Cp=function(){return performance.now()};function xx(A){return o()[VD()>>2]=A,A}function Ix(A,F){if(I)return Nu(1,1,A,F)}function Cx(A,F){if(A==F)postMessage({cmd:"processQueuedMainThreadWork"});else if(I)postMessage({targetThread:A,cmd:"processThreadQueue"});else{var z=Me.pthreads[A],q=z&&z.worker;if(!q)return;q.postMessage({cmd:"processThreadQueue"})}return 1}function kx(){vi()}function Sx(A,F,z){var q=Nx(F,z);return Lg[A].apply(null,q)}function vx(A,F){}function Bg(A,F,z){if(A<=0||A>t().length||A&!0)return-28;if(g){if(Atomics.load(o(),A>>2)!=F)return-6;for(var xe=performance.now(),ge=xe+z,be=Atomics.exchange(o(),Xl>>2,A);;){if(xe=performance.now(),xe>ge)return be=Atomics.exchange(o(),Xl>>2,0),-73;if(be=Atomics.exchange(o(),Xl>>2,0),be==0)break;if(Yg(),Atomics.load(o(),A>>2)!=F)return-6;be=Atomics.exchange(o(),Xl>>2,A)}return 0}else{var q=Atomics.wait(o(),A>>2,F,z);if(q==="timed-out")return-73;if(q==="not-equal")return-6;if(q==="ok")return 0;throw"Atomics.wait returned an unexpected value "+q}}function Ax(A,F,z){n().copyWithin(A,F,F+z)}function wx(){return T?H4().cpus().length:navigator.hardwareConcurrency}function Nu(A,F){for(var z=arguments.length-2,q=id(),xe=z,ge=jl(xe*8),be=ge>>3,Pe=0;Pe<z;Pe++){var Nt=arguments[2+Pe];i()[be+Pe]=Nt}var Er=ZD(A,xe,ge,F);return ql(q),Er}var ed=[],td=[];function Nx(A,F){td.length=0;var z;for(F>>=2;z=n()[A++];){var q=z<105;q&&F&1&&F++,td.push(q?i()[F++>>1]:o()[F]),++F}return td}function Dx(A,F,z){ed.length=F;for(var q=z>>3,xe=0;xe<F;xe++)ed[xe]=i()[q+xe];var ge=A<0,be=ge?Lg[-A-1]:rI[A];return be.apply(null,ed)}function Px(){return n().length}function Ex(A){try{return se.grow(A-ot.byteLength+65535>>>16),Or(se.buffer),1}catch{}}function Mx(A){var F=Px();if(A<=F)return!1;var z=2147483648;if(A>z)return!1;for(var q=1;q<=4;q*=2){var xe=F*(1+.2/q);xe=Math.min(xe,A+100663296);var ge=Math.min(z,ct(Math.max(A,xe),65536)),be=Ex(ge);if(be)return!0}return!1}var tt={inEventHandler:0,removeAllEventListeners:function(){for(var A=tt.eventHandlers.length-1;A>=0;--A)tt._removeHandler(A);tt.eventHandlers=[],tt.deferredCalls=[]},registerRemoveEventListeners:function(){tt.removeEventListenersRegistered||(Yc.push(tt.removeAllEventListeners),tt.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(A,F,z){function q(be,Pe){if(be.length!=Pe.length)return!1;for(var Nt in be)if(be[Nt]!=Pe[Nt])return!1;return!0}for(var xe in tt.deferredCalls){var ge=tt.deferredCalls[xe];if(ge.targetFunction==A&&q(ge.argsList,z))return}tt.deferredCalls.push({targetFunction:A,precedence:F,argsList:z}),tt.deferredCalls.sort(function(be,Pe){return be.precedence<Pe.precedence})},removeDeferredCalls:function(A){for(var F=0;F<tt.deferredCalls.length;++F)tt.deferredCalls[F].targetFunction==A&&(tt.deferredCalls.splice(F,1),--F)},canPerformEventHandlerRequests:function(){return tt.inEventHandler&&tt.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!tt.canPerformEventHandlerRequests())for(var A=0;A<tt.deferredCalls.length;++A){var F=tt.deferredCalls[A];tt.deferredCalls.splice(A,1),--A,F.targetFunction.apply(null,F.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(A,F){for(var z=0;z<tt.eventHandlers.length;++z)tt.eventHandlers[z].target==A&&(!F||F==tt.eventHandlers[z].eventTypeString)&&tt._removeHandler(z--)},_removeHandler:function(A){var F=tt.eventHandlers[A];F.target.removeEventListener(F.eventTypeString,F.eventListenerFunc,F.useCapture),tt.eventHandlers.splice(A,1)},registerOrRemoveHandler:function(A){var F=function(xe){++tt.inEventHandler,tt.currentEventHandler=A,tt.runDeferredCalls(),A.handlerFunc(xe),tt.runDeferredCalls(),--tt.inEventHandler};if(A.callbackfunc)A.eventListenerFunc=F,A.target.addEventListener(A.eventTypeString,F,A.useCapture),tt.eventHandlers.push(A),tt.registerRemoveEventListeners();else for(var z=0;z<tt.eventHandlers.length;++z)tt.eventHandlers[z].target==A.target&&tt.eventHandlers[z].eventTypeString==A.eventTypeString&&tt._removeHandler(z--)},queueEventHandlerOnThread_iiii:function(A,F,z,q,xe){var ge=id(),be=jl(12);o()[be>>2]=z,o()[be+4>>2]=q,o()[be+8>>2]=xe,AI(0,A,637534208,F,q,be),ql(ge)},getTargetThreadForEventCallback:function(A){switch(A){case 1:return 0;case 2:return Me.currentProxiedOperationCallerThread;default:return A}},getNodeNameForTarget:function(A){return A?A==window?"#window":A==screen?"#screen":A&&A.nodeName?A.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Fx(A){var F=wt(A)+1,z=kp(F);return xt(A,z,F),z}function Rx(A,F,z,q){var xe=id(),ge=jl(12),be=0;F&&(be=Fx(F)),o()[ge>>2]=be,o()[ge+4>>2]=z,o()[ge+8>>2]=q,AI(0,A,657457152,0,be,ge),ql(xe)}function Lx(A,F,z,q){F=F?Y(F):"",Rx(A,F,z,q)}function _x(A){return A>2?Y(A):A}var Bx=[0,typeof document<"u"?document:0,typeof window<"u"?window:0];function $x(A){A=_x(A);var F=Bx[A]||(typeof document<"u"?document.querySelector(A):void 0);return F}function rd(A){return $x(A)}function $g(A,F,z){var q=rd(A);if(!q)return-4;if(q.canvasSharedPtr&&(o()[q.canvasSharedPtr>>2]=F,o()[q.canvasSharedPtr+4>>2]=z),q.offscreenCanvas||!q.controlTransferredOffscreen){q.offscreenCanvas&&(q=q.offscreenCanvas);var xe=!1;if(q.GLctxObject&&q.GLctxObject.GLctx){var ge=q.GLctxObject.GLctx.getParameter(2978);xe=ge[0]===0&&ge[1]===0&&ge[2]===q.width&&ge[3]===q.height}q.width=F,q.height=z,xe&&q.GLctxObject.GLctx.viewport(0,0,F,z)}else if(q.canvasSharedPtr){var be=o()[q.canvasSharedPtr+8>>2];return Lx(be,A,F,z),1}else return-4;return 0}function Og(A,F,z){return I?Nu(2,1,A,F,z):$g(A,F,z)}function Ox(A,F,z){var q=rd(A);return q?$g(A,F,z):Og(A,F,z)}function zx(A){}function Gx(A,F){}function Ux(A){var F=A.getExtension("ANGLE_instanced_arrays");if(F)return A.vertexAttribDivisor=function(z,q){F.vertexAttribDivisorANGLE(z,q)},A.drawArraysInstanced=function(z,q,xe,ge){F.drawArraysInstancedANGLE(z,q,xe,ge)},A.drawElementsInstanced=function(z,q,xe,ge,be){F.drawElementsInstancedANGLE(z,q,xe,ge,be)},1}function Wx(A){var F=A.getExtension("OES_vertex_array_object");if(F)return A.createVertexArray=function(){return F.createVertexArrayOES()},A.deleteVertexArray=function(z){F.deleteVertexArrayOES(z)},A.bindVertexArray=function(z){F.bindVertexArrayOES(z)},A.isVertexArray=function(z){return F.isVertexArrayOES(z)},1}function Kx(A){var F=A.getExtension("WEBGL_draw_buffers");if(F)return A.drawBuffers=function(z,q){F.drawBuffersWEBGL(z,q)},1}function Vx(A){return!!(A.multiDrawWebgl=A.getExtension("WEBGL_multi_draw"))}var It={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(F){It.lastError||(It.lastError=F)},getNewId:function(A){for(var F=It.counter++,z=A.length;z<F;z++)A[z]=null;return F},getSource:function(A,F,z,q){for(var xe="",ge=0;ge<F;++ge){var be=q?o()[q+ge*4>>2]:-1;xe+=Y(o()[z+ge*4>>2],be<0?void 0:be)}return xe},createContext:function(A,F){var z=A.getContext("webgl",F);if(!z)return 0;var q=It.registerContext(z,F);return q},registerContext:function(A,F){var z=kp(8);o()[z+4>>2]=Eu();var q={handle:z,attributes:F,version:F.majorVersion,GLctx:A};return A.canvas&&(A.canvas.GLctxObject=q),It.contexts[z]=q,(typeof F.enableExtensionsByDefault>"u"||F.enableExtensionsByDefault)&&It.initExtensions(q),z},makeContextCurrent:function(A){return It.currentContext=It.contexts[A],a.ctx=Du=It.currentContext&&It.currentContext.GLctx,!(A&&!Du)},getContext:function(A){return It.contexts[A]},deleteContext:function(A){It.currentContext===It.contexts[A]&&(It.currentContext=null),typeof tt=="object"&&tt.removeAllHandlersOnTarget(It.contexts[A].GLctx.canvas),It.contexts[A]&&It.contexts[A].GLctx.canvas&&(It.contexts[A].GLctx.canvas.GLctxObject=void 0),ad(It.contexts[A].handle),It.contexts[A]=null},initExtensions:function(A){if(A||(A=It.currentContext),!A.initExtensionsDone){A.initExtensionsDone=!0;var F=A.GLctx;Ux(F),Wx(F),Kx(F),F.disjointTimerQueryExt=F.getExtension("EXT_disjoint_timer_query"),Vx(F);var z=F.getSupportedExtensions()||[];z.forEach(function(q){q.indexOf("lose_context")<0&&q.indexOf("debug")<0&&F.getExtension(q)})}},populateUniformTable:function(A){for(var F=It.programs[A],z=It.programInfos[A]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},q=z.uniforms,xe=Du.getProgramParameter(F,35718),ge=0;ge<xe;++ge){var be=Du.getActiveUniform(F,ge),Pe=be.name;z.maxUniformLength=Math.max(z.maxUniformLength,Pe.length+1),Pe.slice(-1)=="]"&&(Pe=Pe.slice(0,Pe.lastIndexOf("[")));var Nt=Du.getUniformLocation(F,Pe);if(Nt){var Er=It.getNewId(It.uniforms);q[Pe]=[be.size,Er],It.uniforms[Er]=Nt;for(var vr=1;vr<be.size;++vr){var Mu=Pe+"["+vr+"]";Nt=Du.getUniformLocation(F,Mu),Er=It.getNewId(It.uniforms),It.uniforms[Er]=Nt}}}}},Hx=["default","low-power","high-performance"];function qx(A,F){var z=F>>2,q=o()[z+6],xe={alpha:!!o()[z+0],depth:!!o()[z+1],stencil:!!o()[z+2],antialias:!!o()[z+3],premultipliedAlpha:!!o()[z+4],preserveDrawingBuffer:!!o()[z+5],powerPreference:Hx[q],failIfMajorPerformanceCaveat:!!o()[z+7],majorVersion:o()[z+8],minorVersion:o()[z+9],enableExtensionsByDefault:o()[z+10],explicitSwapControl:o()[z+11],proxyContextToMainThread:o()[z+12],renderViaOffscreenBackBuffer:o()[z+13]},ge=rd(A);if(!ge||xe.explicitSwapControl)return 0;var be=It.createContext(ge,xe);return be}function jx(A,F){return qx(A,F)}var Wl={mappings:{},buffers:[null,[],[]],printChar:function(A,F){var z=Wl.buffers[A];F===0||F===10?((A===1?H:V)(Ue(z,0)),z.length=0):z.push(F)},varargs:void 0,get:function(){Wl.varargs+=4;var A=o()[Wl.varargs-4>>2];return A},getStr:function(A){var F=Y(A);return F},get64:function(A,F){return A}};function zg(A){return I?Nu(3,1,A):0}function Gg(A,F,z,q,xe){if(I)return Nu(4,1,A,F,z,q,xe)}function Ug(A,F,z,q){if(I)return Nu(5,1,A,F,z,q);for(var xe=0,ge=0;ge<z;ge++){for(var be=o()[F+ge*8>>2],Pe=o()[F+(ge*8+4)>>2],Nt=0;Nt<Pe;Nt++)Wl.printChar(A,n()[be+Nt]);xe+=Pe}return o()[q>>2]=xe,0}function Xx(A){var F=Me.threadExitHandlers.pop();A&&F()}function Yx(A,F){Me.threadExitHandlers.push(function(){fr.get(A)(F)})}function Wg(A){if(I)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var F=Me.getNewWorker();if(F.pthread!==void 0)throw"Internal error!";if(!A.pthread_ptr)throw"Internal error, no pthread ptr!";Me.runningWorkers.push(F);for(var z=kp(128*4),q=0;q<128;++q)o()[z+q*4>>2]=0;var xe=A.stackBase+A.stackSize,ge=Me.pthreads[A.pthread_ptr]={worker:F,stackBase:A.stackBase,stackSize:A.stackSize,allocatedOwnStack:A.allocatedOwnStack,threadInfoStruct:A.pthread_ptr},be=ge.threadInfoStruct>>2;Atomics.store(s(),be+16,A.detached),Atomics.store(s(),be+25,z),Atomics.store(s(),be+10,ge.threadInfoStruct),Atomics.store(s(),be+20,A.stackSize),Atomics.store(s(),be+19,xe),Atomics.store(s(),be+26,A.stackSize),Atomics.store(s(),be+28,xe),Atomics.store(s(),be+29,A.detached);var Pe=HD(),Nt=Pe+40;Atomics.store(s(),be+43,Nt),F.pthread=ge;var Er={cmd:"run",start_routine:A.startRoutine,arg:A.arg,threadInfoStruct:A.pthread_ptr,stackBase:A.stackBase,stackSize:A.stackSize};F.runPthread=function(){Er.time=performance.now(),F.postMessage(Er,A.transferList)},F.loaded&&(F.runPthread(),delete F.runPthread)}function Qx(A,F,z,q){if(typeof SharedArrayBuffer>"u")return V("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!A)return V("pthread_create called with a null thread pointer!"),28;var xe=[],ge=0;if(I&&(xe.length===0||ge))return QD(687865856,A,F,z,q);if(ge)return ge;var be=0,Pe=0,Nt=0;F&&F!=-1?(be=o()[F>>2],be+=81920,Pe=o()[F+8>>2],Nt=o()[F+12>>2]!==0):be=2097152;var Er=Pe==0;Er?Pe=e0(16,be):(Pe-=be,Te(Pe>0));for(var vr=kp(228),Mu=0;Mu<57;++Mu)s()[(vr>>2)+Mu]=0;o()[A>>2]=vr,o()[vr+12>>2]=vr;var Yl=vr+152;o()[Yl>>2]=Yl;var nn={stackBase:Pe,stackSize:be,allocatedOwnStack:Er,detached:Nt,startRoutine:z,pthread_ptr:vr,arg:q,transferList:xe};return I?(nn.cmd="spawnThread",postMessage(nn,xe)):Wg(nn),0}function Zx(){if(!!I){var A=Eu();if(!!A){var F=Atomics.load(s(),A+56>>2);if(!F){var z=Atomics.load(s(),A+0>>2);if(z==2)throw"Canceled!"}}}}function Jx(){T||y||j("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function eI(A,F,z){if(!A)return V("pthread_join attempted on a null thread pointer!"),wu.ESRCH;if(I&&Eu()==A)return V("PThread "+A+" is attempting to join to itself!"),wu.EDEADLK;if(!I&&XD()==A)return V("Main thread "+A+" is attempting to join to itself!"),wu.EDEADLK;var q=o()[A+12>>2];if(q!==A)return V("pthread_join attempted on thread "+A+", which does not point to a valid thread, or does not exist anymore!"),wu.ESRCH;var xe=Atomics.load(s(),A+64>>2);if(xe)return V("Attempted to join thread "+A+", which was already detached!"),wu.EINVAL;for(z&&Jx();;){var ge=Atomics.load(s(),A+0>>2);if(ge==1){var be=Atomics.load(s(),A+4>>2);return F&&(o()[F>>2]=be),Atomics.store(s(),A+64>>2,1),I?postMessage({cmd:"cleanupThread",thread:A}):_g(A),0}if(!z)return wu.EBUSY;Zx(),I||Yg(),Bg(A+0,ge,I?100:1)}}function tI(A,F){return eI(A,F,!0)}function Kg(A){if(I)return Nu(6,1,A);switch(A){case 30:return 16384;case 85:var F=2147483648;return F/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return xx(28),-1}I||Me.initMainThreadBlock();var Du,rI=[null,Ix,Og,zg,Gg,Ug,Kg],nI={e:yx,r:Tx,x:Cx,b:kx,y:Sx,j:vx,d:Bg,c:Jc,f:Cp,p:Ax,A:wx,u:Dx,q:Mx,v:Ox,i:zx,s:Gx,w:jx,l:zg,n:Gg,g:Ug,o:cx,a:se||a.wasmMemory,z:Xx,k:Yx,h:Qx,m:tI,t:Kg},KD=mx(),Vg=a.___wasm_call_ctors=function(){return(Vg=a.___wasm_call_ctors=a.asm.B).apply(null,arguments)},oI=a._init=function(){return(oI=a._init=a.asm.C).apply(null,arguments)},sI=a._init_with_threads_count=function(){return(sI=a._init_with_threads_count=a.asm.D).apply(null,arguments)},aI=a._get_threads_count=function(){return(aI=a._get_threads_count=a.asm.E).apply(null,arguments)},iI=a._register_tensor=function(){return(iI=a._register_tensor=a.asm.F).apply(null,arguments)},uI=a._dispose_data=function(){return(uI=a._dispose_data=a.asm.G).apply(null,arguments)},pI=a._dispose=function(){return(pI=a._dispose=a.asm.H).apply(null,arguments)},lI=a._Abs=function(){return(lI=a._Abs=a.asm.I).apply(null,arguments)},mI=a._Add=function(){return(mI=a._Add=a.asm.J).apply(null,arguments)},cI=a._AddN=function(){return(cI=a._AddN=a.asm.K).apply(null,arguments)},dI=a._All=function(){return(dI=a._All=a.asm.L).apply(null,arguments)},fI=a._Any=function(){return(fI=a._Any=a.asm.M).apply(null,arguments)},hI=a._ArgMax=function(){return(hI=a._ArgMax=a.asm.N).apply(null,arguments)},gI=a._AvgPool=function(){return(gI=a._AvgPool=a.asm.O).apply(null,arguments)},bI=a._BatchMatMul=function(){return(bI=a._BatchMatMul=a.asm.P).apply(null,arguments)},yI=a._Ceil=function(){return(yI=a._Ceil=a.asm.Q).apply(null,arguments)},TI=a._ClipByValue=function(){return(TI=a._ClipByValue=a.asm.R).apply(null,arguments)},xI=a._Conv2D=function(){return(xI=a._Conv2D=a.asm.S).apply(null,arguments)},II=a._Conv2DBackpropInput=function(){return(II=a._Conv2DBackpropInput=a.asm.T).apply(null,arguments)},CI=a._Cos=function(){return(CI=a._Cos=a.asm.U).apply(null,arguments)},kI=a._Cosh=function(){return(kI=a._Cosh=a.asm.V).apply(null,arguments)},Hg=a._CropAndResize=function(){return(Hg=a._CropAndResize=a.asm.W).apply(null,arguments)},qg=a._Cumsum=function(){return(qg=a._Cumsum=a.asm.X).apply(null,arguments)},nd=a._DepthToSpace=function(){return(nd=a._DepthToSpace=a.asm.Y).apply(null,arguments)},Kl=a._DepthwiseConv2dNative=function(){return(Kl=a._DepthwiseConv2dNative=a.asm.Z).apply(null,arguments)},SI=a._Elu=function(){return(SI=a._Elu=a.asm._).apply(null,arguments)},od=a._Equal=function(){return(od=a._Equal=a.asm.$).apply(null,arguments)},Vl=a._Exp=function(){return(Vl=a._Exp=a.asm.aa).apply(null,arguments)},Hl=a._FlipLeftRight=function(){return(Hl=a._FlipLeftRight=a.asm.ba).apply(null,arguments)},vI=a._Floor=function(){return(vI=a._Floor=a.asm.ca).apply(null,arguments)},Q=a._FloorDiv=function(){return(Q=a._FloorDiv=a.asm.da).apply(null,arguments)},ae=a._FusedBatchNorm=function(){return(ae=a._FusedBatchNorm=a.asm.ea).apply(null,arguments)},Ne=a._FusedConv2D=function(){return(Ne=a._FusedConv2D=a.asm.fa).apply(null,arguments)},ht=a._FusedDepthwiseConv2D=function(){return(ht=a._FusedDepthwiseConv2D=a.asm.ga).apply(null,arguments)},ur=a._Gather=function(){return(ur=a._Gather=a.asm.ha).apply(null,arguments)},er=a._GatherNd=function(){return(er=a._GatherNd=a.asm.ia).apply(null,arguments)},at=a._Greater=function(){return(at=a._Greater=a.asm.ja).apply(null,arguments)},ut=a._GreaterEqual=function(){return(ut=a._GreaterEqual=a.asm.ka).apply(null,arguments)},zr=a._LeakyRelu=function(){return(zr=a._LeakyRelu=a.asm.la).apply(null,arguments)},Ai=a._Less=function(){return(Ai=a._Less=a.asm.ma).apply(null,arguments)},wi=a._LessEqual=function(){return(wi=a._LessEqual=a.asm.na).apply(null,arguments)},jg=a._Log=function(){return(jg=a._Log=a.asm.oa).apply(null,arguments)},sd=a._LogicalAnd=function(){return(sd=a._LogicalAnd=a.asm.pa).apply(null,arguments)},On=a._Max=function(){return(On=a._Max=a.asm.qa).apply(null,arguments)},Pu=a._MaxPool=function(){return(Pu=a._MaxPool=a.asm.ra).apply(null,arguments)},Xg=a._Maximum=function(){return(Xg=a._Maximum=a.asm.sa).apply(null,arguments)},eH=a._Mean=function(){return(eH=a._Mean=a.asm.ta).apply(null,arguments)},tH=a._Min=function(){return(tH=a._Min=a.asm.ua).apply(null,arguments)},rH=a._Minimum=function(){return(rH=a._Minimum=a.asm.va).apply(null,arguments)},nH=a._MirrorPad=function(){return(nH=a._MirrorPad=a.asm.wa).apply(null,arguments)},oH=a._Multiply=function(){return(oH=a._Multiply=a.asm.xa).apply(null,arguments)},sH=a._Neg=function(){return(sH=a._Neg=a.asm.ya).apply(null,arguments)},aH=a._NonMaxSuppressionV3=function(){return(aH=a._NonMaxSuppressionV3=a.asm.za).apply(null,arguments)},iH=a._NonMaxSuppressionV4=function(){return(iH=a._NonMaxSuppressionV4=a.asm.Aa).apply(null,arguments)},uH=a._NonMaxSuppressionV5=function(){return(uH=a._NonMaxSuppressionV5=a.asm.Ba).apply(null,arguments)},pH=a._NotEqual=function(){return(pH=a._NotEqual=a.asm.Ca).apply(null,arguments)},lH=a._OneHot=function(){return(lH=a._OneHot=a.asm.Da).apply(null,arguments)},mH=a._PadV2=function(){return(mH=a._PadV2=a.asm.Ea).apply(null,arguments)},cH=a._Pow=function(){return(cH=a._Pow=a.asm.Fa).apply(null,arguments)},dH=a._Prelu=function(){return(dH=a._Prelu=a.asm.Ga).apply(null,arguments)},fH=a._Prod=function(){return(fH=a._Prod=a.asm.Ha).apply(null,arguments)},hH=a._RealDiv=function(){return(hH=a._RealDiv=a.asm.Ia).apply(null,arguments)},gH=a._Relu=function(){return(gH=a._Relu=a.asm.Ja).apply(null,arguments)},bH=a._Relu6=function(){return(bH=a._Relu6=a.asm.Ka).apply(null,arguments)},yH=a._ResizeBilinear=function(){return(yH=a._ResizeBilinear=a.asm.La).apply(null,arguments)},TH=a._Reverse=function(){return(TH=a._Reverse=a.asm.Ma).apply(null,arguments)},xH=a._RotateWithOffset=function(){return(xH=a._RotateWithOffset=a.asm.Na).apply(null,arguments)},IH=a._Round=function(){return(IH=a._Round=a.asm.Oa).apply(null,arguments)},CH=a._Rsqrt=function(){return(CH=a._Rsqrt=a.asm.Pa).apply(null,arguments)},kH=a._ScatterNd=function(){return(kH=a._ScatterNd=a.asm.Qa).apply(null,arguments)},SH=a._SelectV2=function(){return(SH=a._SelectV2=a.asm.Ra).apply(null,arguments)},vH=a._Sigmoid=function(){return(vH=a._Sigmoid=a.asm.Sa).apply(null,arguments)},AH=a._Sin=function(){return(AH=a._Sin=a.asm.Ta).apply(null,arguments)},wH=a._Softmax=function(){return(wH=a._Softmax=a.asm.Ua).apply(null,arguments)},NH=a._SparseFillEmptyRows=function(){return(NH=a._SparseFillEmptyRows=a.asm.Va).apply(null,arguments)},DH=a._SparseReshape=function(){return(DH=a._SparseReshape=a.asm.Wa).apply(null,arguments)},PH=a._SparseSegmentReduction=function(){return(PH=a._SparseSegmentReduction=a.asm.Xa).apply(null,arguments)},EH=a._Sqrt=function(){return(EH=a._Sqrt=a.asm.Ya).apply(null,arguments)},MH=a._Square=function(){return(MH=a._Square=a.asm.Za).apply(null,arguments)},FH=a._SquaredDifference=function(){return(FH=a._SquaredDifference=a.asm._a).apply(null,arguments)},RH=a._Step=function(){return(RH=a._Step=a.asm.$a).apply(null,arguments)},LH=a._StridedSlice=function(){return(LH=a._StridedSlice=a.asm.ab).apply(null,arguments)},_H=a._Sub=function(){return(_H=a._Sub=a.asm.bb).apply(null,arguments)},BH=a._Sum=function(){return(BH=a._Sum=a.asm.cb).apply(null,arguments)},$H=a._Tan=function(){return($H=a._Tan=a.asm.db).apply(null,arguments)},OH=a._Tanh=function(){return(OH=a._Tanh=a.asm.eb).apply(null,arguments)},zH=a._Tile=function(){return(zH=a._Tile=a.asm.fb).apply(null,arguments)},GH=a._TopK=function(){return(GH=a._TopK=a.asm.gb).apply(null,arguments)},UH=a._Transform=function(){return(UH=a._Transform=a.asm.hb).apply(null,arguments)},WH=a._Transpose=function(){return(WH=a._Transpose=a.asm.ib).apply(null,arguments)},KH=a.__FusedMatMul=function(){return(KH=a.__FusedMatMul=a.asm.jb).apply(null,arguments)},kp=a._malloc=function(){return(kp=a._malloc=a.asm.kb).apply(null,arguments)},ad=a._free=function(){return(ad=a._free=a.asm.lb).apply(null,arguments)},VD=a.___errno_location=function(){return(VD=a.___errno_location=a.asm.mb).apply(null,arguments)},HD=a._emscripten_get_global_libc=function(){return(HD=a._emscripten_get_global_libc=a.asm.ob).apply(null,arguments)},Eu=a._pthread_self=function(){return(Eu=a._pthread_self=a.asm.pb).apply(null,arguments)},qD=a.___pthread_tsd_run_dtors=function(){return(qD=a.___pthread_tsd_run_dtors=a.asm.qb).apply(null,arguments)},Yg=a._emscripten_main_thread_process_queued_calls=function(){return(Yg=a._emscripten_main_thread_process_queued_calls=a.asm.rb).apply(null,arguments)},VH=a._emscripten_current_thread_process_queued_calls=function(){return(VH=a._emscripten_current_thread_process_queued_calls=a.asm.sb).apply(null,arguments)},jD=a._emscripten_register_main_browser_thread_id=function(){return(jD=a._emscripten_register_main_browser_thread_id=a.asm.tb).apply(null,arguments)},XD=a._emscripten_main_browser_thread_id=function(){return(XD=a._emscripten_main_browser_thread_id=a.asm.ub).apply(null,arguments)},YD=a.__emscripten_do_dispatch_to_thread=function(){return(YD=a.__emscripten_do_dispatch_to_thread=a.asm.vb).apply(null,arguments)},QD=a._emscripten_sync_run_in_main_thread_4=function(){return(QD=a._emscripten_sync_run_in_main_thread_4=a.asm.wb).apply(null,arguments)},ZD=a._emscripten_run_in_main_runtime_thread_js=function(){return(ZD=a._emscripten_run_in_main_runtime_thread_js=a.asm.xb).apply(null,arguments)},AI=a.__emscripten_call_on_thread=function(){return(AI=a.__emscripten_call_on_thread=a.asm.yb).apply(null,arguments)},HH=a._emscripten_tls_init=function(){return(HH=a._emscripten_tls_init=a.asm.zb).apply(null,arguments)},wI=a.__emscripten_thread_init=function(){return(wI=a.__emscripten_thread_init=a.asm.Ab).apply(null,arguments)},id=a.stackSave=function(){return(id=a.stackSave=a.asm.Bb).apply(null,arguments)},ql=a.stackRestore=function(){return(ql=a.stackRestore=a.asm.Cb).apply(null,arguments)},jl=a.stackAlloc=function(){return(jl=a.stackAlloc=a.asm.Db).apply(null,arguments)},JD=a._emscripten_stack_set_limits=function(){return(JD=a._emscripten_stack_set_limits=a.asm.Eb).apply(null,arguments)},e0=a._memalign=function(){return(e0=a._memalign=a.asm.Fb).apply(null,arguments)},t0=a.__emscripten_allow_main_runtime_queued_calls=10208,Xl=a.__emscripten_main_thread_futex=10412;a.cwrap=Be,a.PThread=Me,a.PThread=Me,a.wasmMemory=se,a.ExitStatus=ud;var Qg;function ud(A){this.name="ExitStatus",this.message="Program terminated with exit("+A+")",this.status=A}xp=function A(){Qg||NI(),Qg||(xp=A)};function NI(A){if(A=A||d,us>0)return;if(I){u(a),Dg(),postMessage({cmd:"loaded"});return}if(Ng(),us>0)return;function F(){Qg||(Qg=!0,a.calledRun=!0,!ye&&(Dg(),Pg(),u(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),Eg()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),F()},1)):F()}a.run=NI;function qH(A,F){if(!(F&&ie&&A===0)){if(!F&&I)throw postMessage({cmd:"exitProcess",returnCode:A}),new ud(A);ie||(Me.terminateAllThreads(),fe=A,kn(),a.onExit&&a.onExit(A),ye=!0),h(A,new ud(A))}}if(a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();I&&(ie=!1,Me.initWorker()),NI();var Zg;l&&(Zg={uncaughtException:process.listeners("uncaughtException").filter(function(A){return!l.uncaughtException.indexOf(A)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(A){return!l.unhandledRejection.indexOf(A)>-1})});var Jg;if(typeof WasmBackendModule<"u")Jg=WasmBackendModule;else if(typeof e<"u")Jg=e;else throw new Error("Could not find wasm module in post.js");if(Zg){var jH=Jg._dispose;Jg._dispose=function(){jH(),Zg.uncaughtException.forEach(function(A){process.removeListener("uncaughtException",A)}),Zg.unhandledRejection.forEach(function(A){process.removeListener("unhandledRejection",A)})}}return e.ready}}();typeof ex=="object"&&typeof $D=="object"?$D.exports=BD:typeof define=="function"&&define.amd?define([],function(){return BD}):typeof ex=="object"&&(ex.WasmBackendModuleThreadedSimd=BD)});var X4=Ar((tx,zD)=>{var OD=function(){var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e){e=e||{};var t=typeof e<"u"?e:{},n,o;t.ready=new Promise(function(Q,ae){n=Q,o=ae});var s;typeof process<"u"&&process.listeners&&(s={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var i={},a;for(a in t)t.hasOwnProperty(a)&&(i[a]=t[a]);var u=[],p="./this.program",l=function(Q,ae){throw ae},m=!1,c=!1,d=!1,f=!1;m=typeof window=="object",c=typeof importScripts=="function",d=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",f=!m&&!d&&!c;var h="";function g(Q){return t.locateFile?t.locateFile(Q,h):h+Q}var y,T,x,I,k,N;d?(c?h=Xc().dirname(h)+"/":h=__dirname+"/",y=function(ae,Ne){return k||(k=Bh()),N||(N=Xc()),ae=N.normalize(ae),k.readFileSync(ae,Ne?null:"utf8")},x=function(ae){var Ne=y(ae,!0);return Ne.buffer||(Ne=new Uint8Array(Ne)),H(Ne.buffer),Ne},process.argv.length>1&&(p=process.argv[1].replace(/\\/g,"/")),u=process.argv.slice(2),process.on("uncaughtException",function(Q){if(!(Q instanceof SI))throw Q}),process.on("unhandledRejection",$n),l=function(Q){process.exit(Q)},t.inspect=function(){return"[Emscripten Module object]"}):f?(typeof read<"u"&&(y=function(ae){return read(ae)}),x=function(ae){var Ne;return typeof readbuffer=="function"?new Uint8Array(readbuffer(ae)):(Ne=read(ae,"binary"),H(typeof Ne=="object"),Ne)},typeof scriptArgs<"u"?u=scriptArgs:typeof arguments<"u"&&(u=arguments),typeof quit=="function"&&(l=function(Q){quit(Q)}),typeof print<"u"&&(typeof console>"u"&&(console={}),console.log=print,console.warn=console.error=typeof printErr<"u"?printErr:print)):(m||c)&&(c?h=self.location.href:typeof document<"u"&&document.currentScript&&(h=document.currentScript.src),r&&(h=r),h.indexOf("blob:")!==0?h=h.substr(0,h.lastIndexOf("/")+1):h="",y=function(Q){var ae=new XMLHttpRequest;return ae.open("GET",Q,!1),ae.send(null),ae.responseText},c&&(x=function(Q){var ae=new XMLHttpRequest;return ae.open("GET",Q,!1),ae.responseType="arraybuffer",ae.send(null),new Uint8Array(ae.response)}),T=function(Q,ae,Ne){var ht=new XMLHttpRequest;ht.open("GET",Q,!0),ht.responseType="arraybuffer",ht.onload=function(){if(ht.status==200||ht.status==0&&ht.response){ae(ht.response);return}Ne()},ht.onerror=Ne,ht.send(null)},I=function(Q){document.title=Q});var E=t.print||console.log.bind(console),M=t.printErr||console.warn.bind(console);for(a in i)i.hasOwnProperty(a)&&(t[a]=i[a]);i=null,t.arguments&&(u=t.arguments),t.thisProgram&&(p=t.thisProgram),t.quit&&(l=t.quit);var R;t.wasmBinary&&(R=t.wasmBinary);var B=t.noExitRuntime||!0;typeof WebAssembly!="object"&&$n("no native wasm support detected");var U,W=!1,K;function H(Q,ae){Q||$n("Assertion failed: "+ae)}function V(Q){var ae=t["_"+Q];return H(ae,"Cannot call unknown function "+Q+", make sure it is exported"),ae}function j(Q,ae,Ne,ht,ur){var er={string:function(On){var Pu=0;if(On!=null&&On!==0){var Xg=(On.length<<2)+1;Pu=nd(Xg),se(On,Pu,Xg)}return Pu},array:function(On){var Pu=nd(On.length);return ue(On,Pu),Pu}};function at(On){return ae==="string"?oe(On):ae==="boolean"?Boolean(On):On}var ut=V(Q),zr=[],Ai=0;if(ht)for(var wi=0;wi<ht.length;wi++){var jg=er[Ne[wi]];jg?(Ai===0&&(Ai=Hg()),zr[wi]=jg(ht[wi])):zr[wi]=ht[wi]}var sd=ut.apply(null,zr);return sd=at(sd),Ai!==0&&qg(Ai),sd}function ee(Q,ae,Ne,ht){Ne=Ne||[];var ur=Ne.every(function(at){return at==="number"}),er=ae!=="string";return er&&ur&&!ht?V(Q):function(){return j(Q,ae,Ne,arguments,ht)}}var Z=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function te(Q,ae,Ne){for(var ht=ae+Ne,ur=ae;Q[ur]&&!(ur>=ht);)++ur;if(ur-ae>16&&Q.subarray&&Z)return Z.decode(Q.subarray(ae,ur));for(var er="";ae<ur;){var at=Q[ae++];if(!(at&128)){er+=String.fromCharCode(at);continue}var ut=Q[ae++]&63;if((at&224)==192){er+=String.fromCharCode((at&31)<<6|ut);continue}var zr=Q[ae++]&63;if((at&240)==224?at=(at&15)<<12|ut<<6|zr:at=(at&7)<<18|ut<<12|zr<<6|Q[ae++]&63,at<65536)er+=String.fromCharCode(at);else{var Ai=at-65536;er+=String.fromCharCode(55296|Ai>>10,56320|Ai&1023)}}return er}function oe(Q,ae){return Q?te(Ae,Q,ae):""}function ie(Q,ae,Ne,ht){if(!(ht>0))return 0;for(var ur=Ne,er=Ne+ht-1,at=0;at<Q.length;++at){var ut=Q.charCodeAt(at);if(ut>=55296&&ut<=57343){var zr=Q.charCodeAt(++at);ut=65536+((ut&1023)<<10)|zr&1023}if(ut<=127){if(Ne>=er)break;ae[Ne++]=ut}else if(ut<=2047){if(Ne+1>=er)break;ae[Ne++]=192|ut>>6,ae[Ne++]=128|ut&63}else if(ut<=65535){if(Ne+2>=er)break;ae[Ne++]=224|ut>>12,ae[Ne++]=128|ut>>6&63,ae[Ne++]=128|ut&63}else{if(Ne+3>=er)break;ae[Ne++]=240|ut>>18,ae[Ne++]=128|ut>>12&63,ae[Ne++]=128|ut>>6&63,ae[Ne++]=128|ut&63}}return ae[Ne]=0,Ne-ur}function se(Q,ae,Ne){return ie(Q,Ae,ae,Ne)}function ue(Q,ae){Te.set(Q,ae)}function ye(Q,ae){return Q%ae>0&&(Q+=ae-Q%ae),Q}var fe,Te,Ae,Le,Be,Ue,Y,ft,xt;function wt(Q){fe=Q,t.HEAP8=Te=new Int8Array(Q),t.HEAP16=Le=new Int16Array(Q),t.HEAP32=Ue=new Int32Array(Q),t.HEAPU8=Ae=new Uint8Array(Q),t.HEAPU16=Be=new Uint16Array(Q),t.HEAPU32=Y=new Uint32Array(Q),t.HEAPF32=ft=new Float32Array(Q),t.HEAPF64=xt=new Float64Array(Q)}var Ot=t.INITIAL_MEMORY||16777216,ct,ot=[],zt=[],_n=[],ir=[],os=!1;zt.push({func:function(){Rg()}});function $r(){if(t.preRun)for(typeof t.preRun=="function"&&(t.preRun=[t.preRun]);t.preRun.length;)Or(t.preRun.shift());us(ot)}function ss(){os=!0,us(zt)}function Cn(){us(_n)}function Bn(){if(t.postRun)for(typeof t.postRun=="function"&&(t.postRun=[t.postRun]);t.postRun.length;)ro(t.postRun.shift());us(ir)}function Or(Q){ot.unshift(Q)}function ro(Q){ir.unshift(Q)}var fr=0,as=null,is=null;function Tp(Q){fr++,t.monitorRunDependencies&&t.monitorRunDependencies(fr)}function Yc(Q){if(fr--,t.monitorRunDependencies&&t.monitorRunDependencies(fr),fr==0&&(as!==null&&(clearInterval(as),as=null),is)){var ae=is;is=null,ae()}}t.preloadedImages={},t.preloadedAudios={};function $n(Q){t.onAbort&&t.onAbort(Q),Q+="",M(Q),W=!0,K=1,Q="abort("+Q+"). Build with -s ASSERTIONS=1 for more info.";var ae=new WebAssembly.RuntimeError(Q);throw o(ae),ae}function Gl(Q,ae){return String.prototype.startsWith?Q.startsWith(ae):Q.indexOf(ae)===0}var Qc="data:application/octet-stream;base64,";function Ng(Q){return Gl(Q,Qc)}var Dg="file://";function Pg(Q){return Gl(Q,Dg)}var kn="tfjs-backend-wasm.wasm";Ng(kn)||(kn=g(kn));function Eg(Q){try{if(Q==kn&&R)return new Uint8Array(R);if(x)return x(Q);throw"both async and sync fetching of the wasm failed"}catch(ae){$n(ae)}}function ox(){if(!R&&(m||c)){if(typeof fetch=="function"&&!Pg(kn))return fetch(kn,{credentials:"same-origin"}).then(function(Q){if(!Q.ok)throw"failed to load wasm binary file at '"+kn+"'";return Q.arrayBuffer()}).catch(function(){return Eg(kn)});if(T)return new Promise(function(Q,ae){T(kn,function(Ne){Q(new Uint8Array(Ne))},ae)})}return Promise.resolve().then(function(){return Eg(kn)})}function sx(){var Q={a:Sn};function ae(at,ut){var zr=at.exports;t.asm=zr,U=t.asm.h,wt(U.buffer),ct=t.asm.Va,Yc("wasm-instantiate")}Tp("wasm-instantiate");function Ne(at){ae(at.instance)}function ht(at){return ox().then(function(ut){return WebAssembly.instantiate(ut,Q)}).then(at,function(ut){M("failed to asynchronously prepare wasm: "+ut),$n(ut)})}function ur(){return!R&&typeof WebAssembly.instantiateStreaming=="function"&&!Ng(kn)&&!Pg(kn)&&typeof fetch=="function"?fetch(kn,{credentials:"same-origin"}).then(function(at){var ut=WebAssembly.instantiateStreaming(at,Q);return ut.then(Ne,function(zr){return M("wasm streaming compile failed: "+zr),M("falling back to ArrayBuffer instantiation"),ht(Ne)})}):ht(Ne)}if(t.instantiateWasm)try{var er=t.instantiateWasm(Q,ae);return er}catch(at){return M("Module.instantiateWasm callback failed with error: "+at),!1}return ur().catch(o),{}}function us(Q){for(;Q.length>0;){var ae=Q.shift();if(typeof ae=="function"){ae(t);continue}var Ne=ae.func;typeof Ne=="number"?ae.arg===void 0?ct.get(Ne)():ct.get(Ne)(ae.arg):Ne(ae.arg===void 0?null:ae.arg)}}function Zc(){$n()}function xp(Q,ae,Ne){Ae.copyWithin(Q,ae,ae+Ne)}function ax(){return Ae.length}function ix(Q){try{return U.grow(Q-fe.byteLength+65535>>>16),wt(U.buffer),1}catch{}}function vi(Q){var ae=ax(),Ne=2147483648;if(Q>Ne)return!1;for(var ht=1;ht<=4;ht*=2){var ur=ae*(1+.2/ht);ur=Math.min(ur,Q+100663296);var er=Math.min(Ne,ye(Math.max(Q,ur),65536)),at=ix(er);if(at)return!0}return!1}var Ip={mappings:{},buffers:[null,[],[]],printChar:function(Q,ae){var Ne=Ip.buffers[Q];ae===0||ae===10?((Q===1?E:M)(te(Ne,0)),Ne.length=0):Ne.push(ae)},varargs:void 0,get:function(){Ip.varargs+=4;var Q=Ue[Ip.varargs-4>>2];return Q},getStr:function(Q){var ae=oe(Q);return ae},get64:function(Q,ae){return Q}};function ux(Q){return 0}function Mg(Q,ae,Ne,ht,ur){}function px(Q,ae,Ne,ht){for(var ur=0,er=0;er<Ne;er++){for(var at=Ue[ae+er*8>>2],ut=Ue[ae+(er*8+4)>>2],zr=0;zr<ut;zr++)Ip.printChar(Q,Ae[at+zr]);ur+=ut}return Ue[ht>>2]=ur,0}function Fg(){return 28}var Sn={a:Zc,d:xp,e:vi,f:ux,c:Mg,b:px,g:Fg},lx=sx(),Rg=t.___wasm_call_ctors=function(){return(Rg=t.___wasm_call_ctors=t.asm.i).apply(null,arguments)},mx=t._init=function(){return(mx=t._init=t.asm.j).apply(null,arguments)},Lg=t._init_with_threads_count=function(){return(Lg=t._init_with_threads_count=t.asm.k).apply(null,arguments)},cx=t._get_threads_count=function(){return(cx=t._get_threads_count=t.asm.l).apply(null,arguments)},Ul=t._register_tensor=function(){return(Ul=t._register_tensor=t.asm.m).apply(null,arguments)},wu=t._dispose_data=function(){return(wu=t._dispose_data=t.asm.n).apply(null,arguments)},Jc=t._dispose=function(){return(Jc=t._dispose=t.asm.o).apply(null,arguments)},dx=t._Abs=function(){return(dx=t._Abs=t.asm.p).apply(null,arguments)},fx=t._Add=function(){return(fx=t._Add=t.asm.q).apply(null,arguments)},_g=t._AddN=function(){return(_g=t._AddN=t.asm.r).apply(null,arguments)},Me=t._All=function(){return(Me=t._All=t.asm.s).apply(null,arguments)},hx=t._Any=function(){return(hx=t._Any=t.asm.t).apply(null,arguments)},gx=t._ArgMax=function(){return(gx=t._ArgMax=t.asm.u).apply(null,arguments)},bx=t._AvgPool=function(){return(bx=t._AvgPool=t.asm.v).apply(null,arguments)},yx=t._BatchMatMul=function(){return(yx=t._BatchMatMul=t.asm.w).apply(null,arguments)},Tx=t._Ceil=function(){return(Tx=t._Ceil=t.asm.x).apply(null,arguments)},Cp=t._ClipByValue=function(){return(Cp=t._ClipByValue=t.asm.y).apply(null,arguments)},xx=t._Conv2D=function(){return(xx=t._Conv2D=t.asm.z).apply(null,arguments)},Ix=t._Conv2DBackpropInput=function(){return(Ix=t._Conv2DBackpropInput=t.asm.A).apply(null,arguments)},Cx=t._Cos=function(){return(Cx=t._Cos=t.asm.B).apply(null,arguments)},kx=t._Cosh=function(){return(kx=t._Cosh=t.asm.C).apply(null,arguments)},Sx=t._CropAndResize=function(){return(Sx=t._CropAndResize=t.asm.D).apply(null,arguments)},vx=t._Cumsum=function(){return(vx=t._Cumsum=t.asm.E).apply(null,arguments)},Bg=t._DepthToSpace=function(){return(Bg=t._DepthToSpace=t.asm.F).apply(null,arguments)},Ax=t._DepthwiseConv2dNative=function(){return(Ax=t._DepthwiseConv2dNative=t.asm.G).apply(null,arguments)},wx=t._Elu=function(){return(wx=t._Elu=t.asm.H).apply(null,arguments)},Nu=t._Equal=function(){return(Nu=t._Equal=t.asm.I).apply(null,arguments)},ed=t._Exp=function(){return(ed=t._Exp=t.asm.J).apply(null,arguments)},td=t._FlipLeftRight=function(){return(td=t._FlipLeftRight=t.asm.K).apply(null,arguments)},Nx=t._Floor=function(){return(Nx=t._Floor=t.asm.L).apply(null,arguments)},Dx=t._FloorDiv=function(){return(Dx=t._FloorDiv=t.asm.M).apply(null,arguments)},Px=t._FusedBatchNorm=function(){return(Px=t._FusedBatchNorm=t.asm.N).apply(null,arguments)},Ex=t._FusedConv2D=function(){return(Ex=t._FusedConv2D=t.asm.O).apply(null,arguments)},Mx=t._FusedDepthwiseConv2D=function(){return(Mx=t._FusedDepthwiseConv2D=t.asm.P).apply(null,arguments)},tt=t._Gather=function(){return(tt=t._Gather=t.asm.Q).apply(null,arguments)},Fx=t._GatherNd=function(){return(Fx=t._GatherNd=t.asm.R).apply(null,arguments)},Rx=t._Greater=function(){return(Rx=t._Greater=t.asm.S).apply(null,arguments)},Lx=t._GreaterEqual=function(){return(Lx=t._GreaterEqual=t.asm.T).apply(null,arguments)},_x=t._LeakyRelu=function(){return(_x=t._LeakyRelu=t.asm.U).apply(null,arguments)},Bx=t._Less=function(){return(Bx=t._Less=t.asm.V).apply(null,arguments)},$x=t._LessEqual=function(){return($x=t._LessEqual=t.asm.W).apply(null,arguments)},rd=t._Log=function(){return(rd=t._Log=t.asm.X).apply(null,arguments)},$g=t._LogicalAnd=function(){return($g=t._LogicalAnd=t.asm.Y).apply(null,arguments)},Og=t._Max=function(){return(Og=t._Max=t.asm.Z).apply(null,arguments)},Ox=t._MaxPool=function(){return(Ox=t._MaxPool=t.asm._).apply(null,arguments)},zx=t._Maximum=function(){return(zx=t._Maximum=t.asm.$).apply(null,arguments)},Gx=t._Mean=function(){return(Gx=t._Mean=t.asm.aa).apply(null,arguments)},Ux=t._Min=function(){return(Ux=t._Min=t.asm.ba).apply(null,arguments)},Wx=t._Minimum=function(){return(Wx=t._Minimum=t.asm.ca).apply(null,arguments)},Kx=t._MirrorPad=function(){return(Kx=t._MirrorPad=t.asm.da).apply(null,arguments)},Vx=t._Multiply=function(){return(Vx=t._Multiply=t.asm.ea).apply(null,arguments)},It=t._Neg=function(){return(It=t._Neg=t.asm.fa).apply(null,arguments)},Hx=t._NonMaxSuppressionV3=function(){return(Hx=t._NonMaxSuppressionV3=t.asm.ga).apply(null,arguments)},qx=t._NonMaxSuppressionV4=function(){return(qx=t._NonMaxSuppressionV4=t.asm.ha).apply(null,arguments)},jx=t._NonMaxSuppressionV5=function(){return(jx=t._NonMaxSuppressionV5=t.asm.ia).apply(null,arguments)},Wl=t._NotEqual=function(){return(Wl=t._NotEqual=t.asm.ja).apply(null,arguments)},zg=t._OneHot=function(){return(zg=t._OneHot=t.asm.ka).apply(null,arguments)},Gg=t._PadV2=function(){return(Gg=t._PadV2=t.asm.la).apply(null,arguments)},Ug=t._Pow=function(){return(Ug=t._Pow=t.asm.ma).apply(null,arguments)},Xx=t._Prelu=function(){return(Xx=t._Prelu=t.asm.na).apply(null,arguments)},Yx=t._Prod=function(){return(Yx=t._Prod=t.asm.oa).apply(null,arguments)},Wg=t._RealDiv=function(){return(Wg=t._RealDiv=t.asm.pa).apply(null,arguments)},Qx=t._Relu=function(){return(Qx=t._Relu=t.asm.qa).apply(null,arguments)},Zx=t._Relu6=function(){return(Zx=t._Relu6=t.asm.ra).apply(null,arguments)},Jx=t._ResizeBilinear=function(){return(Jx=t._ResizeBilinear=t.asm.sa).apply(null,arguments)},eI=t._Reverse=function(){return(eI=t._Reverse=t.asm.ta).apply(null,arguments)},tI=t._RotateWithOffset=function(){return(tI=t._RotateWithOffset=t.asm.ua).apply(null,arguments)},Kg=t._Round=function(){return(Kg=t._Round=t.asm.va).apply(null,arguments)},Du=t._Rsqrt=function(){return(Du=t._Rsqrt=t.asm.wa).apply(null,arguments)},rI=t._ScatterNd=function(){return(rI=t._ScatterNd=t.asm.xa).apply(null,arguments)},nI=t._SelectV2=function(){return(nI=t._SelectV2=t.asm.ya).apply(null,arguments)},KD=t._Sigmoid=function(){return(KD=t._Sigmoid=t.asm.za).apply(null,arguments)},Vg=t._Sin=function(){return(Vg=t._Sin=t.asm.Aa).apply(null,arguments)},oI=t._Softmax=function(){return(oI=t._Softmax=t.asm.Ba).apply(null,arguments)},sI=t._SparseFillEmptyRows=function(){return(sI=t._SparseFillEmptyRows=t.asm.Ca).apply(null,arguments)},aI=t._SparseReshape=function(){return(aI=t._SparseReshape=t.asm.Da).apply(null,arguments)},iI=t._SparseSegmentReduction=function(){return(iI=t._SparseSegmentReduction=t.asm.Ea).apply(null,arguments)},uI=t._Sqrt=function(){return(uI=t._Sqrt=t.asm.Fa).apply(null,arguments)},pI=t._Square=function(){return(pI=t._Square=t.asm.Ga).apply(null,arguments)},lI=t._SquaredDifference=function(){return(lI=t._SquaredDifference=t.asm.Ha).apply(null,arguments)},mI=t._Step=function(){return(mI=t._Step=t.asm.Ia).apply(null,arguments)},cI=t._StridedSlice=function(){return(cI=t._StridedSlice=t.asm.Ja).apply(null,arguments)},dI=t._Sub=function(){return(dI=t._Sub=t.asm.Ka).apply(null,arguments)},fI=t._Sum=function(){return(fI=t._Sum=t.asm.La).apply(null,arguments)},hI=t._Tan=function(){return(hI=t._Tan=t.asm.Ma).apply(null,arguments)},gI=t._Tanh=function(){return(gI=t._Tanh=t.asm.Na).apply(null,arguments)},bI=t._Tile=function(){return(bI=t._Tile=t.asm.Oa).apply(null,arguments)},yI=t._TopK=function(){return(yI=t._TopK=t.asm.Pa).apply(null,arguments)},TI=t._Transform=function(){return(TI=t._Transform=t.asm.Qa).apply(null,arguments)},xI=t._Transpose=function(){return(xI=t._Transpose=t.asm.Ra).apply(null,arguments)},II=t.__FusedMatMul=function(){return(II=t.__FusedMatMul=t.asm.Sa).apply(null,arguments)},CI=t._malloc=function(){return(CI=t._malloc=t.asm.Ta).apply(null,arguments)},kI=t._free=function(){return(kI=t._free=t.asm.Ua).apply(null,arguments)},Hg=t.stackSave=function(){return(Hg=t.stackSave=t.asm.Wa).apply(null,arguments)},qg=t.stackRestore=function(){return(qg=t.stackRestore=t.asm.Xa).apply(null,arguments)},nd=t.stackAlloc=function(){return(nd=t.stackAlloc=t.asm.Ya).apply(null,arguments)};t.cwrap=ee;var Kl;function SI(Q){this.name="ExitStatus",this.message="Program terminated with exit("+Q+")",this.status=Q}is=function Q(){Kl||od(),Kl||(is=Q)};function od(Q){if(Q=Q||u,fr>0||($r(),fr>0))return;function ae(){Kl||(Kl=!0,t.calledRun=!0,!W&&(ss(),Cn(),n(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),Bn()))}t.setStatus?(t.setStatus("Running..."),setTimeout(function(){setTimeout(function(){t.setStatus("")},1),ae()},1)):ae()}if(t.run=od,t.preInit)for(typeof t.preInit=="function"&&(t.preInit=[t.preInit]);t.preInit.length>0;)t.preInit.pop()();od();var Vl;s&&(Vl={uncaughtException:process.listeners("uncaughtException").filter(function(Q){return!s.uncaughtException.indexOf(Q)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(Q){return!s.unhandledRejection.indexOf(Q)>-1})});var Hl;if(typeof e<"u")Hl=e;else if(typeof WasmBackendModuleThreadedSimd<"u")Hl=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(Vl){var vI=Hl._dispose;Hl._dispose=function(){vI(),Vl.uncaughtException.forEach(function(Q){process.removeListener("uncaughtException",Q)}),Vl.unhandledRejection.forEach(function(Q){process.removeListener("unhandledRejection",Q)})}}return e.ready}}();typeof tx=="object"&&typeof zD=="object"?zD.exports=OD:typeof define=="function"&&define.amd?define([],function(){return OD}):typeof tx=="object"&&(tx.WasmBackendModule=OD)});var rq=1e-7,nq=1e-4,Xa=class{constructor(e,t){this.backend=e;this.dataMover=t;this.data=new WeakMap;this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},ps=class{refCount(e){return no("refCount")}incRef(e){return no("incRef")}timerAvailable(){return!0}time(e){return no("time")}read(e){return no("read")}readSync(e){return no("readSync")}readToGPU(e,t){return no("readToGPU")}numDataIds(){return no("numDataIds")}disposeData(e,t){return no("disposeData")}write(e,t,n){return no("write")}move(e,t,n,o,s){return no("move")}memory(){return no("memory")}floatPrecision(){return no("floatPrecision")}epsilon(){return this.floatPrecision()===32?rq:nq}dispose(){return no("dispose")}};function no(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function n0(r){let e=r.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,tb(r,e,t)}function oq(r,e){if(r.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${e.length}`);let t=r.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,tb(r,t,n),tb(e,t,n)}function Zl(r,e,t){return Math.max(r,Math.min(e,t))}function sq(r){return r%2===0?r:r+1}function tb(r,e,t){let n=r[e];r[e]=r[t],r[t]=n}function aq(r){let e=0;for(let t=0;t<r.length;t++)e+=r[t];return e}function iq(r,e){let t=Math.random();return e*t+(1-t)*r}function uq(r,e){let t=0;for(let n=0;n<r.length;n++){let o=Number(r[n])-Number(e[n]);t+=o*o}return t}function P(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function Gt(r,e,t=""){P(zn(r,e),()=>t+` Shapes ${r} and ${e} must match`)}function oo(r){P(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Js(r,e=[],t=!1){if(e==null&&(e=[]),Array.isArray(r)||xr(r)&&!t)for(let n=0;n<r.length;++n)Js(r[n],e,t);else e.push(r);return e}function rt(r){if(r.length===0)return 1;let e=r[0];for(let t=1;t<r.length;t++)e*=r[t];return e}function pq(r){return r.length===0}function zn(r,e){if(r===e)return!0;if(r==null||e==null||r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==e[t])return!1;return!0}function Ni(r){return r%1===0}function lq(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let e=Math.exp(2*r);return(e-1)/(e+1)}}function mq(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}function cq(r){let e=new Uint32Array(r);for(let t=0;t<r;++t)e[t]=t;return n0(e),e}function Ap(r,e){return e<=r.length?r:r+" ".repeat(e-r.length)}function dq(r,e=n=>0,t){return new Promise((n,o)=>{let s=0,i=()=>{if(r()){n();return}s++;let a=e(s);if(t!=null&&s>=t){o();return}setTimeout(i,a)};i()})}function fq(r,e){let t=1,n=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)t*=r[s];else if(r[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(n===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${r}`);return r}if(t===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);let o=r.slice();return o[n]=e/t,o}function hr(r,e){let t=e.length;return r=r==null?e.map((n,o)=>o):[].concat(r),P(r.every(n=>n>=-t&&n<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${r}`),P(r.every(n=>Ni(n)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(n=>n<0?t+n:n)}function DI(r,e){let t=[],n=[],o=e!=null&&Array.isArray(e)&&e.length===0,s=e==null||o?null:hr(e,r).sort(),i=0;for(let a=0;a<r.length;++a){if(s!=null){if(s[i]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(s[i]==null||s[i]>a)&&r[a]===1&&(t.push(r[a]),n.push(a)),s[i]<=a&&i++}r[a]!==1&&(t.push(r[a]),n.push(a))}return{newShape:t,keptDims:n}}function PI(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${r}`);return t}function EI(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else if(r==="string")t=new Array(e);else throw new Error(`Unknown data type ${r}`);return t}function MI(r,e){for(let t=0;t<r.length;t++){let n=r[t];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${e} being uploaded contains ${n}.`)}}function FI(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function hq(r,e){return!(e==="complex64"||e==="float32"&&r!=="complex64"||e==="int32"&&r!=="float32"&&r!=="complex64"||e==="bool"&&r==="bool")}function xr(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}function rb(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function RI(r){if(r==null)return 0;let e=0;return r.forEach(t=>e+=t.length),e}function ea(r){return typeof r=="string"||r instanceof String}function o0(r){return typeof r=="boolean"}function s0(r){return typeof r=="number"}function Jl(r){return Array.isArray(r)?Jl(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":s0(r)?"float32":ea(r)?"string":o0(r)?"bool":"float32"}function Ya(r){return!!(r&&r.constructor&&r.call&&r.apply)}function em(r,e){for(let t=e;t<r;++t)if(r%t===0)return t;return r}function Qa(r){let e=r.length;if(e<2)return[];let t=new Array(e-1);t[e-2]=r[e-1];for(let n=e-3;n>=0;--n)t[n]=t[n+1]*r[n+1];return t}function a0(r,e,t,n=!1){let o=new Array;if(e.length===1){let s=e[0]*(n?2:1);for(let i=0;i<s;i++)o[i]=t[r+i]}else{let s=e[0],i=e.slice(1),a=i.reduce((u,p)=>u*p)*(n?2:1);for(let u=0;u<s;u++)o[u]=a0(r+u*a,i,t,n)}return o}function vp(r,e,t=!1){if(r.length===0)return e[0];let n=r.reduce((o,s)=>o*s)*(t?2:1);if(n===0)return[];if(n!==e.length)throw new Error(`[${r}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return a0(0,r,e,t)}function pd(r,e){let t=tm(r,e);for(let n=0;n<t.length;n++)t[n]=1;return t}function tm(r,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${e}`)}function gq(r,e){let t=r.reduce((n,o)=>n*o,1);if(e==null||e==="float32")return vp(r,new Float32Array(t));if(e==="int32")return vp(r,new Int32Array(t));if(e==="bool")return vp(r,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function ld(r){r.forEach(e=>{P(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function bq(r,e,t){if(e===0)return 0;if(e===1)return r[0];let n=r[r.length-1];for(let o=0;o<r.length-1;++o)n+=t[o]*r[o];return n}function yq(r,e,t){if(e===0)return[];if(e===1)return[r];let n=new Array(e);for(let o=0;o<n.length-1;++o)n[o]=Math.floor(r/t[o]),r-=n[o]*t[o];return n[n.length-1]=r,n}function md(r){return r&&r.then&&typeof r.then=="function"}var i0="tfjsflags",nb=class{constructor(e){this.global=e;this.flags={};this.flagRegistry={};this.urlFlags={};this.getQueryParams=xq;this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&($().getBool("IS_TEST")||$().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let o=this.urlFlags[e];$().getBool("IS_TEST")||$().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${o}.`),this.set(e,o)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(md(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);i0 in e&&e[i0].split(",").forEach(n=>{let[o,s]=n.split(":");this.urlFlags[o]=Cq(o,s)})}};function xq(r){let e={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(Iq(e,n[0],n[1]),n.join("="))),e}function Iq(r,e,t){r[decodeURIComponent(e)]=decodeURIComponent(t||"")}function Cq(r,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${r}.`)}function $(){return LI}var LI=null;function u0(r){LI=r}var _I;function BI(){if(_I==null){let r;if(typeof window<"u")r=window;else if(typeof global<"u")r=global;else if(typeof process<"u")r=process;else if(typeof self<"u")r=self;else throw new Error("Could not find a global object");_I=r}return _I}function kq(){let r=BI();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function cd(r,e){let t=kq();if(t.has(r))return t.get(r);{let n=e();return t.set(r,n),t.get(r)}}var ls="Abs",Di="Acos",Pi="Acosh",vn="Add",so="AddN",Ei="All",Mi="Any",ao="ArgMax",Za="ArgMin",Fi="Asin",Ri="Asinh",Li="Atan",_i="Atanh",Bi="Atan2",io="AvgPool",rm="AvgPoolGrad",Fu="AvgPool3D",nm="AvgPool3DGrad",uo="BatchMatMul",ms="BatchToSpaceND",om="Bincount",p0="BroadcastTo",sm="BroadcastArgs",Gn="Cast",po="Ceil",Un="ClipByValue",Ru="Complex",Lu="ComplexAbs",cs="Concat",lo="Conv2D",am="Conv2DBackpropFilter",mo="Conv2DBackpropInput",_u="Conv3D",im="Conv3DBackpropFilterV2",um="Conv3DBackpropInputV2",co="Cos",fo="Cosh",ta="Cumsum",ra="CropAndResize",pm="DenseBincount",na="DepthToSpace",ho="DepthwiseConv2dNative",lm="DepthwiseConv2dNativeBackpropFilter",mm="DepthwiseConv2dNativeBackpropInput",cm="Diag",Bu="Dilation2D",dd="Dilation2DBackpropInput",fd="Dilation2DBackpropFilter",go="RealDiv",$u="Einsum",bo="Elu",dm="EluGrad",$i="Erf",oa="Equal",yo="Exp",ds="ExpandDims",sa="Expm1",fm="FFT",Ja="Fill",aa="FlipLeftRight",To="Floor",xo="FloorDiv",Io="FusedBatchNorm",fs="GatherV2",ia="GatherNd",ua="Greater",Co="GreaterEqual",Wn="Identity",hm="IFFT",Ou="Imag",Oi="IsFinite",zi="IsInf",Gi="IsNan",ko="LeakyRelu",pa="Less",la="LessEqual",gm="LinSpace",So="Log",Ui="Log1p",ma="LogicalAnd",Wi="LogicalNot",wp="LogicalOr",l0="LogSoftmax",zu="LRN",bm="LRNGrad",vo="Max",Ao="Maximum",wo="MaxPool",ym="MaxPoolGrad",Gu="MaxPool3D",Tm="MaxPool3DGrad",xm="MaxPoolWithArgmax",No="Mean",Do="Min",Po="Minimum",Eo="MirrorPad",Ki="Mod",Im="Multinomial",Mo="Multiply",hs="Neg",ca="NotEqual",da="NonMaxSuppressionV3",Vi="NonMaxSuppressionV4",fa="NonMaxSuppressionV5",gs="OnesLike",ha="OneHot",bs="Pack",Fo="PadV2",Lde="Pool",Ro="Pow",Lo="Prelu",ga="Prod",ei="Range",Uu="Real",Hi="Reciprocal",_o="Relu",ys="Reshape",ti="ResizeNearestNeighbor",Cm="ResizeNearestNeighborGrad",Bo="ResizeBilinear",km="ResizeBilinearGrad",$o="Relu6",ba="Reverse",ya="Round",Oo="Rsqrt",Ta="ScatterNd",Ts="Select",qi="Selu",xs="Slice",zo="Sin",xa="Sinh",ji="Sign",Go="Sigmoid",Xi="Softplus",Uo="Sqrt",Wo="Sum",Is="SpaceToBatchND",Cs="SplitV",Ko="Softmax",Wu="SparseFillEmptyRows",Yi="SparseReshape",Ku="SparseSegmentMean",Vu="SparseSegmentSum",Hu="SparseToDense",Vo="SquaredDifference",ri="Square",Ia="StridedSlice",qu="StringNGrams",Sm="StringSplit",vm="StringToHashBucketFast",Ho="Sub",Ca="Tan",qo="Tanh",An="Tile",ka="TopK",Sa="Transform",jo="Transpose",Am="Unique",ks="Unpack",ju="UnsortedSegmentSum",Ss="ZerosLike",vs="Step",Np="FromPixels",va="RotateWithOffset",As="_FusedMatMul",ws="FusedConv2D",Ns="FusedDepthwiseConv2D";function ni(...r){$().getBool("IS_TEST")||$().getBool("PROD")||console.warn(...r)}function Sq(...r){$().getBool("IS_TEST")||$().getBool("PROD")||console.log(...r)}var wm=cd("kernelRegistry",()=>new Map),hd=cd("gradRegistry",()=>new Map);function gd(r,e){let t=OI(r,e);return wm.get(t)}function $I(r){return hd.get(r)}function ob(r){let e=wm.entries(),t=[];for(;;){let{done:n,value:o}=e.next();if(n)break;let[s,i]=o,[a]=s.split("_");a===r&&t.push(i)}return t}function Qi(r){let{kernelName:e,backendName:t}=r,n=OI(e,t);wm.has(n)&&ni(`The kernel '${e}' for backend '${t}' is already registered`),wm.set(n,r)}function c0(r){let{kernelName:e}=r;hd.has(e)&&$().getBool("DEBUG")&&ni(`Overriding the gradient for '${e}'`),hd.set(e,r)}function zde(r,e){let t=OI(r,e);if(!wm.has(t))throw new Error(`The kernel '${r}' for backend '${e}' is not registered`);wm.delete(t)}function Gde(r){if(!hd.has(r))throw new Error(`The gradient '${r}' for backend is not registered`);hd.delete(r)}function Ude(r,e){ob(r).forEach(n=>{let o=Object.assign({},n,{backendName:e});Qi(o)})}function OI(r,e){return`${e}_${r}`}var b={};je(b,{arraysEqual:()=>zn,assert:()=>P,assertNonNegativeIntegerDimensions:()=>ld,assertNonNull:()=>oo,assertShapesMatch:()=>Gt,bytesFromStringArray:()=>RI,bytesPerElement:()=>rb,checkConversionForErrors:()=>MI,clamp:()=>Zl,computeStrides:()=>Qa,createScalarValue:()=>Eq,createShuffledIndices:()=>cq,decodeString:()=>Em,distSquared:()=>uq,encodeString:()=>Yu,fetch:()=>Fq,fingerPrint64:()=>Pq,flatten:()=>Js,getArrayFromDType:()=>EI,getTypedArrayFromDType:()=>PI,hasEncodingLoss:()=>hq,hexToLong:()=>bd,indexToLoc:()=>yq,inferDtype:()=>Jl,inferFromImplicitShape:()=>fq,isBoolean:()=>o0,isFunction:()=>Ya,isInt:()=>Ni,isNumber:()=>s0,isPromise:()=>md,isScalarShape:()=>pq,isString:()=>ea,isTypedArray:()=>xr,isValidDtype:()=>FI,locToIndex:()=>bq,makeOnesTypedArray:()=>pd,makeZerosNestedTypedArray:()=>gq,makeZerosTypedArray:()=>tm,nearestDivisor:()=>em,nearestLargerEven:()=>sq,now:()=>Fp,parseAxisParam:()=>hr,randUniform:()=>iq,repeatedTry:()=>dq,rightPad:()=>Ap,shuffle:()=>n0,shuffleCombo:()=>oq,sizeFromShape:()=>rt,sizeToSquarishShape:()=>mq,squeezeShape:()=>DI,sum:()=>aq,swap:()=>tb,tanh:()=>lq,toNestedArray:()=>vp,toTypedArray:()=>Pm});var WI=Sp(k0());var Mp=WI.default||WI;function bd(r){return Mp.fromString(r,!0,16)}var v0=bd("c3a5c85c97cb3127"),Ep=bd("b492b66fbe98f273"),on=bd("9ae16a3b2f90404f");function UI(r){return r.xor(r.shru(47))}function A0(r,e,t){let n=r.slice(e,e+t);return Mp.fromBytes(Array.from(n),!0,!0)}function Ht(r,e){return A0(r,e,8)}function S0(r,e){return A0(r,e,4)}function Mr(r,e){return e===0?r:r.shru(e).or(r.shl(64-e))}function Xu(r,e,t=bd("9ddfea08eb382d69")){let n=r.xor(e).mul(t);n=n.xor(n.shru(47));let o=e.xor(n).mul(t);return o=o.xor(o.shru(47)),o=o.mul(t),o}function Aq(r,e,t,n,o,s){o=o.add(r),s=Mr(s.add(o).add(n),21);let i=o;return o=o.add(e),o=o.add(t),s=s.add(Mr(o,44)),[o.add(n),s.add(i)]}function ab(r,e,t,n){return Aq(Ht(r,e),Ht(r,e+8),Ht(r,e+16),Ht(r,e+24),t,n)}function wq(r,e=r.length){if(e>=8){let t=on.add(e*2),n=Ht(r,0).add(on),o=Ht(r,e-8),s=Mr(o,37).mul(t).add(n),i=Mr(n,25).add(o).mul(t);return Xu(s,i,t)}if(e>=4){let t=on.add(e*2),n=S0(r,0);return Xu(n.shl(3).add(e),S0(r,e-4),t)}if(e>0){let t=r[0],n=r[e>>1],o=r[e-1],s=t+(n<<8),i=e+(o<<2);return UI(on.mul(s).xor(v0.mul(i))).mul(on)}return on}function Nq(r,e=r.length){let t=on.add(e*2),n=Ht(r,0).mul(Ep),o=Ht(r,8),s=Ht(r,e-8).mul(t),i=Ht(r,e-16).mul(on);return Xu(Mr(n.add(o),43).add(Mr(s,30)).add(i),n.add(Mr(o.add(on),18)).add(s),t)}function Dq(r,e=r.length){let t=on.add(e*2),n=Ht(r,0).mul(on),o=Ht(r,8),s=Ht(r,e-8).mul(t),i=Ht(r,e-16).mul(on),a=Mr(n.add(o),43).add(Mr(s,30)).add(i),u=Xu(a,n.add(Mr(o.add(on),18)).add(s),t),p=Ht(r,16).mul(t),l=Ht(r,24),m=a.add(Ht(r,e-32)).mul(t),c=u.add(Ht(r,e-24)).mul(t);return Xu(Mr(p.add(l),43).add(Mr(m,30)).add(c),p.add(Mr(l.add(n),18)).add(m),t)}function Pq(r,e=r.length){let t=Mp.fromNumber(81,!0);if(e<=32)return e<=16?wq(r,e):Nq(r,e);if(e<=64)return Dq(r,e);let n=t,o=t.mul(Ep).add(113),s=UI(o.mul(on).add(113)).mul(on),i=[Mp.UZERO,Mp.UZERO],a=[Mp.UZERO,Mp.UZERO];n=n.mul(on).add(Ht(r,0));let u=0,p=(e-1>>6)*64,l=p+(e-1&63)-63;do n=Mr(n.add(o).add(i[0]).add(Ht(r,u+8)),37).mul(Ep),o=Mr(o.add(i[1]).add(Ht(r,u+48)),42).mul(Ep),n=n.xor(a[1]),o=o.add(i[0]).add(Ht(r,u+40)),s=Mr(s.add(a[0]),33).mul(Ep),i=ab(r,u,i[1].mul(Ep),n.add(a[0])),a=ab(r,u+32,s.add(a[1]),o.add(Ht(r,u+16))),[s,n]=[n,s],u+=64;while(u!==p);let m=Ep.add(s.and(255).shl(1));return u=l,a[0]=a[0].add(e-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),n=Mr(n.add(o).add(i[0]).add(Ht(r,u+8)),37).mul(m),o=Mr(o.add(i[1]).add(Ht(r,u+48)),42).mul(m),n=n.xor(a[1].mul(9)),o=o.add(i[0].mul(9).add(Ht(r,u+40))),s=Mr(s.add(a[0]),33).mul(m),i=ab(r,u,i[1].mul(m),n.add(a[0])),a=ab(r,u+32,s.add(a[1]),o.add(Ht(r,u+16))),[s,n]=[n,s],Xu(Xu(i[0],a[0],m).add(UI(o).mul(v0)).add(s),Xu(i[1],a[1],m).add(n),m)}function Eq(r,e){return e==="string"?Yu(r):Pm([r],e)}function Mq(r,e){return r instanceof Float32Array&&e==="float32"||r instanceof Int32Array&&e==="int32"||r instanceof Uint8Array&&e==="bool"}function Pm(r,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=Js(r)),$().getBool("DEBUG")&&MI(r,e),Mq(r,e))return r;if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"){let t=new Uint8Array(r.length);for(let n=0;n<t.length;++n)Math.round(r[n])!==0&&(t[n]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Fp(){return $().platform.now()}function Fq(r,e){return $().platform.fetch(r,e)}function Yu(r,e="utf-8"){return e=e||"utf-8",$().platform.encode(r,e)}function Em(r,e="utf-8"){return e=e||"utf-8",$().platform.decode(r,e)}var KI=class{constructor(e,t){this.backendTimer=e;this.logger=t;t==null&&(this.logger=new w0)}profileKernel(e,t,n){let o,s=()=>{o=n()},i,a=Fp();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(let p of o)p.dataSync();i=Promise.resolve({kernelMs:Fp()-a})}if($().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let p=0;p<o.length;p++){let l=o[p];l.data().then(m=>{Rq(m,l.dtype,e)})}return{kernelName:e,outputs:o,inputs:t,timeMs:i.then(p=>p.kernelMs),extraInfo:i.then(p=>p.getExtraProfileInfo!=null?p.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:o,inputs:s,extraInfo:i}=e;n.forEach(a=>{Promise.all([a.data(),o,i]).then(u=>{this.logger.logKernelProfile(t,a,u[0],u[1],s,u[2])})})}};function Rq(r,e,t){if(e!=="float32")return!1;for(let n=0;n<r.length;n++){let o=r[n];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${t}'`),!0}return!1}var w0=class{logKernelProfile(e,t,n,o,s,i){let a=typeof o=="number"?Ap(`${o}ms`,9):o.error,u=Ap(e,25),p=t.rank,l=t.size,m=Ap(t.shape.toString(),14),c="";for(let d in s){let f=s[d];if(f!=null){let h=f.shape||t.shape,g=h.length;c+=`${d}: ${g}D ${g>0?h:""} `}}console.log(`%c${u}	%c${a}	%c${p}D ${m}	%c${l}	%c${c}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function N0(r,e,t){let n={},o={};for(let u=0;u<e.length;u++)n[e[u].id]=!0;for(let u=0;u<r.length;u++){let p=r[u],l=p.inputs;for(let m in l){let c=l[m],d=!1;for(let f=0;f<e.length;f++)if(n[c.id]){p.outputs.forEach(h=>n[h.id]=!0),d=!0,o[p.id]=!0;break}if(d)break}}let s={};s[t.id]=!0;let i={};for(let u=r.length-1;u>=0;u--){let p=r[u],l=p.inputs;for(let m=0;m<p.outputs.length;m++)if(s[p.outputs[m].id]){for(let c in l)s[l[c].id]=!0,i[p.id]=!0;break}}let a=[];for(let u=0;u<r.length;u++){let p=r[u];if(o[p.id]&&i[p.id]){let l={};for(let c in p.inputs){let d=p.inputs[c];n[d.id]&&(l[c]=d)}let m=Object.assign({},p);m.inputs=l,m.outputs=p.outputs,a.push(m)}}return a}function D0(r,e,t,n){for(let o=e.length-1;o>=0;o--){let s=e[o],i=[];if(s.outputs.forEach(u=>{let p=r[u.id];p!=null?i.push(p):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let a=s.gradient(i);for(let u in s.inputs){if(!(u in a))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(a)}.`);let p=t(()=>a[u]());if(p.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${p.dtype}'`);let l=s.inputs[u];if(!zn(p.shape,l.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${u}' has shape '${p.shape}', which does not match the shape of the input '${l.shape}'`);if(r[l.id]==null)r[l.id]=p;else{let m=r[l.id];r[l.id]=n(m,p),m.dispose()}}}}var P0=20,yd=3,VI=7;function E0(r,e,t,n){let o=Qa(e),s=Lq(r,e,t,o),i=e.length,a=ib(r,e,t,o,s),u=["Tensor"];return n&&(u.push(`  dtype: ${t}`),u.push(`  rank: ${i}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(a.map(p=>"    "+p).join(`
`)),u.join(`
`)}function Lq(r,e,t,n){let o=rt(e),s=n[n.length-1],i=new Array(s).fill(0),a=e.length,u=t==="complex64"?xd(r):r;if(a>1)for(let p=0;p<o/s;p++){let l=p*s;for(let m=0;m<s;m++)i[m]=Math.max(i[m],Td(u[l+m],0,t).length)}return i}function Td(r,e,t){let n;return Array.isArray(r)?n=`${parseFloat(r[0].toFixed(VI))} + ${parseFloat(r[1].toFixed(VI))}j`:ea(r)?n=`'${r}'`:t==="bool"?n=M0(r):n=parseFloat(r.toFixed(VI)).toString(),Ap(n,e)}function M0(r){return r===0?"false":"true"}function ib(r,e,t,n,o,s=!0){let i=t==="complex64"?2:1,a=e[0],u=e.length;if(u===0){if(t==="complex64"){let h=xd(r);return[Td(h[0],0,t)]}return t==="bool"?[M0(r[0])]:[r[0].toString()]}if(u===1){if(a>P0){let g=yd*i,y=Array.from(r.slice(0,g)),T=Array.from(r.slice((a-yd)*i,a*i));return t==="complex64"&&(y=xd(y),T=xd(T)),["["+y.map((x,I)=>Td(x,o[I],t)).join(", ")+", ..., "+T.map((x,I)=>Td(x,o[a-yd+I],t)).join(", ")+"]"]}let h=t==="complex64"?xd(r):Array.from(r);return["["+h.map((g,y)=>Td(g,o[y],t)).join(", ")+"]"]}let p=e.slice(1),l=n.slice(1),m=n[0]*i,c=[];if(a>P0){for(let h=0;h<yd;h++){let g=h*m,y=g+m;c.push(...ib(r.slice(g,y),p,t,l,o,!1))}c.push("...");for(let h=a-yd;h<a;h++){let g=h*m,y=g+m;c.push(...ib(r.slice(g,y),p,t,l,o,h===a-1))}}else for(let h=0;h<a;h++){let g=h*m,y=g+m;c.push(...ib(r.slice(g,y),p,t,l,o,h===a-1))}let d=u===2?",":"";c[0]="["+c[0]+d;for(let h=1;h<c.length-1;h++)c[h]=" "+c[h]+d;let f=`,
`;for(let h=2;h<u;h++)f+=`
`;return c[c.length-1]=" "+c[c.length-1]+"]"+(s?"":f),c}function xd(r){let e=[];for(let t=0;t<r.length;t+=2)e.push([r[t],r[t+1]]);return e}var gt=class{constructor(e,t,n){this.dtype=t;if(this.shape=e.slice(),this.size=rt(e),n!=null){let o=n.length;P(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||EI(t,this.size),this.strides=Qa(e)}set(e,...t){t.length===0&&(t=[0]),P(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let o of e){if(o<0||o>=this.shape[t]){let s=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(s)}t++}let n=e[e.length-1];for(let o=0;o<e.length-1;++o)n+=this.strides[o]*e[o];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return wa().makeTensor(this.values,this.shape,this.dtype)}},wa=null,Mm=null,_q=null;function F0(r){wa=r}function R0(r){Mm=r}function L0(r){_q=r}var Xe=class{constructor(e,t,n,o){this.kept=!1;this.isDisposedInternal=!1;this.shape=e.slice(),this.dtype=t||"float32",this.size=rt(e),this.strides=Qa(e),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Mm.buffer(this.shape,this.dtype,e)}bufferSync(){return Mm.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return vp(this.shape,e,this.dtype==="complex64")}arraySync(){return vp(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=wa().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>Em(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),wa().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=wa().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Em(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await wa().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(wa().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Mm.print(this,e)}clone(){return this.throwIfDisposed(),Mm.clone(this)}toString(e=!1){let t=this.dataSync();return E0(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Mm.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),wa().makeVariable(this,e,t,n)}};Object.defineProperty(Xe,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function Bq(){return cd("Tensor",()=>Xe)}Bq();var Qu=class extends Xe{constructor(e,t,n,o){super(e.shape,e.dtype,e.dataId,o);this.trainable=t;this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!zn(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);wa().disposeTensor(this),this.dataId=e.dataId,wa().incRef(this,null)}dispose(){wa().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Qu,Symbol.hasInstance,{value:r=>r instanceof Xe&&r.assign!=null&&r.assign instanceof Function});var Ms={};je(Ms,{assertTypesMatch:()=>HI,getTensorsInContainer:()=>Id,isTensorInList:()=>Oq,makeTypesMatch:()=>Ye});var _0=(a=>(a.R0="R0",a.R1="R1",a.R2="R2",a.R3="R3",a.R4="R4",a.R5="R5",a.R6="R6",a))(_0||{}),B0=(o=>(o.float32="float32",o.int32="int32",o.bool="int32",o.complex64="complex64",o))(B0||{}),$0=(o=>(o.float32="float32",o.int32="int32",o.bool="bool",o.complex64="complex64",o))($0||{}),O0=(o=>(o.float32="float32",o.int32="float32",o.bool="float32",o.complex64="complex64",o))(O0||{}),z0=(o=>(o.float32="complex64",o.int32="complex64",o.bool="complex64",o.complex64="complex64",o))(z0||{}),$q={float32:O0,int32:B0,bool:$0,complex64:z0};function Ut(r,e){if(r==="string"||e==="string"){if(r==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${r} with ${e}`)}return $q[r][e]}function Zi(r){return Ut(r,"int32")}function Ye(r,e){if(r.dtype===e.dtype)return[r,e];let t=Ut(r.dtype,e.dtype);return[r.cast(t),e.cast(t)]}function HI(r,e){P(r.dtype===e.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${e.dtype}) input must match`)}function Oq(r,e){return e.some(t=>t.id===r.id)}function Id(r){let e=[];return G0(r,e,new Set),e}function G0(r,e,t){if(r==null)return;if(r instanceof Xe){e.push(r);return}if(!zq(r))return;let n=r;for(let o in n){let s=n[o];t.has(s)||(t.add(s),G0(s,e,t))}}function zq(r){return Array.isArray(r)||typeof r=="object"}function qI(r){return r.kernelName!=null}var jI=class{constructor(){this.registeredVariables={};this.nextTapeNodeId=0;this.numBytes=0;this.numTensors=0;this.numStringTensors=0;this.numDataBuffers=0;this.gradientDepth=0;this.kernelDepth=0;this.scopeStack=[];this.numDataMovesStack=[];this.nextScopeId=0;this.tensorInfo=new WeakMap;this.profiling=!1;this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},pb=class{constructor(e){this.ENV=e;this.registry={};this.registryFactory={};this.pendingBackendInitId=0;this.state=new jI}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ni(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new KI(this.backendInstance),!0}setupRegisteredKernels(){ob(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){ob(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof ps)&&typeof n.then=="function"){let o=++this.pendingBackendInitId,s=n.then(i=>o<this.pendingBackendInitId?!1:(this.registry[e]=i,this.pendingBackendInit=null,!0)).catch(i=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,ni(`Initialization of backend ${e} failed`),ni(i.stack||i.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return ni(`Initialization of backend ${e} failed`),ni(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:o,asyncInit:s}=this.initializeBackend(n);if(s||o)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),o=n.backend,s=this.readSync(t),i=o.refCount(t);o.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let o;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(o),()=>(o=t(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(e,t,n){e();try{let o=n();return t(),o}catch(o){throw t(),o}}nextTensorId(){return pb.nextTensorId++}nextVariableId(){return pb.nextVariableId++}clone(e){let t=D.runKernel(Wn,{x:e}),n={x:e},o=i=>({x:()=>{let a="float32",u={x:i},p={dtype:a};return D.runKernel(Gn,u,p)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[t],o,s,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(gd(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let o=this.backend.numDataIds(),s=0;n.forEach(u=>{s+=u.dtype==="complex64"?3:1});let i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=o-t-s-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],o=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let u,p=qI(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(qI(e)){let{kernelName:f,inputs:h,attrs:g}=e;this.backendName==null&&this.backend;let y=gd(f,this.backendName);P(y!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),a=()=>{let T=this.backend.numDataIds();u=y.kernelFunc({inputs:h,attrs:g,backend:this.backend});let x=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,T,x);let I=x.map(k=>{if(k.rank!=null)return k;let{dataId:N,shape:E,dtype:M}=k;return this.makeTensorFromDataId(N,E,M)});if(o){let k=this.getTensorsForGradient(f,h,I);n=this.saveTensorsForBackwardMode(k)}return I}}else{let{forwardFunc:f}=e,h=g=>{!o||(n=g.map(y=>this.keep(this.clone(y))))};a=()=>{let g=this.backend.numDataIds();u=this.tidy(()=>f(this.backend,h));let y=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,g,y),y}}let{inputs:l,attrs:m}=e,c=qI(e)?null:e.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=a():(d=this.profiler.profileKernel(p,l,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs)}),o&&this.addTapeNode(p,l,t,c,n,m),this.state.profiling&&this.state.activeProfile.kernels.push({name:p,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(f=>l[f]!=null?l[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let o=$I(e);if(o!=null){let s=o.inputsToSave||[],i=o.outputsToSave||[],a;o.saveAllInputs?(P(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(p=>t[p])):a=s.map(p=>t[p]);let u=n.filter((p,l)=>i[l]);return a.concat(u)}return[]}makeTensor(e,t,n,o){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",o=o||this.backend;let s=e;n==="string"&&ea(e[0])&&(s=e.map(u=>Yu(u)));let i=o.write(s,t,n),a=new Xe(t,n,i,this.nextTensorId());if(this.trackTensor(a,o),n==="string"){let u=this.state.tensorInfo.get(i),p=RI(s);this.state.numBytes+=p-u.bytes,u.bytes=p}return a}makeTensorFromDataId(e,t,n,o){n=n||"float32";let s=new Xe(t,n,e,this.nextTensorId());return this.trackTensor(s,o),s}makeVariable(e,t=!0,n,o){n=n||this.nextVariableId().toString(),o!=null&&o!==e.dtype&&(e=e.cast(o));let s=new Qu(e,t,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*rb(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Qu||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*rb(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,o,s,i){let a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},u=$I(e);u!=null&&(o=u.gradFunc),o!=null&&(a.gradient=p=>(p=p.map((l,m)=>{if(l==null){let c=n[m],d=tm(c.size,c.dtype);return this.makeTensor(d,c.shape,c.dtype)}return l}),o(p.length>1?p:p[0],s,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=Id(e),n=new Set(t.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let i=this.state.activeScope.track[s];!i.kept&&!n.has(i.id)&&i.dispose()}let o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(s=>{!s.kept&&s.scopeId===o.id&&this.track(s)})}gradients(e,t,n,o=!1){if(P(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));P(s instanceof Xe,()=>"The result y returned by f() must be a tensor.");let i=N0(this.state.activeTape,t,s);if(!o&&i.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let a={};a[s.id]=n??Gq(s.shape),D0(a,i,p=>this.tidy(p),Uq);let u=t.map(p=>a[p.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(p=>{for(let l of p.saved)l.dispose()}),this.state.activeTape=null),{value:s,grads:u}})}customGrad(e){return P(Ya(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{P(t.every(a=>a instanceof Xe),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,o={};t.forEach((a,u)=>{o[u]=a});let s=(a,u)=>(n=e(...t,u),P(n.value instanceof Xe,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),P(Ya(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),i=(a,u)=>{let p=n.gradFunc(a,u),l=Array.isArray(p)?p:[p];P(l.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),P(l.every(c=>c instanceof Xe),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let m={};return l.forEach((c,d)=>{m[d]=()=>c}),m};return this.runKernelFunc({forwardFunc:s,backwardsFunc:i,inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Fp(),n=await this.backend.time(e);return n.wallMs=Fp()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new jI;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},ub=pb;ub.nextTensorId=0,ub.nextVariableId=0;function Gq(r){let e=pd(rt(r),"float32");return D.makeTensor(e,r,"float32")}function XI(){let r=BI();if(r._tfengine==null){let e=new nb(r);r._tfengine=new ub(e)}return u0(r._tfengine.ENV),F0(()=>r._tfengine),r._tfengine}var D=XI();function Uq(r,e){let t={a:r,b:e};return D.runKernel(vn,t)}var oi={};je(oi,{isBrowser:()=>QI,isMobile:()=>Vq,mockIsMobile:()=>Kq});function Wq(){return typeof navigator<"u"&&navigator!=null}var YI;function Kq(r){YI=r}function Vq(r){if(YI!==void 0)return YI;if(r||Wq()){if(r||(r=navigator),r.product==="ReactNative")return!0;let e=r.userAgent||r.vendor||(typeof window<"u"?window.opera:"");if(!e){let t=r;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function QI(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Na=$();Na.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Na.registerFlag("IS_BROWSER",()=>QI());Na.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Na.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Na.registerFlag("PROD",()=>!1);Na.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Na.getBool("DEBUG"));Na.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Na.registerFlag("IS_TEST",()=>!1);Na.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Na.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);function Gr(r,e){let t=r;if(xr(r))return e==="string"?[]:[r.length];if(!Array.isArray(r))return[];let n=[];for(;Array.isArray(t)||xr(t)&&e!=="string";)n.push(t.length),t=t[0];return Array.isArray(r)&&$().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&W0(r,n,[]),n}function W0(r,e,t){if(t=t||[],!Array.isArray(r)&&!xr(r)){P(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}P(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${r.length} elements`),P(r.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${r.length} elements`);let n=e.slice(1);for(let o=0;o<r.length;++o)W0(r[o],n,t.concat(o))}function U0(r,e,t,n){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==e||r==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${n}' must be ${r} tensor, but got ${e} tensor`)}}function S(r,e,t,n="numeric"){if(r instanceof Xe)return U0(n,r.dtype,e,t),r;let o=Jl(r);if(o!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(o=n),U0(n,o,e,t),r==null||!xr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let u=r==null?"null":r.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${u}'`)}let s=Gr(r,o);!xr(r)&&!Array.isArray(r)&&(r=[r]);let a=o!=="string"?Pm(r,o):Js(r,[],!0);return D.makeTensor(a,s,o)}function Ji(r,e,t,n="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,i)=>S(s,`${e}[${i}]`,t,n))}var K0="__op";function w(r){let e=Object.keys(r);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0],n=r[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+K0;let o=(...s)=>{D.startScope(t);try{let i=n(...s);return md(i)&&console.error("Cannot return a Promise inside of tidy."),D.endScope(i),i}catch(i){throw D.endScope(null),i}};return Object.defineProperty(o,"name",{value:t,configurable:!0}),o}function Hq(r,e){let t=S(r,"real","complex"),n=S(e,"imag","complex");Gt(t.shape,n.shape,`real and imag shapes, ${t.shape} and ${n.shape}, must match in call to tf.complex().`);let o={real:t,imag:n};return D.runKernel(Ru,o)}var Hn=w({complex_:Hq});function sn(r,e,t,n){if(n==null&&(n=Jl(r)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!xr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){ld(e);let o=rt(e),s=rt(t);P(o===s,()=>`Based on the provided shape, [${e}], the tensor should have ${o} values but has ${s}`);for(let i=0;i<t.length;++i){let a=t[i],u=i===t.length-1?a!==rt(e.slice(i)):!0;P(t[i]===e[i]||!u,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!xr(r)&&!Array.isArray(r)&&(r=[r]),e=e||t,r=n!=="string"?Pm(r,n):Js(r,[],!0),D.makeTensor(r,e,n)}function Fr(r,e,t){let n=Gr(r,t);return sn(r,e,n,t)}var Cd={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var lb=4;async function H0(r,e){let t=[],n=[],o=Array.isArray(r)?r.map(i=>i.name):Object.keys(r);for(let i=0;i<o.length;++i){let a=o[i],u=Array.isArray(r)?r[i].tensor:r[a];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${u.dtype}`);let p={name:a,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){let l=new Promise(async m=>{let c=await u.bytes(),d=c.reduce((g,y)=>g+y.length,0)+lb*c.length,f=new Uint8Array(d),h=0;for(let g=0;g<c.length;g++){let y=c[g],T=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(T,h),h+=lb,f.set(y,h),h+=y.length}m(f)});n.push(l)}else n.push(u.data());e!=null&&(p.group=e),t.push(p)}let s=await Promise.all(n);return{data:qq(s),specs:t}}function mb(r,e){let t={},n,o=0;for(let s of e){let i=s.name,a=s.dtype,u=s.shape,p=rt(u),l;if("quantization"in s){let m=s.quantization;if(m.dtype==="uint8"||m.dtype==="uint16"){if(!("min"in m&&"scale"in m))throw new Error(`Weight ${s.name} with quantization ${m.dtype} doesn't have corresponding metadata min and scale.`)}else if(m.dtype==="float16"){if(a!=="float32")throw new Error(`Weight ${s.name} is quantized with ${m.dtype} which only supports weights of type float32 not ${a}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${m.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let c=Cd[m.dtype],d=r.slice(o,o+p*c),f=m.dtype==="uint8"?new Uint8Array(d):new Uint16Array(d);if(a==="float32")if(m.dtype==="uint8"||m.dtype==="uint16"){l=new Float32Array(f.length);for(let h=0;h<f.length;h++){let g=f[h];l[h]=g*m.scale+m.min}}else if(m.dtype==="float16")n===void 0&&(n=Qq()),l=n(f);else throw new Error(`Unsupported quantization type ${m.dtype} for weight type float32.`);else if(a==="int32"){if(m.dtype!=="uint8"&&m.dtype!=="uint16")throw new Error(`Unsupported quantization type ${m.dtype} for weight type int32.`);l=new Int32Array(f.length);for(let h=0;h<f.length;h++){let g=f[h];l[h]=Math.round(g*m.scale+m.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${a}`);o+=p*c}else if(a==="string"){let m=rt(s.shape);l=[];for(let c=0;c<m;c++){let d=new Uint32Array(r.slice(o,o+lb))[0];o+=lb;let f=new Uint8Array(r.slice(o,o+d));l.push(f),o+=d}}else{let m=Cd[a],c=r.slice(o,o+p*m);if(a==="float32")l=new Float32Array(c);else if(a==="int32")l=new Int32Array(c);else if(a==="bool")l=new Uint8Array(c);else if(a==="complex64"){l=new Float32Array(c);let d=new Float32Array(l.length/2),f=new Float32Array(l.length/2);for(let y=0;y<d.length;y++)d[y]=l[y*2],f[y]=l[y*2+1];let h=Fr(d,u,"float32"),g=Fr(f,u,"float32");t[i]=Hn(h,g),h.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${a}`);o+=p*m}a!=="complex64"&&(t[i]=Fr(l,u,a))}return t}function qq(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let e=0,t=[];r.forEach(s=>{if(e+=s.byteLength,t.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(e),o=0;return t.forEach(s=>{n.set(new Uint8Array(s.buffer),o),o+=s.byteLength}),n.buffer}var ZI=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function V0(r){return ZI?Buffer.byteLength(r):new Blob([r]).size}function q0(r){if(ZI)return Buffer.from(r).toString("base64");let e=new Uint8Array(r),t="";for(let n=0,o=e.length;n<o;n++)t+=String.fromCharCode(e[n]);return btoa(t)}function j0(r){if(ZI){let n=Buffer.from(r,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let e=atob(r),t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)t.set([e.charCodeAt(n)],n);return t.buffer}function Fm(r){if(r.length===1)return r[0];let e=0;r.forEach(o=>{e+=o.byteLength});let t=new Uint8Array(e),n=0;return r.forEach(o=>{t.set(new Uint8Array(o),n),n+=o.byteLength}),t.buffer}function JI(r){let e="/";for(r=r.trim();r.endsWith(e);)r=r.slice(0,r.length-1);let t=r.split(e);return t[t.length-1]}function cb(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:e};return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),t}async function Rm(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),r.weightsManifest!=null){let[n,o]=await e(r.weightsManifest);t.weightSpecs=n,t.weightData=o}return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),t}function si(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:V0(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:V0(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:r.weightData.byteLength}}function jq(){let r=t=>{let n=t<<13,o=0;for(;(n&8388608)===0;)o-=8388608,n<<=1;return n&=-8388609,o+=947912704,n|o},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=r(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function Xq(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let e=1;e<31;e++)r[e]=e<<23;for(let e=33;e<63;e++)r[e]=2147483648+(e-32<<23);return r}function Yq(){let r=new Uint32Array(64);for(let e=0;e<64;e++)r[e]=1024;return r[0]=r[32]=0,r}function Qq(){let r=jq(),e=Xq(),t=Yq();return n=>{let o=new ArrayBuffer(4*n.length),s=new Uint32Array(o);for(let i=0;i<n.length;i++){let a=n[i],u=r[t[a>>10]+(a&1023)]+e[a>>10];s[i]=u}return new Float32Array(o)}}var Mt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Mt.instance==null&&(Mt.instance=new Mt),Mt.instance}static registerSaveRouter(e){Mt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Mt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Mt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Mt.getHandlers(e,"load",t)}static getHandlers(e,t,n){let o=[];return(t==="load"?Mt.getInstance().loadRouters:Mt.getInstance().saveRouters).forEach(i=>{let a=i(e,n);a!==null&&o.push(a)}),o}},X0=r=>Mt.registerSaveRouter(r),Y0=r=>Mt.registerLoadRouter(r),Q0=r=>Mt.getSaveHandlers(r),Z0=(r,e)=>Mt.getLoadHandlers(r,e);var eC="tensorflowjs",tC=1,Rp="models_store",Zu="model_info_store";function J0(){if(!$().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,e=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function rC(r){let e=r.result;e.createObjectStore(Rp,{keyPath:"modelPath"}),e.createObjectStore(Zu,{keyPath:"modelPath"})}var eu=class{constructor(e){if(this.indexedDB=J0(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,o)=>{let s=this.indexedDB.open(eC,tC);s.onupgradeneeded=()=>rC(s),s.onsuccess=()=>{let i=s.result;if(t==null){let a=i.transaction(Rp,"readonly"),p=a.objectStore(Rp).get(this.modelPath);p.onsuccess=()=>{if(p.result==null)return i.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(p.result.modelArtifacts)},p.onerror=l=>(i.close(),o(p.error)),a.oncomplete=()=>i.close()}else{let a=si(t),u=i.transaction(Zu,"readwrite"),p=u.objectStore(Zu),l=p.put({modelPath:this.modelPath,modelArtifactsInfo:a}),m;l.onsuccess=()=>{m=i.transaction(Rp,"readwrite");let d=m.objectStore(Rp).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a});d.onsuccess=()=>n({modelArtifactsInfo:a}),d.onerror=f=>{p=u.objectStore(Zu);let h=p.delete(this.modelPath);h.onsuccess=()=>(i.close(),o(d.error)),h.onerror=g=>(i.close(),o(d.error))}},l.onerror=c=>(i.close(),o(l.error)),u.oncomplete=()=>{m==null?i.close():m.oncomplete=()=>i.close()}}},s.onerror=i=>o(s.error)})}};eu.URL_SCHEME="indexeddb://";var e2=r=>$().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(eu.URL_SCHEME)?Zq(r.slice(eu.URL_SCHEME.length)):null;Mt.registerSaveRouter(e2);Mt.registerLoadRouter(e2);function Zq(r){return new eu(r)}function Jq(r){return r.startsWith(eu.URL_SCHEME)?r.slice(eu.URL_SCHEME.length):r}var nC=class{constructor(){this.indexedDB=J0()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(eC,tC);n.onupgradeneeded=()=>rC(n),n.onsuccess=()=>{let o=n.result,s=o.transaction(Zu,"readonly"),a=s.objectStore(Zu).getAll();a.onsuccess=()=>{let u={};for(let p of a.result)u[p.modelPath]=p.modelArtifactsInfo;e(u)},a.onerror=u=>(o.close(),t(a.error)),s.oncomplete=()=>o.close()},n.onerror=o=>t(n.error)})}async removeModel(e){return e=Jq(e),new Promise((t,n)=>{let o=this.indexedDB.open(eC,tC);o.onupgradeneeded=()=>rC(o),o.onsuccess=()=>{let s=o.result,i=s.transaction(Zu,"readwrite"),a=i.objectStore(Zu),u=a.get(e),p;u.onsuccess=()=>{if(u.result==null)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let l=a.delete(e),m=()=>{p=s.transaction(Rp,"readwrite");let d=p.objectStore(Rp).delete(e);d.onsuccess=()=>t(u.result.modelArtifactsInfo),d.onerror=f=>n(u.error)};l.onsuccess=m,l.onerror=c=>(m(),s.close(),n(u.error))}},u.onerror=l=>(s.close(),n(u.error)),i.oncomplete=()=>{p==null?s.close():p.oncomplete=()=>s.close()}},o.onerror=s=>n(o.error)})}};var tu="/",Lm="tensorflowjs_models",t2="info",e6="model_topology",t6="weight_specs",r6="weight_data",n6="model_metadata";function r2(r){return{info:[Lm,r,t2].join(tu),topology:[Lm,r,e6].join(tu),weightSpecs:[Lm,r,t6].join(tu),weightData:[Lm,r,r6].join(tu),modelMetadata:[Lm,r,n6].join(tu)}}function n2(r){for(let e of Object.values(r))window.localStorage.removeItem(e)}function o6(r){let e=r.split(tu);if(e.length<3)throw new Error(`Invalid key format: ${r}`);return e.slice(1,e.length-1).join(tu)}function s6(r){return r.startsWith(ru.URL_SCHEME)?r.slice(ru.URL_SCHEME.length):r}var ru=class{constructor(e){if(!$().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=r2(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),o=si(e);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,q0(e.weightData));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:o}}catch{throw n2(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=o;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let a=JSON.parse(s);t.format=a.format,t.generatedBy=a.generatedBy,t.convertedBy=a.convertedBy,a.signature!=null&&(t.signature=a.signature),a.userDefinedMetadata!=null&&(t.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(t.modelInitializer=a.modelInitializer),a.trainingConfig!=null&&(t.trainingConfig=a.trainingConfig)}let i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=j0(i),t}};ru.URL_SCHEME="localstorage://";var o2=r=>$().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(ru.URL_SCHEME)?a6(r.slice(ru.URL_SCHEME.length)):null;Mt.registerSaveRouter(o2);Mt.registerLoadRouter(o2);function a6(r){return new ru(r)}var oC=class{constructor(){P($().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),P(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Lm+tu,n=tu+t2;for(let o=0;o<this.LS.length;++o){let s=this.LS.key(o);if(s.startsWith(t)&&s.endsWith(n)){let i=o6(s);e[i]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=s6(e);let t=r2(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return n2(t),n}};var _m="://",an=class{constructor(){this.managers={}}static getInstance(){return an.instance==null&&(an.instance=new an),an.instance}static registerManager(e,t){P(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(_m)&&(e=e.slice(0,e.indexOf(_m))),P(e.length>0,()=>"scheme must not be an empty string.");let n=an.getInstance();P(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function db(r){if(r.indexOf(_m)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${an.getSchemes().join(",")}`);return{scheme:r.split(_m)[0],path:r.split(_m)[1]}}async function s2(r,e,t=!1){P(r!==e,()=>`Old path and new path are the same: '${r}'`);let n=Mt.getLoadHandlers(r);P(n.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),P(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${r}.`);let o=n[0],s=Mt.getSaveHandlers(e);P(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),P(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${e}.`);let i=s[0],a=db(r).scheme,u=db(r).path,p=a===db(r).scheme,l=await o.load();t&&p&&await an.getManager(a).removeModel(u);let m=await i.save(l);return t&&!p&&await an.getManager(a).removeModel(u),m.modelArtifactsInfo}async function a2(){let r=an.getSchemes(),e={};for(let t of r){let n=await an.getManager(t).listModels();for(let o in n){let s=t+_m+o;e[s]=n[o]}}return e}async function i2(r){let e=db(r);return an.getManager(e.scheme).removeModel(e.path)}async function u2(r,e){return s2(r,e,!1)}async function p2(r,e){return s2(r,e,!0)}var l2=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if($().get("IS_BROWSER")){$().setPlatform("browser",new l2);try{an.registerManager(ru.URL_SCHEME,new oC)}catch{}try{an.registerManager(eu.URL_SCHEME,new nC)}catch{}}var i6={importFetch:()=>m2()},sC;var d2=class{constructor(){this.util=c2(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return $().global.fetch!=null?$().global.fetch(e,t):(sC==null&&(sC=i6.importFetch()),sC(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};$().get("IS_NODE")&&!$().get("IS_BROWSER")&&$().setPlatform("node",new d2);function ke(r,e="float32",t){return e=e||"float32",ld(r),new gt(r,e,t)}function u6(r,e){let t=S(r,"x","cast");if(!FI(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:t},o={dtype:e};return D.runKernel(Gn,n,o)}var J=w({cast_:u6});function p6(r){let t={x:S(r,"x","clone","string_or_numeric")};return D.runKernel(Wn,t)}var wn=w({clone_:p6});function aC(r,e=!1){console.log(r.toString(e))}XI();var l6={buffer:ke,cast:J,clone:wn,print:aC};R0(l6);var Ur={};je(Ur,{browserFiles:()=>g2,browserHTTPRequest:()=>T2,concatenateArrayBuffers:()=>Fm,copyModel:()=>u2,decodeWeights:()=>mb,encodeWeights:()=>H0,fromMemory:()=>I2,getLoadHandlers:()=>Z0,getModelArtifactsForJSON:()=>Rm,getModelArtifactsInfoForJSON:()=>si,getSaveHandlers:()=>Q0,http:()=>bb,isHTTPScheme:()=>gb,listModels:()=>a2,loadWeights:()=>b2,moveModel:()=>p2,registerLoadRouter:()=>Y0,registerSaveRouter:()=>X0,removeModel:()=>i2,weightsLoaderFactory:()=>pC,withSaveHandler:()=>C2});var m6="model",c6=".json",d6=".weights.bin";function f2(r){return new Promise(e=>setTimeout(e)).then(r)}var fb=class{constructor(e){if(!$().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(fb.URL_SCHEME)&&(e=e.slice(fb.URL_SCHEME.length)),(e==null||e.length===0)&&(e=m6),this.modelJsonFileName=e+c6,this.weightDataFileName=e+d6}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=cb(e,n),s=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=s,await f2(()=>i.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let a=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;a.download=this.weightDataFileName,a.href=t,await f2(()=>a.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:si(e)}}}},kd=fb;kd.URL_SCHEME="downloads://";var h2=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=o=>{let s=JSON.parse(o.target.result),i=s.modelTopology;if(i==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:i});return}let u=Rm(s,p=>this.loadWeights(p));e(u)},n.onerror=o=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let i of e)t.push(...i.weights),n.push(...i.paths);let o=this.checkManifestAndWeightFiles(e),s=n.map(i=>this.loadWeightsFile(i,o[i]));return Promise.all(s).then(i=>[t,Fm(i)])}loadWeightsFile(e,t){return new Promise((n,o)=>{let s=new FileReader;s.onload=i=>{let a=i.target.result;n(a)},s.onerror=i=>o(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(s=>JI(s.name)),o={};for(let s of e)s.paths.forEach(i=>{let a=JI(i);if(t.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),n.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);o[i]=this.weightsFiles[n.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return o}},f6=r=>$().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(kd.URL_SCHEME)?h6(r.slice(kd.URL_SCHEME.length)):null;Mt.registerSaveRouter(f6);function h6(r="model"){return new kd(r)}function g2(r){return new h2(r)}function iC(r,e,t,n){i(r),t=t??0,n=n??1,a(t,n);let o=0,s=u=>(u.then(p=>{let l=t+ ++o/r.length*(n-t);return e(l),p}),u);function i(u){P(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function a(u,p){P(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),P(p>=0&&p<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${p}`),P(p>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${p}`)}return Promise.all(r.map(s))}async function uC(r,e){e==null&&(e={});let t=e.fetchFunc==null?$().platform.fetch:e.fetchFunc,n=r.map(m=>t(m,e.requestInit,{isBinary:!0})),o=0,s=.5,a=(e.onProgress==null?await Promise.all(n):await iC(n,e.onProgress,o,s)).map(m=>m.arrayBuffer()),u=.5,p=1;return e.onProgress==null?await Promise.all(a):await iC(a,e.onProgress,u,p)}async function b2(r,e="",t,n){return pC(i=>uC(i,{requestInit:n}))(r,e,t)}function pC(r){return async(e,t="",n)=>{let o=e.map(()=>!1),s={},i=n!=null?n.map(()=>!1):[],a=[];if(e.forEach((d,f)=>{let h=0;d.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,T=Cd[y]*rt(g.shape),x=()=>{o[f]=!0,s[f]==null&&(s[f]=[]),s[f].push({manifestEntry:g,groupOffset:h,sizeBytes:T})};n!=null?n.forEach((I,k)=>{I===g.name&&(x(),i[k]=!0)}):x(),a.push(g.name),h+=T})}),!i.every(d=>d)){let d=n.filter((f,h)=>!i[h]);throw new Error(`Could not find weights in manifest with names: ${d.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}let u=o.reduce((d,f,h)=>(f&&d.push(h),d),[]),p=[];u.forEach(d=>{e[d].paths.forEach(f=>{let h=t+(t.endsWith("/")?"":"/")+f;p.push(h)})});let l=await r(p),m={},c=0;return u.forEach(d=>{let f=e[d].paths.length,h=0;for(let I=0;I<f;I++)h+=l[c+I].byteLength;let g=new ArrayBuffer(h),y=new Uint8Array(g),T=0;for(let I=0;I<f;I++){let k=new Uint8Array(l[c+I]);y.set(k,T),T+=k.byteLength}s[d].forEach(I=>{let k=g.slice(I.groupOffset,I.groupOffset+I.sizeBytes),N=mb(k,[I.manifestEntry]);for(let E in N)m[E]=N[E]}),c+=f}),m}}var g6="application/octet-stream",b6="application/json",hb=class{constructor(e,t){this.DEFAULT_METHOD="POST";if(t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(P(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=$().platform.fetch,P(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&P(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],o=cb(e,n);t.body.append("model.json",new Blob([JSON.stringify(o)],{type:b6}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:g6}),"model.weights.bin");let s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:si(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}let n=t.modelTopology,o=t.weightsManifest;if(n==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Rm(t,s=>this.loadWeights(s))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,o]=y6(t),s=this.weightPathPrefix||n,i=[];for(let l of e)i.push(...l.weights);let a=[],u=[];for(let l of e)for(let m of l.paths)this.weightUrlConverter!=null?u.push(this.weightUrlConverter(m)):a.push(s+m+o);this.weightUrlConverter&&a.push(...await Promise.all(u));let p=await uC(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,Fm(p)]}};hb.URL_SCHEME_REGEX=/^https?:\/\//;function y6(r){let e=r.lastIndexOf("/"),t=r.lastIndexOf("?"),n=r.substring(0,e),o=t>e?r.substring(t):"";return[n+"/",o]}function gb(r){return r.match(hb.URL_SCHEME_REGEX)!=null}var y2=(r,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(r)?t=r.every(n=>gb(n)):t=gb(r),t)return bb(r,e)}return null};Mt.registerSaveRouter(y2);Mt.registerLoadRouter(y2);function bb(r,e){return new hb(r,e)}function T2(r,e){return bb(r,e)}var yb=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},x2=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function I2(r,e,t,n){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new yb(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new yb({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new yb({modelTopology:r,weightSpecs:e,weightData:t,trainingConfig:n}))}function C2(r){return new x2(r)}var S2={};je(S2,{confusionMatrix:()=>k2});function T6(r,e,t=!1,n=!1){let o=S(r,"a","matMul"),s=S(e,"b","matMul");[o,s]=Ye(o,s);let i={a:o,b:s},a={transposeA:t,transposeB:n};return D.runKernel(uo,i,a)}var Ke=w({matMul_:T6});function x6(r,e,t=1,n=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);let s={indices:S(r,"indices","oneHot","int32")},i={depth:e,onValue:t,offValue:n};return D.runKernel(ha,s,i)}var nu=w({oneHot_:x6});function I6(r,e){let t=S(r,"x","transpose");if(e==null&&(e=t.shape.map((s,i)=>i).reverse()),P(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of perm ${e}.`),e.forEach(s=>{P(s>=0&&s<t.rank,()=>`All entries in 'perm' must be between 0 and ${t.rank-1} but got ${e}`)}),t.rank<=1)return t.clone();let n={x:t},o={perm:e};return D.runKernel(jo,n,o)}var He=w({transpose_:I6});function C6(r,e,t){let n=S(r,"labels","confusionMatrix"),o=S(e,"predictions","confusionMatrix");P(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),P(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),P(o.rank===1,()=>`Expected the rank of predictions to be 1, but got ${o.rank}`),P(n.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),P(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);let s=nu(J(n,"int32"),t),i=nu(J(o,"int32"),t),a=He(s),u=Ke(a,i);return J(u,"int32")}var k2=w({confusionMatrix_:C6});var wr={};je(wr,{assertAndGetBroadcastShape:()=>Ge,getBroadcastDims:()=>v2,getReductionAxes:()=>Ct});function v2(r,e){let t=r.length,n=[];for(let o=0;o<t;o++){let s=t-1-o,i=r[s]||1;(e[e.length-1-o]||1)>1&&i===1&&n.unshift(s)}return n}function Ct(r,e){let t=[];for(let n=0;n<e.length;n++){let o=r[r.length-n-1],s=e.length-n-1,i=e[s];(o==null||o===1&&i>1)&&t.unshift(s)}return t}function Ge(r,e){let t=[],n=Math.max(r.length,e.length);for(let o=0;o<n;o++){let s=r[r.length-o-1];s==null&&(s=1);let i=e[e.length-o-1];if(i==null&&(i=1),s===1)t.unshift(i);else if(i===1)t.unshift(s);else if(s!==i){let a=`Operands could not be broadcast together with shapes ${r} and ${e}.`;throw Error(a)}else t.unshift(s)}return t}var Tb={};je(Tb,{fromPixels:()=>D6,fromPixelsAsync:()=>w6,toPixels:()=>N6});function lC(r,e,t){if(oo(r),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=Gr(r,t);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return sn(r,e,n,t)}var Lp;function A2(r,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,n=!1,o=!1,s=!1,i=!1,a=!1;if(r.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&r instanceof ImageData)n=!0;else if(typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement)s=!0;else if(r.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&r instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(o&&o&&r.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(gd(Np,D.backendName)!=null){let f={pixels:r},h={numChannels:e};return D.runKernel(Np,f,h)}let[p,l]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],m;if(i)m=r.getContext("2d").getImageData(0,0,p,l).data;else if(n||t)m=r.data;else if(s||o||a){if(Lp==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Lp=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Lp=document.createElement("canvas").getContext("2d");Lp.canvas.width=p,Lp.canvas.height=l,Lp.drawImage(r,0,0,p,l),m=Lp.getImageData(0,0,p,l).data}let c;if(e===4)c=new Int32Array(m);else{let f=p*l;c=new Int32Array(f*e);for(let h=0;h<f;h++)for(let g=0;g<e;++g)c[h*e+g]=m[h*4+g]}return lC(c,[l,p,e],"int32")}function k6(r){return r!=null&&r.data instanceof Uint8Array}function S6(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function v6(r){return r!=null&&r.width!==0&&r.height!==0}function A6(r){return S6()&&!(r instanceof ImageBitmap)&&v6(r)&&!k6(r)}async function w6(r,e=3){let t=null;if($().getBool("WRAP_TO_IMAGEBITMAP")&&A6(r)){let n;try{n=await createImageBitmap(r,{premultiplyAlpha:"none"})}catch{n=null}n!=null&&n.width===r.width&&n.height===r.height?t=n:t=r}else t=r;return A2(t,e)}async function N6(r,e){let t=S(r,"img","toPixels");if(!(r instanceof Xe)){let p=t;t=J(p,"int32"),p.dispose()}if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);let[n,o]=t.shape.slice(0,2),s=t.rank===2?1:t.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`);let i=await t.data(),a=t.dtype==="float32"?255:1,u=new Uint8ClampedArray(o*n*4);for(let p=0;p<n*o;++p){let l=[0,0,0,255];for(let c=0;c<s;c++){let d=i[p*s+c];if(t.dtype==="float32"){if(d<0||d>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${d}.`)}else if(t.dtype==="int32"&&(d<0||d>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${d}.`);s===1?(l[0]=d*a,l[1]=d*a,l[2]=d*a):l[c]=d*a}let m=p*4;u[m+0]=Math.round(l[0]),u[m+1]=Math.round(l[1]),u[m+2]=Math.round(l[2]),u[m+3]=Math.round(l[3])}if(e!=null){e.width=o,e.height=n;let p=e.getContext("2d"),l=new ImageData(u,o,n);p.putImageData(l,0,0)}return t!==r&&t.dispose(),u}var D6=w({fromPixels_:A2});var xb={};je(xb,{prepareAndValidate:()=>w2});function w2(r,e){let t=r.shape.length,n=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[n-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[n-1]} vs. ${t}`);if(rt(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let o=e.shape,s=o[o.length-1],i=1;for(let m=0;m<o.length-1;++m)i*=o[m];let a=r.shape,u=o.slice();u.pop();let p=1;for(let m=s;m<t;++m)p*=a[m],u.push(a[m]);let l=[...Qa(r.shape).map(m=>m/p),1].slice(0,s);return[u,i,p,l]}var Sd={};je(Sd,{calculateShapes:()=>N2,validateInput:()=>Ib,validateUpdateShape:()=>mC});function mC(r,e,t){let n=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${r}, sliceDim: ${n}, and batchDim: ${o}.`;if(t.rank<o)throw new Error(s+` update.rank < ${o}. `);if(r.length<n+(t.rank-o))throw new Error(s+` Output shape length < ${n+(t.rank-o)}`);if(t.rank!==o+r.length-n)throw new Error(s+` update.rank != ${o+r.length-n}`);for(let i=0;i<o;++i)if(t.shape[i]!==e.shape[i])throw new Error(s+` updates.shape[${i}] (${t.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<t.rank-o;++i)if(t.shape[i+o]!==r[i+n])throw new Error(s+` updates.shape[${i+o}] (${t.shape[i+o]}) != shape[${i+o}] (${r[i+o]})`)}function Ib(r,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}mC(t,e,r)}function N2(r,e,t){let n=e.shape.length,o=n>1?e.shape[n-1]:1,s=t.length,i=1;for(let m=o;m<s;++m)i*=t[m];let a=o<1?1:o,u=rt(e.shape)/a,p=[...Qa(t.slice(0,o)),1],l=rt(t);return{sliceRank:o,numUpdates:u,sliceSize:i,strides:p,outputSize:l}}var yt={};je(yt,{assertParamsValid:()=>E6,computeFlatOffset:()=>_6,computeOutShape:()=>F6,getNormalizedAxes:()=>R6,isSliceContinous:()=>L6,maskToAxes:()=>M6,parseSliceParams:()=>dC,sliceInfo:()=>B6,startForAxis:()=>_2,startIndicesWithElidedDims:()=>F2,stopForAxis:()=>B2,stopIndicesWithElidedDims:()=>R2,stridesForAxis:()=>L2,stridesWithElidedDims:()=>P2});var cC=-2,P6=-1;function E6(r,e,t){let n=r.shape.length;P(n===e.length,()=>`Error in slice${n}D: Length of begin ${e} must match the rank of the array (${n}).`),P(n===t.length,()=>`Error in slice${n}D: Length of size ${t} must match the rank of the array (${n}).`);for(let o=0;o<n;++o)P(e[o]+t[o]<=r.shape[o],()=>`Error in slice${n}D: begin[${o}] + size[${o}] (${e[o]+t[o]}) would overflow input.shape[${o}] (${r.shape[o]})`)}function M6(r){let e=[],t=0;for(;r>0;)r&1&&e.push(t),r/=2,t++;return e}function F6(r,e,t){let n=[];for(let o=0;o<r.length;o++)n[o]=Math.ceil((e[o]-r[o])/t[o]);return n}function P2(r,e,t,n){let o=[...r];for(let s=o.length;s<n.length;s++)o.push(1);for(let s=0;s<t;s++)s===0?o[e]=1:(o.splice(e,0,1),o.pop());return o}function E2(r,e,t){return t<=r?t:t-(e-1)}function M2(r,e){let t=[];for(let n=0;n<r;n++)t.push(e+n);return t}function R6(r,e,t,n,o,s,i,a,u){let p=r.length,l=new Array(p),m=new Array(p),c=new Array(p);if(e.length&&t>0){let d=e[0],f=t+1;l=F2(i,d,f,n,r),m=R2(a,d,f,o,r),c=P2(s,d,f,r)}else for(let d=0;d<p;d++)l[d]=_2(i,n,s,r,d,u),m[d]=B2(a,o,s,r,d,u),c[d]=L2(s,d,u);return{begin:l,end:m,strides:c}}function F2(r,e,t,n,o){let s=[...o],i=M2(t,e);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{let u=E2(e,t,a),p=n[u];r&1<<u&&(p=0),s[a]=p}return s}function R2(r,e,t,n,o){let s=[...o],i=M2(t,e);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{let u=E2(e,t,a),p=n[u];r&1<<u&&(p=Number.MAX_SAFE_INTEGER),s[a]=p}for(let a=0;a<s.length;a++){let u=o[a];s[a]<0&&(s[a]+=u),s[a]=Zl(0,s[a],o[a])}return s}function L2(r,e,t){let n=r[e];return(t&1<<e||n==null)&&(n=1),n}function _2(r,e,t,n,o,s){let i=e[o],a=t[o]||1;(r&1<<o||s&1<<o||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let u=n[o];return i<0&&(i+=u),i=Zl(0,i,u-1),i}function B2(r,e,t,n,o,s){let i=e[o],a=t[o]||1;(r&1<<o||s&1<<o||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let u=n[o];return i<0&&(i+=u),a>0?i=Zl(0,i,u):i=Zl(-1,i,u-1),i}function L6(r,e,t){let n=t.length;for(let o=0;o<t.length;o++)if(t[o]>1){n=o;break}for(let o=n+1;o<t.length;o++)if(e[o]>0||t[o]!==r[o])return!1;return!0}function _6(r,e){let t=r.length>0?r[r.length-1]:1;for(let n=0;n<r.length-1;n++)t+=r[n]*e[n];return t}function dC(r,e,t){let n,o=r.shape.length;typeof e=="number"?n=[e,...new Array(o-1).fill(0)]:e.length<o?n=e.concat(new Array(o-e.length).fill(0)):n=e.slice(),n.forEach(i=>{P(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return t==null?s=new Array(o).fill(-1):typeof t=="number"?s=[t,...new Array(o-1).fill(-1)]:t.length<o?s=t.concat(new Array(o-t.length).fill(-1)):s=t,s=s.map((i,a)=>i>=0?i:(P(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),r.shape[a]-n[a])),[n,s]}function B6(r,e,t,n,o,s,i,a,u){let p;if(n==null?(p=new Array(e.length),p.fill(1)):p=n,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1,m={dims:p.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:p.slice(),beginMask:o,endMask:s,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:u};for(let x=0;x<m.dims;x++)l&&(1<<x&a)!==0&&m.numAddAxisAfterEllipsis++,1<<x&i&&(l=!0);l||(m.ellipsisMask|=1<<m.dims,m.dims++);let c={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};$6(m,c);let d=!0,f=!0,h=!0,g=[],y=[];for(let x=0;x<r.length;++x){if(c.strides[x]===0)throw Error(`strides[${x}] must be non-zero`);let I=!!(c.shrinkAxisMask&1<<x),k=r[x];if(k===-1){g.push(I?1:-1);continue}let N=[c.beginMask&1<<x,c.endMask&1<<x],E=[c.strides[x]>0?0:-1,c.strides[x]>0?k:k-1];if(I&&c.strides[x]<=0)throw Error("only stride 1 allowed on non-range indexing.");h=h&&c.strides[x]===1;let M=!!(c.beginMask&1<<x&&c.endMask&1<<x);if(c.beginValid&&c.endValid){if(I){let W=c.begin[x]<0?k+c.begin[x]:c.begin[x];if(c.begin[x]=W,c.end[x]=c.begin[x]+1,W<0||W>=k)throw Error(`slice index ${c.begin[x]} of dimension ${x} out of bounds.`)}else c.begin[x]=D2(c.begin[x],0,c.strides[x],k,N,E),c.end[x]=D2(c.end[x],1,c.strides[x],k,N,E);let U=c.strides[x]===1&&c.begin[x]===0&&c.end[x]===k;d=d&&U,f=f&&(x===0&&c.strides[x]===1||U)}else d=d&&c.strides[x]===1&&M,f=f&&(x===0&&c.strides[x]===1||M);let R,B=!1;if(c.beginValid&&c.endValid?(R=c.end[x]-c.begin[x],B=!0):I?(R=1,B=!0):M&&k>=0&&(c.strides[x]<0?R=-k:R=k,B=!0),B){let U;R===0||R<0!=c.strides[x]<0?U=0:U=Math.trunc(R/c.strides[x])+(R%c.strides[x]!==0?1:0),g.push(U)}else g.push(-1)}for(let x=0;x<c.finalShapeGatherIndices.length;++x){let I=c.finalShapeGatherIndices[x];I>=0?y.push(g[I]):I===cC&&y.push(1)}return{finalShapeSparse:y.filter((x,I)=>c.finalShapeGatherIndices[I]!==cC),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:h,begin:c.begin,end:c.end,strides:c.strides}}function $6(r,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=r.begin!=null,e.endValid=r.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let n=0;n<r.dims;n++)if(1<<n&r.ellipsisMask){let o=Math.min(e.dims-(r.dims-n)+1+r.numAddAxisAfterEllipsis,e.dims);for(;t<o;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=n}else if(1<<n&r.newAxisMask)e.finalShapeGatherIndices.push(cC),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);r.begin!=null&&(e.begin[t]=r.begin[n]),r.end!=null&&(e.end[t]=r.end[n]),e.strides[t]=r.strides[n],r.beginMask&1<<n&&(e.beginMask|=1<<t),r.endMask&1<<n&&(e.endMask|=1<<t),r.shrinkAxisMask&1<<n?(e.finalShapeGatherIndices.push(P6),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(n)),e.inputShapeGatherIndicesSparse[t]=n,t++}}function D2(r,e,t,n,o,s){if(o[e])return t>0?s[e]:s[e+1&1];{let i=r<0?n+r:r;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var re={};je(re,{Serializable:()=>Cb,SerializationMap:()=>ou,registerClass:()=>Nn});var Cb=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},ou=class{constructor(){this.classNameMap={}}static getMap(){return ou.instance==null&&(ou.instance=new ou),ou.instance}static register(e){ou.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Nn(r){P(r.className!=null,()=>"Class being registered does not have the static className property defined."),P(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),P(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),ou.register(r)}var G2={};je(G2,{TEST_EPSILON_FLOAT16:()=>$2,encodeStrings:()=>z2,expectArrayBuffersEqual:()=>K6,expectArraysClose:()=>z6,expectArraysEqual:()=>U6,expectNumbersClose:()=>O2,expectPromiseToFail:()=>G6,expectValuesInRange:()=>W6,testEpsilon:()=>kb});var O6=.001,$2=.1;function z6(r,e,t){return t==null&&(t=kb()),fC(r,e,(n,o)=>hC(n,o,t))}function kb(){return D.backend.floatPrecision()===32?O6:$2}function fC(r,e,t){let n=!0;if((xr(r)||xr(e))&&(n=!1),xr(r)&&xr(e)&&(n=!0),n){let i=r.constructor.name,a=e.constructor.name;if(i!==a)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${a}`)}if(Array.isArray(r)&&Array.isArray(e)){let i=Gr(r),a=Gr(e);if(!zn(i,a))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${a}]`)}let o=xr(r)?r:Js(r),s=xr(e)?e:Js(e);if(o.length!==s.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${s.length}.
Actual:   ${o}.
Expected: ${s}.`);for(let i=0;i<s.length;++i){let a=o[i],u=s[i];if(!t(a,u))throw new Error(`Arrays differ: actual[${i}] = ${a}, expected[${i}] = ${u}.
Actual:   ${o}.
Expected: ${s}.`)}}function G6(r,e){r().then(()=>e.fail(),()=>e())}function U6(r,e){let t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return ea(r)||ea(r[0])||ea(e)||ea(e[0])?fC(r,t,(n,o)=>n==o):fC(r,e,(n,o)=>hC(n,o,0))}function O2(r,e,t){if(t==null&&(t=kb()),!hC(r,e,t))throw new Error(`Numbers differ: actual === ${r}, expected === ${e}`)}function hC(r,e,t){return!isFinite(r)&&!isFinite(e)?!0:!(isNaN(r)||isNaN(e)||Math.abs(r-e)>t)}function W6(r,e,t){for(let n=0;n<r.length;n++)if(r[n]<e||r[n]>t)throw new Error(`Value out of range:${r[n]} low: ${e}, high: ${t}`)}function K6(r,e){let t=new Float32Array(r),n=new Float32Array(e);if(t.length!==n.length)throw new Error(`Expected ArrayBuffer to be of length ${n.length}, but it was ${t.length}`);for(let o=0;o<n.length;o++)if(t[o]!==n[o])throw new Error(`Expected ArrayBuffer value at ${o} to be ${n[o]} but got ${t[o]} instead`)}function z2(r){for(let e=0;e<r.length;e++){let t=r[e];Array.isArray(t)?z2(t):r[e]=Yu(t)}return r}var V6="0.0.0";function yye(){$().set("PROD",!0)}function Tye(){$().set("DEBUG",!0)}function xye(){$().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function gC(r){$().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}L0(gC);function Iye(){D.disposeVariables()}function qn(){return D}function vd(){return D.memory()}function Cye(r){return D.profile(r)}function G(r,e){return D.tidy(r,e)}function Fe(r){Id(r).forEach(t=>t.dispose())}function Wt(r){return D.keep(r)}function kye(r){return D.time(r)}function H6(r){return D.setBackend(r)}function Sye(){return D.ready()}function vye(){return D.backendName}function Aye(r){D.removeBackend(r)}function wye(r){return D.findBackend(r)}function Nye(r){return D.findBackendFactory(r)}function Ju(r,e,t=1){return D.registerBackend(r,e,t)}function U2(){return D.backend}function Dye(r,e){$().setPlatform(r,e)}function q6(r,e){let t=S(r,"a","add"),n=S(e,"b","add");[t,n]=Ye(t,n);let o={a:t,b:n};return D.runKernel(vn,o)}var X=w({add_:q6});function j6(r,e){let t=S(r,"a","floorDiv"),n=S(e,"b","floorDiv");[t,n]=Ye(t,n);let o={a:t,b:n};return D.runKernel(xo,o)}var Ad=w({floorDiv_:j6});function X6(r,e){let t=S(r,"a","div"),n=S(e,"b","div");if([t,n]=Ye(t,n),t.dtype==="int32"&&n.dtype==="int32")return Ad(t,n);let o={a:t,b:n},s={};return D.runKernel(go,o,s)}var me=w({div_:X6});function Y6(r,e){let t=S(r,"a","mul"),n=S(e,"b","mul");[t,n]=Ye(t,n);let o={a:t,b:n};return D.runKernel(Mo,o)}var L=w({mul_:Y6});function Q6(r){let e=S(r,"x","abs");if(e.dtype==="complex64"){let t={x:e};return D.runKernel(Lu,t)}else{let t={x:e};return D.runKernel(ls,t)}}var _t=w({abs_:Q6});function Z6(r){let t={x:S(r,"x","acos")};return D.runKernel(Di,t)}var bC=w({acos_:Z6});function J6(r){let t={x:S(r,"x","acosh")};return D.runKernel(Pi,t)}var yC=w({acosh_:J6});function ej(r){P(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),P(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let e=r.map((o,s)=>S(o,`tensors${s}`,"addN")),t=e[0];e.forEach(o=>{if(o.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(o=>{if(!zn(o.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=e;return D.runKernel(so,n)}var TC=w({addN_:ej});function tj(r,e=null,t=!1){let o={x:S(r,"x","all","bool")},s={axis:e,keepDims:t};return D.runKernel(Ei,o,s)}var wd=w({all_:tj});function rj(r,e=null,t=!1){let o={x:S(r,"x","any","bool")},s={axis:e,keepDims:t};return D.runKernel(Mi,o,s)}var Bm=w({any_:rj});function nj(r,e=0){let n={x:S(r,"x","argMax")},o={axis:e};return D.runKernel(ao,n,o)}var su=w({argMax_:nj});function oj(r,e=0){let n={x:S(r,"x","argMin")},o={axis:e};return D.runKernel(Za,n,o)}var xC=w({argMin_:oj});function sj(r){let t={x:S(r,"x","asin")};return D.runKernel(Fi,t)}var IC=w({asin_:sj});function aj(r){let t={x:S(r,"x","asinh")};return D.runKernel(Ri,t)}var CC=w({asinh_:aj});function ij(r){let t={x:S(r,"x","atan")};return D.runKernel(Li,t)}var kC=w({atan_:ij});function uj(r,e){let t=S(r,"a","atan2"),n=S(e,"b","atan2");[t,n]=Ye(t,n);let o={a:t,b:n};return D.runKernel(Bi,o)}var SC=w({atan2_:uj});function pj(r){let t={x:S(r,"x","atanh")};return D.runKernel(_i,t)}var vC=w({atanh_:pj});function lj(r,e,t,n,o="NHWC",s){let i=r[3],a=[...e,i],u=K2(o);return Bp(r,a,t,s,n,null,null,u)}function wC(r,e,t,n,o,s,i="channelsLast"){let[a,u]=Sb(e),p;if(i==="channelsLast")p=[a,u,r[3],r[3]];else if(i==="channelsFirst")p=[a,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${i}`);return Bp(r,p,t,n,o,s,!1,i)}function mj(r,e,t,n,o,s,i="NDHWC"){let[a,u,p]=AC(e),l,m;if(i==="NDHWC")m="channelsLast",l=[a,u,p,r[4],r[4]];else if(i==="NCDHW")m="channelsFirst",l=[a,u,p,r[1],r[1]];else throw new Error(`Unknown dataFormat ${i}`);return W2(r,l,t,n,o,!1,m,s)}function Bp(r,e,t,n,o,s,i=!1,a="channelsLast"){let[u,p,l,m]=[-1,-1,-1,-1];if(a==="channelsLast")[u,p,l,m]=r;else if(a==="channelsFirst")[u,m,p,l]=r;else throw new Error(`Unknown dataFormat ${a}`);let[c,d,,f]=e,[h,g]=Sb(t),[y,T]=Sb(n),x=$m(c,y),I=$m(d,T),{padInfo:k,outHeight:N,outWidth:E}=fj(o,p,l,h,g,x,I,s,a),M=i?f*m:f,R;return a==="channelsFirst"?R=[u,M,N,E]:a==="channelsLast"&&(R=[u,N,E,M]),{batchSize:u,dataFormat:a,inHeight:p,inWidth:l,inChannels:m,outHeight:N,outWidth:E,outChannels:M,padInfo:k,strideHeight:h,strideWidth:g,filterHeight:c,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:I,dilationHeight:y,dilationWidth:T,inShape:r,outShape:R,filterShape:e}}function W2(r,e,t,n,o,s=!1,i="channelsLast",a){let[u,p,l,m,c]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[u,p,l,m,c]=r;else if(i==="channelsFirst")[u,c,p,l,m]=r;else throw new Error(`Unknown dataFormat ${i}`);let[d,f,h,,g]=e,[y,T,x]=AC(t),[I,k,N]=AC(n),E=$m(d,I),M=$m(f,k),R=$m(h,N),{padInfo:B,outDepth:U,outHeight:W,outWidth:K}=hj(o,p,l,m,y,T,x,E,M,R,a),H=s?g*c:g,V;return i==="channelsFirst"?V=[u,H,U,W,K]:i==="channelsLast"&&(V=[u,U,W,K,H]),{batchSize:u,dataFormat:i,inDepth:p,inHeight:l,inWidth:m,inChannels:c,outDepth:U,outHeight:W,outWidth:K,outChannels:H,padInfo:B,strideDepth:y,strideHeight:T,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:h,effectiveFilterDepth:E,effectiveFilterHeight:M,effectiveFilterWidth:R,dilationDepth:I,dilationHeight:k,dilationWidth:N,inShape:r,outShape:V,filterShape:e}}function cj(r,e,t,n,o){n==null&&(n=NC(r,e,t));let s=r[0],i=r[1],a=_p((s-e+2*n)/t+1,o),u=_p((i-e+2*n)/t+1,o);return[a,u]}function dj(r,e,t,n,o,s){o==null&&(o=NC(r,e,n));let i=r[0],a=r[1],u=r[2],p=_p((i-e+2*o)/n+1,s),l=_p((a-e+2*o)/n+1,s),m=_p((u-e+2*o)/n+1,s);return[p,l,m,t]}function NC(r,e,t,n=1){let o=$m(e,n);return Math.floor((r[0]*(t-1)-t+o)/2)}function Sb(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function AC(r){return typeof r=="number"?[r,r,r]:r}function $m(r,e){return e<=1?r:r+(r-1)*(e-1)}function fj(r,e,t,n,o,s,i,a,u){let p,l,m;if(typeof r=="number"){p={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let d=cj([e,t],s,n,r,a);l=d[0],m=d[1]}else if(r==="same"){l=Math.ceil(e/n),m=Math.ceil(t/o);let c=Math.max(0,(l-1)*n+s-e),d=Math.max(0,(m-1)*o+i-t),f=Math.floor(c/2),h=c-f,g=Math.floor(d/2),y=d-g;p={top:f,bottom:h,left:g,right:y,type:"SAME"}}else if(r==="valid")p={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((e-s+1)/n),m=Math.ceil((t-i+1)/o);else if(typeof r=="object"){let c=u==="channelsLast"?r[1][0]:r[2][0],d=u==="channelsLast"?r[1][1]:r[2][1],f=u==="channelsLast"?r[2][0]:r[3][0],h=u==="channelsLast"?r[2][1]:r[3][1];p={top:c,bottom:d,left:f,right:h,type:c===0&&d===0&&f===0&&h===0?"VALID":"EXPLICIT"},l=_p((e-s+c+d)/n+1,a),m=_p((t-i+f+h)/o+1,a)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:p,outHeight:l,outWidth:m}}function hj(r,e,t,n,o,s,i,a,u,p,l){let m,c,d,f;if(typeof r=="number"){m={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=dj([e,t,n,1],a,1,o,r,l);c=g[0],d=g[1],f=g[2]}else if(r==="same"){c=Math.ceil(e/o),d=Math.ceil(t/s),f=Math.ceil(n/i);let h=(c-1)*o+a-e,g=(d-1)*s+u-t,y=(f-1)*i+p-n,T=Math.floor(h/2),x=h-T,I=Math.floor(g/2),k=g-I,N=Math.floor(y/2),E=y-N;m={top:I,bottom:k,left:N,right:E,front:T,back:x,type:"SAME"}}else if(r==="valid")m={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},c=Math.ceil((e-a+1)/o),d=Math.ceil((t-u+1)/s),f=Math.ceil((n-p+1)/i);else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:m,outDepth:c,outHeight:d,outWidth:f}}function _p(r,e){if(!e)return Math.trunc(r);switch(e){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${e}`)}}function Xo(r){let[e,t,n]=Sb(r);return e===1&&t===1&&n===1}function Rr(r,e){return Xo(r)||Xo(e)}function K2(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function Dt(r,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")P(Ni(e),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(n=>{n.forEach(o=>{P(Ni(o),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${o}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${e}`)}}function gj(r,e){let n={x:S(r,"x","reshape","string_or_numeric")},o={shape:e};return D.runKernel(ys,n,o)}var _=w({reshape_:gj});function bj(r,e,t,n,o){let s=S(r,"x","avgPool","float32"),i=1;P(Rr(t,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);let a=s,u=!1;s.rank===3&&(u=!0,a=_(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),Dt("avgPool",n,o);let p={x:a},l={filterSize:e,strides:t,pad:n,dimRoundingMode:o},m=D.runKernel(io,p,l);return m=J(m,s.dtype),u?_(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var $p=w({avgPool_:bj});function yj(r,e,t,n,o,s="NDHWC"){let i=S(r,"x","avgPool3d","float32"),a=i,u=!1;i.rank===4&&(u=!0,a=_(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),P(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Dt("avgPool3d",n,o);let p={x:a},l={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},m=D.runKernel(Fu,p,l);return m=J(m,a.dtype),u?_(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Nd=w({avgPool3d_:yj});function Tj(r,e=0){P(r.length>=1,()=>"Pass at least one tensor to concat");let t=Ji(r,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),t.length===1)return wn(t[0]);let n=t,o={axis:e};return D.runKernel(cs,n,o)}var it=w({concat_:Tj});function xj(r){let t={x:S(r,"x","sigmoid","float32")};return D.runKernel(Go,t)}var un=w({sigmoid_:xj});function Ij(r,e,t){let n=S(r,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let o={x:n},s={begin:e,size:t};return D.runKernel(xs,o,s)}var ze=w({slice_:Ij});function Cj(r){let t={x:S(r,"x","tanh","float32")};return D.runKernel(qo,t)}var au=w({tanh_:Cj});function kj(r,e,t,n,o,s){let i=S(r,"forgetBias","basicLSTMCell"),a=S(e,"lstmKernel","basicLSTMCell"),u=S(t,"lstmBias","basicLSTMCell"),p=S(n,"data","basicLSTMCell"),l=S(o,"c","basicLSTMCell"),m=S(s,"h","basicLSTMCell"),c=it([p,m],1),d=Ke(c,a),f=X(d,u),h=f.shape[0],g=f.shape[1]/4,y=[h,g],T=ze(f,[0,0],y),x=ze(f,[0,g],y),I=ze(f,[0,g*2],y),k=ze(f,[0,g*3],y),N=X(L(un(T),au(x)),L(l,un(X(i,I)))),E=L(au(N),un(k));return[N,E]}var Sj=w({basicLSTMCell_:kj});function vj(r,e,t){let n=S(r,"x","batchToSpaceND"),o=e.reduce((a,u)=>a*u);P(n.rank>=1+e.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${e.length}`),P(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),P(n.shape[0]%o===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${o}`);let s={x:n},i={blockShape:e,crops:t};return D.runKernel(ms,s,i)}var Op=w({batchToSpaceND_:vj});function V2(r){let e;return r.rank===0||r.rank===1?e=_(r,[1,1,1,r.size]):r.rank===2?e=_(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?e=_(r,[1,r.shape[0],r.shape[1],r.shape[2]]):e=r,e}function Aj(r,e,t,n,o,s){s==null&&(s=.001);let i=S(r,"x","batchNorm"),a=S(e,"mean","batchNorm"),u=S(t,"variance","batchNorm"),p;o!=null&&(p=S(o,"scale","batchNorm"));let l;n!=null&&(l=S(n,"offset","batchNorm")),P(a.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(l==null||a.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(p==null||a.rank===p.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let c={x:V2(i),scale:p,offset:l,mean:a,variance:u},d={varianceEpsilon:s},f=D.runKernel(Io,c,d);return _(f,i.shape)}var ai=w({batchNorm_:Aj});function wj(r,e,t,n,o,s){let i=S(r,"x","batchNorm"),a=S(e,"mean","batchNorm"),u=S(t,"variance","batchNorm"),p;o!=null&&(p=S(o,"scale","batchNorm"));let l;return n!=null&&(l=S(n,"offset","batchNorm")),P(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),P(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),P(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),p!=null&&P(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${p.rank}.`),l!=null&&P(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),ai(i,a,u,l,p,s)}var DC=w({batchNorm2d_:wj});function Nj(r,e,t,n,o,s){let i=S(r,"x","batchNorm"),a=S(e,"mean","batchNorm"),u=S(t,"variance","batchNorm"),p;o!=null&&(p=S(o,"scale","batchNorm"));let l;return n!=null&&(l=S(n,"offset","batchNorm")),P(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),P(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),P(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),p!=null&&P(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${p.rank}.`),l!=null&&P(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),ai(i,a,u,l,p,s)}var PC=w({batchNorm3d_:Nj});function Dj(r,e,t,n,o,s){let i=S(r,"x","batchNorm"),a=S(e,"mean","batchNorm"),u=S(t,"variance","batchNorm"),p;o!=null&&(p=S(o,"scale","batchNorm"));let l;return n!=null&&(l=S(n,"offset","batchNorm")),P(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),P(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),P(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),p!=null&&P(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${p.rank}.`),l!=null&&P(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),ai(i,a,u,l,p,s)}var EC=w({batchNorm4d_:Dj});function Pj(r,e,t){let n=S(r,"x","bincount"),o=S(e,"weights","bincount");P(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),P(t>=0,()=>`size must be non-negative, but got ${t}.`),P(o.size===n.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${o.shape}.`);let s={x:n,weights:o},i={size:t};return D.runKernel(om,s,i)}var Dd=w({bincount_:Pj});function Ej(r,e){let t=S(r,"s0","broadcastArgs","int32"),n=S(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);let o={s0:t,s1:n};return D.runKernel(sm,o)}var MC=w({broadcastArgs_:Ej});function Mj(r,e){let t=S(r,"broadcastTo","x"),n=t.shape;if(e.some(p=>!(p>0)||p%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){let p=t.shape.slice();for(;p.length<e.length;)p.unshift(1);t=_(t,p)}let o=t.shape,s=Array.from(e);for(let p=e.length-1;p>=0;p--)if(o[p]===e[p])s[p]=1;else if(t.shape[p]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${e}].`);if(s.map((p,l)=>p>1?l:-1).filter(p=>p>=0).length===0)return wn(t);let a={x:t},u={reps:s};return D.runKernel(An,a,u)}var zp=w({broadcastTo_:Mj});function Fj(r){let t={x:S(r,"x","ceil","float32")};return D.runKernel(po,t)}var FC=w({ceil_:Fj});function Rj(r,e,t){let n=S(r,"x","clipByValue");P(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`);let o={x:n},s={clipValueMin:e,clipValueMax:t};return D.runKernel(Un,o,s)}var Lr=w({clipByValue_:Rj});function Lj(r){return it(r,0)}var RC=w({concat1d_:Lj});function _j(r,e){return it(r,e)}var LC=w({concat2d_:_j});function Bj(r,e){return it(r,e)}var _C=w({concat3d_:Bj});function $j(r,e){return it(r,e)}var BC=w({concat4d_:$j});function Oj(r,e,t,n,o="NHWC",s=[1,1],i){let a=S(r,"x","conv2d","float32"),u=S(e,"filter","conv2d","float32"),p=a,l=!1;a.rank===3&&(l=!0,p=_(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(p.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${p.rank}.`),P(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Dt("conv2d",n,i);let m=o==="NHWC"?p.shape[3]:p.shape[1];P(m===u.shape[2],()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${u.shape[2]}.`),P(Rr(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);let c={x:p,filter:u},d={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i},f=D.runKernel(lo,c,d);return l?_(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var jn=w({conv2d_:Oj});function zj(r,e,t,n,o="NWC",s=1,i){let a=S(r,"x","conv1d"),u=S(e,"filter","conv1d"),p=a,l=!1;a.rank===2&&(l=!0,p=_(a,[1,a.shape[0],a.shape[1]])),P(p.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${p.rank}.`),P(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Dt("conv1d",n,i),P(p.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${p.shape[2]}) must match input depth for filter ${u.shape[1]}.`),P(Rr(t,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${s}'`),P(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);let m=_(u,[1,u.shape[0],u.shape[1],u.shape[2]]),c=_(p,[p.shape[0],1,p.shape[1],p.shape[2]]),g=jn(c,m,[1,t],n,"NHWC",[1,s],i);return l?_(g,[g.shape[2],g.shape[3]]):_(g,[g.shape[0],g.shape[2],g.shape[3]])}var Pd=w({conv1d_:zj});function Gj(r,e,t,n,o,s="NHWC",i){P(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let a=r,u=e,p=!1;e.rank===3&&(p=!0,u=_(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,r[0],r[1],r[2]]),P(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),P(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),P(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);let l=s==="NHWC"?a[3]:a[1],m=s==="NHWC"?u.shape[3]:u.shape[1];P(l===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[2]}.`),P(m===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${t.shape[3]}.`),Dt("conv2dDerInput",o,i);let c={dy:u,filter:t},d={strides:n,pad:o,dataFormat:s,dimRoundingMode:i,inputShape:a},f=D.runKernel(mo,c,d);return p?_(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Om=w({conv2DBackpropInput_:Gj});function Uj(r,e,t,n,o,s){let i=S(r,"x","conv2dTranspose"),a=S(e,"filter","conv2dTranspose");return Om(t,i,a,n,o,"NHWC",s)}var Ed=w({conv2dTranspose_:Uj});function Wj(r,e,t,n,o="NDHWC",s=[1,1,1]){let i=S(r,"x","conv3d"),a=S(e,"filter","conv3d"),u=i,p=!1;i.rank===4&&(p=!0,u=_(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),P(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),P(u.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${a.shape[3]}.`),P(Rr(t,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),P(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);let l={x:u,filter:a},m={strides:t,pad:n,dataFormat:o,dilations:s},c=D.runKernel(_u,l,m);return p?_(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Md=w({conv3d_:Wj});function Kj(r,e,t,n,o){P(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let s=r,i=e,a=!1;e.rank===4&&(a=!0,i=_(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let u=s[4],p=i.shape[4];P(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),P(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),P(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),P(u===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[3]}.`),P(p===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${p}) must match output depth for filter ${t.shape[4]}.`);let l={dy:i,filter:t},m={pad:o,strides:n,inputShape:s},c=D.runKernel(um,l,m);return a?_(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var vb=w({conv3DBackpropInput_:Kj});function Vj(r,e,t,n,o){let s=S(r,"x","conv3dTranspose"),i=S(e,"filter","conv3dTranspose");return vb(t,s,i,n,o)}var $C=w({conv3dTranspose_:Vj});function Hj(r){let t={x:S(r,"x","cos","float32")};return D.runKernel(co,t)}var Gp=w({cos_:Hj});function qj(r){let t={x:S(r,"x","cosh","float32")};return D.runKernel(fo,t)}var Fd=w({cosh_:qj});function jj(r,e=0,t=!1,n=!1){let s={x:S(r,"x","cumsum")},i={axis:e,exclusive:t,reverse:n};return D.runKernel(ta,s,i)}var Rd=w({cumsum_:jj});function Xj(r,e,t,n=!1){let o=S(r,"x","denseBincount"),s=S(e,"weights","denseBincount");P(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),P(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),P(t>=0,()=>`size must be non-negative, but got ${t}.`),P(s.size===o.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${s.shape}.`);let i={x:o,weights:s},a={size:t,binaryOutput:n};return D.runKernel(pm,i,a)}var OC=w({denseBincount_:Xj});function Yj(r,e,t="NHWC"){let n=S(r,"x","depthToSpace","float32"),o=t==="NHWC"?n.shape[1]:n.shape[2],s=t==="NHWC"?n.shape[2]:n.shape[3],i=t==="NHWC"?n.shape[3]:n.shape[1];P(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),P(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e}  for depthToSpace with input shape
    ${n.shape}`),P(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e} for depthToSpace with input shape
        ${n.shape}`),P(i%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${n.shape}`);let a={x:n},u={blockSize:e,dataFormat:t};return D.runKernel(na,a,u)}var zC=w({depthToSpace_:Yj});function Qj(r,e,t,n,o="NHWC",s=[1,1],i){let a=S(r,"x","depthwiseConv2d","float32"),u=S(e,"filter","depthwiseConv2d","float32"),p=a,l=!1;a.rank===3&&(l=!0,p=_(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(p.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),P(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`),P(p.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),Dt("depthwiseConv2d",n,i);let m={x:p,filter:u},c={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i},d=D.runKernel(ho,m,c);return l?_(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var iu=w({depthwiseConv2d_:Qj});function Zj(r){let t={x:S(r,"x","diag")};return D.runKernel(cm,t)}var Jj=w({diag_:Zj});function e5(r,e,t,n,o=[1,1],s="NHWC"){let i=S(r,"x","dilation2d"),a=S(e,"filter","dilation2d");P(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),P(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),P(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let u=i,p=!1;i.rank===3&&(u=_(i,[1,i.shape[0],i.shape[1],i.shape[2]]),p=!0);let l={x:u,filter:a},m={strides:t,pad:n,dilations:o},c=D.runKernel(Bu,l,m);return p?_(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var GC=w({dilation2d_:e5});function t5(r,e){let t=S(r,"a","equal","string_or_numeric"),n=S(e,"b","equal","string_or_numeric");[t,n]=Ye(t,n),Ge(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(oa,o)}var Wr=w({equal_:t5});function r5(r,e,t){let n=S(e,"a","where"),o=S(t,"b","where"),s=S(r,"condition","where","bool"),i=Ge(Ge(s.shape,n.shape),o.shape),a=zp(s,i),u=zp(n,i),p=zp(o,i),l={condition:a,t:u,e:p};return D.runKernel(Ts,l)}var Bt=w({where_:r5});function n5(r){let t={x:S(r,"x","zerosLike")};return D.runKernel(Ss,t)}var De=w({zerosLike_:n5});function o5(r,e){let t=S(r,"a","div"),n=S(e,"b","div");[t,n]=Ye(t,n);let o=me(t,n),s=De(o),i=Wr(n,s);return Bt(i,s,o)}var UC=w({divNoNan_:o5});function s5(r,e){let t=S(r,"t1","dot"),n=S(e,"t2","dot");P((t.rank===1||t.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${n.rank}.`);let o=t.rank===1?t.size:t.shape[1],s=n.rank===1?n.size:n.shape[0];if(P(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),t.rank===1&&n.rank===1){let i=_(t,[1,-1]),a=_(n,[-1,1]),u=Ke(i,a);return _(u,[])}else if(t.rank===1&&n.rank===2){let i=_(t,[1,-1]),a=_(n,[n.shape[0],n.shape[1]]),u=Ke(i,a);return _(u,[u.size])}else if(t.rank===2&&n.rank===1){let i=_(n,[-1,1]),a=Ke(t,i);return _(a,[a.size])}else{let i=_(n,[n.shape[0],n.shape[1]]);return Ke(t,i)}}var a5=w({dot_:s5});function i5(r,...e){let t=e.map((o,s)=>S(o,`tensors${s}`,"einsum")),n={equation:r};return D.runKernel($u,t,n)}var WC=w({einsum_:i5});function u5(r){let t={x:S(r,"x","elu","float32")};return D.runKernel(bo,t)}var uu=w({elu_:u5});function p5(r){let e=S(r,"x","erf");P(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=J(e,"float32"));let t={x:e};return D.runKernel($i,t)}var KC=w({erf_:p5});function l5(r){let t={x:S(r,"x","exp")};return D.runKernel(yo,t)}var pr=w({exp_:l5});function m5(r,e=0){let t=S(r,"x","expandDims","string_or_numeric");P(e<=t.rank,()=>"Axis must be <= rank of the tensor");let n={input:t},o={dim:e};return D.runKernel(ds,n,o)}var Nr=w({expandDims_:m5});function c5(r){let t={x:S(r,"x","expm1")};return D.runKernel(sa,t)}var VC=w({expm1_:c5});function d5(r,e){let t=S(r,"x","tile","string_or_numeric");P(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);let n={x:t},o={reps:e};return D.runKernel(An,n,o)}var Kr=w({tile_:d5});function f5(r,e,t,n="float32"){e==null&&(e=r);let o=ke([r,e],n),s=r<=e?r:e;for(let a=0;a<s;++a)o.set(1,a,a);let i=_(o.toTensor(),[r,e]);if(t==null)return i;if(t.length===1)return Kr(Nr(i,0),[t[0],1,1]);if(t.length===2)return Kr(Nr(Nr(i,0),0),[t[0],t[1],1,1]);if(t.length===3)return Kr(Nr(Nr(Nr(i,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}var zm=w({eye_:f5});function Da(r,e,t){let n={shape:r,value:e,dtype:t};return D.runKernel(Ja,{},n)}function h5(r){let t={x:S(r,"x","floor","float32")};return D.runKernel(To,t)}var pu=w({floor_:h5});function g5(r,e,t=0,n=0){let o=S(r,"x","gather"),s=S(e,"indices","gather","int32"),i={x:o,indices:s},a={axis:t,batchDims:n};return D.runKernel(fs,i,a)}var ii=w({gather_:g5});function b5(r,e){let t=S(r,"a","greater","string_or_numeric"),n=S(e,"b","greater","string_or_numeric");[t,n]=Ye(t,n),Ge(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ua,o)}var tr=w({greater_:b5});function y5(r,e){let t=S(r,"a","greaterEqual","string_or_numeric"),n=S(e,"b","greaterEqual","string_or_numeric");[t,n]=Ye(t,n),Ge(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Co,o)}var Qo=w({greaterEqual_:y5});function T5(r){let t={input:S(r,"input","imag")};return D.runKernel(Ou,t)}var Up=w({imag_:T5});function x5(r){let t={x:S(r,"x","isFinite")};return D.runKernel(Oi,t)}var I5=w({isFinite_:x5});function C5(r){let t={x:S(r,"x","isInf")};return D.runKernel(zi,t)}var k5=w({isInf_:C5});function S5(r){let t={x:S(r,"x","isNaN")};return D.runKernel(Gi,t)}var HC=w({isNaN_:S5});function v5(r,e=.2){let n={x:S(r,"x","leakyRelu")},o={alpha:e};return D.runKernel(ko,n,o)}var Wp=w({leakyRelu_:v5});function A5(r,e){let t=S(r,"a","less","string_or_numeric"),n=S(e,"b","less","string_or_numeric");[t,n]=Ye(t,n),Ge(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(pa,o)}var Ld=w({less_:A5});function w5(r,e){let t=S(r,"a","lessEqual","string_or_numeric"),n=S(e,"b","lessEqual","string_or_numeric");[t,n]=Ye(t,n),Ge(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(la,o)}var Zo=w({lessEqual_:w5});function qC(r,e,t){if(t<=0)throw new Error("The number of values should be positive.");let n={start:r,stop:e,num:t};return D.runKernel(gm,{},n)}function N5(r,e=5,t=1,n=1,o=.5){let s=S(r,"x","localResponseNormalization");P(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),P(Ni(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=s,a=!1;s.rank===3&&(a=!0,i=_(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let u={x:i},p={depthRadius:e,bias:t,alpha:n,beta:o},l=D.runKernel(zu,u,p);return a?_(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var jC=w({localResponseNormalization_:N5});function D5(r){let t={x:S(r,"x","log","float32")};return D.runKernel(So,t)}var _r=w({log_:D5});function P5(r){let t={x:S(r,"x","log1p")};return D.runKernel(Ui,t)}var Kp=w({log1p_:P5});function E5(r){return P(Ya(r),()=>"The f passed in grad(f) must be a function"),(e,t)=>{let n=S(e,"x","tf.grad","string_or_numeric"),o=t!=null?S(t,"dy","tf.grad"):null;return D.tidy(()=>{let{value:s,grads:i}=D.gradients(()=>r(n),[n],o);return o!=null&&Gt(s.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),wb(i),i[0]})}}function M5(r){return P(Ya(r),()=>"The f passed in grads(f) must be a function"),(e,t)=>{P(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=Ji(e,"args","tf.grads","string_or_numeric"),o=t!=null?S(t,"dy","tf.grads"):null;return D.tidy(()=>{let{value:s,grads:i}=D.gradients(()=>r(...n),n,o);return o!=null&&Gt(s.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),wb(i),i})}}function F5(r){return P(Ya(r),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{P(e instanceof Xe,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),P(t==null||t instanceof Xe,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:o}=D.gradients(()=>r(e),[e],t);return wb(n),{grad:n[0],value:o}}}function R5(r){return P(Ya(r),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{P(Array.isArray(e)&&e.every(o=>o instanceof Xe),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),P(t==null||t instanceof Xe,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=D.gradients(()=>r(...e),e,t);return t!=null&&Gt(n.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),wb(n.grads),n}}function Ab(r,e){P(Ya(r),()=>"The f passed in variableGrads(f) must be a function"),P(e==null||Array.isArray(e)&&e.every(p=>p instanceof Qu),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let t=e!=null;if(!t){e=[];for(let p in D.registeredVariables)e.push(D.registeredVariables[p])}let n=t?e.filter(p=>!p.trainable):null,o=e.length;e=e.filter(p=>p.trainable),P(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let s=!0,{value:i,grads:a}=D.gradients(r,e,null,s);P(a.some(p=>p!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),P(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let u={};return e.forEach((p,l)=>{a[l]!=null&&(u[p.name]=a[l])}),n!=null&&n.forEach(p=>u[p.name]=null),{value:i,grads:u}}function pn(r){return D.customGrad(r)}function wb(r){if(r.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function L5(r){let t={x:S(r,"x","neg")};return D.runKernel(hs,t)}var Qe=w({neg_:L5});function _5(r){let t={x:S(r,"x","softplus")};return D.runKernel(Xi,t)}var ui=w({softplus_:_5});function B5(r){let e=S(r,"x","logSigmoid");return pn(n=>({value:Qe(ui(Qe(n))),gradFunc:i=>L(i,un(Qe(n)))}))(e)}var $5=w({logSigmoid_:B5});function O5(r,e=null,t=!1){let o={x:S(r,"x","max")},s={reductionIndices:e,keepDims:t};return D.runKernel(vo,o,s)}var Zr=w({max_:O5});function z5(r,e){let t=S(r,"a","sub"),n=S(e,"b","sub");[t,n]=Ye(t,n);let o={a:t,b:n};return D.runKernel(Ho,o)}var le=w({sub_:z5});function G5(r,e=null,t=!1){let n=S(r,"x","sum");n.dtype==="bool"&&(n=J(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return D.runKernel(Wo,o,s)}var he=w({sum_:G5});function U5(r,e=-1){let t=S(r,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return pn((o,s)=>{let a=Zr(o,e,!0),u=le(o,a),p=le(J(u,"float32"),_r(he(pr(u),e,!0)));return s([p]),{value:p,gradFunc:(m,c)=>{let[d]=c,f=!0,h=pr(d);return le(m,L(he(m,e,f),h))}}})(t)}var _d=w({logSoftmax_:U5});function XC(r,e){for(let t=0;t<r.length;++t)if(r[r.length-t-1]!==e-1-t)return!1;return!0}function H2(r,e,t){let n=r.length+e.length,o=[],s=0,i=0;for(let a=0;a<n;a++)t.indexOf(a)===-1?o.push(r[s++]):o.push(e[i++]);return o}function YC(r,e){let t=[],n=r.length;for(let s=0;s<n;s++)e.indexOf(s)===-1&&t.push(r[s]);let o=e.map(s=>r[s]);return[t,o]}function Fs(r,e){let t=e.map(n=>1);return H2(r,t,e)}function W5(r,e,t){P(XC(e,t),()=>`${r} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function QC(r,e){if(XC(r,e))return null;let t=[];for(let n=0;n<e;++n)r.indexOf(n)===-1&&t.push(n);return r.forEach(n=>t.push(n)),t}function Bd(r){return r.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function K5(r,e){let t=[];for(let n=e-r;n<e;++n)t.push(n);return t}function V5(r,e=null,t=!1){let n=S(r,"x","logSumExp"),o=hr(e,n.shape),s=Zr(n,o,!0),i=le(n,s),a=pr(i),u=he(a,o),p=_r(u),l=X(_(s,p.shape),p);if(t){let m=Fs(l.shape,o);return _(l,m)}return l}var JC=w({logSumExp_:V5});function H5(r,e){let t=S(r,"a","logicalAnd","bool"),n=S(e,"b","logicalAnd","bool");Ge(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ma,o)}var Vr=w({logicalAnd_:H5});function q5(r){let t={x:S(r,"x","logicalNot","bool")};return D.runKernel(Wi,t)}var Vp=w({logicalNot_:q5});function j5(r,e){let t=S(r,"a","logicalOr","bool"),n=S(e,"b","logicalOr","bool");Ge(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(wp,o)}var $d=w({logicalOr_:j5});function X5(r,e){let t=S(r,"a","logicalXor","bool"),n=S(e,"b","logicalXor","bool");return Ge(t.shape,n.shape),Vr($d(r,e),Vp(Vr(r,e)))}var Y5=w({logicalXor_:X5});function Q5(r,e,t,n,o){let s=S(r,"x","maxPool"),i=1,a=s,u=!1;s.rank===3&&(u=!0,a=_(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),P(Rr(t,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),Dt("maxPool",n,o);let p={x:a},l={filterSize:e,strides:t,pad:n,dimRoundingMode:o},m=D.runKernel(wo,p,l);return u?_(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Hp=w({maxPool_:Q5});function Z5(r,e=[1,1,1],t,n,o,s="NDHWC"){let i=S(r,"x","maxPool3d"),a=i,u=!1;i.rank===4&&(u=!0,a=_(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),P(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Dt("maxPool3d",n,o);let p={x:a},l={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},m=D.runKernel(Gu,p,l);return u?_(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Od=w({maxPool3d_:Z5});function J5(r,e,t,n,o=!1){let i={x:S(r,"x","maxPoolWithArgmax")},a={filterSize:e,strides:t,pad:n,includeBatchInIndex:o},u=D.runKernel(xm,i,a);return{result:u[0],indexes:u[1]}}var ek=w({maxPoolWithArgmax_:J5});function e8(r,e){let t=S(r,"a","maximum"),n=S(e,"b","maximum");[t,n]=Ye(t,n),t.dtype==="bool"&&(t=J(t,"int32"),n=J(n,"int32")),Ge(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Ao,o)}var Xn=w({maximum_:e8});function t8(r,e=null,t=!1){let o={x:S(r,"x","mean")},s={axis:e,keepDims:t};return D.runKernel(No,o,s)}var Ft=w({mean_:t8});function bt(r,e="float32"){if(e==="complex64"){let n=bt(r,"float32"),o=bt(r,"float32");return Hn(n,o)}let t=tm(rt(r),e);return D.makeTensor(t,r,e)}function lr(r,e="float32"){if(e==="complex64"){let n=lr(r,"float32"),o=bt(r,"float32");return Hn(n,o)}let t=pd(rt(r),e);return D.makeTensor(t,r,e)}function r8(r,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(r===void 0)return[];let n=S(r,"x","meshgrid",r instanceof Xe?r.dtype:"float32");if(e===void 0)return[n];let o=S(e,"y","meshgrid",e instanceof Xe?e.dtype:"float32"),s=rt(n.shape),i=rt(o.shape);return t==="xy"?(n=_(n,[1,-1]),o=_(o,[-1,1]),[Ke(lr([i,1],n.dtype),n),Ke(o,lr([1,s],o.dtype))]):(n=_(n,[-1,1]),o=_(o,[1,-1]),[Ke(n,lr([1,i],n.dtype)),Ke(lr([s,1],o.dtype),o)])}function n8(r,e=null,t=!1){let o={x:S(r,"x","min")},s={axis:e,keepDims:t};return D.runKernel(Do,o,s)}var Gm=w({min_:n8});function o8(r,e){let t=S(r,"a","minimum"),n=S(e,"b","minimum");[t,n]=Ye(t,n),t.dtype==="bool"&&(t=J(t,"int32"),n=J(n,"int32")),Ge(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Po,o)}var lu=w({minimum_:o8});function s8(r,e,t){P(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);let n=S(r,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");P(e.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${e.length}.`);let o=t==="reflect"?1:0;for(let a=0;a<n.rank;a++)P(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),P(e[a][0]>=0&&e[a][0]<=n.shape[a]-o&&e[a][1]>=0&&e[a][1]<=n.shape[a]-o,()=>`Padding in dimension ${a} cannot be greater than or equal to ${n.shape[a]-o} or less than 0 for input of shape ${n.shape}`);let s={paddings:e,mode:t},i={x:n};return D.runKernel(Eo,i,s)}var tk=w({mirrorPad_:s8});function a8(r,e){let t=S(r,"a","mod"),n=S(e,"b","mod");[t,n]=Ye(t,n);let o={a:t,b:n};return D.runKernel(Ki,o)}var rk=w({mod_:a8});function i8(r){let e=S(r,"x","square"),t={};return D.runKernel("Square",{x:e},t)}var qe=w({square_:i8});function u8(r,e=null,t=!1){r=S(r,"x","moments");let n=hr(e,r.shape),o=Ft(r,n,t),s=o.shape;t||(s=Fs(o.shape,n));let i=qe(le(J(r,"float32"),_(o,s))),a=Ft(i,n,t);return{mean:o,variance:a}}var Um=w({moments_:u8});function p8(r,e,t,n){let o=S(e,"data","multiRNNCell"),s=Ji(t,"c","multiRNNCell"),i=Ji(n,"h","multiRNNCell"),a=o,u=[];for(let m=0;m<r.length;m++){let c=r[m](a,s[m],i[m]);u.push(c[0]),u.push(c[1]),a=c[1]}let p=[],l=[];for(let m=0;m<u.length;m+=2)p.push(u[m]),l.push(u[m+1]);return[p,l]}var l8=w({multiRNNCell_:p8});function m8(r,e,t,n=!1){let o=S(r,"logits","multinomial"),s=o.size,i=o.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);t=t||Math.random();let u={logits:i===1?_(o,[1,-1]):o},p={numSamples:e,seed:t,normalized:n},l=D.runKernel(Im,u,p);return i===1?_(l,[l.size]):l}var nk=w({multinomial_:m8});function c8(r,e){let t=S(r,"a","notEqual","string_or_numeric"),n=S(e,"b","notEqual","string_or_numeric");[t,n]=Ye(t,n),Ge(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ca,o)}var pi=w({notEqual_:c8});function d8(r){let t={x:S(r,"x","onesLike")};return D.runKernel(gs,t)}var Dr=w({onesLike_:d8});function f8(r,e){let t=S(r,"v1","outerProduct"),n=S(e,"v2","outerProduct");P(t.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${n.rank}.`);let o=_(t,[-1,1]),s=_(n,[1,-1]);return Ke(o,s)}var h8=w({outerProduct_:f8});function g8(r,e,t=0){let n=S(r,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let o={paddings:e,constantValue:t},s={x:n};return D.runKernel(Fo,s,o)}var Dn=w({pad_:g8});function b8(r,e,t=0){return P(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Dn(r,[e],t)}var y8=w({pad1d_:b8});function T8(r,e,t=0){return P(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Dn(r,e,t)}var x8=w({pad2d_:T8});function I8(r,e,t=0){return P(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Dn(r,e,t)}var C8=w({pad3d_:I8});function k8(r,e,t=0){return P(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Dn(r,e,t)}var S8=w({pad4d_:k8});function v8(r,e,t){let n=S(r,"x","spaceToBatchND");P(n.rank>=1+e.length,()=>`input rank ${n.rank} should be > than [blockShape] ${e.length}`),P(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),P(n.shape.reduce((i,a,u)=>u>0&&u<=e.length?i&&(a+t[u-1][0]+t[u-1][1])%e[u-1]===0:i,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);let o={x:n},s={blockShape:e,paddings:t};return D.runKernel(Is,o,s)}var qp=w({spaceToBatchND_:v8});function A8(r,e,t,n,o,s,i){o==null&&(o=[1,1]),s==null&&(s=1),n===0&&(n="valid");let a=S(r,"x","maxPool"),u=a,p=!1;a.rank===3&&(p=!0,u=_(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(Rr(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);let l=wC(u.shape,e,s,o,n),m=[l.dilationHeight,l.dilationWidth],c;n==="same"?c=N8([l.filterHeight,l.filterWidth],m):c=[[0,0],[0,0]];let d=m[0]===1&&m[1]===1,[f,h]=w8([l.inHeight,l.inWidth],m,c),g=d?n:"valid",y=d?u:qp(u,m,f),x=(t==="avg"?()=>$p(y,e,s,g,i):()=>Hp(y,e,s,g,i))(),I=d?x:Op(x,m,h);return p?_(I,[I.shape[1],I.shape[2],I.shape[3]]):I}function w8(r,e,t){let n=t.map(l=>l[0]),o=t.map(l=>l[1]),s=r.concat(n,o),i=e.map((l,m)=>(l-s[m]%l)%l),a=o.map((l,m)=>l+i[m]),u=e.map((l,m)=>[n[m],a[m]]),p=e.map((l,m)=>[0,i[m]]);return[u,p]}function N8(r,e){let n=r.map((i,a)=>i+(i-1)*(e[a]-1)).map(i=>i-1),o=n.map(i=>Math.floor(i/2)),s=n.map((i,a)=>i-o[a]);return n.map((i,a)=>[o[a],s[a]])}var D8=w({pool_:A8});function P8(r,e){let t=S(r,"base","pow"),n=S(e,"exp","pow");[t,n]=Ye(t,n);let o={a:t,b:n};return D.runKernel(Ro,o)}var Pn=w({pow_:P8});function E8(r,e){let t=S(r,"x","prelu"),n=S(e,"alpha","prelu"),o={x:t,alpha:n};return D.runKernel(Lo,o)}var jp=w({prelu_:E8});function M8(r,e=null,t=!1){let n=S(r,"x","prod");n.dtype==="bool"&&(n=J(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return D.runKernel(ga,o,s)}var zd=w({prod_:M8});function F8(r,e,t){let n=rt(r),o=null;if(t==null||t==="float32")o=new Float32Array(n);else if(t==="int32")o=new Int32Array(n);else if(t==="bool")o=new Uint8Array(n);else throw new Error(`Unknown data type ${t}`);for(let s=0;s<n;s++)o[s]=e();return D.makeTensor(o,r,t)}var R8=w({rand_:F8});var Db=Sp(Gd());var Wm=class{constructor(e,t,n,o,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let i=s||Math.random();this.random=Db.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){let o=this.nextVal;return this.nextVal=NaN,o}let e,t,n=!1;for(;!n;){let o,s,i;do o=2*this.random()-1,s=2*this.random()-1,i=o*o+s*s;while(i>=1||i===0);let a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*o*a,t=this.mean+this.stdDev*s*a,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},lk=class{constructor(e,t,n,o){this.alpha=e,this.beta=1/t,this.dtype=n;let s=o||Math.random();this.randu=Db.alea(s.toString()),this.randn=new Wm(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,o,s,i;for(;;){do o=this.randn.nextValue(),i=1+this.c*o;while(i<=0);if(i*=i*i,e=o*o,t=1-.331*e*e,n=.5*e+this.d*(1-i+Math.log(i)),s=this.randu(),s<t||Math.log(s)<n)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},mk=class{constructor(e=0,t=1,n,o){this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32";if(this.min=e,this.range=t-e,this.dtype=n,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Db.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function G8(r,e,t=1,n="float32",o){if(t==null&&(t=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new lk(e,t,n,o),i=ke(r,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var U8=w({randomGamma_:G8});function W8(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new Wm(e,t,n,!1,o),i=ke(r,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var Pb=w({randomNormal_:W8});function K8(r,e=0,t=1,n="float32",o){let s=ke(r,n),i=new mk(e,t,null,o);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var Pa=w({randomUniform_:K8});function mu(r,e,t=1,n="float32"){if(t===0)throw new Error("Cannot have a step of zero");let o={start:r,stop:e,step:t,dtype:n};return D.runKernel(ei,{},o)}function V8(r){let t={input:S(r,"input","real")};return D.runKernel(Uu,t)}var ep=w({real_:V8});function H8(r){let t={x:S(r,"x","reciprocal")};return D.runKernel(Hi,t)}var ck=w({reciprocal_:H8});function q8(r){let t={x:S(r,"x","relu")};return D.runKernel(_o,t)}var Hr=w({relu_:q8});function j8(r){let t={x:S(r,"x","relu6")};return D.runKernel($o,t)}var Ud=w({relu6_:j8});function X8(r,e){let n={x:S(r,"x","reverse")},o={dims:e};return D.runKernel(ba,n,o)}var gr=w({reverse_:X8});function Y8(r){let e=S(r,"x","reverse");return P(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),gr(e,0)}var Q8=w({reverse1d_:Y8});function Z8(r,e){let t=S(r,"x","reverse");return P(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),gr(t,e)}var J8=w({reverse2d_:Z8});function eX(r,e){let t=S(r,"x","reverse");return P(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),gr(t,e)}var tX=w({reverse3d_:eX});function rX(r,e){let t=S(r,"x","reverse");return P(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),gr(t,e)}var nX=w({reverse4d_:rX});function oX(r){let t={x:S(r,"x","round")};return D.runKernel(ya,t)}var Wd=w({round_:oX});function sX(r){let t={x:S(r,"x","rsqrt","float32")};return D.runKernel(Oo,t)}var Kd=w({rsqrt_:sX});function ce(r,e){if((xr(r)&&e!=="string"||Array.isArray(r))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&xr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return sn(r,[],[],e)}function aX(r){let t={x:S(r,"x","selu")};return D.runKernel(qi,t)}var Vd=w({selu_:aX});function iX(r,e,t,n,o,s=[1,1],i="NHWC"){let a=S(r,"x","separableConv2d"),u=S(e,"depthwiseFilter","separableConv2d"),p=S(t,"pointwiseFilter","separableConv2d"),l=a,m=!1;if(a.rank===3&&(m=!0,l=_(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");P(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),P(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),P(p.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),P(p.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${p.shape[0]}.`),P(p.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${p.shape[1]}.`);let c=u.shape[2],d=u.shape[3];P(p.shape[2]===c*d,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${c*d}, but got ${p.shape[2]}.`);let f=iu(l,u,n,o,i,s),g=jn(f,p,1,"valid",i);return m?_(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var dk=w({separableConv2d_:iX});async function uX(r,e){let t=S(r,"x","setdiff1d"),n=S(e,"y","setdiff1d");P(t.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${n.dtype}).`),P(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),P(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let o=await t.data(),s=await n.data(),i=new Set(s),a=0;for(let l=0;l<o.length;l++)i.has(o[l])||a++;let u=new gt([a],t.dtype),p=new gt([a],"int32");for(let l=0,m=0;l<o.length;l++)i.has(o[l])||(u.values[m]=o[l],p.values[m]=l,m++);return[u.toTensor(),p.toTensor()]}var fk=uX;function pX(r){let t={x:S(r,"x","sign")};return D.runKernel(ji,t)}var hk=w({sign_:pX});function lX(r){let t={x:S(r,"x","sin","float32")};return D.runKernel(zo,t)}var Hd=w({sin_:lX});function mX(r){let t={x:S(r,"x","sinh")};return D.runKernel(xa,t)}var qd=w({sinh_:mX});function cX(r,e,t){let n=S(r,"x","slice1d");return P(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),ze(n,[e],[t])}var jd=w({slice1d_:cX});function dX(r,e,t){let n=S(r,"x","slice2d");return P(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),ze(n,e,t)}var Eb=w({slice2d_:dX});function fX(r,e,t){let n=S(r,"x","slice3d");return P(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),ze(n,e,t)}var Xd=w({slice3d_:fX});function hX(r,e,t){let n=S(r,"x","slice4d");return P(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),ze(n,e,t)}var Km=w({slice4d_:hX});function gX(r,e=-1){let t=S(r,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);let n={logits:t},o={dim:e};return D.runKernel(Ko,n,o)}var Yp=w({softmax_:gX});function bX(r){P(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let e={input:r};return D.runKernel(fm,e)}var Qp=w({fft_:bX});function yX(r){P(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let e={input:r};return D.runKernel(hm,e)}var tp=w({ifft_:yX});function TX(r){let e=r.shape[r.shape.length-1],t=r.size/e,n;if(e<=2){let o=_(r,[t,e]);n=tp(o)}else{let o=[t,2*(e-1)],s=_(ep(r),[t,e]),i=_(Up(r),[t,e]),a=gr(ze(s,[0,1],[t,e-2]),1),u=L(gr(ze(i,[0,1],[t,e-2]),1),ce(-1)),p=it([s,a],1),l=it([i,u],1),m=_(Hn(p,l),[o[0],o[1]]);n=tp(m)}if(n=ep(n),r.rank===3&&r.shape[0]!==0){let o=n,s=r.shape[0];n=_(n,[s,n.shape[0]/s,n.shape[1]]),o.dispose()}return n}var Yd=w({irfft_:TX});function xX(r,e,t=0){let o={x:S(r,"x","split")},s={numOrSizeSplits:e,axis:t};return D.runKernel(Cs,o,s)}var Ir=w({split_:xX});function IX(r,e){P(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let t=r.shape[r.shape.length-1],n=r.size/t,o;if(e!=null&&e<t){let f=r.shape.map(g=>0),h=r.shape.map(g=>g);h[r.shape.length-1]=e,o=ze(r,f,h),t=e}else if(e!=null&&e>t){let f=r.shape.map(h=>h);f[r.shape.length-1]=e-t,o=it([r,bt(f)],r.shape.length-1),t=e}else o=r;let s=De(o),i=_(Hn(o,s),[n,t]),a=Qp(i),u=Math.floor(t/2)+1,p=ep(a),l=Up(a),m=Ir(p,[u,t-u],p.shape.length-1),c=Ir(l,[u,t-u],l.shape.length-1),d=o.shape.slice();return d[o.shape.length-1]=u,_(Hn(m[0],c[0]),d)}var Zp=w({rfft_:IX});function CX(r){let t={x:S(r,"x","sqrt","float32")};return D.runKernel(Uo,t)}var Rt=w({sqrt_:CX});function kX(r,e){let t=S(r,"a","squaredDifference"),n=S(e,"b","squaredDifference");[t,n]=Ye(t,n),Ge(t.shape,n.shape);let o={a:t,b:n},s={};return D.runKernel(Vo,o,s)}var Qd=w({squaredDifference_:kX});function SX(r,e){let t=S(r,"x","squeeze");return _(t,DI(t.shape,e).newShape)}var ln=w({squeeze_:SX});function vX(r,e=0){let t=Ji(r,"tensors","stack","string_or_numeric");P(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&P(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");let n=t,o={axis:e};return D.runKernel(bs,n,o)}var mr=w({stack_:vX});function AX(r,e=0){let n={x:S(r,"x","step")},o={alpha:e};return D.runKernel(vs,n,o)}var cu=w({step_:AX});function wX(r,e,t,n,o=0,s=0,i=0,a=0,u=0){let l={x:S(r,"x","stridedSlice","string_or_numeric")},m={begin:e,end:t,strides:n,beginMask:o,endMask:s,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:u};return D.runKernel(Ia,l,m)}var gk=w({stridedSlice_:wX});function NX(r){let t={x:S(r,"x","tan","float32")};return D.runKernel(Ca,t)}var bk=w({tan_:NX});function $t(r,e){oo(r);let t=Gr(r,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return sn(r,null,t,e)}function li(r,e,t){if(oo(r),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=Gr(r,t);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return sn(r,e,n,t)}function DX(r,e,t){if(oo(r),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=Gr(r,t);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return sn(r,e,n,t)}function PX(r,e,t){if(oo(r),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=Gr(r,t);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return sn(r,e,n,t)}function EX(r,e,t){if(oo(r),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=Gr(r,t);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||n,sn(r,e,n,t)}function MX(r,e=1,t=!0){let n=S(r,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let o=n.shape[n.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${e}`);let s={x:n},i={k:e,sorted:t},[a,u]=D.runKernel(ka,s,i);return{values:a,indices:u}}var yk=w({topk_:MX});function FX(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new Wm(e,t,n,!0,o),i=ke(r,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var Jp=w({truncatedNormal_:FX});function RX(r,e=0){let t=S(r,"x","unique","string_or_numeric");P(t.rank>0,()=>"The input tensor must be at least 1D");let n={x:t},o={axis:e},[s,i]=D.runKernel(Am,n,o);return{values:s,indices:i}}var Mb=w({unique_:RX});function LX(r,e,t){let n=S(r,"x","unsortedSegmentSum"),o=S(e,"segmentIds","unsortedSegmentSum","int32");P(Ni(t),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:o},i={numSegments:t};return D.runKernel(ju,s,i)}var Tk=w({unsortedSegmentSum_:LX});function _X(r,e=0){let t=S(r,"x","unstack","string_or_numeric");P(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);let n={value:t},o={axis:e};return D.runKernel(ks,n,o)}var Br=w({unstack_:_X});function xk(r,e=!0,t,n){return D.makeVariable(r,e,t,n)}function Fb(r,e){let t=[];for(let s=0;s<e.length;s++)e[s]&&t.push(s);let n=ke(r,"int32"),o=ke([t.length,r.length],"int32");for(let s=0;s<t.length;s++){let i=n.indexToLoc(t[s]),a=s*r.length;o.values.set(i,a)}return o.toTensor()}async function BX(r){let e=S(r,"condition","whereAsync","bool"),t=await e.data(),n=Fb(e.shape,t);return r!==e&&e.dispose(),n}var Zd=BX;async function $X(r,e,t){let n=S(r,"tensor","boolMask"),o=S(e,"mask","boolMask","bool"),s=t??0,i=o.rank,a=n.shape;P(i>0,()=>"mask cannot be scalar"),Gt(a.slice(s,s+i),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let h=s;h<s+i;h++)u*=a[h];let p=a.slice(0,s).concat([u],a.slice(s+i)),l=_(n,p),m=_(o,[-1]),c=await Zd(m),d=ln(c,[1]),f=ii(l,d,s);return r!==n&&n.dispose(),e!==o&&o.dispose(),d.dispose(),l.dispose(),m.dispose(),c.dispose(),f}var w_e=$X;function OX(r,e="euclidean",t=null,n=!1){r=S(r,"x","norm");let o=p1(r,e,t),s=o.shape;if(n){let i=hr(t,r.shape);s=Fs(o.shape,i)}return _(o,s)}function p1(r,e,t=null){if(r.rank===0)return _t(r);if(r.rank!==1&&t===null)return p1(_(r,[-1]),e,t);if(r.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return he(_t(r),t);if(e===1/0)return Zr(_t(r),t);if(e===-1/0)return Gm(_t(r),t);if(e==="euclidean"||e===2)return Rt(he(Pn(_t(r),ce(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return Zr(he(_t(r),t[0]),t[1]-1);if(e===1/0)return Zr(he(_t(r),t[1]),t[0]);if(e===-1/0)return Gm(he(_t(r),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Rt(he(qe(r),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}var Rb=w({norm_:OX});function zX(r,e,t,n,o=!0){let s=S(r,"v","movingAverage"),i=S(e,"x","movingAverage"),a=S(t,"decay","movingAverage");HI(s,i),P(zn(s.shape,i.shape),()=>"Shape mismatch in v and x");let u=ce(1),p=le(u,a),l=L(le(i,s),p);if(o){P(n!=null,()=>"When using zeroDebias: true, step is required.");let m=S(n,"step","movingAverage");l=me(l,le(u,Pn(a,m)))}return X(s,l)}var Q_e=w({movingAverage_:zX});function GX(r,e,t){let n=S(r,"indices","scatterND","int32"),o=S(e,"updates","scatterND");Ib(o,n,t);let s={indices:n,updates:o},i={shape:t};return D.runKernel(Ta,s,i)}var l1=w({scatterND_:GX});function m1(r,e,t,n){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let o=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(t.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${s}.`);let i=e.size;if(!(e.rank===0||e.rank===1&&i===o))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${o}]`);if(e.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function WX(r,e,t,n=0){let o=S(r,"sparseIndices","sparseToDense","int32"),s=S(e,"sparseValues","sparseToDense"),i=S(n,"defaultValue","sparseToDense",s.dtype);m1(o,s,t,i);let a={sparseIndices:o,sparseValues:s,defaultValue:i},u={outputShape:t};return D.runKernel(Hu,a,u)}var Lb=w({sparseToDense_:WX});function KX(r,e){let t=S(e,"indices","gatherND","int32"),o={params:S(r,"x","gatherND","string_or_numeric"),indices:t};return D.runKernel(ia,o)}var c1=w({gatherND_:KX});function d1(r,e){if(e==null)return r.shape.slice();if(zn(r.shape,e))return e;if(r.shape.length===e.length){let t=[];for(let n=0;n<r.shape.length;n++)e[n]==null&&r.shape[n]!=null?t.push(r.shape[n]):t.push(e[n]);return t}return e}function VX(r,e,t,n){let o=S(r,"x","dropout");if(P(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),P(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return r instanceof Xe?o.clone():o;let s=d1(o,t),i=1-e,a=me(pu(X(Pa(s,0,1,"float32",n),i)),i);return L(o,a)}var f1=w({dropout_:VX});function h1(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function _b(r,e,t){let n=1-r%2,o=new Float32Array(r);for(let s=0;s<r;++s){let i=2*Math.PI*s/(r+n-1);o[s]=e-t*Math.cos(i)}return $t(o,"float32")}async function HX(r,e,t=1){let n=S(r,"predictions","inTopK"),o=S(e,"targets","inTopK");P(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),P(n.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${o.rank}`),Gt(n.shape.slice(0,n.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];P(t>0&&t<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${t}`);let i=await n.data(),a=await o.data(),[u,p]=[i.length/s,s],l=PI("bool",u);for(let m=0;m<u;m++){let c=m*p,d=i.subarray(c,c+p),f=[];for(let h=0;h<d.length;h++)f.push({value:d[h],index:h});f.sort((h,g)=>g.value-h.value),l[m]=0;for(let h=0;h<t;h++)if(f[h].index===a[m]){l[m]=1;break}}return r!==n&&n.dispose(),e!==o&&o.dispose(),Fr(l,o.shape,"bool")}var LBe=HX;var Rs={};je(Rs,{conv2d:()=>g1,depthwiseConv2d:()=>b1,matMul:()=>y1});function qX(r,e,t,n,o,s="NHWC",i){let a=r;r.rank===3&&(a=_(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=e;u.rank===3&&(u=_(e,[1,e.shape[0],e.shape[1],e.shape[2]])),P(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),P(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),P(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);let p=s==="NHWC"?a.shape[3]:a.shape[1],l=s==="NHWC"?u.shape[3]:u.shape[1];P(p===t[2],()=>`Error in conv2dDerFilter: depth of input ${p}) must match input depth in filter (${t[2]}.`),P(l===t[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${t[3]}).`),Dt("conv2dDerFilter",o,i);let m={x:a,dy:u},c={strides:n,pad:o,dataFormat:s,dimRoundingMode:i,filterShape:t};return D.runKernel(am,m,c)}var Vm=w({conv2DBackpropFilter_:qX});function el(r,e,t){if(t==null||t==="linear")return r;if(t==="relu")return L(r,cu(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function tl(r,e){let t=e,n=Ct(r.shape,e.shape);return n.length>0&&(t=he(t,n)),_(t,r.shape)}function rl(r,e,t,n){if(e==="linear")return r;if(e==="relu")return Hr(r);if(e==="elu")return uu(r);if(e==="relu6")return Ud(r);if(e==="prelu")return jp(r,t);if(e==="leakyrelu")return Wp(r,n);if(e==="sigmoid")return un(r);throw new Error(`Unknown fused activation ${e}.`)}var nl=(r,e)=>!(r>0)||e==="linear";function jX({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:u="linear",preluActivationWeights:p,leakyreluAlpha:l}){if(u=u||"linear",nl(D.state.gradientDepth,u)===!1){let k=jn(r,e,t,n,o,s,i);return a!=null&&(k=X(k,a)),rl(k,u,p,l)}let m=S(r,"x","conv2d","float32"),c=S(e,"filter","conv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=_(m,[1,m.shape[0],m.shape[1],m.shape[2]])),P(d.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`),P(c.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`),Dt("fused conv2d",n,i),P(d.shape[3]===c.shape[2],()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${c.shape[2]}.`),P(Rr(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),P(o==="NHWC",()=>`Error in conv2d: got dataFormat of ${o} but only NHWC is currently supported.`);let h=Bp(d.shape,c.shape,t,s,n,i),g;a!=null&&(g=S(a,"bias","fused conv2d"),[g]=Ye(g,m),Ge(h.outShape,g.shape));let y;p!=null&&(y=S(p,"prelu weights","fused conv2d"));let T=(k,N)=>{let[E,M,R,B]=N,U=el(k,R,u);P(Xo(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let W=Om(M.shape,U,E,t,n),K=Vm(M,U,E.shape,t,n),H=[W,K];if(B!=null){let V=tl(B,U);H.push(V)}return H},x={x:d,filter:c,bias:g,preluActivationWeights:y},I={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:l};return a==null?pn((N,E,M)=>{let R=D.runKernel(ws,x,I);return M([E,N,R]),f&&(R=_(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:T}})(d,c):pn((N,E,M,R)=>{let B=D.runKernel(ws,x,I);return R([E,N,B,M]),f&&(B=_(B,[B.shape[1],B.shape[2],B.shape[3]])),{value:B,gradFunc:T}})(d,c,g)}var g1=w({fusedConv2d_:jX});function XX(r,e,t,n,o,s=[1,1],i){let a=r;r.rank===3&&(a=_(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=e;u.rank===3&&(u=_(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p={x:a,dy:u},l={strides:n,pad:o,dimRoundingMode:i,dilations:s,filterShape:t};return D.runKernel(lm,p,l)}var Bb=w({depthwiseConv2dNativeBackpropFilter_:XX});function YX(r,e,t,n,o,s=[1,1],i){let a=e,u=!1;e.rank===3&&(u=!0,a=_(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p={dy:a,filter:t},l={strides:n,pad:o,dimRoundingMode:i,dilations:s,inputShape:r},m=D.runKernel(mm,p,l);return u?_(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var $b=w({depthwiseConv2dNativeBackpropInput_:YX});function QX({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:u="linear",preluActivationWeights:p,leakyreluAlpha:l}){if(nl(D.state.gradientDepth,u)===!1){let k=iu(r,e,t,n,o,s,i);return a!=null&&(k=X(k,a)),rl(k,u,p,l)}let m=S(r,"x","depthwiseConv2d","float32"),c=S(e,"filter","depthwiseConv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=_(m,[1,m.shape[0],m.shape[1],m.shape[2]])),P(d.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),P(c.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`),P(d.shape[3]===c.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),s==null&&(s=[1,1]),P(Rr(t,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),Dt("fused depthwiseConv2d",n,i);let h=Bp(d.shape,c.shape,t,s,n,i,!0),g;a!=null&&(g=S(a,"bias","fused conv2d"),[g]=Ye(g,m),Ge(h.outShape,g.shape));let y;p!=null&&(y=S(p,"prelu weights","fused depthwiseConv2d"));let T=(k,N)=>{P(Xo(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[E,M,R,B]=N,U=el(k,R,u),W=$b(M.shape,U,E,t,n,s,i),K=Bb(M,U,E.shape,t,n,s,i);if(B!=null){let H=tl(g,U);return[W,K,H]}return[W,K]},x={x:d,filter:c,bias:g,preluActivationWeights:y},I={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:l};return a==null?pn((N,E,M)=>{let R=D.runKernel(Ns,x,I);return M([E,N,R]),f&&(R=_(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:T}})(d,c):pn((N,E,M,R)=>{let B=D.runKernel(Ns,x,I);return R([E,N,B,M]),f&&(B=_(B,[B.shape[1],B.shape[2],B.shape[3]])),{value:B,gradFunc:T}})(d,c,g)}var b1=w({fusedDepthwiseConv2d_:QX});function ZX({a:r,b:e,transposeA:t=!1,transposeB:n=!1,bias:o,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:a}){if(nl(D.state.gradientDepth,s)===!1){let U=Ke(r,e,t,n);return o!=null&&(U=X(U,o)),rl(U,s,i,a)}let u=S(r,"a","fused matMul"),p=S(e,"b","fused matMul");[u,p]=Ye(u,p);let l=t?u.shape[u.rank-2]:u.shape[u.rank-1],m=n?p.shape[p.rank-1]:p.shape[p.rank-2],c=t?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?p.shape[p.rank-2]:p.shape[p.rank-1],f=u.shape.slice(0,-2),h=p.shape.slice(0,-2),g=rt(f),y=rt(h);P(l===m,()=>`Error in fused matMul: inner shapes (${l}) and (${m}) of Tensors with shapes ${u.shape} and ${p.shape} and transposeA=${t} and transposeB=${n} must match.`);let x=Ge(u.shape.slice(0,-2),p.shape.slice(0,-2)).concat([c,d]),I=t?_(u,[g,l,c]):_(u,[g,c,l]),k=n?_(p,[y,d,m]):_(p,[y,m,d]),N;o!=null&&(N=S(o,"bias","fused matMul"),[N]=Ye(N,u),Ge(x,N.shape));let E;i!=null&&(E=S(i,"prelu weights","fused matMul"));let M=(U,W)=>{let[K,H,V,j]=W,ee=el(_(U,V.shape),V,s),Z,te;if(!t&&!n?(Z=Ke(ee,H,!1,!0),te=Ke(K,ee,!0,!1)):!t&&n?(Z=Ke(ee,H,!1,!1),te=Ke(ee,K,!0,!1)):t&&!n?(Z=Ke(H,ee,!1,!0),te=Ke(K,ee,!1,!1)):(Z=Ke(H,ee,!0,!0),te=Ke(ee,K,!0,!0)),o!=null){let oe=tl(j,ee);return[Z,te,oe]}else return[Z,te]},R={a:I,b:k,bias:N,preluActivationWeights:E},B={transposeA:t,transposeB:n,activation:s,leakyreluAlpha:a};return o==null?pn((W,K,H)=>{let V=D.runKernel(As,R,B);return H([W,K,V]),{value:_(V,x),gradFunc:M}})(I,k):pn((W,K,H,V)=>{let j=D.runKernel(As,R,B);return V([W,K,j,H]),{value:_(j,x),gradFunc:M}})(I,k,N)}var y1=w({fusedMatMul_:ZX});function JX(r){return _b(r,.54,.46)}var T1=w({hammingWindow_:JX});function eY(r){return _b(r,.5,.5)}var Ob=w({hannWindow_:eY});function tY(r,e,t,n=!1,o=0){let s=0,i=[];for(;s+e<=r.size;)i.push(ze(r,s,e)),s+=t;if(n)for(;s<r.size;){let a=s+e-r.size,u=it([ze(r,s,e-a),Da([a],o)]);i.push(u),s+=t}return i.length===0?li([],[0,e]):_(it(i),[i.length,e])}var zb=w({frame_:tY});function rY(r,e,t,n,o=Ob){n==null&&(n=h1(e));let s=zb(r,e,t),i=L(s,o(e));return Zp(i,n)}var x1=w({stft_:rY});function nY(r,e,t,n,o="bilinear",s=0){let i=S(r,"image","cropAndResize"),a=S(e,"boxes","cropAndResize","float32"),u=S(t,"boxInd","cropAndResize","int32"),p=a.shape[0];P(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),P(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${p},4] but had shape ${a.shape}.`),P(u.rank===1&&u.shape[0]===p,()=>`Error in cropAndResize: boxInd must be have size [${p}] but had shape ${a.shape}.`),P(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),P(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),P(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);let l={image:i,boxes:a,boxInd:u},m={method:o,extrapolationValue:s,cropSize:n};return D.runKernel(ra,l,m)}var I1=w({cropAndResize_:nY});function oY(r){let e=S(r,"image","flipLeftRight","float32");P(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);let t={image:e};return D.runKernel(aa,t,{})}var C1=w({flipLeftRight_:oY});function sY(r){let e=S(r,"image","grayscaleToRGB"),t=e.rank-1,n=e.shape[t];P(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),P(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let o=new Array(e.rank);return o.fill(1,0,t),o[t]=3,Kr(e,o)}var k1=w({grayscaleToRGB_:sY});function aY(r,e,t=0,n=.5){let o=S(r,"image","rotateWithOffset","float32");P(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);let s={image:o},i={radians:e,fillValue:t,center:n};return D.runKernel(va,s,i)}var S1=w({rotateWithOffset_:aY});function Ls(r,e,t,n,o,s){n==null&&(n=.5),o==null&&(o=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=r.shape[0];return t=Math.min(t,i),P(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),P(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),P(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),P(e.rank===1,()=>"scores must be a 1D tensor"),P(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`),P(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s}}function iY(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=S(r,"boxes","nonMaxSuppression","float32"),i=S(e,"scores","nonMaxSuppression","float32"),a=Ls(s,i,t,n,o);t=a.maxOutputSize,n=a.iouThreshold,o=a.scoreThreshold;let u={maxOutputSize:t,iouThreshold:n,scoreThreshold:o};return D.runKernel(da,{boxes:s,scores:i},u)}var v1=w({nonMaxSuppression_:iY});function A1(r,e,t){let n=uY(r,e,t),o=n<0?-(n+1):n;r.splice(o,0,e)}function uY(r,e,t){return lY(r,e,t||pY)}function pY(r,e){return r>e?1:r<e?-1:0}function lY(r,e,t){let n=0,o=r.length,s=0,i=!1;for(;n<o;){s=n+(o-n>>>1);let a=t(e,r[s]);a>0?n=s+1:(o=s,i=!a)}return i?n:-n-1}function Gb(r,e,t,n,o){return Ik(r,e,t,n,o,0)}function Ub(r,e,t,n,o,s){return Ik(r,e,t,n,o,0,!1,s,!0)}function Wb(r,e,t,n,o,s){return Ik(r,e,t,n,o,s,!0)}function Ik(r,e,t,n,o,s,i=!1,a=!1,u=!1){let p=[];for(let g=0;g<e.length;g++)e[g]>o&&p.push({score:e[g],boxIndex:g,suppressBeginIndex:0});p.sort(w1);let l=s>0?-.5/s:0,m=[],c=[];for(;m.length<t&&p.length>0;){let g=p.pop(),{score:y,boxIndex:T,suppressBeginIndex:x}=g;if(y<o)break;let I=!1;for(let k=m.length-1;k>=x;--k){let N=mY(r,T,m[k]);if(N>=n){I=!0;break}if(g.score=g.score*cY(n,l,N),g.score<=o)break}g.suppressBeginIndex=m.length,I||(g.score===y?(m.push(T),c.push(g.score)):g.score>o&&A1(p,g,w1))}let d=m.length,f=t-d;a&&f>0&&(m.push(...new Array(f).fill(0)),c.push(...new Array(f).fill(0)));let h={selectedIndices:m};return i&&(h.selectedScores=c),u&&(h.validOutputs=d),h}function mY(r,e,t){let n=r.subarray(e*4,e*4+4),o=r.subarray(t*4,t*4+4),s=Math.min(n[0],n[2]),i=Math.min(n[1],n[3]),a=Math.max(n[0],n[2]),u=Math.max(n[1],n[3]),p=Math.min(o[0],o[2]),l=Math.min(o[1],o[3]),m=Math.max(o[0],o[2]),c=Math.max(o[1],o[3]),d=(a-s)*(u-i),f=(m-p)*(c-l);if(d<=0||f<=0)return 0;let h=Math.max(s,p),g=Math.max(i,l),y=Math.min(a,m),T=Math.min(u,c),x=Math.max(y-h,0)*Math.max(T-g,0);return x/(d+f-x)}function cY(r,e,t){let n=Math.exp(e*t*t);return t<=r?n:0}function w1(r,e){return r.score-e.score||r.score===e.score&&e.boxIndex-r.boxIndex}async function dY(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=S(r,"boxes","nonMaxSuppressionAsync"),i=S(e,"scores","nonMaxSuppressionAsync"),a=Ls(s,i,t,n,o);t=a.maxOutputSize,n=a.iouThreshold,o=a.scoreThreshold;let u=await Promise.all([s.data(),i.data()]),p=u[0],l=u[1],{selectedIndices:m}=Gb(p,l,t,n,o);return s!==r&&s.dispose(),i!==e&&i.dispose(),$t(m,"int32")}var N1=dY;function fY(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let i=S(r,"boxes","nonMaxSuppression"),a=S(e,"scores","nonMaxSuppression"),u=Ls(i,a,t,n,o,s);t=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let p={boxes:i,scores:a},l={maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s},m=D.runKernel(fa,p,l);return{selectedIndices:m[0],selectedScores:m[1]}}var D1=w({nonMaxSuppressionWithScore_:fY});async function hY(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let i=S(r,"boxes","nonMaxSuppressionAsync"),a=S(e,"scores","nonMaxSuppressionAsync"),u=Ls(i,a,t,n,o,s);t=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let p=await Promise.all([i.data(),a.data()]),l=p[0],m=p[1],{selectedIndices:c,selectedScores:d}=Wb(l,m,t,n,o,s);return i!==r&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:$t(c,"int32"),selectedScores:$t(d)}}var P1=hY;function gY(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let i=S(r,"boxes","nonMaxSuppression"),a=S(e,"scores","nonMaxSuppression"),u=Ls(i,a,t,n,o,null),p=u.maxOutputSize,l=u.iouThreshold,m=u.scoreThreshold,c={boxes:i,scores:a},d={maxOutputSize:p,iouThreshold:l,scoreThreshold:m,padToMaxOutputSize:s},f=D.runKernel(Vi,c,d);return{selectedIndices:f[0],validOutputs:f[1]}}var E1=w({nonMaxSuppressionPadded_:gY});async function bY(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let i=S(r,"boxes","nonMaxSuppressionAsync"),a=S(e,"scores","nonMaxSuppressionAsync"),u=Ls(i,a,t,n,o,null),p=u.maxOutputSize,l=u.iouThreshold,m=u.scoreThreshold,[c,d]=await Promise.all([i.data(),a.data()]),{selectedIndices:f,validOutputs:h}=Ub(c,d,p,l,m,s);return i!==r&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:$t(f,"int32"),validOutputs:ce(h,"int32")}}var M1=bY;function yY(r,e,t=!1,n=!1){let o=S(r,"images","resizeBilinear");P(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),P(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),P(n===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=o,i=!1;o.rank===3&&(i=!0,s=_(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,a={images:s},u={alignCorners:t,halfPixelCenters:n,size:e},p=D.runKernel(Bo,a,u);return i?_(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var F1=w({resizeBilinear_:yY});function TY(r,e,t=!1,n=!1){let o=S(r,"images","resizeNearestNeighbor");P(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),P(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),P(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),P(n===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=o,i=!1;o.rank===3&&(i=!0,s=_(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,a={images:s},u={alignCorners:t,halfPixelCenters:n,size:e},p=D.runKernel(ti,a,u);return i?_(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var R1=w({resizeNearestNeighbor_:TY});function xY(r,e="binary",t=!1,n=.5){let o=S(r,"image","threshold"),s=.2989,i=.587,a=.114,u=o.shape[0]*o.shape[1],p=L($t([n]),255),l,m,c,d;if(P(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),P(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),P(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),P(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),o.shape[2]===3){[l,m,c]=Ir(o,[1,1,1],-1);let g=L(l,s),y=L(m,i),T=L(c,a);d=X(X(g,y),T)}else d=r;if(e==="otsu"){let g=Dd(J(Wd(d),"int32"),Fr([]),256);p=IY(g,u)}let f=t?Zo(d,p):tr(d,p);return J(L(f,255),"int32")}function IY(r,e){let t=$t([-1]),n=$t([0]),o=$t([0]),s,i,a,u,p,l;for(let m=0;m<r.size-1;m++){s=ze(r,0,m+1),i=ze(r,m+1),p=me(he(s),e),l=me(he(i),e);let c=he(L(s,mu(0,s.size)));a=me(c,he(s));let d=Da(i.shape,s.size),f=X(mu(0,i.size),d),h=L(i,f);u=me(he(h),he(i));let g=le(a,u),y=le(a,u),T=L(p,l);o=L(L(T,g),y);let x=tr(o,n);n=Bt(x,o,n),t=Bt(x,$t([m]),t)}return t}var L1=w({threshold_:xY});function CY(r,e,t="nearest",n="constant",o=0,s){let i=S(r,"image","transform","float32"),a=S(e,"transforms","transform","float32");P(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),P(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),P(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let u={image:i,transforms:a},p={interpolation:t,fillMode:n,fillValue:o,outputShape:s};return D.runKernel(Sa,u,p)}var _1=w({transform_:CY});function kY(r,e,t){P(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),P(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);let n=S(r,"a","bandPart");P(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let o=n.shape,[s,i]=n.shape.slice(-2);if(!(e<=s))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`);if(!(t<=i))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${i}).`);e<0&&(e=s),t<0&&(t=i);let a=_(mu(0,s,1,"int32"),[-1,1]),u=mu(0,i,1,"int32"),p=le(a,u),l=Vr(Zo(p,ce(+e,"int32")),Qo(p,ce(-t,"int32"))),m=bt([s,i],n.dtype);return _(mr(Br(_(n,[-1,s,i])).map(c=>Bt(l,c,m))),o)}var B1=w({bandPart_:kY});function SY(r){let e;if(Array.isArray(r)){e=!1,P(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let o=r[0].shape[0];for(let s=1;s<r.length;++s)P(r[s].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${o})`)}else e=!0,r=Ir(r,r.shape[0],0).map(o=>ln(o,[0]));P(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let t=[],n=r;for(let o=0;o<r.length;++o)t.push(D.tidy(()=>{let s=n[o];if(o>0)for(let i=0;i<o;++i){let a=L(he(L(t[i],s)),t[i]);s=le(s,a)}return me(s,Rb(s,"euclidean"))}));return e?mr(t,0):t}var $1=w({gramSchmidt_:SY});function vY(r,e=!1){if(P(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return O1(r,e);{let t=r.shape.slice(0,r.shape.length-2).reduce((u,p)=>u*p),n=Br(_(r,[t,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),o=[],s=[];n.forEach(u=>{let[p,l]=O1(u,e);o.push(p),s.push(l)});let i=_(mr(o,0),r.shape),a=_(mr(s,0),r.shape);return[i,a]}}function O1(r,e=!1){return D.tidy(()=>{P(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let t=r.shape[0],n=r.shape[1],o=zm(t),s=wn(r),i=li([[1]],[1,1]),a=wn(i),u=t>=n?n:t;for(let p=0;p<u;++p){let l=s,m=a,c=o;[a,s,o]=D.tidy(()=>{let d=ze(s,[p,p],[t-p,1]),f=Rb(d),h=ze(s,[p,p],[1,1]),g=Bt(tr(h,0),li([[-1]]),li([[1]])),y=le(h,L(g,f)),T=me(d,y);T.shape[0]===1?a=wn(i):a=it([i,ze(T,[1,0],[T.shape[0]-1,T.shape[1]])],0);let x=Qe(me(Ke(g,y),f)),I=ze(s,[p,0],[t-p,n]),k=L(x,a),N=He(a);if(p===0)s=le(I,Ke(k,Ke(N,I)));else{let R=le(I,Ke(k,Ke(N,I)));s=it([ze(s,[0,0],[p,n]),R],0)}let E=He(k),M=ze(o,[0,p],[t,o.shape[1]-p]);if(p===0)o=le(M,Ke(Ke(M,a),E));else{let R=le(M,Ke(Ke(M,a),E));o=it([ze(o,[0,0],[t,p]),R],1)}return[a,s,o]}),Fe([l,m,c])}return!e&&t>n&&(o=ze(o,[0,0],[t,n]),s=ze(s,[0,0],[n,n])),[o,s]})}var z1=w({qr_:vY});var Ea=(o=>(o[o.NONE=0]="NONE",o[o.MEAN=1]="MEAN",o[o.SUM=2]="SUM",o[o.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",o))(Ea||{});function AY(r,e,t=3){let n=S(r,"losses","computeWeightedLoss"),o=null;e!=null&&(o=S(e,"weights","computeWeightedLoss"));let s=o==null?n:L(n,o);if(t===0)return s;if(t===2)return he(s);if(t===1){if(o==null)return Ft(s);{let i=n.size/o.size,a=me(he(s),he(o));return i>1?me(a,ce(i)):a}}if(t===3){if(o==null)return me(he(s),ce(n.size));{let i=L(o,lr(n.shape)),a=J(he(pi(i,ce(0))),"float32");return me(he(s),a)}}throw Error(`Unknown reduction: ${t}`)}var qr=w({computeWeightedLoss_:AY});function wY(r,e,t,n=3){let o=S(r,"labels","absoluteDifference"),s=S(e,"predictions","absoluteDifference"),i=null;t!=null&&(i=S(t,"weights","absoluteDifference")),Gt(o.shape,s.shape,"Error in absoluteDifference: ");let a=_t(le(o,s));return qr(a,i,n)}var G1=w({absoluteDifference_:wY});function NY(r,e,t,n,o=3){let s=S(r,"labels","cosineDistance"),i=S(e,"predictions","cosineDistance"),a=null;n!=null&&(a=S(n,"weights","cosineDistance")),Gt(s.shape,i.shape,"Error in cosineDistance: ");let u=ce(1),p=le(u,he(L(s,i),t,!0));return qr(p,a,o)}var U1=w({cosineDistance_:NY});function DY(r,e,t,n=3){let o=S(r,"labels","hingeLoss"),s=S(e,"predictions","hingeLoss"),i=null;t!=null&&(i=S(t,"weights","hingeLoss")),Gt(o.shape,s.shape,"Error in hingeLoss: ");let a=ce(1);o=le(L(ce(2),o),a);let u=Hr(le(a,L(o,s)));return qr(u,i,n)}var W1=w({hingeLoss_:DY});function PY(r,e,t,n=1,o=3){let s=S(r,"labels","huberLoss"),i=S(e,"predictions","huberLoss"),a=null;t!=null&&(a=S(t,"weights","huberLoss")),Gt(s.shape,i.shape,"Error in huberLoss: ");let u=ce(n),p=_t(le(i,s)),l=lu(p,u),m=le(p,l),c=X(L(ce(.5),qe(l)),L(u,m));return qr(c,a,o)}var K1=w({huberLoss_:PY});function EY(r,e,t,n=1e-7,o=3){let s=S(r,"labels","logLoss"),i=S(e,"predictions","logLoss"),a=null;t!=null&&(a=S(t,"weights","logLoss")),Gt(s.shape,i.shape,"Error in logLoss: ");let u=ce(1),p=ce(n),l=Qe(L(s,_r(X(i,p)))),m=L(le(u,s),_r(X(le(u,i),p))),c=le(l,m);return qr(c,a,o)}var V1=w({logLoss_:EY});function MY(r,e,t,n=3){let o=S(r,"labels","meanSquaredError"),s=S(e,"predictions","meanSquaredError"),i=null;t!=null&&(i=S(t,"weights","meanSquaredError")),Gt(o.shape,s.shape,"Error in meanSquaredError: ");let a=Qd(o,s);return qr(a,i,n)}var H1=w({meanSquaredError_:MY});function FY(r,e){let t=S(r,"labels","sigmoidCrossEntropyWithLogits"),n=S(e,"logits","sigmoidCrossEntropyWithLogits");Gt(t.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let o=Hr(n),s=L(n,t),i=Kp(pr(Qe(_t(n))));return X(le(o,s),i)}function RY(r,e,t,n=0,o=3){let s=S(r,"multiClassLabels","sigmoidCrossEntropy"),i=S(e,"logits","sigmoidCrossEntropy"),a=null;if(t!=null&&(a=S(t,"weights","sigmoidCrossEntropy")),Gt(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),n>0){let p=ce(n),l=ce(1),m=ce(.5);s=X(L(s,le(l,p)),L(m,p))}let u=FY(s,i);return qr(u,a,o)}var q1=w({sigmoidCrossEntropy_:RY});function LY(r,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return pn((o,s,i)=>{let u=JC(s,[t],!0),p=le(J(s,"float32"),u);i([o,p]);let l=Qe(L(p,o));return{value:he(l,[t]),gradFunc:(d,f)=>{let[h,g]=f,y=Fs(d.shape,[t]);return[L(_(d,y),le(J(h,"float32"),pr(g))),L(_(d,y),le(pr(g),J(h,"float32")))]}}})(r,e)}function _Y(r,e,t,n=0,o=3){let s=S(r,"onehotLabels","softmaxCrossEntropy"),i=S(e,"logits","softmaxCrossEntropy"),a=null;if(t!=null&&(a=S(t,"weights","softmaxCrossEntropy")),Gt(s.shape,i.shape,"Error in softmaxCrossEntropy: "),n>0){let p=ce(n),l=ce(1),m=ce(s.shape[1]);s=X(L(s,le(l,p)),me(p,m))}let u=LY(s,i);return qr(u,a,o)}var j1=w({softmaxCrossEntropy_:_Y});function BY(r,e,t,n){let o=S(r,"indices","sparseFillEmptyRows","int32"),s=S(e,"values","sparseFillEmptyRows"),i=S(t,"denseShape","sparseFillEmptyRows","int32"),a=S(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);let u={indices:o,values:s,denseShape:i,defaultValue:a},p=D.runKernel(Wu,u);return{outputIndices:p[0],outputValues:p[1],emptyRowIndicator:p[2],reverseIndexMap:p[3]}}var X1=w({sparseFillEmptyRows_:BY});function $Y(r,e,t){let n=S(r,"inputIndices","sparseReshape","int32"),o=S(e,"inputShape","sparseReshape","int32"),s=S(t,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:n,inputShape:o,newShape:s},a=D.runKernel(Yi,i);return{outputIndices:a[0],outputShape:a[1]}}var Y1=w({sparseReshape_:$Y});function OY(r,e,t){let n=S(r,"data","sparseSegmentMean"),o=S(e,"indices","sparseSegmentMean","int32"),s=S(t,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let i={data:n,indices:o,segmentIds:s};return D.runKernel(Ku,i)}var Q1=w({sparseSegmentMean_:OY});function zY(r,e,t){let n=S(r,"data","sparseSegmentSum"),o=S(e,"indices","sparseSegmentSum","int32"),s=S(t,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let i={data:n,indices:o,segmentIds:s};return D.runKernel(Vu,i)}var Z1=w({sparseSegmentSum_:zY});function GY(r,e,t,n,o,s,i,a){let u=S(r,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);let p=S(e,"dataSplits","stringNGrams");if(p.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let l={separator:t,nGramWidths:n,leftPad:o,rightPad:s,padWidth:i,preserveShortSequences:a},m={data:u,dataSplits:p},c=D.runKernel(qu,m,l);return{nGrams:c[0],nGramsSplits:c[1]}}var J1=w({stringNGrams_:GY});function UY(r,e,t=!0){let n=S(r,"input","stringSplit","string"),o=S(e,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);let s={skipEmpty:t},i={input:n,delimiter:o},a=D.runKernel(Sm,i,s);return{indices:a[0],values:a[1],shape:a[2]}}var eP=w({stringSplit_:UY});function WY(r,e){let t=S(r,"input","stringToHashBucketFast","string"),n={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");let o={input:t};return D.runKernel(vm,o,n)}var tP=w({stringToHashBucketFast_:WY});var TKe={fft:Qp,ifft:tp,rfft:Zp,irfft:Yd},SKe={hammingWindow:T1,hannWindow:Ob,frame:zb,stft:x1},En={flipLeftRight:C1,grayscaleToRGB:k1,resizeNearestNeighbor:R1,resizeBilinear:F1,rotateWithOffset:S1,cropAndResize:I1,nonMaxSuppression:v1,nonMaxSuppressionAsync:N1,nonMaxSuppressionWithScore:D1,nonMaxSuppressionWithScoreAsync:P1,nonMaxSuppressionPadded:E1,nonMaxSuppressionPaddedAsync:M1,threshold:L1,transform:_1},rP={bandPart:B1,gramSchmidt:$1,qr:z1},QKe={absoluteDifference:G1,computeWeightedLoss:qr,cosineDistance:U1,hingeLoss:W1,huberLoss:K1,logLoss:V1,meanSquaredError:H1,sigmoidCrossEntropy:q1,softmaxCrossEntropy:j1},Jd={sparseFillEmptyRows:X1,sparseReshape:Y1,sparseSegmentMean:Q1,sparseSegmentSum:Z1},Kb={stringNGrams:J1,stringSplit:eP,stringToHashBucketFast:tP};var Jr=class extends Cb{minimize(e,t=!1,n){let{value:o,grads:s}=this.computeGradients(e,n);if(n!=null){let i=n.map(a=>({name:a.name,tensor:s[a.name]}));this.applyGradients(i)}else this.applyGradients(s);return Fe(s),t?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Ab(e,t)}dispose(){this.iterations_!=null&&Fe(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ce(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Jr,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var ol=class extends Jr{constructor(e,t,n=null){super();this.learningRate=e;this.rho=t;this.epsilon=n;this.accumulatedGrads=[];this.accumulatedUpdates=[];n==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n],i=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accum_grad`,variable:G(()=>De(s).variable(i))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${n}/accum_var`,variable:G(()=>De(s).variable(i))});let a=Array.isArray(e)?e[o].tensor:e[n];if(a==null)return;let u=this.accumulatedGrads[o].variable,p=this.accumulatedUpdates[o].variable;G(()=>{let l=X(L(u,this.rho),L(qe(a),1-this.rho)),m=L(me(Rt(X(p,this.epsilon)),Rt(X(u,this.epsilon))),a),c=X(L(p,this.rho),L(qe(m),1-this.rho));u.assign(l),p.assign(c);let d=X(L(m,-this.learningRate),s);s.assign(d)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Fe(this.accumulatedGrads.map(e=>e.variable)),Fe(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};ol.className="Adadelta";Nn(ol);var sl=class extends Jr{constructor(e,t=.1){super();this.learningRate=e;this.initialAccumulatorValue=t;this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n];this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accumulator`,variable:G(()=>Da(s.shape,this.initialAccumulatorValue).variable(!1))});let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let a=this.accumulatedGrads[o].variable;G(()=>{let u=X(a,qe(i));a.assign(u);let p=X(L(me(i,Rt(X(u,D.backend.epsilon()))),-this.learningRate),s);s.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Fe(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};sl.className="Adagrad";Nn(sl);var al=class extends Jr{constructor(e,t,n,o=null){super();this.learningRate=e;this.beta1=t;this.beta2=n;this.epsilon=o;this.accumulatedFirstMoment=[];this.accumulatedSecondMoment=[];G(()=>{this.accBeta1=ce(t).variable(),this.accBeta2=ce(n).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);G(()=>{let n=le(1,this.accBeta1),o=le(1,this.accBeta2);t.forEach((s,i)=>{let a=D.registeredVariables[s],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${s}/m`,variable:G(()=>De(a).variable(u))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${s}/v`,variable:G(()=>De(a).variable(u))});let p=Array.isArray(e)?e[i].tensor:e[s];if(p==null)return;let l=this.accumulatedFirstMoment[i].variable,m=this.accumulatedSecondMoment[i].variable,c=X(L(l,this.beta1),L(p,1-this.beta1)),d=X(L(m,this.beta2),L(qe(p),1-this.beta2)),f=me(c,n),h=me(d,o);l.assign(c),m.assign(d);let g=X(L(me(f,X(Rt(h),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(L(this.accBeta1,this.beta1)),this.accBeta2.assign(L(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Fe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Fe(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),G(()=>{this.accBeta1.assign(Pn(this.beta1,this.iterations_+1)),this.accBeta2.assign(Pn(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};al.className="Adam";Nn(al);var il=class extends Jr{constructor(e,t,n,o=null,s=0){super();this.learningRate=e;this.beta1=t;this.beta2=n;this.epsilon=o;this.decay=s;this.accumulatedFirstMoment=[];this.accumulatedWeightedInfNorm=[];G(()=>{this.iteration=ce(0).variable(),this.accBeta1=ce(t).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);G(()=>{let n=le(1,this.accBeta1),o=me(-this.learningRate,X(L(this.iteration,this.decay),1));t.forEach((s,i)=>{let a=D.registeredVariables[s],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${s}/m`,variable:De(a).variable(u)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${s}/v`,variable:De(a).variable(u)});let p=Array.isArray(e)?e[i].tensor:e[s];if(p==null)return;let l=this.accumulatedFirstMoment[i].variable,m=this.accumulatedWeightedInfNorm[i].variable,c=X(L(l,this.beta1),L(p,1-this.beta1)),d=L(m,this.beta2),f=_t(p),h=Xn(d,f);l.assign(c),m.assign(h);let g=X(L(me(o,n),me(c,X(h,this.epsilon))),a);a.assign(g)}),this.iteration.assign(X(this.iteration,1)),this.accBeta1.assign(L(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Fe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Fe(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};il.className="Adamax";Nn(il);var du=class extends Jr{constructor(e){super();this.learningRate=e;this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=Array.isArray(e)?e[o].tensor:e[n];if(s==null)return;let i=D.registeredVariables[n];G(()=>{let a=X(L(this.c,s),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Wt(ce(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};du.className="SGD";Nn(du);var ul=class extends du{constructor(e,t,n=!1){super(e);this.learningRate=e;this.momentum=t;this.useNesterov=n;this.accumulations=[];this.m=ce(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n];this.accumulations[o]==null&&(this.accumulations[o]={originalName:`${n}/momentum`,variable:G(()=>De(s).variable(!1))});let i=this.accumulations[o].variable,a=Array.isArray(e)?e[o].tensor:e[n];a!=null&&G(()=>{let u,p=X(L(this.m,i),a);this.useNesterov?u=X(L(this.c,X(a,L(p,this.m))),s):u=X(L(this.c,p),s),i.assign(p),s.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Fe(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};ul.className="Momentum";Nn(ul);var pl=class extends Jr{constructor(e,t=.9,n=0,o=null,s=!1){super();this.learningRate=e;this.decay=t;this.momentum=n;this.epsilon=o;this.accumulatedMeanSquares=[];this.accumulatedMoments=[];this.accumulatedMeanGrads=[];if(this.centered=s,o==null&&(this.epsilon=D.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n],i=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${n}/rms`,variable:G(()=>De(s).variable(i))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${n}/momentum`,variable:G(()=>De(s).variable(i))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${n}/mg`,variable:G(()=>De(s).variable(i))});let a=Array.isArray(e)?e[o].tensor:e[n];if(a==null)return;let u=this.accumulatedMeanSquares[o].variable,p=this.accumulatedMoments[o].variable;G(()=>{let l=X(L(u,this.decay),L(qe(a),1-this.decay));if(this.centered){let m=this.accumulatedMeanGrads[o].variable,c=X(L(m,this.decay),L(a,1-this.decay)),d=me(L(a,this.learningRate),Rt(le(l,X(qe(c),this.epsilon)))),f=X(L(p,this.momentum),d);u.assign(l),m.assign(c),p.assign(f);let h=le(s,f);s.assign(h)}else{let m=X(L(u,this.decay),L(qe(a),1-this.decay)),c=X(L(p,this.momentum),me(L(a,this.learningRate),Rt(X(m,this.epsilon))));u.assign(m),p.assign(c);let d=le(s,c);s.assign(d)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Fe(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Fe(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Fe(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};pl.className="RMSProp";Nn(pl);var mi=class{static sgd(e){return new du(e)}static momentum(e,t,n=!1){return new ul(e,t,n)}static rmsprop(e,t=.9,n=0,o=null,s=!1){return new pl(e,t,n,o,s)}static adam(e=.001,t=.9,n=.999,o=null){return new al(e,t,n,o)}static adadelta(e=.001,t=.95,n=null){return new ol(e,t,n)}static adamax(e=.002,t=.9,n=.999,o=null,s=0){return new il(e,t,n,o,s)}static adagrad(e,t=.1){return new sl(e,t)}};var ll={sgd:mi.sgd,momentum:mi.momentum,adadelta:mi.adadelta,adagrad:mi.adagrad,rmsprop:mi.rmsprop,adamax:mi.adamax,adam:mi.adam};var KY=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:r=>r())();function Ck(){return new Promise(r=>KY(()=>r()))}var C={};je(C,{ERF_A1:()=>tQ,ERF_A2:()=>rQ,ERF_A3:()=>nQ,ERF_A4:()=>oQ,ERF_A5:()=>sQ,ERF_P:()=>eQ,PARALLELIZE_THRESHOLD:()=>Vb,SELU_SCALE:()=>Sk,SELU_SCALEALPHA:()=>kk,applyActivation:()=>rl,assertAndGetBroadcastShape:()=>Ge,assertAxesAreInnerMostDims:()=>W5,assertParamsConsistent:()=>VY,assignToTypedArray:()=>mQ,axesAreInnerMostDims:()=>XC,calculateShapes:()=>N2,checkEinsumDimSizes:()=>bQ,checkPadOnDimRoundingMode:()=>Dt,combineLocations:()=>H2,complexWithEvenIndex:()=>uQ,complexWithOddIndex:()=>pQ,computeConv2DInfo:()=>Bp,computeConv3DInfo:()=>W2,computeDefaultPad:()=>NC,computeDilation2DInfo:()=>lj,computeOptimalWindowSize:()=>qY,computeOutAndReduceShapes:()=>YC,computeOutShape:()=>HY,computePool2DInfo:()=>wC,computePool3DInfo:()=>mj,convertConv2DDataFormat:()=>K2,decodeEinsumEquation:()=>hQ,eitherStridesOrDilationsAreOne:()=>Rr,expandShapeToKeepDim:()=>Fs,exponent:()=>dQ,exponents:()=>cQ,fromStringArrayToUint8:()=>$Q,fromUint8ToStringArray:()=>BQ,getAxesPermutation:()=>QC,getBroadcastDims:()=>v2,getComplexWithIndex:()=>lQ,getEinsumComputePath:()=>yQ,getEinsumPermutation:()=>gQ,getFusedBiasGradient:()=>tl,getFusedDyActivation:()=>el,getImageCenter:()=>jY,getInnerMostAxes:()=>K5,getPermuted:()=>YY,getReductionAxes:()=>Ct,getReshaped:()=>XY,getReshapedPermuted:()=>QY,getSliceBeginCoords:()=>ZY,getSliceSize:()=>JY,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>CQ,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>kQ,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>SQ,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>wQ,getSparseReshapeInputOutputMismatchErrorMessage:()=>DQ,getSparseReshapeInputOutputMultipleErrorMessage:()=>NQ,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>vQ,getSparseReshapeNegativeOutputDimErrorMessage:()=>AQ,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>FQ,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>PQ,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>EQ,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>MQ,getUndoAxesPermutation:()=>Bd,isIdentityPermutation:()=>TQ,log:()=>Sq,mergeRealAndImagArrays:()=>aQ,prepareAndValidate:()=>w2,prepareSplitSize:()=>IQ,segment_util:()=>Ak,shouldFuse:()=>nl,slice_util:()=>yt,splitRealAndImagArrays:()=>iQ,tupleValuesAreOne:()=>Xo,upcastType:()=>Ut,validateInput:()=>Ib,validateUpdateShape:()=>mC,warn:()=>ni});function VY(r,e){let t=r[0].length;r.forEach((o,s)=>{P(o.length===t,()=>`Error in concat${t}D: rank of tensors[${s}] must be the same as the rank of the rest (${t})`)}),P(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);let n=r[0];r.forEach((o,s)=>{for(let i=0;i<t;i++)P(i===e||o[i]===n[i],()=>`Error in concat${t}D: Shape of tensors[${s}] (${o}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function HY(r,e){let t=r[0].slice();for(let n=1;n<r.length;n++)t[e]+=r[n][e];return t}var Vb=30;function qY(r){return r<=Vb?r:em(r,Math.floor(Math.sqrt(r)))}function jY(r,e,t){let n=t*(typeof r=="number"?r:r[0]),o=e*(typeof r=="number"?r:r[1]);return[n,o]}function XY(r,e,t,n=!0){let o=[];if(n)o=o.concat(e.slice(0)),o.push(r[0]/t),o=o.concat(r.slice(1));else{o=o.concat(r[0]);let s=e.length;for(let i=0;i<s;++i)o=o.concat([r[i+1]/e[i],e[i]]);o=o.concat(r.slice(s+1))}return o}function YY(r,e,t=!0){let n=[];if(t){n.push(e);for(let o=e+1;o<r;++o)o<=2*e?(n.push(o),n.push(o-(e+1))):n.push(o)}else{let o=[],s=[];for(let i=1;i<r;++i)i>=e*2+1||i%2===1?s.push(i):o.push(i);n.push(...o),n.push(0),n.push(...s)}return n}function QY(r,e,t,n=!0){let o=[];n?o.push(r[0]/t):o.push(r[0]*t);for(let s=1;s<r.length;++s)s<=e.length?n?o.push(e[s-1]*r[s]):o.push(r[s]/e[s-1]):o.push(r[s]);return o}function ZY(r,e){let t=[0];for(let n=0;n<e;++n)t.push(r[n][0]);return t}function JY(r,e,t){let n=r.slice(0,1);for(let o=0;o<t;++o)n.push(r[o+1]-e[o][0]-e[o][1]);return n}var kk=1.7580993408473768,Sk=1.0507009873554805;var eQ=.3275911,tQ=.254829592,rQ=-.284496736,nQ=1.421413741,oQ=-1.453152027,sQ=1.061405429;function aQ(r,e){if(r.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${e.length}.`);let t=new Float32Array(r.length*2);for(let n=0;n<t.length;n+=2)t[n]=r[n/2],t[n+1]=e[n/2];return t}function iQ(r){let e=new Float32Array(r.length/2),t=new Float32Array(r.length/2);for(let n=0;n<r.length;n+=2)e[n/2]=r[n],t[n/2]=r[n+1];return{real:e,imag:t}}function uQ(r){let e=Math.ceil(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=0;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function pQ(r){let e=Math.floor(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=2;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function lQ(r,e){let t=r[e*2],n=r[e*2+1];return{real:t,imag:n}}function mQ(r,e,t,n){r[n*2]=e,r[n*2+1]=t}function cQ(r,e){let t=new Float32Array(r/2),n=new Float32Array(r/2);for(let o=0;o<Math.ceil(r/2);o++){let s=(e?2:-2)*Math.PI*(o/r);t[o]=Math.cos(s),n[o]=Math.sin(s)}return{real:t,imag:n}}function dQ(r,e,t){let n=(t?2:-2)*Math.PI*(r/e),o=Math.cos(n),s=Math.sin(n);return{real:o,imag:s}}var vk="->",fQ=/->/g,nP=",",oP="...";function hQ(r,e){r=r.replace(/\s/g,"");let t=(r.length-r.replace(fQ,"").length)/vk.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${vk}").`);let[n,o]=r.split(vk);P(n.indexOf(oP)===-1,()=>`The ellipsis notation ("${oP}") is not supported yet.`);let s=n.split(nP),i=s.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let a=[];for(let c=0;c<o.length;++c){let d=o[c];if(!s.some(f=>f.indexOf(d)!==-1))throw new Error(`Output subscripts contain the label ${d} not present in the input subscripts.`);a.indexOf(d)===-1&&a.push(d)}for(let c=0;c<n.length;++c){let d=n[c];a.indexOf(d)===-1&&d!==nP&&a.push(d)}let u=new Array(s.length);for(let c=0;c<i;++c){if(new Set(s[c].split("")).size!==s[c].length)throw new Error(`Found duplicate axes in input component ${s[c]}. Support for duplicate axes in input is not implemented yet.`);u[c]=[];for(let d=0;d<s[c].length;++d)u[c].push(a.indexOf(s[c][d]))}let p=a.length,l=o.length,m=[];for(let c=l;c<p;++c)m.push(c);return{allDims:a,summedDims:m,idDims:u}}function gQ(r,e){let t=new Array(r);t.fill(-1);for(let o=0;o<e.length;++o)t[e[o]]=o;let n=[];for(let o=0;o<r;++o)t[o]===-1&&n.push(o);return t=t.filter(o=>o!==-1),{permutationIndices:t,expandDims:n}}function bQ(r,e,t){let n=new Array(r);for(let o=0;o<t.length;++o){let s=t[o].shape;for(let i=0;i<e[o].length;++i)n[e[o][i]]===void 0?n[e[o][i]]=s[i]:P(n[e[o][i]]===s[i],()=>`Expected dimension ${n[e[o][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function yQ(r,e){let t=r,n=[],o=0;r.length===0&&t.push(-1),o=r.length+1;for(let i=0;i<o;++i)n.push([]);let s=[];for(let i=0;i<t.length;++i){let a=t[i],u=xQ(e,a);for(let p of u)s.indexOf(p)===-1&&(n[i].push(p),s.push(p))}return{path:t,steps:n}}function TQ(r){return r.every((e,t)=>e===t)}function xQ(r,e){let t=[];for(let n=0;n<r.length;++n)(r[n].length===0||r[n].indexOf(e)!==-1||e===-1)&&t.push(n);return t}function IQ(r,e,t=0){let n=[];if(typeof e=="number")P(r.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),n=new Array(e).fill(r.shape[t]/e);else{let o=e.reduce((i,a)=>(a===-1&&(i+=1),i),0);P(o<=1,()=>"There should be only one negative value in split array.");let s=e.indexOf(-1);if(s!==-1){let i=e.reduce((a,u)=>u>0?a+u:a);e[s]=r.shape[t]-i}P(r.shape[t]===e.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),n=e}return n}function CQ(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function kQ(r,e){return`indices(${r}, 0) is invalid: ${e} < 0`}function SQ(r,e,t){return`indices(${r}, 0) is invalid: ${e} >= ${t}`}function vQ(r,e){return`only one output dimension may be -1, not both ${r} and ${e}`}function AQ(r,e){return`size ${r} must be non-negative, not ${e}`}function wQ(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function NQ(r,e){let t=rt(r),n=rt(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${r} outputShape= ${e}`}function DQ(r,e){let t=rt(r),n=rt(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${n}. inputShape=${r} outputShape=${e}`}function PQ(){return"segment ids must be >= 0"}function EQ(){return"segment ids are not increasing"}function MQ(r,e){return`Segment id ${r} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function FQ(r,e,t){return`Bad: indices[${r}] == ${e} out of range [0, ${t})`}var Ak={};je(Ak,{collectGatherOpShapeInfo:()=>_Q,computeOutShape:()=>LQ,segOpComputeOptimalWindowSize:()=>RQ});function RQ(r,e){let t=!1,n;for(r<=Vb?(n=r,t=!0):n=em(r,Math.floor(Math.sqrt(r)));!t;)n>e||n===r?t=!0:n=em(r,n+1);return n}function LQ(r,e,t){let n=[],o=r.length;for(let s=0;s<o;s++)s!==e?n.push(r[s]):n.push(t);return n}function _Q(r,e,t,n){let o=e.shape.length,s=r.shape.length;if(n!==0&&(n<-o||n>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${n}`);if(n<0&&(n+=o),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(t<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${t}).`);for(let m=0;m<n;++m)if(r.shape[m]!==e.shape[m])throw new Error(`x.shape[${m}]: ${r.shape[m]} should be equal to indices.shape[${m}]: ${e.shape[m]}.`);let i=r.shape[t],a=[],u=1,p=1,l=1;for(let m=0;m<n;++m)a.push(r.shape[m]),u*=r.shape[m];for(let m=n;m<t;m++)a.push(r.shape[m]),p*=r.shape[m];for(let m=n;m<o;m++)a.push(e.shape[m]);for(let m=t+1;m<s;m++)a.push(r.shape[m]),l*=r.shape[m];return{batchSize:u,sliceSize:l,outerSize:p,dimSize:i,outputShape:a}}function BQ(r){try{return r.map(e=>Em(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function $Q(r){return r.map(e=>Yu(e))}var br={};je(br,{nonMaxSuppressionV3Impl:()=>Gb,nonMaxSuppressionV4Impl:()=>Ub,nonMaxSuppressionV5Impl:()=>Wb,whereImpl:()=>Fb});var Hb={kernelName:ls,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,cu(J(t,"float32"),-1))}}};var sP={kernelName:Di,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=qe(J(t,"float32")),o=Rt(le(ce(1),n));return Qe(me(r,o))}}}};var aP={kernelName:Pi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Rt(le(qe(J(t,"float32")),1));return me(r,n)}}}};var iP={kernelName:vn,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ge(t.shape,n.shape);return{a:()=>{let a=r,u=Ct(t.shape,o);return u.length>0&&(a=he(a,u)),_(a,t.shape)},b:()=>{let a=r,u=Ct(n.shape,o);return u.length>0&&(a=he(a,u)),_(a,n.shape)}}}};var uP={kernelName:so,saveAllInputs:!0,gradFunc:(r,e)=>{let t={};return e.forEach((n,o)=>{t[o]=()=>r.clone()}),t}};var pP={kernelName:ao,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>De(t)}}};var lP={kernelName:Za,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>De(t)}}};var mP={kernelName:Fi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,Rt(le(ce(1),qe(J(t,"float32")))))}}};var cP={kernelName:Ri,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Rt(X(ce(1),qe(J(t,"float32"))));return me(r,n)}}}};var dP={kernelName:Bi,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ge(t.shape,n.shape);return{a:()=>{let a=X(qe(t),qe(n)),u=L(r,me(n,a)),p=Ct(t.shape,o);return p.length>0&&(u=he(u,p)),_(u,t.shape)},b:()=>{let a=X(qe(t),qe(n)),u=Qe(L(r,me(t,a))),p=Ct(n.shape,o);return p.length>0&&(u=he(u,p)),_(u,n.shape)}}}};var fP={kernelName:Li,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,X(qe(J(t,"float32")),1))}}};var hP={kernelName:_i,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,le(ce(1),qe(J(t,"float32"))))}}};function OQ(r,e,t,n,o,s){let i=S(r,"dy","avgPool3dGrad"),a=S(e,"input","avgPool3dGrad"),u=i,p=a,l=!1;a.rank===4&&(l=!0,u=_(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),p=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),P(p.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),Dt("avgPool3dGrad",o,s);let m={dy:u,input:p},c={filterSize:t,strides:n,pad:o,dimRoundingMode:s},d=D.runKernel(nm,m,c);return l?_(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var gP=w({avgPool3dGrad_:OQ});var bP={kernelName:Fu,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:i,dimRoundingMode:a}=t;return{x:()=>gP(r,n,o,s,i,a)}}};function zQ(r,e,t,n,o){let s=S(r,"dy","avgPoolGrad"),i=S(e,"input","avgPoolGrad");P(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let a=i,u=s,p=!1;i.rank===3&&(p=!0,a=_(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=_(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),P(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);let l={dy:u,input:a},m={filterSize:t,strides:n,pad:o},c=D.runKernel(rm,l,m);return p?_(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var yP=w({avgPoolGrad_:zQ});var TP={kernelName:io,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:i}=t;return{x:()=>yP(r,n,o,s,i)}}};var xP={kernelName:uo,inputsToSave:["a","b"],gradFunc:(r,e,t)=>{let[n,o]=e,{transposeA:s,transposeB:i}=t;return!s&&!i?{a:()=>Ke(r,o,!1,!0),b:()=>Ke(n,r,!0,!1)}:!s&&i?{a:()=>Ke(r,o,!1,!1),b:()=>Ke(r,n,!0,!1)}:s&&!i?{a:()=>Ke(o,r,!1,!0),b:()=>Ke(n,r,!1,!1)}:{a:()=>Ke(o,r,!0,!0),b:()=>Ke(r,n,!0,!0)}}};var IP={kernelName:ms,gradFunc:(r,e,t)=>{let{blockShape:n,crops:o}=t;return{x:()=>qp(r,n,o)}}};var CP={kernelName:p0,gradFunc:(r,e,t)=>{let n=t,o=n.inputShape,s=n.shape,i=Array.from(s);for(let u=o.length-1;u>=0;u--)if(o[u]===s[u])i[u]=1;else if(o[u]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);let a=[];for(let u=0;u<i.length;u++)i[u]>1&&a.push(u);return{x:()=>he(r,a,!0)}}};var kP={kernelName:Gn,gradFunc:r=>({x:()=>r.clone()})};var SP={kernelName:po,gradFunc:r=>({x:()=>De(r)})};var vP={kernelName:Un,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{clipValueMin:o,clipValueMax:s}=t;return{x:()=>Bt(Vr(Qo(n,o),Zo(n,s)),r,De(r))}}};var AP={kernelName:Lu,inputsToSave:["x"],gradFunc:Hb.gradFunc};var wP={kernelName:cs,saveAllInputs:!0,gradFunc:(r,e,t)=>{let n=e.map(u=>u.shape),{axis:o}=t,s=hr(o,e[0].shape)[0],i=n.map(u=>u[s]);return Ir(r,i,s).map(u=>()=>u)}};var NP={kernelName:lo,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{dilations:s,strides:i,pad:a,dataFormat:u}=t;return P(Xo(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Om(n.shape,r,o,i,a,u),filter:()=>Vm(n,r,o.shape,i,a,u)}}};var DP={kernelName:mo,inputsToSave:["dy","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{strides:s,pad:i,dataFormat:a,dimRoundingMode:u}=t;return{dy:()=>jn(r,o,s,i,a,1,u),filter:()=>Vm(r,n,o.shape,s,i,a,u)}}};function GQ(r,e,t,n,o){let s=r;r.rank===4&&(s=_(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let i=e;i.rank===4&&(i=_(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),P(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),P(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),P(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),P(s.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${t[3]}.`),P(i.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${t[4]}).`);let a={x:s,dy:i},u={strides:n,pad:o,filterShape:t};return D.runKernel(im,a,u)}var PP=w({conv3DBackpropFilter_:GQ});var EP={kernelName:_u,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s}=t;P(Xo(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[i,a]=e;return{x:()=>vb(i.shape,r,a,o,s),filter:()=>PP(i,r,a.shape,o,s)}}};var MP={kernelName:co,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(Qe(Hd(J(t,"float32"))),r)}}};var FP={kernelName:fo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(qd(J(t,"float32")),r)}}};var RP={kernelName:ta,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o,exclusive:s,reverse:i}=t;return{x:()=>{let a=QC([o],n.rank),u=Rd(r,o,s,!i);return a!=null&&(u=He(u,a)),u}}}};var LP={kernelName:ho,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s,dimRoundingMode:i}=t,a=n??[1,1];P(Xo(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[u,p]=e;return P(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),P(p.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${p.rank}.`),P(u.shape[3]===p.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),P(Rr(o,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${a}'.`),Dt("depthwiseConv2d",s,i),{x:()=>$b(u.shape,r,p,o,s,a,i),filter:()=>Bb(u,r,p.shape,o,s,a,i)}}};var _P={kernelName:Bu,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,s={x:n,filter:o,dy:r},i={x:n,filter:o,dy:r};return{x:()=>D.runKernel(dd,s,t),filter:()=>D.runKernel(fd,i,t)}}};var BP={kernelName:bo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e,n={dy:r,y:t};return{x:()=>D.runKernel(dm,n)}}};var $P={kernelName:$i,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=L(pr(Qe(qe(t))),2/Math.sqrt(Math.PI));return{x:()=>L(r,n)}}};var OP={kernelName:yo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,t)}}};var zP={kernelName:ds,inputsToSave:["input"],gradFunc:(r,e)=>{let[t]=e;return{input:()=>_(r,t.shape)}}};var GP={kernelName:sa,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,pr(t))}}};var UP={kernelName:To,gradFunc:r=>({x:()=>De(r)})};var WP={kernelName:xo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ge(t.shape,n.shape);return{a:()=>{let a=me(r,J(n,"float32")),u=Ct(t.shape,o);return u.length>0?_(he(a,u),t.shape):a},b:()=>{let a=L(r,J(t,"float32")),u=Ct(n.shape,o);u.length>0&&(a=_(he(a,u),n.shape));let p=qe(n);return Qe(me(a,J(p,"float32")))}}}};var KP={kernelName:Io,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,e,t)=>{let{varianceEpsilon:n}=t,[o,s,i,a]=e,u=a??ce(1),p=Ct(s.shape,o.shape),l=[];if(s.rank===1){for(let I=0;I<o.shape.length-1;++I)l.push(o.shape[I]);l.push(1)}let m=le(o,s),c=L(r,u),d=Kd(X(i,ce(n))),f=L(L(L(d,d),d),ce(-.5));return{x:()=>s.rank===1?_(L(L(r,Kr(_(d,[1,1,1,s.shape[0]]),l)),u),o.shape):_(L(L(r,d),u),o.shape),mean:()=>{let I=L(L(d,ce(-1)),c);return s.rank===1&&(I=he(I,p)),_(I,s.shape)},variance:()=>{let I=L(L(f,m),c);return s.rank===1&&(I=he(I,p)),_(I,s.shape)},scale:()=>{let I=L(m,d),k=L(r,I);return s.rank===1&&(k=he(k,p)),_(k,s.shape)},offset:()=>{let I=r;return s.rank===1&&(I=he(I,p)),_(I,s.shape)}}}};var qP={kernelName:fs,inputsToSave:["x","indices"],gradFunc:(r,e,t)=>{let[n,o]=e,{axis:s}=t,i=hr(s,n.shape)[0];return{x:()=>{let u=n.shape,p=o.size,l=u.slice(0,i),m=l.length,c=u.slice(s,u.length).slice(1),d=c.length,f=VP(0,m),h=VP(m+1,m+1+d),g=HP([l,[p],c]),y=_(r,g),T=_(o,[p]),x=HP([[m],f,h]),I=He(y,x),k=Tk(I,T,n.shape[i]),N=Bd(x);return k=He(k,N),k},indices:()=>o}}};function VP(r,e){let t=[];for(let n=r;n<e;++n)t.push(n);return t}function HP(r){let e=[];for(let t=0;t<r.length;++t)for(let n=0;n<r[t].length;++n)e.push(r[t][n]);return e}var jP={kernelName:Co,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>De(t),b:()=>De(n)}}};var XP={kernelName:Wn,gradFunc:r=>({x:()=>J(r,"float32")})};var YP={kernelName:Oi,gradFunc:r=>({x:()=>De(r)})};var QP={kernelName:zi,gradFunc:r=>({x:()=>De(r)})};var ZP={kernelName:Gi,gradFunc:r=>({x:()=>De(r)})};var JP={kernelName:ko,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{alpha:o}=t,s=tr(n,0);return{x:()=>Bt(s,r,L(r,o))}}};var eE={kernelName:Ui,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,X(t,1))}}};var tE={kernelName:So,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,J(t,"float32"))}}};var rE={kernelName:l0,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t;return{logits:()=>{let i=pr(n);return le(r,L(he(r,o,!0),i))}}}};function UQ(r,e,t,n=5,o=1,s=1,i=.5){let a={x:r,y:e,dy:t},u={depthRadius:n,bias:o,alpha:s,beta:i};return D.runKernel(bm,a,u)}var nE=w({localResponseNormalizationBackprop_:UQ});var oE={kernelName:zu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{depthRadius:s,bias:i,alpha:a,beta:u}=t;return{x:()=>nE(n,o,r,s,i,a,u)}}};function qb(r,e,t,n){return e.rank<t.rank&&(e=_(e,Fs(e.shape,n))),r.rank<t.rank&&(r=_(r,Fs(r.shape,n))),{x:()=>L(r,J(Wr(t,e),r.dtype))}}var wk={kernelName:vo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{reductionIndices:o}=n,s=e[0],i=e[1],a=hr(o,s.shape),u=qb(r,i,s,a);return{x:()=>u.x()}}};var sE={kernelName:Ao,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>L(r,J(Qo(t,n),"float32")),b:()=>L(r,J(Ld(t,n),"float32"))}}};function WQ(r,e,t,n,o,s,i){let a=S(r,"dy","maxPool3dGrad"),u=S(e,"input","maxPool3dGrad"),p=S(t,"output","maxPool3dGrad"),l=a,m=u,c=p,d=!1;u.rank===4&&(d=!0,l=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),m=_(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),c=_(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),P(l.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),P(m.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${m.rank}.`),P(c.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${c.rank}.`),Dt("maxPool3dGrad",s,i);let f={dy:l,input:m,output:c},h={filterSize:n,strides:o,pad:s,dimRoundingMode:i},g=D.runKernel(Tm,f,h);return d?_(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var aE=w({maxPool3dGrad_:WQ});var iE={kernelName:Gu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=t;return{x:()=>aE(r,n,o,s,i,a,u)}}};function KQ(r,e,t,n,o,s,i){let a=S(r,"dy","maxPoolGrad"),u=S(e,"input","maxPoolGrad"),p=S(t,"output","maxPoolGrad");P(u.rank===a.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${a.rank})`),P(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),P(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),Dt("maxPoolGrad",s,i);let l={dy:a,input:u,output:p},m={filterSize:n,strides:o,pad:s,dimRoundingMode:i};return D.runKernel(ym,l,m)}var uE=w({maxPoolGrad_:KQ});var pE={kernelName:wo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:i,pad:a}=t;return{x:()=>uE(r,n,o,s,i,a)}}};var lE={kernelName:No,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t,s=hr(o,n.shape),a=YC(n.shape,s)[1],u=rt(a);return{x:()=>{let l=n.shape.slice();s.forEach(d=>{l[d]=1});let m=_(r,l);return me(L(m,lr(n.shape,"float32")),u)}}}};var mE={kernelName:Do,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{axis:o}=n,[s,i]=e,a=hr(o,s.shape),u=qb(r,i,s,a);return{x:()=>u.x()}}};var cE={kernelName:Po,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>L(r,J(Zo(t,n),"float32")),b:()=>L(r,J(tr(t,n),"float32"))}}};var dE={kernelName:Eo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(i=>i[0]);return{x:()=>ze(r,s,n.shape)}}};var fE={kernelName:Ki,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ge(t.shape,n.shape);return{a:()=>{let a=Ct(t.shape,o);return a.length>0?_(he(r,a),t.shape):r},b:()=>{let a=L(r,Qe(pu(me(t,n)))),u=Ct(n.shape,o);return u.length>0?_(he(a,u),n.shape):a}}}};var hE={kernelName:Mo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ge(t.shape,n.shape);return{a:()=>{let a=L(r,J(n,"float32")),u=Ct(t.shape,o);return u.length>0?_(he(a,u),t.shape):a},b:()=>{let a=L(r,J(t,"float32")),u=Ct(n.shape,o);return u.length>0?_(he(a,u),n.shape):a}}}};var gE={kernelName:hs,gradFunc:r=>({x:()=>Qe(r)})};var bE={kernelName:ha,inputsToSave:["indices"],gradFunc:(r,e)=>{let t=e[0];return{indices:()=>bt(t.shape,"float32")}}};var yE={kernelName:gs,gradFunc:r=>({x:()=>De(r)})};var TE={kernelName:bs,saveAllInputs:!0,gradFunc:(r,e,t)=>{let{axis:n}=t;return Br(r,n).map(s=>()=>s)}};var Nk={kernelName:Fo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(i=>i[0]);return{x:()=>ze(r,s,n.shape)}}};var xE={kernelName:Ro,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,e)=>{let[t,n,o]=e,s=t,i=n,a=Ge(s.shape,i.shape);return{a:()=>{let l=J(i,"float32"),m=L(r,L(l,Pn(s,le(l,ce(1))))),c=Ct(s.shape,a);return c.length>0&&(m=he(m,c)),_(m,s.shape)},b:()=>{let l=tr(s,0),m=Bt(l,_r(s),De(s)),c=L(r,L(o,m)),d=Ct(i.shape,a);return d.length>0&&(c=he(c,d)),_(c,i.shape)}}}};var IE={kernelName:Lo,inputsToSave:["x","alpha"],gradFunc:(r,e)=>{let[t,n]=e,o=tr(t,0);return{x:()=>Bt(o,r,L(r,n)),alpha:()=>{let s=Bt(o,De(r),L(r,t)),i=Ct(n.shape,r.shape);return i.length>0&&(s=he(s,i)),_(s,n.shape)}}}};var CE={kernelName:go,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ge(t.shape,n.shape);return{a:()=>{let a=me(r,J(n,"float32")),u=Ct(t.shape,o);return u.length>0?_(he(a,u),t.shape):a},b:()=>{let a=L(r,J(t,"float32")),u=Ct(n.shape,o);u.length>0&&(a=_(he(a,u),n.shape));let p=qe(n);return Qe(me(a,J(p,"float32")))}}}};var kE={kernelName:Hi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,Qe(qe(t)))}}};var SE={kernelName:$o,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=L(Zo(t,6),cu(t));return{x:()=>L(r,J(n,"float32"))}}};var vE={kernelName:_o,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,J(cu(t),"float32"))}}};var AE={kernelName:ys,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(r,t.shape)}}};var wE={kernelName:Bo,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>D.runKernel(km,o,t)}}};var NE={kernelName:ti,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>D.runKernel(Cm,o,t)}}};var DE={kernelName:ba,gradFunc:(r,e,t)=>{let{dims:n}=t,o=hr(n,r.shape);return{x:()=>gr(r,o)}}};var PE={kernelName:ya,gradFunc:r=>({x:()=>De(r)})};var EE={kernelName:Oo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Qe(me(r,L(Pn(t,1.5),2)))}}};var ME={kernelName:Ts,inputsToSave:["condition"],gradFunc:(r,e)=>{let[t]=e;return{condition:()=>J(De(t),"float32"),t:()=>L(r,J(t,r.dtype)),e:()=>L(r,J(Vp(t),r.dtype))}}};var FE={kernelName:qi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=tr(t,ce(0)),o=ce(kk),s=ce(Sk),i=L(r,s),a=L(L(r,o),pr(J(t,"float32")));return Bt(n,i,a)}}}};var RE={kernelName:Go,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,L(t,le(ce(1),t)))}}};var LE={kernelName:ji,gradFunc:r=>({x:()=>De(r)})};var _E={kernelName:zo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(Gp(J(t,"float32")),r)}}};var BE={kernelName:xa,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(Fd(J(t,"float32")),r)}}};var $E={kernelName:xs,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{begin:o,size:s}=t,i=n.shape,[a,u]=dC(n,o,s),p=[];for(let l=0;l<r.rank;l++)p.push([a[l],i[l]-a[l]-u[l]]);return{x:()=>Dn(r,p)}}};var OE={kernelName:Ko,outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{dim:o}=t,s=!0,i=L(r,n);return{logits:()=>le(i,L(he(i,[o],s),n))}}};var zE={kernelName:Xi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,un(t))}}};var Dk={kernelName:Is,gradFunc:(r,e,t)=>{let{blockShape:n,paddings:o}=t;return{x:()=>Op(r,n,o)}}};var Pk={kernelName:Cs,gradFunc:(r,e,t)=>{let{axis:n}=t;return{x:()=>it(r,n)}}};var GE={kernelName:Uo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,L(Rt(J(t,"float32")),2))}}};var UE={kernelName:ri,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,L(J(t,"float32"),2))}}};var WE={kernelName:Vo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ce(2);return{a:()=>L(r,L(o,le(t,n))),b:()=>L(r,L(o,le(n,t)))}}};var KE={kernelName:vs,gradFunc:r=>({x:()=>De(r)})};var VE={kernelName:Ho,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ge(t.shape,n.shape);return{a:()=>{let a=r,u=Ct(t.shape,o);return u.length>0&&(a=he(a,u)),_(a,t.shape)},b:()=>{let a=r,u=Ct(n.shape,o);return u.length>0&&(a=he(a,u)),_(Qe(a),n.shape)}}}};var HE={kernelName:Wo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,o=n.shape.slice(),{axis:s}=t;hr(s,n.shape).forEach(p=>{o[p]=1});let a=_(r,o),u=L(a,lr(n.shape,"float32"));return{x:()=>u}}};var qE={kernelName:Ca,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,qe(Gp(t)))}}};var jE={kernelName:qo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(le(ce(1),qe(t)),r)}}};var XE={kernelName:An,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{reps:o}=t;return{x:()=>{let i=De(n);if(n.rank===1)for(let a=0;a<o[0];++a)i=X(i,ze(r,[a*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let a=0;a<o[0];++a)for(let u=0;u<o[1];++u)i=X(i,ze(r,[a*n.shape[0],u*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let a=0;a<o[0];++a)for(let u=0;u<o[1];++u)for(let p=0;p<o[2];++p)i=X(i,ze(r,[a*n.shape[0],u*n.shape[1],p*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let a=0;a<o[0];++a)for(let u=0;u<o[1];++u)for(let p=0;p<o[2];++p)for(let l=0;l<o[3];++l)i=X(i,ze(r,[a*n.shape[0],u*n.shape[1],p*n.shape[2],l*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return i}}}};var YE={kernelName:jo,gradFunc:(r,e,t)=>{let n=t,{perm:o}=n,s=Bd(o);return{x:()=>He(r,s)}}};var QE={kernelName:ks,gradFunc:(r,e,t)=>{let n=t,{axis:o}=n;return{value:()=>mr(r,o)}}};var ZE={kernelName:ju,inputsToSave:["segmentIds"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>VQ(r,t)}}};function VQ(r,e){let t=Xn(e,De(e)),n=ii(r,t),o=Qo(e,ce(0,"int32")),s=n.rank-o.rank;for(let a=0;a<s;++a)o=Nr(o,a+1);o=Vr(o,lr(n.shape,"bool"));let i=De(n);return Bt(o,n,i)}var JE={kernelName:Ss,gradFunc:r=>({x:()=>De(r)})};var HQ=[Hb,sP,aP,iP,uP,pP,lP,mP,cP,dP,fP,hP,bP,TP,xP,IP,CP,kP,SP,vP,AP,wP,DP,NP,EP,MP,FP,RP,LP,_P,CE,BP,$P,OP,zP,GP,WP,UP,KP,qP,jP,XP,YP,QP,ZP,JP,eE,tE,rE,oE,wk,wk,sE,iE,pE,lE,mE,cE,dE,fE,hE,gE,bE,yE,TE,Nk,Nk,xE,IE,kE,SE,vE,AE,wE,NE,DE,PE,EE,ME,FE,RE,LE,_E,BE,$E,OE,zE,Dk,Dk,Pk,Pk,GE,WE,UE,KE,VE,HE,qE,jE,XE,YE,QE,ZE,JE];for(let r of HQ)c0(r);var sM={};je(sM,{maxNorm:()=>jQ,minMaxNorm:()=>QQ,nonNeg:()=>YQ,unitNorm:()=>XQ});var Ek;function cr(){return Ek==null&&(Ek=U2().epsilon()),Ek}function mn(){return"channelsLast"}var Yn=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Yn.prototype)}},en=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,en.prototype)}},O=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,O.prototype)}},Ee=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Ee.prototype)}},ef=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,ef.prototype)}};function Bs(r,e){if(Array.isArray(r)){let t=[];for(let n=0;n<e;n++)t=t.concat(r);return t}else{let t=new Array(e);return t.fill(r),t}}function Jo(r,e){if(!r)throw new ef(e)}function Fk(r,e){let t=0;for(let n of r)n===e&&t++;return t}function Pr(r){return r.length===1?r[0]:r}function kt(r){return Array.isArray(r)?r:[r]}function $s(r){let t=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function fu(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}var _s={};function Hm(r){if(r==null)return null;let e={};return e.className=r.getClassName(),e.config=r.getConfig(),e}function Mk(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(e=>Mk(e));else{let e=Object.keys(r);for(let t of e){let n=r[t];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?r[t]=n.value:Mk(n))}}}function ci(r,e={},t={},n="object",o=!1){if(typeof r=="string"){let s=r,i;if(s in t)i=t[s];else if(s in _s)i=_s[s];else if(i=e[s],i==null)throw new O(`Unknown ${n}: ${r}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=r;if(s.className==null||s.config==null)throw new O(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,a,u;if(i in t?[a,u]=t[i]:i in _s?[a,u]=_s.className:i in e&&([a,u]=e[i]),a==null)throw new O(`Unknown ${n}: ${i}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){let p={};for(let d of Object.keys(_s))p[d]=_s[d];for(let d of Object.keys(t))p[d]=t[d];let l=s.config;l.customObjects=p;let m={..._s};for(let d of Object.keys(t))_s[d]=t[d];Mk(s.config);let c=u(a,s.config,t,o);return _s={...m},c}else{let p={..._s};for(let m of Object.keys(t))_s[m]=t[m];let l=new a(s.config);return _s={...p},l}}}function qQ(r,e){return r<e?-1:r>e?1:0}function tf(r,e){return-1*qQ(r,e)}function Os(r){if(r==null)return r;let e=[];for(let t of r)e.indexOf(t)===-1&&e.push(t);return e}function eM(r){if(r==null)throw new O(`Invalid value in obj: ${JSON.stringify(r)}`);for(let e in r)if(r.hasOwnProperty(e))return!1;return!0}function di(r,e,t){if(t!=null&&r.indexOf(t)<0)throw new O(`${t} is not a valid ${e}.  Valid values are ${r} or null/undefined.`)}function jb(r,e,t=0,n=1/0){return Jo(t>=0),Jo(n>=t),Array.isArray(r)&&r.length>=t&&r.length<=n&&r.every(o=>typeof o===e)}function rr(r,e){Array.isArray(r)?(b.assert(r.length>0,()=>`${e} is unexpectedly an empty array.`),r.forEach((t,n)=>rr(t,`element ${n+1} of ${e}`))):b.assert(Number.isInteger(r)&&r>0,()=>`Expected ${e} to be a positive integer, but got ${tM(r)}.`)}function tM(r){return r===null?"null":Array.isArray(r)?"["+r.map(e=>tM(e)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function rM(r,e,t){let n=t!=null?t():b.now(),o;return(...i)=>{let a=t!=null?t():b.now();return a-n<e||(n=a,o=r(...i)),o}}function Xb(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}function Rk(r,e){return G(()=>Rt(he(L(r,r),e,!0)))}var qm=class extends re.Serializable{getConfig(){return{}}},rf=class extends qm{constructor(e){super();this.defaultMaxValue=2;this.defaultAxis=0;this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return G(()=>{let t=Rk(e,this.axis),n=Lr(t,0,this.maxValue);return L(e,me(n,X(cr(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};rf.className="MaxNorm";re.registerClass(rf);var nf=class extends qm{constructor(e){super();this.defaultAxis=0;this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return G(()=>me(e,X(cr(),Rk(e,this.axis))))}getConfig(){return{axis:this.axis}}};nf.className="UnitNorm";re.registerClass(nf);var of=class extends qm{apply(e){return Hr(e)}};of.className="NonNeg";re.registerClass(of);var sf=class extends qm{constructor(e){super();this.defaultMinValue=0;this.defaultMaxValue=1;this.defaultRate=1;this.defaultAxis=0;this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return G(()=>{let t=Rk(e,this.axis),n=X(L(this.rate,Lr(t,this.minValue,this.maxValue)),L(1-this.rate,t));return L(e,me(n,X(cr(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};sf.className="MinMaxNorm";re.registerClass(sf);var nM={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function qt(r){return Hm(r)}function oM(r,e={}){return ci(r,re.SerializationMap.getMap().classNameMap,e,"constraint")}function jt(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in nM?nM[r]:r,config:{}};return oM(t)}else return r instanceof qm?r:oM(r)}function jQ(r){return new rf(r)}function XQ(r){return new nf(r)}function YQ(){return new of}function QQ(r){return new sf(r)}var vM={};je(vM,{constant:()=>s7,glorotNormal:()=>c7,glorotUniform:()=>m7,heNormal:()=>d7,heUniform:()=>f7,identity:()=>p7,leCunNormal:()=>h7,leCunUniform:()=>g7,ones:()=>o7,orthogonal:()=>b7,randomNormal:()=>i7,randomUniform:()=>a7,truncatedNormal:()=>u7,varianceScaling:()=>l7,zeros:()=>n7});var aM=["channelsFirst","channelsLast"],iM=["nearest","bilinear"],uM=["valid","same","causal"],pM=["max","avg"],lM=["sum","mul","concat","ave"];var jm=new Map;function Kt(r){di(aM,"DataFormat",r)}function cM(r){di(iM,"InterpolationFormat",r)}function cn(r){di(uM,"PaddingMode",r)}function Lk(r){di(pM,"PoolMode",r)}var af=[],mM="/";function Fa(r,e){af.push(r);try{let t=e();return af.pop(),t}catch(t){throw af.pop(),t}}function ZQ(){return af.length===0?"":af.join(mM)+mM}function Yb(r){if(!dM(r))throw new Error("Not a valid tensor name: '"+r+"'");return ZQ()+r}function Qb(r){if(!dM(r))throw new Error("Not a valid tensor name: '"+r+"'");jm.has(r)||jm.set(r,0);let e=jm.get(r);if(jm.set(r,jm.get(r)+1),e>0){let t=`${r}_${e}`;return jm.set(t,1),t}else return r}var JQ=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function dM(r){return!!r.match(JQ)}function fM(r){return r===parseInt(r.toString(),10)}function zs(r,e,t){e==null&&(e=0),t==null&&(t=r.length);let n=1;for(let o=e;o<t;++o)n*=r[o];return n}function ml(r){if(r.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n<e&&(e=n)}return e}function Ra(r){if(r.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n>e&&(e=n)}return e}function tn(r,e){if(e<r)throw new O(`end (${e}) < begin (${r}) is forbidden.`);let t=[];for(let n=r;n<e;++n)t.push(n);return t}function cl(r,e){return J(r,e)}function gu(r,e=-1){let t=r.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),_(r,t)}function hM(r,e){return G(()=>{if(r.shape.length!==2)throw new O(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let t=gu(r,1);return Jb(t,[1,e,1])})}function gM(r){let e=[zs(r.shape)];return _(r,e)}function bM(r){if(r.rank<=1)throw new O(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let e=[r.shape[0],zs(r.shape,1)];return _(r,e)}function hu(r,e,t){return G(()=>{switch(r.rank){case 1:return jd(r,e,t);case 2:return Eb(r,[e,0],[t,r.shape[1]]);case 3:return Xd(r,[e,0,0],[t,r.shape[1],r.shape[2]]);case 4:return Km(r,[e,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3]]);case 5:return ze(r,[e,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return ze(r,[e,0,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new O(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function _k(r,e,t){return G(()=>{switch(r.rank){case 1:return jd(r,e,t);case 2:return Eb(r,[0,e],[r.shape[0],t]);case 3:return Xd(r,[0,0,e],[r.shape[0],r.shape[1],t]);case 4:return Km(r,[0,0,0,e],[r.shape[0],r.shape[1],r.shape[2],t]);default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function uf(r,e,t,n){return G(()=>{switch(r.rank){case 1:return jd(r,e,t);case 2:switch(n){case 1:return hu(r,e,t);case 2:return _k(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return hu(r,e,t);case 2:return Xd(r,[0,e,0],[r.shape[0],t,r.shape[2]]);case 3:return _k(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return hu(r,e,t);case 2:return Km(r,[0,e,0,0],[r.shape[0],t,r.shape[2],r.shape[3]]);case 3:return Km(r,[0,0,e,0],[r.shape[0],r.shape[1],t,r.shape[3]]);case 4:return _k(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Xm(r,e=-1){let t;return e<0&&(t=r[0].rank,t!==0?e=t:e=0),e===r[0].rank&&(e=-1),it(r,e)}function $k(r,e){switch(r.rank){case 1:return RC([r,e]);case 2:return LC([r,e],0);case 3:return _C([r,e],0);case 4:return BC([r,e],0);default:throw new O(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function Jb(r,e){if(Array.isArray(e)||(e=[e]),r.rank!==e.length)throw new O(`The length of input n (${e.length}) does not match the number of dimensions in input x (${r.rank})`);return Kr(r,e)}function Ym(r,e=0,t=1,n,o){return Pb(r,e,t,n,o)}function Gs(r,e,t,n){if(r.rank<2||e.rank<2)throw new Ee(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${e.shape}`);if(e.rank>=3){let o=r.shape.slice(-1)[0],s=e.shape.slice(-2)[0];if(o!==s)throw new Ee(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${e.shape}`)}if(r.rank===2&&e.rank===2)return Rs.matMul({a:r,b:e,transposeA:!1,transposeB:!1,bias:n?Bk(r.rank,n,mn()):null,activation:t});{let o=r.shape.slice(),s=o.pop();r=_(r,[-1,s]);let i=e.shape.slice(),a=i.pop(),u=i.pop(),p=[...i,a],l=Array.from({length:e.rank},(f,h)=>h===0?e.rank-2:h<=e.rank-2?h-1:h);e=_(He(e,l),[u,-1]);let m=[...o,...p],c=!1,d=!1;return _(Rs.matMul({a:r,b:e,transposeA:c,transposeB:d,bias:n?Bk(r.rank,n,mn()):null,activation:t}),m)}}function ey(r,e,t){return G(()=>(Array.isArray(e)?e=$t(e,"int32"):e=J(e,"int32"),ii(r,e,t)))}function dl(r){return L(r,r)}function Bk(r,e,t){let n=e.shape;if(e.rank!==1&&e.rank!==r)throw new O(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${r}`);if(r===5){if(t==="channelsFirst")return n.length===1?_(e,[1,n[0],1,1,1]):_(e,[1,n[3],n[0],n[1],n[2]]);if(t==="channelsLast")return n.length===1?_(e,[1,1,1,1,n[0]]):_(e,[1].concat(n))}else if(r===4){if(t==="channelsFirst")return n.length===1?_(e,[1,n[0],1,1]):_(e,[1,n[2],n[0],n[1]]);if(t==="channelsLast")return n.length===1?_(e,[1,1,1,n[0]]):_(e,[1].concat(n))}else if(r===3){if(t==="channelsFirst")return n.length===1?_(e,[1,n[0],1]):_(e,[1,n[1],n[0]]);if(t==="channelsLast")return n.length===1?_(e,[1,1,n[0]]):_(e,[1].concat(n))}else if(r<3)return e;throw new O(`Unsupported input rank by biasAdd: ${e.rank}`)}function dn(r,e,t){return G(()=>(t==null&&(t=mn()),Kt(t),X(r,Bk(r.rank,e,t))))}function yM(r,e=1){if(e!==1)throw new Ee(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return uu(r)}function TM(r){return G(()=>me(r,X(_t(r),1)))}function ty(r,e,t,n){return G(()=>f1(r,e,t,n))}function xM(r){return G(()=>{let e=X(.5,L(.2,r));return Lr(e,0,1)})}function rp(r,e,t=!1){return t?r():e()}var IM=["fanIn","fanOut","fanAvg"],CM=["normal","uniform","truncatedNormal"];function e7(r){di(IM,"FanMode",r)}function t7(r){di(CM,"Distribution",r)}var Mn=class extends re.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},pf=class extends Mn{apply(e,t){return bt(e,t)}};pf.className="Zeros";re.registerClass(pf);var fl=class extends Mn{apply(e,t){return lr(e,t)}};fl.className="Ones";re.registerClass(fl);var lf=class extends Mn{constructor(e){super();if(typeof e!="object")throw new O(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new O(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return G(()=>L(ce(this.value),lr(e,t)))}getConfig(){return{value:this.value}}};lf.className="Constant";re.registerClass(lf);var mf=class extends Mn{constructor(e){super();this.DEFAULT_MINVAL=-.05;this.DEFAULT_MAXVAL=.05;this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Pa(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};mf.className="RandomUniform";re.registerClass(mf);var cf=class extends Mn{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ee(`randomNormal does not support dType ${t}.`);return Ym(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};cf.className="RandomNormal";re.registerClass(cf);var df=class extends Mn{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ee(`truncatedNormal does not support dType ${t}.`);return Jp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};df.className="TruncatedNormal";re.registerClass(df);var ff=class extends Mn{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return G(()=>{if(e.length!==2||e[0]!==e[1])throw new O("Identity matrix initializer can only be used for 2D square matrices.");return L(this.gain,zm(e[0]))})}getConfig(){return{gain:this.gain}}};ff.className="Identity";re.registerClass(ff);function r7(r,e="channelsLast"){let t,n;if(Kt(e),r.length===2)t=r[0],n=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(e==="channelsFirst"){let o=zs(r,2);t=r[1]*o,n=r[0]*o}else if(e==="channelsLast"){let o=zs(r,0,r.length-2);t=r[r.length-2]*o,n=r[r.length-1]*o}}else{let o=zs(r);t=Math.sqrt(o),n=Math.sqrt(o)}return[t,n]}var rn=class extends Mn{constructor(e){super();if(e.scale<0)throw new O(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,e7(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,t7(this.distribution),this.seed=e.seed}apply(e,t){let n=r7(e),o=n[0],s=n[1],i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,o):this.mode==="fanOut"?i/=Math.max(1,s):i/=Math.max(1,(o+s)/2),this.distribution==="normal"){let a=Math.sqrt(i);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ee(`${this.getClassName()} does not support dType ${t}.`);return Jp(e,0,a,t,this.seed)}else{let a=Math.sqrt(3*i);return Pa(e,-a,a,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};rn.className="VarianceScaling";re.registerClass(rn);var Qm=class extends rn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return rn.className}};Qm.className="GlorotUniform";re.registerClass(Qm);var Zm=class extends rn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return rn.className}};Zm.className="GlorotNormal";re.registerClass(Zm);var Jm=class extends rn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return rn.className}};Jm.className="HeNormal";re.registerClass(Jm);var ec=class extends rn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return rn.className}};ec.className="HeUniform";re.registerClass(ec);var tc=class extends rn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return rn.className}};tc.className="LeCunNormal";re.registerClass(tc);var rc=class extends rn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return rn.className}};rc.className="LeCunNormal";re.registerClass(rc);var hf=class extends Mn{constructor(e){super();this.DEFAULT_GAIN=1;if(this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Ee("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return G(()=>{if(e.length<2)throw new Ee("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,o=Ym(n,0,1,"float32"),s=rP.gramSchmidt(o);return e[0]>e[1]&&(s=He(s)),L(this.gain,s)})}getConfig(){return{gain:this.gain,seed:this.seed}}};hf.className="Orthogonal";re.registerClass(hf);var kM={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function SM(r,e={}){return ci(r,re.SerializationMap.getMap().classNameMap,e,"initializer")}function Pt(r){return Hm(r)}function Tt(r){if(typeof r=="string"){let e=r in kM?kM[r]:r;if(e==="GlorotNormal")return new Zm;if(e==="GlorotUniform")return new Qm;if(e==="HeNormal")return new Jm;if(e==="HeUniform")return new ec;if(e==="LeCunNormal")return new tc;if(e==="LeCunUniform")return new rc;{let t={};return t.className=e,t.config={},SM(t)}}else return r instanceof Mn?r:SM(r)}function n7(){return new pf}function o7(){return new fl}function s7(r){return new lf(r)}function a7(r){return new mf(r)}function i7(r){return new cf(r)}function u7(r){return new df(r)}function p7(r){return new ff(r)}function l7(r){return new rn(r)}function m7(r){return new Qm(r)}function c7(r){return new Zm(r)}function d7(r){return new Jm(r)}function f7(r){return new ec(r)}function h7(r){return new tc(r)}function g7(r){return new rc(r)}function b7(r){return new hf(r)}var iF={};je(iF,{Layer:()=>We,RNN:()=>Ws,RNNCell:()=>pp,activation:()=>UZ,add:()=>QZ,alphaDropout:()=>RJ,average:()=>ZZ,averagePooling1d:()=>DS,averagePooling2d:()=>PS,averagePooling3d:()=>ES,avgPool1d:()=>iJ,avgPool2d:()=>pJ,avgPool3d:()=>mJ,avgPooling1d:()=>uJ,avgPooling2d:()=>lJ,avgPooling3d:()=>cJ,batchNormalization:()=>oJ,bidirectional:()=>AJ,concatenate:()=>JZ,conv1d:()=>FZ,conv2d:()=>RZ,conv2dTranspose:()=>LZ,conv3d:()=>_Z,conv3dTranspose:()=>BZ,convLstm2d:()=>CJ,convLstm2dCell:()=>kJ,cropping2D:()=>OZ,dense:()=>WZ,depthwiseConv2d:()=>GZ,dot:()=>nJ,dropout:()=>KZ,elu:()=>wZ,embedding:()=>YZ,flatten:()=>HZ,gaussianDropout:()=>FJ,gaussianNoise:()=>MJ,globalAveragePooling1d:()=>dJ,globalAveragePooling2d:()=>fJ,globalMaxPool1d:()=>NJ,globalMaxPool2d:()=>DJ,globalMaxPooling1d:()=>nF,globalMaxPooling2d:()=>oF,gru:()=>gJ,gruCell:()=>bJ,input:()=>Qk,inputLayer:()=>AZ,layerNormalization:()=>sJ,leakyReLU:()=>DZ,lstm:()=>yJ,lstmCell:()=>TJ,masking:()=>LJ,maxPool1d:()=>PJ,maxPool2d:()=>EJ,maxPooling1d:()=>sF,maxPooling2d:()=>aF,maxPooling3d:()=>hJ,maximum:()=>eJ,minimum:()=>tJ,multiply:()=>rJ,permute:()=>XZ,prelu:()=>PZ,reLU:()=>NZ,repeatVector:()=>qZ,reshape:()=>jZ,rnn:()=>SJ,separableConv2d:()=>$Z,simpleRNN:()=>xJ,simpleRNNCell:()=>IJ,softmax:()=>EZ,spatialDropout1d:()=>VZ,stackedRNNCells:()=>vJ,thresholdedReLU:()=>MZ,timeDistributed:()=>wJ,upSampling2d:()=>zZ,zeroPadding2d:()=>aJ});var y7=0;function ny(){return y7++}var ry={};function np(r=""){return r in ry||(ry[r]=0),ry[r]+=1,r+ry[r].toString()}function oy(r){return Array.isArray(r)&&Array.isArray(r[0])}function nc(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function Oe(r){let e;if(Array.isArray(r)){if(r.length!==1)throw new O(`Expected Tensor length to be 1; got ${r.length}`);e=r[0]}else e=r;return e}function Ze(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new O(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function oc(r){let e=0;for(let t of r)t.shape.length===0?e+=1:e+=t.shape.reduce((n,o)=>n*o);return e}var wM="Variable",sy=class{constructor(e,t="float32",n=wM,o=!0,s=null){this.dtype=t??"float32",this.shape=e.shape,this.id=ny(),n=n??wM,this.originalName=Yb(n),this.name=Qb(this.originalName),this.trainable_=o,this.constraint=s,this.val=xk(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),x7(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function x7(r,e){if(r.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(e.shape))}function gf(r){return r.map(e=>e.read())}function sc(r){r.forEach(e=>{e[0].write(e[1])})}var Et=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},hn=class{constructor(e,t,n,o,s,i,a){this.dtype=e;this.shape=t;this.sourceLayer=n;this.inputs=o;this.callArgs=s;this.outputTensorIndex=a;this.id=ny(),i!=null&&(this.originalName=Yb(i),this.name=Qb(this.originalName)),this.rank=t.length}},I7=0,op=class{constructor(e,t){this.callArgs=t;this.id=I7++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},C7=0,We=class extends re.Serializable{constructor(e={}){super();this._callHook=null;this._addedWeightNames=[];this._stateful=!1;this.id=C7++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=$s(n)+"_"+np(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let s=null;e.batchSize!=null&&(s=e.batchSize),n=[s].concat(e.inputShape)}this.batchInputShape=n;let o=e.dtype;o==null&&(o=e.inputDType),o==null&&(o="float32"),this.dtype=o}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new en(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new O(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Pr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Pr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Yn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Yn(`Layer ${this.name} is not connected, no input to return.`);return Pr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Yn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Yn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Pr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=kt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=kt(this.inputSpec);if(e.length!==t.length)throw new O(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let o=e[n],s=t[n];if(s==null)continue;let i=o.rank;if(s.ndim!=null&&i!==s.ndim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(s.maxNDim!=null&&i>s.maxNDim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(s.minNDim!=null&&i<s.minNDim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(s.dtype!=null&&o.dtype!==s.dtype)throw new O(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${o.dtype}.`);if(s.axes){let a=o.shape;for(let u in s.axes){let p=Number(u),l=s.axes[u],m=p>=0?a[p]:a[a.length+p];if(l!=null&&[l,null].indexOf(m)===-1)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected axis ${p} of input shape to have value ${l} but got shape ${a}.`)}}if(s.shape!=null)for(let a=0;a<s.shape.length;++a){let u=s.shape[a],p=o.shape[a];if(u!=null&&p!=null&&u!==p)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=kt(e),o=!0;for(let i of n)if(!(i instanceof hn)){o=!1;break}let s=!0;for(let i of n)if(i instanceof hn){s=!1;break}if(o===s)throw new O("Arguments to apply() must be all SymbolicTensors or all Tensors");return Fa(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let i=[];for(let a of kt(e))i.push(a.shape);this.build(Pr(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let i=this.call(e,t),a=kt(i),u=[];for(let p of a)n.indexOf(p)!==-1&&(p=p.clone()),u.push(p);if(i=Pr(u),this.activityRegularizer!=null)throw new Ee("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{let i=k7(e),a=this.computeOutputShape(i),u,p=S7(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),a!=null&&a.length>0&&Array.isArray(a[0])?u=a.map((l,m)=>new hn(p,l,this,kt(e),t,this.name,m)):u=new hn(p,a,this,kt(e),t,this.name),this.addInboundNode(e,u,null,null,i,a,t),this._refCount++,this.activityRegularizer!=null)throw new Ee("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,o)=>{n!=null&&e[o]!=null&&e[o]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Yn(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Yn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new en(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return oc(this.weights)}build(e){this.built=!0}getWeights(e=!1){return gf(e?this.trainableWeights:this.weights)}setWeights(e){G(()=>{let t=this.weights;if(t.length!==e.length)throw new O(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],o=gf(t);for(let s=0;s<o.length;++s){let i=o[s],a=t[s],u=e[s];if(!b.arraysEqual(i.shape,u.shape))throw new O(`Layer weight shape ${i.shape} not compatible with provided weight shape ${u.shape}`);n.push([a,u])}sc(n)})}addWeight(e,t,n,o,s,i,a,u){if(this._addedWeightNames.indexOf(e)!==-1)throw new O(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(o=u!=null?u():Tt("zeros"));let p=o.apply(t,n),l=new sy(p,n,e,i,a);return p.dispose(),s!=null&&this.addLoss(()=>s.apply(l.read())),i==null&&(i=!0),i?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=kt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,o,s,i,a=null){let u=kt(e);t=kt(t),n=kt(n),o=kt(o),s=nc(s),i=nc(i);let p=[],l=[],m=[];for(let c of u)p.push(c.sourceLayer),l.push(c.nodeIndex),m.push(c.tensorIndex);new op({outboundLayer:this,inboundLayers:p,nodeIndices:l,tensorIndices:m,inputTensors:u,outputTensors:t,inputMasks:n,outputMasks:o,inputShapes:s,outputShapes:i},a);for(let c=0;c<t.length;c++)t[c].sourceLayer=this,t[c].nodeIndex=this.inboundNodes.length-1,t[c].tensorIndex=c}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function k7(r){r=kt(r);let e=[];for(let t of r)e.push(t.shape);return Pr(e)}function S7(r){return"float32"}function Ok(r,e,t){if((e==null||t!=null&&t>0)&&(e=r.sourceLayer,t=r.nodeIndex),e.inboundNodes.length===0)return[r];{let n=e.inboundNodes[t];if(n.inboundLayers.length===0)return n.inputTensors;{let o=[];for(let s=0;s<n.inboundLayers.length;s++){let i=n.inputTensors[s],a=n.inboundLayers[s],u=n.nodeIndices[s],p=Ok(i,a,u);for(let l of p)o.indexOf(l)===-1&&o.push(l)}return o}}}var fi=class extends We{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:np("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new O("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new O("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new O("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let o=new hn(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new op({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new O(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};fi.className="InputLayer";re.registerClass(fi);function ay(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new O("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=r.batchShape;r.shape!=null&&e==null&&(e=[null].concat(r.shape));let t=r.dtype;return t==null&&(t="float32"),new fi({batchInputShape:e,name:r.name,dtype:t,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}async function hi(r){if(r==null)return;let e=[],t=[],n=[];for(let o in r){let s=r[o];if(typeof s!="number"){let i=s;e.push(i.data()),t.push(o),n.push(i)}}if(e.length>0){let o=await Promise.all(e);for(let s=0;s<o.length;++s)r[t[s]]=o[s][0];Fe(n)}}function iy(r){if(r!=null)for(let e in r){let t=r[e];typeof t!="number"&&t.dispose()}}var v7=125,sp=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},zk=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},NM=class extends sp{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let o in t){let s=t[o];if(typeof s=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+s*n;else{let i;o in this.totals?i=this.totals[o]:this.totals[o]=0;let a=G(()=>X(this.totals[o],L(s,n)));this.totals[o]=a,i!=null&&i.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:G(()=>{let o=L(me(1,this.seen),this.totals[n]);t[n]=o,this.totals[n].dispose(),Wt(t[n])}))}},Gk=class extends sp{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let s in this.history){let i=this.history[s];for(let a=0;a<i.length;++a)if(typeof i[a]!="number"){let u=i[a];e.push(u.data()),t.push(s),n.push(a)}}let o=await Promise.all(e);for(let s=0;s<o.length;++s)this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=o[s][0]}},Uk=class extends sp{constructor(e,t){super();this.currentEpoch=0;if(this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Ck,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=v7),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");b.isNumber(this.yieldEvery)&&(this.maybeWait=rM(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let o=[];this.yield!=null&&(await hi(n),o.push(this.yield(e,t,n))),o.push(this.nextFrameFunc()),await Promise.all(o)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await hi(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await hi(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await hi(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await hi(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):b.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await hi(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await hi(e),await this.trainEnd(e))}};function uy(r,e){return r==null&&(r={}),r instanceof sp?[r]:Array.isArray(r)&&r[0]instanceof sp?r:kt(r).map(n=>new Uk(n,e))}var La=class{constructor(){}static registerCallbackConstructor(e,t){b.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),La.checkForDuplicate(t),La.constructors[e]==null&&(La.constructors[e]=[]),La.constructors[e].push(t)}static checkForDuplicate(e){for(let t in La.constructors)La.constructors[+t].forEach(o=>{if(o===e)throw new O("Duplicate callback constructor.")})}static clear(){La.constructors={}}static createCallbacks(e){let t=[];for(let n in La.constructors){let o=+n;e>=o&&t.push(...La.constructors[o])}return t.map(n=>new n)}},bf=La;bf.constructors={};function py(r,e,t,n,o,s,i,a,u){let p=new Gk,l=[new NM,...bf.createCallbacks(e)];r!=null&&l.push(...r),l.push(p);let m=new zk(l);return m.setParams({epochs:t,initialEpoch:n,samples:o,steps:s,batchSize:i,verbose:e,doValidation:a,metrics:u}),{callbackList:m,history:p}}function gn(r,e={},t=!1){return ci(r,re.SerializationMap.getMap().classNameMap,e,"layer",t)}function yf(r,e){return G(()=>{r.dtype!=="float32"&&(r=J(r,"float32"));let t=he(dl(r),e,!0),n=Da(t.shape,cr()),o=Rt(Xn(t,n));return me(r,o)})}function gi(r,e){return G(()=>Ft(dl(le(e,r)),-1))}function ac(r,e){return G(()=>Ft(_t(le(e,r)),-1))}function ap(r,e){return G(()=>{let t=le(r,e),n=Lr(_t(r),cr(),Number.MAX_VALUE),o=_t(me(t,n));return L(100,Ft(o,-1))})}function A7(r,e){return G(()=>{let t=Lr(e,cr(),Number.MAX_VALUE),n=_r(X(1,t)),o=Lr(r,cr(),Number.MAX_VALUE),s=_r(X(1,o));return Ft(dl(le(n,s)),-1)})}function w7(r,e){return G(()=>{let t=Xn(0,le(1,L(r,e)));return Ft(dl(t),-1)})}function N7(r,e){return G(()=>{let t=Xn(0,le(1,L(r,e)));return Ft(t,-1)})}function D7(r,e){return G(()=>{let t=he(L(r,e),-1),n=Zr(L(le(1,r),e),-1);return Xn(0,X(1,le(n,t)))})}function P7(r,e){return G(()=>{let t=Math.log(2),n=le(e,r),o=le(X(n,ui(L(-2,n))),t);return Ft(o,-1)})}function hl(r,e,t=!1){return G(()=>{if(t)e=Yp(e);else{let n=he(e,e.shape.length-1,!0);e=me(e,n)}return e=Lr(e,cr(),1-cr()),Qe(he(L(J(r,"float32"),_r(e)),e.shape.length-1))})}function ic(r,e,t=!1){return G(()=>{let n=J(pu(gM(r)),"int32");e=Lr(e,cr(),1-cr());let o=e.shape,s=_(nu(n,o[o.length-1]),o);return hl(s,e,t)})}function E7(r,e){if(!b.arraysEqual(r.shape,e.shape))throw new O(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(e.shape)}`);return G(()=>{let t=Hr(e),n=Qe(_t(e));return X(le(t,L(e,r)),Kp(pr(n)))})}function uc(r,e){return G(()=>{let t;return t=Lr(e,cr(),1-cr()),t=_r(me(t,le(1,t))),Ft(E7(r,t),-1)})}function M7(r,e){return G(()=>{let t=Lr(r,cr(),1),n=Lr(e,cr(),1);return he(L(r,_r(me(t,n))),-1)})}function F7(r,e){return G(()=>{let t=_r(X(cr(),e));return Ft(le(e,L(r,t)),-1)})}function xf(r,e){return G(()=>{let t=yf(r,-1),n=yf(e,-1),o=L(t,n);return Qe(he(o,-1))})}var Tf={meanSquaredError:gi,meanAbsoluteError:ac,meanAbsolutePercentageError:ap,meanSquaredLogarithmicError:A7,squaredHinge:w7,hinge:N7,categoricalHinge:D7,logcosh:P7,categoricalCrossentropy:hl,sparseCategoricalCrossentropy:ic,binaryCrossentropy:uc,kullbackLeiblerDivergence:M7,poisson:F7,cosineProximity:xf};function ly(r){if(typeof r=="string"){if(r in Tf)return Tf[r];let e=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new O(e)}else return r}function If(r,e){return G(()=>{let t=L(.5,Dr(e)),n=cl(tr(e,t),r.dtype);return Ft(Wr(r,n),-1)})}function Cf(r,e){return G(()=>cl(Wr(su(r,-1),su(e,-1)),"float32"))}function PM(r,e){return G(()=>J(he(Vr(Wr(r,1),Wr(e,1))),"float32"))}function R7(r,e){return G(()=>J(he(Vr(Wr(r,1),Wr(e,0))),"float32"))}function L7(r,e){return G(()=>J(he(Vr(Wr(r,0),Wr(e,1))),"float32"))}function Wk(r,e){return G(()=>{let t=PM(r,e),n=L7(r,e),o=X(t,n);return J(Bt(tr(o,0),me(t,o),0),"float32")})}function EM(r,e){return G(()=>{let t=PM(r,e),n=R7(r,e),o=X(t,n);return J(Bt(tr(o,0),me(t,o),0),"float32")})}function cy(r,e){return uc(r,e)}function dy(r,e){return r.rank===e.rank&&(r=ln(r,[r.rank-1])),e=su(e,-1),e.dtype!==r.dtype&&(e=J(e,r.dtype)),J(Wr(r,e),"float32")}var _7=gi,B7=gi,$7=ac,O7=ac,z7=ap,G7=ap,kf=hl,U7=xf,Kk=ic,my={binaryAccuracy:If,categoricalAccuracy:Cf,precision:Wk,categoricalCrossentropy:kf,sparseCategoricalCrossentropy:Kk,mse:_7,MSE:B7,mae:$7,MAE:O7,mape:z7,MAPE:G7,cosine:U7};function MM(r){if(typeof r=="string"&&r in my)return my[r];if(typeof r!="string"&&r!=null)return r;throw new O(`Unknown metric ${r}`)}function Sf(r){if(Jo(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let e;for(let t of Object.keys(Tf))if(Tf[t]===r){e=t;break}if(e!==void 0)return e;for(let t of Object.keys(my))if(my[t]===r){e=t;break}return e!==void 0?e:r.name}}function RM(r){let e={Adagrad:()=>ll.adagrad(.01),Adadelta:()=>ll.adadelta(1,.95,cr()),Adam:()=>ll.adam(.001,.9,.999,cr()),Adamax:()=>ll.adamax(.002,.9,.999,cr(),0),RMSProp:()=>ll.rmsprop(.001,.9,0,cr()),SGD:()=>ll.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,r in e)return e[r]();throw new O(`Unknown Optimizer ${r}`)}function Hk(r,e,t=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!Vk(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){let n=JSON.stringify(r);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${1048576}.`)}}function Vk(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let e=Object.keys(r);for(let t of e)if(typeof t!="string"||!Vk(r[t]))return!1;return!0}else if(Array.isArray(r)){for(let e of r)if(!Vk(e))return!1;return!0}else return!1;else{let e=typeof r;return e==="string"||e==="number"||e==="boolean"}}function LM(r,e,t,n=console.log){let o=V7(r),s=["Layer (type)","Input Shape","Output shape","Param #"];o?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(l=>Math.floor(e*l)));let i;if(!o){s.push("Receives inputs"),i=[];for(let l in r.nodesByDepth)i.push(...r.nodesByDepth[l])}n("_".repeat(e)),fy(s,t,n),n("=".repeat(e));let a=r.layers;for(let l=0;l<a.length;++l)o?H7(a[l],t,n):q7(a[l],t,i,n),n((l===a.length-1?"=":"_").repeat(e));r.checkTrainableWeightsConsistency();let u=K7(r),p=oc(r.nonTrainableWeights);n(`Total params: ${u+p}`),n(`Trainable params: ${u}`),n(`Non-trainable params: ${p}`),n("_".repeat(e))}function K7(r){let e;return r.collectedTrainableWeights!=null?e=oc(r.collectedTrainableWeights):e=oc(r.trainableWeights),e}function V7(r){let e=!0,t=[],n=[];for(let o in r.nodesByDepth)t.push(r.nodesByDepth[o]);for(let o of t){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){e=!1;break}n.push(...o)}if(e)for(let o of r.layers){let s=!1;for(let i of o.inboundNodes)if(n.indexOf(i)!==-1)if(s){e=!1;break}else s=!0;if(!e)break}return e}function fy(r,e,t=console.log){let n="";for(let o=0;o<r.length;++o)o>0&&(n=n.slice(0,n.length-1)+" "),n+=r[o],n=n.slice(0,e[o]),n+=" ".repeat(e[o]-n.length);t(n)}function H7(r,e,t){let n,o;try{o=r.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{o="multiple"}try{n=JSON.stringify(r.outputShape)}catch{n="multiple"}let s=r.name,i=r.getClassName(),a=[`${s} (${i})`,o,n,r.countParams().toString()];fy(a,e,t)}function q7(r,e,t,n){let o,s;try{s=r.inboundNodes.map(m=>JSON.stringify(m.inputShapes)).join(",")}catch{s="multiple"}try{o=JSON.stringify(r.outputShape)}catch{o="multiple"}let i=[];for(let m of r.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(m)===-1))for(let c=0;c<m.inboundLayers.length;++c){let d=m.inboundLayers[c].name,f=m.nodeIndices[c],h=m.tensorIndices[c];i.push(`${d}[${f}][${h}]`)}let a=r.name,u=r.getClassName(),p=i.length===0?"":i[0],l=[`${a} (${u})`,s,o,r.countParams().toString(),p];fy(l,e,n);for(let m=1;m<i.length;++m)fy(["","","","",i[m]],e,n)}function _M(r,e,t){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&e===0&&typeof t=="string"}function gl(r,e){if(r===null)return null;if(typeof r=="string")return fu(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];_M(e,o,s)?t.push(s):t.push(gl(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n];if(n==="name"&&typeof o=="string")t[n]=o;else{let s=fu(n);t[s]=gl(o,s)}}return t}}function hy(r,e){if(r==null)return null;if(typeof r=="string")return $s(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];_M(e,o,s)?t.push(s):t.push(hy(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n],s=$s(n);(n==="name"||n==="className")&&typeof o=="string"?t[s]=o:t[s]=hy(o,n)}return t}}var vf="0.0.0";function j7(r,e){if(r.dtype==null||r.dtype===e.dtype)return e;try{return J(e,r.dtype)}catch{throw new O(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var _a=class{constructor(e){this.id2Value={};this.id2Mask={};this.name2Id={};if(e instanceof _a)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=j7(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new O(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof hn){if(this.id2Value[e.id]==null)throw new O(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new O(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof hn){if(this.id2Value[e.id]==null)throw new O(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new O(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Fe(this.id2Mask)}},qk={},BM={};function bl(r,e,t,n){let o=t==null?!1:t.training,s=Array.isArray(r),i=s?r:[r],a=i.map(f=>f.name),u=[],p=e.names();for(let f of a)p.indexOf(f)!==-1?u.push(e.getValue(f)):u.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);let l=a.join(",")+"|"+e.names().join(","),m,c;if(qk[l]==null){let f=X7(i,e);m=f.sorted,c=f.recipientCounts,qk[l]=m,BM[l]=c}m=qk[l],c={},o||Object.assign(c,BM[l]);let d=new _a(e);for(let f=0;f<m.length;++f){if(n!=null){let R=vd().numTensors;R>n.maxNumTensors&&(n.maxNumTensors=R),R<n.minNumTensors&&(n.minNumTensors=R)}let h=m[f],g=h.sourceLayer;if(g instanceof fi)continue;let y=[],T=[],x=[],I=!1;for(let R of h.inputs){let B=d.getValue(R),U=d.getMask(R);y.push(B),T.push(U),U!=null&&(I=!0),o||(c[R.name]--,c[R.name]===0&&!e.hasKey(R)&&a.indexOf(R.name)===-1&&!B.isDisposed&&R.sourceLayer.stateful!==!0&&x.push(B))}I&&(t=t||{},t.mask=T[0]);let k=kt(g.apply(y,t)),N=null;g.supportsMasking&&(N=g.computeMask(y,T));let E=Q7(h),M=Array.isArray(E)?E:[E];for(let R=0;R<M.length;++R){d.hasKey(M[R])||d.add(M[R],k[R],Array.isArray(N)?N[0]:N);let B=a.indexOf(M[R].name);B!==-1&&(u[B]=k[R])}o||Fe(x)}return d.disposeMasks(),s?u:u[0]}function X7(r,e){b.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let t=[],n={};if(r.length===1){let o=$M(r[0],e);t=o.sorted,n=o.recipientMap}else{let o=new Set;for(let s of r){let{sorted:i,recipientMap:a}=$M(s,e);for(let u of i)o.has(u.name)||(t.push(u),o.add(u.name));for(let u in a)n[u]==null&&(n[u]=new Set),a[u].forEach(p=>n[u].add(p))}}return{sorted:t,recipientCounts:Y7(n)}}function Y7(r){let e={};for(let t in r)e[t]=r[t].size;return e}function $M(r,e){let t=new Set,n=[],o={};for(let a of e.names())t.add(a);let s=[],i=[];for(s.push(r);s.length>0;){let a=s[s.length-1];if(t.has(a.name)){s.pop();continue}let u=i[i.length-1]===s.length-1;if(a.inputs.length===0||u)s.pop(),n.push(a),t.add(a.name),u&&i.pop();else{i.push(s.length-1);for(let p of a.inputs)o[p.name]==null&&(o[p.name]=new Set),o[p.name].add(a.name),!t.has(p.name)&&s.push(p)}}return{sorted:n,recipientMap:o}}function Q7(r){let e;if(r.sourceLayer.inboundNodes.length===1)e=r.sourceLayer.output;else{let t=null;for(let n=0;n<r.sourceLayer.inboundNodes.length;++n)for(let o of r.sourceLayer.inboundNodes[n].outputTensors)if(o.id===r.id){t=n;break}e=r.sourceLayer.getOutputAt(t)}return e}var es=class extends We{constructor(e){super({});this.containerNodes=new Set;if(this.name=e.name,this.name==null){let T=this.getClassName().toLowerCase();this.name=np(T)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Os(this.inputs).length!==this.inputs.length)throw new O(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(T=>T.name)}`);Os(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(T=>T.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let T of this.outputs){let x=T.sourceLayer,I=T.nodeIndex,k=T.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(I),this.outputLayersTensorIndices.push(k)}for(let T of this.inputs){let x=T.sourceLayer,I=T.nodeIndex,k=T.tensorIndex;Jo(I===0,"input layer has >1 nodes"),Jo(k===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(I),this.inputLayersTensorIndices.push(k)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let T=0;T<this.inputLayers.length;T++){let x=this.inputLayers[T];if(!(x instanceof fi))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${T} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(let T of this.outputLayers)this.outputNames.push(T.name);this.internalInputShapes=this.inputs.map(T=>T.shape),this.internalOutputShapes=this.outputs.map(T=>T.shape);let t={},n={},o={},s={},i={},a=[],u=(T,x,I,k,N,E)=>{(k==null||N==null||E==null)&&(k=T.sourceLayer,N=T.nodeIndex,E=T.tensorIndex);let M=k.inboundNodes[N];if(I.indexOf(M)!==-1)throw new en(`The tensor ${T.name} at layer "${k.name}" is part of a cycle.`);if(x.indexOf(M)!==-1)return;this.containerNodes.add(es.nodeKey(k,N)),k.id in i||(i[k.id]=Object.keys(i).length),I.indexOf(M)===-1&&I.push(M);let R=M.inboundLayers.length;for(let B=0;B<R;B++){let U=M.inputTensors[B],W=M.inboundLayers[B],K=M.nodeIndices[B],H=M.tensorIndices[B];u(U,x,I,W,K,H)}for(x.push(M);I.indexOf(M)>=0;)I.splice(I.indexOf(M),1);a.push(M)},p=[],l=[];for(let T of this.outputs)u(T,p,l);let m=a.slice().reverse();for(let T of m){n[T.id]=T,T.id in t||(t[T.id]=0);let x=t[T.id],I=o[T.outboundLayer.id]==null?0:o[T.outboundLayer.id];x=Math.max(x,I),o[T.outboundLayer.id]=x,s[T.outboundLayer.id]=T.outboundLayer,t[T.id]=x;for(let k=0;k<T.inboundLayers.length;k++){let N=T.inboundLayers[k],E=T.nodeIndices[k],M=N.inboundNodes[E],R=t[M.id]==null?0:t[M.id];t[M.id]=Math.max(x+1,R),n[M.id]=M}}let c={};for(let T in t){let x=t[T];x in c||(c[x]=[]),c[x].push(n[T])}let d={};for(let T in o){let x=o[T];x in d||(d[x]=[]),d[x].push(s[T])}let f=Object.keys(d).map(T=>parseInt(T,10)).sort(tf);this.layers=[];for(let T of f){let x=d[T];x.sort((I,k)=>{let N=i[I.id],E=i[k.id];return N<E?-1:N>E?1:0});for(let I of x)I instanceof es&&this.internalContainerRefs.push(I),this.layers.push(I)}this.layersByDepth=d,f=Object.keys(c).map(T=>parseInt(T,10)).sort(tf);let h=this.inputs.slice(),g=[];for(let T of f)for(let x of c[T]){let I=x.outboundLayer;if(I!=null){for(let k of x.inputTensors)if(h.indexOf(k)===-1)throw new en(`Graph disconnected: cannot obtain value for tensor ${k} at layer "${I.name}". The following previous layers were accessed without issue: ${g}`);for(let k of x.outputTensors)h.push(k);g.push(I.name)}}this.nodesByDepth=c;let y=this.layers.map(T=>T.name);for(let T of y){let x=y.filter(I=>I===T).length;if(x!==1)throw new en(`The name "${T}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new op({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(T=>null),outputMasks:this.outputs.map(T=>null),inputShapes:this.inputs.map(T=>T.shape),outputShapes:this.outputs.map(T=>T.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new O("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},o=0;for(let i of this.layers)for(let a of i.weights){if(n[a.originalName]!=null)throw new O(`Duplicate weight name: ${a.originalName}`);n[a.originalName]=a,o++}let s=[];for(let i in e){let a=i;if(n[i]==null){let u=i.split("/");a=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(n[a]!=null)s.push([n[a],e[i]]);else if(t)throw new O(`Provided weight data has no target variable: ${i}`);delete n[a]}if(t){let i=[];for(let a in n)i.push(a);if(i.length>0)throw new O(`${i.length} of ${o} weights are not set: ${i}`)}sc(s)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${vf}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=hy(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return G(()=>{e=kt(e);let n=new _a;for(let o=0;o<this.inputs.length;++o)n.add(this.inputs[o],e[o]);return bl(this.outputs,n,t)})}computeMask(e,t){return G(()=>{e=kt(e);let n;return t==null?n=Bs(null,e.length):n=kt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=nc(e);if(t.length!==this.inputLayers.length)throw new O(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let a=0;a<t.length;a++){let u=this.inputLayers[a],p=t[a],l=u.name+"_0_0";n[l]=p}let o=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(tf);if(o.length>1)for(let a of o){let u=this.nodesByDepth[a];for(let p of u){let l=p.outboundLayer;if(this.inputLayers.map(h=>h.id).indexOf(l.id)!==-1)continue;let m=[];for(let h=0;h<p.inboundLayers.length;h++){let g=p.inboundLayers[h],y=p.nodeIndices[h],T=p.tensorIndices[h],x=`${g.name}_${y}_${T}`,I=n[x];m.push(I)}let c=l.computeOutputShape(Pr(m)),d=nc(c),f=l.inboundNodes.indexOf(p);for(let h=0;h<d.length;h++){let g=`${l.name}_${f}_${h}`;n[g]=d[h]}}}let s=[],i=[];for(let a=0;a<this.outputLayers.length;a++){let u=this.outputLayers[a],p=this.outputLayersNodeIndices[a],l=this.outputLayersTensorIndices[a],m=`${u.name}_${p}_${l}`;i.push(m)}for(let a=0;a<i.length;a++){let u=i[a];Jo(u in n),s.push(n[u])}return Pr(s)}runInternalGraph(e,t){t==null&&(t=Bs(null,e.length));let n={};for(let u=0;u<this.inputs.length;++u){let p=this.inputs[u],l=e[u],m=t[u];n[p.id]=[l,m]}let o=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(tf);for(let u of o){let p=this.nodesByDepth[u];for(let l of p){let m=l.outboundLayer,c=l.inputTensors,d=l.outputTensors,f=new Array;for(let h of c)h.id in n&&f.push(n[h.id]);if(f.length===c.length){let h={},g,y,T,x;if(l.callArgs!=null&&(h=l.callArgs),f.length===1){let[I,k]=f[0];h.mask==null&&(h.mask=k),T=kt(m.call(I,h)),x=kt(m.computeMask(I,k)),g=[I],y=[k]}else g=f.map(I=>I[0]),y=f.map(I=>I[1]),h.mask==null&&(h.mask=y),T=kt(m.call(g,h)),x=kt(m.computeMask(g,y));if(m.activityRegularizer)throw new Ee("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let I=0;I<d.length;++I){let k=d[I],N=T[I],E=x[I];n[k.id]=[N,E]}}}}let s=[],i=[],a=[];for(let u of this.outputs){Jo(u.id in n,`Could not compute output ${u.name} : ${u.id}`);let[p,l]=n[u.id];a.push(p.shape),s.push(p),i.push(l)}return[s,i,a]}buildNodeConversionMap(e){let t={},n;for(let o of this.layers){n=o instanceof es?1:0;for(let s=0;s<o.inboundNodes.length;s++){let i=es.nodeKey(o,s);this.containerNodes.has(i)&&(t[i]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new O(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new O("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new O(`No such layer: ${e}`)}calculateLosses(){return G(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let o=es.nodeKey(t,n);this.containerNodes.has(o)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let i of this.layers){let a=i.getClassName(),u=i.getConfig(),p=[];for(let m=0;m<i.inboundNodes.length;m++){let c=i.inboundNodes[m],d=es.nodeKey(i,m),f={};if(this.containerNodes.has(d)){if(c.callArgs)try{JSON.stringify(c.callArgs),f=c.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${c.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(c.inboundLayers.length>0){let h=[];for(let g=0;g<c.inboundLayers.length;g++){let y=c.inboundLayers[g],T=c.nodeIndices[g],x=c.tensorIndices[g],I=es.nodeKey(y,T),k=t[I];k==null&&(k=0),h.push([y.name,k,x,f])}p.push(h)}}}let l={};l.name=i.name,l.className=a,l.config=u,l.inboundNodes=p,n.push(l)}e.layers=n;let o=[];for(let i=0;i<this.inputLayers.length;i++){let a=this.inputLayers[i],u=this.inputLayersNodeIndices[i],p=es.nodeKey(a,u);if(!this.containerNodes.has(p))continue;let l=t[p];l==null&&(l=0);let m=this.inputLayersTensorIndices[i];o.push([a.name,l,m])}e.inputLayers=o;let s=[];for(let i=0;i<this.outputLayers.length;i++){let a=this.outputLayers[i],u=this.outputLayersNodeIndices[i],p=es.nodeKey(a,u);if(!this.containerNodes.has(p))continue;let l=t[p];l==null&&(l=0);let m=this.outputLayersTensorIndices[i];s.push([a.name,l,m])}return e.outputLayers=s,e}static fromConfig(e,t,n={},o=!1){let s={},i={};function a(g,y){g.name in i?i[g.name].push(y):i[g.name]=[y]}function u(g,y){let T=[],x;for(let I of y){let k=I[0],N=I[1],E=I[2];if(x=I[3]==null?{}:I[3],!(k in s)){a(g,y);return}let M=s[k];if(M.inboundNodes.length<=N){a(g,y);return}let R=M.inboundNodes[N];T.push(R.outputTensors[E])}T.length>0&&g.apply(Pr(T),x)}function p(g){let y=g.name,T=gn(g,t.customObjects!=null?t.customObjects:{});T.setFastWeightInitDuringBuild(o),s[y]=T,g.inboundNodes.forEach(I=>{if(!(I instanceof Array))throw new O(`Corrupted configuration, expected array for nodeData: ${I}`);a(T,I)})}let l=t.name,m=t.layers;for(let g of m)p(g);for(;!eM(i);)for(let g of m){let y=s[g.name];if(y.name in i){let T=i[y.name];delete i[y.name];for(let x of T)u(y,x)}}let c=[],d=[],f=t.inputLayers;for(let g of f){let y=g[0],T=g[1],x=g[2];Jo(y in s);let k=s[y].inboundNodes[T].outputTensors;c.push(k[x])}let h=t.outputLayers;for(let g of h){let y=g[0],T=g[1],x=g[2];Jo(y in s);let k=s[y].inboundNodes[T].outputTensors;d.push(k[x])}return new e({inputs:c,outputs:d,name:l})}get stateful(){if(this._stateful)throw new O("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){G(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function Z7(r,e,t){let n=e.length;if(r==null||Array.isArray(r)&&r.length===0)return e.map(o=>null);if(n===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&e[0]in r?[r[e[0]]]:[r];if(Array.isArray(r)){if(r.length!==n)throw new Error(`Provided ${t} is an array of ${r.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let o=[];return e.forEach(s=>{s in r?o.push(r[s]):o.push(null)}),o}else throw new Error(`The model has multiple (${n}) outputs, so ${t} must be either an array with ${n} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(r)}`)}function gy(r,e){return Z7(r,e,"classWeight")}async function by(r,e,t,n){if(e!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){let o=G(()=>{if(r.shape.length===1)return wn(r);if(r.shape.length===2){if(r.shape[1]>1)return su(r,1);if(r.shape[1]===1)return _(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await o.data());Fe(o);let i=[];return s.forEach(a=>{if(t[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(t[a])}),$t(i,"float32")}else return null}function OM(r,e){return L(r,e)}var J7=32;function UM(r,e){let t,n,o=e;t=o.xs,n=o.ys,b.assert(t!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);let s=zM("input",r.inputNames,t),i=zM("output",r.outputNames,n),a=s[0].shape[0];b.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),b.assert(i.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let u=0;u<s.length;u++)b.assert(s[u].shape[0]===a,()=>`Batch size mismatch: input ${r.inputNames[u]} has ${s[u].shape[0]}; expected  ${a} based on input ${r.inputNames[0]}.`);for(let u=0;u<i.length;u++)b.assert(i[u].shape[0]===a,()=>`Batch size mismatch: output ${r.outputNames[u]} has ${i[u].shape[0]}; expected  ${a} based on input ${r.inputNames[0]}.`);return{xs:s,ys:i}}function zM(r,e,t){if(t instanceof Xe)return[t];if(Array.isArray(t))return b.assert(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${r} keys ${e}.`),t;{let n=[];for(let o of e){if(t[o]==null)throw new O(`The feature data generated by the dataset lacks the required ${r} key '${o}'.`);n.push(t[o])}return n}}function eZ(r){if(r.length===3)throw new Ee("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}async function WM(r,e,t){let n=t.batchesPerEpoch!=null;if(b.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),b.assert(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),b.assert(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),b.assert(!n||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),b.assert(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let o=t.validationData!=null,s,i;if(o)if(GM(t.validationData))b.assert(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{let g=eZ(t.validationData);s=g.xs,i=g.ys}let a=r.makeTrainFunction(),u=r.getDedupedMetricsNames(),p;o?p=u.slice().concat(u.map(g=>"val_"+g)):p=u.slice();let l=uy(t.callbacks,t.yieldEvery),m=t.verbose==null?1:t.verbose,{callbackList:c,history:d}=py(l,m,t.epochs,null,null,tZ(e,t),null,o,p);c.setModel(r),r.history=d,await c.onTrainBegin(),r.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,h=await e.iterator();for(;f<t.epochs;){let g={};await c.onEpochBegin(f);let y=0,T=0;for(n||(h=await e.iterator());n?y<t.batchesPerEpoch:!0;){let x=await h.next();if(n&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:I,ys:k}=UM(r,x.value),N={};N.batch=T,N.size=I[0].shape[0],await c.onBatchBegin(T,N);let E=[];if(t.classWeight!=null){let B=gy(t.classWeight,r.outputNames);for(let U=0;U<B.length;++U)E.push(await by(k[U],null,B[U]))}let M=I.concat(k).concat(E),R=a(M);Fe(M);for(let B=0;B<u.length;++B){let U=u[B],W=R[B];N[U]=W,Wt(W)}await c.onBatchEnd(T,N),iy(N),T++,y++}if(n?y>=t.batchesPerEpoch:x.done){if(o){let I;GM(t.validationData)?I=kt(await r.evaluateDataset(t.validationData,{batches:t.validationBatches})):I=kt(r.evaluate(s,i,{batchSize:t.validationBatchSize==null?J7:t.validationBatchSize,verbose:0}));for(let k=0;k<r.metricsNames.length;++k)g[`val_${r.metricsNames[k]}`]=I[k]}break}if(r.stopTraining_)break}if(await c.onEpochEnd(f,g),f++,r.stopTraining_)break}return await c.onTrainEnd(),await r.history.syncData(),r.history}finally{r.isTraining=!1}}function tZ(r,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(r.size)&&(t=r.size),t}function GM(r){return typeof r.iterator=="function"}function rZ(r){return typeof r.next=="function"}async function KM(r,e,t){t=t||{};let n=t.batches!=null,o=r.testFunction,s=[];if(t.verbose>0)throw new Ee("Verbose mode is not implemented yet.");b.assert(!n||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);let i=rZ(e)?e:await e.iterator(),a=0,u=0;for(;n?u<t.batches:!0;){let p=await i.next();if(s=G(()=>{if(p.value){let{xs:l,ys:m}=UM(r,p.value),c=l.concat(m),d=G(()=>o(c));if(Fe(c),u===0)for(let h=0;h<d.length;++h)s.push(ce(0));let f=c[0].shape[0];for(let h=0;h<d.length;++h){let g=d[h],y=s[h];s[h]=G(()=>X(s[h],L(f,g))),u>0&&Fe(y)}Fe(d),a+=f,++u}return s}),p.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let p=0;p<s.length;++p){let l=s[p];s[p]=me(s[p],a),Fe(l)}return Pr(s)}function yy(r){b.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function pc(r,e,t){return r==null?[null]:Array.isArray(r)?r.map(n=>hu(n,e,t-e)):hu(r,e,t-e)}function Ty(r,e){return G(()=>r==null?null:Array.isArray(r)?r.map(t=>Ty(t,e)):ey(r,e.dtype==="int32"?e:J(e,"int32")))}function xy(r,e){let t=[],n=0,o=null;for(;n<r;)o=n+e,o>=r&&(o=r),t.push([n,o]),n=o;return t}async function nZ(r,e,t,n,o,s,i,a,u,p,l,m,c,d,f){o==null&&(o=32),s==null&&(s=1),l==null&&(l=!0),c==null&&(c=0);let h=!1;if(u!=null&&p!=null&&(h=!0),f!=null&&(h=!0,d==null))throw new O("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=r.checkNumSamples(t,o,d,"steps_per_epoch"),y;g!=null&&(y=tn(0,g)),i==null&&(i=1);let{callbackList:T,history:x}=py(a,i,s,c,g,d,o,h,m);T.setModel(r),r.history=x,await T.onTrainBegin(),r.stopTraining_=!1;for(let I=c;I<s;++I){await T.onEpochBegin(I);let k={};if(d!=null)throw new Ee("stepsPerEpoch mode is not implemented yet.");{if(l==="batch")throw new Ee("batch shuffling is not implemneted yet");l&&b.shuffle(y);let N=$t(y),E=xy(g,o);for(let M=0;M<E.length;++M){let R={};if(await T.onBatchBegin(M,R),G(()=>{let B=E[M][0],U=E[M][1],W=hu(N,B,U-B);R.batch=M,R.size=U-B;let K=Ty(t,W),H=e(K);for(let V=0;V<n.length;++V){let j=n[V],ee=H[V];R[j]=ee,Wt(ee)}if(M===E.length-1&&h){let V=r.testLoop(u,p,o);for(let j=0;j<n.length;++j){let ee=n[j],Z=V[j];Wt(Z),k["val_"+ee]=Z}}}),await T.onBatchEnd(M,R),iy(R),r.stopTraining_)break}N.dispose()}if(await T.onEpochEnd(I,k),r.stopTraining_)break}return await T.onTrainEnd(),await r.history.syncData(),r.history}async function VM(r,e,t,n={}){if(r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;let o,s,i,a,u,p,l,m,c;try{let d=n.batchSize==null?32:n.batchSize;yy(d);let f=!1,h=await r.standardizeUserData(e,t,n.sampleWeight,n.classWeight,f,d);o=h[0],s=h[1],c=h[2];let g=!1,y;if(n.validationData!=null&&n.validationData.length>0){if(g=!0,n.validationData.length===2)u=n.validationData[0],p=n.validationData[1];else throw n.validationData.length===3?new Ee("validationData including sample weights is not supported yet."):new O(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let R=!0,B=await r.standardizeUserData(u,p,null,null,R,d);l=B[0],m=B[1],y=l.concat(m)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){g=!0;let R=Math.floor(o[0].shape[0]*(1-n.validationSplit)),B=o[0].shape[0];l=pc(o,R,B),i=o,o=pc(o,0,R),m=pc(s,R,B),a=s,s=pc(s,0,R),y=l.concat(m)}else n.validationSteps!=null&&(g=!0);let T=o.concat(s).concat(c);r.checkTrainableWeightsConsistency();let x=r.makeTrainFunction(),I=r.getDedupedMetricsNames(),k,N;g?(r.makeTestFunction(),k=r.testFunction,N=I.slice().concat(I.map(R=>"val_"+R))):(k=null,y=[],N=I.slice());let E=uy(n.callbacks,n.yieldEvery);return await nZ(r,x,T,I,d,n.epochs,n.verbose,E,k,y,n.shuffle,N,n.initialEpoch,null,null)}finally{r.isTraining=!1,Us(o,e),Us(s,t),Us(i,e),Us(a,t),Us(l,u),Us(m,p),c!=null&&Fe(c)}}function jk(r){let e=[];r instanceof Xe&&(r=[r]);for(let t=0;t<r.length;++t){let n=r[t];if(n.rank===1)e.push(gu(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(n)}}return e}function Us(r,e){if(r==null)return;let t=[];if(e instanceof Xe)t.push(e.id);else if(Array.isArray(e))e.forEach(o=>t.push(o.id));else if(e!=null)for(let o in e){let s=e[o];t.push(s.id)}let n=[];if(r instanceof Xe)t.indexOf(r.id)===-1&&n.push(r);else if(Array.isArray(r))r.forEach(o=>{t.indexOf(o.id)===-1&&n.push(o)});else if(r!=null)for(let o in r){let s=r[o];t.indexOf(s.id)===-1&&n.push(s)}n.forEach(o=>{o.isDisposed||o.dispose()})}function oZ(r){return r instanceof Xe}function Xk(r){return Array.isArray(r)}function HM(r){return!oZ(r)&&!Xk(r)}function qM(r,e,t,n=!0,o=""){if(e==null||e.length===0){if(r!=null){let i=!1;if(Xk(r)&&r.length>0)i=!0;else if(HM(r)){for(let a in r)if(r.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new O(`Error when checking model ${o} expected no data, but got ${r}`)}return[]}if(r==null)return e.map(i=>null);let s;if(HM(r)){r=r,s=[];for(let i of e){if(r[i]==null)throw new O(`No data provided for "${i}". Need data for each key in: ${e}`);s.push(r[i])}}else if(Xk(r)){if(r=r,r.length!==e.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,e.length>1)throw new O(`The model ${o} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=jk(s),t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;let a=s[i];if(a.shape.length!==t[i].length)throw new O(`Error when checking ${o}: expected ${e[i]} to have ${t[i].length} dimension(s). but got array with shape ${a.shape}`);for(let u=0;u<t[i].length;++u){if(u===0&&!n)continue;let p=a.shape[u],l=t[i][u];if(l!=null&&l>=0&&p!==l)throw new O(`${o} expected a batch of elements where each example has shape [${t[i].slice(1,t[i].length)}] (i.e.,tensor shape [*,${t[i].slice(1,t[i].length)}]) but the ${o} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return s}function sZ(r,e,t){let n=Os(r.map(s=>s.shape[0]));n.sort();let o=Os(e.map(s=>s.shape[0]));if(o.sort(),n.length>1)throw new O(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(o.length>1)throw new O(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(n.length>0&&o.length>0&&!b.arraysEqual(n,o))throw new O(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${o[0]} target sample(s).`)}function aZ(r,e,t){let n=[gi,uc,hl];for(let o=0;o<r.length;++o){let s=r[o],i=e[o],a=t[o];if(i!=null){if(i===hl&&s.shape[s.shape.length-1]===1)throw new O(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(i)!==-1){let u=s.shape.slice(1),p=a.slice(1);for(let l=0;l<u.length;++l){let m=u[l],c=p[l];if(c!=null&&m!==c)throw new O(`A target Tensor with shape ${s.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function jM(r,e,t,n=!0,o=""){let s;if(Array.isArray(r)){if(r.length!==e.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(e.length>1)throw new O(`The model expects ${e.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;let a=s[i];if(a.shape.length!==t[i].length)throw new O(`Error when checking ${o}: expected ${e[i]} to have ${t[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let u=0;u<t[i].length;++u){if(u===0&&!n)continue;let p=a.shape[u],l=t[i][u];if(l!=null&&l!==p)throw new O(`Error when checking ${o}: expected ${e[i]} to have shape ${JSON.stringify(t[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function iZ(r,e){if(r==null||Array.isArray(r)&&r.length===0)return e.map(n=>[]);let t;if(typeof r=="string"||typeof r=="function")t=[r];else if(Array.isArray(r)||typeof r=="object")t=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(t))return e.map(n=>t);{let n=[];for(let o of e){let s=t.hasOwnProperty(o)?t[o]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var uZ="layers-model",ts=class extends es{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new O("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");LM(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=RM(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Jr))throw new O("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let i in e.loss)if(this.outputNames.indexOf(i)===-1)throw new O(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(let i of this.outputNames)e.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),t.push(ly(e.loss[i]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new O(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(a=>ly(a))}else{let i=ly(e.loss);this.outputs.forEach(a=>{t.push(i)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){let a=this.internalOutputShapes[i],u=this.outputNames[i];this.feedOutputNames.push(u),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[i])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Fa("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(n.indexOf(i)!==-1)continue;let a=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([a,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});let o=iZ(e.metrics,this.outputNames),s=(i,a,u)=>{this.outputNames.length>1&&(a=this.outputNames[i]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([u,i])};Fa("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(n.indexOf(i)!==-1)continue;let a=o[i];(p=>{let l="",m,c,d;for(let f of p){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){let g=this.internalOutputShapes[i];g[g.length-1]===1||this.lossFunctions[i]===uc?["accuracy","acc"].indexOf(f)!==-1?c=If:["crossentropy","ce"].indexOf(f)!==-1&&(c=cy):this.lossFunctions[i]===ic?["accuracy","acc"].indexOf(f)!==-1?c=dy:["crossentropy","ce"].indexOf(f)!==-1&&(c=Kk):["accuracy","acc"].indexOf(f)!==-1?c=Cf:["crossentropy","ce"].indexOf(f)!==-1&&(c=kf);let y;["accuracy","acc"].indexOf(f)!==-1?y="acc":["crossentropy","ce"].indexOf(f)!==-1&&(y="ce"),d=c,m=l+y}else d=MM(f),m=l+Sf(f);let h;Fa(m,()=>{h=d}),s(i,m,h)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let o=n.batchSize==null?32:n.batchSize;yy(o);let s=!0,i=this.standardizeUserDataXY(e,t,s,o);try{let a=i[0].concat(i[1]);this.makeTestFunction();let u=this.testFunction,p=this.testLoop(u,a,o,n.verbose,n.steps);return Pr(p)}finally{Us(i[0],e),Us(i[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),KM(this,e,t)}checkNumSamples(e,t,n,o="steps"){let s;if(n!=null){if(s=null,t!=null)throw new O(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?s=e[0].shape[0]:s=e.shape[0];else throw new O(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return s}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new O("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),o=n?t:[t],s=this.retrieveSymbolicTensors(o),i=new _a;if(e instanceof Xe&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new O(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)i.add(this.inputs[u],e[u])}else for(let u of this.inputs){let p=e[u.name];if(p==null)throw new O(`No value is provided for the model's input ${u.name}`);i.add(u,p)}let a=bl(s,i);return n?a:a[0]}retrieveSymbolicTensors(e){let t=Bs(null,e.length),n=e.length;for(let o of this.layers){let s=Array.isArray(o.output)?o.output:[o.output],i=s.map(a=>a.name);for(let a=0;a<e.length;++a){let u=i.indexOf(e[a]);if(u!==-1&&(t[a]=s[u],n--),n===0)break}if(n===0)break}if(n>0){let o=[];throw t.forEach((s,i)=>{s==null&&o.push(e[i])}),new O(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return t}predictLoop(e,t=32,n=!1){return G(()=>{let o=this.checkNumSamples(e);if(n)throw new Ee("Verbose predictLoop() is not implemented yet.");let s=xy(o,t),i=this.outputs.map(a=>[]);for(let a=0;a<s.length;++a)G(()=>{let p=s[a][0],l=s[a][1],m=pc(e,p,l),c=[];if(Array.isArray(m))for(let f=0;f<m.length;++f)c.push({key:this.inputs[f],value:m[f]});else c.push({key:this.inputs[0],value:m});let d=new _a(c);return bl(this.outputs,d)}).forEach((p,l)=>i[l].push(p));return Pr(i.map(a=>it(a,0)))})}predict(e,t={}){let n=jk(e);jM(n,this.inputNames,this.feedInputShapes,!1);try{let o=t.batchSize==null?32:t.batchSize;return yy(o),this.predictLoop(n,o)}finally{Us(n,e)}}predictOnBatch(e){jM(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,o){if(this.optimizer_==null)throw new en("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let i=0;i<this.feedOutputShapes.length;++i){let a=this.feedOutputShapes[i];this.feedLossFns[i]===ic?s.push(a.slice(0,a.length-1).concat([1])):s.push(a)}if(e=qM(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=qM(t,this.feedOutputNames,s,!1,"target"),sZ(e,t,null),aZ(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&e[0].shape[0]%o!==0)throw new O(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,o,s=!0,i){let[a,u]=this.standardizeUserDataXY(e,t,s,i);if(n!=null)throw new Error("sample weight is not supported yet.");let p=null;if(o!=null){let l=gy(o,this.outputNames);p=[];for(let m=0;m<l.length;++m)p.push(await by(u[m],null,l[m]))}return[a,u,p]}testLoop(e,t,n,o=0,s){return G(()=>{let i=this.checkNumSamples(t,n,s,"steps"),a=[];if(o>0)throw new Ee("Verbose mode is not implemented yet.");if(s!=null)throw new Ee("steps mode in testLoop() is not implemented yet");{let u=xy(i,n),p=$t(tn(0,i));for(let l=0;l<u.length;++l){let m=u[l][0],c=u[l][1],d=hu(p,m,c-m),f=Ty(t,d),h=e(f);if(l===0)for(let g=0;g<h.length;++g)a.push(ce(0));for(let g=0;g<h.length;++g){let y=h[g];a[g]=X(a[g],L(c-m,y))}}for(let l=0;l<a.length;++l)a[l]=me(a[l],i)}return a})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let o=e[n],s=o;Fk(e,o)>1&&(s+=`_${Fk(e.slice(0,n),o)}`),t.push(s)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],a=()=>{let m=[];for(let h=0;h<this.inputs.length;++h)m.push({key:this.inputs[h],value:n[h]});let c=new _a(m),d=bl(this.outputs,c,{training:!0}),f;for(let h=0;h<this.lossFunctions.length;++h){let y=this.lossFunctions[h](o[h],d[h]);s[h]!=null&&(y=OM(y,s[h]));let T=Ft(y);t.push(T),h===0?f=y:f=X(f,y)}for(let h=0;h<this.metricsTensors.length;++h){let g;if(this.outputs.length>1&&h<this.outputs.length)g=t[h];else{let y=this.metricsTensors[h][0],T=this.metricsTensors[h][1];g=Ft(y(o[T],d[T]))}Wt(g),i.push(g)}return f=Ft(f),this.calculateLosses().forEach(h=>{f=X(f,h)}),f},u=this.collectedTrainableWeights.map(m=>m.read()),p=!0;return[this.optimizer_.minimize(a,p,u)].concat(i)}}makeTestFunction(){this.testFunction=e=>G(()=>{let t=[],n,o=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let p=0;p<this.inputs.length;++p)i.push({key:this.inputs[p],value:o[p]});let a=new _a(i),u=bl(this.outputs,a);for(let p=0;p<this.lossFunctions.length;++p){let l=this.lossFunctions[p],m=Ft(l(s[p],u[p]));p===0?n=m:n=X(n,m),t.push(n)}for(let p=0;p<this.metricsTensors.length;++p){let l=this.metricsTensors[p][0],m=this.metricsTensors[p][1],c=Ft(l(s[m],u[m]));t.push(c)}return t})}async fit(e,t,n={}){return VM(this,e,t,n)}async fitDataset(e,t){return WM(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),o=n[0],s=n[1],a=this.makeTrainFunction()(o.concat(s)),u=[];for(let p of a){let l=await p.data();u.push(l[0])}return Fe(a),Us(n[0],e),Us(n[1],t),Pr(u)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,o=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let i=0;i<o.length;++i)n&&!o[i].trainable||t.push({name:o[i].originalName,tensor:s[i]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=vd().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-vd().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=$s(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>$s(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let o of t)if(typeof n[o]=="string")e[o]=$s(n[o]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[$s(Sf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>$s(Sf(e)));{let e={};for(let t in this.metrics)e[t]=$s(Sf(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=gl(e.optimizer_config),n=gn(t),o;if(typeof e.loss=="string")o=fu(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(i=>fu(i));else if(e.loss!=null){o={};for(let i in e.loss)o[i]=fu(e.loss[i])}let s;if(Array.isArray(e.metrics))s=e.metrics.map(i=>fu(i));else if(e.metrics!=null){s={};for(let i in e.metrics)s[i]=fu(e.metrics[i])}this.compile({loss:o,metrics:s,optimizer:n})}async save(e,t){if(typeof e=="string"){let p=Ur.getSaveHandlers(e);if(p.length===0)throw new O(`Cannot find any save handlers for URL '${e}'`);if(p.length>1)throw new O(`Found more than one (${p.length}) save handlers for URL '${e}'`);e=p[0]}if(e.save==null)throw new O("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Ur.encodeWeights(this.getNamedWeights(t)),o=!1,s=null,a={modelTopology:this.toJSON(s,o),format:uZ,generatedBy:`TensorFlow.js tfjs-layers v${vf}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();let p="optimizer",{data:l,specs:m}=await Ur.encodeWeights(await this.optimizer.getWeights(),p);n.specs.push(...m),n.data=Ur.concatenateArrayBuffers([n.data,l])}return this.userDefinedMetadata!=null&&(Hk(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){Hk(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};ts.className="Model";re.registerClass(ts);var Yk=class extends ts{};Yk.className="Functional";re.registerClass(Yk);async function XM(r,e){"modelTopology"in r||(r={modelTopology:r}),r=r;let t=r.modelTopology;t.model_config!=null&&(t=t.model_config);let n=gl(t),o=gn(n,e);if(r.weightsManifest!=null){let s=await Ur.loadWeights(r.weightsManifest,r.pathPrefix,o.weights.map(a=>a.originalName)),i={};for(let a of o.weights)i[a.originalName]=s[a.originalName];o.loadWeights(i),Fe(s)}return o}async function YM(r,e){if(e==null&&(e={}),typeof r=="string"){let t=Ur.getLoadHandlers(r,e);if(t.length===0)t.push(Ur.browserHTTPRequest(r,e));else if(t.length>1)throw new O(`Found more than one (${t.length}) load handlers for URL '${r}'`);r=t[0]}return pZ(r,void 0,e)}async function pZ(r,e,t){if(t==null&&(t={}),r.load==null)throw new O("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let n=await r.load(),o=n.modelTopology;o.model_config!=null&&(o=o.model_config);let s=t.strict==null?!0:t.strict,i=n.weightData!=null&&n.weightSpecs!=null&&s,a=gn(gl(o),e,i),u=n.trainingConfig;if(u!=null&&a.loadTrainingConfig(u),n.userDefinedMetadata!=null&&a.setUserDefinedMetadata(n.userDefinedMetadata),n.weightData!=null){if(n.weightSpecs==null)throw new O("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:p,optimizerWeights:l}=lZ(n.weightData,n.weightSpecs);a.loadWeights(p,s),a.optimizer!=null&&l.length>0&&await a.optimizer.setWeights(l),Fe(p),Fe(l.map(m=>m.tensor))}return a}function lZ(r,e){let t=Ur.decodeWeights(r,e),n={},o=[];return e.forEach(s=>{s.group==="optimizer"?o.push({name:s.name,tensor:t[s.name]}):n[s.name]=t[s.name]}),{modelWeights:n,optimizerWeights:o}}var Iy=class extends ts{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:np("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new O(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof Iy||e instanceof ts,n;if(t){if(n=e,n.outputs.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new O("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new O("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let o=ay({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new O(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Ok(this.outputs[0])}this.inboundNodes=[],new op({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Bs(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{let o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(Ze(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ts({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new en("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new en("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new en("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new en("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},o=!1){let s,i={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new O("Legacy serialization format not supported yet.");s=t}else b.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,i=t;let a=new e(i);if(!(a instanceof Iy))throw new Ee(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(let u of s){let l=gn(u,void 0,o);o&&l.setFastWeightInitDuringBuild(!0),a.add(l)}return a}set stopTraining(e){if(this.model==null)throw new O("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new O("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},lc=Iy;lc.className="Sequential";re.registerClass(lc);function mZ(r){return new ts(r)}function cZ(r){return new lc(r)}function dZ(r,e){return e==null&&(e={}),YM(r,e)}function Qk(r){return ay(r)}function fZ(r,e){bf.registerCallbackConstructor(r,e)}var bn=class extends re.Serializable{getConfig(){return{}}},Jk=class extends bn{apply(e,t=1){return yM(e,t)}};Jk.className="elu";re.registerClass(Jk);var eS=class extends bn{apply(e){return Vd(e)}};eS.className="selu";re.registerClass(eS);var tS=class extends bn{apply(e){return Hr(e)}};tS.className="relu";re.registerClass(tS);var rS=class extends bn{apply(e){return G(()=>lu(6,Hr(e)))}};rS.className="relu6";re.registerClass(rS);var nS=class extends bn{apply(e){return e}};nS.className="linear";re.registerClass(nS);var oS=class extends bn{apply(e){return un(e)}};oS.className="sigmoid";re.registerClass(oS);var sS=class extends bn{apply(e){return xM(e)}};sS.className="hardSigmoid";re.registerClass(sS);var aS=class extends bn{apply(e){return ui(e)}};aS.className="softplus";re.registerClass(aS);var iS=class extends bn{apply(e){return TM(e)}};iS.className="softsign";re.registerClass(iS);var uS=class extends bn{apply(e){return au(e)}};uS.className="tanh";re.registerClass(uS);var Af=class extends bn{apply(e,t=-1){return Yp(e,t)}};Af.className="softmax";re.registerClass(Af);var pS=class extends bn{apply(e,t=-1){return _d(e,t)}};pS.className="logSoftmax";re.registerClass(pS);var lS=class extends bn{apply(e,t=1){return G(()=>L(un(L(e,t)),e))}};lS.className="swish";re.registerClass(lS);var mS=class extends bn{apply(e){return G(()=>L(e,au(ui(e))))}};mS.className="mish";re.registerClass(mS);function Ba(r){return r.getClassName()}function Zk(r,e={}){return ci(r,re.SerializationMap.getMap().classNameMap,e,"activation")}function $a(r){if(r==null){let e={};return e.className="linear",e.config={},Zk(e)}if(typeof r=="string"){let e={};return e.className=r,e.config={},Zk(e)}else return r instanceof bn?r:Zk(r)}function cS(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var dS=class extends re.Serializable{},yl=class extends dS{constructor(e){super();cS(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return G(()=>{let t=bt([1]);return this.hasL1&&(t=X(t,he(L(this.l1,_t(e))))),this.hasL2&&(t=X(t,he(L(this.l2,dl(e))))),_(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};yl.className="L1L2";re.registerClass(yl);function JM(r){return cS(r),new yl({l1:r!=null?r.l1:null,l2:0})}function eF(r){return cS(r),new yl({l2:r!=null?r.l2:null,l1:0})}var QM={l1l2:"L1L2"};function dt(r){return Hm(r)}function ZM(r,e={}){return ci(r,re.SerializationMap.getMap().classNameMap,e,"regularizer")}function St(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in QM?QM[r]:r,config:{}};return ZM(t)}else return r instanceof dS?r:ZM(r)}var wf=class extends We{constructor(e){super(e??{});this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Oe(e);let n=Hr(e);return this.maxValue!=null&&(n=Lr(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};wf.className="ReLU";re.registerClass(wf);var Nf=class extends We{constructor(e){super(e??{});this.DEFAULT_ALPHA=.3;e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Oe(e);return Wp(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Nf.className="LeakyReLU";re.registerClass(Nf);var Df=class extends We{constructor(e){super(e??{});this.DEFAULT_ALPHA_INITIALIZER="zeros";if(e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Tt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=St(e.alphaRegularizer),this.alphaConstraint=jt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new O(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Ze(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let o of this.sharedAxes)t[o-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let o=1;o<e.length;++o)n[o]=e[o];this.inputSpec=[new Et({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Oe(e),jp(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Pt(this.alphaInitializer),alphaRegularizer:dt(this.alphaRegularizer),alphaConstraint:qt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Df.className="PReLU";re.registerClass(Df);var Pf=class extends We{constructor(e){super(e??{});this.DEFAULT_ALPHA=1;if(e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Ee(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Oe(e);return uu(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Pf.className="ELU";re.registerClass(Pf);var Ef=class extends We{constructor(e){super(e??{});this.DEFAULT_THETA=1;e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Oe(e);return L(n,J(tr(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Ef.className="ThresholdedReLU";re.registerClass(Ef);var Mf=class extends We{constructor(e){super(e??{});this.DEFAULT_AXIS=1;e==null&&(e={}),this.softmax=new Af().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Oe(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Mf.className="Softmax";re.registerClass(Mf);function ip(r,e,t){if(typeof r=="number")return Bs(r,e);if(r.length!==e)throw new O(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${r.length} elements.`);for(let n=0;n<e;++n){let o=r[n];if(!fM(o))throw new O(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(r)} including a non-integer number ${o}`)}return r}function Fn(r,e,t,n,o=1){if(r==null)return r;let s=e+(e-1)*(o-1),i;return t==="same"?i=r:i=r-s+1,Math.floor((i+n-1)/n)}function Oa(r,e,t,n){if(r==null)return null;if(n==="valid")r=r*e+Ra([t-e,0]);else if(n==="same")r=r*e;else throw new O(`Unsupport padding mode: ${n}.`);return r}function Of(r,e){return G(()=>(Kt(e),e==="channelsFirst"?He(r,[0,2,3,1]):r))}function hS(r,e){return G(()=>(Kt(e),e==="channelsFirst"?He(r,[0,2,3,4,1]):r))}function gZ(r,e,t,n=1,o="valid",s,i=1){return G(()=>{if(s==null&&(s=mn()),Kt(s),r.shape.length!==3)throw new O(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(e.shape.length!==3)throw new O(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new O(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(s==="channelsFirst"&&(r=He(r,[0,2,1])),o==="causal")throw new Ee("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=Pd(r,e,n,o==="same"?"same":"valid","NWC",i);return t!=null&&(a=dn(a,t)),a})}function tF(r,e,t,n=[1,1],o="valid",s,i,a=null){return G(()=>{if(s==null&&(s=mn()),Kt(s),r.rank!==3&&r.rank!==4)throw new O(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(e.rank!==3&&e.rank!==4)throw new O(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let u=Of(r,s);if(o==="causal")throw new Ee("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Rs.conv2d({x:u,filter:e,strides:n,pad:o==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:t,activation:a}),s==="channelsFirst"&&(u=He(u,[0,3,1,2])),u})}function bZ(r,e,t,n=[1,1,1],o="valid",s,i){return G(()=>{if(s==null&&(s=mn()),Kt(s),r.rank!==4&&r.rank!==5)throw new O(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(e.rank!==4&&e.rank!==5)throw new O(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let a=hS(r,s);if(o==="causal")throw new Ee("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=Md(a,e,n,o==="same"?"same":"valid","NDHWC",i),t!=null&&(a=dn(a,t)),s==="channelsFirst"&&(a=He(a,[0,4,1,2,3])),a})}var dc=class extends We{constructor(e,t){super(t);this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(dc.verifyArgs(t),this.rank=e,rr(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Ee(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ip(t.kernelSize,e,"kernelSize"),this.strides=ip(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,cn(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Kt(this.dataFormat),this.activation=$a(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Tt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=jt(t.biasConstraint),this.biasRegularizer=St(t.biasRegularizer),this.activityRegularizer=St(t.activityRegularizer),this.dilationRate=ip(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new O(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new O(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new O(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Jo("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!jb(e.kernelSize,"number",1,3))throw new O(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ba(this.activation),useBias:this.useBias,biasInitializer:Pt(this.biasInitializer),biasRegularizer:dt(this.biasRegularizer),activityRegularizer:dt(this.activityRegularizer),biasConstraint:qt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Tl=class extends dc{constructor(e,t){super(e,t);this.kernel=null;Tl.verifyArgs(t),this.filters=t.filters,rr(this.filters,"filters"),this.kernelInitializer=Tt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=jt(t.kernelConstraint),this.kernelRegularizer=St(t.kernelRegularizer)}build(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return G(()=>{e=Oe(e);let n,o=this.bias==null?null:this.bias.read(),s=Xb(this.activation.getClassName());if(s!=null&&this.rank===2)n=tF(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)n=gZ(e,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=tF(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=bZ(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Ee("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=Ze(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){let i=Fn(n[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);t.push(i)}let o=[e[0]];return this.dataFormat==="channelsLast"?(o=o.concat(t),o.push(this.filters)):(o.push(this.filters),o=o.concat(t)),o}getConfig(){let e={filters:this.filters,kernelInitializer:Pt(this.kernelInitializer),kernelRegularizer:dt(this.kernelRegularizer),kernelConstraint:qt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new O(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},gS=class extends Tl{constructor(e){super(2,e);gS.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!jb(e.kernelSize,"number",1,2))throw new O(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},mc=gS;mc.className="Conv2D";re.registerClass(mc);var bS=class extends Tl{constructor(e){super(3,e);bS.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new O(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},cc=bS;cc.className="Conv3D";re.registerClass(cc);var Ff=class extends mc{constructor(e){super(e);if(this.inputSpec=[new Et({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Ze(e),e.length!==4)throw new O("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Et({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return G(()=>{let n=Oe(e);if(n.shape.length!==4)throw new O(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],i,a;this.dataFormat==="channelsFirst"?(i=2,a=3):(i=1,a=2);let u=o[i],p=o[a],l=this.kernelSize[0],m=this.kernelSize[1],c=this.strides[0],d=this.strides[1],f=Oa(u,c,l,this.padding),h=Oa(p,d,m,this.padding),g=[s,f,h,this.filters];this.dataFormat!=="channelsLast"&&(n=He(n,[0,2,3,1]));let y=Ed(n,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=He(y,[0,3,1,2])),this.bias!=null&&(y=dn(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(e){e=Ze(e);let t=e.slice(),n,o,s;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3):(n=3,o=1,s=2);let i=this.kernelSize[0],a=this.kernelSize[1],u=this.strides[0],p=this.strides[1];return t[n]=this.filters,t[o]=Oa(t[o],u,i,this.padding),t[s]=Oa(t[s],p,a,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Ff.className="Conv2DTranspose";re.registerClass(Ff);var Rf=class extends cc{constructor(e){super(e);if(this.inputSpec=[new Et({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Ze(e),e.length!==5)throw new O("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Et({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return G(()=>{let n=Oe(e);if(n.shape.length!==5)throw new O(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],i,a,u;this.dataFormat==="channelsFirst"?(u=2,i=3,a=4):(u=1,i=2,a=3);let p=o[u],l=o[i],m=o[a],c=this.kernelSize[0],d=this.kernelSize[1],f=this.kernelSize[2],h=this.strides[0],g=this.strides[1],y=this.strides[2],T=Oa(p,h,c,this.padding),x=Oa(l,g,d,this.padding),I=Oa(m,y,f,this.padding),k=[s,T,x,I,this.filters];this.dataFormat!=="channelsLast"&&(n=He(n,[0,2,3,4,1]));let N=$C(n,this.kernel.read(),k,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(N=He(N,[0,4,1,2,3])),this.bias!==null&&(N=dn(N,this.bias.read(),this.dataFormat)),this.activation!==null&&(N=this.activation.apply(N)),N})}computeOutputShape(e){e=Ze(e);let t=e.slice(),n,o,s,i;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3,i=4):(n=4,o=1,s=2,i=3);let a=this.kernelSize[0],u=this.kernelSize[1],p=this.kernelSize[2],l=this.strides[0],m=this.strides[1],c=this.strides[2];return t[n]=this.filters,t[o]=Oa(t[o],l,a,this.padding),t[s]=Oa(t[s],m,u,this.padding),t[i]=Oa(t[i],c,p,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Rf.className="Conv3DTranspose";re.registerClass(Rf);var fS=class extends Tl{constructor(e,t){super(e,t);this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform";this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform";this.depthwiseKernel=null;this.pointwiseKernel=null;if(t.filters==null)throw new O("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new O("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new O(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Tt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=St(t.depthwiseRegularizer),this.depthwiseConstraint=jt(t.depthwiseConstraint),this.pointwiseInitializer=Tt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=St(t.pointwiseRegularizer),this.pointwiseConstraint=jt(t.pointwiseConstraint)}build(e){if(e=Ze(e),e.length<this.rank+2)throw new O(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new O(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],o=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let a=0;a<this.rank;++a)s.push(1);s.push(n*this.depthMultiplier,this.filters);let i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new Et({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return G(()=>{e=Oe(e);let n;if(this.rank===1)throw new Ee("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=He(e,[0,2,3,1])),n=dk(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=dn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=He(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Pt(this.depthwiseInitializer),e.pointwiseInitializer=Pt(this.pointwiseInitializer),e.depthwiseRegularizer=dt(this.depthwiseRegularizer),e.pointwiseRegularizer=dt(this.pointwiseRegularizer),e.depthwiseConstraint=qt(this.depthwiseConstraint),e.pointwiseConstraint=qt(this.pointwiseConstraint),e}};fS.className="SeparableConv";var Lf=class extends fS{constructor(e){super(2,e)}};Lf.className="SeparableConv2D";re.registerClass(Lf);var yS=class extends Tl{constructor(e){super(1,e);yS.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!jb(e.kernelSize,"number",1,1))throw new O(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},_f=yS;_f.className="Conv1D";re.registerClass(_f);var Bf=class extends We{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return G(()=>{if(e=Oe(e),this.dataFormat==="channelsLast"){let n=uf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return uf(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=uf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return uf(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Bf.className="Cropping2D";re.registerClass(Bf);var $f=class extends We{constructor(e){super(e);this.DEFAULT_SIZE=[2,2];this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Kt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,cM(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return G(()=>{let n=Oe(e),o=n.shape;if(this.dataFormat==="channelsFirst"){n=He(n,[0,2,3,1]);let s=this.size[0]*o[2],i=this.size[1]*o[3],a=this.interpolation==="nearest"?En.resizeNearestNeighbor(n,[s,i]):En.resizeBilinear(n,[s,i]);return He(a,[0,3,1,2])}else{let s=this.size[0]*o[1],i=this.size[1]*o[2];return this.interpolation==="nearest"?En.resizeNearestNeighbor(n,[s,i]):En.resizeBilinear(n,[s,i])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};$f.className="UpSampling2D";re.registerClass($f);function yZ(r,e,t=[1,1],n="valid",o,s){return G(()=>{o==null&&(o=mn()),Kt(o);let i=Of(r,o);if(r.rank!==4)throw new O(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(e.rank!==4)throw new O(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=iu(i,e,t,n==="same"?"same":"valid","NHWC",s),o==="channelsFirst"&&(i=He(i,[0,3,1,2])),i})}var zf=class extends dc{constructor(e){super(2,e);this.depthwiseKernel=null;this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Tt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=jt(e.depthwiseConstraint),this.depthwiseRegularizer=St(e.depthwiseRegularizer)}build(e){if(e=Ze(e),e.length<4)throw new O(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new O(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],o=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return G(()=>{e=Oe(e);let n=yZ(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=dn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Fn(t,this.kernelSize[0],this.padding,this.strides[0]),i=Fn(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],o,s,i]:[e[0],s,i,o]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Pt(this.depthwiseInitializer),e.depthwiseRegularizer=dt(this.depthwiseRegularizer),e.depthwiseConstraint=qt(this.depthwiseRegularizer),e}};zf.className="DepthwiseConv2D";re.registerClass(zf);function TS(r,e,t,n){if(Array.isArray(r)){if(e!=null||t!=null)throw new O("When inputs is an array, neither initialState or constants should be provided");n!=null&&(t=r.slice(r.length-n,r.length),r=r.slice(0,r.length-n)),r.length>1&&(e=r.slice(1,r.length)),r=r[0]}function o(s){return s==null||Array.isArray(s)?s:[s]}return e=o(e),t=o(t),{inputs:r,initialState:e,constants:t}}function xS(r,e,t,n=!1,o,s,i=!1,a=!1){return G(()=>{let u=e.shape.length;if(u<3)throw new O(`Input should be at least 3D, but is ${u}D.`);let p=[1,0].concat(tn(2,u));if(e=He(e,p),s!=null)throw new Ee("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=J(J(o,"bool"),"float32"),o.rank===u-1&&(o=Nr(o,-1)),o=He(o,p)),n&&(e=gr(e,0),o!=null&&(o=gr(o,0)));let l=[],m,c=t,d=e.shape[0],f=Br(e),h;o!=null&&(h=Br(o));for(let y=0;y<d;++y){let T=f[y],x=G(()=>r(T,c));if(o==null)m=x[0],c=x[1];else{let I=G(()=>{let k=h[y],N=le(Dr(k),k),E=X(L(x[0],k),L(c[0],N)),M=c.map((R,B)=>X(L(x[1][B],k),L(R,N)));return{output:E,newStates:M}});m=I.output,c=I.newStates}a&&l.push(m)}let g;return a&&(g=mr(l,1)),[m,g,c]})}var IS=class extends We{constructor(e){super(e);let t;if(e.cell==null)throw new O("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new gc({cells:e.cell}):t=e.cell,t.stateSize==null)throw new O("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Et({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return tn(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){oy(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],o;if(this.returnSequences?o=[e[0],e[1],n]:o=[e[0],n],this.returnState){let s=[];for(let i of t)s.push([e[0],i]);return[o].concat(s)}else return o}computeMask(e,t){return G(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let o=this.states.map(s=>null);return[n].concat(o)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Ee("Constants support is not implemented in RNN yet.");oy(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,o=e.slice(2);this.inputSpec[0]=new Et({shape:[n,null,...o]});let s=[e[0]].concat(e.slice(2));this.cell.build(s);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!b.arraysEqual(this.stateSpec.map(a=>a.shape[a.shape.length-1]),i))throw new O(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(a=>new Et({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){G(()=>{if(!this.stateful)throw new Yn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>bt([n,o])):this.states_=[bt([n,this.cell.stateSize])];else if(e==null)Fe(this.states_),this.keptStates!=null&&(Fe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>bt([n,o])):this.states_[0]=bt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Fe(this.states_);for(let o=0;o<this.states_.length;++o){let s=e[o],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,a=[n,i];if(!b.arraysEqual(s.shape,a))throw new O(`State ${o} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[o]=s}}this.states_=this.states_.map(o=>Wt(o.clone()))})}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=TS(e,n,o,this.numConstants);e=s.inputs,n=s.initialState,o=s.constants;let i=[],a=[];if(n!=null){t.initialState=n,i=i.concat(n),this.stateSpec=[];for(let p of n)this.stateSpec.push(new Et({shape:p.shape}));a=a.concat(this.stateSpec)}if(o!=null&&(t.constants=o,i=i.concat(o),this.numConstants=o.length),i[0]instanceof hn){let p=[e].concat(i),l=this.inputSpec.concat(a),m=this.inputSpec;this.inputSpec=l;let c=super.apply(p,t);return this.inputSpec=m,c}else return super.apply(e,t)}call(e,t){return G(()=>{let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;e=Oe(e),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(e));let i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new O(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let a={training:o},p=xS((f,h)=>{let g=this.cell.call([f].concat(h),a);return[g[0],g.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=p[0],m=p[1],c=p[2];this.stateful&&this.resetStates(c,o);let d=this.returnSequences?m:l;return this.returnState?[d].concat(c):d})}getInitialState(e){return G(()=>{let t=bt(e.shape);return t=he(t,[1,2]),t=gu(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?Jb(t,[1,n]):t):this.cell.stateSize>1?[Jb(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===IS.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let o=t.cell,s=gn(o,n);return new e(Object.assign(t,{cell:s}))}},Ws=IS;Ws.className="RNN";re.registerClass(Ws);var pp=class extends We{},fc=class extends pp{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,rr(this.units,"units"),this.activation=$a(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Tt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Tt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Tt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=St(e.kernelRegularizer),this.recurrentRegularizer=St(e.recurrentRegularizer),this.biasRegularizer=St(e.biasRegularizer),this.kernelConstraint=jt(e.kernelConstraint),this.recurrentConstraint=jt(e.recurrentConstraint),this.biasConstraint=jt(e.biasConstraint),this.dropout=ml([1,Ra([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ml([1,Ra([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ze(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return G(()=>{if(e=e,e.length!==2)throw new O(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let o=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=bu({ones:()=>Dr(e),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=bu({ones:()=>Dr(n),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));let s,i=this.dropoutMask,a=this.recurrentDropoutMask;i!=null?s=Gs(L(e,i),this.kernel.read()):s=Gs(e,this.kernel.read()),this.bias!=null&&(s=dn(s,this.bias.read())),a!=null&&(n=L(n,a));let u=X(s,Gs(n,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ba(this.activation),useBias:this.useBias,kernelInitializer:Pt(this.kernelInitializer),recurrentInitializer:Pt(this.recurrentInitializer),biasInitializer:Pt(this.biasInitializer),kernelRegularizer:dt(this.kernelRegularizer),recurrentRegularizer:dt(this.recurrentRegularizer),biasRegularizer:dt(this.biasRegularizer),activityRegularizer:dt(this.activityRegularizer),kernelConstraint:qt(this.kernelConstraint),recurrentConstraint:qt(this.recurrentConstraint),biasConstraint:qt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};fc.className="SimpleRNNCell";re.registerClass(fc);var Gf=class extends Ws{constructor(e){e.cell=new fc(e);super(e)}call(e,t){return G(()=>{this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return new e(t)}};Gf.className="SimpleRNN";re.registerClass(Gf);var hc=class extends pp{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.resetAfter)throw new O("GRUCell does not support reset_after parameter set to true.");this.units=e.units,rr(this.units,"units"),this.activation=$a(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=$a(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Tt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Tt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Tt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=St(e.kernelRegularizer),this.recurrentRegularizer=St(e.recurrentRegularizer),this.biasRegularizer=St(e.biasRegularizer),this.kernelConstraint=jt(e.kernelConstraint),this.recurrentConstraint=jt(e.recurrentConstraint),this.biasConstraint=jt(e.biasConstraint),this.dropout=ml([1,Ra([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ml([1,Ra([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ze(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return G(()=>{if(e=e,e.length!==2)throw new O(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=bu({ones:()=>Dr(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=bu({ones:()=>Dr(o),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,i=this.recurrentDropoutMask,a,u,p;0<this.dropout&&this.dropout<1&&(e=L(e,s[0]));let l=Gs(e,this.kernel.read());this.useBias&&(l=dn(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=L(o,i[0]));let m=this.recurrentKernel.read(),[c,d]=Ir(m,[2*this.units,this.units],m.rank-1),f=Gs(o,c),[h,g,y]=Ir(l,3,l.rank-1),[T,x]=Ir(f,2,f.rank-1);a=this.recurrentActivation.apply(X(h,T)),u=this.recurrentActivation.apply(X(g,x));let I=Gs(L(u,o),d);p=this.activation.apply(X(y,I));let k=X(L(a,o),L(X(1,Qe(a)),p));return[k,k]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ba(this.activation),recurrentActivation:Ba(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Pt(this.kernelInitializer),recurrentInitializer:Pt(this.recurrentInitializer),biasInitializer:Pt(this.biasInitializer),kernelRegularizer:dt(this.kernelRegularizer),recurrentRegularizer:dt(this.recurrentRegularizer),biasRegularizer:dt(this.biasRegularizer),activityRegularizer:dt(this.activityRegularizer),kernelConstraint:qt(this.kernelConstraint),recurrentConstraint:qt(this.recurrentConstraint),biasConstraint:qt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};hc.className="GRUCell";re.registerClass(hc);var Uf=class extends Ws{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new hc(e);super(e)}call(e,t){return G(()=>{this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Uf.className="GRU";re.registerClass(Uf);var up=class extends pp{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,rr(this.units,"units"),this.activation=$a(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=$a(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Tt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Tt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Tt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=St(e.kernelRegularizer),this.recurrentRegularizer=St(e.recurrentRegularizer),this.biasRegularizer=St(e.biasRegularizer),this.kernelConstraint=jt(e.kernelConstraint),this.recurrentConstraint=jt(e.recurrentConstraint),this.biasConstraint=jt(e.biasConstraint),this.dropout=ml([1,Ra([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ml([1,Ra([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var o;e=Ze(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let n;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,i=this.units;n=new(o=class extends Mn{apply(u,p){let l=s.apply([i]),m=new fl().apply([i]),c=s.apply([i*2]);return $k($k(l,m),c)}},o.className="CustomInit",o)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return G(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new O(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1],s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=bu({ones:()=>Dr(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=bu({ones:()=>Dr(o),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,a=this.recurrentDropoutMask,u,p,l,m;0<this.dropout&&this.dropout<1&&(e=L(e,i[0]));let c=Gs(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=L(o,a[0])),c=X(c,Gs(o,this.recurrentKernel.read())),this.useBias&&(c=dn(c,this.bias.read()));let[d,f,h,g]=Ir(c,4,c.rank-1);u=this.recurrentActivation.apply(d),p=this.recurrentActivation.apply(f),l=X(L(p,s),L(u,this.activation.apply(h))),m=this.recurrentActivation.apply(g);let y=L(m,this.activation.apply(l));return[y,y,l]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ba(this.activation),recurrentActivation:Ba(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Pt(this.kernelInitializer),recurrentInitializer:Pt(this.recurrentInitializer),biasInitializer:Pt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:dt(this.kernelRegularizer),recurrentRegularizer:dt(this.recurrentRegularizer),biasRegularizer:dt(this.biasRegularizer),activityRegularizer:dt(this.activityRegularizer),kernelConstraint:qt(this.kernelConstraint),recurrentConstraint:qt(this.recurrentConstraint),biasConstraint:qt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};up.className="LSTMCell";re.registerClass(up);var Wf=class extends Ws{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new up(e);super(e)}call(e,t){return G(()=>{this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Wf.className="LSTM";re.registerClass(Wf);var gc=class extends pp{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return G(()=>{e=e;let n=e.slice(1),o=[];for(let a of this.cells.slice().reverse())Array.isArray(a.stateSize)?o.push(n.splice(0,a.stateSize.length)):o.push(n.splice(0,1));o.reverse();let s=[],i;for(let a=0;a<this.cells.length;++a){let u=this.cells[a];n=o[a],a===0?i=[e[0]].concat(n):i=[i[0]].concat(n),i=u.call(i,t),s.push(i.slice(1))}n=[];for(let a of s.slice().reverse())n.push(...a);return[i[0]].concat(n)})}build(e){oy(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,o)=>{Fa(`RNNCell_${o}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=s=>({className:s.getClassName(),config:s.getConfig()}),o={cells:this.cells.map(t)};return{...e,...o}}static fromConfig(e,t,n={}){let o=[];for(let s of t.cells)o.push(gn(s,n));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return gf(e)}setWeights(e){let t=[];for(let n of this.cells){let o=n.weights.length,s=e.splice(o);for(let i=0;i<n.weights.length;++i)t.push([n.weights[i],s[i]])}sc(t)}};gc.className="StackedRNNCells";re.registerClass(gc);function bu(r){let{ones:e,rate:t,training:n=!1,count:o=1,dropoutFunc:s}=r,i=()=>s!=null?s(e(),t):ty(e(),t),a=()=>rp(i,e,n);return!o||o<=1?Wt(a().clone()):Array(o).fill(void 0).map(a).map(p=>Wt(p.clone()))}var CS=class extends Ws{constructor(e){if(e.unroll)throw new Ee("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Ee("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Et({ndim:5})]}call(e,t){return G(()=>{if(this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new O("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return G(()=>{let{stateSize:t}=this.cell,n=e.shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)],i=bt(s);return Array.isArray(t)?Array(t.length).fill(i):[i]})}resetStates(e,t=!1){G(()=>{if(!this.stateful)throw new Yn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)];if(n[0]==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>bt(s)):this.states_=[bt(s)];else if(e==null)Fe(this.states_),this.keptStates!=null&&(Fe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>bt(s)):this.states_[0]=bt(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Fe(this.states_);for(let a=0;a<this.states_.length;++a){let u=e[a],p=s;if(!b.arraysEqual(u.shape,p))throw new O(`State ${a} is incompatible with layer ${this.name}: expected shape=${p}, received shape=${u.shape}`);this.states_[a]=u}}this.states_=this.states_.map(a=>Wt(a.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:o,padding:s,strides:i,dilationRate:a}=this.cell,u=t==="channelsFirst",p=e[u?3:2],l=e[u?4:3],m=Fn(p,o[0],s,i[0],a[0]),c=Fn(l,o[1],s,i[1],a[1]);return[...e.slice(0,2),...u?[n,m,c]:[m,c,n]]}};CS.className="ConvRNN2D";var bc=class extends up{constructor(e){let{filters:t,kernelSize:n,strides:o,padding:s,dataFormat:i,dilationRate:a}=e;super({...e,units:t});this.filters=t,rr(this.filters,"filters"),this.kernelSize=ip(n,2,"kernelSize"),this.kernelSize.forEach(u=>rr(u,"kernelSize")),this.strides=ip(o||1,2,"strides"),this.strides.forEach(u=>rr(u,"strides")),this.padding=s||"valid",cn(this.padding),this.dataFormat=i||"channelsLast",Kt(this.dataFormat),this.dilationRate=ip(a||1,2,"dilationRate"),this.dilationRate.forEach(u=>rr(u,"dilationRate"))}build(e){var a;e=Ze(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=4,s=this.kernelSize.concat([n,this.filters*o]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){let p=this.biasInitializer,l=this.filters;u=new(a=class extends Mn{apply(c,d){let f=p.apply([l]),h=lr([l]),g=p.apply([l*2]);return Xm([f,h,g])}},a.className="CustomInit",a)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return G(()=>{if(e.length!==3)throw new O(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,o=e[0],s=e[1],i=e[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=bu({ones:()=>Dr(o),rate:this.dropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));let u=this.dropoutMask,p=(oe,ie,se)=>!ie||!ie[se]?oe:L(ie[se],oe),l=p(o,u,0),m=p(o,u,1),c=p(o,u,2),d=p(o,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=bu({ones:()=>Dr(s),rate:this.recurrentDropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));let f=this.recurrentDropoutMask,h=p(s,f,0),g=p(s,f,1),y=p(s,f,2),T=p(s,f,3),x=3,[I,k,N,E]=Ir(this.kernel.read(),a,x),[M,R,B,U]=this.useBias?Ir(this.bias.read(),a):[null,null,null,null];l=this.inputConv(l,I,M,this.padding),m=this.inputConv(m,k,R,this.padding),c=this.inputConv(c,N,B,this.padding),d=this.inputConv(d,E,U,this.padding);let[W,K,H,V]=Ir(this.recurrentKernel.read(),a,x);h=this.recurrentConv(h,W),g=this.recurrentConv(g,K),y=this.recurrentConv(y,H),T=this.recurrentConv(T,V);let j=this.recurrentActivation.apply(X(l,h)),ee=this.recurrentActivation.apply(X(m,g)),Z=X(L(ee,i),L(j,this.activation.apply(X(c,y)))),te=L(this.recurrentActivation.apply(X(d,T)),this.activation.apply(Z));return[te,te,Z]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,o){let s=jn(e,t,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?dn(s,n,this.dataFormat):s}recurrentConv(e,t){return jn(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};bc.className="ConvLSTM2DCell";re.registerClass(bc);var Kf=class extends CS{constructor(e){let t=new bc(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};Kf.className="ConvLSTM2D";re.registerClass(Kf);var yc=class extends We{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let o=0;o<this.noiseShape.length;++o)n.push(this.noiseShape[o]==null?t[o]:this.noiseShape[o]);return n}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Oe(e);if(0<this.rate&&this.rate<1){let o=t.training==null?!1:t.training,s=this.getNoiseShape(n);return rp(()=>ty(n,this.rate,s,this.seed),()=>n,o)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};yc.className="Dropout";re.registerClass(yc);var Vf=class extends yc{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Vf.className="SpatialDropout1D";re.registerClass(Vf);var Hf=class extends We{constructor(e){super(e);this.activation=null;this.useBias=!0;this.kernel=null;this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,rr(this.units,"units"),this.activation=$a(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Tt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Tt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=jt(e.kernelConstraint),this.biasConstraint=jt(e.biasConstraint),this.kernelRegularizer=St(e.kernelRegularizer),this.biasRegularizer=St(e.biasRegularizer),this.activityRegularizer=St(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Ze(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=Ze(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=Xb(this.activation.getClassName()),s;return o!=null?s=Gs(n,this.kernel.read(),o,this.bias?this.bias.read():null):(s=Gs(n,this.kernel.read()),this.bias!=null&&(s=dn(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let e={units:this.units,activation:Ba(this.activation),useBias:this.useBias,kernelInitializer:Pt(this.kernelInitializer),biasInitializer:Pt(this.biasInitializer),kernelRegularizer:dt(this.kernelRegularizer),biasRegularizer:dt(this.biasRegularizer),activityRegularizer:dt(this.activityRegularizer),kernelConstraint:qt(this.kernelConstraint),biasConstraint:qt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Hf.className="Dense";re.registerClass(Hf);var qf=class extends We{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ze(e);for(let t of e.slice(1))if(t==null)throw new O(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],zs(e,1)]}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Oe(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let o=[0];for(let s=2;s<n.rank;++s)o.push(s);o.push(1),n=He(n,o)}return bM(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};qf.className="Flatten";re.registerClass(qf);var jf=class extends We{constructor(e){super(e);this.supportsMasking=!0,this.activation=$a(e.activation)}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Oe(e);return this.activation.apply(n)})}getConfig(){let e={activation:Ba(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};jf.className="Activation";re.registerClass(jf);var Xf=class extends We{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return G(()=>(e=Oe(e),hM(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Xf.className="RepeatVector";re.registerClass(Xf);var Yf=class extends We{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",o=t.slice(),s=1,i=null;for(let u=0;u<o.length;++u){let p=o[u];if(this.isUnknown(p))if(i===null)i=u;else throw new O("Can only specifiy one unknown dimension.");else s*=p}let a=zs(e);if(i!==null){if(s===0||a%s!==0)throw new O(n);o[i]=a/s}else if(a!==s)throw new O(n);return o}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=n.shape,s=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return _(n,s)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Yf.className="Reshape";re.registerClass(Yf);var Qf=class extends We{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=tn(1,e.dims.length+1);if(!b.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Et({ndim:this.dims.length+1})]}computeOutputShape(e){e=Ze(e);let t=e.slice();return this.dims.forEach((n,o)=>{t[o+1]=e[n]}),t}call(e,t){return He(Oe(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Qf.className="Permute";re.registerClass(Qf);var Zf=class extends We{constructor(e){super(e??{});this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Oe(e),o=-1;return Bm(pi(n,this.maskValue),o)}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=-1,s=!0,i=Bm(pi(n,this.maskValue),o,s);return L(n,J(i,n.dtype))})}};Zf.className="Masking";re.registerClass(Zf);var Jf=class extends We{constructor(e){super(e);this.embeddings=null;this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform";if(e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(kt(e.inputLength))}this.inputDim=e.inputDim,rr(this.inputDim,"inputDim"),this.outputDim=e.outputDim,rr(this.outputDim,"outputDim"),this.embeddingsInitializer=Tt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=St(e.embeddingsRegularizer),this.activityRegularizer=St(e.activityRegularizer),this.embeddingsConstraint=jt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return G(()=>this.maskZero?(e=Oe(e),pi(e,De(e))):null)}computeOutputShape(e){if(e=Ze(e),this.inputLength==null)return[...e,this.outputDim];let t=kt(this.inputLength);if(t.length!==e.length-1)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let o=0;o<t.length;++o){let s=t[o],i=e[o+1];if(s!=null&&i!=null&&s!==i)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);s==null&&(t[n]=i),n++}}return[e[0],...t,this.outputDim]}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Oe(e);n.dtype!=="int32"&&(n=cl(n,"int32"));let o=ey(this.embeddings.read(),_(n,[n.size]));return _(o,Ze(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Pt(this.embeddingsInitializer),embeddingsRegularizer:dt(this.embeddingsRegularizer),activityRegularizer:dt(this.activityRegularizer),embeddingsConstraint:qt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Jf.className="Embedding";re.registerClass(Jf);var lp=class extends We{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Ee}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let o=0;o<t.length;++o){let s=e[e.length-t.length+o],i=t[o];if(s==null||i==null||s<0||i<0)n.push(null);else if(s===1)n.push(i);else if(i===1)n.push(s);else{if(s!==i)throw new O("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ze(e)]),e=e,e.length<2)throw new O(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let s of e)s!=null&&s[0]!==null&&t.push(s[0]);if(t=Os(t),t.length>1)throw new O(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let s=1;s<e.length;++s){let i=e[s]==null?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,i)}let o=e.map(s=>s.length);e.indexOf(null)===-1&&Os(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return G(()=>{if(e=e,this.reshapeRequired){let n=[],o=e.map(s=>s.rank);if(o.indexOf(null)===-1){let s=Ra(o);for(let i of e){let a=i.rank;for(let u=0;u<s-a;++u)i=gu(i,1);n.push(i)}return this.mergeFunction(n)}else{let s=!1;for(let u of e){let p=u.rank;if(p==null){let l=u.shape,m=l[0],c=l.slice(1).concat([m]),d=_(u,[m].concat(zs(l.slice(1))));d=He(d,[1,0]),d=_(d,c),n.push(d),s=!0}else if(p>1){let l=tn(1,p).concat([0]);n.push(He(u,l)),s=!0}else n.push(u)}let i=this.mergeFunction(n),a=i.rank;if(s){if(a==null){let u=i.shape,p=u.length,l=u[p-1],m=[l].concat(u.slice(0,u.length-1));i=_(He(_(i,[-1,l]),[1,0]),m)}else if(a>1){let u=[a-1].concat(tn(0,a-1));i=He(i,u)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let o=1;o<e.length;++o){let s=e[o]==null?null:e[o].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(let o of e)o!=null&&o[0]!==null&&n.push(o[0]);return n=Os(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return G(()=>{if(t==null)return null;if(!Array.isArray(t))throw new O("`mask` should be an Array");if(!Array.isArray(e))throw new O("`inputs` should be an Array");if(t.length!==e.length)throw new O(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(o=>o==null))return null;t=t.map(o=>o==null?o:Nr(o,0));let n=t[0];for(let o=1;o<t.length-1;++o)n=Vr(n,t[o]);return n})}},th=class extends lp{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=X(t,e[n]);return t})}};th.className="Add";re.registerClass(th);var rh=class extends lp{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=L(t,e[n]);return t})}};rh.className="Multiply";re.registerClass(rh);var nh=class extends lp{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=X(t,e[n]);return L(1/e.length,t)})}};nh.className="Average";re.registerClass(nh);var oh=class extends lp{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Xn(t,e[n]);return t})}};oh.className="Maximum";re.registerClass(oh);var sh=class extends lp{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=lu(t,e[n]);return t})}};sh.className="Minimum";re.registerClass(sh);var ah=class extends lp{constructor(e){super(e);this.DEFAULT_AXIS=-1;e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new O("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let o of e)if(o!=null){t=!1;break}if(t)return;let n=[];for(let o=0;o<e.length;++o){let s=e[o].slice();s.splice(this.axis,1);let i=!1;for(let a of n)if(b.arraysEqual(a,s)){i=!0;break}i||n.push(s)}if(n.length>1)throw new O("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return G(()=>Xm(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new O("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),o=this.axis<0?n.length+this.axis:this.axis;for(let s of t.slice(1)){if(n[o]==null||s[o]==null){n[o]=null;break}n[o]+=s[o]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new O("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new O("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new O(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return G(()=>{let n=!0;if(t.forEach(i=>{if(i!=null){n=!1;return}}),n)return null;let o=[];for(let i=0;i<e.length;++i)t[i]==null?o.push(J(Dr(e[i]),"bool")):t[i].rank<e[i].rank?o.push(Nr(t[i],-1)):o.push(t[i]);let s=it(o,this.axis);return wd(s,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};ah.className="Concatenate";re.registerClass(ah);function eh(r,e){for(;r<0;)r+=e;return r}function TZ(r,e,t){if(r.shape.length>3||e.shape.length>3)throw new Ee("batchDot is not implemented for tensors of 4D or higher rank yet");if(b.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),b.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),r.dtype==="complex64"||e.dtype==="complex64")throw new Ee("batchDot is not implemented for complex64-type Tensors yet.");let n=r.shape.length,o=e.shape.length;t==null&&(t=[n-1,o-2]);let s=t;return G(()=>{let i;if(n>o){i=n-o;let u=[];for(let p=0;p<i;++p)u.push(1);e=_(e,e.shape.concat(u))}else if(o>n){i=o-n;let u=[];for(let p=0;p<i;++p)u.push(1);r=_(r,r.shape.concat(u))}else i=0;let a;if(r.shape.length===2&&e.shape.length===2)s[0]===s[1]?a=he(L(r,e),s[0]):a=he(L(He(r,[1,0]),e),s[1]);else{let u=s[0]!==r.shape.length-1,p=s[1]===e.shape.length-1;a=Ke(r,e,u,p)}if(i>0){let u;n>o?u=n+o-3:u=n-1;let p=[];for(let l=u;l<u+i;++l)p.push(l);a=ln(a,p)}return a.shape.length===1&&(a=Nr(a,1)),a})}var ih=class extends lp{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){b.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Ee("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);if(t[o[0]]!==n[o[1]])throw new O(`Dimension incompatibility: ${t[o[0]]} !== ${n[o[1]]}`)}mergeFunction(e){if(e.length!==2)throw new O(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],o;return Array.isArray(this.axes)?o=this.axes.map((s,i)=>eh(s,e[i].shape.length)):o=[eh(this.axes,t.shape.length),eh(this.axes,n.shape.length)],this.normalize&&(t=yf(t,o[0]),n=yf(n,o[1])),TZ(t,n,o)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[eh(this.axes,e.length),eh(this.axes,t.length)],n}computeOutputShape(e){b.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Ee("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);t.splice(o[0],1),n.splice(o[1],1),n.splice(0,1);let s=t.concat(n);return s.length===1&&s.push(1),s}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};ih.className="Dot";re.registerClass(ih);var uh=class extends We{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Oe(e);return rp(()=>X(Ym(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};uh.className="GaussianNoise";re.registerClass(uh);var ph=class extends We{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Oe(e);return this.rate>0&&this.rate<1?rp(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return L(n,Ym(n.shape,1,s))},()=>n,t.training||!1):n})}};ph.className="GaussianDropout";re.registerClass(ph);var lh=class extends We{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Oe(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return G(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return rp(()=>{let s=Oe(e),i=1.6732632423543772,a=1.0507009873554805,u=-i*a,p=Qo(Pa(n),this.rate);p=cl(p,"float32");let l=((1-this.rate)*(1+this.rate*u**2))**-.5,m=-l*u*this.rate,c=X(L(s,p),L(X(p,-1),u));return X(L(c,l),m)},()=>Oe(e),t.training||!1)}return e})}};lh.className="AlphaDropout";re.registerClass(lh);function mh(r,e,t,n,o,s=.001){let i;if(r.rank===2)i=DC(r,e,t,n,o,s);else if(r.rank===3)i=PC(r,e,t,n,o,s);else if(r.rank===4)i=EC(r,e,t,n,o,s);else throw new Ee(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return i}function xZ(r,e,t,n,o=.001){return G(()=>{let s=Um(r,n),i=s.mean,a=s.variance;return[mh(r,i,a,t,e,o),i,a]})}function IZ(r,e,t,n,o=.001){return G(()=>{let s=Um(r,n),i=s.mean,a=s.variance,u=[];for(let f of tn(0,r.rank))n.indexOf(f)!==-1?u.push(1):u.push(r.shape[f]);let p=_(i,u),l=_(a,u),m=e==null?null:_(e,u),c=t==null?null:_(t,u);return[mh(r,p,l,c,m,o),i,a]})}function CZ(r,e,t,n,o=.001){return b.arraysEqual(n.slice().sort(),tn(0,r.rank-1))?xZ(r,e,t,n,o):IZ(r,e,t,n,o)}var ch=class extends We{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Tt(e.betaInitializer||"zeros"),this.gammaInitializer=Tt(e.gammaInitializer||"ones"),this.movingMeanInitializer=Tt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Tt(e.movingVarianceInitializer||"ones"),this.betaConstraint=jt(e.betaConstraint),this.gammaConstraint=jt(e.gammaConstraint),this.betaRegularizer=St(e.betaRegularizer),this.gammaRegularizer=St(e.gammaRegularizer)}build(e){e=Ze(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new O(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Et({ndim:e.length,axes:{[t]:n}})];let o=[n];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return G(()=>{let n=t.training==null?!1:t.training,o=Oe(e),s=o.shape,i=s.length,a=tn(0,i),u=this.axis>=0?this.axis:this.axis+i;a.splice(u,1);let p=Bs(1,i);p[u]=s[u];let l=a.slice();l.sort();let m=!b.arraysEqual(l,tn(0,i).slice(0,i-1)),c=()=>{if(m){let T=_(this.movingMean.read(),p),x=_(this.movingVariance.read(),p),I=this.center?_(this.beta.read(),p):null,k=this.scale?_(this.gamma.read(),p):null;return mh(o,T,x,I,k,this.epsilon)}else return mh(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return c();let[d,f,h]=CZ(o,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(T,x,I)=>{G(()=>{let k=1-I,N=T.read(),E=L(le(N,x),k);T.write(le(N,E))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,h,this.momentum)})(),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Pt(this.betaInitializer),gammaInitializer:Pt(this.gammaInitializer),movingMeanInitializer:Pt(this.movingMeanInitializer),movingVarianceInitializer:Pt(this.movingVarianceInitializer),betaRegularizer:dt(this.betaRegularizer),gammaRegularizer:dt(this.gammaRegularizer),betaConstraint:qt(this.betaConstraint),gammaConstraint:qt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};ch.className="BatchNormalization";re.registerClass(ch);var dh=class extends We{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Tt(e.betaInitializer||"zeros"),this.gammaInitializer=Tt(e.gammaInitializer||"ones"),this.betaRegularizer=St(e.betaRegularizer),this.gammaRegularizer=St(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Ze(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(let s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==Os(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(s=>e[s]),o=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(e,t){let n=Oe(e),o=n.shape,s=o.length;return G(()=>{let{mean:a,variance:u}=Um(n,this.axis,!0),p=Bs(1,s);for(let h of this.axis)p[h]=o[h];let l=h=>h!=null&&h.shape.length!==s?_(h,p):h,m=l(this.gamma.read()),c=l(this.beta.read()),d=[],f=[];for(let h=0;h<s;++h)this.axis.indexOf(h)!==-1?(d.push(o[h]),f.push(1)):(d.push(1),f.push(o[h]));return a=Kr(a,d),u=Kr(u,d),m=Kr(m,f),c=Kr(c,f),mh(n,a,u,c,m,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Pt(this.betaInitializer),gammaInitializer:Pt(this.gammaInitializer),betaRegularizer:dt(this.betaRegularizer),gammaRegularizer:dt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};dh.className="LayerNormalization";re.registerClass(dh);function kZ(r,e,t){return G(()=>{if(r.rank!==4)throw new O(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new O("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=mn()),t!=="channelsLast"&&t!=="channelsFirst")throw new O(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return t==="channelsFirst"?n=[[0,0],[0,0],e[0],e[1]]:n=[[0,0],e[0],e[1],[0,0]],Dn(r,n)})}var fh=class extends We{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?mn():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new O(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new O(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new O(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Et({ndim:4})]}computeOutputShape(e){e=Ze(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return G(()=>kZ(Oe(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};fh.className="ZeroPadding2D";re.registerClass(fh);function Cy(r,e,t,n,o,s){return G(()=>{Kt(o),Lk(s),cn(n),t==null&&(t=[1,1]),n==null&&(n="valid"),o==null&&(o=mn()),s==null&&(s="max"),r=Of(r,o);let i,a=n==="same"?"same":"valid";return s==="max"?i=Hp(r,e,t,a):i=$p(r,e,t,a),o==="channelsFirst"&&(i=He(i,[0,3,1,2])),i})}function rF(r,e,t,n,o,s){return G(()=>{Kt(o),Lk(s),cn(n),t==null&&(t=[1,1,1]),n==null&&(n="valid"),o==null&&(o=mn()),s==null&&(s="max"),r=hS(r,o);let i,a=n==="same"?"same":"valid";return s==="max"?i=Od(r,e,t,a):i=Nd(r,e,t,a),o==="channelsFirst"&&(i=He(i,[0,4,1,2,3])),i})}var kS=class extends We{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new O(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(rr(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new O(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);rr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,cn(this.padding),this.inputSpec=[new Et({ndim:3})]}computeOutputShape(e){e=Ze(e);let t=Fn(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return G(()=>{this.invokeCallHook(e,t),e=gu(Oe(e),2);let n=this.poolingFunction(Oe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ln(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},hh=class extends kS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Kt(s),cn(o),Cy(e,t,n,o,s,"max")}};hh.className="MaxPooling1D";re.registerClass(hh);var gh=class extends kS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Kt(s),cn(o),Cy(e,t,n,o,s,"avg")}};gh.className="AveragePooling1D";re.registerClass(gh);var SS=class extends We{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new O(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];rr(this.poolSize,"poolSize"),rr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Kt(this.dataFormat),cn(this.padding),this.inputSpec=[new Et({ndim:4})]}computeOutputShape(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Fn(t,this.poolSize[0],this.padding,this.strides[0]),n=Fn(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return G(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},bh=class extends SS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Kt(s),cn(o),Cy(e,t,n,o,s,"max")}};bh.className="MaxPooling2D";re.registerClass(bh);var yh=class extends SS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Kt(s),cn(o),Cy(e,t,n,o,s,"avg")}};yh.className="AveragePooling2D";re.registerClass(yh);var vS=class extends We{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new O(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];rr(this.poolSize,"poolSize"),rr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Kt(this.dataFormat),cn(this.padding),this.inputSpec=[new Et({ndim:5})]}computeOutputShape(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Fn(t,this.poolSize[0],this.padding,this.strides[0]),n=Fn(n,this.poolSize[1],this.padding,this.strides[1]),o=Fn(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,o]:[e[0],t,n,o,e[4]]}call(e,t){return G(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Th=class extends vS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Kt(s),cn(o),rF(e,t,n,o,s,"max")}};Th.className="MaxPooling3D";re.registerClass(Th);var xh=class extends vS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Kt(s),cn(o),rF(e,t,n,o,s,"avg")}};xh.className="AveragePooling3D";re.registerClass(xh);var AS=class extends We{constructor(e){super(e);this.inputSpec=[new Et({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Ee}},Ih=class extends AS{constructor(e){super(e||{})}call(e,t){return G(()=>{let n=Oe(e);return Ft(n,1)})}};Ih.className="GlobalAveragePooling1D";re.registerClass(Ih);var Ch=class extends AS{constructor(e){super(e||{})}call(e,t){return G(()=>{let n=Oe(e);return Zr(n,1)})}};Ch.className="GlobalMaxPooling1D";re.registerClass(Ch);var wS=class extends We{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Kt(this.dataFormat),this.inputSpec=[new Et({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Ee}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},kh=class extends wS{call(e,t){return G(()=>{let n=Oe(e);return this.dataFormat==="channelsLast"?Ft(n,[1,2]):Ft(n,[2,3])})}};kh.className="GlobalAveragePooling2D";re.registerClass(kh);var Sh=class extends wS{call(e,t){return G(()=>{let n=Oe(e);return this.dataFormat==="channelsLast"?Zr(n,[1,2]):Zr(n,[2,3])})}};Sh.className="GlobalMaxPooling2D";re.registerClass(Sh);var NS=class extends We{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let o=t.layer,s=gn(o,n);delete t.layer;let i={layer:s};return Object.assign(i,t),new e(i)}},vh=class extends NS{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=Ze(e),e.length<3)throw new O(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Ze(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),o=e[1];return[n[0],o].concat(n.slice(1))}call(e,t){return G(()=>(e=Oe(e),xS((i,a)=>[Oe(this.layer.call(i,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};vh.className="TimeDistributed";re.registerClass(vh);function SZ(r){di(lM,"BidirectionalMergeMode",r)}var vZ="concat",Ah=class extends NS{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=gn(n),t.goBackwards=t.goBackwards!==!0;let o={};if(o.className=e.layer.getClassName(),o.config=t,this.backwardLayer=gn(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?vZ:e.mergeMode,SZ(this.mergeMode),e.weights)throw new Ee("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,o,s;return this.returnState&&(s=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,o=[n]):this.mergeMode==null?o=[n,n.slice()]:o=[n],this.returnState?this.mergeMode==null?o.concat(s).concat(s.slice()):[n].concat(s).concat(s.slice()):Pr(o)}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=TS(e,n,o,this.numConstants);if(e=s.inputs,n=s.initialState,o=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&o==null)return super.apply(e,t);let i=[],a=[];if(n!=null){let p=n.length;if(p%2>0)throw new O("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,i.push(...n);let l=n.map(m=>new Et({shape:m.shape}));this.forwardLayer.stateSpec=l.slice(0,p/2),this.backwardLayer.stateSpec=l.slice(p/2),a.push(...l)}if(o!=null)throw new Ee("Support for constants in Bidirectional layers is not implemented yet.");let u=i[0]instanceof hn;for(let p of i)if(p instanceof hn!==u)throw new O("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){let p=[e].concat(i),l=this.inputSpec.concat(a),m=this.inputSpec;this.inputSpec=l;let c=super.apply(p,t);return this.inputSpec=m,c}else return super.apply(e,t)}call(e,t){return G(()=>{let n=t.initialState,o,s;if(n==null)o=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{let u=n.slice(0,n.length/2),p=n.slice(n.length/2);o=this.forwardLayer.call(e,Object.assign(t,{initialState:u})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:p}))}let i;this.returnState&&(Array.isArray(o)&&(i=o.slice(1).concat(s.slice(1))),o=o[0],s=s[0]),this.returnSequences&&(s=gr(s,1));let a;return this.mergeMode==="concat"?a=Xm([o,s]):this.mergeMode==="sum"?a=X(o,s):this.mergeMode==="ave"?a=L(.5,X(o,s)):this.mergeMode==="mul"?a=L(o,s):this.mergeMode==null&&(a=[o,s]),this.returnState?this.mergeMode==null?a.concat(i):[a].concat(i):a})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Fa(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Fa(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let s=this.forwardLayer.states.map(i=>null);return Array.isArray(n)?n.concat(s).concat(s):[n].concat(s).concat(s)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=gn(t.layer);if(delete t.layer,t.numConstants!=null)throw new Ee("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let o=t;return o.layer=n,new e(o)}};Ah.className="Bidirectional";re.registerClass(Ah);function AZ(r){return new fi(r)}function wZ(r){return new Pf(r)}function NZ(r){return new wf(r)}function DZ(r){return new Nf(r)}function PZ(r){return new Df(r)}function EZ(r){return new Mf(r)}function MZ(r){return new Ef(r)}function FZ(r){return new _f(r)}function RZ(r){return new mc(r)}function LZ(r){return new Ff(r)}function _Z(r){return new cc(r)}function BZ(r){return new Rf(r)}function $Z(r){return new Lf(r)}function OZ(r){return new Bf(r)}function zZ(r){return new $f(r)}function GZ(r){return new zf(r)}function UZ(r){return new jf(r)}function WZ(r){return new Hf(r)}function KZ(r){return new yc(r)}function VZ(r){return new Vf(r)}function HZ(r){return new qf(r)}function qZ(r){return new Xf(r)}function jZ(r){return new Yf(r)}function XZ(r){return new Qf(r)}function YZ(r){return new Jf(r)}function QZ(r){return new th(r)}function ZZ(r){return new nh(r)}function JZ(r){return new ah(r)}function eJ(r){return new oh(r)}function tJ(r){return new sh(r)}function rJ(r){return new rh(r)}function nJ(r){return new ih(r)}function oJ(r){return new ch(r)}function sJ(r){return new dh(r)}function aJ(r){return new fh(r)}function DS(r){return new gh(r)}function iJ(r){return DS(r)}function uJ(r){return DS(r)}function PS(r){return new yh(r)}function pJ(r){return PS(r)}function lJ(r){return PS(r)}function ES(r){return new xh(r)}function mJ(r){return ES(r)}function cJ(r){return ES(r)}function dJ(r){return new Ih(r)}function fJ(r){return new kh(r)}function nF(r){return new Ch(r)}function oF(r){return new Sh(r)}function sF(r){return new hh(r)}function aF(r){return new bh(r)}function hJ(r){return new Th(r)}function gJ(r){return new Uf(r)}function bJ(r){return new hc(r)}function yJ(r){return new Wf(r)}function TJ(r){return new up(r)}function xJ(r){return new Gf(r)}function IJ(r){return new fc(r)}function CJ(r){return new Kf(r)}function kJ(r){return new bc(r)}function SJ(r){return new Ws(r)}function vJ(r){return new gc(r)}function AJ(r){return new Ah(r)}function wJ(r){return new vh(r)}var NJ=nF,DJ=oF,PJ=sF,EJ=aF;function MJ(r){return new uh(r)}function FJ(r){return new ph(r)}function RJ(r){return new lh(r)}function LJ(r){return new Zf(r)}var uF={};je(uF,{MAPE:()=>HJ,MSE:()=>XJ,binaryAccuracy:()=>_J,binaryCrossentropy:()=>BJ,categoricalAccuracy:()=>OJ,categoricalCrossentropy:()=>zJ,cosineProximity:()=>WJ,mape:()=>qJ,meanAbsoluteError:()=>KJ,meanAbsolutePercentageError:()=>VJ,meanSquaredError:()=>jJ,mse:()=>YJ,precision:()=>GJ,recall:()=>UJ,sparseCategoricalAccuracy:()=>$J});function _J(r,e){return If(r,e)}function BJ(r,e){return cy(r,e)}function $J(r,e){return dy(r,e)}function OJ(r,e){return Cf(r,e)}function zJ(r,e){return kf(r,e)}function GJ(r,e){return Wk(r,e)}function UJ(r,e){return EM(r,e)}function WJ(r,e){return xf(r,e)}function KJ(r,e){return ac(r,e)}function VJ(r,e){return ap(r,e)}function HJ(r,e){return ap(r,e)}function qJ(r,e){return ap(r,e)}function jJ(r,e){return gi(r,e)}function XJ(r,e){return gi(r,e)}function YJ(r,e){return gi(r,e)}var pF={};je(pF,{modelFromJSON:()=>XM});var lF={};je(lF,{l1:()=>ZJ,l1l2:()=>QJ,l2:()=>JJ});function QJ(r){return new yl(r)}function ZJ(r){return JM(r)}function JJ(r){return eF(r)}var MS=class extends sp{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof ts))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function ky(r,e){return r<e}function mF(r,e){return r>e}var FS=class extends MS{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Ee("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=ky:this.mode==="max"?this.monitorFunc=mF:this.monitor.indexOf("acc")!==-1?this.monitorFunc=mF:this.monitorFunc=ky,this.monitorFunc===ky&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===ky?1/0:-1/0}async onEpochEnd(e,t){await hi(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function e9(r){return new FS(r)}var t9={earlyStopping:e9};var r9=$();r9.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var RS=(Y=>(Y[Y.DT_INVALID=0]="DT_INVALID",Y[Y.DT_FLOAT=1]="DT_FLOAT",Y[Y.DT_DOUBLE=2]="DT_DOUBLE",Y[Y.DT_INT32=3]="DT_INT32",Y[Y.DT_UINT8=4]="DT_UINT8",Y[Y.DT_INT16=5]="DT_INT16",Y[Y.DT_INT8=6]="DT_INT8",Y[Y.DT_STRING=7]="DT_STRING",Y[Y.DT_COMPLEX64=8]="DT_COMPLEX64",Y[Y.DT_INT64=9]="DT_INT64",Y[Y.DT_BOOL=10]="DT_BOOL",Y[Y.DT_QINT8=11]="DT_QINT8",Y[Y.DT_QUINT8=12]="DT_QUINT8",Y[Y.DT_QINT32=13]="DT_QINT32",Y[Y.DT_BFLOAT16=14]="DT_BFLOAT16",Y[Y.DT_QINT16=15]="DT_QINT16",Y[Y.DT_QUINT16=16]="DT_QUINT16",Y[Y.DT_UINT16=17]="DT_UINT16",Y[Y.DT_COMPLEX128=18]="DT_COMPLEX128",Y[Y.DT_HALF=19]="DT_HALF",Y[Y.DT_RESOURCE=20]="DT_RESOURCE",Y[Y.DT_VARIANT=21]="DT_VARIANT",Y[Y.DT_UINT32=22]="DT_UINT32",Y[Y.DT_UINT64=23]="DT_UINT64",Y[Y.DT_FLOAT_REF=101]="DT_FLOAT_REF",Y[Y.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",Y[Y.DT_INT32_REF=103]="DT_INT32_REF",Y[Y.DT_UINT8_REF=104]="DT_UINT8_REF",Y[Y.DT_INT16_REF=105]="DT_INT16_REF",Y[Y.DT_INT8_REF=106]="DT_INT8_REF",Y[Y.DT_STRING_REF=107]="DT_STRING_REF",Y[Y.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",Y[Y.DT_INT64_REF=109]="DT_INT64_REF",Y[Y.DT_BOOL_REF=110]="DT_BOOL_REF",Y[Y.DT_QINT8_REF=111]="DT_QINT8_REF",Y[Y.DT_QUINT8_REF=112]="DT_QUINT8_REF",Y[Y.DT_QINT32_REF=113]="DT_QINT32_REF",Y[Y.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",Y[Y.DT_QINT16_REF=115]="DT_QINT16_REF",Y[Y.DT_QUINT16_REF=116]="DT_QUINT16_REF",Y[Y.DT_UINT16_REF=117]="DT_UINT16_REF",Y[Y.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",Y[Y.DT_HALF_REF=119]="DT_HALF_REF",Y[Y.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",Y[Y.DT_VARIANT_REF=121]="DT_VARIANT_REF",Y[Y.DT_UINT32_REF=122]="DT_UINT32_REF",Y[Y.DT_UINT64_REF=123]="DT_UINT64_REF",Y))(RS||{}),n9;(e=>{let r;(s=>(s[s.LEGACY=0]="LEGACY",s[s.V1=1]="V1",s[s.V2=2]="V2"))(r=e.CheckpointFormatVersion||={})})(n9||={});var LS={};function s9(r,e){let t={tfOpName:r,category:"custom",inputs:[],attrs:[],customExecutor:e};LS[r]=t}function Sy(r){return LS[r]}function a9(r){delete LS[r]}function v(r,e,t,n,o){let s=e.inputParams[r];if(s&&s.inputIndexStart!==void 0){let a=s.inputIndexStart,u=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?a+1:s.inputIndexEnd;if(s.type==="tensor")return Cr(e.inputNames[s.inputIndexStart],t,n,o);if(s.type==="tensors")return e.inputNames.slice(a,u).map(c=>Cr(c,t,n,o));let p=Cr(e.inputNames.slice(a)[0],t,n,o),l=p.dataSync();return s.type==="number"?l[0]:b.toNestedArray(p.shape,l)}let i=e.attrParams[r];return i&&i.value}function Cr(r,e,t,n){let[o,s]=yn(r);if(n!=null){let a=n.getHashTableHandleByName(o);if(a!=null)return a}let i=t.currentContextIds.find(a=>!!e[vy(o,a)]);return i!==void 0?e[vy(o,i)][s]:void 0}function cF(r,e,t){return e[vy(r,t.currentContextId)]}function Ks(r,e){let[t,n,o]=yn(r);return[vy(t,e&&e.currentContextId),n,o]}function vy(r,e){return e?`${r}-${e}`:r}function yn(r){let e=r.split(":");if(e.length===1)return[r,0,void 0];let t=e[0],n=e.length===3?e[1]:void 0,o=Number(e[e.length-1]);return[t,o,n]}function wh(r,e,t){let n=v("pad",r,e,t);if(n==="explicit"){n=v("explicitPaddings",r,e,t);let o=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)o[s][0]=n[s*2],o[s][1]=n[s*2+1];return o}return n}function za(r){return r.kept?r:wn(r)}var _S={};je(_S,{json:()=>i9});var i9=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var BS={};je(BS,{json:()=>u9});var u9=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var $S={};je($S,{json:()=>p9});var p9=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}];var OS={};je(OS,{json:()=>l9});var l9=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var zS={};je(zS,{json:()=>m9});var m9=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var GS={};je(GS,{json:()=>c9});var c9=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var US={};je(US,{json:()=>d9});var d9=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var WS={};je(WS,{json:()=>f9});var f9=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var KS={};je(KS,{json:()=>h9});var h9=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}];var VS={};je(VS,{json:()=>g9});var g9=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}];var HS={};je(HS,{json:()=>b9});var b9=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var qS={};je(qS,{json:()=>y9});var y9=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}];var jS={};je(jS,{json:()=>T9});var T9=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var XS={};je(XS,{json:()=>x9});var x9=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var YS={};je(YS,{json:()=>I9});var I9=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var QS={};je(QS,{json:()=>C9});var C9=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var ZS={};je(ZS,{json:()=>k9});var k9=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var JS={};je(JS,{json:()=>S9});var S9=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var ev={};je(ev,{json:()=>v9});var v9=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var _y=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[_S,BS,$S,OS,zS,GS,US,WS,KS,VS,HS,qS,jS,XS,YS,QS,ZS,JS,ev],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,o)=>(n[o.tfOpName]=o,n),{})}transformGraph(e,t={}){let n=e.node,o=[],s=[],i=[],a=n.reduce((h,g)=>(h[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?o.push(h[g.name]):g.op==="Const"?s.push(h[g.name]):(g.input==null||g.input.length===0)&&i.push(h[g.name]),h),{}),u=[],p=[],l={},m={};t!=null&&(l=this.mapSignatureEntries(t.inputs),m=this.mapSignatureEntries(t.outputs));let c=Object.keys(a);c.forEach(h=>{let g=a[h];g.inputNames.forEach((y,T)=>{let[x,,I]=Ks(y),k=a[x];if(k.outputs!=null){let N=k.outputs.indexOf(I);if(N!==-1){let E=`${x}:${N}`;g.inputNames[T]=E}}g.inputs.push(k),k.children.push(g)})}),Object.keys(m).length===0?c.forEach(h=>{let g=a[h];g.children.length===0&&p.push(g)}):Object.keys(m).forEach(h=>{let[g]=Ks(h),y=a[g];y!=null&&(y.signatureKey=m[h],p.push(y))}),Object.keys(l).length>0?Object.keys(l).forEach(h=>{let[g]=Ks(h),y=a[g];y&&(y.signatureKey=l[h],u.push(y))}):u=o;let d={};e.library!=null&&e.library.function!=null&&(d=e.library.function.reduce((h,g)=>(h[g.signature.name]=this.mapFunction(g),h),{}));let f={nodes:a,inputs:u,outputs:p,weights:s,placeholders:o,signature:t,functions:d};return i.length>0&&(f.initNodes=i),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=Sy(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(o=>o.startsWith("^")?o.substr(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((o,s)=>(o[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},o),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((o,s)=>{let i=s.type,a;switch(s.type){case"string":a=Ay(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=Ay(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":a=Fy(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=Fy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":a=Ny(e.attr,s.tfName,s.defaultValue||0),a===void 0&&!!s.tfDeprecatedName&&(a=Ny(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":a=My(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=My(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":a=wy(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=wy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":a=Ly(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=Ly(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":a=Ey(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=Ey(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":a=Ry(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=Ry(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":a=Dy(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=Dy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":a=Py(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=Py(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":a=dF(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=dF(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${e.op}`)}return o[s.name]={value:a,type:i},o},{})),n}mapFunction(e){let t=e.nodeDef,n=[],o=[],s={};t!=null&&(s=t.reduce((m,c)=>(m[c.name]=this.mapNode(c),c.op==="Const"&&o.push(m[c.name]),m),{}));let i=[],a=[];e.signature.inputArg.forEach(m=>{let[c]=Ks(m.name),d={name:c,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:tv(m.type),type:"dtype"}},children:[]};d.signatureKey=m.name,i.push(d),s[c]=d}),Object.keys(s).forEach(m=>{let c=s[m];c.inputNames.forEach((d,f)=>{let[h,,g]=Ks(d),y=s[h];if(y.outputs!=null){let T=y.outputs.indexOf(g);if(T!==-1){let x=`${h}:${T}`;c.inputNames[f]=x}}c.inputs.push(y),y.children.push(c)})});let p=e.ret;e.signature.outputArg.forEach(m=>{let[c,d]=Ks(p[m.name]),f=s[c];f!=null&&(f.defaultOutput=d,a.push(f))});let l=this.mapArgsToSignature(e);return{nodes:s,inputs:i,outputs:a,weights:o,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function A9(r){let e=$().global;if(typeof e.atob<"u")return e.atob(r);if(typeof Buffer<"u")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function fF(r,e){let t=Array.isArray(r)?String.fromCharCode.apply(null,r):A9(r);return e?t:t.toLowerCase()}function Ay(r,e,t,n=!1){let o=r[e];return o!=null?fF(o.s,n):t}function wy(r,e,t){let n=r[e];return n?n.b:t}function Ny(r,e,t){let n=r[e]||{},o=n.i!=null?n.i:n.f!=null?n.f:t;return typeof o=="number"?o:parseInt(o,10)}function tv(r){switch(typeof r=="string"&&(r=RS[r]),r){case 1:case 19:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 2:return"float32";case 7:return"string";default:return null}}function dF(r,e,t){let n=r[e];return n&&n.func?n.func.name:t}function Dy(r,e,t){let n=r[e];return n&&n.type?tv(n.type):t}function Py(r,e,t){let n=r[e];return n&&n.list&&n.list.type?n.list.type.map(o=>tv(o)):t}function hF(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function Ey(r,e,t){let n=r[e];return n&&n.shape?hF(n.shape):t}function My(r,e,t){let n=r[e];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):t}function Fy(r,e,t,n=!1){let o=r[e];return o&&o.list&&o.list.s?o.list.s.map(s=>fF(s,n)):t}function Ry(r,e,t){let n=r[e];return n&&n.list&&n.list.shape?n.list.shape.map(o=>hF(o)):t}function Ly(r,e,t){let n=r[e];return n&&n.list&&n.list.b?n.list.b:t}var rv=class{constructor(e,t,n){this.node=e;this.tensorMap=t;this.context=n;this.inputs=[];this.attrs={};this.inputs=e.inputNames.map(o=>this.getInput(o)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((o,s)=>(o[s]=this.getAttr(s),o),{}))}getInput(e){return Cr(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return Cr(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return Ny(this.node.rawAttrs,e,t);if(n.s!=null)return Ay(this.node.rawAttrs,e,t);if(n.b!=null)return wy(this.node.rawAttrs,e,t);if(n.shape!=null)return Ey(this.node.rawAttrs,e,t);if(n.type!=null)return Dy(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return My(this.node.rawAttrs,e,t);if(n.list.s!=null)return Fy(this.node.rawAttrs,e,t);if(n.list.shape!=null)return Ry(this.node.rawAttrs,e,t);if(n.list.b!=null)return Ly(this.node.rawAttrs,e,t);if(n.list.type!=null)return Py(this.node.rawAttrs,e,t)}return t}};var gF=(r,e,t)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[X(v("a",r,e,t),v("b",r,e,t))];case"AddN":return[TC(v("tensors",r,e,t))];case"FloorMod":case"Mod":return[rk(v("a",r,e,t),v("b",r,e,t))];case"Mul":return[L(v("a",r,e,t),v("b",r,e,t))];case"RealDiv":case"Div":return[me(v("a",r,e,t),v("b",r,e,t))];case"DivNoNan":return[UC(v("a",r,e,t),v("b",r,e,t))];case"FloorDiv":return[Ad(v("a",r,e,t),v("b",r,e,t))];case"Sub":return[le(v("a",r,e,t),v("b",r,e,t))];case"Minimum":return[lu(v("a",r,e,t),v("b",r,e,t))];case"Maximum":return[Xn(v("a",r,e,t),v("b",r,e,t))];case"Pow":return[Pn(v("a",r,e,t),v("b",r,e,t))];case"SquaredDifference":return[Qd(v("a",r,e,t),v("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var bF=(r,e,t)=>{switch(r.op){case"Abs":case"ComplexAbs":return[_t(v("x",r,e,t))];case"Acos":return[bC(v("x",r,e,t))];case"Acosh":return[yC(v("x",r,e,t))];case"Asin":return[IC(v("x",r,e,t))];case"Asinh":return[CC(v("x",r,e,t))];case"Atan":return[kC(v("x",r,e,t))];case"Atan2":return[SC(v("x",r,e,t),v("y",r,e,t))];case"Atanh":return[vC(v("x",r,e,t))];case"Ceil":return[FC(v("x",r,e,t))];case"Complex":return[Hn(v("real",r,e,t),v("imag",r,e,t))];case"Cos":return[Gp(v("x",r,e,t))];case"Cosh":return[Fd(v("x",r,e,t))];case"Elu":return[uu(v("x",r,e,t))];case"Erf":return[KC(v("x",r,e,t))];case"Exp":return[pr(v("x",r,e,t))];case"Expm1":return[VC(v("x",r,e,t))];case"Floor":return[pu(v("x",r,e,t))];case"Log":return[_r(v("x",r,e,t))];case"Log1p":return[Kp(v("x",r,e,t))];case"Imag":return[Up(v("x",r,e,t))];case"Neg":return[Qe(v("x",r,e,t))];case"Reciprocal":return[ck(v("x",r,e,t))];case"Real":return[ep(v("x",r,e,t))];case"Relu":return[Hr(v("x",r,e,t))];case"Round":return[Wd(v("x",r,e,t))];case"Selu":return[Vd(v("x",r,e,t))];case"Sigmoid":return[un(v("x",r,e,t))];case"Sin":return[Hd(v("x",r,e,t))];case"Sign":return[hk(v("x",r,e,t))];case"Sinh":return[qd(v("x",r,e,t))];case"Softplus":return[ui(v("x",r,e,t))];case"Sqrt":return[Rt(v("x",r,e,t))];case"Square":return[qe(v("x",r,e,t))];case"Tanh":return[au(v("x",r,e,t))];case"Tan":return[bk(v("x",r,e,t))];case"ClipByValue":return[Lr(v("x",r,e,t),v("clipValueMin",r,e,t),v("clipValueMax",r,e,t))];case"Relu6":return[Ud(v("x",r,e,t))];case"Rsqrt":return[Kd(Cr(r.inputNames[0],e,t))];case"Prod":return[zd(v("x",r,e,t),v("axes",r,e,t))];case"LeakyRelu":return[Wp(v("x",r,e,t),v("alpha",r,e,t))];case"Prelu":return[jp(v("x",r,e,t),v("alpha",r,e,t))];case"IsNan":return[HC(Cr(r.inputNames[0],e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Qn(r,e,t=""){if(!(typeof r=="number"||typeof e=="number")){b.assert(r.length===e.length,()=>t+` Shapes ${r} and ${e} must match`);for(let n=0;n<r.length;n++){let o=r[n],s=e[n];b.assert(o<0||s<0||o===s,()=>t+` Shapes ${r} and ${e} must match`)}}}function yF(r){return!(typeof r=="number"||r.some(e=>e<0))}function Tc(r,e,t){let n=By(r,t),o=!yF(n);if(o&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(o&&e.forEach(s=>{n=By(s.shape,n)}),!yF(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function By(r,e){if(typeof r=="number")return e;if(typeof e=="number")return r;if(r.length!==e.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${e}`);let t=[];for(let n=0;n<r.length;++n){let o=r[n],s=e[n];if(o>=0&&s>=0&&o!==s)throw new Error(`Incompatible shape during merge: ${r} vs. ${e}`);t[n]=o>=0?o:s}return t}var nv=class{constructor(e,t,n,o,s,i,a){this.name=e;this.dtype=t;this.maxSize=n;this.elementShape=o;this.identicalElementShapes=s;this.dynamicSize=i;this.clearAfterRead=a;this.tensors=[];this.closed_=!1;this.idTensor=ce(0),Wt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Qn(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Wt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,o)=>this.write(n,t[o]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let o=0;o<this.size();o++)e.push(o)}if(e.length===0)return Fr([],[0].concat(this.elementShape));let n=this.readMany(e);return Qn(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),mr(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Fr([],[0].concat(this.elementShape));let t=[];for(let o=0;o<this.size();o++)t.push(o);let n=this.readMany(t);return Qn(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),it(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Br(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,o=e.map(u=>(n+=u,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:t.size/n,i=[];G(()=>{t=_(t,[1,n,s]);for(let u=0;u<e.length;++u){let p=u===0?0:o[u-1],l=[0,p,0],m=[1,e[u],s];i[u]=_(ze(t,l,m),this.elementShape)}return i});let a=[];for(let u=0;u<e.length;u++)a[u]=u;this.writeMany(a,i)}};var xl=class{constructor(e,t,n,o=-1){this.tensors=e;this.elementShape=t;this.elementDtype=n;e!=null&&e.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);Qn(t,s.shape,"TensorList shape mismatch: "),Wt(s)}),this.idTensor=ce(0),this.maxNumElements=o,Wt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new xl([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Qn(e,this.elementShape,"TensorList shape mismatch: ");let o=Tc(this.elementShape,this.tensors,e);return G(()=>{let s=this.tensors.map(i=>_(i,o));return mr(s,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=Tc(this.elementShape,this.tensors,e),o=this.tensors.pop();return Qn(o.shape,e,"TensorList shape mismatch: "),_(o,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Qn(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Wt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Qn(this.tensors[e].shape,t,"TensorList shape mismatch: ");let o=Tc(this.elementShape,this.tensors,t);return _(this.tensors[e],o)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Qn(this.elementShape,t.shape,"TensorList shape mismatch: "),Wt(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Qn(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let o=Tc(this.elementShape,this.tensors,n);return e.length===0?Fr([],[0].concat(o)):G(()=>{let s=e.map(i=>_(this.tensors[i],o));return mr(s,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Qn(this.elementShape,t,"TensorList shape mismatch: ");let n=Tc(this.elementShape,this.tensors,t);return this.size()===0?Fr([],[0].concat(n)):G(()=>{let o=this.tensors.map(s=>_(s,n));return it(o,0)})}};function TF(r,e,t){let n=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==t)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${t}`);let o=r.shape.slice(1);Qn(o,e,"TensorList shape mismatch: ");let s=Br(r);return new xl(s,e,n)}function xF(r,e,t){return new xl([],r,e,t)}function IF(r,e,t,n){if(e.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${r.shape[0]}`);let o=Math.max(...e);if(n!=null&&n!==-1&&o>=n)throw new Error(`Max index must be < array size (${o}  vs. ${n})`);let s=new xl([],t,r.dtype,n),i=Br(r,0);return e.forEach((a,u)=>{s.setItem(a,i[u])}),s}function CF(r,e,t){let n=0,o=e.map(l=>(n+=l,n));if(n!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${r.shape}`);let s=r.shape.slice(1),i=By(s,t),a=n===0?0:r.size/n,u=G(()=>{let l=[];r=_(r,[1,n,a]);for(let m=0;m<e.length;++m){let c=m===0?0:o[m-1],d=[0,c,0],f=[1,e[m],a];l[m]=_(ze(r,d,f),i)}return r.dispose(),l}),p=new xl([],t,r.dtype,e.length);for(let l=0;l<u.length;l++)p.setItem(l,u[l]);return p}var kF=async(r,e,t)=>{switch(r.op){case"If":case"StatelessIf":{let n=v("thenBranch",r,e,t),o=v("elseBranch",r,e,t),s=v("cond",r,e,t),i=v("args",r,e,t);return(await s.data())[0]?t.functionMap[n].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap):t.functionMap[o].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{let n=v("body",r,e,t),o=v("cond",r,e,t),s=v("args",r,e,t),i=await t.functionMap[o].executeFunctionAsync(s,t.tensorArrayMap,t.tensorListMap),a=s.map(l=>l.id),u=await i[0].data();i.forEach(l=>{!l.kept&&a.indexOf(l.id)===-1&&l.dispose()});let p=s;for(;u[0];){let l=p;p=await t.functionMap[n].executeFunctionAsync(p,t.tensorArrayMap,t.tensorListMap);let m=p.map(d=>d.id);l.forEach(d=>{!d.kept&&a.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()});let c=await t.functionMap[o].executeFunctionAsync(p,t.tensorArrayMap,t.tensorListMap);u=await c[0].data(),c.forEach(d=>{!d.kept&&a.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()})}return p}case"LoopCond":{let n=v("pred",r,e,t);return[za(n)]}case"Switch":{let n=v("pred",r,e,t),o=v("data",r,e,t);return o.kept||(o=za(o)),(await n.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{let n=r.inputNames.find(o=>Cr(o,e,t)!==void 0);if(n){let o=Cr(n,e,t);return[za(o)]}return}case"Enter":{let n=v("frameName",r,e,t),o=v("tensor",r,e,t);return t.enterFrame(n),[za(o)]}case"Exit":{let n=v("tensor",r,e,t);return t.exitFrame(),[za(n)]}case"NextIteration":{let n=v("tensor",r,e,t);return t.nextIteration(),[za(n)]}case"TensorArrayV3":{let n=v("size",r,e,t),o=v("dtype",r,e,t),s=v("elementShape",r,e,t),i=v("dynamicSize",r,e,t),a=v("clearAfterRead",r,e,t),u=v("identicalElementShapes",r,e,t),p=v("name",r,e,t),l=new nv(p,o,n,s,u,i,a);return t.addTensorArray(l),[l.idTensor,ce(1)]}case"TensorArrayWriteV3":{let n=v("tensorArrayId",r,e,t),o=v("index",r,e,t),s=v("tensor",r,e,t),i=t.getTensorArray(n.id);return i.write(o,s),[i.idTensor]}case"TensorArrayReadV3":{let n=v("tensorArrayId",r,e,t),o=v("index",r,e,t);return[t.getTensorArray(n.id).read(o)]}case"TensorArrayGatherV3":{let n=v("tensorArrayId",r,e,t),o=v("indices",r,e,t),s=v("dtype",r,e,t);return[t.getTensorArray(n.id).gather(o,s)]}case"TensorArrayScatterV3":{let n=v("tensorArrayId",r,e,t),o=v("indices",r,e,t),s=v("tensor",r,e,t),i=t.getTensorArray(n.id);return i.scatter(o,s),[i.idTensor]}case"TensorArrayConcatV3":{let n=v("tensorArrayId",r,e,t),o=t.getTensorArray(n.id),s=v("dtype",r,e,t);return[o.concat(s)]}case"TensorArraySplitV3":{let n=v("tensorArrayId",r,e,t),o=v("tensor",r,e,t),s=v("lengths",r,e,t),i=t.getTensorArray(n.id);return i.split(s,o),[i.idTensor]}case"TensorArraySizeV3":{let n=v("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return[ce(o.size(),"int32")]}case"TensorArrayCloseV3":{let n=v("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{let n=v("tensorListId",r,e,t),o=v("index",r,e,t),s=v("tensor",r,e,t),i=t.getTensorList(n.id);return i.setItem(o,s),[i.idTensor]}case"TensorListGetItem":{let n=v("tensorListId",r,e,t),o=v("index",r,e,t),s=v("elementShape",r,e,t),i=v("elementDType",r,e,t);return[t.getTensorList(n.id).getItem(o,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let n=v("indices",r,e,t),o=v("tensor",r,e,t),s=v("elementShape",r,e,t),i=v("numElements",r,e,t),a=IF(o,n,s,i);return t.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=v("elementShape",r,e,t),o=v("elementDType",r,e,t),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=v(s,r,e,t),a=xF(n,o,i);return t.addTensorList(a),[a.idTensor]}case"TensorListGather":{let n=v("tensorListId",r,e,t),o=v("indices",r,e,t),s=v("elementShape",r,e,t),i=v("elementDType",r,e,t);return[t.getTensorList(n.id).gather(o,i,s)]}case"TensorListStack":{let n=v("tensorListId",r,e,t),o=v("elementShape",r,e,t),s=v("elementDType",r,e,t),i=v("numElements",r,e,t);return[t.getTensorList(n.id).stack(o,s,i)]}case"TensorListFromTensor":{let n=v("tensor",r,e,t),o=v("elementShape",r,e,t),s=v("elementDType",r,e,t),i=TF(n,o,s);return t.addTensorList(i),[i.idTensor]}case"TensorListConcat":{let n=v("tensorListId",r,e,t),o=t.getTensorList(n.id),s=v("dtype",r,e,t),i=v("elementShape",r,e,t);return[o.concat(s,i)]}case"TensorListPushBack":{let n=v("tensorListId",r,e,t),o=v("tensor",r,e,t),s=t.getTensorList(n.id);return s.pushBack(o),[s.idTensor]}case"TensorListPopBack":{let n=v("tensorListId",r,e,t),o=v("elementShape",r,e,t),s=v("elementDType",r,e,t);return[t.getTensorList(n.id).popBack(o,s)]}case"TensorListSplit":{let n=v("tensor",r,e,t),o=v("elementShape",r,e,t),s=v("lengths",r,e,t),i=CF(n,s,o);return t.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};function SF(r,e,t){let[n,o]=v("fusedOps",r,e,t),s=n==="biasadd",i=!s,a=o==="prelu",u=n==="fusedbatchnorm",p=v("numArgs",r,e,t);if(s){if(a&&p!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&s&&p!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let l=v("strides",r,e,t),m=wh(r,e,t),c=v("dataFormat",r,e,t).toUpperCase(),d=v("dilations",r,e,t),[f,h]=v("args",r,e,t);i&&(h=f,f=void 0);let g=v("leakyreluAlpha",r,e,t);return{stride:l,pad:m,dataFormat:c,dilations:d,biasArg:f,preluArg:h,activationFunc:o,leakyreluAlpha:g}}var vF=(r,e,t)=>{switch(r.op){case"Conv1D":{let n=v("stride",r,e,t),o=v("pad",r,e,t),s=v("dataFormat",r,e,t).toUpperCase(),i=v("dilation",r,e,t);return[Pd(v("x",r,e,t),v("filter",r,e,t),n,o,s,i)]}case"Conv2D":{let n=v("strides",r,e,t),o=wh(r,e,t),s=v("dataFormat",r,e,t).toUpperCase(),i=v("dilations",r,e,t);return[jn(v("x",r,e,t),v("filter",r,e,t),[n[1],n[2]],o,s,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:n,pad:o,dataFormat:s,dilations:i,biasArg:a,preluArg:u,activationFunc:p,leakyreluAlpha:l}=SF(r,e,t);return[Rs.conv2d({x:v("x",r,e,t),filter:v("filter",r,e,t),strides:[n[1],n[2]],pad:o,dataFormat:s,dilations:[i[1],i[2]],bias:a,activation:p,preluActivationWeights:u,leakyreluAlpha:l})]}case"FusedDepthwiseConv2dNative":{let{stride:n,pad:o,dataFormat:s,dilations:i,biasArg:a,preluArg:u,activationFunc:p,leakyreluAlpha:l}=SF(r,e,t);return[Rs.depthwiseConv2d({x:v("x",r,e,t),filter:v("filter",r,e,t),strides:[n[1],n[2]],pad:o,dataFormat:s,dilations:[i[1],i[2]],bias:a,activation:p,preluActivationWeights:u,leakyreluAlpha:l})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let n=v("outputShape",r,e,t),o=v("strides",r,e,t),s=wh(r,e,t);return[Ed(v("x",r,e,t),v("filter",r,e,t),n,[o[1],o[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let n=v("strides",r,e,t),o=wh(r,e,t),s=v("dilations",r,e,t),i=v("dataFormat",r,e,t).toUpperCase();return[iu(v("input",r,e,t),v("filter",r,e,t),[n[1],n[2]],o,i,[s[1],s[2]])]}case"Conv3D":{let n=v("strides",r,e,t),o=v("pad",r,e,t),s=v("dataFormat",r,e,t).toUpperCase(),i=v("dilations",r,e,t);return[Md(v("x",r,e,t),v("filter",r,e,t),[n[1],n[2],n[3]],o,s,[i[1],i[2],i[3]])]}case"AvgPool":{let n=v("strides",r,e,t),o=v("pad",r,e,t),s=v("kernelSize",r,e,t);return[$p(v("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o)]}case"MaxPool":{let n=v("strides",r,e,t),o=v("pad",r,e,t),s=v("kernelSize",r,e,t);return[Hp(v("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o)]}case"MaxPoolWithArgmax":{let n=v("strides",r,e,t),o=v("pad",r,e,t),s=v("kernelSize",r,e,t),i=v("includeBatchInIndex",r,e,t),{result:a,indexes:u}=ek(v("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o,i);return[a,u]}case"AvgPool3D":{let n=v("strides",r,e,t),o=v("pad",r,e,t),s=v("kernelSize",r,e,t);return[Nd(v("x",r,e,t),[s[1],s[2],s[3]],[n[1],n[2],n[3]],o)]}case"MaxPool3D":{let n=v("strides",r,e,t),o=v("pad",r,e,t),s=v("kernelSize",r,e,t);return[Od(v("x",r,e,t),[s[1],s[2],s[3]],[n[1],n[2],n[3]],o)]}case"Dilation2D":{let n=v("strides",r,e,t),o=v("pad",r,e,t),s=v("dilations",r,e,t),i=n[1],a=n[2],u=s[1],p=s[2];return[GC(v("x",r,e,t),v("filter",r,e,t),[i,a],o,[u,p],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var AF=(r,e,t)=>{switch(r.op){case"Fill":{let n=v("shape",r,e,t),o=v("dtype",r,e,t),s=v("value",r,e,t);return[Da(n,s,o)]}case"LinSpace":{let n=v("start",r,e,t),o=v("stop",r,e,t),s=v("num",r,e,t);return[qC(n,o,s)]}case"Multinomial":{let n=v("logits",r,e,t),o=v("numSamples",r,e,t),s=v("seed",r,e,t);return[nk(n,o,s)]}case"OneHot":{let n=v("indices",r,e,t),o=v("depth",r,e,t),s=v("onValue",r,e,t),i=v("offValue",r,e,t);return[nu(n,o,s,i)]}case"Ones":return[lr(v("shape",r,e,t),v("dtype",r,e,t))];case"OnesLike":return[Dr(v("x",r,e,t))];case"RandomUniform":return[Pa(v("shape",r,e,t),v("minval",r,e,t),v("maxval",r,e,t),v("dtype",r,e,t))];case"Range":{let n=v("start",r,e,t),o=v("stop",r,e,t),s=v("step",r,e,t);return[mu(n,o,s,v("dtype",r,e,t))]}case"TruncatedNormal":{let n=v("shape",r,e,t),o=v("mean",r,e,t),s=v("stdDev",r,e,t),i=v("seed",r,e,t);return[Jp(n,o,s,v("dtype",r,e,t),i)]}case"Zeros":return[bt(v("shape",r,e,t),v("dtype",r,e,t))];case"ZerosLike":return[De(v("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function ov(r,e,t){let n=v("boxes",r,e,t),o=v("scores",r,e,t),s=v("maxOutputSize",r,e,t),i=v("iouThreshold",r,e,t),a=v("scoreThreshold",r,e,t),u=v("softNmsSigma",r,e,t);return{boxes:n,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:a,softNmsSigma:u}}var wF=async(r,e,t)=>{switch(r.op){case"NonMaxSuppressionV5":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:a,softNmsSigma:u}=ov(r,e,t),p=await En.nonMaxSuppressionWithScoreAsync(n,o,s,i,a,u);return[p.selectedIndices,p.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:a}=ov(r,e,t),u=v("padToMaxOutputSize",r,e,t),p=await En.nonMaxSuppressionPaddedAsync(n,o,s,i,a,u);return[p.selectedIndices,p.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:a}=ov(r,e,t);return[await En.nonMaxSuppressionAsync(n,o,s,i,a)]}case"Where":{let n=J(v("condition",r,e,t),"bool"),o=[await Zd(n)];return n.dispose(),o}case"ListDiff":return fk(v("x",r,e,t),v("y",r,e,t));default:throw TypeError(`Node type ${r.op} is not implemented`)}};var NF=(r,e,t)=>{switch(r.op){case"TopKV2":{let n=v("x",r,e,t),o=v("k",r,e,t),s=v("sorted",r,e,t),i=yk(n,o,s);return[i.values,i.indices]}case"Unique":{let n=v("x",r,e,t),o=Mb(n);return[o.values,o.indices]}case"UniqueV2":{let n=v("x",r,e,t),o=v("axis",r,e,t),s=Mb(n,o);return[s.values,s.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var DF=(r,e,t)=>{switch(r.op){case"Const":return e[r.name];case"PlaceholderWithDefault":let n=v("default",r,e,t);return[Cr(r.name,e,t)||n];case"Placeholder":return[Cr(r.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let p=v("x",r,e,t);return[za(p)]}case"IdentityN":return v("x",r,e,t).map(p=>za(p));case"Snapshot":let o=v("x",r,e,t);return[za(o)];case"Shape":return[$t(v("x",r,e,t).shape,"int32")];case"ShapeN":return v("x",r,e,t).map(p=>$t(p.shape));case"Size":return[ce(v("x",r,e,t).size,"int32")];case"Rank":return[ce(v("x",r,e,t).rank,"int32")];case"NoOp":return[ce(1)];case"Print":let s=v("x",r,e,t),i=v("data",r,e,t),a=v("message",r,e,t),u=v("summarize",r,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(a);for(let p=0;p<i.length;p++)console.log(Array.prototype.slice.call(i[p].dataSync()).slice(0,u));return[s];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var sv=class{constructor(e,t){this.keyDType=e;this.valueDType=t;this.handle=ce(0),this.tensorMap=new Map,Wt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ce(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),G(()=>{let o=Br(t),s=n.length,i=o.length;b.assert(s===i,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${i} elements.`);for(let a=0;a<s;a++){let u=n[a],p=o[a];Wt(p),this.tensorMap.set(u,p)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return G(()=>{let o=[];for(let s=0;s<n.length;s++){let i=n[s],a=this.findWithDefault(i,t);o.push(a)}return mr(o)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};var PF=async(r,e,t,n)=>{switch(r.op){case"HashTable":case"HashTableV2":{let o=v("keyDType",r,e,t),s=v("valueDType",r,e,t),i=new sv(o,s);return n.addHashTable(r.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let o=v("tableHandle",r,e,t,n),s=v("keys",r,e,t),i=v("values",r,e,t);return[await n.getHashTableById(o.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let o=v("tableHandle",r,e,t,n),s=v("keys",r,e,t),i=v("defaultValue",r,e,t);return[await n.getHashTableById(o.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let o=v("tableHandle",r,e,t,n);return[n.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var EF=(r,e,t)=>{switch(r.op){case"ResizeBilinear":{let n=v("images",r,e,t),o=v("size",r,e,t),s=v("alignCorners",r,e,t),i=v("halfPixelCenters",r,e,t);return[En.resizeBilinear(n,[o[0],o[1]],s,i)]}case"ResizeNearestNeighbor":{let n=v("images",r,e,t),o=v("size",r,e,t),s=v("alignCorners",r,e,t),i=v("halfPixelCenters",r,e,t);return[En.resizeNearestNeighbor(n,[o[0],o[1]],s,i)]}case"CropAndResize":{let n=v("image",r,e,t),o=v("boxes",r,e,t),s=v("boxInd",r,e,t),i=v("cropSize",r,e,t),a=v("method",r,e,t),u=v("extrapolationValue",r,e,t);return[En.cropAndResize(n,o,s,i,a,u)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var MF=(r,e,t)=>{switch(r.op){case"Equal":return[Wr(v("a",r,e,t),v("b",r,e,t))];case"NotEqual":return[pi(v("a",r,e,t),v("b",r,e,t))];case"Greater":return[tr(v("a",r,e,t),v("b",r,e,t))];case"GreaterEqual":return[Qo(v("a",r,e,t),v("b",r,e,t))];case"Less":return[Ld(v("a",r,e,t),v("b",r,e,t))];case"LessEqual":return[Zo(v("a",r,e,t),v("b",r,e,t))];case"LogicalAnd":return[Vr(v("a",r,e,t),v("b",r,e,t))];case"LogicalNot":return[Vp(v("a",r,e,t))];case"LogicalOr":return[$d(v("a",r,e,t),v("b",r,e,t))];case"Select":case"SelectV2":return[Bt(v("condition",r,e,t),v("a",r,e,t),v("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var FF=(r,e,t)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Ke(v("a",r,e,t),v("b",r,e,t),v("transposeA",r,e,t),v("transposeB",r,e,t))];case"Einsum":return[WC(v("equation",r,e,t),...v("tensors",r,e,t))];case"Transpose":return[He(v("x",r,e,t),v("perm",r,e,t))];case"_FusedMatMul":let[n,o]=v("fusedOps",r,e,t),s=n==="biasadd",i=o==="prelu",a=v("numArgs",r,e,t),u=v("leakyreluAlpha",r,e,t);if(s){if(i&&a!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[p,l]=v("args",r,e,t);return[Rs.matMul({a:v("a",r,e,t),b:v("b",r,e,t),transposeA:v("transposeA",r,e,t),transposeB:v("transposeB",r,e,t),bias:p,activation:o,preluActivationWeights:l,leakyreluAlpha:u})];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var RF=(r,e,t)=>{switch(r.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[ai(v("x",r,e,t),v("mean",r,e,t),v("variance",r,e,t),v("offset",r,e,t),v("scale",r,e,t),v("epsilon",r,e,t))];case"FusedBatchNormV3":return[ai(v("x",r,e,t),v("mean",r,e,t),v("variance",r,e,t),v("offset",r,e,t),v("scale",r,e,t),v("epsilon",r,e,t))];case"LRN":return[jC(v("x",r,e,t),v("radius",r,e,t),v("bias",r,e,t),v("alpha",r,e,t),v("beta",r,e,t))];case"Softmax":return[Yp(v("x",r,e,t))];case"LogSoftmax":return[_d(v("x",r,e,t))];case"SparseToDense":return[Lb(v("sparseIndices",r,e,t),v("outputShape",r,e,t),v("sparseValues",r,e,t),v("defaultValue",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var LF=(r,e,t)=>{switch(r.op){case"Max":{let i=v("axis",r,e,t),a=v("keepDims",r,e,t);return[Zr(v("x",r,e,t),i,a)]}case"Mean":{let i=v("axis",r,e,t),a=v("keepDims",r,e,t);return[Ft(v("x",r,e,t),i,a)]}case"Min":{let i=v("axis",r,e,t),a=v("keepDims",r,e,t);return[Gm(v("x",r,e,t),i,a)]}case"Sum":{let i=v("axis",r,e,t),a=v("keepDims",r,e,t);return[he(v("x",r,e,t),i,a)]}case"All":{let i=v("axis",r,e,t),a=v("keepDims",r,e,t);return[wd(v("x",r,e,t),i,a)]}case"Any":{let i=v("axis",r,e,t),a=v("keepDims",r,e,t);return[Bm(v("x",r,e,t),i,a)]}case"ArgMax":{let i=v("axis",r,e,t);return[su(v("x",r,e,t),i)]}case"ArgMin":{let i=v("axis",r,e,t);return[xC(v("x",r,e,t),i)]}case"Prod":{let i=v("axis",r,e,t),a=v("keepDims",r,e,t);return[zd(v("x",r,e,t),i,a)]}case"Cumsum":{let i=v("axis",r,e,t),a=v("exclusive",r,e,t),u=v("reverse",r,e,t);return[Rd(v("x",r,e,t),i,a,u)]}case"Bincount":let n=v("x",r,e,t),o=v("weights",r,e,t),s=v("size",r,e,t);return[Dd(n,o,s)];case"DenseBincount":{let i=v("x",r,e,t),a=v("weights",r,e,t),u=v("size",r,e,t),p=v("binaryOutput",r,e,t);return[OC(i,a,u,p)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var _F=(r,e,t)=>{switch(r.op){case"ConcatV2":case"Concat":{let n=v("n",r,e,t),o=v("axis",r,e,t),s=v("tensors",r,e,t);return s=s.slice(0,n),[it(s,o)]}case"Gather":{let n=v("x",r,e,t),o=v("indices",r,e,t);return[ii(n,J(o,"int32"),0)]}case"GatherV2":{let n=v("axis",r,e,t),o=v("batchDims",r,e,t),s=v("x",r,e,t),i=v("indices",r,e,t);return[ii(s,J(i,"int32"),n,o)]}case"Reverse":{let n=v("dims",r,e,t),o=[];for(let i=0;i<n.length;i++)n[i]&&o.push(i);let s=v("x",r,e,t);return[gr(s,o)]}case"ReverseV2":{let n=v("axis",r,e,t),o=v("x",r,e,t);return[gr(o,n)]}case"Slice":{let n=v("begin",r,e,t),o=v("size",r,e,t);return[ze(v("x",r,e,t),n,o)]}case"StridedSlice":{let n=v("begin",r,e,t),o=v("end",r,e,t),s=v("strides",r,e,t),i=v("beginMask",r,e,t),a=v("endMask",r,e,t),u=v("ellipsisMask",r,e,t),p=v("newAxisMask",r,e,t),l=v("shrinkAxisMask",r,e,t),m=v("x",r,e,t);return[gk(m,n,o,s,i,a,u,p,l)]}case"Pack":return G(()=>{let n=v("axis",r,e,t),o=v("tensors",r,e,t),s=o[0].shape,i=ln(o[0]).shape,a=o.map(u=>{let p=b.arraysEqual(u.shape,s);if(!p&&!b.arraysEqual(ln(u).shape,i))throw new Error("the input tensors shape does not match");return p?u:_(u,s)});return[mr(a,n)]});case"Unpack":{let n=v("axis",r,e,t),o=v("tensor",r,e,t);return Br(o,n)}case"Tile":{let n=v("reps",r,e,t);return[Kr(v("x",r,e,t),n)]}case"Split":case"SplitV":{let n=v("axis",r,e,t),o=v("numOrSizeSplits",r,e,t),s=v("x",r,e,t);return Ir(s,o,n)}case"ScatterNd":{let n=v("indices",r,e,t),o=v("values",r,e,t),s=v("shape",r,e,t);return[l1(n,o,s)]}case"GatherNd":{let n=v("x",r,e,t),o=v("indices",r,e,t);return[c1(n,o)]}case"SparseToDense":{let n=v("sparseIndices",r,e,t),o=v("outputShape",r,e,t),s=v("sparseValues",r,e,t),i=v("defaultValue",r,e,t);return[Lb(n,s,o,s.dtype===i.dtype?i:J(i,s.dtype))]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var BF=(r,e,t)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:n,outputValues:o,emptyRowIndicator:s,reverseIndexMap:i}=Jd.sparseFillEmptyRows(v("indices",r,e,t),v("values",r,e,t),v("denseShape",r,e,t),v("defaultValue",r,e,t));return[n,o,s,i]}case"SparseReshape":{let{outputIndices:n,outputShape:o}=Jd.sparseReshape(v("inputIndices",r,e,t),v("inputShape",r,e,t),v("newShape",r,e,t));return[n,o]}case"SparseSegmentMean":return[Jd.sparseSegmentMean(v("data",r,e,t),v("indices",r,e,t),v("segmentIds",r,e,t))];case"SparseSegmentSum":return[Jd.sparseSegmentSum(v("data",r,e,t),v("indices",r,e,t),v("segmentIds",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var $F=(r,e,t)=>{switch(r.op){case"FFT":return[Qp(v("x",r,e,t))];case"IFFT":return[tp(v("x",r,e,t))];case"RFFT":return[Zp(v("x",r,e,t))];case"IRFFT":return[Yd(v("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var OF=(r,e,t)=>{switch(r.op){case"StringNGrams":{let{nGrams:n,nGramsSplits:o}=Kb.stringNGrams(v("data",r,e,t),v("dataSplits",r,e,t),v("separator",r,e,t),v("nGramWidths",r,e,t),v("leftPad",r,e,t),v("rightPad",r,e,t),v("padWidth",r,e,t),v("preserveShortSequences",r,e,t));return[n,o]}case"StringSplit":{let{indices:n,values:o,shape:s}=Kb.stringSplit(v("input",r,e,t),v("delimiter",r,e,t),v("skipEmpty",r,e,t));return[n,o,s]}case"StringToHashBucketFast":return[Kb.stringToHashBucketFast(v("input",r,e,t),v("numBuckets",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var zF=(r,e,t)=>{switch(r.op){case"Cast":return[J(v("x",r,e,t),v("dtype",r,e,t))];case"ExpandDims":{let n=v("axis",r,e,t);return[Nr(v("x",r,e,t),n)]}case"Squeeze":{let n=v("axis",r,e,t);return[ln(v("x",r,e,t),n)]}case"Reshape":return[_(v("x",r,e,t),v("shape",r,e,t))];case"MirrorPad":return[tk(v("x",r,e,t),v("padding",r,e,t),v("mode",r,e,t))];case"PadV2":case"Pad":return[Dn(v("x",r,e,t),v("padding",r,e,t),v("constantValue",r,e,t))];case"SpaceToBatchND":{let n=v("blockShape",r,e,t),o=v("paddings",r,e,t);return[qp(v("x",r,e,t),n,o)]}case"BatchToSpaceND":{let n=v("blockShape",r,e,t),o=v("crops",r,e,t);return[Op(v("x",r,e,t),n,o)]}case"DepthToSpace":{let n=v("blockSize",r,e,t),o=v("dataFormat",r,e,t).toUpperCase();return[zC(v("x",r,e,t),n,o)]}case"BroadcastTo":return[zp(v("x",r,e,t),v("shape",r,e,t))];case"BroadcastArgs":return[MC(v("s0",r,e,t),v("s1",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function av(r,e,t,n){let o=((s,i,a)=>{switch(s.category){case"arithmetic":return G(()=>gF(s,i,a));case"basic_math":return G(()=>bF(s,i,a));case"control":return kF(s,i,a);case"convolution":return G(()=>vF(s,i,a));case"creation":return G(()=>AF(s,i,a));case"dynamic":return wF(s,i,a);case"evaluation":return G(()=>NF(s,i,a));case"image":return G(()=>EF(s,i,a));case"graph":return G(()=>DF(s,i,a));case"logical":return G(()=>MF(s,i,a));case"matrices":return G(()=>FF(s,i,a));case"normalization":return G(()=>RF(s,i,a));case"reduction":return G(()=>LF(s,i,a));case"slice_join":return G(()=>_F(s,i,a));case"sparse":return G(()=>BF(s,i,a));case"spectral":return G(()=>$F(s,i,a));case"string":return G(()=>OF(s,i,a));case"transformation":return G(()=>zF(s,i,a));case"hash_table":return PF(s,i,a,n);case"custom":let u=Sy(s.op);if(u&&u.customExecutor)return u.customExecutor(new rv(s,i,a));throw TypeError(`Custom op ${s.op} is not registered.`);default:throw TypeError(`Unknown op '${s.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,e,t);return b.isPromise(o)?o.then(s=>[].concat(s)):[].concat(o)}var $y=class{constructor(e={},t={},n={},o={}){this.weightMap=e;this.tensorArrayMap=t;this.tensorListMap=n;this.functionMap=o;this.rootContext={id:0,frameName:"",iterationId:0};this.contexts=[this.rootContext];this.lastId=0;this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function iv(r,e,t,n){let o=new Set,s=[],i=null,a=null,u=new Set,p=Object.keys(r).map(c=>yn(c)[0]),l=[];n!=null&&(l=n.map(c=>yn(c.name)[0]));let m=[...e];for(;m.length>0;){let c=m.pop();if((uv(c)||X9(c)||Y9(c))&&i==null&&(i=c,a=i.children.map(d=>d.name).filter(d=>o.has(d))),o.add(c.name),t[c.name]==null&&p.indexOf(c.name)===-1&&l.indexOf(c.name)===-1){if(c.inputs.length===0){s.push(c.name);continue}c.inputs.forEach(d=>{u.has(d.name)||(u.add(d.name),m.push(d))})}}return{inputs:r,outputs:e,usedNodes:o,missingInputs:s,dynamicNode:i,syncInputs:a}}function GF(r,e,t){let{usedNodes:n,inputs:o}=t,s=[],i=Object.keys(o).map(l=>yn(l)[0]).map(l=>r.nodes[l]),a=r.initNodes;i.forEach(l=>{n.has(l.name)&&s.push(l)}),r.weights.forEach(l=>{n.has(l.name)&&s.push(l)}),a!=null&&a.forEach(l=>{n.has(l.name)&&s.push(l)});let u=new Set,p=[];for(;s.length>0;){let l=s.pop();u.add(l.name),e[l.name]||p.push(l),l.children.forEach(m=>{!u.has(m.name)&&n.has(m.name)&&m.inputs.every(c=>u.has(c.name))&&s.push(m)})}return p}var H9=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],q9=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],j9=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function uv(r){return H9.indexOf(r.op)>=0}function X9(r){return q9.indexOf(r.op)>=0}function Y9(r){return j9.indexOf(r.op)>=0}var xc=class{constructor(e,t){this.graph=e;this.parent=t;this.compiledMap=new Map;this._weightMap={};this.SEPERATOR=",";this._functions={};this._functionExecutorMap={};this.intermediateTensors={};this.keepTensorForDebug=!1;this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new xc(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(o=>o.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(s=>s.name).sort(),o=t.map(s=>s.name).sort();return n.join(this.SEPERATOR)+"--"+o.join(this.SEPERATOR)}compile(e,t){let n=iv(e,t,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:s,syncInputs:i}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(o.length>0){let a=t.map(p=>p.name),u=Object.keys(e);throw new Error(`Cannot compute the outputs [${a}] from the provided inputs [${u}]. Missing the following inputs: [${o}]`)}return GF(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let o=n.map(m=>this.graph.nodes[yn(m)[0]]),s=t.map(m=>yn(m)[0]),i=s.map(m=>this.graph.nodes[m]);this.resetIntermediateTensors(),i.length===0&&(i=this._outputs);let a=this.getCompilationKey(o,i),u=this.compiledMap.get(a);u==null&&(u=this.compile(e,i),this.compiledMap.set(a,u));let p={},l={};return G(()=>{let m=new $y(this.weightMap,p,l,this.functionExecutorMap),c={...this.weightMap};Object.keys(e).forEach(h=>{let[g,y]=yn(h),T=[];T[y]=e[h],c[g]=T});let d=this.getFrozenTensorIds(c),f={};for(let h=0;h<u.length;h++){let g=u[h];if(!c[g.name]){let y=av(g,c,m,this._resourceManager);if(b.isPromise(y))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);c[g.name]=y,this.checkTensorForDisposal(g.name,g,c,m,d,s,f)}}return this.parent==null&&m.dispose(d),t.map(h=>Cr(h,c,m))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(o=>o.id)));return new Set(t)}checkTensorForDisposal(e,t,n,o,s,i,a){t.category==="control"||i.indexOf(e)!==-1||(n[e].forEach(u=>{u!=null&&(a[u.id]=(a[u.id]||0)+t.children.length)}),t.inputs.forEach(u=>{if(u.category!=="control"){let p=cF(u.name,n,o);p!=null&&p.forEach(l=>{if(l&&!l.kept&&!s.has(l.id)){let m=a[l.id];if(m===1){if(!this.keepTensorForDebug)l.dispose();else{let[c,d]=Ks(t.name,o);this.intermediateTensors[c]?this.intermediateTensors[c][d]=l:(this.intermediateTensors[c]=[],this.intermediateTensors[c][d]=l)}delete a[l.id]}else m!=null&&a[l.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,o={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=$().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(l){console.warn(l.message)}this.resetIntermediateTensors();let i=new $y(this.weightMap,o,s,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,i,t,n);let a=t.map(l=>Cr(l,this.tensorsMap,i)),u=a.map(l=>l.id),p=Object.keys(e).map(l=>e[l].id);return this.keepIds=new Set([...u,...p,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&i.dispose(this.keepIds),a}async executeFunctionAsync(e,t,n){let o=e.reduce((s,i,a)=>(s[this.inputs[a].name]=i,s),{});return this._executeAsync(o,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,o){let s=Object.keys(e),i=s.map(x=>this.graph.nodes[yn(x)[0]]),a=n.map(x=>yn(x)[0]),u=a.map(x=>this.graph.nodes[x]);u.length===0&&(u=this._outputs);let{usedNodes:p,missingInputs:l,dynamicNode:m,syncInputs:c}=iv(e,u,this.weightMap,this._initNodes),d=[...i,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:t.currentContext})),f={...this.weightMap};Object.keys(e).forEach(x=>{let[I,k]=yn(x),N=[];N[k]=e[x],f[I]=N});let h={},g=this.getFrozenTensorIds(f),y={};for(;d.length>0;){let x=this.processStack(i,d,t,f,y,g,a,h,p);await Promise.all(x)}m==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let T=u.filter(x=>!uv(x)&&!Cr(x.name,f,t)).map(x=>x.name);if(T.length>0){let x="";throw m!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${T}] from the provided inputs [${s}]. Consider providing the following inputs: [${l}]. ${x}`)}return f}processStack(e,t,n,o,s,i,a,u,p){let l=[];for(;t.length>0;){let m=t.pop();n.currentContext=m.contexts;let c="";if(m.node.op==="Enter"&&v("isConstant",m.node,o,n)&&([c]=Ks(m.node.name,n)),o[m.node.name]==null){let d=av(m.node,o,n,this._resourceManager);c||([c]=Ks(m.node.name,n));let f=n.currentContext;b.isPromise(d)?l.push(d.then(h=>(o[c]=h,n.currentContext=f,this.checkTensorForDisposal(c,m.node,o,n,i,a,u),this.processChildNodes(m.node,t,n,o,s,p),h))):(o[c]=d,this.checkTensorForDisposal(c,m.node,o,n,i,a,u),this.processChildNodes(m.node,t,n,o,s,p))}else this.processChildNodes(m.node,t,n,o,s,p)}return l}processChildNodes(e,t,n,o,s,i){e.children.forEach(a=>{let[u]=Ks(a.name,n);s[u]||!i.has(a.name)||(a.op==="Merge"?a.inputNames.some(p=>!!Cr(p,o,n))&&(s[u]=!0,t.push({contexts:n.currentContext,node:a})):a.inputNames.every(p=>!!Cr(p,o,n))&&(s[u]=!0,t.push({contexts:n.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[o]=yn(t),s=this.graph.nodes[o];if(s.attrParams.shape&&s.attrParams.shape.value){let i=s.attrParams.shape.value,a=i.length===n.shape.length&&n.shape.every((u,p)=>i[p]===-1||i[p]===u);b.assert(a,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${i}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&b.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let o=this._signature.inputs[n];t[o.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[o]=yn(n);return this.graph.nodes[o]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=yn(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}};var pv=class{constructor(e={},t={}){this.hashTableNameToHandle=e;this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}};var Q9="?tfjs-format=file",Z9="model.json",lv=class{constructor(e,t={}){this.modelUrl=e;this.loadOptions=t;this.version="n/a";t==null&&(this.loadOptions={}),this.resourceManager=new pv}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=Ur.browserHTTPRequest(e,this.loadOptions);else{let t=Ur.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(Ur.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let o=Ur.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new xc(_y.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let s=_y.Instance.transformGraph(e.modelInitializer);this.initializer=new xc(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=Ur.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Xe)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,o)=>(t[n]=e[o],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function J9(r,e={}){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&r.load==null&&(r.endsWith("/")||(r=r+"/"),r=`${r}${Z9}${Q9}`);let t=new lv(r,e);return await t.load(),t}var eee="0.0.0";var SR={};je(SR,{CSVDataset:()=>Mh,Dataset:()=>bi,FileDataSource:()=>$h,TextLineDataset:()=>Ph,URLDataSource:()=>Oh,array:()=>pR,csv:()=>yR,func:()=>TR,generator:()=>xR,microphone:()=>CR,version_data:()=>kR,webcam:()=>IR,zip:()=>lR});var uR=Sp(Gd());var qF=Sp(Gd());function UF(r,e){return Oy(r,e)}function Oy(r,e,t=new Map,n=new Set){if(r==null)return null;if(typeof Blob=="function"&&r instanceof Blob)return r.slice();if(n.has(r))throw new Error("Circular references are not supported.");if(t.has(r))return t.get(r);let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(mp(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let i in r){let a=r[i],u=Oy(a,e,t,n);s[i]=u}return n.delete(r),r.__proto__&&(s.__proto__=r.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return t.set(r,o.value),o.value}function WF(r,e=cv){return KF(r,e)}function KF(r,e,t=new Set){let n=r[0];if(t.has(n))throw new Error("Circular references are not supported.");let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(mp(n)){let s=Array.isArray(n)?[]:{};t.add(n);for(let i in n){let a=r.map(p=>p[i]),u=KF(a,e,t);s[i]=u}return t.delete(n),s}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return o.value}function cv(r){return r===null?null:mp(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}async function zy(r,e){let t=new Map;Oy(r,e,t);for(let o of Array.from(t.keys())){let s=t.get(o);if(b.isPromise(s)){let i=await s;t.set(o,i)}}return Oy(r,e,t)}function mp(r){let e=!1;if($().get("IS_BROWSER"))e=r instanceof TextDecoder;else{let{StringDecoder:t}=mv();e=r instanceof t}return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof Xe)&&!(r instanceof Promise)&&!e)}function VF(r){return r==null||tee(r)||Array.isArray(r)||typeof r=="object"&&r instanceof Xe||b.isTypedArray(r)}function tee(r){return r===null||typeof r!="object"&&typeof r!="function"}function HF(r){return UF(r,ree)}function ree(r){return r instanceof Xe?{value:r.clone(),recurse:!1}:mp(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var Nh=class{constructor(e){this.capacity=e;this.begin=0;this.end=0;if(e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}};var dv=class extends Nh{constructor(){super(dv.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let o=0;o<n;o++)t[o]=this.get(this.wrap(this.begin+o));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},Gy=dv;Gy.INITIAL_CAPACITY=32;function hv(r){return new YF(r)}function Dh(r){return new QF(r)}function jF(r,e){return new gv(r,e)}function XF(r,e=bv.FAIL){return new aR(r,e)}var sr=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new oR(this,e)}filter(e){return new rR(this,e)}map(e){return new nR(this,e)}mapAsync(e){return new fv(this,e)}serialMapAsync(e){return new fv(this,e).serial()}flatmap(e){return new sR(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new tR(this,e,t)}columnMajorBatch(e,t=!0,n=cv){return this.rowMajorBatch(e,t).map(s=>WF(s,n))}concatenate(e,t){return new gv(hv([this,e]),t)}take(e){return e<0||e==null?this:new eR(this,e)}skip(e){return e<0||e==null?this:new JF(this,e)}prefetch(e){return new yv(this,e)}shuffle(e,t){return new iR(this,e,t)}serial(){return new ZF(this)}},YF=class extends sr{constructor(e){super();this.items=e;this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:HF(e),done:!1}}},QF=class extends sr{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},ZF=class extends sr{constructor(e){super();this.upstream=e;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},JF=class extends sr{constructor(e,t){super();this.upstream=e;this.maxCount=t;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Fe(e.value)}return this.upstream.next()}},eR=class extends sr{constructor(e,t){super();this.upstream=e;this.maxCount=t;this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},tR=class extends sr{constructor(e,t,n=!0){super();this.upstream=e;this.batchSize=t;this.enableSmallLastBatch=n;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},rR=class extends sr{constructor(e,t){super();this.upstream=e;this.predicate=t;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Fe(e.value)}}},nR=class extends sr{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ms.getTensorsInContainer(e.value),n=this.transform(e.value),o=Ms.getTensorsInContainer(n);for(let s of t)Ms.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},oR=class extends sr{constructor(e,t){super();this.upstream=e;this.handler=t;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},fv=class extends sr{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ms.getTensorsInContainer(e.value),n=await this.transform(e.value),o=Ms.getTensorsInContainer(n);for(let s of t)Ms.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},Ic=class extends sr{constructor(){super();this.outputQueue=new Gy,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},sR=class extends Ic{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Ms.getTensorsInContainer(e.value),n=this.transform(e.value),o=Ms.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let s of t)Ms.isTensorInList(s,o)||s.dispose();return!0}},gv=class extends sr{constructor(e,t){super();this.baseErrorHandler=t;this.lastRead=null;this.iterator=null;this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},bv=(n=>(n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST",n))(bv||{}),aR=class extends sr{constructor(e,t=0){super();this.iterators=e;this.mismatchMode=t;this.count=0;this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function o(i){return i instanceof sr?{value:i.next().then(u=>(t++,u.done&&n++,u.value)),recurse:!1}:{value:null,recurse:!0}}let s=await zy(this.iterators,o);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},yv=class extends sr{constructor(e,t){super();this.upstream=e;this.bufferSize=t;this.buffer=new Nh(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},iR=class extends yv{constructor(e,t,n){super(e,t);this.upstream=e;this.windowSize=t;this.upstreamExhausted=!1;this.random=qF.alea(n||b.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}};var bi=class{constructor(){this.size=null}batch(e,t=!0){let n=this;b.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let o;return this.size===1/0||this.size==null?o=this.size:t?o=Math.ceil(this.size/e):o=Math.floor(this.size/e),Rn(async()=>(await n.iterator()).columnMajorBatch(e,t,nee),o)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,Rn(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,Rn(async()=>(await t.iterator()).filter(o=>G(()=>e(o))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Rn(async()=>(await t.iterator()).map(n=>G(()=>e(n))),this.size)}mapAsync(e){let t=this;return Rn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Rn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,Rn(async()=>{let o=Dh(async()=>({value:await t.iterator(),done:!1}));return jF(o.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,Rn(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let o=this,s=uR.alea(t||b.now().toString());return Rn(async()=>{let i=s.int32();return n&&(i+=s.int32()),(await o.iterator()).shuffle(e,i.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,Rn(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};bi.MAX_BUFFER_SIZE=1e4;function Rn(r,e=null){return new class extends bi{constructor(){super(...arguments);this.size=e}async iterator(){return r()}}}function pR(r){return Rn(async()=>hv(r),r.length)}function lR(r){if(!mp(r))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(r))for(let t=0;t<r.length;t++)e=e==null?r[t].size:Math.min(e,r[t].size);else if(r instanceof Object)for(let t in r)e=e==null?r[t].size:Math.min(e,r[t].size);return Rn(async()=>{let t=await zy(r,n=>{if(n instanceof bi)return{value:n.iterator(),recurse:!1};if(mp(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return XF(t,1)},e)}function nee(r){if(r===null)return null;let e=r[0];return VF(e)?{value:oee(r),recurse:!1}:{value:null,recurse:!0}}function oee(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof Xe?mr(r):Fr(r)}var Ph=class extends bi{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(o=>(o.endsWith("\r")&&(o=o.slice(0,-1)),o))}};var Uy='"',Eh=Symbol("out"),mR=Symbol("field"),Wy=Symbol("quote"),Tv=Symbol("quoteafterquote"),cR=Symbol("quoteinquote"),Mh=class extends bi{constructor(e,t){super();this.input=e;this.hasHeader=!0;this.fullColumnNames=null;this.columnNamesValidated=!1;this.columnConfigs=null;this.configuredColumnsOnly=!1;this.delimiter=",";this.delimWhitespace=!1;this.base=new Ph(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(b.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&b.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((o,s)=>(o[s]=o[s]+1||1,o),{}),n=Object.keys(t).filter(o=>t[o]>1);if(b.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let o of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(o)===-1)throw new Error('The key "'+o+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},o={};for(let s=0;s<this.fullColumnNames.length;s++){let i=this.fullColumnNames[s],a=this.columnConfigs?this.columnConfigs[i]:null;if(!(this.configuredColumnsOnly&&!a)){let u=t[s],p=null;if(u==="")if(a&&a.default!==void 0)p=a.default;else{if(a&&(a.required||a.isLabel))throw new Error(`Required column ${i} is empty in this line: ${e}`);p=void 0}else{let l=Number(u);if(isNaN(l))a&&a.dtype==="bool"?p=this.getBoolean(u):p=u;else if(!a||!a.dtype)p=l;else switch(a.dtype){case"float32":p=l;break;case"int32":p=Math.floor(l);break;case"bool":p=this.getBoolean(u);break;default:p=l}}a&&a.isLabel?o[i]=p:n[i]=p}}return Object.keys(o).length===0?n:{xs:n,ys:o}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],o=0,s=e.length,i=Eh;for(let a=0;a<s;a++)switch(i){case Eh:switch(e.charAt(a)){case Uy:o=a+1,i=Wy;break;case this.delimiter:if(o=a+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),i=Eh;break;default:i=mR,o=a;break}break;case mR:switch(e.charAt(a)){case this.delimiter:n.push(e.substring(o,a)),i=Eh,o=a+1;break;default:}break;case Wy:switch(e.charAt(a)){case Uy:i=Tv;break;default:}break;case Tv:switch(e.charAt(a)){case this.delimiter:n.push(e.substring(o,a-1)),i=Eh,o=a+1;break;case Uy:i=Wy;break;default:i=cR;break}break;case cR:switch(e.charAt(a)){case Uy:i=Wy;break;default:}break;default:}if(i===Tv?n.push(e.substring(o,s-1)):n.push(e.substring(o)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}};var Fh=class extends sr{constructor(e){super();this.microphoneConfig=e;this.isClosed=!1;this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if($().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new Fh(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let o=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(o,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let o=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(o,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(o=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&o({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),o({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((o,s)=>n.set(o,s*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(b.sizeFromShape(t));return n.set(e,n.length-e.length),Fr(n,t)}};var Rh=class extends sr{constructor(e,t){super();this.webcamVideoElement=e;this.webcamConfig=t;this.isClosed=!0;this.resize=!1;if(this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=$t([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,o=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-n)/2,i=(1-o)/2,a=s+n,u=o+i;this.cropBox=li([i,s,u,a],[1,4])}else this.cropBox=li([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if($().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new Rh(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&b.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Tb.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return G(()=>{let t=Nr(J(e,"float32"),0),n;n=En.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let o=n.shape;return _(n,o.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}};var Lh=class{};var Ky=class extends sr{split(e){return new dR(this,e)}},dR=class extends Ky{constructor(e,t){super();this.upstream=e;this.impl=new fR(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},fR=class extends Ic{constructor(e,t){super();this.upstream=e;this.separator=t;this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}};var xv=class extends sr{decodeUTF8(){return new hR(this)}},hR=class extends Ky{constructor(e){super();this.upstream=e;this.impl=new gR(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},gR=class extends Ic{constructor(e){super();this.upstream=e;if($().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=mv();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return $().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}};var _h=class extends xv{constructor(e,t={}){super();this.file=e;this.options=t;b.assert(e instanceof Uint8Array||($().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let o=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,o)));else{let s=new FileReader;s.onload=a=>{let u=s.result;if(u instanceof ArrayBuffer&&(u=new Uint8Array(u)),!(u instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(u)},s.onabort=a=>n(new Error("Aborted")),s.onerror=a=>n(new Error(a.type));let i=this.file.slice(this.offset,o);s.readAsArrayBuffer(i)}this.offset=o}),done:!1}}};async function bR(r,e={},t){let n,o;typeof r=="string"?n=r:(n=r.url,o=see(r));let s=await(t||b.fetch)(n,o);if(s.ok){let i=new Uint8Array(await s.arrayBuffer());return new _h(i,e)}else throw new Error(s.statusText)}var see=r=>({method:r.method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:r.referrer,integrity:r.integrity});function Vy(r){return typeof r=="string"&&r.substr(0,7)==="file://"}var $h=class extends Lh{constructor(e,t={}){super();this.input=e;this.options=t}async iterator(){if(Vy(this.input)&&$().get("IS_NODE")){let e=Bh();this.input=e.readFileSync(this.input.substr(7))}return new _h(this.input,this.options)}};var Oh=class extends Lh{constructor(e,t={}){super();this.url=e;this.fileOptions=t}async iterator(){return Vy(this.url)?new $h(this.url,this.fileOptions).iterator():bR(this.url,this.fileOptions)}};function yR(r,e={}){return new Mh(new Oh(r),e)}function TR(r){let e=Dh(r);return Rn(async()=>e)}function xR(r){return Rn(async()=>{let e=await r();return Dh(()=>e.next())})}async function IR(r,e){return Rh.create(r,e)}async function CR(r){return Fh.create(r)}var kR="0.0.0";function ne(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&b.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}var aee=br.whereImpl,Iv=class extends ps{constructor(){super();this.blockSize=48;this.firstUse=!0;this.data=new Xa(this,qn())}nextDataId(){return Iv.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,$().get("IS_NODE")&&C.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let o={id:this.nextDataId()};return this.data.set(o,{values:e,dtype:n,refCount:1}),o}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(i=>b.encodeString(i));o=this.write(s,e,t)}else o=this.write(n,e,t);return{dataId:o,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,o,s){this.data.set(e,{values:t,dtype:o,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let o=this.readSync(n.real.dataId),s=this.readSync(n.imag.dataId);return C.mergeRealAndImagArrays(o,s)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>b.decodeString(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ke(e.shape,e.dtype,n)}makeOutput(e,t,n){let o=this.write(e,t,n);return qn().makeTensorFromDataId(o,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=b.now();return e(),{kernelMs:b.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ne([e],"where");let t=this.readSync(e.dataId);return aee(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},zh=Iv;zh.nextDataId=0;var wc={};je(wc,{addImpl:()=>kv,bincountImpl:()=>Sc,bincountReduceImpl:()=>Hy,ceilImpl:()=>Sv,concatImpl:()=>Il,equalImpl:()=>vv,expImpl:()=>wv,expm1Impl:()=>Dv,floorImpl:()=>Pv,gatherNdImpl:()=>qy,gatherV2Impl:()=>jy,greaterEqualImpl:()=>Mv,greaterImpl:()=>Ev,lessEqualImpl:()=>Rv,lessImpl:()=>Fv,linSpaceImpl:()=>Xy,logImpl:()=>Lv,maxImpl:()=>Yy,maximumImpl:()=>_v,minimumImpl:()=>Bv,multiplyImpl:()=>Gh,negImpl:()=>$v,notEqualImpl:()=>Ov,prodImpl:()=>zv,rangeImpl:()=>kl,rsqrtImpl:()=>Gv,sigmoidImpl:()=>XR,simpleAbsImpl:()=>Cv,sliceImpl:()=>Sl,sparseFillEmptyRowsImpl:()=>Qy,sparseReshapeImpl:()=>Zy,sparseSegmentReductionImpl:()=>Ac,sqrtImpl:()=>ZR,squaredDifferenceImpl:()=>Wv,stridedSliceImpl:()=>Jy,stringNGramsImpl:()=>eT,stringSplitImpl:()=>tT,stringToHashBucketFastImpl:()=>rT,subImpl:()=>Kv,tileImpl:()=>nT,topKImpl:()=>oT,transposeImpl:()=>vc,uniqueImpl:()=>sT});function Cv(r){let e=new Float32Array(r.length);for(let t=0;t<r.length;++t)e[t]=Math.abs(r[t]);return e}var iee=r=>{let{x:e}=r.inputs,t=r.backend;ne(e,"abs");let n=new Float32Array(b.sizeFromShape(e.shape)),o=t.data.get(e.dataId).values;return n=Cv(o),t.makeOutput(n,e.shape,e.dtype)},vR={kernelName:ls,backendName:"cpu",kernelFunc:iee};function et(r){return(e,t,n,o,s)=>{let i=C.assertAndGetBroadcastShape(e,t),a=i.length,u=b.computeStrides(i),p=b.sizeFromShape(i),l=b.getTypedArrayFromDType(s,p),m=e.length,c=t.length,d=b.computeStrides(e),f=b.computeStrides(t),h=C.getBroadcastDims(e,i),g=C.getBroadcastDims(t,i);if(h.length+g.length===0)for(let y=0;y<l.length;++y)l[y]=r(n[y%n.length],o[y%o.length]);else for(let y=0;y<l.length;++y){let T=b.indexToLoc(y,a,u),x=T.slice(-m);h.forEach(E=>x[E]=0);let I=b.locToIndex(x,m,d),k=T.slice(-c);g.forEach(E=>k[E]=0);let N=b.locToIndex(k,c,f);l[y]=r(n[I],o[N])}return[l,i]}}function kr(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,a=t.makeTensorInfo(n.shape,"complex64"),u=t.data.get(a.dataId);return u.complexTensorInfos={real:t.makeTensorInfo(n.shape,"float32",s),imag:t.makeTensorInfo(o.shape,"float32",i)},a}var AR={kernelName:Ru,backendName:"cpu",kernelFunc:kr};function Cc(r,e,t="float32"){if(t==="complex64"){let o=Cc(r,e,"float32"),s=Cc(r,e,"float32");return kr({inputs:{real:o,imag:s},backend:r})}let n=b.makeZerosTypedArray(b.sizeFromShape(e),t);return r.makeTensorInfo(e,t,n)}function Xr(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var wR={kernelName:Wn,backendName:"cpu",kernelFunc:Xr};function Vs(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.real,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var NR={kernelName:Uu,backendName:"cpu",kernelFunc:Vs};function Hs(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return Xr({inputs:{x:o},backend:t});let i=Cc(t,o.shape,o.dtype),a=Hs({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=kr({inputs:{real:a,imag:i},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),u}if(o.dtype==="complex64"){let i=Vs({inputs:{input:o},backend:t}),a=Hs({inputs:{x:i},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(i),a}if(!b.hasEncodingLoss(o.dtype,s)){let i=Xr({inputs:{x:o},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32"){let i=t.data.get(o.dataId).values,a=Int32Array.from(i);return t.makeTensorInfo(o.shape,"int32",a)}if(s==="bool"){let i=t.data.get(o.dataId).values,a=b.toTypedArray([0],o.dtype),[u,p]=et((l,m)=>l!==m?1:0)(o.shape,[],i,a,"bool");return t.makeTensorInfo(p,"bool",u)}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var DR={kernelName:Gn,backendName:"cpu",kernelFunc:Hs};function st(r,e,t,n){return t==null?({inputs:o,backend:s})=>{let{a:i,b:a}=o,u=s;ne([i,a],r);let p=u.data.get(i.dataId).values,l=u.data.get(a.dataId).values,m=i.dtype==="string"?C.fromUint8ToStringArray(p):p,c=i.dtype==="string"?C.fromUint8ToStringArray(l):l,d=n||i.dtype,[f,h]=e(i.shape,a.shape,m,c,d);return u.makeTensorInfo(h,d,f)}:({inputs:o,backend:s})=>{let{a:i,b:a}=o,u=s;if(i.dtype==="complex64"||a.dtype==="complex64"){let p=Hs({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),l=u.data.get(p.dataId),m=l.complexTensorInfos.real,c=l.complexTensorInfos.imag,d=u.data.get(m.dataId).values,f=u.data.get(c.dataId).values,h=Hs({inputs:{x:a},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(h.dataId),y=g.complexTensorInfos.real,T=g.complexTensorInfos.imag,x=u.data.get(y.dataId).values,I=u.data.get(T.dataId).values,[k,N,E]=t(i.shape,a.shape,d,f,x,I),M=u.makeTensorInfo(E,"float32",k),R=u.makeTensorInfo(E,"float32",N),B=kr({inputs:{real:M,imag:R},backend:u});return u.disposeIntermediateTensorInfo(p),u.disposeIntermediateTensorInfo(h),u.disposeIntermediateTensorInfo(M),u.disposeIntermediateTensorInfo(R),B}else{let p=u.data.get(i.dataId).values,l=u.data.get(a.dataId).values,m=n||i.dtype,[c,d]=e(i.shape,a.shape,p,l,m);return u.makeTensorInfo(d,m,c)}}}function kc(r){return(e,t,n,o,s,i)=>{let a=C.assertAndGetBroadcastShape(e,t),u=b.sizeFromShape(a),p=a.length,l=b.computeStrides(a),m=b.getTypedArrayFromDType("float32",u),c=b.getTypedArrayFromDType("float32",u),d=C.getBroadcastDims(e,a),f=C.getBroadcastDims(t,a),h=C.mergeRealAndImagArrays(n,o),g=C.mergeRealAndImagArrays(s,i),y=e.length,T=b.computeStrides(e),x=t.length,I=b.computeStrides(t);if(d.length+f.length===0)for(let k=0;k<m.length;k++){let N=k%h.length,E=k%g.length,M=r(h[N*2],h[N*2+1],g[E*2],g[E*2+1]);m[k]=M.real,c[k]=M.imag}else for(let k=0;k<m.length;k++){let N=b.indexToLoc(k,p,l),E=N.slice(-y);d.forEach(W=>E[W]=0);let M=b.locToIndex(E,y,T),R=N.slice(-x);f.forEach(W=>R[W]=0);let B=b.locToIndex(R,x,I),U=r(h[M*2],h[M*2+1],g[B*2],g[B*2+1]);m[k]=U.real,c[k]=U.imag}return[m,c,a]}}var kv=et((r,e)=>r+e),uee=kc((r,e,t,n)=>({real:r+t,imag:e+n})),yu=st(vn,kv,uee),PR={kernelName:vn,backendName:"cpu",kernelFunc:yu};function Sc(r,e,t,n,o){let s=b.sizeFromShape(n),i=b.makeZerosTypedArray(o,t);for(let a=0;a<r.length;a++){let u=r[a];if(u<0)throw new Error("Input x must be non-negative!");u>=o||(s>0?i[u]+=e[a]:i[u]+=1)}return i}function Hy(r,e,t,n=!1){let o=r.shape[0],s=r.shape[1],i=ke([o,t],e.dtype);for(let a=0;a<o;a++)for(let u=0;u<s;u++){let p=r.get(a,u);if(p<0)throw new Error("Input x must be non-negative!");p>=t||(n?i.set(1,a,p):e.size>0?i.set(i.get(a,p)+e.get(a,u),a,p):i.set(i.get(a,p)+1,a,p))}return i}function Tn(r){return(e,t,n)=>{let o=b.getTypedArrayFromDType(t,e.length);for(let s=0;s<e.length;++s)o[s]=r(e[s],n);return o}}function Re(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:i}=n;if(ne(i,r),i.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let a=s,u=a.data.get(i.dataId).values,p=b.sizeFromShape(i.shape),l=t||i.dtype,m=b.getArrayFromDType(l,p);for(let c=0;c<p;++c)m[c]=e(u[c],o);return a.makeTensorInfo(i.shape,l,m)}}function qs(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:i}=n;if(ne(i,r),i.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let a=s,u=a.data.get(i.dataId).values,p=t||i.dtype,l=e(u,p,o);return a.makeTensorInfo(i.shape,p,l)}}var Sv=Tn(r=>Math.ceil(r)),pee=qs(po,Sv),ER={kernelName:po,backendName:"cpu",kernelFunc:pee};function Il(r,e,t,n){let o=b.getArrayFromDType(t,b.sizeFromShape(e));if(n&&t!=="string"){let s=0;r.forEach(i=>{let a=b.sizeFromShape(i.shape);o.set(i.vals,s),s+=a})}else{let s=0;r.forEach(i=>{let a=t==="string"?C.fromUint8ToStringArray(i.vals):i.vals,u=0;for(let p=0;p<i.shape[0];++p){let l=p*e[1]+s;for(let m=0;m<i.shape[1];++m)o[l+m]=a[u++]}s+=i.shape[1]})}return o}var vv=et((r,e)=>r===e?1:0),Av=st(oa,vv,null,"bool"),MR={kernelName:oa,backendName:"cpu",kernelFunc:Av};var wv=Tn(r=>Math.exp(r)),Nv=qs(yo,wv,"float32"),FR={kernelName:yo,backendName:"cpu",kernelFunc:Nv};var Dv=Tn(r=>Math.expm1(r)),lee=qs(sa,Dv),RR={kernelName:sa,backendName:"cpu",kernelFunc:lee};var Pv=Tn(r=>Math.floor(r)),mee=qs(To,Pv),LR={kernelName:To,backendName:"cpu",kernelFunc:mee};function qy(r,e,t,n,o,s,i,a,u){let p=ke([n,s],t);for(let l=0;l<n;l++){let m=[],c=0;for(let d=0;d<o;d++){let f=r[l*o+d];c+=f*i[d],m.push(f)}if(c<0||c>=u/s)throw new Error(`Invalid indices: ${m} does not index into ${a}`);for(let d=0;d<s;d++)p.values[l*s+d]=e.get(...e.indexToLoc(c*s+d))}return p}function jy(r,e,t){let n=ke(t,r.dtype);for(let o=0;o<n.size;++o){let i=n.indexToLoc(o).slice(),a=i[0],u=i[2],p=e.locToIndex([a,u]);i[2]=e.values[p];let l=r.locToIndex(i);0<=l&&l<r.values.length&&(n.values[o]=r.values[l])}return n}var Ev=et((r,e)=>r>e?1:0),cee=st(ua,Ev,null,"bool"),_R={kernelName:ua,backendName:"cpu",kernelFunc:cee};var Mv=et((r,e)=>r>=e?1:0),dee=st(Co,Mv,null,"bool"),BR={kernelName:Co,backendName:"cpu",kernelFunc:dee};var Fv=et((r,e)=>r<e?1:0),fee=st(pa,Fv,null,"bool"),$R={kernelName:pa,backendName:"cpu",kernelFunc:fee};var Rv=et((r,e)=>r<=e?1:0),hee=st(la,Rv,null,"bool"),OR={kernelName:la,backendName:"cpu",kernelFunc:hee};function Xy(r,e,t){let n=(e-r)/(t-1),o=b.makeZerosTypedArray(t,"float32");o[0]=r;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}var Lv=Tn(r=>Math.log(r)),gee=qs(So,Lv),zR={kernelName:So,backendName:"cpu",kernelFunc:gee};function Yy(r,e,t,n){let o=b.getTypedArrayFromDType(n,b.sizeFromShape(t));for(let s=0;s<o.length;++s){let i=s*e,a=r[i];for(let u=0;u<e;++u){let p=r[i+u];(Number.isNaN(p)||p>a)&&(a=p)}o[s]=a}return o}var _v=et((r,e)=>Math.max(r,e)),bee=st(Ao,_v),GR={kernelName:Ao,backendName:"cpu",kernelFunc:bee};var Bv=et((r,e)=>Math.min(r,e)),yee=st(Po,Bv),UR={kernelName:Po,backendName:"cpu",kernelFunc:yee};var Gh=et((r,e)=>r*e),Tee=kc((r,e,t,n)=>({real:r*t-e*n,imag:r*n+e*t})),Cl=st(Mo,Gh,Tee),WR={kernelName:Mo,backendName:"cpu",kernelFunc:Cl};function $v(r,e,t){let n=b.createScalarValue(-1,t);return Gh([],e,n,r,t)}function xee(r){let{inputs:e,backend:t}=r,{x:n}=e;ne(n,"neg");let o=t.data.get(n.dataId).values,[s,i]=$v(o,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,s)}var KR={kernelName:hs,backendName:"cpu",kernelFunc:xee};var Ov=et((r,e)=>r!==e?1:0),Iee=st(ca,Ov,null,"bool"),VR={kernelName:ca,backendName:"cpu",kernelFunc:Iee};function vc(r,e,t,n,o){let s=e.length,i=b.sizeFromShape(e),a=b.computeStrides(e),u=b.computeStrides(o),p=b.getTypedArrayFromDType(t,b.sizeFromShape(o));for(let l=0;l<i;++l){let m=b.indexToLoc(l,s,a),c=new Array(m.length);for(let f=0;f<c.length;f++)c[f]=m[n[f]];let d=b.locToIndex(c,s,u);p[d]=r[l]}return p}function ar(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{perm:s}=t;ne(o,"transpose");let i=o.shape.length,a=new Array(i);for(let m=0;m<a.length;m++)a[m]=o.shape[s[m]];let u=n.data.get(o.dataId).values,p=vc(u,o.shape,o.dtype,s,a);return{dataId:n.write(p,a,o.dtype),shape:a,dtype:o.dtype}}var HR={kernelName:jo,backendName:"cpu",kernelFunc:ar};function zv(r,e,t,n){let[o,s]=C.computeOutAndReduceShapes(r,n),i=Ut(e,"int32"),a=b.makeZerosTypedArray(b.sizeFromShape(o),i),u=b.sizeFromShape(s);for(let p=0;p<a.length;++p){let l=p*u,m=1;for(let c=0;c<u;++c)m*=t[l+c];a[p]=m}return{outVals:a,outShape:o,outDtype:i}}function Cee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;ne(o,"prod");let a=o.shape.length,u=b.parseAxisParam(s,o.shape),p=C.getAxesPermutation(u,a),l=u,m=o,c=[];p!=null&&(m=ar({inputs:{x:o},backend:t,attrs:{perm:p}}),c.push(m),l=C.getInnerMostAxes(l.length,a));let d=t.data.get(m.dataId).values,{outVals:f,outShape:h,outDtype:g}=zv(m.shape,m.dtype,d,l),y=h;return i&&(y=C.expandShapeToKeepDim(h,u)),c.forEach(T=>t.disposeIntermediateTensorInfo(T)),t.makeTensorInfo(y,g,f)}var qR={kernelName:ga,backendName:"cpu",kernelFunc:Cee};function kl(r,e,t,n){let o=r===e,s=r<e&&t<0,i=e<r&&t>1;if(o||s||i)return b.makeZerosTypedArray(0,n);let a=Math.abs(Math.ceil((e-r)/t)),u=b.makeZerosTypedArray(a,n);e<r&&t===1&&(t=-1),u[0]=r;for(let p=1;p<u.length;p++)u[p]=u[p-1]+t;return u}var Gv=Tn(r=>1/Math.sqrt(r)),kee=qs(Oo,Gv),jR={kernelName:Oo,backendName:"cpu",kernelFunc:kee};var XR=Tn(r=>1/(1+Math.exp(-r))),Uv=Re(Go,r=>1/(1+Math.exp(-r))),YR={kernelName:Go,backendName:"cpu",kernelFunc:Uv};function Sl(r,e,t,n,o){let s=yt.isSliceContinous(n,e,t),i=b.sizeFromShape(t),a=b.computeStrides(n);if(s){let m=yt.computeFlatOffset(e,a);return o==="string"?r.slice(m,m+i):r.subarray(m,m+i)}let u=o==="string"?C.fromUint8ToStringArray(r):r,p=ke(n,o,u),l=ke(t,o);for(let m=0;m<l.size;++m){let c=l.indexToLoc(m),d=c.map((f,h)=>f+e[h]);l.set(p.get(...d),...c)}return o==="string"?C.fromStringArrayToUint8(l.values):l.values}function js(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:i}=n;ne(o,"slice");let[a,u]=yt.parseSliceParams(o,s,i);yt.assertParamsValid(o,a,u);let p=t.data.get(o.dataId).values,l=Sl(p,a,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,l)}var QR={kernelName:xs,backendName:"cpu",kernelFunc:js};function Qy(r,e,t,n,o,s,i){let a=e[0],u=s[0],p=new Array(u),l=new Array(a),m=e[1];if(u===0){if(a!==0)throw new Error(C.getSparseFillEmptyRowsIndicesDenseShapeMismatch(a));let g=b.getArrayFromDType(t,0),y=b.getArrayFromDType(o,0);return[g,[0,m],y,p,l]}let c=!0,d=0,f=new Array(u).fill(0);for(let g=0;g<a;++g){let y=r[g*m];if(y<0)throw new Error(C.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=u)throw new Error(C.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,u));++f[y],c=c&&y>=d,d=y}let h=!0;for(let g=0;g<u;++g){let y=f[g]===0;p[g]=y,h=h&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(h&&c){let g=r,y=n;for(let T=0;T<a;++T)l[T]=T;return[g,[a,m],y,p,l]}else{let g=f[u-1],y=b.getArrayFromDType(t,g*m),T=b.getArrayFromDType(o,g),x=new Array(u).fill(0);for(let I=0;I<a;++I){let k=r[I*m],N=x[k],E=(k===0?0:f[k-1])+N;x[k]++;for(let M=0;M<m;++M)y[E*m+M]=r[I*m+M];T[E]=n[I],l[I]=E}for(let I=0;I<u;++I)if(x[I]===0){let N=I===0?0:f[I-1];y[N*m+0]=I;for(let E=1;E<m;++E)y[N*m+E]=0;T[N]=i}return[y,[g,m],T,p,l]}}function Zy(r,e,t,n,o){let s=b.sizeFromShape(n),i=e[0],a=o.length,u=[],p=1,l=-1;for(let g=0;g<a;++g){let y=o[g];if(y===-1){if(l!==-1)throw new Error(C.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(l,g));l=g,u.push(1)}else{if(y<0)throw new Error(C.getSparseReshapeNegativeOutputDimErrorMessage(g,y));p*=y,u.push(y)}}if(l!==-1){if(p<=0)throw new Error(C.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(s/p);if(p*g!==s)throw new Error(C.getSparseReshapeInputOutputMultipleErrorMessage(n,u));u[l]=g}if(b.sizeFromShape(u)!==s)throw new Error(C.getSparseReshapeInputOutputMismatchErrorMessage(n,u));let c=n.length,d=[];if(c>0){d[c-1]=1;for(let g=c-2;g>=0;--g)d[g]=d[g+1]*n[g+1]}let f=[];if(a>0){f[a-1]=1;for(let g=a-2;g>=0;--g)f[g]=f[g+1]*u[g+1]}let h=b.getArrayFromDType(t,i*a);for(let g=0;g<i;++g){let y=0;for(let T=0;T<c;++T)y+=r[g*c+T]*d[T];for(let T=0;T<a;++T)h[g*a+T]=Math.trunc(y/f[T]),y%=f[T]}return[h,[i,a],u]}function Ac(r,e,t,n,o,s=!1,i=0){let a=n.length,u=[e[0],r.length/e[0]],p=u[1],m=a>0?o[a-1]+1:0;if(m<0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let c=e.slice();c[0]=m;let d=c.reduce((x,I)=>x*I,1),f=b.getArrayFromDType(t,d);if(a===0)return m>0&&f.fill(i),[f,c];if(m<=0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=0,g=1,y=0,T=o[h];for(;;){let x=0;if(g<a){if(x=o[g],T===x){++g;continue}if(T>=x)throw new Error(C.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(T<0||T>=m)throw new Error(C.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(T,m));T>y&&f.fill(i,y*p,T*p);for(let I=h;I<g;++I){let k=n[I];if(k<0||k>=u[0])throw new Error(C.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(I,n[I],u[0]));for(let N=0;N<p;N++)f[T*p+N]+=r[k*p+N]}if(s)for(let I=0;I<p;I++)f[T*p+I]/=g-h;if(h=g,++g,y=T+1,T=x,g>a)break}return y<m&&f.fill(i,y*p,m*p),[f,c]}var ZR=Tn(r=>Math.sqrt(r)),See=Re(Uo,r=>Math.sqrt(r)),JR={kernelName:Uo,backendName:"cpu",kernelFunc:See};var Wv=et((r,e)=>{let t=r-e;return t*t}),vee=st(Vo,Wv),eL={kernelName:Vo,backendName:"cpu",kernelFunc:vee};function Jy(r,e,t,n){let o=ke(r,e.dtype);for(let s=0;s<o.size;s++){let i=o.indexToLoc(s),a=new Array(i.length);for(let u=0;u<a.length;u++)a[u]=i[u]*t[u]+n[u];o.set(e.get(...a),...i)}return o}var tL=class{constructor(e,t,n,o,s,i){this.separator=b.encodeString(e),this.nGramWidths=t,this.leftPad=b.encodeString(n),this.rightPad=b.encodeString(o),this.padWidth=s,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,o,s,i){for(let a=0;a<s;++a){let u=this.getPadWidth(i),p=Math.max(0,u-a),l=Math.max(0,u-(s-(a+1))),m=i-(p+l),c=t+(p>0?0:a-u),d=0;d+=p*this.leftPad.length;for(let T=0;T<m;++T)d+=e[c+T].length;d+=l*this.rightPad.length,d+=(p+l+m-1)*this.separator.length,n[o+a]=new Uint8Array(d);let h=n[o+a],g=0,y=T=>T.forEach(x=>h[g++]=x);for(let T=0;T<p;++T)y(this.leftPad),y(this.separator);for(let T=0;T<m-1;++T)y(e[c+T]),y(this.separator);if(m>0){y(e[c+m-1]);for(let T=0;T<l;++T)y(this.separator),y(this.rightPad)}else{for(let T=0;T<l-1;++T)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(e,t){let n=e.length,o=t.length;if(o>0){let u=t[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let p=1;p<o;++p){let l=t[p]>=u;if(l=l&&t[p]<=n,!l)throw new Error(`Invalid split value ${t[p]}, must be in [${u}, ${n}]`);u=t[p]}if(u!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${u}`)}let s=o-1,i=b.getArrayFromDType("int32",o);if(n===0||o===0){let u=new Array(n);for(let p=0;p<=s;++p)i[p]=0;return[u,i]}i[0]=0;for(let u=1;u<=s;++u){let p=t[u]-t[u-1],l=0;this.nGramWidths.forEach(m=>{l+=this.getNumNGrams(p,m)}),this.preserveShort&&p>0&&l===0&&(l=1),i[u]=i[u-1]+l}let a=new Array(i[s]);for(let u=0;u<s;++u){let p=t[u],l=i[u];if(this.nGramWidths.forEach(m=>{let c=t[u+1]-t[u],d=this.getNumNGrams(c,m);this.createNGrams(e,p,a,l,d,m),l+=d}),this.preserveShort&&l===i[u]){let m=t[u+1]-t[u];if(m===0)continue;let c=m+2*this.padWidth,d=1;this.createNGrams(e,p,a,l,d,c)}}return[a,i]}};function eT(r,e,t,n,o,s,i,a){return new tL(t,n,o,s,i,a).compute(r,e)}function Aee(r,e,t,n){if(!r.length)return;if(e.length===0){for(let s=0;s<r.length;++s)n.push(r.subarray(s,s+1));return}if(e.length===1){let s=e[0],i=r.indexOf(s);for(;i!==-1;){let a=r.subarray(0,i);(!t||a.length!==0)&&n.push(a),r=r.subarray(i+1),i=r.indexOf(s)}(!t||r.length!==0)&&n.push(r);return}let o=0;for(let s=0;s<r.length+1;s++)if(s===r.length||e.indexOf(r[s])!==-1){let i=r.subarray(o,s);(!t||i.length!==0)&&n.push(i),o=s+1}}function tT(r,e,t){let n=r.length,o=[],s=0,i=0,a=new Array(n);for(let c=0;c<n;++c){let d=o.length;Aee(r[c],e,t,o);let f=o.length-d;a[c]=f,s+=f,i=Math.max(i,f)}let u=b.getArrayFromDType("int32",s*2),p=new Array(s),l=[n,i],m=0;for(let c=0;c<n;++c)for(let d=0;d<a[c];++d)u[m*2]=c,u[m*2+1]=d,p[m]=o[m],++m;return[u,p,l]}function rT(r,e){let t=b.getArrayFromDType("int32",r.length);for(let n=0;n<r.length;++n)t[n]=b.fingerPrint64(r[n]).modulo(e).getLowBitsUnsigned();return t}var Kv=et((r,e)=>r-e),wee=kc((r,e,t,n)=>({real:r-t,imag:e-n})),Uh=st(Ho,Kv,wee),rL={kernelName:Ho,backendName:"cpu",kernelFunc:Uh};function nT(r,e){let t=new Array(r.rank);for(let o=0;o<t.length;o++)t[o]=r.shape[o]*e[o];let n=ke(t,r.dtype);for(let o=0;o<n.values.length;++o){let s=n.indexToLoc(o),i=new Array(r.rank);for(let u=0;u<i.length;u++)i[u]=s[u]%r.shape[u];let a=r.locToIndex(i);n.values[o]=r.values[a]}return n}var Wh=(r,e)=>{let t=e.value-r.value;return t===0?r.index-e.index:t};function nL(r,e,t=0,n=r.length-1){for(;n>t;){if(n-t>600){let a=n-t+1,u=e-t+1,p=Math.log(a),l=.5*Math.exp(2*p/3),m=.5*Math.sqrt(p*l*(a-l)/a)*Math.sign(u-a/2),c=Math.max(t,Math.floor(e-u*l/a+m)),d=Math.min(n,Math.floor(e+(a-u)*l/a+m));nL(r,e,c,d)}let o=r[e],s=t,i=n;for(b.swap(r,t,e),Wh(r[n],o)>0&&b.swap(r,t,n);s<i;){for(b.swap(r,s,i),s++,i--;Wh(r[s],o)<0;)s=s+1;for(;Wh(r[i],o)>0;)i=i-1}Wh(r[t],o)===0?b.swap(r,t,i):(i=i+1,b.swap(r,i,n)),i<=e&&(t=i+1),e<=i&&(n=i-1)}}function oT(r,e,t,n,o){let s=e[e.length-1],[i,a]=[r.length/s,s],u=b.getTypedArrayFromDType(t,i*n),p=b.getTypedArrayFromDType("int32",i*n);for(let m=0;m<i;m++){let c=m*a,d=r.subarray(c,c+a),f=new Array(d.length);d.forEach((T,x)=>f[x]={value:T,index:x}),n<f.length&&(nL(f,n),f=f.slice(0,n)),o&&f.sort(Wh);let h=m*n,g=u.subarray(h,h+n),y=p.subarray(h,h+n);for(let T=0;T<n;T++)g[T]=f[T].value,y[T]=f[T].index}let l=e.slice();return l[l.length-1]=n,[ke(l,t,u),ke(l,"int32",p)]}function sT(r,e,t,n){let o=b.parseAxisParam(e,t)[0],s=[1,t[0],1];for(let f=0;f<o;f++)s[0]*=t[f];s[1]=t[o];for(let f=o+1;f<t.length;f++)s[2]*=t[f];let i={},a=new Int32Array(t[o]),u=new gt(s,n,r),p=[],l=s[0]===1&&s[2]===1;for(let f=0;f<t[o];f++){let h;if(l)h=r[f].toString();else{let g=[];for(let y=0;y<s[0];y++)for(let T=0;T<s[2];T++)g.push(u.get(y,f,T));h=g.join(",")}if(i[h]!==void 0)a[f]=i[h];else{let g=Object.keys(i).length;i[h]=g,a[f]=g,p.push(f)}}let m=s.slice();m[1]=Object.keys(i).length;let c=new gt(m,n);p.forEach((f,h)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)c.set(u.get(g,f,y),g,h,y)});let d=t.slice();return d[o]=m[1],{outputValues:c.values,outputShape:d,indices:a}}var Nee="0.0.0";Ju("cpu",()=>new zh,1);var Vv=Re(bo,r=>r>=0?r:Math.exp(r)-1),oL={kernelName:bo,backendName:"cpu",kernelFunc:Vv};function Hv(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n;ne([o],"leakyRelu");let i=b.sizeFromShape(o.shape),a=t.data.get(o.dataId).values,u=b.getTypedArrayFromDType("float32",i);for(let p=0;p<a.length;p++)u[p]=a[p]<0?s*a[p]:a[p];return t.makeTensorInfo(o.shape,"float32",u)}var sL={kernelName:ko,backendName:"cpu",kernelFunc:Hv};var Dee=et((r,e)=>r<0?e*r:r);function qv(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e;ne([n,o],"prelu");let s=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,[a,u]=Dee(n.shape,o.shape,s,i,"float32");return t.makeTensorInfo(u,"float32",a)}var aL={kernelName:Lo,backendName:"cpu",kernelFunc:qv};var jv=Re(_o,r=>Math.max(0,r)),iL={kernelName:_o,backendName:"cpu",kernelFunc:jv};var Xv=Re($o,r=>Math.min(Math.max(0,r),6)),uL={kernelName:$o,backendName:"cpu",kernelFunc:Xv};function Nc(r,e,t,n,o){if(t==="linear")return Xr({inputs:{x:e},backend:r});if(t==="relu")return jv({inputs:{x:e},backend:r});if(t==="elu")return Vv({inputs:{x:e},backend:r});if(t==="relu6")return Xv({inputs:{x:e},backend:r});if(t==="prelu")return qv({inputs:{x:e,alpha:n},backend:r});if(t==="leakyrelu")return Hv({inputs:{x:e},backend:r,attrs:{alpha:o}});if(t==="sigmoid")return Uv({inputs:{x:e},backend:r});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}function nt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,i=b.sizeFromShape(o.shape),a=b.inferFromImplicitShape(s,i),u=b.sizeFromShape(a);b.assert(i===u,()=>`The new shape (${a}) has ${u} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),t.incRef(o.dataId);let p=t.data.get(o.dataId);if(p.complexTensorInfos!=null){let l=p.complexTensorInfos.real,m=p.complexTensorInfos.imag;l.shape=a,m.shape=a}return{dataId:o.dataId,shape:a,dtype:o.dtype}}var pL={kernelName:ys,backendName:"cpu",kernelFunc:nt};function Yv(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:i,transposeB:a}=n;ne([o,s],"matMul");let u=o.shape.length,p=s.shape.length,l=i?o.shape[u-2]:o.shape[u-1],m=a?s.shape[p-1]:s.shape[p-2],c=i?o.shape[u-1]:o.shape[u-2],d=a?s.shape[p-2]:s.shape[p-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=b.sizeFromShape(f),y=b.sizeFromShape(h),x=wr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);b.assert(l===m,()=>`Error in matMul: inner shapes (${l}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${i} and transposeB=${a} must match.`);let I=i?[g,l,c]:[g,c,l],k=a?[y,d,m]:[y,m,d],N=nt({inputs:{x:o},backend:t,attrs:{shape:I}}),E=nt({inputs:{x:s},backend:t,attrs:{shape:k}}),M=i?N.shape[1]:N.shape[2],R=i?N.shape[2]:N.shape[1],B=a?E.shape[1]:E.shape[2],U=Math.max(g,y),W=t.data.get(N.dataId).values,K=t.data.get(E.dataId).values,H=b.computeStrides(N.shape),V=b.computeStrides(E.shape),[j,ee,Z]=i?[H[0],1,H[1]]:[H[0],H[1],1],[te,oe,ie]=a?[1,V[1],V[0]]:[V[1],1,V[0]],se=R*B,ue=ke([U,R,B],N.dtype),ye=ue.values,fe=t.blockSize;for(let Te=0;Te<U;Te++)for(let Ae=0;Ae<R;Ae+=fe)for(let Le=0;Le<B;Le+=fe)for(let Be=0;Be<M;Be+=fe){let Ue=Math.min(Ae+fe,R),Y=Math.min(Le+fe,B),ft=Math.min(Be+fe,M);for(let xt=Ae;xt<Ue;xt++)for(let wt=Le;wt<Y;wt++){let Ot=0;for(let ct=Be;ct<ft;ct++){let ot=Math.min(Te,g-1)*j,zt=Math.min(Te,y-1)*ie,_n=W[ot+xt*ee+ct*Z],ir=K[ct*te+wt*oe+zt];Ot+=_n*ir}ye[Te*se+(xt*B+wt)]+=Ot}}return t.disposeIntermediateTensorInfo(N),t.disposeIntermediateTensorInfo(E),t.makeTensorInfo(x,ue.dtype,ue.values)}var lL={kernelName:uo,backendName:"cpu",kernelFunc:Yv};function Pee(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:i,preluActivationWeights:a}=e,{transposeA:u,transposeB:p,activation:l,leakyreluAlpha:m}=n,c,d,f,h=[];c=Yv({inputs:{a:o,b:s},attrs:{transposeA:u,transposeB:p},backend:t}),i&&(d=yu({inputs:{a:c,b:i},backend:t}),h.push(c),c=d),l&&(f=Nc(t,c,l,a,m),h.push(c),c=f);for(let y of h)t.disposeIntermediateTensorInfo(y);return c}var mL={kernelName:As,backendName:"cpu",kernelFunc:Pee};var Eee=Re(Di,r=>Math.acos(r)),cL={kernelName:Di,backendName:"cpu",kernelFunc:Eee};var Mee=Re(Pi,r=>Math.acosh(r)),dL={kernelName:Pi,backendName:"cpu",kernelFunc:Mee};function Fee(r){let{inputs:e,backend:t}=r,n=e;ne(e,"addN");let o=n.map(a=>t.data.get(a.dataId).values),s=ke(n[0].shape,n[0].dtype),i=s.values;for(let a=0;a<n.length;a++){let u=o[a];for(let p=0;p<i.length;p++)i[p]+=u[p]}return t.makeTensorInfo(s.shape,s.dtype,s.values)}var fL={kernelName:so,backendName:"cpu",kernelFunc:Fee};function Ree(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;ne(o,"all");let a=b.parseAxisParam(s,o.shape),u=a,p=C.getAxesPermutation(u,o.shape.length),l=o;p!=null&&(l=ar({inputs:{x:o},backend:t,attrs:{perm:p}}),u=C.getInnerMostAxes(u.length,o.shape.length)),C.assertAxesAreInnerMostDims("all",u,l.shape.length);let[m,c]=C.computeOutAndReduceShapes(l.shape,u),d=b.sizeFromShape(c),f=b.makeZerosTypedArray(b.sizeFromShape(m),l.dtype),h=t.data.get(l.dataId).values;for(let y=0;y<f.length;++y){let T=y*d,x=h[T];for(let I=0;I<d;++I){let k=h[T+I];x=x&&k}f[y]=x}p!=null&&t.disposeIntermediateTensorInfo(l);let g=t.makeTensorInfo(m,l.dtype,f);if(i){let y=C.expandShapeToKeepDim(m,a),T=nt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),T}return g}var hL={kernelName:Ei,backendName:"cpu",kernelFunc:Ree};function Lee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;ne(o,"any");let a=b.parseAxisParam(s,o.shape),u=a,p=C.getAxesPermutation(u,o.shape.length),l=o;p!=null&&(l=ar({inputs:{x:o},backend:t,attrs:{perm:p}}),u=C.getInnerMostAxes(u.length,o.shape.length)),C.assertAxesAreInnerMostDims("any",u,l.shape.length);let[m,c]=C.computeOutAndReduceShapes(l.shape,u),d=b.sizeFromShape(c),f=b.makeZerosTypedArray(b.sizeFromShape(m),l.dtype),h=t.data.get(l.dataId).values;for(let y=0;y<f.length;++y){let T=y*d,x=h[T];for(let I=0;I<d;++I){let k=h[T+I];x=x||k}f[y]=x}p!=null&&t.disposeIntermediateTensorInfo(l);let g=t.makeTensorInfo(m,l.dtype,f);if(i){let y=C.expandShapeToKeepDim(m,a),T=nt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),T}return g}var gL={kernelName:Mi,backendName:"cpu",kernelFunc:Lee};function _ee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;ne(o,"argMax");let i=b.parseAxisParam(s,o.shape),a=C.getAxesPermutation(i,o.shape.length),u=o,p=[];a!=null&&(u=ar({inputs:{x:o},backend:t,attrs:{perm:a}}),p.push(u),i=C.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],C.assertAxesAreInnerMostDims("argMax",i,u.shape.length);let[l,m]=C.computeOutAndReduceShapes(u.shape,i),c=b.sizeFromShape(l),d=b.makeZerosTypedArray(c,"int32"),f=b.sizeFromShape(m),h=t.data.get(u.dataId).values;for(let g=0;g<d.length;++g){let y=g*f,T=h[y],x=0;for(let I=0;I<f;++I){let k=h[y+I];k>T&&(T=k,x=I)}d[g]=x}return p.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(l,"int32",d)}var bL={kernelName:ao,backendName:"cpu",kernelFunc:_ee};function Bee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;ne(o,"argMin");let i=b.parseAxisParam(s,o.shape),a=C.getAxesPermutation(i,o.shape.length),u=o,p=[];a!=null&&(u=ar({inputs:{x:o},backend:t,attrs:{perm:a}}),p.push(u),i=C.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],C.assertAxesAreInnerMostDims("argMin",i,u.shape.length);let[l,m]=C.computeOutAndReduceShapes(u.shape,i),c=b.sizeFromShape(l),d=b.makeZerosTypedArray(c,"int32"),f=b.sizeFromShape(m),h=t.data.get(u.dataId).values;for(let g=0;g<d.length;++g){let y=g*f,T=h[y],x=0;for(let I=0;I<f;++I){let k=h[y+I];k<T&&(T=k,x=I)}d[g]=x}return p.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(l,"int32",d)}var yL={kernelName:Za,backendName:"cpu",kernelFunc:Bee};var $ee=Re(Fi,r=>Math.asin(r)),TL={kernelName:Fi,backendName:"cpu",kernelFunc:$ee};var Oee=Re(Ri,r=>Math.asinh(r)),xL={kernelName:Ri,backendName:"cpu",kernelFunc:Oee};var zee=Re(Li,r=>Math.atan(r)),IL={kernelName:Li,backendName:"cpu",kernelFunc:zee};var Gee=et((r,e)=>Math.atan2(r,e)),Uee=st(Bi,Gee),CL={kernelName:Bi,backendName:"cpu",kernelFunc:Uee};var Wee=Re(_i,r=>Math.atanh(r)),kL={kernelName:_i,backendName:"cpu",kernelFunc:Wee};function Dc(r,e,t,n,o,s){let i=o.strideHeight,a=o.strideWidth,u=o.dilationHeight,p=o.dilationWidth,l=o.effectiveFilterHeight,m=o.effectiveFilterWidth,c=o.padInfo.top,d=o.padInfo.left,f=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=ke(o.outShape,t),g=h.values,y=o.outShape[1]*o.outShape[2]*o.outShape[3],T=o.outShape[2]*o.outShape[3],x=o.outShape[3];for(let I=0;I<o.batchSize;++I){let k=I*y,N=I*n[0];for(let E=0;E<o.inChannels;++E)for(let M=0;M<o.outHeight;++M){let R=M*i-c,B=Math.max(0,R),U=Math.min(o.inHeight,l+R),W=k+M*T;for(let K=0;K<o.outWidth;++K){let H=K*a-d,V=Math.max(0,H),j=Math.min(o.inWidth,m+H),ee=f,Z=0,te=0;for(let ie=B;ie<U;ie+=u){let se=N+ie*n[1];for(let ue=V;ue<j;ue+=p){let ye=se+ue*n[2],fe=r[ye+E];s==="max"&&fe>ee?ee=fe:s==="avg"&&(Z+=fe,te++)}if(isNaN(ee))break}let oe=W+K*x+E;g[oe]=s==="avg"?Z/te:ee}}}return h}function aT(r,e,t,n,o=!1,s=!1){let i=ke(n.outShape,"int32"),a=n.strideHeight,u=n.strideWidth,p=n.dilationHeight,l=n.dilationWidth,m=n.effectiveFilterHeight,c=n.effectiveFilterWidth,d=n.padInfo.top,f=n.padInfo.left,h=ke(e,t,r);for(let g=0;g<n.batchSize;++g)for(let y=0;y<n.inChannels;++y)for(let T=0;T<n.outHeight;++T){let x=T*a-d,I=x;for(;I<0;)I+=p;let k=Math.min(n.inHeight,m+x);for(let N=0;N<n.outWidth;++N){let E=N*u-f,M=E;for(;M<0;)M+=l;let R=Math.min(n.inWidth,c+E),B=Number.NEGATIVE_INFINITY,U=-1;for(let W=I;W<k;W+=p){let K=W-x;for(let H=M;H<R;H+=l){let V=H-E,j=h.get(g,W,H,y);j>B&&(B=j,o?U=s?((g*n.inHeight+W)*n.inWidth+H)*n.inChannels+y:(W*n.inWidth+H)*n.inChannels+y:U=K*c+V)}}i.set(U,g,T,N,y)}}return i}function iT(r,e,t,n,o,s){let i=o.strideDepth,a=o.strideHeight,u=o.strideWidth,p=o.dilationDepth,l=o.dilationHeight,m=o.dilationWidth,c=o.effectiveFilterDepth,d=o.effectiveFilterHeight,f=o.effectiveFilterWidth,h=o.padInfo.front,g=o.padInfo.top,y=o.padInfo.left,T=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=ke(o.outShape,t),I=x.values,k=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],N=o.outShape[2]*o.outShape[3]*o.outShape[4],E=o.outShape[3]*o.outShape[4],M=o.outShape[4];for(let R=0;R<o.batchSize;++R){let B=R*k,U=R*n[0];for(let W=0;W<o.inChannels;++W)for(let K=0;K<o.outDepth;++K){let H=K*i-h,V=H;for(;V<0;)V+=p;let j=Math.min(o.inDepth,c+H),ee=B+K*N;for(let Z=0;Z<o.outHeight;++Z){let te=Z*a-g,oe=te;for(;oe<0;)oe+=l;let ie=Math.min(o.inHeight,d+te),se=ee+Z*E;for(let ue=0;ue<o.outWidth;++ue){let ye=ue*u-y,fe=ye;for(;fe<0;)fe+=m;let Te=Math.min(o.inWidth,f+ye),Ae=se+ue*M,Le=T,Be=0,Ue=0;for(let ft=V;ft<j;ft+=p){let xt=U+ft*n[1];for(let wt=oe;wt<ie;wt+=l){let Ot=xt+wt*n[2];for(let ct=fe;ct<Te;ct+=m){let ot=Ot+ct*n[3],zt=r[ot+W];if(s==="max"&&zt>Le?Le=zt:s==="avg"&&(Be+=zt,Ue++),isNaN(Le))break}if(isNaN(Le))break}if(isNaN(Le))break}let Y=Ae+W;I[Y]=s==="avg"?Be/Ue:Le}}}}return x}function SL(r,e){let t=ke(e.outShape,"int32"),n=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,a=e.dilationHeight,u=e.dilationWidth,p=e.effectiveFilterDepth,l=e.effectiveFilterHeight,m=e.effectiveFilterWidth,c=e.padInfo.front,d=e.padInfo.top,f=e.padInfo.left;for(let h=0;h<e.batchSize;++h)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){let T=y*n-c,x=T;for(;x<0;)x+=i;let I=Math.min(e.inDepth,p+T);for(let k=0;k<e.outHeight;++k){let N=k*o-d,E=N;for(;E<0;)E+=a;let M=Math.min(e.inHeight,l+N);for(let R=0;R<e.outWidth;++R){let B=R*s-f,U=B;for(;U<0;)U+=u;let W=Math.min(e.inWidth,m+B),K=Number.NEGATIVE_INFINITY,H=-1;for(let V=x;V<I;V+=i){let j=V-T;for(let ee=E;ee<M;ee+=a){let Z=ee-N;for(let te=U;te<W;te+=u){let oe=te-B,ie=r.get(h,V,ee,te,g);ie>=K&&(K=ie,H=j*l*m+Z*l+oe)}}}t.set(H,h,y,k,R,g)}}}return t}function Kee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;ne(o,"avgPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,p=1;b.assert(C.eitherStridesOrDilationsAreOne(i,p),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let l=C.computePool2DInfo(o.shape,s,i,p,a,u),m;if(l.filterWidth===1&&l.filterHeight===1&&b.arraysEqual(l.inShape,l.outShape))m=Xr({inputs:{x:o},backend:t});else{let c=t.data.get(o.dataId).values,d=b.computeStrides(o.shape),f=Dc(c,o.shape,o.dtype,d,l,"avg");m=t.makeTensorInfo(l.outShape,o.dtype,f.values)}return m}var vL={kernelName:io,backendName:"cpu",kernelFunc:Kee};function Vee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u,dataFormat:p}=n;ne(o,"avgPool3d");let l=C.computePool3DInfo(o.shape,s,i,1,a,u,p),m=t.data.get(o.dataId).values,c=iT(m,o.shape,o.dtype,b.computeStrides(o.shape),l,"avg");return t.makeTensorInfo(c.shape,"float32",c.values)}var AL={kernelName:Fu,backendName:"cpu",kernelFunc:Vee};function Hee(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:i,strides:a,pad:u,dimRoundingMode:p}=n;ne([o,s],"avgPool3DGrad");let l=C.computePool3DInfo(s.shape,i,a,1,u,p),m=l.strideDepth,c=l.strideHeight,d=l.strideWidth,f=l.filterDepth,h=l.filterHeight,g=l.filterWidth,y=l.dilationDepth,T=l.dilationHeight,x=l.dilationWidth,I=l.effectiveFilterDepth,k=l.effectiveFilterHeight,N=l.effectiveFilterWidth,E=I-1-l.padInfo.front,M=N-1-l.padInfo.left,R=k-1-l.padInfo.top,B=ke(s.shape,"float32"),U=1/(f*h*g),W=t.bufferSync(o);for(let K=0;K<l.batchSize;++K)for(let H=0;H<l.inChannels;++H)for(let V=0;V<l.inDepth;++V)for(let j=0;j<l.inHeight;++j)for(let ee=0;ee<l.inWidth;++ee){let Z=V-E,te=j-R,oe=ee-M,ie=0;for(let se=0;se<I;se+=y){let ue=(Z+se)/m;if(!(ue<0||ue>=l.outDepth||Math.floor(ue)!==ue))for(let ye=0;ye<k;ye+=T){let fe=(te+ye)/c;if(!(fe<0||fe>=l.outHeight||Math.floor(fe)!==fe))for(let Te=0;Te<N;Te+=x){let Ae=(oe+Te)/d;if(Ae<0||Ae>=l.outWidth||Math.floor(Ae)!==Ae)continue;ie+=W.get(K,ue,fe,Ae,H)}}}B.set(ie*U,K,V,j,ee,H)}return t.makeTensorInfo(B.shape,B.dtype,B.values)}var wL={kernelName:nm,backendName:"cpu",kernelFunc:Hee};function qee(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,i=s;ne([o,s],"avgPoolGrad");let{filterSize:a,strides:u,pad:p}=n,l=C.computePool2DInfo(i.shape,a,u,1,p),m=l.strideHeight,c=l.strideWidth,d=l.filterHeight,f=l.filterWidth,h=l.dilationHeight,g=l.dilationWidth,y=l.effectiveFilterHeight,T=l.effectiveFilterWidth,x=T-1-l.padInfo.left,I=y-1-l.padInfo.top,k=ke(i.shape,"float32"),N=1/(d*f),E=t.data.get(o.dataId).values,M=ke(o.shape,"float32",E);for(let R=0;R<l.batchSize;++R)for(let B=0;B<l.inChannels;++B)for(let U=0;U<l.inHeight;++U)for(let W=0;W<l.inWidth;++W){let K=U-I,H=W-x,V=0;for(let j=0;j<y;j+=h){let ee=(K+j)/m;if(!(ee<0||ee>=l.outHeight||Math.floor(ee)!==ee))for(let Z=0;Z<T;Z+=g){let te=(H+Z)/c;if(te<0||te>=l.outWidth||Math.floor(te)!==te)continue;V+=M.get(R,ee,te,B)}}k.set(V*N,R,U,W,B)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}var NL={kernelName:rm,backendName:"cpu",kernelFunc:qee};function jee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,scale:s,offset:i,mean:a,variance:u}=e;b.assert(a.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(s==null||a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ne([o,a,u,s,i],"batchNorm");let{varianceEpsilon:p}=n;p==null&&(p=.001);let l=t.data.get(o.dataId).values,m=t.data.get(a.dataId).values,c=t.data.get(u.dataId).values,d=s?t.data.get(s.dataId).values:new Float32Array([1]),f=i?t.data.get(i.dataId).values:new Float32Array([0]),h=new Float32Array(l.length),g=f.length,y=d.length,T=c.length,x=m.length,I=0,k=0,N=0,E=0;for(let M=0;M<l.length;++M)h[M]=f[I++]+(l[M]-m[k++])*d[N++]/Math.sqrt(c[E++]+p),I>=g&&(I=0),k>=x&&(k=0),N>=y&&(N=0),E>=T&&(E=0);return t.makeTensorInfo(o.shape,o.dtype,h)}var DL={kernelName:Io,backendName:"cpu",kernelFunc:jee};function Xee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:i}=n;ne([o],"batchToSpaceND");let a=s.reduce((y,T)=>y*T),u=C.getReshaped(o.shape,s,a),p=C.getPermuted(u.length,s.length),l=C.getReshapedPermuted(o.shape,s,a),m=C.getSliceBeginCoords(i,s.length),c=C.getSliceSize(l,i,s.length),d=nt({inputs:{x:o},backend:t,attrs:{shape:u}}),f=ar({inputs:{x:d},backend:t,attrs:{perm:p}}),h=nt({inputs:{x:f},backend:t,attrs:{shape:l}}),g=js({inputs:{x:h},backend:t,attrs:{begin:m,size:c}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),g}var PL={kernelName:ms,backendName:"cpu",kernelFunc:Xee};function Yee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:i}=n,a=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,p=Sc(a,u,s.dtype,s.shape,i);return t.makeTensorInfo([i],s.dtype,p)}var EL={kernelName:om,backendName:"cpu",kernelFunc:Yee};function Qee(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,a=C.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var ML={kernelName:sm,backendName:"cpu",kernelFunc:Qee};var Zee=Re(Un,(r,e)=>{let t=e;return r>t.clipValueMax?t.clipValueMax:r<t.clipValueMin?t.clipValueMin:r}),FL={kernelName:Un,backendName:"cpu",kernelFunc:Zee};var Jee=r=>{let{x:e}=r.inputs,t=r.backend,n=new Float32Array(b.sizeFromShape(e.shape)),o=t.data.get(e.dataId),s=o.complexTensorInfos.real,i=o.complexTensorInfos.imag,a=t.data.get(s.dataId).values,u=t.data.get(i.dataId).values;for(let p=0;p<a.length;p++){let l=a[p],m=u[p];n[p]=Math.hypot(l,m)}return t.makeOutput(n,e.shape,"float32")},RL={kernelName:Lu,backendName:"cpu",kernelFunc:Jee};function yi(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.imag,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var LL={kernelName:Ou,backendName:"cpu",kernelFunc:yi};function cp(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],i=C.computeOutShape(e.map(h=>h.shape),s);if(b.sizeFromShape(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);let a=e.filter(h=>b.sizeFromShape(h.shape)>0);if(a.length===1)return Xr({inputs:{x:a[0]},backend:t});let u=a.map(h=>h.shape);if(C.assertParamsConsistent(u,s),a[0].dtype==="complex64"){let h=a.map(I=>Vs({inputs:{input:I},backend:t})),g=a.map(I=>yi({inputs:{input:I},backend:t})),y=cp({inputs:h,backend:t,attrs:{axis:s}}),T=cp({inputs:g,backend:t,attrs:{axis:s}}),x=kr({inputs:{real:y,imag:T},backend:t});return h.forEach(I=>t.disposeIntermediateTensorInfo(I)),g.forEach(I=>t.disposeIntermediateTensorInfo(I)),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(T),x}let p=a.map(h=>{let g=b.sizeFromShape(h.shape.slice(s));return nt({inputs:{x:h},backend:t,attrs:{shape:[-1,g]}})}),l=p.map(h=>({vals:t.data.get(h.dataId).values,shape:h.shape}));i=C.computeOutShape(p.map(h=>h.shape),1);let m=p[0].shape[0]===1,c=Il(l,i,e[0].dtype,m),d=C.computeOutShape(a.map(h=>h.shape),s),f=t.makeTensorInfo(d,e[0].dtype,c);return p.forEach(h=>t.disposeIntermediateTensorInfo(h)),f}var _L={kernelName:cs,backendName:"cpu",kernelFunc:cp};function Qv(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dataFormat:u,dilations:p,dimRoundingMode:l}=n;ne([o,s],"conv2d");let m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,s.shape,i,p,a,l,!1,m),d=c.filterHeight,f=c.filterWidth,h=c.dilationHeight,g=c.dilationWidth,y=c.padInfo.left,T=c.padInfo.top,x=c.dataFormat==="channelsLast",I=new gt(c.outShape,o.dtype),k=b.computeStrides(o.shape),N=b.computeStrides(s.shape),E=k[0],M=x?k[1]:k[2],R=x?k[2]:1,B=x?1:k[1],U=I.strides[0],W=x?I.strides[1]:I.strides[2],K=x?I.strides[2]:1,H=x?1:I.strides[1],V=t.data.get(o.dataId).values,j=t.data.get(s.dataId).values,ee=I.values;for(let Z=0;Z<c.batchSize;++Z){let te=Z*E,oe=Z*U;for(let ie=0;ie<c.outHeight;++ie){let se=oe+ie*W,ue=ie*c.strideHeight-T;for(let ye=0;ye<d;++ye){let fe=ue+ye*h;if(fe<0||fe>=c.inHeight)continue;let Te=ye*N[0],Ae=te+fe*M;for(let Le=0;Le<c.outWidth;++Le){let Be=se+Le*K,Ue=Le*c.strideWidth-y;for(let Y=0;Y<f;++Y){let ft=Ue+Y*g;if(ft<0||ft>=c.inWidth)continue;let xt=Te+Y*N[1],wt=Ae+ft*R,Ot=xt;for(let ct=0;ct<c.inChannels;++ct){let ot=V[wt+ct*B];for(let zt=0;zt<c.outChannels;++zt)ee[Be+zt*H]+=ot*j[Ot+zt];Ot+=c.outChannels}}}}}}return t.makeTensorInfo(I.shape,I.dtype,ee)}var BL={kernelName:lo,backendName:"cpu",kernelFunc:Qv};function ete(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,pad:a,dataFormat:u,dimRoundingMode:p,filterShape:l}=n;ne([o,s],"conv2dBackpropFilter");let m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,l,i,1,a,p,!1,m),{strideHeight:d,strideWidth:f,filterHeight:h,filterWidth:g}=c,y=c.dataFormat==="channelsLast",T=new gt(c.filterShape,"float32"),x=c.padInfo.left,I=c.padInfo.top,k=t.data.get(o.dataId).values,N=t.data.get(s.dataId).values,E=new gt(o.shape,o.dtype,k),M=new gt(s.shape,s.dtype,N);for(let R=0;R<h;++R){let B=Math.max(0,Math.ceil((I-R)/d)),U=Math.min(c.outHeight,(c.inHeight+I-R)/d);for(let W=0;W<g;++W){let K=Math.max(0,Math.ceil((x-W)/f)),H=Math.min(c.outWidth,(c.inWidth+x-W)/f);for(let V=0;V<c.inChannels;++V)for(let j=0;j<c.outChannels;++j){let ee=0;for(let Z=0;Z<c.batchSize;++Z)for(let te=B;te<U;++te){let oe=R+te*d-I;for(let ie=K;ie<H;++ie){let se=W+ie*f-x;y?ee+=E.get(Z,oe,se,V)*M.get(Z,te,ie,j):ee+=E.get(Z,V,oe,se)*M.get(Z,j,te,ie)}}T.set(ee,R,W,V,j)}}}return t.makeTensorInfo(T.shape,T.dtype,T.values)}var $L={kernelName:am,backendName:"cpu",kernelFunc:ete};function tte(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:i,strides:a,pad:u,dataFormat:p,dimRoundingMode:l}=n;ne([o,s],"conv2dBackpropInput");let m=b.computeStrides(s.shape),c=b.computeStrides(o.shape),d=C.convertConv2DDataFormat(p),f=C.computeConv2DInfo(i,s.shape,a,1,u,l,!1,d),h=new gt(f.inShape,"float32"),g=h.values,y=t.data.get(o.dataId).values,T=t.data.get(s.dataId).values,[x,I,k]=m,{batchSize:N,filterHeight:E,filterWidth:M,inChannels:R,inHeight:B,inWidth:U,outChannels:W,outHeight:K,outWidth:H,strideHeight:V,strideWidth:j}=f;d=f.dataFormat;let ee=E-1-f.padInfo.top,Z=M-1-f.padInfo.left,te=d==="channelsLast",oe=h.strides[0],ie=te?h.strides[1]:h.strides[2],se=te?h.strides[2]:1,ue=te?1:h.strides[1],ye=c[0],fe=te?c[1]:c[2],Te=te?c[2]:1,Ae=te?1:c[1];for(let Le=0;Le<N;++Le)for(let Be=0;Be<R;++Be)for(let Ue=0;Ue<B;++Ue){let Y=Ue-ee,ft=Math.max(0,Math.ceil(Y/V)),xt=Math.min(K,(E+Y)/V);for(let wt=0;wt<U;++wt){let Ot=wt-Z,ct=Math.max(0,Math.ceil(Ot/j)),ot=Math.min(H,(M+Ot)/j),zt=0;for(let ir=ft;ir<xt;++ir){let os=ir*V-Y;for(let $r=ct;$r<ot;++$r){let ss=$r*j-Ot,Cn=ye*Le+fe*ir+Te*$r,Bn=x*(E-1-os)+I*(M-1-ss)+k*Be;for(let Or=0;Or<W;++Or){let ro=y[Cn+Ae*Or],fr=T[Bn+Or];zt+=ro*fr}}}let _n=oe*Le+ie*Ue+se*wt+ue*Be;g[_n]=zt}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}var OL={kernelName:mo,backendName:"cpu",kernelFunc:tte};function rte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u}=n;ne([o,s],"conv3d");let p=C.computeConv3DInfo(o.shape,s.shape,i,u,a),{filterDepth:l,filterHeight:m,filterWidth:c,dilationDepth:d,dilationHeight:f,dilationWidth:h,padInfo:g}=p,y=g.front,T=g.left,x=g.top,I=new gt(p.outShape,o.dtype),k=t.data.get(o.dataId).values,N=t.data.get(s.dataId).values,E=I.values,M=b.computeStrides(o.shape),R=b.computeStrides(s.shape);for(let B=0;B<p.batchSize;++B){let U=B*M[0],W=B*I.strides[0];for(let K=0;K<p.outDepth;++K){let H=W+K*I.strides[1],V=K*p.strideDepth-y;for(let j=0;j<l;++j){let ee=V+j*d;if(ee<0||ee>=p.inDepth)continue;let Z=j*R[0],te=U+ee*M[1];for(let oe=0;oe<p.outHeight;++oe){let ie=H+oe*I.strides[2],se=oe*p.strideHeight-x;for(let ue=0;ue<m;++ue){let ye=se+ue*f;if(ye<0||ye>=p.inHeight)continue;let fe=Z+ue*R[1],Te=te+ye*M[2];for(let Ae=0;Ae<p.outWidth;++Ae){let Le=ie+Ae*p.outChannels,Be=Ae*p.strideWidth-T;for(let Ue=0;Ue<c;++Ue){let Y=Be+Ue*h;if(Y<0||Y>=p.inWidth)continue;let ft=fe+Ue*R[2],xt=Te+Y*p.inChannels,wt=ft;for(let Ot=0;Ot<p.inChannels;++Ot){let ct=k[xt+Ot];for(let ot=0;ot<p.outChannels;++ot)E[Le+ot]+=ct*N[wt+ot];wt+=p.outChannels}}}}}}}}return t.makeTensorInfo(I.shape,I.dtype,I.values)}var zL={kernelName:_u,backendName:"cpu",kernelFunc:rte};function nte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,pad:a,filterShape:u}=n;ne([o,s],"conv3dBackpropFilterV2");let p=b.computeStrides(o.shape),l=b.computeStrides(s.shape),m=C.computeConv3DInfo(o.shape,u,i,1,a),c=m.strideDepth,d=m.strideHeight,f=m.strideWidth,h=m.filterDepth,g=m.filterHeight,y=m.filterWidth,T=new gt(m.filterShape,"float32"),x=T.values,[I,k,N,E]=T.strides,M=t.data.get(s.dataId).values,[R,B,U,W]=l,K=t.data.get(o.dataId).values,[H,V,j,ee]=p,Z=m.padInfo.front,te=m.padInfo.left,oe=m.padInfo.top;for(let ie=0;ie<h;++ie){let se=Math.max(0,Math.ceil((Z-ie)/c)),ue=Math.min(m.outDepth,(m.inDepth+Z-ie)/c),ye=ie*I;for(let fe=0;fe<g;++fe){let Te=Math.max(0,Math.ceil((oe-fe)/d)),Ae=Math.min(m.outHeight,(m.inHeight+oe-fe)/d),Le=fe*k+ye;for(let Be=0;Be<y;++Be){let Ue=Math.max(0,Math.ceil((te-Be)/f)),Y=Math.min(m.outWidth,(m.inWidth+te-Be)/f),ft=Be*N+Le;for(let xt=0;xt<m.inChannels;++xt){let wt=xt*E+ft;for(let Ot=0;Ot<m.outChannels;++Ot){let ct=0;for(let ot=0;ot<m.batchSize;++ot){let zt=ot*H,_n=ot*R;for(let ir=se;ir<ue;++ir){let $r=(ie+ir*c-Z)*V+zt,ss=ir*B+_n;for(let Cn=Te;Cn<Ae;++Cn){let Or=(fe+Cn*d-oe)*j+$r,ro=Cn*U+ss;for(let fr=Ue;fr<Y;++fr){let is=(Be+fr*f-te)*ee+Or,Tp=fr*W+ro;ct+=K[is+xt]*M[Tp+Ot]}}}}x[wt+Ot]=ct}}}}}return t.makeTensorInfo(T.shape,T.dtype,T.values)}var GL={kernelName:im,backendName:"cpu",kernelFunc:nte};function ote(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:i,strides:a,inputShape:u}=n;ne([o],"conv3dBackpropInputV2");let p=b.computeStrides(o.shape),l=b.computeStrides(s.shape),m=C.computeConv3DInfo(u,s.shape,a,1,i),c=new gt(m.inShape,"float32"),d=c.values,[f,h,g,y]=c.strides,T=t.data.get(o.dataId).values,[x,I,k,N]=p,E=t.data.get(s.dataId).values,[M,R,B,U]=l,{batchSize:W,filterDepth:K,filterHeight:H,filterWidth:V,inChannels:j,inDepth:ee,inHeight:Z,inWidth:te,outChannels:oe,outDepth:ie,outHeight:se,outWidth:ue,strideDepth:ye,strideHeight:fe,strideWidth:Te}=m,Ae=K-1-m.padInfo.front,Le=H-1-m.padInfo.top,Be=V-1-m.padInfo.left;for(let Ue=0;Ue<W;++Ue)for(let Y=0;Y<j;++Y)for(let ft=0;ft<ee;++ft){let xt=ft-Ae,wt=Math.max(0,Math.ceil(xt/ye)),Ot=Math.min(ie,(K+xt)/ye);for(let ct=0;ct<Z;++ct){let ot=ct-Le,zt=Math.max(0,Math.ceil(ot/fe)),_n=Math.min(se,(H+ot)/fe);for(let ir=0;ir<te;++ir){let os=ir-Be,$r=Math.max(0,Math.ceil(os/Te)),ss=Math.min(ue,(V+os)/Te),Cn=0;for(let Bn=wt;Bn<Ot;++Bn){let Or=Bn*ye-xt;for(let ro=zt;ro<_n;++ro){let fr=ro*fe-ot;for(let as=$r;as<ss;++as){let is=as*Te-os,Tp=x*Ue+I*Bn+k*ro+N*as,Yc=M*(K-1-Or)+R*(H-1-fr)+B*(V-1-is)+U*Y;for(let $n=0;$n<oe;++$n){let Gl=T[Tp+$n],Qc=E[Yc+$n];Cn+=Gl*Qc}}}}d[f*Ue+h*ft+g*ct+y*ir+Y]=Cn}}}return t.makeTensorInfo(c.shape,c.dtype,c.values)}var UL={kernelName:um,backendName:"cpu",kernelFunc:ote};var ste=Re(co,r=>Math.cos(r)),WL={kernelName:co,backendName:"cpu",kernelFunc:ste};var ate=Re(fo,r=>Math.cosh(r)),KL={kernelName:fo,backendName:"cpu",kernelFunc:ate};function ite(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:i}=e,{cropSize:a,method:u,extrapolationValue:p}=n,[l,m,c,d]=o.shape,f=s.shape[0],[h,g]=a,y=ke([f,h,g,d],"float32"),T=t.data.get(s.dataId).values,x=t.data.get(i.dataId).values,I=t.data.get(o.dataId).values,k=b.computeStrides(o.shape),N=b.computeStrides(y.shape);for(let E=0;E<f;E++){let M=E*4,R=T[M],B=T[M+1],U=T[M+2],W=T[M+3],K=x[E];if(K>=l)continue;let H=h>1?(U-R)*(m-1)/(h-1):0,V=g>1?(W-B)*(c-1)/(g-1):0;for(let j=0;j<h;j++){let ee=h>1?R*(m-1)+j*H:.5*(R+U)*(m-1);if(ee<0||ee>m-1){for(let Z=0;Z<g;Z++)for(let te=0;te<d;te++){let oe=te+Z*N[2]+j*N[1]+E*N[0];y.values[oe]=p}continue}if(u==="bilinear"){let Z=Math.floor(ee),te=Math.ceil(ee),oe=ee-Z;for(let ie=0;ie<g;ie++){let se=g>1?B*(c-1)+ie*V:.5*(B+W)*(c-1);if(se<0||se>c-1){for(let Te=0;Te<d;Te++){let Ae=Te+ie*N[2]+j*N[1]+E*N[0];y.values[Ae]=p}continue}let ue=Math.floor(se),ye=Math.ceil(se),fe=se-ue;for(let Te=0;Te<d;Te++){let Ae=Te+ue*k[2]+Z*k[1]+K*k[0],Le=I[Ae];Ae=Te+ye*k[2]+Z*k[1]+K*k[0];let Be=I[Ae];Ae=Te+ue*k[2]+te*k[1]+K*k[0];let Ue=I[Ae];Ae=Te+ye*k[2]+te*k[1]+K*k[0];let Y=I[Ae],ft=Le+(Be-Le)*fe,xt=Ue+(Y-Ue)*fe;Ae=Te+ie*N[2]+j*N[1]+E*N[0],y.values[Ae]=ft+(xt-ft)*oe}}}else for(let Z=0;Z<g;++Z){let te=g>1?B*(c-1)+Z*V:.5*(B+W)*(c-1);if(te<0||te>c-1){for(let se=0;se<d;se++){let ue=se+Z*N[2]+j*N[1]+E*N[0];y.values[ue]=p}continue}let oe=Math.round(te),ie=Math.round(ee);for(let se=0;se<d;se++){let ue=se+oe*k[2]+ie*k[1]+K*k[0],ye=se+Z*N[2]+j*N[1]+E*N[0];y.values[ye]=I[ue]}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}var VL={kernelName:ra,backendName:"cpu",kernelFunc:ite};function ute(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:i,reverse:a}=n;ne(o,"cumsum");let u=C.getAxesPermutation([s],o.shape.length),p=o;u!=null&&(p=ar({inputs:{x:o},backend:t,attrs:{perm:u}}));let l=C.getInnerMostAxes(1,o.shape.length)[0];if(l!==p.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${p.shape.length-1} but got axis=${l}`);let m=Ut(p.dtype,"int32"),c=b.makeZerosTypedArray(b.sizeFromShape(p.shape),m),d=t.data.get(p.dataId).values,f=p.shape[p.shape.length-1],h=a?(y,T)=>y+f-T-1:(y,T)=>y+T;for(let y=0;y<d.length;y+=f)for(let T=0;T<f;T++){let x=h(y,T);if(T===0)c[x]=i?0:d[x];else{let I=h(y,T-1);c[x]=i?d[I]+c[I]:d[x]+c[I]}}let g=t.makeTensorInfo(p.shape,m,c);if(u!=null){let y=C.getUndoAxesPermutation(u),T=ar({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(p),T}return g}var HL={kernelName:ta,backendName:"cpu",kernelFunc:ute};function pte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:i,binaryOutput:a}=n;if(o.shape.length===1){let u=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,l=Sc(u,p,s.dtype,s.shape,i);return t.makeTensorInfo([i],s.dtype,l)}else if(o.shape.length===2){let u=t.bufferSync(o),p=t.bufferSync(s),l=Hy(u,p,i,a);return t.makeTensorInfo(l.shape,s.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var qL={kernelName:pm,backendName:"cpu",kernelFunc:pte};function lte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:i}=n;b.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let a=o.shape[0],u=o.shape[1],p=o.shape[2],l=o.shape[3],m=u*s,c=p*s,d=l/(s*s),f=t.data.get(o.dataId).values,h=new Float32Array(a*m*c*d),g=0;for(let y=0;y<a;++y)for(let T=0;T<m;++T){let x=Math.floor(T/s),I=T%s;for(let k=0;k<c;++k){let N=Math.floor(k/s),E=k%s,M=(I*s+E)*d;for(let R=0;R<d;++R){let U=R+M+l*(N+p*(x+u*y));h[g++]=f[U]}}}return t.makeTensorInfo([a,m,c,d],o.dtype,h)}var jL={kernelName:na,backendName:"cpu",kernelFunc:lte};function Zv(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u,dimRoundingMode:p}=n;ne([o,s],"depthwiseConv2DNative");let l=b.computeStrides(o.shape),m=b.computeStrides(s.shape),c=u;c==null&&(c=[1,1]),b.assert(C.eitherStridesOrDilationsAreOne(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let d=C.computeConv2DInfo(o.shape,s.shape,i,c,a,p,!0),{filterHeight:f,filterWidth:h,dilationHeight:g,dilationWidth:y,padInfo:T}=d,x=T.left,I=T.top,k=d.outChannels/d.inChannels,N=new gt(d.outShape,o.dtype),E=t.data.get(o.dataId).values,M=t.data.get(s.dataId).values,R=N.values;for(let B=0;B<d.batchSize;++B){let U=B*l[0],W=B*N.strides[0];for(let K=0;K<d.outHeight;++K){let H=W+K*N.strides[1],V=K*d.strideHeight-I;for(let j=0;j<f;++j){let ee=V+j*g;if(ee<0||ee>=d.inHeight)continue;let Z=j*m[0],te=U+ee*l[1];for(let oe=0;oe<d.outWidth;++oe){let ie=H+oe*N.strides[2],se=oe*d.strideWidth-x;for(let ue=0;ue<h;++ue){let ye=se+ue*y;if(ye<0||ye>=d.inWidth)continue;let fe=Z+ue*m[1],Te=te+ye*d.inChannels,Ae=ie,Le=fe;for(let Be=0;Be<d.inChannels;++Be){let Ue=E[Te+Be];for(let Y=0;Y<k;++Y)R[Ae+Y]+=Ue*M[Le+Y];Ae+=k,Le+=k}}}}}}return t.makeTensorInfo(N.shape,N.dtype,N.values)}var XL={kernelName:ho,backendName:"cpu",kernelFunc:Zv};function mte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:p,filterShape:l}=n;ne([o,s],"depthwiseConv2dNativeBackpropFilter");let m=C.computeConv2DInfo(o.shape,l,i,a,u,p,!0),{strideHeight:c,strideWidth:d,filterHeight:f,filterWidth:h}=m,g=new gt(m.filterShape,"float32"),y=m.padInfo.left,T=m.padInfo.top,x=m.outChannels/m.inChannels,I=t.data.get(o.dataId).values,k=new gt(o.shape,o.dtype,I),N=t.data.get(s.dataId).values,E=new gt(s.shape,s.dtype,N);for(let M=0;M<f;++M){let R=Math.max(0,Math.ceil((T-M)/c)),B=Math.min(m.outHeight,(m.inHeight+T-M)/c);for(let U=0;U<h;++U){let W=Math.max(0,Math.ceil((y-U)/d)),K=Math.min(m.outWidth,(m.inWidth+y-U)/d);for(let H=0;H<m.outChannels;++H){let V=Math.trunc(H/x),j=H%x,ee=0;for(let Z=0;Z<m.batchSize;++Z)for(let te=R;te<B;++te){let oe=M+te*c-T;for(let ie=W;ie<K;++ie){let se=U+ie*d-y;ee+=k.get(Z,oe,se,V)*E.get(Z,te,ie,H)}}g.set(ee,M,U,V,j)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}var YL={kernelName:lm,backendName:"cpu",kernelFunc:mte};function cte(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:p,inputShape:l}=n;ne([o,s],"depthwiseConv2DNativeBackpropInput");let m=b.computeStrides(o.shape),c=b.computeStrides(s.shape),d=C.computeConv2DInfo(l,s.shape,i,a,u,p,!0),f=new gt(d.inShape,"float32"),h=f.values,[g,y,T]=f.strides,x=t.data.get(o.dataId).values,[I,k,N]=m,E=t.data.get(s.dataId).values,[M,R,B]=c,{batchSize:U,filterHeight:W,filterWidth:K,inChannels:H,inHeight:V,inWidth:j,outChannels:ee,outHeight:Z,outWidth:te,strideHeight:oe,strideWidth:ie}=d,se=W-1-d.padInfo.top,ue=K-1-d.padInfo.left,ye=ee/H;for(let fe=0;fe<U;++fe)for(let Te=0;Te<H;++Te)for(let Ae=0;Ae<V;++Ae){let Le=Ae-se,Be=Math.max(0,Math.ceil(Le/oe)),Ue=Math.min(Z,(W+Le)/oe);for(let Y=0;Y<j;++Y){let ft=Y-ue,xt=Math.max(0,Math.ceil(ft/ie)),wt=Math.min(te,(K+ft)/ie),Ot=0;for(let ct=Be;ct<Ue;++ct){let ot=ct*oe-Le;for(let zt=xt;zt<wt;++zt){let _n=zt*ie-ft,ir=I*fe+k*ct+N*zt,os=M*(W-1-ot)+R*(K-1-_n)+B*Te;for(let $r=0;$r<ye;++$r){let ss=Te*ye+$r,Cn=x[ir+ss],Bn=E[os+$r];Ot+=Cn*Bn}}}h[g*fe+y*Ae+T*Y+Te]=Ot}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}var QL={kernelName:mm,backendName:"cpu",kernelFunc:cte};function dte(r){let{inputs:e,backend:t}=r,{x:n}=e,o=b.sizeFromShape(n.shape),s=t.data.get(n.dataId).values,i=ke([o,o],n.dtype),a=i.values;for(let p=0;p<s.length;p++)a[p*o+p]=s[p];let u=[...n.shape,...n.shape];return t.makeTensorInfo(u,i.dtype,i.values)}var ZL={kernelName:cm,backendName:"cpu",kernelFunc:dte};var JL={kernelName:Bu,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o}=r,{strides:s,pad:i,dilations:a}=t,u=e,p=u.data.get(n.dataId).values,l=n.shape.length,m=u.data.get(o.dataId).values,c=o.shape.length,{batchSize:d,inHeight:f,inWidth:h,inChannels:g,outHeight:y,outWidth:T,padInfo:x,strideHeight:I,strideWidth:k,filterHeight:N,filterWidth:E,dilationHeight:M,dilationWidth:R,outShape:B}=C.computeDilation2DInfo(n.shape,o.shape,s,i,"NHWC",a),U=b.sizeFromShape(B),W=B.length,K=b.getArrayFromDType(n.dtype,U);for(let V=0;V<d;++V)for(let j=0;j<y;++j){let ee=j*I-x.top;for(let Z=0;Z<T;++Z){let te=Z*k-x.left;for(let oe=0;oe<g;++oe){let ie=Number.MIN_SAFE_INTEGER;for(let ue=0;ue<N;++ue){let ye=ee+ue*M;if(ye>=0&&ye<f)for(let fe=0;fe<E;++fe){let Te=te+fe*R;if(Te>=0&&Te<h){let Ae=b.locToIndex([V,ye,Te,oe],l,b.computeStrides(n.shape)),Le=b.locToIndex([ue,fe,oe],c,b.computeStrides(o.shape)),Be=p[Ae]+m[Le];Be>ie&&(ie=Be)}}}let se=b.locToIndex([V,j,Z,oe],W,b.computeStrides(B));K[se]=ie}}}return{dataId:u.write(b.toTypedArray(K,n.dtype),B,n.dtype),shape:B,dtype:n.dtype}}};var e_={kernelName:fd,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:i,pad:a,dilations:u}=t,p=e,l=b.toNestedArray(n.shape,p.data.get(n.dataId).values),m=b.toNestedArray(o.shape,p.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:y,padInfo:T,strideHeight:x,strideWidth:I,filterHeight:k,filterWidth:N,dilationHeight:E,dilationWidth:M,outShape:R}=C.computeDilation2DInfo(n.shape,o.shape,i,a,"NHWC",u);b.assert(s.rank===R.length,()=>`Error in ${fd}, dy must have the same rank as output ${R.length}, but got ${s.rank}`);let B=b.toNestedArray(R,p.data.get(s.dataId).values),U=b.makeZerosNestedTypedArray(o.shape,o.dtype);for(let K=0;K<c;++K)for(let H=0;H<g;++H){let V=H*x-T.top;for(let j=0;j<y;++j){let ee=j*I-T.left;for(let Z=0;Z<h;++Z){let te=Number.MIN_SAFE_INTEGER,oe=0,ie=0;for(let se=0;se<k;++se){let ue=V+se*E;if(ue>=0&&ue<d)for(let ye=0;ye<N;++ye){let fe=ee+ye*M;if(fe>=0&&fe<f){let Te=l[K][ue][fe][Z]+m[se][ye][Z];Te>te&&(te=Te,oe=se,ie=ye)}}}U[oe][ie][Z]+=B[K][H][j][Z]}}}return{dataId:p.write(b.toTypedArray(U,n.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var t_={kernelName:dd,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:i,pad:a,dilations:u}=t,p=e,l=b.toNestedArray(n.shape,p.data.get(n.dataId).values),m=b.toNestedArray(o.shape,p.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:y,padInfo:T,strideHeight:x,strideWidth:I,filterHeight:k,filterWidth:N,dilationHeight:E,dilationWidth:M,outShape:R}=C.computeDilation2DInfo(n.shape,o.shape,i,a,"NHWC",u);b.assert(s.rank===R.length,()=>`Error in ${dd}, dy must have the same rank as output ${R.length}, but got ${s.rank}`);let B=b.toNestedArray(R,p.data.get(s.dataId).values),U=b.makeZerosNestedTypedArray(n.shape,n.dtype);for(let K=0;K<c;++K)for(let H=0;H<g;++H){let V=H*x-T.top;for(let j=0;j<y;++j){let ee=j*I-T.left;for(let Z=0;Z<h;++Z){let te=Number.MIN_SAFE_INTEGER,oe=V<0?0:V,ie=ee<0?0:ee;for(let se=0;se<k;++se){let ue=V+se*E;if(ue>=0&&ue<d)for(let ye=0;ye<N;++ye){let fe=ee+ye*M;if(fe>=0&&fe<f){let Te=l[K][ue][fe][Z]+m[se][ye][Z];Te>te&&(te=Te,oe=ue,ie=fe)}}}U[K][oe][ie][Z]+=B[K][H][j][Z]}}}return{dataId:p.write(b.toTypedArray(U,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function Tu(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;ne(o,"sum");let a;o.dtype==="bool"?a=Hs({inputs:{x:o},backend:t,attrs:{dtype:"int32"}}):a=Xr({inputs:{x:o},backend:t});let u=a.shape.length,p=b.parseAxisParam(s,a.shape),l=C.getAxesPermutation(p,u),m=p,c=a;l!=null&&(c=ar({inputs:{x:a},backend:t,attrs:{perm:l}}),m=C.getInnerMostAxes(m.length,u)),C.assertAxesAreInnerMostDims("sum",m,c.shape.length);let[d,f]=C.computeOutAndReduceShapes(c.shape,m),h=C.upcastType(c.dtype,"int32"),g=Cc(t,d,h),y=b.sizeFromShape(f),T=t.data.get(g.dataId).values,x=t.data.get(c.dataId).values;for(let I=0;I<T.length;++I){let k=I*y,N=0;for(let E=0;E<y;++E)N+=x[k+E];T[I]=N}if(i){let I=C.expandShapeToKeepDim(g.shape,p),k=g;g=nt({inputs:{x:g},backend:t,attrs:{shape:I}}),t.disposeIntermediateTensorInfo(k)}return t.disposeIntermediateTensorInfo(a),l!=null&&t.disposeIntermediateTensorInfo(c),g}var r_={kernelName:Wo,backendName:"cpu",kernelFunc:Tu};function fte(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:i,summedDims:a,idDims:u}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(i.length,u,s);let{path:p,steps:l}=C.getEinsumComputePath(a,u),m=l.length,c=null,d=i.length,f=[];for(let h=0;h<m;++h){for(let g of l[h]){let{permutationIndices:y,expandDims:T}=C.getEinsumPermutation(d,u[g]),x;C.isIdentityPermutation(y)?x=s[g]:(x=ar({inputs:{x:s[g]},backend:t,attrs:{perm:y}}),f.push(x));let I=x.shape.slice();for(let k=0;k<T.length;++k)I.splice(T[k],0,1);b.arraysEqual(x.shape,I)||(x=nt({inputs:{x},backend:t,attrs:{shape:I}}),f.push(x)),c===null?c=x:(c=Cl({inputs:{a:x,b:c},backend:t}),f.push(c))}h<m-1&&(p[h]>=0&&(c=Tu({inputs:{x:c},backend:t,attrs:{axis:p[h]-(i.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&t.disposeIntermediateTensorInfo(h);return c}var n_={kernelName:$u,backendName:"cpu",kernelFunc:fte};function hte(r){let{inputs:e,backend:t}=r,{dy:n,y:o}=e;ne([n,o],"eluGrad");let s=new Float32Array(b.sizeFromShape(o.shape)),i=t.data.get(o.dataId).values,a=t.data.get(n.dataId).values;for(let u=0;u<i.length;++u){let p=i[u];p>=1?s[u]=a[u]:s[u]=a[u]*(p+1)}return t.makeTensorInfo(o.shape,"float32",s)}var o_={kernelName:dm,backendName:"cpu",kernelFunc:hte};var gte=C.ERF_P,bte=C.ERF_A1,yte=C.ERF_A2,Tte=C.ERF_A3,xte=C.ERF_A4,Ite=C.ERF_A5,Cte=Re($i,r=>{let e=Math.sign(r),t=Math.abs(r),n=1/(1+gte*t);return e*(1-((((Ite*n+xte)*n+Tte)*n+yte)*n+bte)*n*Math.exp(-t*t))}),s_={kernelName:$i,backendName:"cpu",kernelFunc:Cte};function Pc(r){let{inputs:e,backend:t,attrs:n}=r,{input:o}=e,{dim:s}=n,i=o.shape.length,a=o.shape.slice(),u=s;return s<0&&(b.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),a.splice(u,0,1),nt({inputs:{x:o},backend:t,attrs:{shape:a}})}var a_={kernelName:ds,backendName:"cpu",kernelFunc:Pc};var kte=et((r,e)=>r/e),Kh=st(go,kte),Vh={kernelName:go,backendName:"cpu",kernelFunc:Kh};function uT(r,e,t){let n=r.shape,o=n[0],s=n[1],i=t.data.get(r.dataId),a=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,p=[o,s],l=b.sizeFromShape(p),m=b.getTypedArrayFromDType("float32",l),c=b.getTypedArrayFromDType("float32",l);for(let g=0;g<o;g++){let y=js({inputs:{x:a},backend:t,attrs:{begin:[g,0],size:[1,s]}}),T=js({inputs:{x:u},backend:t,attrs:{begin:[g,0],size:[1,s]}}),x=kr({inputs:{real:y,imag:T},backend:t}),{real:I,imag:k}=Ste(x,e,t),N=C.mergeRealAndImagArrays(I,k);for(let E=0;E<s;E++){let M=C.getComplexWithIndex(N,E);m[g*s+E]=M.real,c[g*s+E]=M.imag}t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(T),t.disposeIntermediateTensorInfo(x)}let d=t.makeTensorInfo(p,"float32",m),f=t.makeTensorInfo(p,"float32",c),h=kr({inputs:{real:d,imag:f},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),h}function Ste(r,e,t){let n=b.sizeFromShape(r.shape),o=t.data.get(r.dataId),s=t.data.get(o.complexTensorInfos.real.dataId).values,i=t.data.get(o.complexTensorInfos.imag.dataId).values;if(vte(n)){let a=Jv(s,i,n,e,t),u=[r.shape[0],r.shape[1]];if(e){let p=t.makeTensorInfo(u,"float32",a.real),l=t.makeTensorInfo(u,"float32",a.imag),m=t.makeTensorInfo([],"float32",b.createScalarValue(n,"float32")),c=Xr({inputs:{x:m},backend:t}),d=Vh.kernelFunc({inputs:{a:p,b:m},backend:t}),f=Vh.kernelFunc({inputs:{a:l,b:c},backend:t}),h=t.data.get(d.dataId).values,g=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),{real:h,imag:g}}return a}else{let a=C.mergeRealAndImagArrays(s,i),u=Ate(a,n,e);return C.splitRealAndImagArrays(u)}}function vte(r){return(r&r-1)===0}function Jv(r,e,t,n,o){if(t===1)return{real:r,imag:e};let s=C.mergeRealAndImagArrays(r,e),i=t/2,a=C.complexWithEvenIndex(s),u=a.real,p=a.imag,l=[u.length],m=o.makeTensorInfo(l,"float32",u),c=o.makeTensorInfo(l,"float32",p),d=kr({inputs:{real:m,imag:c},backend:o}),f=C.complexWithOddIndex(s),h=f.real,g=f.imag,y=[h.length],T=o.makeTensorInfo(y,"float32",h),x=o.makeTensorInfo(y,"float32",g),I=kr({inputs:{real:T,imag:x},backend:o}),k=Jv(u,p,i,n,o),N=k.real,E=k.imag,M=[N.length],R=o.makeTensorInfo(M,"float32",N),B=o.makeTensorInfo(M,"float32",E),U=kr({inputs:{real:R,imag:B},backend:o}),W=Jv(h,g,i,n,o),K=W.real,H=W.imag,V=[K.length],j=o.makeTensorInfo(V,"float32",K),ee=o.makeTensorInfo(V,"float32",H),Z=kr({inputs:{real:j,imag:ee},backend:o}),te=C.exponents(t,n),oe=[te.real.length],ie=o.makeTensorInfo(oe,"float32",te.real),se=o.makeTensorInfo(oe,"float32",te.imag),ue=kr({inputs:{real:ie,imag:se},backend:o}),ye=Cl({inputs:{a:ue,b:Z},backend:o}),fe=yu({inputs:{a:U,b:ye},backend:o}),Te=Uh({inputs:{a:U,b:ye},backend:o}),Ae=Vs({inputs:{input:fe},backend:o}),Le=Vs({inputs:{input:Te},backend:o}),Be=yi({inputs:{input:fe},backend:o}),Ue=yi({inputs:{input:Te},backend:o}),Y=cp({inputs:[Ae,Le],backend:o,attrs:{axis:0}}),ft=cp({inputs:[Be,Ue],backend:o,attrs:{axis:0}}),xt=o.data.get(Y.dataId).values,wt=o.data.get(ft.dataId).values;return o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(I),o.disposeIntermediateTensorInfo(R),o.disposeIntermediateTensorInfo(B),o.disposeIntermediateTensorInfo(U),o.disposeIntermediateTensorInfo(j),o.disposeIntermediateTensorInfo(ee),o.disposeIntermediateTensorInfo(Z),o.disposeIntermediateTensorInfo(ie),o.disposeIntermediateTensorInfo(se),o.disposeIntermediateTensorInfo(ue),o.disposeIntermediateTensorInfo(ye),o.disposeIntermediateTensorInfo(fe),o.disposeIntermediateTensorInfo(Te),o.disposeIntermediateTensorInfo(Ae),o.disposeIntermediateTensorInfo(Be),o.disposeIntermediateTensorInfo(Le),o.disposeIntermediateTensorInfo(Ue),o.disposeIntermediateTensorInfo(Y),o.disposeIntermediateTensorInfo(ft),{real:xt,imag:wt}}function Ate(r,e,t){let n=new Float32Array(e*2);for(let o=0;o<e;o++){let s=0,i=0;for(let a=0;a<e;a++){let u=C.exponent(o*a,e,t),p=C.getComplexWithIndex(r,a);s+=p.real*u.real-p.imag*u.imag,i+=p.real*u.imag+p.imag*u.real}t&&(s/=e,i/=e),C.assignToTypedArray(n,s,i,o)}return n}function wte(r){let{inputs:e,backend:t}=r,{input:n}=e,o=b.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=o/s,a=nt({inputs:{x:n},backend:t,attrs:{shape:[i,s]}}),u=uT(a,!1,t),p=nt({inputs:{x:u},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),p}var i_={kernelName:fm,backendName:"cpu",kernelFunc:wte};function Hh(r){let{backend:e,attrs:t}=r,{shape:n,value:o,dtype:s}=t,i=s||b.inferDtype(o),a=b.getArrayFromDType(i,b.sizeFromShape(n));return Nte(a,o,i),e.makeTensorInfo(n,i,a)}var u_={kernelName:Ja,backendName:"cpu",kernelFunc:Hh};function Nte(r,e,t){r.fill(e)}var p_={kernelName:aa,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,o=t,s=b.getTypedArrayFromDType(n.dtype,b.sizeFromShape(n.shape)),[i,a,u,p]=n.shape,l=o.data.get(n.dataId).values;for(let c=0;c<i;c++){let d=c*u*a*p;for(let f=0;f<a;f++){let h=f*(u*p);for(let g=0;g<u;g++){let y=g*p;for(let T=0;T<p;T++){let x=Math.round(u-g-1),I=d+h+y+T,k=l[I];if(x>=0&&x<u){let N=x*p,E=d+h+N+T;k=l[E]}s[I]=k}}}}return{dataId:o.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var Dte=et((r,e)=>Math.floor(r/e)),Pte=st(xo,Dte,null,"int32"),l_={kernelName:xo,backendName:"cpu",kernelFunc:Pte};function Ete(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:p,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=Qv({inputs:{x:o,filter:s},backend:t,attrs:{strides:u,pad:p,dataFormat:l,dilations:m,dimRoundingMode:c}});if(i){let g=h;h=yu({inputs:{a:h,b:i},backend:t}),t.disposeIntermediateTensorInfo(g)}if(d){let g=h;h=Nc(t,h,d,a,f),t.disposeIntermediateTensorInfo(g)}return h}var m_={kernelName:ws,backendName:"cpu",kernelFunc:Ete};function Mte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:p,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=Zv({inputs:{x:o,filter:s},backend:t,attrs:{strides:u,pad:p,dataFormat:l,dilations:m,dimRoundingMode:c}});if(i){let g=h;h=yu({inputs:{a:h,b:i},backend:t}),t.disposeIntermediateTensorInfo(g)}if(d){let g=h;h=Nc(t,h,d,a,f),t.disposeIntermediateTensorInfo(g)}return h}var c_={kernelName:Ns,backendName:"cpu",kernelFunc:Mte};function Fte(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=b.sizeFromShape(n.shape),i=o.shape,a=i[i.length-1],[u,p,l,m]=C.prepareAndValidate(n,o);if(p===0)return t.makeTensorInfo(u,n.dtype,[]);let c=t.data.get(o.dataId).values,d=t.bufferSync(n),f=qy(c,d,n.dtype,p,a,l,m,n.shape,s);return t.makeTensorInfo(u,n.dtype,f.values)}var d_={kernelName:ia,backendName:"cpu",kernelFunc:Fte};function Rte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:i,batchDims:a}=n;ne([o,s],"gatherV2");let u=b.parseAxisParam(i,o.shape)[0],p=t.data.get(s.dataId).values,l=o.shape[u];for(let I=0;I<p.length;++I){let k=p[I];b.assert(k<=l-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${l-1}]`)}let m=a;a==null&&(m=0);let c=b.sizeFromShape(s.shape),d=C.segment_util.collectGatherOpShapeInfo(o,s,u,m),f=nt({inputs:{x:o},backend:t,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),h=nt({inputs:{x:s},backend:t,attrs:{shape:[d.batchSize,c/d.batchSize]}}),g=[d.batchSize,d.outerSize,c/d.batchSize,d.sliceSize],y=t.bufferSync(h),T=t.bufferSync(f),x=jy(T,y,g);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),t.makeTensorInfo(d.outputShape,x.dtype,x.values)}var f_={kernelName:fs,backendName:"cpu",kernelFunc:Rte};function Lte(r){let{inputs:e,backend:t}=r,{input:n}=e,o=b.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=o/s,a=nt({inputs:{x:n},backend:t,attrs:{shape:[i,s]}}),u=uT(a,!0,t),p=nt({inputs:{x:u},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),p}var h_={kernelName:hm,backendName:"cpu",kernelFunc:Lte};var _te=Re(Oi,r=>Number.isFinite(r)?1:0,"bool"),g_={kernelName:Oi,backendName:"cpu",kernelFunc:_te};var Bte=Re(zi,r=>Math.abs(r)===1/0?1:0,"bool"),b_={kernelName:zi,backendName:"cpu",kernelFunc:Bte};var $te=Re(Gi,r=>Number.isNaN(r)?1:0,"bool"),y_={kernelName:Gi,backendName:"cpu",kernelFunc:$te};function Ote(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,i=Xy(n,o,s);return e.makeTensorInfo([i.length],"float32",i)}var T_={kernelName:gm,backendName:"cpu",kernelFunc:Ote};var zte=Re(Ui,r=>Math.log1p(r)),x_={kernelName:Ui,backendName:"cpu",kernelFunc:zte};var Gte=et((r,e)=>r&&e),Ute=st(ma,Gte,null,"bool"),I_={kernelName:ma,backendName:"cpu",kernelFunc:Ute};var Wte=Re(Wi,r=>r?0:1,"bool"),C_={kernelName:Wi,backendName:"cpu",kernelFunc:Wte};var Kte=et((r,e)=>r||e),Vte=st(wp,Kte,null,"bool"),k_={kernelName:wp,backendName:"cpu",kernelFunc:Vte};function Hte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:i,alpha:a,beta:u}=n;ne(o,"LRN");let p=o.shape[3],l=p-1,m=t.data.get(o.dataId).values,c=b.sizeFromShape(o.shape),d=new Float32Array(c);function f(h){let g=h%p,y=h-g+Math.max(0,g-s),T=h-g+Math.min(g+s,l),x=0;for(;y<=T;y++){let I=m[y];x+=I*I}return x}for(let h=0;h<c;h++){let g=f(h),y=m[h]*Math.pow(i+a*g,-u);d[h]=y}return t.makeTensorInfo(o.shape,o.dtype,d)}var S_={kernelName:zu,backendName:"cpu",kernelFunc:Hte};function qte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:i}=e,{depthRadius:a,bias:u,alpha:p,beta:l}=n;ne(i,"LRNGrad");let m=b.sizeFromShape(i.shape),c=i.shape[3],d=t.data.get(i.dataId).values,f=t.data.get(o.dataId).values,h=t.data.get(s.dataId).values,g=new Float32Array(m),y=m;for(let T=0;T<y;T++){let x=T%c,I=T-x+Math.max(0,x-a),k=T-x+Math.min(c,x+a+1),N=0;for(let E=I;E<k;E++)N+=Math.pow(f[E],2);N=p*N+u;for(let E=I;E<k;E++){let M=-2*p*l*f[E]*h[T]/N;T===E&&(M+=Math.pow(N,-l)),M*=d[T],g[E]+=M}}return t.makeTensorInfo(i.shape,o.dtype,g)}var v_={kernelName:bm,backendName:"cpu",kernelFunc:qte};function eA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:i}=n,a=t,u=o.shape,p=u.length,l=b.parseAxisParam(s,u),m=l,c=C.getAxesPermutation(m,p),d=a.data.get(o.dataId).values;if(c!=null){let I=new Array(p);for(let k=0;k<I.length;k++)I[k]=u[c[k]];d=vc(d,u,o.dtype,c,I),m=C.getInnerMostAxes(m.length,p),u=I}ne(o,"max"),C.assertAxesAreInnerMostDims("max",m,p);let[f,h]=C.computeOutAndReduceShapes(u,m),g=b.sizeFromShape(h),y=Yy(d,g,f,o.dtype),T=a.write(y,f,o.dtype),x=f;return i&&(x=C.expandShapeToKeepDim(f,l)),{dataId:T,shape:x,dtype:o.dtype}}var A_={kernelName:vo,backendName:"cpu",kernelFunc:eA};function jte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;ne(o,"maxPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,p=1;b.assert(C.eitherStridesOrDilationsAreOne(i,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let l=C.computePool2DInfo(o.shape,s,i,p,a,u),m;if(l.filterWidth===1&&l.filterHeight===1&&b.arraysEqual(l.inShape,l.outShape))m=Xr({inputs:{x:o},backend:t});else{let c=t.data.get(o.dataId).values,d=b.computeStrides(o.shape),f=Dc(c,o.shape,o.dtype,d,l,"max");m=t.makeTensorInfo(l.outShape,o.dtype,f.values)}return m}var w_={kernelName:wo,backendName:"cpu",kernelFunc:jte};function Xte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u,dataFormat:p}=n;ne(o,"maxPool3d");let l=C.computePool3DInfo(o.shape,s,i,1,a,u,p),m=t.data.get(o.dataId).values,c=iT(m,o.shape,o.dtype,b.computeStrides(o.shape),l,"max");return t.makeTensorInfo(c.shape,"float32",c.values)}var N_={kernelName:Gu,backendName:"cpu",kernelFunc:Xte};function Yte(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:i,strides:a,pad:u,dimRoundingMode:p}=n;ne([o,s],"maxPool3DGrad");let l=C.computePool3DInfo(s.shape,i,a,1,u,p),m=t.bufferSync(s),c=SL(m,l),d=l.strideDepth,f=l.strideHeight,h=l.strideWidth,g=l.dilationDepth,y=l.dilationHeight,T=l.dilationWidth,x=l.effectiveFilterDepth,I=l.effectiveFilterHeight,k=l.effectiveFilterWidth,N=x-1-l.padInfo.front,E=k-1-l.padInfo.left,M=I-1-l.padInfo.top,R=ke(s.shape,"float32"),B=t.bufferSync(o);for(let U=0;U<l.batchSize;++U)for(let W=0;W<l.inChannels;++W)for(let K=0;K<l.inDepth;++K)for(let H=0;H<l.inHeight;++H)for(let V=0;V<l.inWidth;++V){let j=K-N,ee=H-M,Z=V-E,te=0;for(let oe=0;oe<x;oe+=g){let ie=(j+oe)/d;if(!(ie<0||ie>=l.outDepth||Math.floor(ie)!==ie))for(let se=0;se<I;se+=y){let ue=(ee+se)/f;if(!(ue<0||ue>=l.outHeight||Math.floor(ue)!==ue))for(let ye=0;ye<k;ye+=T){let fe=(Z+ye)/h;if(fe<0||fe>=l.outWidth||Math.floor(fe)!==fe)continue;let Te=x*I*k-1-c.get(U,ie,ue,fe,W),Ae=oe*I*k+se*k+ye,Le=Te===Ae?1:0;if(Le===0)continue;te+=B.get(U,ie,ue,fe,W)*Le}}}R.set(te,U,K,H,V,W)}return t.makeTensorInfo(R.shape,R.dtype,R.values)}var D_={kernelName:Tm,backendName:"cpu",kernelFunc:Yte};function Qte(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:i}=e,a=s;ne([s,i],"maxPoolGrad");let{filterSize:u,strides:p,pad:l,dimRoundingMode:m}=n,c=C.computePool2DInfo(a.shape,u,p,1,l,m),d=t.data.get(a.dataId).values,f=ke(c.outShape,a.dtype,aT(d,a.shape,a.dtype,c).values),h=c.strideHeight,g=c.strideWidth,y=c.dilationHeight,T=c.dilationWidth,x=c.effectiveFilterHeight,I=c.effectiveFilterWidth,k=I-1-c.padInfo.left,N=x-1-c.padInfo.top,E=ke(a.shape,"float32"),M=t.data.get(o.dataId).values,R=ke(o.shape,"float32",M);for(let B=0;B<c.batchSize;++B)for(let U=0;U<c.inChannels;++U)for(let W=0;W<c.inHeight;++W)for(let K=0;K<c.inWidth;++K){let H=W-N,V=K-k,j=0;for(let ee=0;ee<x;ee+=y){let Z=(H+ee)/h;if(!(Z<0||Z>=c.outHeight||Math.floor(Z)!==Z))for(let te=0;te<I;te+=T){let oe=(V+te)/g;if(oe<0||oe>=c.outWidth||Math.floor(oe)!==oe)continue;let ie=x*I-1-f.get(B,Z,oe,U),se=ee*I+te,ue=ie===se?1:0;if(ue===0)continue;j+=R.get(B,Z,oe,U)*ue}}E.set(j,B,W,K,U)}return t.makeTensorInfo(E.shape,E.dtype,E.values)}var P_={kernelName:ym,backendName:"cpu",kernelFunc:Qte};function E_(r,e,t,n,o){let s=b.computeStrides(e),i=Dc(r,e,t,s,o,"max"),a=aT(r,e,t,o,!0,n);return[i.values,a.values]}var M_={kernelName:xm,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:i,includeBatchInIndex:a}=e,u=t;ne(n,"MaxPoolWithArgmax");let p=u.data.get(n.dataId).values,l=C.computePool2DInfo(n.shape,o,s,[1,1],i),[m,c]=E_(p,n.shape,n.dtype,a,l),d=u.write(m,l.outShape,n.dtype),f=u.write(c,l.outShape,n.dtype);return[{dataId:d,shape:l.outShape,dtype:n.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}};function Zte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n,a=b.parseAxisParam(s,o.shape),p=C.computeOutAndReduceShapes(o.shape,a)[1],l=b.sizeFromShape(p),m=[],c=t.makeTensorInfo([],"float32",new Float32Array([l]));m.push(c);let d=Hs({inputs:{x:o},backend:t,attrs:{dtype:"float32"}});m.push(d);let f=Kh({inputs:{a:d,b:c},backend:t});m.push(f);let h=Tu({inputs:{x:f},backend:t,attrs:{axis:s,keepDims:i}});return m.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}var F_={kernelName:No,backendName:"cpu",kernelFunc:Zte};function Jte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;ne(o,"min");let a=b.parseAxisParam(s,o.shape),u=a,p=C.getAxesPermutation(u,o.shape.length),l=o;p!=null&&(l=ar({inputs:{x:o},backend:t,attrs:{perm:p}}),u=C.getInnerMostAxes(u.length,o.shape.length)),C.assertAxesAreInnerMostDims("min",u,l.shape.length);let[m,c]=C.computeOutAndReduceShapes(l.shape,u),d=b.sizeFromShape(c),f=b.makeZerosTypedArray(b.sizeFromShape(m),l.dtype),h=t.data.get(l.dataId).values;for(let y=0;y<f.length;++y){let T=y*d,x=h[T];for(let I=0;I<d;++I){let k=h[T+I];(Number.isNaN(k)||k<x)&&(x=k)}f[y]=x}p!=null&&t.disposeIntermediateTensorInfo(l);let g=t.makeTensorInfo(m,l.dtype,f);if(i){let y=C.expandShapeToKeepDim(m,a),T=nt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),T}return g}var R_={kernelName:Do,backendName:"cpu",kernelFunc:Jte};function ere(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,mode:i}=n;ne(o,"mirrorPad");let a=s.map((x,I)=>x[0]+o.shape[I]+x[1]),u=s.map(x=>x[0]),p=s.map((x,I)=>x[0]+o.shape[I]),l=i==="reflect"?0:1,m=t.data.get(o.dataId).values,c=o.shape.length,d=b.computeStrides(o.shape),f=b.sizeFromShape(a),h=a.length,g=b.computeStrides(a),y=b.getTypedArrayFromDType(o.dtype,f);for(let x=0;x<f;x++){let I=b.indexToLoc(x,h,g);for(let N=0;N<h;N++)I[N]<u[N]?I[N]=u[N]*2-I[N]-l:I[N]>=p[N]&&(I[N]=(p[N]-1)*2-I[N]+l);I=I.map((N,E)=>N-u[E]);let k=b.locToIndex(I,c,d);y[x]=m[k]}return{dataId:t.write(y,a,o.dtype),shape:a,dtype:o.dtype}}var L_={kernelName:Eo,backendName:"cpu",kernelFunc:ere};var tre=et((r,e)=>{let t=r%e;return r<0&&e<0||r>=0&&e>=0?t:(t+e)%e}),rre=st(Ki,tre),__={kernelName:Ki,backendName:"cpu",kernelFunc:rre};var $_=Sp(Gd());function tA(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,i=o.shape.length,a=s;if(a===-1&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);let u=b.parseAxisParam([a],o.shape),p=eA({inputs:{x:o},backend:t,attrs:{reductionIndices:u,keepDims:!1}}),l=C.expandShapeToKeepDim(p.shape,u),m=nt({inputs:{x:p},backend:t,attrs:{shape:l}}),c=Uh({inputs:{a:o,b:m},backend:t}),d=Nv({inputs:{x:c},backend:t}),f=Tu({inputs:{x:d},backend:t,attrs:{axis:u,keepDims:!1}}),h=nt({inputs:{x:f},backend:t,attrs:{shape:l}}),g=Kh({inputs:{a:d,b:h},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),g}var B_={kernelName:Ko,backendName:"cpu",kernelFunc:tA};function nre(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:i,normalized:a}=n;ne(o,"multinomial");let u=a?o:tA({inputs:{logits:o},backend:t,attrs:{dim:-1}}),p=u.shape[0],l=u.shape[1],m=t.data.get(u.dataId).values,c=[p,s],d=b.makeZerosTypedArray(b.sizeFromShape(c),"int32");for(let f=0;f<p;++f){let h=f*l,g=new Float32Array(l-1);g[0]=m[h];for(let x=1;x<g.length;++x)g[x]=g[x-1]+m[h+x];let y=$_.alea(i.toString()),T=f*s;for(let x=0;x<s;++x){let I=y();d[T+x]=g.length;for(let k=0;k<g.length;k++)if(I<g[k]){d[T+x]=k;break}}}return a||t.disposeIntermediateTensorInfo(u),t.makeTensorInfo(c,"int32",d)}var O_={kernelName:Im,backendName:"cpu",kernelFunc:nre};var ore=br.nonMaxSuppressionV3Impl;function sre(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u}=n;ne(o,"NonMaxSuppression");let p=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,{selectedIndices:m}=ore(p,l,i,a,u);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}var z_={kernelName:da,backendName:"cpu",kernelFunc:sre};var are=br.nonMaxSuppressionV4Impl;function ire(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:p}=n;ne(o,"NonMaxSuppressionPadded");let l=t.data.get(o.dataId).values,m=t.data.get(s.dataId).values,{selectedIndices:c,validOutputs:d}=are(l,m,i,a,u,p);return[t.makeTensorInfo([c.length],"int32",new Int32Array(c)),t.makeTensorInfo([],"int32",new Int32Array([d]))]}var G_={kernelName:Vi,backendName:"cpu",kernelFunc:ire};var ure=br.nonMaxSuppressionV5Impl;function pre(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,softNmsSigma:p}=n;ne(o,"NonMaxSuppressionWithScore");let l=t.data.get(o.dataId).values,m=t.data.get(s.dataId).values,c=i,d=a,f=u,h=p,{selectedIndices:g,selectedScores:y}=ure(l,m,c,d,f,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var U_={kernelName:fa,backendName:"cpu",kernelFunc:pre};function lre(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:i,offValue:a}=n;ne(o,"oneHot");let u=b.sizeFromShape(o.shape),p=new Float32Array(u*s);p.fill(a);let l=t.data.get(o.dataId).values;for(let m=0;m<u;++m)l[m]>=0&&l[m]<s&&(p[m*s+l[m]]=i);return t.makeTensorInfo([...o.shape,s],"int32",p)}var W_={kernelName:ha,backendName:"cpu",kernelFunc:lre};function qh(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Vs({inputs:{input:n},backend:t}),s=qh({inputs:{x:o},backend:t}),i=yi({inputs:{input:n},backend:t}),a=qh({inputs:{x:i},backend:t}),u=kr({inputs:{real:s,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),u}else return Hh({backend:t,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var K_={kernelName:Ss,backendName:"cpu",kernelFunc:qh};function V_(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Vs({inputs:{input:n},backend:t}),s=V_({inputs:{x:o},backend:t}),i=yi({inputs:{input:n},backend:t}),a=qh({inputs:{x:i},backend:t}),u=kr({inputs:{real:s,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),u}else return Hh({backend:t,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var H_={kernelName:gs,backendName:"cpu",kernelFunc:V_};function rA(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return Pc({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,i=e[0].dtype;e.forEach(l=>{b.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),b.assert(i===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],u=e.map(l=>{let m=Pc({inputs:{input:l},backend:t,attrs:{dim:o}});return a.push(m),m}),p=cp({inputs:u,backend:t,attrs:{axis:o}});return a.forEach(l=>t.disposeIntermediateTensorInfo(l)),p}var q_={kernelName:bs,backendName:"cpu",kernelFunc:rA};function mre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:i}=n;ne(o,"pad");let a=s.map((T,x)=>T[0]+o.shape[x]+T[1]),u=s.map(T=>T[0]),p=t.data.get(o.dataId).values,l=b.sizeFromShape(o.shape),m=o.shape.length,c=b.computeStrides(o.shape),d=b.sizeFromShape(a),f=a.length,h=b.computeStrides(a),g=b.getTypedArrayFromDType(o.dtype,d);i!==0&&g.fill(i);for(let T=0;T<l;T++){let I=b.indexToLoc(T,m,c).map((N,E)=>N+u[E]),k=b.locToIndex(I,f,h);g[k]=p[T]}return{dataId:t.write(g,a,o.dtype),shape:a,dtype:o.dtype}}var pT={kernelName:Fo,backendName:"cpu",kernelFunc:mre};var cre=et((r,e)=>Math.pow(r,e)),dre=st(Ro,cre),j_={kernelName:Ro,backendName:"cpu",kernelFunc:dre};function fre(r){let{backend:e,attrs:t}=r,{start:n,stop:o,dtype:s,step:i}=t,a=kl(n,o,i,s);return e.makeTensorInfo([a.length],s,a)}var X_={kernelName:ei,backendName:"cpu",kernelFunc:fre};var hre=Re(Hi,r=>1/r),Y_={kernelName:Hi,backendName:"cpu",kernelFunc:hre};function gre(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:a}=n;ne(o,"resizeBilinear");let u=b.computeStrides(o.shape),[p,l]=a,[m,c,d,f]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(b.sizeFromShape([m,p,l,f])),y=[s&&p>1?c-1:c,s&&l>1?d-1:d],T=[s&&p>1?p-1:p,s&&l>1?l-1:l],x=0,I=y[0]/T[0],k=y[1]/T[1];for(let N=0;N<m;N++)for(let E=0;E<p;E++){let M;i?M=I*(E+.5)-.5:M=I*E;let R=Math.max(0,Math.floor(M)),B=M-R,U=Math.min(c-1,Math.ceil(M)),W=N*u[0]+R*u[1],K=N*u[0]+U*u[1];for(let H=0;H<l;H++){let V;i?V=k*(H+.5)-.5:V=k*H;let j=Math.max(0,Math.floor(V)),ee=V-j,Z=Math.min(d-1,Math.ceil(V)),te=W+j*u[2],oe=K+j*u[2],ie=W+Z*u[2],se=K+Z*u[2];for(let ue=0;ue<f;ue++){let ye=h[te+ue],fe=h[oe+ue],Te=h[ie+ue],Ae=h[se+ue],Le=ye+(Te-ye)*ee,Be=fe+(Ae-fe)*ee,Ue=Le+(Be-Le)*B;g[x++]=Ue}}}return t.makeTensorInfo([m,p,l,f],"float32",g)}var Q_={kernelName:Bo,backendName:"cpu",kernelFunc:gre};function bre(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:i}=n;ne([s,o],"resizeBilinearGrad");let a=b.computeStrides(o.shape),[u,p,l,m]=o.shape,[,c,d]=s.shape,f=new Float32Array(u*p*l*m),h=[i&&c>1?p-1:p,i&&d>1?l-1:l],g=[i&&c>1?c-1:c,i&&d>1?d-1:d],y=h[0]/g[0],T=h[1]/g[1],x=t.data.get(s.dataId).values,I=0;for(let k=0;k<u;k++){let N=k*a[0];for(let E=0;E<c;E++){let M=E*y,R=Math.floor(M),B=Math.min(Math.ceil(M),p-1),U=N+R*a[1],W=N+B*a[1],K=M-R,H=1-K;for(let V=0;V<d;V++){let j=V*T,ee=Math.floor(j),Z=Math.min(Math.ceil(j),l-1),te=j-ee,oe=1-te,ie=U+ee*a[2],se=U+Z*a[2],ue=W+ee*a[2],ye=W+Z*a[2],fe=H*oe,Te=H*te,Ae=K*oe,Le=K*te;for(let Be=0;Be<m;Be++){let Ue=x[I++];f[ie+Be]+=Ue*fe,f[se+Be]+=Ue*Te,f[ue+Be]+=Ue*Ae,f[ye+Be]+=Ue*Le}}}}return t.makeTensorInfo([u,l,p,m],"float32",f)}var Z_={kernelName:km,backendName:"cpu",kernelFunc:bre};function yre(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:a}=n;ne(o,"resizeNearestNeighbor");let u=b.computeStrides(o.shape),[p,l]=a,[m,c,d,f]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(m*p*l*f),y=[s&&p>1?c-1:c,s&&l>1?d-1:d],T=[s&&p>1?p-1:p,s&&l>1?l-1:l],x=y[0]/T[0],I=y[1]/T[1],k=0;for(let N=0;N<m;N++){let E=N*u[0];for(let M=0;M<p;M++){let R=i?x*(M+.5):x*M,B=Math.min(c-1,s?Math.round(R):Math.floor(R));i&&(B=Math.max(0,B));let U=E+B*u[1];for(let W=0;W<l;W++){let K=i?I*(W+.5):I*W,H=Math.min(d-1,s?Math.round(K):Math.floor(K));i&&(H=Math.max(0,H));let V=U+H*u[2];for(let j=0;j<f;j++){let ee=h[V+j];g[k++]=ee}}}}return t.makeTensorInfo([m,p,l,f],o.dtype,g)}var J_={kernelName:ti,backendName:"cpu",kernelFunc:yre};function Tre(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:i}=n;ne([s,o],"resizeNearestNeighborGrad");let a=b.computeStrides(o.shape),u=b.computeStrides(s.shape),[p,l,m,c]=o.shape,[,d,f]=s.shape,h=new Float32Array(p*l*m*c),g=t.data.get(s.dataId).values,y=[i&&d>1?l-1:l,i&&f>1?m-1:m],T=[i&&d>1?d-1:d,i&&f>1?f-1:f],x=y[0]/T[0],I=y[1]/T[1],k=1/x,N=1/I,E=Math.ceil(k)*2+2,M=Math.ceil(N)*2+2;for(let R=0;R<p;R++){let B=R*a[0];for(let U=0;U<l;U++){let W=B+U*a[1],K=Math.floor(U*k),H=Math.floor(K-E/2);for(let V=0;V<m;V++){let j=W+V*a[2],ee=Math.floor(V*N),Z=Math.floor(ee-M/2);for(let te=0;te<c;te++){let oe=0;for(let ie=0;ie<E;ie++){let se=ie+H;if(se<0||se>=d)continue;let ue=B+se*u[1],ye=se*x,fe=Math.min(l-1,i?Math.round(ye):Math.floor(ye));if(U===fe)for(let Te=0;Te<M;Te++){let Ae=Te+Z;if(Ae<0||Ae>=f)continue;let Le=ue+Ae*u[2],Be=Ae*I,Ue=Math.min(m-1,i?Math.round(Be):Math.floor(Be));V===Ue&&(oe+=g[Le+te])}}h[j+te]=oe}}}}return t.makeTensorInfo(o.shape,o.dtype,h)}var eB={kernelName:Cm,backendName:"cpu",kernelFunc:Tre};function xre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n;ne(o,"reverse");let i=o.shape.length,a=b.parseAxisParam(s,o.shape);if(i===0)return Xr({inputs:{x:o},backend:t});let u=new gt(o.shape,o.dtype),p=t.bufferSync(o);for(let l=0;l<u.size;l++){let m=u.indexToLoc(l),c=m.slice();a.forEach(d=>c[d]=o.shape[d]-1-c[d]),u.set(p.get(...c),...m)}return t.makeTensorInfo(u.shape,u.dtype,u.values)}var tB={kernelName:ba,backendName:"cpu",kernelFunc:xre};var rB={kernelName:va,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:i}=e,a=t,u=b.getTypedArrayFromDType(n.dtype,b.sizeFromShape(n.shape)),[p,l,m,c]=n.shape,[d,f]=C.getImageCenter(i,l,m),h=255,g=Math.sin(o),y=Math.cos(o),T=a.data.get(n.dataId).values;for(let I=0;I<p;I++){let k=I*m*l*c;for(let N=0;N<l;N++){let E=N*(m*c);for(let M=0;M<m;M++){let R=M*c;for(let B=0;B<c;B++){let U=[p,N,M,B],W=U[2],K=U[1],H=(W-d)*y-(K-f)*g,V=(W-d)*g+(K-f)*y;H=Math.round(H+d),V=Math.round(V+f);let j=s;if(typeof s!="number"&&(B===3?j=h:j=s[B]),H>=0&&H<m&&V>=0&&V<l){let Z=V*(m*c),te=H*c,oe=k+Z+te+B;j=T[oe]}let ee=k+E+R+B;u[ee]=j}}}}return{dataId:a.write(u,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var Ire=Re(ya,r=>{let e=Math.floor(r);return r-e<.5?Math.floor(r):r-e>.5?Math.ceil(r):e%2===0?e:e+1}),nB={kernelName:ya,backendName:"cpu",kernelFunc:Ire};function lT(r,e,t,n,o,s,i,a,u,p){let l=[n/o,o],m=r.values,c=e.values;if(n===0)return ke(t,e.dtype);let d=ke(l,e.dtype);d.values.fill(u);for(let f=0;f<s;f++){let h=[],g=0;for(let y=0;y<i;y++){let T=m[f*i+y];h.push(T),g+=T*a[y]}if(g<0||g>=n/o)throw new Error(`Invalid indices: ${h} does not index into ${t}`);for(let y=0;y<o;y++)p?d.values[g*o+y]+=c[f*o+y]:d.values[g*o+y]=e.rank===0?c[0]:c[f*o+y]}return d}function Cre(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:i}=n,{sliceRank:a,numUpdates:u,sliceSize:p,strides:l,outputSize:m}=C.calculateShapes(s,o,i),c=!0,d=t.bufferSync(o),f=t.bufferSync(s),h=lT(d,f,i,m,p,u,a,l,0,c);return t.makeTensorInfo(i,h.dtype,h.values)}var oB={kernelName:Ta,backendName:"cpu",kernelFunc:Cre};function kre(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e;ne([n,o,s],"select");let i=n.shape.length,a=t.data.get(n.dataId).values,u=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,l=Ut(o.dtype,s.dtype),m=b.makeZerosTypedArray(b.sizeFromShape(o.shape),l),c=0,d=i===0||i>1||o.shape.length===1?1:b.sizeFromShape(o.shape.slice(1));for(let f=0;f<a.length;f++)for(let h=0;h<d;h++)a[f]===1?m[c++]=u[f]:m[c++]=p[f];return t.makeTensorInfo(o.shape,l,m)}var sB={kernelName:Ts,backendName:"cpu",kernelFunc:kre};var Sre=C.SELU_SCALEALPHA,vre=C.SELU_SCALE,Are=Re(qi,r=>r>=0?vre*r:Sre*(Math.exp(r)-1)),aB={kernelName:qi,backendName:"cpu",kernelFunc:Are};var wre=Re(ji,r=>r<0?-1:r>0?1:0),iB={kernelName:ji,backendName:"cpu",kernelFunc:wre};var Nre=Re(zo,r=>Math.sin(r)),uB={kernelName:zo,backendName:"cpu",kernelFunc:Nre};var Dre=Re(xa,r=>Math.sinh(r)),pB={kernelName:xa,backendName:"cpu",kernelFunc:Dre};var Pre=11920928955078125e-23,lB=Math.log(Pre)+2,Ere=Re(Xi,r=>{let e=r>-lB,t=r<lB,n=Math.exp(r),o;return t?o=n:e?o=r:o=Math.log(1+n),o}),mB={kernelName:Xi,backendName:"cpu",kernelFunc:Ere};function Mre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:i}=n;ne([o],"spaceToBatchND");let a=b.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let N=1+s.length;N<o.shape.length;++N)u.push([0,0]);let p=pT.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),l=C.getReshaped(p.shape,s,a,!1),m=C.getPermuted(l.length,s.length,!1),c=C.getReshapedPermuted(p.shape,s,a,!1),h=nt({inputs:{x:p},backend:t,attrs:{shape:l}}),T=ar({inputs:{x:h},backend:t,attrs:{perm:m}}),k=nt({inputs:{x:T},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(T),k}var cB={kernelName:Is,backendName:"cpu",kernelFunc:Mre};function Fre(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:i}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let a=t.data.get(n.dataId).values,u=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,l=t.data.get(i.dataId).values[0],[m,c,d,f,h]=Qy(a,n.shape,n.dtype,u,o.dtype,p,l);return[t.makeTensorInfo(c,n.dtype,m),t.makeTensorInfo([c[0]],o.dtype,d),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var dB={kernelName:Wu,backendName:"cpu",kernelFunc:Fre};function Rre(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(t.data.get(o.dataId).values),a=t.data.get(n.dataId).values,u=Array.from(t.data.get(s.dataId).values),[p,l,m]=Zy(a,n.shape,n.dtype,i,u);return[t.makeTensorInfo(l,n.dtype,p),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var fB={kernelName:Yi,backendName:"cpu",kernelFunc:Rre};function Lre(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,[p,l]=Ac(i,n.shape,n.dtype,a,u,!0);return t.makeTensorInfo(l,n.dtype,p)}var hB={kernelName:Ku,backendName:"cpu",kernelFunc:Lre};function _re(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,[p,l]=Ac(i,n.shape,n.dtype,a,u);return t.makeTensorInfo(l,n.dtype,p)}var gB={kernelName:Vu,backendName:"cpu",kernelFunc:_re};function Bre(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:i}=e,{outputShape:a}=n,{sliceRank:u,numUpdates:p,sliceSize:l,strides:m,outputSize:c}=C.calculateShapes(s,o,a),d=!1,f=t.bufferSync(o),h=t.bufferSync(s),g=t.data.get(i.dataId).values[0],y=lT(f,h,a,c,l,p,u,m,g,d);return t.makeTensorInfo(a,y.dtype,y.values)}var bB={kernelName:Hu,backendName:"cpu",kernelFunc:Bre};function $re(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:i}=n,a=b.parseAxisParam(i,o.shape)[0],u=C.prepareSplitSize(o,s,a),p=new Array(o.shape.length).fill(0),l=o.shape.slice();return u.map(m=>{let c=[...l];c[a]=m;let d=js({inputs:{x:o},backend:t,attrs:{begin:p,size:c}});return p[a]+=m,d})}var yB={kernelName:Cs,backendName:"cpu",kernelFunc:$re};var TB={kernelName:ri,backendName:"cpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e;ne(t,"square");let o=n.data.get(t.dataId).values,s=new Float32Array(o.length);for(let a=0;a<o.length;++a){let u=o[a];s[a]=u*u}return{dataId:n.write(s,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};var Ore=Re(vs,(r,e)=>{let t=e;return isNaN(r)?NaN:r>0?1:t.alpha}),xB={kernelName:vs,backendName:"cpu",kernelFunc:Ore};function zre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:i,strides:a,beginMask:u,endMask:p,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n;ne(o,"stridedSlice");let{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:T,end:x,strides:I}=yt.sliceInfo(o.shape,s,i,a,u,p,l,m,c),k;if(h)k=nt({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let N=yt.computeOutShape(T,x,I),E=js({inputs:{x:o},backend:t,attrs:{begin:T,size:N}});k=nt({inputs:{x:E},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(E)}else{let N=t.bufferSync(o),E=Jy(d,N,I,T);k=t.makeTensorInfo(f,E.dtype,E.values)}return k}var IB={kernelName:Ia,backendName:"cpu",kernelFunc:zre};function Gre(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:i,rightPad:a,padWidth:u,preserveShortSequences:p}=n,{data:l,dataSplits:m}=e,c=t.data.get(l.dataId).values,d=t.data.get(m.dataId).values,[f,h]=eT(c,d,o,s,i,a,u,p);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(m.shape,"int32",h)]}var CB={kernelName:qu,backendName:"cpu",kernelFunc:Gre};function Ure(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:i}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let a=t.data.get(s.dataId).values,u=t.data.get(i.dataId).values[0],[p,l,m]=tT(a,u,o),c=l.length;return[t.makeTensorInfo([c,2],"int32",p),t.makeTensorInfo([c],"string",l),t.makeTensorInfo([2],"int32",new Int32Array(m))]}var kB={kernelName:Sm,backendName:"cpu",kernelFunc:Ure};function Wre(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let i=t.data.get(s.dataId).values,a=rT(i,o);return t.makeTensorInfo(s.shape,"int32",a)}var SB={kernelName:vm,backendName:"cpu",kernelFunc:Wre};var Kre=Re(Ca,r=>Math.tan(r)),vB={kernelName:Ca,backendName:"cpu",kernelFunc:Kre};var Vre=Re(qo,r=>Math.tanh(r)),AB={kernelName:qo,backendName:"cpu",kernelFunc:Vre};function Hre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;ne(o,"tile");let i=nT(t.bufferSync(o),s);return t.makeTensorInfo(i.shape,i.dtype,i.values)}var wB={kernelName:An,backendName:"cpu",kernelFunc:Hre};function qre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:i}=n;ne(o,"topk");let a=t.data.get(o.dataId).values,[u,p]=oT(a,o.shape,o.dtype,s,i);return[t.makeTensorInfo(u.shape,u.dtype,u.values),t.makeTensorInfo(p.shape,p.dtype,p.values)]}var NB={kernelName:ka,backendName:"cpu",kernelFunc:qre};function jre(r){let{inputs:e,attrs:t,backend:n}=r,{image:o,transforms:s}=e,{interpolation:i,fillMode:a,fillValue:u,outputShape:p}=t,[l,m,c,d]=o.shape,[f,h]=p??[m,c],g=[l,f,h,d],y=b.computeStrides(o.shape),T=y[0],x=y[1],I=y[2],k=b.getTypedArrayFromDType(o.dtype,b.sizeFromShape(g));k.fill(u);let N=n.data.get(o.dataId).values,E=n.data.get(s.dataId).values;for(let R=0;R<l;++R){let B=s.shape[0]===1?E:E.subarray(R*8,R*8+8);for(let U=0;U<f;++U)for(let W=0;W<h;++W)for(let K=0;K<d;++K){let H,V=B[6]*W+B[7]*U+1;if(V===0)continue;let j=(B[0]*W+B[1]*U+B[2])/V,ee=(B[3]*W+B[4]*U+B[5])/V,Z=DB(j,c,a),te=DB(ee,m,a);switch(i){case"nearest":H=Jre(N,m,c,T,x,I,R,te,Z,K,u);break;case"bilinear":H=ene(N,m,c,T,x,I,R,te,Z,K,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let oe=R*T+U*x+W*I+K;k[oe]=H}return n.makeTensorInfo(g,o.dtype,k)}return{dataId:n.write(k,g,o.dtype),shape:o.shape,dtype:o.dtype}}var PB={kernelName:Sa,backendName:"cpu",kernelFunc:jre};function DB(r,e,t){switch(t){case"reflect":return Xre(r,e);case"wrap":return Yre(r,e);case"nearest":return Zre(r,e);case"constant":default:return Qre(r,e)}}function Xre(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=2*e;t<n&&(t=n*Math.trunc(-t/n)+t),t=t<-e?t+n:-t-1}else if(t>e-1)if(e<=1)t=0;else{let n=2*e;t-=n*Math.trunc(t/n),t>=e&&(t=n-t-1)}return b.clamp(0,t,e-1)}function Yre(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=e-1;t+=e*(Math.trunc(-t/n)+1)}else if(t>e-1)if(e<=1)t=0;else{let n=e-1;t-=e*Math.trunc(t/n)}return b.clamp(0,t,e-1)}function Qre(r,e){return r}function Zre(r,e){return b.clamp(0,r,e-1)}function jh(r,e,t,n,o,s,i,a,u,p,l){let m=i*n+a*o+u*s+p;return 0<=a&&a<e&&0<=u&&u<t?r[m]:l}function Jre(r,e,t,n,o,s,i,a,u,p,l){let m=Math.round(a),c=Math.round(u);return jh(r,e,t,n,o,s,i,m,c,p,l)}function ene(r,e,t,n,o,s,i,a,u,p,l){let m=Math.floor(a),c=Math.floor(u),d=m+1,f=c+1,h=(f-u)*jh(r,e,t,n,o,s,i,m,c,p,l)+(u-c)*jh(r,e,t,n,o,s,i,m,f,p,l),g=(f-u)*jh(r,e,t,n,o,s,i,d,c,p,l)+(u-c)*jh(r,e,t,n,o,s,i,d,f,p,l);return(d-a)*h+(a-m)*g}function tne(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;ne(s,"unique");let i=n.data.get(s.dataId).values,{outputValues:a,outputShape:u,indices:p}=sT(i,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,a),n.makeTensorInfo([p.length],"int32",p)]}var EB={kernelName:Am,backendName:"cpu",kernelFunc:tne};function rne(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let i=o.shape.length,a=o.shape[s],u=new Array(i-1),p=0;for(let d=0;d<i;d++)d!==s&&(u[p++]=o.shape[d]);let l=new Array(i).fill(0),m=o.shape.slice();m[s]=1;let c=new Array(a);for(let d=0;d<c.length;d++){l[s]=d;let f=js({inputs:{x:o},backend:t,attrs:{begin:l,size:m}});c[d]=nt({inputs:{x:f},backend:t,attrs:{shape:u}}),t.disposeIntermediateTensorInfo(f)}return c}var MB={kernelName:ks,backendName:"cpu",kernelFunc:rne};function nne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:i}=n;ne(o,"unsortedSegmentSum");let a=o.shape.length,u=s.shape.length,p=[],l=[],m=a-u,c=s;for(let f=0;f<m;++f){let h=Pc({inputs:{input:c},backend:t,attrs:{dim:f+1}});c=h,l.push(h)}for(let f=0;f<i;++f){let h=b.createScalarValue(f,"int32"),g=t.makeTensorInfo([],"int32",h),y=Av({inputs:{a:g,b:c},backend:t}),T=Hs({inputs:{x:y},backend:t,attrs:{dtype:"float32"}}),x=Cl({inputs:{a:T,b:o},backend:t}),I=Tu({inputs:{x},backend:t,attrs:{axis:0,keepDims:!1}});p.push(I),l.push(g),l.push(y),l.push(T),l.push(x),l.push(I)}let d=rA({inputs:p,backend:t,attrs:{axis:0}});return l.forEach(f=>t.disposeIntermediateTensorInfo(f)),d}var FB={kernelName:ju,backendName:"cpu",kernelFunc:nne};var one=[mL,vR,cL,dL,PR,fL,hL,gL,bL,yL,TL,xL,IL,CL,kL,vL,AL,wL,NL,lL,DL,PL,EL,ML,DR,ER,FL,AR,RL,_L,BL,$L,OL,zL,GL,UL,WL,KL,VL,HL,qL,jL,XL,YL,QL,ZL,JL,e_,t_,n_,oL,o_,MR,s_,FR,a_,RR,i_,u_,p_,LR,l_,m_,c_,d_,f_,_R,BR,wR,h_,LL,g_,b_,y_,sL,$R,OR,T_,zR,x_,I_,C_,k_,S_,v_,A_,GR,w_,N_,D_,P_,M_,F_,R_,UR,L_,__,O_,WR,KR,z_,G_,U_,VR,W_,H_,q_,pT,j_,aL,qR,X_,NR,Vh,Y_,iL,uL,pL,Q_,Z_,J_,eB,tB,rB,nB,jR,oB,sB,aB,YR,iB,uB,pB,QR,B_,mB,cB,dB,fB,hB,gB,bB,yB,JR,TB,eL,xB,IB,CB,kB,SB,rL,r_,vB,AB,wB,NB,PB,HR,EB,MB,FB,K_];for(let r of one)Qi(r);var Fc={};je(Fc,{assertNotComplex:()=>Ga,bindCanvasToFramebuffer:()=>fne,bindColorTextureToFramebuffer:()=>Zh,bindTextureToProgramUniformSampler:()=>TA,bindTextureUnit:()=>BB,bindVertexBufferToProgramAttribute:()=>fT,callAndCheck:()=>ve,canBeRepresented:()=>iA,createFragmentShader:()=>pA,createFramebuffer:()=>gA,createProgram:()=>lA,createStaticIndexBuffer:()=>dA,createStaticVertexBuffer:()=>cA,createTexture:()=>fA,createVertexShader:()=>uA,getBatchDim:()=>Iu,getExtensionOrThrow:()=>Ec,getFramebufferErrorMessage:()=>$B,getMaxTexturesInShader:()=>CA,getNumChannels:()=>cne,getProgramUniformLocation:()=>yA,getProgramUniformLocationOrThrow:()=>bA,getRowsCols:()=>Cu,getShapeAs3D:()=>Jh,getTextureShapeFromLogicalShape:()=>xA,getWebGLDisjointQueryTimerVersion:()=>kA,getWebGLErrorMessage:()=>_B,getWebGLMaxTextureSize:()=>IA,hasExtension:()=>Jn,isCapableOfRenderingToFloatTexture:()=>SA,isDownloadFloatTextureEnabled:()=>vA,isReshapeFree:()=>dp,isWebGLFenceEnabled:()=>AA,isWebGLVersionEnabled:()=>gT,linkProgram:()=>mA,resetMaxTextureSize:()=>hne,resetMaxTexturesInShader:()=>gne,unbindColorTextureFromFramebuffer:()=>hT,unbindTextureUnit:()=>dne,validateFramebuffer:()=>Mc,validateProgram:()=>Qh,validateTextureSize:()=>hA});var vl={},nA={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function oA(r,e){vl[r]=e}function Zn(r,e){if(!(r in vl)||e!=null){let n=ane(r,e);if(n!==null)vl[r]=n;else return console.log("Could not get context for WebGL version",r),null}let t=vl[r];return t==null||t.isContextLost()?(delete vl[r],Zn(r)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),vl[r])}function sne(r){if(typeof OffscreenCanvas<"u"&&r===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function ane(r,e){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=e??sne(r);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete vl[r]},!1),r===1?t.getContext("webgl",nA)||t.getContext("experimental-webgl",nA):t.getContext("webgl2",nA)}function Al(r,e){return[e,r]}function RB(r,e){return r*e}function Xh(r){let e=b.sizeFromShape(r),t=Math.ceil(e/4);return b.sizeToSquarishShape(t)}function Ti(r,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(r/2))]}function LB(r,e){let[t,n]=Ti(r,e);return t*n*4}function Yh(r,e){let t=r,n,o,s,i,a,u,p,l,m,c;return $().getNumber("WEBGL_VERSION")===2?(n=t.R32F,o=t.R16F,s=t.RGBA16F,i=t.RGBA32F,a=t.RED,p=4,l=1,m=t.HALF_FLOAT,c=t.FLOAT,u=t.RGBA8):(n=r.RGBA,o=r.RGBA,s=r.RGBA,i=t.RGBA,a=r.RGBA,p=4,l=4,m=e!=null?e.HALF_FLOAT_OES:null,c=r.FLOAT,u=r.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:u,downloadUnpackNumChannels:p,defaultNumChannels:l,textureTypeHalfFloat:m,textureTypeFloat:c}}function ve(r,e){let t=e();return $().getBool("DEBUG")&&ine(r),t}function ine(r){let e=r.getError();if(e!==r.NO_ERROR)throw new Error("WebGL Error: "+_B(r,e))}var une=596e-10,pne=65504;function iA(r){return!!($().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||une<Math.abs(r)&&Math.abs(r)<pne)}function _B(r,e){switch(e){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Ec(r,e){return xu(r,()=>r.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function uA(r,e){let t=xu(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ve(r,()=>r.shaderSource(t,e)),ve(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function pA(r,e){let t=xu(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ve(r,()=>r.shaderSource(t,e)),ve(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw mne(e,r.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}var lne=/ERROR: [0-9]+:([0-9]+):/g;function mne(r,e){let t=lne.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(r);return}let n=+t[1],o=r.split(`
`),s=o.length.toString().length+2,i=o.map((m,c)=>b.rightPad((c+1).toString(),s)+m),a=0;for(let m=0;m<i.length;m++)a=Math.max(i[m].length,a);let u=i.slice(0,n-1),p=i.slice(n-1,n),l=i.slice(n);console.log(u.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${b.rightPad(p[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function lA(r){return xu(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function mA(r,e){if(ve(r,()=>r.linkProgram(e)),r.getProgramParameter(e,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Qh(r,e){if(ve(r,()=>r.validateProgram(e)),r.getProgramParameter(e,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function cA(r,e){let t=xu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return ve(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),ve(r,()=>r.bufferData(r.ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function dA(r,e){let t=xu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return ve(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t)),ve(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function cne(){return $().getNumber("WEBGL_VERSION")===2?1:4}function fA(r){return xu(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function hA(r,e){let t=$().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||e<=0){let n=`[${r}x${e}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(r>t||e>t){let n=`[${r}x${e}]`,o=`[${t}x${t}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+o+".")}}function gA(r){return xu(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function fT(r,e,t,n,o,s,i){let a=r.getAttribLocation(e,t);return a===-1?!1:(ve(r,()=>r.bindBuffer(r.ARRAY_BUFFER,n)),ve(r,()=>r.vertexAttribPointer(a,o,r.FLOAT,!1,s,i)),ve(r,()=>r.enableVertexAttribArray(a)),!0)}function BB(r,e,t){OB(r,t),ve(r,()=>r.activeTexture(r.TEXTURE0+t)),ve(r,()=>r.bindTexture(r.TEXTURE_2D,e))}function dne(r,e){OB(r,e),ve(r,()=>r.activeTexture(r.TEXTURE0+e)),ve(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function bA(r,e,t){return xu(r,()=>r.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function yA(r,e,t){return r.getUniformLocation(e,t)}function TA(r,e,t,n){ve(r,()=>BB(r,e,n)),ve(r,()=>r.uniform1i(t,n))}function fne(r){ve(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,null)),ve(r,()=>r.viewport(0,0,r.canvas.width,r.canvas.height)),ve(r,()=>r.scissor(0,0,r.canvas.width,r.canvas.height))}function Zh(r,e,t){ve(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),ve(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0))}function hT(r,e){ve(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),ve(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function Mc(r){let e=r.checkFramebufferStatus(r.FRAMEBUFFER);if(e!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+$B(r,e))}function $B(r,e){switch(e){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function xu(r,e,t){let n=ve(r,()=>e());if(n==null)throw new Error(t);return n}function OB(r,e){let t=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=e+r.TEXTURE0;if(n<r.TEXTURE0||n>t){let o=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${o}.`)}}function Iu(r,e=2){return b.sizeFromShape(r.slice(0,r.length-e))}function Cu(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function Jh(r){let e=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(e=[Iu(r),...Cu(r)]),e}function xA(r,e=!1){let t=$().getNumber("WEBGL_MAX_TEXTURE_SIZE");e&&(t=t*2,r=r.map((o,s)=>s>=r.length-2?b.nearestLargerEven(r[s]):r[s]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=b.squeezeShape(r).newShape);let n=b.sizeFromShape(r);if(r.length<=1&&n<=t)return[1,n];if(r.length===2&&r[0]<=t&&r[1]<=t)return r;if(r.length===3&&r[0]*r[1]<=t&&r[2]<=t)return[r[0]*r[1],r[2]];if(r.length===3&&r[0]<=t&&r[1]*r[2]<=t)return[r[0],r[1]*r[2]];if(r.length===4&&r[0]*r[1]*r[2]<=t&&r[3]<=t)return[r[0]*r[1]*r[2],r[3]];if(r.length===4&&r[0]<=t&&r[1]*r[2]*r[3]<=t)return[r[0],r[1]*r[2]*r[3]];if(e){let o=Iu(r),s=2,i=2;return r.length&&([s,i]=Cu(r)),n=o*(s/2)*(i/2),b.sizeToSquarishShape(n).map(a=>a*2)}return b.sizeToSquarishShape(n)}function mT(r){return r%2===0}function dp(r,e){if(r=r.slice(-2),e=e.slice(-2),b.arraysEqual(r,e)||!r.length||!e.length||r[0]===0||r[1]===0||e[0]===0||e[1]===0)return!0;if(r.length!==e.length){let t=r.slice(-1)[0],n=e.slice(-1)[0];if(t===n||mT(t)&&mT(n)&&(r[0]===1||e[0]===1))return!0}return r[1]===e[1]&&mT(r[0])&&mT(e[0])}var cT,dT;function IA(r){if(cT==null){let e=Zn(r);cT=e.getParameter(e.MAX_TEXTURE_SIZE)}return cT}function hne(){cT=null}function gne(){dT=null}function CA(r){if(dT==null){let e=Zn(r);dT=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,dT)}function kA(r){if(r===0)return 0;let e,t=Zn(r);return Jn(t,"EXT_disjoint_timer_query_webgl2")&&r===2?e=2:Jn(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Jn(r,e){return r.getExtension(e)!=null}function gT(r){try{if(Zn(r)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function SA(r){if(r===0)return!1;let e=Zn(r);if(r===1){if(!Jn(e,"OES_texture_float"))return!1}else if(!Jn(e,"EXT_color_buffer_float"))return!1;return aA(e)}function vA(r){if(r===0)return!1;let e=Zn(r);if(r===1){if(!Jn(e,"OES_texture_float")||!Jn(e,"WEBGL_color_buffer_float"))return!1}else{if(Jn(e,"EXT_color_buffer_float"))return aA(e);let n="EXT_color_buffer_half_float";if(Jn(e,n)){let o=e.getExtension(n);return bne(e,o)}return!1}return aA(e)}function aA(r){let e=Yh(r),t=r.createTexture();r.bindTexture(r.TEXTURE_2D,t);let n=1,o=1;r.texImage2D(r.TEXTURE_2D,0,e.internalFormatFloat,n,o,0,e.textureFormatFloat,e.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(t),r.deleteFramebuffer(s),i}function bne(r,e){let t=Yh(r,e),n=r.createTexture();r.bindTexture(r.TEXTURE_2D,n);let o=1,s=1;r.texImage2D(r.TEXTURE_2D,0,t.internalFormatHalfFloat,o,s,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);let i=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,i),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,n,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(n),r.deleteFramebuffer(i),a}function AA(r){return r!==2?!1:Zn(r).fenceSync!=null}function Ga(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&b.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}var $e=$();$e.registerFlag("HAS_WEBGL",()=>$e.getNumber("WEBGL_VERSION")>0);$e.registerFlag("WEBGL_VERSION",()=>gT(2)?2:gT(1)?1:0);$e.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);$e.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>$e.get("WEBGL_VERSION")===2);$e.registerFlag("WEBGL_CPU_FORWARD",()=>!0);$e.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);$e.registerFlag("WEBGL_PACK",()=>$e.getBool("HAS_WEBGL"));$e.registerFlag("WEBGL_PACK_NORMALIZATION",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_CLIP",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_REDUCE",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_LAZILY_UNPACK",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_CONV_IM2COL",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>IA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>CA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=$e.getNumber("WEBGL_VERSION");return r===0?0:kA(r)});$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>$e.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!oi.isMobile());$e.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>SA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>$e.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:$e.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));$e.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>vA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_FENCE_API_ENABLED",()=>AA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>$e.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);$e.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});$e.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>oi.isMobile()?1:-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});$e.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);$e.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);$e.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);$e.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function Xt(){let r,e,t,n,o,s,i,a,u,p;return $().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",e="in",t="out",n="in",o="texture",s="outputColor",i="out vec4 outputColor;",a=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,u="",p=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",e="attribute",t="varying",n="varying",o="texture2D",s="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,p=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:e,varyingVs:t,varyingFs:n,texture2D:o,output:s,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:u,defineRound:p}}function Ua(r,e,t="index"){let n=b.computeStrides(e);return n.map((o,s)=>{let i=`int ${r[s]} = ${t} / ${o}`,a=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * ${o}`:`index -= ${r[s]} * ${o}`;return`${i}; ${a};`}).join("")}function wl(r,e,t="index"){let n=b.computeStrides(e);return n.map((o,s)=>{let i=`int ${r[s]} = ${t} / outShapeStrides[${s}]`,a=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * outShapeStrides[${s}]`:`index -= ${r[s]} * outShapeStrides[${s}]`;return`${i}; ${a};`}).join("")}function yne(r,e){let t=r.length,n=r.map(s=>`${e}[${s}]`),o=new Array(t-1);o[t-2]=n[t-1];for(let s=t-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function zB(r,e,t="index"){let n=r.map((s,i)=>i),o=yne(n,e);return o.map((s,i)=>{let a=`int ${r[i]} = ${t} / ${o[i]}`,u=i===o.length-1?`int ${r[i+1]} = ${t} - ${r[i]} * ${o[i]}`:`index -= ${r[i]} * ${o[i]}`;return`${a}; ${u};`}).join("")}function Rc(r){let e=b.computeStrides(r).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Lc(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var bT=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:GB}=C;function UB(r,e,t){let n=[];if(r.forEach(d=>{let f=b.sizeFromShape(d.shapeInfo.logicalShape);if(d.shapeInfo.isUniform?n.push(`uniform float ${d.name}${f>1?`[${f}]`:""};`):(n.push(`uniform sampler2D ${d.name};`),n.push(`uniform int offset${d.name};`)),t.enableShapeUniforms){let{uniformShape:h}=yT(t.packedInputs,d.shapeInfo.logicalShape,d.shapeInfo.texShape);switch(h.length){case 1:n.push(`uniform int ${d.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${d.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${d.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${d.name}Shape;`);break;default:break}n.push(`uniform ivec2 ${d.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break;default:break}n.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(d=>{n.push(`uniform ${d.type} ${d.name}${d.arrayIndex?`[${d.arrayIndex}]`:""};`)});let o=n.join(`
`),s=r.map(d=>Tne(d,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),i=e.texShape,a=Xt(),u=Cne(a),p,l,m=vne(a);return e.isPacked?(p=xne(e.logicalShape,i,t.enableShapeUniforms),l=Sne(a)):(p=Ine(e.logicalShape,i,t.enableShapeUniforms),l=kne(a)),t.packedInputs&&(m+=Dne),[m,u,l,o,p,s,t.userCode].join(`
`)}function Bc(r,e=!1){let t=r.shapeInfo.logicalShape;switch(t.length){case 0:return Gne(r,e);case 1:return Wne(r,e);case 2:return Vne(r,e);case 3:return qne(r,e);case 4:return Xne(r,e);case 5:return Yne(r);case 6:return Qne(r);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function WB(r,e){switch(r.shapeInfo.logicalShape.length){case 0:return zne(r);case 1:return Une(r,e);case 2:return Kne(r,e);case 3:return Hne(r,e);default:return jne(r,e)}}function Tne(r,e,t=!1,n){let o="";t?o+=WB(r,n):o+=Bc(r,n);let s=r.shapeInfo.logicalShape,i=e.logicalShape;return s.length<=i.length&&(t?o+=Zne(r,e):o+=Jne(r,e)),o}function xne(r,e,t){switch(r.length){case 0:return KB();case 1:return Pne(r,e,t);case 2:return $ne(r,e,t);case 3:return Mne(r,e,t);default:return Rne(r,e,t)}}function Ine(r,e,t){switch(r.length){case 0:return KB();case 1:return Ene(r,e,t);case 2:return One(r,e,t);case 3:return Fne(r,e,t);case 4:return Lne(r,e,t);case 5:return _ne(r,e);case 6:return Bne(r,e);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function Cne(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function kne(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function Sne(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function vne(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${Ane}
    ${wne}
    ${Nne}
  `}var Ane=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,wne=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Nne=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Dne=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function KB(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function Pne(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return n[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function Ene(r,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function Mne(r,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[2]/2),s=o*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function Fne(r,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${wl(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let n=Ua(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function Rne(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[r.length-1]/2),s=o*Math.ceil(r[r.length-2]/2),i=s,a="",u="b, r, c";for(let p=2;p<r.length-1;p++)i*=r[r.length-p-1],a=`
      int b${p} = index / ${i};
      index -= b${p} * ${i};
    `+a,u=`b${p}, `+u;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${a}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${r.length}(${u});
    }
  `}function Lne(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${wl(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let n=Ua(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function _ne(r,e){let t=Ua(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Bne(r,e){let t=Ua(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function $ne(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(b.arraysEqual(r,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let o=Math.ceil(r[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function One(r,e,t){return b.arraysEqual(r,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:r[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function Nl(r){return`offset${r}`}function zne(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),n=Xt();return`
    vec4 ${t}() {
      return ${n.texture2D}(${e}, halfCR);
    }
  `}function Gne(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;let[o,s]=r.shapeInfo.texShape;if(o===1&&s===1)return`
      float ${n}() {
        return sampleTexture(${t}, halfCR);
      }
    `;let i=Nl(t);if(e)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${i});
      return sampleTexture(${t}, uv);
    }
  `;let[a,u]=r.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${a}, ${u}, ${i});
      return sampleTexture(${t}, uv);
    }
  `}function Une(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=r.shapeInfo.texShape,s=Xt();if(e)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${t}, uv);
    }
  `;let i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${t}, uv);
    }
  `}function Wne(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${$c(r)}
      }
    `;let o=r.shapeInfo.texShape,s=o[0],i=o[1];if(i===1&&s===1)return`
      float ${n}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;let a=Nl(t);return i===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${s}.0);
        return sampleTexture(${t}, uv);
      }
    `:s===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${a});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${a});
      return sampleTexture(${t}, uv);
    }
  `}function Kne(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,i=s[0],a=s[1],u=Xt();if(s!=null&&b.arraysEqual(t,s))return e?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${u.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${u.texture2D}(${n}, uv);
      }
    `;if(e)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `;let p=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],l=Math.ceil(t[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${p[0]}, ${p[1]}, row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `}function Vne(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape;if(s!=null&&b.arraysEqual(t,s)){if(e)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;let c=s[0],d=s[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${d}.0, ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:i,keptDims:a}=b.squeezeShape(t),u=i;if(u.length<t.length){let c=Oc(r,u),d=["row","col"];return`
      ${Bc(c,e)}
      float ${o}(int row, int col) {
        return ${o}(${zc(d,a)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${$c(r)}
      }
    `;let p=s[0],l=s[1],m=Nl(n);return l===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${p}.0);
      return sampleTexture(${n}, uv);
    }
  `:p===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:e?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${m};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${m};
    vec2 uv = uvFromFlat(${p}, ${l}, index);
    return sampleTexture(${n}, uv);
  }
`}function Hne(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(t[0]===1){let c=t.slice(1),d=[1,2],f=Oc(r,c),h=["b","row","col"];return`
        ${WB(f,e)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${zc(h,d)});
        }
      `}let a=Xt();if(e)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `;let u=i[0],p=i[1],l=Math.ceil(t[2]/2),m=l*Math.ceil(t[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${p}, ${m}, ${l}, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `}function qne(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],i=t[2],{newShape:a,keptDims:u}=b.squeezeShape(t),p=a;if(p.length<t.length){let h=Oc(r,p),g=["row","col","depth"];return`
        ${Bc(h,e)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${zc(g,u)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${$c(r)}
      }
    `;let l=r.shapeInfo.texShape,m=l[0],c=l[1],d=r.shapeInfo.flatOffset;if(c===s&&d==null)return e?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${c}.0, ${m}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(c===i&&d==null)return e?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${m}.0);
      return sampleTexture(${n}, uv);
    }
  `;let f=Nl(n);return e?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * ${s} + col * ${i} + depth + ${f};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${m}, ${c}, index);
        return sampleTexture(${n}, uv);
      }
  `}function jne(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=Xt();if(e)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${t}, uv);
    }
  `;let s=r.shapeInfo.logicalShape,i=s.length,a=r.shapeInfo.texShape,u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],p=u[0],l=u[1],m=Math.ceil(s[i-1]/2),c=m*Math.ceil(s[i-2]/2),d="int b, int row, int col",f=`b * ${c} + (row / 2) * ${m} + (col / 2)`;for(let h=2;h<i-1;h++)d=`int b${h}, `+d,c*=s[i-h-1],f=`b${h} * ${c} + `+f;return`
    vec4 ${n}(${d}) {
      int index = ${f};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${p});
      return ${o.texture2D}(${t}, uv);
    }
  `}function Xne(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],i=t[2]*s,a=t[1]*i,{newShape:u,keptDims:p}=b.squeezeShape(t);if(u.length<t.length){let T=Oc(r,u),x=["row","col","depth","depth2"];return`
      ${Bc(T,e)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${zc(x,p)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${s}, 1)));
        ${$c(r)}
      }
    `;let l=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1],f=`int stride2 = ${n}Shape[3];`,h=`int stride1 = ${n}Shape[2] * stride2;`,g=`int stride0 = ${n}Shape[1] * stride1;`;if(d===a&&l==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${f}
        ${h}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(d===s&&l==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;let y=Nl(n);return e?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${h}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${y});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${c}, ${d}, index + ${y});
      return sampleTexture(${n}, uv);
    }
  `}function Yne(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[4],s=e[3]*o,i=e[2]*s,a=e[1]*i,{newShape:u,keptDims:p}=b.squeezeShape(e);if(u.length<e.length){let h=Oc(r,u),g=["row","col","depth","depth2","depth3"];return`
      ${Bc(h)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${zc(g,p)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${s}, ${o})) +
          depth3;
        ${$c(r)}
      }
    `;let l=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1];if(d===a&&l==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(d===o&&l==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${t}, uv);
      }
    `;let f=Nl(t);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${s} +
          depth2 * ${o} + depth3 + ${f};
      vec2 uv = uvFromFlat(${c}, ${d}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Qne(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:o,keptDims:s}=b.squeezeShape(e);if(o.length<e.length){let g=Oc(r,o),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Bc(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${zc(y,s)});
      }
    `}let i=e[5],a=e[4]*i,u=e[3]*a,p=e[2]*u,l=e[1]*p;if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${p}, ${u}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${$c(r)}
      }
    `;let m=r.shapeInfo.flatOffset,c=r.shapeInfo.texShape,d=c[0],f=c[1];if(f===l&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${p}, ${u}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===i&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;let h=Nl(t);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${p} + depth * ${u} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${h};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function $c(r){let e=r.name,t=b.sizeFromShape(r.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function Zne(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=r.shapeInfo.logicalShape.length,i=e.logicalShape.length,a=GB(r.shapeInfo.logicalShape,e.logicalShape),u=Ve(i),p=i-s,l,m=["x","y","z","w","u","v"];s===0?l="":i<2&&a.length>=1?l="coords = 0;":l=a.map(T=>`coords.${m[T+p]} = 0;`).join(`
`);let c="";i<2&&s>0?c="coords":c=r.shapeInfo.logicalShape.map((T,x)=>`coords.${m[x+p]}`).join(", ");let d="return outputValue;",h=b.sizeFromShape(r.shapeInfo.logicalShape)===1,y=b.sizeFromShape(e.logicalShape)===1;if(s===1&&!h&&!y)d=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(h&&!y)i===1?d=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:d=`
        return vec4(outputValue.x);
      `;else if(a.length){let T=s-2,x=s-1;a.indexOf(T)>-1&&a.indexOf(x)>-1?d="return vec4(outputValue.x);":a.indexOf(T)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(x)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${u} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${n}(${c});
      ${d}
    }
  `}function Jne(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=e.texShape,i=r.shapeInfo.texShape,a=r.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!r.shapeInfo.isUniform&&a===u&&r.shapeInfo.flatOffset==null&&b.arraysEqual(i,s))return`
      float ${o}() {
        return sampleTexture(${t}, resultUV);
      }
    `;let p=Ve(u),l=GB(r.shapeInfo.logicalShape,e.logicalShape),m=u-a,c,d=["x","y","z","w","u","v"];a===0?c="":u<2&&l.length>=1?c="coords = 0;":c=l.map(h=>`coords.${d[h+m]} = 0;`).join(`
`);let f="";return u<2&&a>0?f="coords":f=r.shapeInfo.logicalShape.map((h,g)=>`coords.${d[g+m]}`).join(", "),`
    float ${o}() {
      ${p} coords = getOutputCoords();
      ${c}
      return get${n}(${f});
    }
  `}function Ve(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function yT(r,e,t){let{newShape:n,keptDims:o}=b.squeezeShape(e),s=e.length,i=r&&s===3&&e[0]===1,a=i?e.slice(1):n,u=!r&&s>1&&!b.arraysEqual(e,t)&&n.length<s||i;return{useSqueezeShape:u,uniformShape:u?a:e,keptDims:o}}function Oc(r,e){let t=JSON.parse(JSON.stringify(r));return t.shapeInfo.logicalShape=e,t}function zc(r,e){return e.map(t=>r[t]).join(", ")}function HB(r,e,t,n){let o=t.map((I,k)=>{let N={logicalShape:I.shape,texShape:I.isUniform?null:I.texData.texShape,isUniform:I.isUniform,isPacked:I.isUniform?!1:I.texData.isPacked,flatOffset:null};return I.texData!=null&&I.texData.slice!=null&&I.texData.slice.flatOffset>0&&(N.flatOffset=I.texData.slice.flatOffset),{name:e.variableNames[k],shapeInfo:N}}),s=o.map(I=>I.shapeInfo),i={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},a=UB(o,i,e),u=pA(r.gl,a),p=r.createProgram(u),l=null,m=r.getUniformLocation(p,"NAN",!1);$().getNumber("WEBGL_VERSION")===1&&(l=r.getUniformLocation(p,"INFINITY",!1));let c=!1,d={},f={},h={};for(let I=0;I<e.variableNames.length;I++){let k=e.variableNames[I];d[k]=r.getUniformLocation(p,k,c),d[`offset${k}`]=r.getUniformLocation(p,`offset${k}`,c),e.enableShapeUniforms&&(f[`${k}Shape`]=r.getUniformLocation(p,`${k}Shape`,c),h[`${k}TexShape`]=r.getUniformLocation(p,`${k}TexShape`,c))}let g,y,T;e.enableShapeUniforms&&(g=r.getUniformLocation(p,"outShape",c),T=r.getUniformLocation(p,"outShapeStrides",c),y=r.getUniformLocation(p,"outTexShape",c));let x=[];return e.customUniforms&&e.customUniforms.forEach((I,k)=>{x[k]=r.getUniformLocation(p,I.name,c)}),{program:e,fragmentShader:u,source:a,webGLProgram:p,uniformLocations:d,customUniformLocations:x,inShapeInfos:s,outShapeInfo:i,infLoc:l,nanLoc:m,inShapesLocations:f,inTexShapesLocations:h,outShapeLocation:g,outShapeStridesLocation:T,outTexShapeLocation:y}}function VB(r,e){if(r.length!==e.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${e.length} inputs`);r.forEach((t,n)=>{let o=t.logicalShape,s=e[n],i=s.shape;if(!b.arraysEqual(o,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${i} must match`);if(t.isUniform&&s.isUniform)return;let a=t.texShape,u=s.isUniform?null:s.texData.texShape;if(!b.arraysEqual(a,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${u} must match`)})}function qB(r,e,t,n,o){e.program.enableShapeUniforms||(VB(e.inShapeInfos,t),VB([e.outShapeInfo],[n]));let s=n.texData.texture,i=n.texData.texShape;n.texData.isPacked?r.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):r.setOutputMatrixTexture(s.texture,i[0],i[1]),r.setProgram(e.webGLProgram),$().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&r.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&r.gl.uniform1f(e.nanLoc,NaN),t.forEach((u,p)=>{let l=e.program.variableNames[p],m=e.uniformLocations[l],c=e.uniformLocations[`offset${l}`],d=e.inShapesLocations[`${l}Shape`],f=e.inTexShapesLocations[`${l}TexShape`];if(d){let{uniformShape:h}=yT(e.program.packedInputs,u.shape,u.texData.texShape);switch(h.length){case 1:r.gl.uniform1iv(d,new Int32Array(h));break;case 2:r.gl.uniform2iv(d,new Int32Array(h));break;case 3:r.gl.uniform3iv(d,new Int32Array(h));break;case 4:r.gl.uniform4iv(d,new Int32Array(h));break;default:break}}if(f&&r.gl.uniform2i(f,u.texData.texShape[0],u.texData.texShape[1]),m!=null){if(u.isUniform){if(b.sizeFromShape(u.shape)<2)r.gl.uniform1f(m,u.uniformValues[0]);else{let h=u.uniformValues;h instanceof Float32Array||(h=new Float32Array(h)),r.gl.uniform1fv(m,h)}return}u.texData.slice!=null&&c!=null&&r.gl.uniform1i(c,u.texData.slice.flatOffset),r.setInputMatrixTexture(u.texData.texture.texture,m,p)}});let a=e.outShapeLocation;if(a)switch(n.shape.length){case 1:r.gl.uniform1iv(a,new Int32Array(n.shape));break;case 2:r.gl.uniform2iv(a,new Int32Array(n.shape));break;case 3:r.gl.uniform3iv(a,new Int32Array(n.shape));break;case 4:r.gl.uniform4iv(a,new Int32Array(n.shape));break;default:break}if(e.outShapeStridesLocation){let u=b.computeStrides(n.shape);switch(n.shape.length){case 2:r.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(u));break;case 3:r.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(u));break;case 4:r.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(u));break;default:break}}e.outTexShapeLocation&&r.gl.uniform2i(e.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),e.program.customUniforms&&o&&e.program.customUniforms.forEach((u,p)=>{let l=e.customUniformLocations[p],m=o[p];if(u.type==="float")r.gl.uniform1fv(l,m);else if(u.type==="vec2")r.gl.uniform2fv(l,m);else if(u.type==="vec3")r.gl.uniform3fv(l,m);else if(u.type==="vec4")r.gl.uniform4fv(l,m);else if(u.type==="int")r.gl.uniform1iv(l,m);else if(u.type==="ivec2")r.gl.uniform2iv(l,m);else if(u.type==="ivec3")r.gl.uniform3iv(l,m);else if(u.type==="ivec4")r.gl.uniform4iv(l,m);else throw Error(`uniform type ${u.type} is not supported yet.`)}),r.executeProgram()}function jB(r,e,t){let n="";e.concat(t).forEach(i=>{let a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!i.isUniform){let u=i.texData.texShape,{useSqueezeShape:p,uniformShape:l,keptDims:m}=yT(r.packedInputs,i.shape,u),c="",d="",f="";if(l.length===1&&r.packedInputs){let k=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];c=`${k[0]>1}_${k[1]>1}`}else if(l.length===2&&!r.packedInputs)d=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!r.packedInputs){let k=b.computeStrides(l);f=`${k[0]===u[1]}_${k[k.length-1]===u[1]}`}let h=i.shape.length,g=l.length===2&&b.arraysEqual(i.shape,u),y=b.sizeFromShape(i.shape)===1,T=C.getBroadcastDims(i.shape,t.shape),x=!r.packedInputs&&h===t.shape.length&&b.arraysEqual(u,t.texData.texShape),I=r.packedInputs||l.length>2?"":`${u[0]>1}_${u[1]>1}`;n+=`${h}_${x}_${p?m:""}_${l.length}_${y}_${T}_${g}_${c}_${d}_${f}_${I}_${a}`}else{let u=i.isUniform?"uniform":i.texData.texShape;n+=`${i.shape}_${u}_${a}`}});let o=r.userCode,s=r.constructor.name;return s+="_"+n+"_"+o+`${$().getNumber("WEBGL_VERSION")}`,s}function Lt(r){return $().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var wA=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.outPackingScheme=0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Xt();this.outputShape=e,this.enableShapeUniforms=Lt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?wl(["r","c","d"],e):Ua(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}};var NA=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outPackingScheme=0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Xt();this.outputShape=e,this.enableShapeUniforms=Lt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?wl(["r","c","d"],e):Ua(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}};var DA=class{constructor(e){this.variableNames=["A"];this.outTexUsage=3;let t=Xt();this.outputShape=e,this.userCode=`
      ${bT}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}};var PA=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outTexUsage=3;let t=Xt();this.outputShape=e,this.userCode=`
      ${bT}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}};var EA=class{constructor(e,t=!1){this.variableNames=["A"];this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Xt();this.outputShape=e,this.enableShapeUniforms=Lt(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?Lc():Rc(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${o}, 0., 0., 0.);
      }
    `}};var MA=class{constructor(e,t=!1){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Xt();this.outputShape=e,this.enableShapeUniforms=Lt(this.outputShape.length);let o="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){let u=i*2+a;o+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Lc():Rc(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${n.output} = ${s};
        }
    `}};var XA={};je(XA,{bindVertexProgramAttributeStreams:()=>GA,createBufferFromOutputTexture:()=>KA,createFloat16MatrixTexture:()=>BA,createFloat16PackedMatrixTexture:()=>zA,createFloat32MatrixTexture:()=>_A,createIndexBuffer:()=>LA,createPackedMatrixTexture:()=>OA,createUnsignedBytesMatrixTexture:()=>$A,createVertexBuffer:()=>RA,createVertexShader:()=>FA,downloadByteEncodedFloatMatrixFromOutputTexture:()=>HA,downloadFloat32MatrixFromBuffer:()=>VA,downloadMatrixFromPackedOutputTexture:()=>jA,downloadPackedMatrixFromBuffer:()=>qA,getInternalFormatForFloat16MatrixTexture:()=>IT,getInternalFormatForFloat16PackedMatrixTexture:()=>ST,getInternalFormatForFloat32MatrixTexture:()=>xT,getInternalFormatForPackedMatrixTexture:()=>kT,getInternalFormatForUnsignedBytesMatrixTexture:()=>CT,uploadDenseMatrixToTexture:()=>UA,uploadPixelDataToTexture:()=>WA});function FA(r){let e=Xt(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return uA(r,t)}function RA(r){let e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return cA(r,e)}function LA(r){let e=new Uint16Array([0,1,2,2,1,3]);return dA(r,e)}function eg(r,e,t,n,o,s){hA(e,t);let i=fA(r),a=r.TEXTURE_2D;return ve(r,()=>r.bindTexture(a,i)),ve(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),ve(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),ve(r,()=>r.texParameteri(a,r.TEXTURE_MIN_FILTER,r.NEAREST)),ve(r,()=>r.texParameteri(a,r.TEXTURE_MAG_FILTER,r.NEAREST)),$().getNumber("WEBGL_VERSION")===1?ve(r,()=>r.texImage2D(a,0,n,e,t,0,o,s,null)):ve(r,()=>r.texStorage2D(a,1,n,e,t)),ve(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:i,texShape:[t,e]}}function xT(r){return r.internalFormatFloat}function _A(r,e,t,n){let[o,s]=Al(e,t);return eg(r,o,s,xT(n),n.textureFormatFloat,r.FLOAT)}function IT(r){return r.internalFormatHalfFloat}function BA(r,e,t,n){let[o,s]=Al(e,t);return eg(r,o,s,IT(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function CT(r){return r.downloadTextureFormat}function $A(r,e,t,n){let[o,s]=Al(e,t);return eg(r,o,s,CT(n),r.RGBA,r.UNSIGNED_BYTE)}function kT(r){return r.internalFormatPackedFloat}function OA(r,e,t,n){let[o,s]=Ti(e,t);return eg(r,o,s,kT(n),r.RGBA,r.FLOAT)}function ST(r){return r.internalFormatPackedHalfFloat}function zA(r,e,t,n){let[o,s]=Ti(e,t);return eg(r,o,s,ST(n),r.RGBA,n.textureTypeHalfFloat)}function GA(r,e,t){return ve(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),fT(r,e,"clipSpacePos",t,3,20,0)&&fT(r,e,"uv",t,2,20,12)}function UA(r,e,t,n,o,s){ve(r,()=>r.bindTexture(r.TEXTURE_2D,e));let i,a,u;o instanceof Uint8Array?(i=new Uint8Array(t*n*4),a=r.UNSIGNED_BYTE,u=r.RGBA):(i=new Float32Array(t*n*4),a=r.FLOAT,u=s.internalFormatPackedFloat),i.set(o),$().getNumber("WEBGL_VERSION")===2?ve(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t,n,r.RGBA,a,i)):ve(r,()=>r.texImage2D(r.TEXTURE_2D,0,u,t,n,0,r.RGBA,a,i)),ve(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function WA(r,e,t){ve(r,()=>r.bindTexture(r.TEXTURE_2D,e)),t.data instanceof Uint8Array?$().getNumber("WEBGL_VERSION")===2?ve(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t.width,t.height,r.RGBA,r.UNSIGNED_BYTE,t.data)):ve(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t.width,t.height,0,r.RGBA,r.UNSIGNED_BYTE,t.data)):$().getNumber("WEBGL_VERSION")===2?ve(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,t)):ve(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t)),ve(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function KA(r,e,t,n){let o=r.createBuffer();ve(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,o));let a=4*4*e*t;return ve(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,a,r.STREAM_READ)),ve(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,0)),ve(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),o}function VA(r,e,t){let n=r,o=new Float32Array(t);return n.bindBuffer(n.PIXEL_PACK_BUFFER,e),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,o),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),o}function HA(r,e,t,n){let[o,s]=Al(e,t),i=4,a=new Uint8Array(RB(e*t,i));return ve(r,()=>r.readPixels(0,0,o,s,n.downloadTextureFormat,r.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function qA(r,e,t,n,o,s,i,a){let u=r,p=new Float32Array(LB(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,p),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),p}function jA(r,e,t){let n=new Float32Array(e*t*4);return ve(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,n)),n}var Gc=class{constructor(e){this.outputTexture=null;this.program=null;this.disposed=!1;this.vertexAttrsAreBound=!1;this.itemsToPoll=[];let t=$().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,oA(t,e)):this.gl=Zn(t);let n="WEBGL_color_buffer_float",o="EXT_color_buffer_half_float";if($().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=Ec(this.gl,s),Jn(this.gl,i))this.textureHalfFloatExtension=Ec(this.gl,i);else if($().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Jn(this.gl,o))this.colorBufferHalfFloatExtension=Ec(this.gl,o);else if($().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Jn(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Jn(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=RA(this.gl),this.indexBuffer=LA(this.gl),this.framebuffer=gA(this.gl),this.textureConfig=Yh(this.gl,this.textureHalfFloatExtension)}get debug(){return $().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;ve(e,()=>e.finish()),ve(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ve(e,()=>e.deleteFramebuffer(this.framebuffer)),ve(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ve(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ve(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),_A(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),BA(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),$A(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),WA(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,o){this.throwIfDisposed(),UA(this.gl,e,t,n,o,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),zA(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),OA(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(hT(this.gl,this.framebuffer),this.outputTexture=null),ve(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>HA(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,o,s,i){return qA(this.gl,e,t,n,o,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return VA(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let o=KA(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if($().getBool("WEBGL_FENCE_API_ENABLED")){let o=e,s=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let i=o.clientWaitSync(s,0,0);return i===o.ALREADY_SIGNALED||i===o.CONDITION_SATISFIED},t=s}else $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>jA(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=FA(t));let n=lA(t);return ve(t,()=>t.attachShader(n,this.vertexShader)),ve(t,()=>t.attachShader(n,e)),mA(t,n),this.debug&&Qh(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=GA(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&ve(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Qh(this.gl,this.program),ve(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?bA(this.gl,e,t):yA(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ve(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),TA(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[o,s]=Ti(t,n);this.setOutputMatrixTextureDriver(e,o,s)}setOutputMatrixWriteRegion(e,t,n,o){this.setOutputMatrixWriteRegionDriver(n,e,o,t)}setOutputPackedMatrixWriteRegion(e,t,n,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Qh(this.gl,this.program),Mc(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),ve(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ve(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Ec(this.gl,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,s),s}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await b.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),o=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=roe(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&b.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Zh(this.gl,e,this.framebuffer),this.debug&&Mc(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Zh(this.gl,this.outputTexture,this.framebuffer),this.debug&&Mc(this.gl)):hT(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let o=this.gl;Zh(o,e,this.framebuffer),this.debug&&Mc(o),this.outputTexture=e,ve(o,()=>o.viewport(0,0,t,n)),ve(o,()=>o.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,o){this.throwIfDisposed(),ve(this.gl,()=>this.gl.scissor(e,t,n,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function roe(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var{addImpl:YB,bincountImpl:vT,bincountReduceImpl:QB,ceilImpl:ZB,concatImpl:JB,equalImpl:e$,expImpl:t$,expm1Impl:r$,floorImpl:n$,gatherNdImpl:o$,gatherV2Impl:s$,greaterImpl:a$,greaterEqualImpl:i$,lessImpl:u$,lessEqualImpl:p$,linSpaceImpl:l$,logImpl:m$,maxImpl:c$,maximumImpl:d$,minimumImpl:f$,multiplyImpl:h$,negImpl:g$,notEqualImpl:b$,prodImpl:y$,rangeImpl:T$,rsqrtImpl:x$,sigmoidImpl:I$,simpleAbsImpl:AT,sliceImpl:C$,sparseFillEmptyRowsImpl:k$,sparseReshapeImpl:S$,sparseSegmentReductionImpl:wT,sqrtImpl:v$,stridedSliceImpl:A$,stringNGramsImpl:w$,stringSplitImpl:N$,stringToHashBucketFastImpl:D$,subImpl:P$,tileImpl:E$,topKImpl:M$,transposeImpl:Dl,uniqueImpl:F$}=wc;function YA(r,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${r}.${t}`)}function nr(r,e){return e===1?[r]:YA(r,e)}function R$(r,e){if(r===1)return"rc";let t="";for(let n=0;n<r;n++)t+=e[n],n<r-1&&(t+=",");return t}var QA=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;if(this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Lt(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=nr("rc",this.rank),n=Ve(this.rank),o=this.getOutOfBoundsCondition(t),s=this.getSetup(t),i=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let o=0;o<=1;o++){let s=`${n===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)s=`${e[e.length-1-i]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${o};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}};var tg=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec3"}];this.outputShape=e,this.enableShapeUniforms=Lt(this.outputShape.length);let n="";for(let o=0;o<4;o++){let s="thisRC = rc;";o%2===1&&(s+="thisRC.z += 1;"),o>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${noe(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Lc():Rc(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function noe(r,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?zB(["r","c","d"],"inputShape"):Ua(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var ZA=class{constructor(e){this.gpgpu=e;this.numUsedTextures=0;this.numFreeTextures=0;this._numBytesAllocated=0;this._numBytesFree=0;this.freeTextures={};this.logEnabled=!1;this.usedTextures={}}acquireTexture(e,t,n){let o=_$(t,n),s=B$(e,o,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let i=L$(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let u=this.freeTextures[s].shift();return this.usedTextures[s].push(u),u}let a;return o===3?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===4?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===1?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===0?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===2&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,n,o){if(this.freeTextures==null)return;let s=_$(n,o),i=B$(t,s,o);i in this.freeTextures||(this.freeTextures[i]=[]);let a=L$(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,o),u=$().get("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;let p=this.usedTextures[i],l=p.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");p.splice(l,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function ooe(r,e){let t=r;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===r.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function L$(r,e,t,n,o){let s=soe(e,n),i;if(o){let[u,p]=Ti(r[0],r[1]);i=u*p}else{let[u,p]=Al(r[0],r[1]);i=u*p}let a=ooe(t,s);return i*a}function soe(r,e){switch(r){case 3:return kT(e);case 4:return ST(e);case 1:return xT(e);case 0:return IT(e);case 2:return CT(e);default:throw new Error(`Unknown physical texture type ${r}`)}}function aoe(r){return $().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?3:1:r?4:0}function _$(r,e){if(r===1)return 3;if(r===0||r==null)return aoe(e);if(r===3||r===2)return 2;throw new Error(`Unknown logical texture type ${r}`)}function B$(r,e,t){return`${r[0]}_${r[1]}_${e}_${t}`}var xn=class{constructor(e,t){this.variableNames=["A"];this.outputShape=e,this.enableShapeUniforms=Lt(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},yr="if (isnan(x)) return x;",$$="return x;",JA="return abs(x);";var O$="return (x >= 0.0) ? x : (exp(x) - 1.0);",z$=yr+`
  return (x < 0.0) ? 0.0 : x;
`,G$=yr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Pl="return x;",U$="return 1.0 / (1.0 + exp(-1.0 * x));";var K$="return x;",V$=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,H$=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,q$=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,j$="return 1.0 / (1.0 + exp(-1.0 * x));",Xs=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.enableShapeUniforms=Lt(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var ew=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outputShape=e,this.enableShapeUniforms=Lt(this.outputShape.length);let t=e.length,n=nr("rc",t),o=Ve(t),s=R$(t,n),i=n.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}};var uoe=br.whereImpl,poe=1e-7,loe=1e-4,NT={};function moe(r){return r in NT||(NT[r]={}),NT[r]}var coe=$().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),doe=600;function foe(){return $().global.screen==null?1024:$().global.screen.height*$().global.screen.width*window.devicePixelRatio*doe/1024/1024}var tw=class extends ps{constructor(e){super();this.pendingRead=new WeakMap;this.pendingDisposal=new WeakSet;this.dataRefCount=new WeakMap;this.numBytesInGPU=0;this.uploadWaitMs=0;this.downloadWaitMs=0;this.lastGlFlushTime=0;this.warnedAboutMemory=!1;this.pendingDeletes=0;this.disposed=!1;if(!$().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Gc)t=e;else{let n=Zn($().getNumber("WEBGL_VERSION"),e);t=new Gc(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=Zn($().getNumber("WEBGL_VERSION"));t=new Gc(n),this.binaryCache=moe($().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new ZA(this.gpgpu),this.numMBBeforeWarning=foe(),this.texData=new Xa(this,qn())}nextDataId(){return tw.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if(($().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||$().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()};return this.texData.set(o,{shape:t,dtype:n,values:e,usage:1,refCount:1}),o}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,o,s){if($().getBool("DEBUG")&&this.checkNumericalProblems(t),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:o,values:t,usage:1,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:o,complexTensorInfos:s,slice:i,shape:a,isPacked:u}=t;if(i!=null){let c;u?c=new Xs(a,Pl):c=new xn(a,Pl);let d=this.runWebGLProgram(c,[{dataId:e,shape:a,dtype:o}],o),f=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),f}if(n!=null)return this.convertAndCacheOnCPU(e);if(o==="string")return n;let p=this.activeTimers!=null,l;p&&(l=b.now());let m;if(o==="complex64"){let c=this.readSync(s.real.dataId),d=this.readSync(s.imag.dataId);m=C.mergeRealAndImagArrays(c,d)}else m=this.getValuesFromTexture(e);return p&&(this.downloadWaitMs+=b.now()-l),this.convertAndCacheOnCPU(e,m)}async read(e){if(this.pendingRead.has(e)){let f=this.pendingRead.get(e);return new Promise(h=>f.push(h))}let t=this.texData.get(e),{values:n,shape:o,slice:s,dtype:i,complexTensorInfos:a,isPacked:u}=t;if(s!=null){let f;u?f=new Xs(o,Pl):f=new xn(o,Pl);let h=this.runWebGLProgram(f,[{dataId:e,shape:o,dtype:i}],i),g=this.read(h.dataId);return this.disposeIntermediateTensorInfo(h),g}if(n!=null)return this.convertAndCacheOnCPU(e);if($().getBool("DEBUG")&&!$().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&$().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let p=null,l;if(i!=="complex64"&&$().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let f=this.texData.get(l.dataId);p=this.gpgpu.createBufferFromTexture(f.texture.texture,...Xh(o))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let m;if(i==="complex64"){let f=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),h=f[0],g=f[1];m=C.mergeRealAndImagArrays(h,g)}else if(p==null)m=this.getValuesFromTexture(e);else{let f=b.sizeFromShape(o);m=this.gpgpu.downloadFloat32MatrixFromBuffer(p,f)}if(l!=null&&this.disposeIntermediateTensorInfo(l),p!=null){let f=this.gpgpu.gl;ve(f,()=>f.deleteBuffer(p))}let c=this.convertAndCacheOnCPU(e,m),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(f=>f(c)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&qn().removeDataId(e,this),this.pendingDeletes--),c}readToGPU(e,t={}){let n=this.texData.get(e),{values:o,shape:s,slice:i,dtype:a,isPacked:u,texture:p}=n;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let d;u?d=new Xs(s,Pl):d=new xn(s,Pl);let f=this.runWebGLProgram(d,[{dataId:e,shape:s,dtype:a}],a),h=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),h}if(p==null)throw o!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let l=this.decode(e,t.customTexShape),m=qn().makeTensorFromDataId(l.dataId,l.shape,l.dtype),c=this.texData.get(l.dataId);return{tensorRef:m,...c.texture}}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>b.decodeString(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ke(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!iA(n))throw $().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:o}=this.texData.get(e),s=b.sizeFromShape(t);if($().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let c=this.decode(e),d=this.texData.get(c.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...Xh(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(c),f}let i=$().getBool("WEBGL_PACK")&&o===!0,a=i?Jh(t):t,u=i?new PA(a):new DA(a),p=this.runWebGLProgram(u,[{shape:a,dtype:n,dataId:e}],"float32"),l=this.texData.get(p.dataId),m=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(p),m}timerAvailable(){return $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=b.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),i=b.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let u=await Promise.all(s);a.kernelMs=b.sum(u),a.getExtraProfileInfo=()=>u.map((p,l)=>({name:i[l],ms:p})).map(p=>`${p.name}: ${p.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:b.now(),endMs:null}}endTimer(e){return $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=b.now(),e)}async getQueryTime(e){if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:o,usage:s,isPacked:i,slice:a}=this.texData.get(e),u=a&&a.origDataId||e,p=this.dataRefCount.get(u);p>1?this.dataRefCount.set(u,p-1):(this.dataRefCount.delete(u),t!=null&&(this.numBytesInGPU-=this.computeBytes(o,n),this.textureManager.releaseTexture(t,o,s,i)));let l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=coe){return $().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&b.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){C.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return uoe(e.shape,t)}packedUnaryOp(e,t,n){let o=new Xs(e.shape,t),s=this.compileAndRun(o,[e],n);return qn().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let o=AT(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,o)}if($().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,JA,e.dtype);let t=new xn(e.shape,JA),n=this.compileAndRun(t,[e]);return qn().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(i=>b.encodeString(i));o=this.write(s,e,t)}else o=this.write(n,e,t);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:o}=this.makeTensorInfo(e,t,n);return qn().makeTensorFromDataId(o,e,t,this)}unpackTensor(e){let t=new ew(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new QA(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[Iu(e.shape),...Cu(e.shape)],o={dtype:e.dtype,shape:n,dataId:e.dataId},s=[Iu(t),...Cu(t)],i=new tg(s,n),a=!0,u=[n],p=this.runWebGLProgram(i,[o],e.dtype,u,a);return{dataId:p.dataId,shape:t,dtype:p.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:o,shape:s,dtype:i}=n;if(t!=null){let c=b.sizeFromShape(s),d=t[0]*t[1]*4;b.assert(c<=d,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let a=Jh(s),u;o?u=new NA(a):u=new wA(a);let p=!0,l=[t??Xh(a)],m=this.runWebGLProgram(u,[{shape:a,dtype:i,dataId:e}],i,l,p,t);return{dtype:i,shape:s,dataId:m.dataId}}runWebGLProgram(e,t,n,o,s=!1,i){let a=this.makeTensorInfo(e.outputShape,n),u=this.texData.get(a.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===0){let y=i??Xh(e.outputShape);u.texShape=y.map(T=>T*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),b.sizeFromShape(a.shape)===0)return u.values=b.getTypedArrayFromDType(a.dtype,0),a;let p=[],l=t.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let T=this.texData.get(y.dataId);if(T.texture==null){if(!e.packedInputs&&b.sizeFromShape(y.shape)<=$().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:T.values};e.packedInputs&&(T.isPacked=!0,T.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!T.isPacked!=!!e.packedInputs)y=T.isPacked?this.unpackTensor(y):this.packTensor(y),p.push(y),T=this.texData.get(y.dataId);else if(T.isPacked&&!dp(T.shape,y.shape)){let x=y,I=y.shape;y.shape=T.shape,y=this.packedReshape(y,I),p.push(y),T=this.texData.get(y.dataId),x.shape=I}return{shape:y.shape,texData:T,isUniform:!1}});this.uploadToGPU(a.dataId);let m={shape:a.shape,texData:u,isUniform:!1},c=jB(e,l,m),d=this.getAndSaveBinary(c,()=>HB(this.gpgpu,e,l,m)),f=this.activeTimers!=null,h;f&&(h=this.startTimer()),qB(this.gpgpu,d,l,m,o),p.forEach(y=>this.disposeIntermediateTensorInfo(y)),f&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));let g=$().get("WEBGL_FLUSH_THRESHOLD");if(g>0){let y=b.now();y-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!$().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&s===!1){let y=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),y}return a}compileAndRun(e,t,n,o,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,o,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||($().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=G(()=>{if(!$().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=$().getBool("DEBUG");$().set("DEBUG",!1);let t=this.abs(ce(1e-8)).dataSync()[0];if($().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?poe:loe}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:o,values:s,texture:i,usage:a,isPacked:u}=t;if(i!=null)return;let p=this.activeTimers!=null,l;p&&(l=b.now());let m=t.texShape;if(m==null&&(m=xA(n,u),t.texShape=m),s!=null){let c=Jh(n),d,f=m[1],h=m[0],g=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(u||!g)&&([f,h]=Ti(m[0],m[1])),u?d=new MA(c,g):d=new EA(c,g);let y=g?[h,f]:m,T=this.makeTensorInfo(y,o),x=this.texData.get(T.dataId);g?x.usage=2:x.usage=1,x.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(T.dataId),f,h,s);let I=[[h,f]],k=!0,N=this.runWebGLProgram(d,[T],o,I,k),E=this.texData.get(N.dataId);t.texture=E.texture,t.texShape=E.texShape,t.isPacked=E.isPacked,t.usage=E.usage,this.disposeIntermediateTensorInfo(T),this.texData.delete(N.dataId),t.values=null,p&&(this.uploadWaitMs+=b.now()-l)}else{let c=this.acquireTexture(m,a,o,u);t.texture=c}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:o}=n;return this.releaseGPUData(e),t!=null&&(n.values=hoe(t,o)),n.values}acquireTexture(e,t,n,o){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,o)}computeBytes(e,t){return e[0]*e[1]*b.bytesPerElement(t)}},rg=tw;rg.nextDataId=0;function hoe(r,e){if(e==="float32"||e==="complex64")return r;if(e==="int32"||e==="bool"){let t=e==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let n=0;n<t.length;++n)t[n]=Math.round(r[n]);return t}else throw new Error(`Unknown dtype ${e}`)}var goe="0.0.0";function X$(){$().set("WEBGL_FORCE_F16_TEXTURES",!0)}oi.isBrowser()&&Ju("webgl",()=>new rg,2);var ZHt={forceHalfFloat:X$};var DT=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var Ys=class{constructor(e,t,n){this.variableNames=["A","B"];this.outputShape=C.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=Lt(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var fp=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;var Wa=class{constructor(e,t,n,o=!1){this.variableNames=["A","B"];this.supportsBroadcasting=!0;this.packedInputs=!0;this.packedOutput=!0;this.outputShape=C.assertAndGetBroadcastShape(t,n);let s=this.outputShape.length;this.enableShapeUniforms=Lt(s);let i="";if(o)if(s===0||b.sizeFromShape(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${Ve(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let u=nr("coords",s);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}};function or(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var Y$={kernelName:Wn,backendName:"webgl",kernelFunc:or};function Ln(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),i=t.texData.get(s.dataId),a=or({inputs:{x:n},backend:t}),u=or({inputs:{x:o},backend:t});return i.complexTensorInfos={real:a,imag:u},s}var Q$={kernelName:Ru,backendName:"webgl",kernelFunc:Ln};var rw="return (a < 0.) ? b * a : a;",nw=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function boe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n,i=t.makeTensorInfo([],"float32",b.createScalarValue(s,"float32")),a=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Wa(nw,o.shape,i.shape):new Ys(rw,o.shape,i.shape),u=t.runWebGLProgram(a,[o,i],"float32");return t.disposeIntermediateTensorInfo(i),u}var Z$={kernelName:ko,backendName:"webgl",kernelFunc:boe};var ow="return (a < 0.) ? b * a : a;",sw=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function yoe(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Wa(sw,n.shape,o.shape):new Ys(ow,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],"float32")}var J$={kernelName:Lo,backendName:"webgl",kernelFunc:yoe};var Qs="if (isnan(x)) return x;",eO=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,tO=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function we({opSnippet:r,packedOpSnippet:e,cpuKernelImpl:t,dtype:n}){return({inputs:o,backend:s})=>{let{x:i}=o,a=s,u=n||i.dtype;if(a.shouldExecuteOnCPU([i])&&t!=null){let m=a.texData.get(i.dataId),c=t(m.values,u);return a.makeTensorInfo(i.shape,u,c)}let p=$().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null,l;return p?l=new Xs(i.shape,e):l=new xn(i.shape,r),a.runWebGLProgram(l,[i],u)}}function pt({opSnippet:r,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:n=!1,cpuKernelImpl:o,dtype:s}){return({inputs:i,backend:a})=>{let{a:u,b:p}=i,l=a;if(n&&u.dtype==="complex64"){let f=l.texData.get(u.dataId),h=l.texData.get(p.dataId),[g,y]=[[f.complexTensorInfos.real,h.complexTensorInfos.real],[f.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(x=>{let[I,k]=x,N={dataId:I.dataId,dtype:I.dtype,shape:u.shape},E={dataId:k.dataId,dtype:k.dtype,shape:p.shape},M=new Ys(r,u.shape,p.shape);return l.runWebGLProgram(M,[N,E],Ut(I.dtype,k.dtype))}),T=Ln({inputs:{real:g,imag:y},backend:l});return l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(y),T}let m=s||Ut(u.dtype,p.dtype);if((u.dtype==="string"||p.dtype==="string"||l.shouldExecuteOnCPU([u,p]))&&o!=null){let f=l.texData.get(u.dataId).values,h=l.texData.get(p.dataId).values,g=u.dtype==="string"?C.fromUint8ToStringArray(f):f,y=u.dtype==="string"?C.fromUint8ToStringArray(h):h,[T,x]=o(u.shape,p.shape,g,y,m),I=l.makeTensorInfo(x,m),k=l.texData.get(I.dataId);return k.values=T,I}let c=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null,d;return c?d=new Wa(e,u.shape,p.shape,t):d=new Ys(r,u.shape,p.shape),l.runWebGLProgram(d,[u,p],m)}}function hp(r,e=!1){if(r==="linear")return e?K$:$$;if(r==="relu")return e?H$:z$;if(r==="elu")return e?V$:O$;if(r==="relu6")return e?q$:G$;if(r==="prelu")return e?sw:ow;if(r==="leakyrelu")return e?nw:rw;if(r==="sigmoid")return e?j$:U$;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var ng=class{constructor(e,t,n,o=!1,s=!1,i=!1,a=null,u=!1,p=!1){this.variableNames=["matrixA","matrixB"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=n,this.enableShapeUniforms=Lt(this.outputShape.length);let l=o?e[1]:e[2],m=Math.ceil(l/2),c=o?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",f=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",y="";a&&(u?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:p?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,y="result = activation(result);");let T=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),p&&this.variableNames.push("leakyreluAlpha");let x="rc.x",I="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(I=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${m}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${m}; i++) {
          int batchA = ${x};
          int batchB = ${I};
          vec4 a = getMatrixA(batchA, ${c});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${h[0]});
          result += (${f[1]} * ${h[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${T}

        ${y}

        setOutput(result);
      }
    `}};var aw={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},PT=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.outputShape=C.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var rO="return a * b;";function og(r){let{inputs:e,backend:t}=r,{a:n,b:o}=e,s=C.upcastType(n.dtype,o.dtype);if(n.dtype==="complex64"){let a=t.texData.get(n.dataId),u=t.texData.get(o.dataId),p=new PT(aw.REAL,n.shape,o.shape),l=new PT(aw.IMAG,n.shape,o.shape),m=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:n.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:o.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:o.shape}],c=t.runWebGLProgram(p,m,"float32"),d=t.runWebGLProgram(l,m,"float32"),f=Ln({inputs:{real:c,imag:d},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),f}if(t.shouldExecuteOnCPU([n,o])){let a=t.texData.get(n.dataId),u=t.texData.get(o.dataId),[p,l]=h$(n.shape,o.shape,a.values,u.values,s),m=t.makeTensorInfo(l,s),c=t.texData.get(m.dataId);return c.values=p,m}let i;return $().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Wa(rO,n.shape,o.shape):i=new Ys(rO,n.shape,o.shape),t.runWebGLProgram(i,[n,o],s)}var nO={kernelName:Mo,backendName:"webgl",kernelFunc:og};function oO(r,e,t){let n=[Iu(r.shape),...Cu(r.shape)],o={dtype:r.dtype,shape:n,dataId:r.dataId},s=[Iu(e),...Cu(e)],i=new tg(s,n),a=!0,u=[n],p=t.runWebGLProgram(i,[o],r.dtype,u,a);return{dataId:p.dataId,shape:e,dtype:p.dtype}}function pe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,i=t,a=b.sizeFromShape(o.shape),u=b.inferFromImplicitShape(s,a),p=b.sizeFromShape(u);b.assert(a===p,()=>`The new shape (${u}) has ${p} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);let l=i.texData.get(o.dataId);return l.isPacked&&!dp(o.shape,u)&&!(l.texture!==null&&dp(l.shape,u))?oO(o,u,i):(i.incRef(o.dataId),{dataId:o.dataId,shape:u,dtype:o.dtype})}var sO={kernelName:ys,backendName:"webgl",kernelFunc:pe};var ET=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:i}=e;this.outputShape=[o,i];let a=Math.floor(n/4)*4,u=n%4,p="sumValue += dot(values, ones);";if(t!=null){let m=1/t;p=`sumValue += dot(values * ${b.isInt(m)?m.toPrecision(2):m}, ones);`}let l="";s%n>0&&(l=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${a};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${p}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${p}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${p}
        }
        setOutput(sumValue);
      }
    `}};var iw=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:i}=e;this.outputShape=[o,i];let a="0.0",u="";t==="prod"?a="1.0":t==="min"?(a="1.0 / 1e-20",u="min"):t==="max"&&(a="-1.0 / 1e-20",u="max");let p=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?p="sumValue":t==="prod"?p="prodValue":t==="all"?p="allValue":t==="any"&&(p="anyValue");let l=Math.floor(n/4)*4,m=n%4,c=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";t==="all"?(a="1.0",c=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):t==="any"&&(a="0.0",c=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${l};
        if (${m===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${c}
        }
        setOutput(${p});
      }
    `}};function xoe(r){let e=[];for(;e.length===0||e[e.length-1].outSize!==1;){let t=e.length?e[e.length-1].outSize:r[1],n=C.computeOptimalWindowSize(t);e.push({inSize:t,windowSize:n,outSize:Math.ceil(t/n)})}return e}function eo(r,e,t,n){let o=xoe(r.shape),s=r;for(let i=0;i<o.length;i++){let{inSize:a,windowSize:u,outSize:p}=o[i],l,m;t==="mean"?l=i===0?new ET({windowSize:u,inSize:a,batchSize:r.shape[0],outSize:p},a):new ET({windowSize:u,inSize:a,batchSize:r.shape[0],outSize:p}):l=new iw({windowSize:u,inSize:a,batchSize:r.shape[0],outSize:p},t),m=s,s=n.runWebGLProgram(l,[s],e),m.dataId!==r.dataId&&n.disposeIntermediateTensorInfo(m)}return s}var uw=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[t[i]];this.outputShape=n,this.rank=n.length;let o=Ve(this.rank),s=Ioe(t);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function Ioe(r){let e=r.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(e);for(let o=0;o<r.length;o++)n[r[o]]=t[o];return n.join()}var pw=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;let n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let o=Ve(this.rank),s=YA("rc",this.rank),i=new Array(this.rank);for(let l=0;l<t.length;l++)i[t[l]]=s[l];let a=`vec2(${i.slice(-2).join()})`,u=`++${s[this.rank-1]} < ${n[this.rank-1]}`,p=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${p};
      if(${u}) {
        result[1] = ${p};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${p};
        if(${u}) {
          result[3] = ${p};
        }
      }
      setOutput(result);
    }
    `}};function gp(r,e,t){let n=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new pw(r.shape,e):new uw(r.shape,e);return t.runWebGLProgram(n,[r],r.dtype)}function aO(r,e,t,n){let o=e,s=r.shape.length,i=b.parseAxisParam(o,r.shape),a=i,u=C.getAxesPermutation(a,s),p=u!=null,l=r;p&&(l=gp(r,u,n),a=C.getInnerMostAxes(a.length,s)),C.assertAxesAreInnerMostDims("sum",a,s);let[m,c]=C.computeOutAndReduceShapes(l.shape,a),d=m;t&&(d=C.expandShapeToKeepDim(m,i));let f=b.sizeFromShape(c),g=b.sizeFromShape(r.shape)/f,y=pe({inputs:{x:l},attrs:{shape:[g,f]},backend:n}),T=Zi(r.dtype),x=eo(y,T,"sum",n),I=pe({inputs:{x},attrs:{shape:d},backend:n});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),p&&n.disposeIntermediateTensorInfo(l),I}function El(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;return aO(o,s,i,t)}var iO={kernelName:Wo,backendName:"webgl",kernelFunc:El};function Vt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,i=t,a=o.shape.length,u=new Array(a);for(let l=0;l<u.length;l++)u[l]=o.shape[s[l]];let p;if(i.shouldExecuteOnCPU([o])){let m=i.texData.get(o.dataId).values,c=Dl(m,o.shape,o.dtype,s,u);p=i.makeTensorInfo(u,o.dtype);let d=i.texData.get(p.dataId);d.values=c}else p=gp(o,s,i);return p}var uO={kernelName:jo,backendName:"webgl",kernelFunc:Vt};var lw=1e3;function Ml({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:u=null}){let p=r.shape.length,l=e.shape.length,m=t?r.shape[p-2]:r.shape[p-1],c=n?e.shape[l-1]:e.shape[l-2],d=t?r.shape[p-1]:r.shape[p-2],f=n?e.shape[l-2]:e.shape[l-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),y=b.sizeFromShape(h),T=b.sizeFromShape(g),I=wr.assertAndGetBroadcastShape(r.shape.slice(0,-2),e.shape.slice(0,-2)).concat([d,f]);b.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let k=t?[y,m,d]:[y,d,m],N=n?[T,f,c]:[T,c,f],E=pe({inputs:{x:r},backend:o,attrs:{shape:k}}),M=pe({inputs:{x:e},backend:o,attrs:{shape:N}}),R=[E,M],B=Math.max(y,T),U=t?E.shape[1]:E.shape[2],W=s!=null,K=i!=null,H=u==="leakyrelu",V=u!=null?hp(u,!0):null,j=W||K||H||V!=null,ee;if((d===1||f===1)&&U>lw&&j===!1){let te=E,oe=M;t&&(te=Vt({inputs:{x:E},backend:o,attrs:{perm:[0,2,1]}}),R.push(te)),n&&(oe=Vt({inputs:{x:M},backend:o,attrs:{perm:[0,2,1]}}),R.push(oe));let ie=f!==1,se=f===1,ue=te;ie&&(ue=pe({inputs:{x:te},backend:o,attrs:{shape:[B,U,1]}}),R.push(ue));let ye=f===1?2:1,fe=oe;se&&(fe=pe({inputs:{x:oe},backend:o,attrs:{shape:[B,1,U]}}),R.push(fe));let Te=og({inputs:{a:ue,b:fe},backend:o});ee=El({inputs:{x:Te},backend:o,attrs:{axis:ye,keepDims:!0}}),R.push(Te)}else{let te=Ut(r.dtype,e.dtype),oe=new ng(k,N,[B,d,f],t,n,W,V,K,H),ie=[E,M];if(s!=null&&ie.push(s),K&&ie.push(i),H){let se=o.makeTensorInfo([],"float32",b.createScalarValue(a,"float32"));ie.push(se),R.push(se)}ee=o.runWebGLProgram(oe,ie,te)}let Z=pe({inputs:{x:ee},backend:o,attrs:{shape:I}});R.push(ee);for(let te of R)o.disposeIntermediateTensorInfo(te);return Z}function Coe(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:i,preluActivationWeights:a}=e,{transposeA:u,transposeB:p,activation:l,leakyreluAlpha:m}=n;return Ml({a:o,b:s,transposeA:u,transposeB:p,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:m,activation:l})}var pO={kernelName:As,backendName:"webgl",kernelFunc:Coe};var lO="return abs(x);";function koe(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=t.texData.get(n.dataId),i=AT(s.values);return t.makeTensorInfo(n.shape,n.dtype,i)}let o;return $().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Xs(n.shape,lO):o=new xn(n.shape,lO),t.runWebGLProgram(o,[n],n.dtype)}var mO={kernelName:ls,backendName:"webgl",kernelFunc:koe};var Soe=yr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,voe=we({opSnippet:Soe}),cO={kernelName:Di,backendName:"webgl",kernelFunc:voe};var Aoe=yr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,woe=we({opSnippet:Aoe}),dO={kernelName:Pi,backendName:"webgl",kernelFunc:woe};var fO="return a + b;",Noe=pt({opSnippet:fO,packedOpSnippet:fO,supportsComplex:!0,cpuKernelImpl:YB}),hO={kernelName:vn,backendName:"webgl",kernelFunc:Noe};var mw=class{constructor(e,t){this.outputShape=[];this.outputShape=e,this.variableNames=t.map((s,i)=>`T${i}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}};var cw=class{constructor(e,t){this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.variableNames=t.map((s,i)=>`T${i}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}};function MT(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return or({inputs:{x:n[0]},backend:t});if(n.length>$().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(n.length/2),p=MT({inputs:n.slice(0,u),backend:t}),l=MT({inputs:n.slice(u),backend:t});return MT({inputs:[p,l],backend:t})}let o=n.map(u=>u.dtype).reduce((u,p)=>Ut(u,p)),s=n.map(u=>u.shape),a=$().getBool("WEBGL_PACK")?new cw(n[0].shape,s):new mw(n[0].shape,s);return t.runWebGLProgram(a,n,o)}var gO={kernelName:so,backendName:"webgl",kernelFunc:MT};function Doe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n,a=o.shape.length,u=b.parseAxisParam(s,o.shape),p=u,l=C.getAxesPermutation(p,a),m=o;l!=null&&(m=Vt({inputs:{x:o},backend:t,attrs:{perm:l}}),p=C.getInnerMostAxes(p.length,a)),C.assertAxesAreInnerMostDims("all",p,a);let[c,d]=C.computeOutAndReduceShapes(m.shape,p),f=b.sizeFromShape(d),h=pe({inputs:{x:m},backend:t,attrs:{shape:[-1,f]}}),g=eo(h,h.dtype,"all",t),y;if(i){let T=C.expandShapeToKeepDim(c,u);y=pe({inputs:{x:g},backend:t,attrs:{shape:T}})}else y=pe({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(m),y}var bO={kernelName:Ei,backendName:"webgl",kernelFunc:Doe};function Poe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n,a=o.shape.length,u=b.parseAxisParam(s,o.shape),p=u,l=C.getAxesPermutation(p,a),m=o;l!=null&&(m=Vt({inputs:{x:o},backend:t,attrs:{perm:l}}),p=C.getInnerMostAxes(p.length,a)),C.assertAxesAreInnerMostDims("any",p,a);let[c,d]=C.computeOutAndReduceShapes(m.shape,p),f=b.sizeFromShape(d),h=pe({inputs:{x:m},backend:t,attrs:{shape:[-1,f]}}),g=eo(h,h.dtype,"any",t),y;if(i){let T=C.expandShapeToKeepDim(c,u);y=pe({inputs:{x:g},backend:t,attrs:{shape:T}})}else y=pe({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(m),y}var yO={kernelName:Mi,backendName:"webgl",kernelFunc:Poe};var dw=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:o,batchSize:s,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];let a=t==="max"?">":"<",u=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var fw=class{constructor(e,t,n,o){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;b.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=e[e.length-1],i=Math.ceil(s/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),o||this.variableNames.push("bestIndicesA");let a=this.outputShape,u=a.length,p=Ve(u),l=nr("coords",u),m,c;if(i===1){c=u+1;let M=Ve(c);m=`
        ${M} sourceLocR = ${M}(${l.join()}, 0);
        ++${l[u-1]};
        ${M} sourceLocG = ${M}(${l.join()}, 0);
        ++${l[u-2]};
        ${M} sourceLocA = ${M}(${l.join()}, 0);
        --${l[u-1]};
        ${M} sourceLocB = ${M}(${l.join()}, 0);
        --${l[u-2]};`}else c=u,m=`
        ${p} sourceLocR = coords;
        ++${l[u-1]};
        ${p} sourceLocG = coords;
        ++${l[u-2]};
        ${p} sourceLocA = coords;
        --${l[u-1]};
        ${p} sourceLocB = coords;
        --${l[u-2]};`;let d=["x","y","z","w","u","v"].slice(0,c),f="."+d[c-1],h=d.map(M=>"int "+M),g=nr("sourceLocR",c-1).concat("inIdx.r"),y=nr("sourceLocG",c-1).concat("inIdx.g"),T=nr("sourceLocB",c-1).concat("inIdx.b"),x=nr("sourceLocA",c-1).concat("inIdx.a"),I=n==="max"?"greaterThan":"lessThan",k=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${T.join()}),
                             getBestIndicesAChannel(${x.join()})));`,N=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${T.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,E=o?"":`
      float getBestIndicesAChannel(${h.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${h.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${E}
      void main() {
        ${p} coords = getOutputCoords();
        bool hasNextCol = ${l[u-1]} < ${a[u-1]-1};
        bool hasNextRow = ${l[u-2]} < ${a[u-2]-1};
        ${m}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${N};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${k}
          vec4 candidate = ${N};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${I}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function TO(r,e,t,n=null){let o=e.shape[0],s=e.shape[1];n!=null&&(o=n.shape[0],s=n.shape[1]);let i=C.computeOptimalWindowSize(s),a={windowSize:i,inSize:s,batchSize:o,outSize:Math.ceil(s/i)},u=new dw(a,t,n==null),p=[e];n!=null&&p.push(n);let l=r.runWebGLProgram(u,p,"int32");if(l.shape[1]===1)return l;let m=TO(r,e,t,l);return r.disposeIntermediateTensorInfo(l),m}function xO(r,e,t,n=null){let o=n!=null?n.shape:e.shape,s=o[o.length-1],i=C.computeOptimalWindowSize(s),a=new fw(o,i,t,n==null),u=n==null?[e]:[e,n],p=r.runWebGLProgram(a,u,"int32");if(p.shape.length===e.shape.length){let l=xO(r,e,t,p);return r.disposeIntermediateTensorInfo(p),l}return p}function FT(r,e,t,n){let o=[t];if(C.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.shape.length),!$().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){let s=[],i=r.texData.get(e.dataId),a=i!==null&&i.isPacked,u=e;a&&(u=r.unpackTensor(e),s.push(u));let[p,l]=C.computeOutAndReduceShapes(u.shape,o),m=b.sizeFromShape(l),c=pe({inputs:{x:u},backend:r,attrs:{shape:[-1,m]}});s.push(c);let d=TO(r,c,n);s.push(d);let f=pe({inputs:{x:d},backend:r,attrs:{shape:p}});return s.forEach(h=>r.disposeIntermediateTensorInfo(h)),f}return xO(r,e,n)}function Eoe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,i=b.parseAxisParam(s,o.shape),a=C.getAxesPermutation(i,o.shape.length),u=o,p=[];a!=null&&(u=Vt({inputs:{x:o},backend:t,attrs:{perm:a}}),p.push(u),i=C.getInnerMostAxes(i.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);let l=FT(t,u,i[0],"max");return p.forEach(m=>t.disposeIntermediateTensorInfo(m)),l}var IO={kernelName:ao,backendName:"webgl",kernelFunc:Eoe};function Moe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,i=b.parseAxisParam(s,o.shape),a=C.getAxesPermutation(i,o.shape.length),u=o,p=[];a!=null&&(u=Vt({inputs:{x:o},backend:t,attrs:{perm:a}}),p.push(u),i=C.getInnerMostAxes(i.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);let l=FT(t,u,i[0],"min");return p.forEach(m=>t.disposeIntermediateTensorInfo(m)),l}var CO={kernelName:Za,backendName:"webgl",kernelFunc:Moe};var Foe=yr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Roe=we({opSnippet:Foe}),kO={kernelName:Fi,backendName:"webgl",kernelFunc:Roe};var Loe=yr+"return log(x + sqrt(x * x + 1.0));",_oe=we({opSnippet:Loe}),SO={kernelName:Ri,backendName:"webgl",kernelFunc:_oe};var Boe=yr+`
  return atan(x);
`,$oe=we({opSnippet:Boe}),vO={kernelName:Li,backendName:"webgl",kernelFunc:$oe};var Ooe=eO+`
  return atan(a, b);
`,zoe=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+tO+`
  return result;
`,Goe=pt({opSnippet:Ooe,packedOpSnippet:zoe}),AO={kernelName:Bi,backendName:"webgl",kernelFunc:Goe};var Uoe=yr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Woe=we({opSnippet:Uoe}),wO={kernelName:_i,backendName:"webgl",kernelFunc:Woe};var xi=class{constructor(e,t,n,o=!1,s=!1){this.variableNames=["x"];if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let i=e.filterWidth,a=e.strideHeight,u=e.strideWidth,p=e.dilationHeight,l=e.dilationWidth,m=e.effectiveFilterHeight,c=e.effectiveFilterWidth,d=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;let h=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,y=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,T="0.0";if(h||(T="-1.0 / 1e-20"),n){let M=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${u});
        const ivec2 pads = ivec2(${d}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${m};
              wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${c};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${M} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?s?g:y:`wR * ${c} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",I=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(I="avgValue / count");let k=Math.floor(i/4)*4,N=i%4,E=`
      if (${h}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${u});
      const ivec2 pads = ivec2(${d}, ${f});
      const float initializationValue = ${T};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${T});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${m};
            wR += ${p}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${k}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${E}
          }

          int xC = xCCorner + ${k};
          if (${N===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${E}
          } else if (${N===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${E}
          } else if (${N===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${E}
          }
        }
        setOutput(${I});
      }
    `}},Fl=class{constructor(e,t,n,o=!1,s=!1){this.variableNames=["x"];if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let i=e.filterWidth,a=e.strideDepth,u=e.strideHeight,p=e.strideWidth,l=e.dilationDepth,m=e.dilationHeight,c=e.dilationWidth,d=e.effectiveFilterDepth,f=e.effectiveFilterHeight,h=e.effectiveFilterWidth,g=e.padInfo.front,y=e.padInfo.top,T=e.padInfo.left;this.outputShape=e.outShape;let x=t==="avg",I="0.0";if(x||(I="-1.0 / 1e-20"),n){let B=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${u}, ${p});
        const ivec3 pads = ivec3(${g}, ${y}, ${T});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${m}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${h};
                  wC += ${c}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${B} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${h} +
                      wR * ${h} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let k="max",N=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(N="avgValue / count");let E=Math.floor(i/4)*4,M=i%4,R=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${k}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${u}, ${p});
      const ivec3 pads = ivec3(${g}, ${y}, ${T});
      const float initializationValue = ${I};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${I});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${m}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${E}; wC += 4) {
              int xC = xCCorner + wC * ${c};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                getValue(batch, xD, xR, xC + 3 * ${c}, ch)
              );

              ${R}
            }

            int xC = xCCorner + ${E};
            if (${M===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${M===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${M===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                initializationValue
              );

              ${R}
            }
          }
          setOutput(${N});
        }
      }
    `}};function Koe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;Ga(o,"avgPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,p=1;b.assert(C.eitherStridesOrDilationsAreOne(i,p),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let l=C.computePool2DInfo(o.shape,s,i,p,a,u);if(l.filterWidth===1&&l.filterHeight===1&&b.arraysEqual(l.inShape,l.outShape))return or({inputs:{x:o},backend:t});let m=new xi(l,"avg",!1);return t.runWebGLProgram(m,[o],"float32")}var NO={kernelName:io,backendName:"webgl",kernelFunc:Koe};function Voe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u,dataFormat:p}=n,l=[1,1,1],m=C.computePool3DInfo(o.shape,s,i,l,a,u,p),c=new Fl(m,"avg",!1);return t.runWebGLProgram(c,[o],"float32")}var DO={kernelName:Fu,backendName:"webgl",kernelFunc:Voe};var hw=class{constructor(e){this.variableNames=["dy"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,u=e.effectiveFilterHeight,p=e.effectiveFilterWidth,l=u-1-e.padInfo.top,m=p-1-e.padInfo.left,c=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${m});
      const float avgMultiplier = float(${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${p};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},gw=class{constructor(e){this.variableNames=["dy"];this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,u=e.dilationDepth,p=e.dilationHeight,l=e.dilationWidth,m=e.effectiveFilterDepth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,f=m-1-e.padInfo.front,h=c-1-e.padInfo.top,g=d-1-e.padInfo.left,y=1/(t*n*o);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${h}, ${g});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${m};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${p}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Hoe(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,i=s,{filterSize:a,strides:u,pad:p,dimRoundingMode:l}=n,m=[1,1,1],c=C.computePool3DInfo(i.shape,a,u,m,p,l),d=new gw(c);return t.runWebGLProgram(d,[o],i.dtype)}var PO={kernelName:nm,backendName:"webgl",kernelFunc:Hoe};function qoe(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,i=s;Ga([o,s],"avgPoolGrad");let{filterSize:a,strides:u,pad:p}=n,l=C.computePool2DInfo(i.shape,a,u,1,p),m=new hw(l);return t.runWebGLProgram(m,[o],i.dtype)}var EO={kernelName:rm,backendName:"webgl",kernelFunc:qoe};function joe(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:i,transposeB:a}=n;return Ml({a:o,b:s,transposeA:i,transposeB:a,backend:t})}var MO={kernelName:uo,backendName:"webgl",kernelFunc:joe};var bw=class{constructor(e,t,n,o,s,i){this.outputShape=[];this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(e,t),C.assertAndGetBroadcastShape(e,n);let a="0.0";o!=null&&(C.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="1.0";s!=null&&(C.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var yw=class{constructor(e,t,n,o,s,i){this.packedInputs=!0;this.packedOutput=!0;this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(e,t),C.assertAndGetBroadcastShape(e,n);let a="vec4(0.0)";o!=null&&(C.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="vec4(1.0)";s!=null&&(C.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var Xoe=({inputs:r,backend:e,attrs:t})=>{let{x:n,mean:o,variance:s,offset:i,scale:a}=r;b.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=t;u==null&&(u=.001);let p=[n,o,s],l=null;i!=null&&(l=i.shape,p.push(i));let m=null;a!=null&&(m=a.shape,p.push(a));let c=$().getBool("WEBGL_PACK_NORMALIZATION")?new yw(n.shape,o.shape,s.shape,l,m,u):new bw(n.shape,o.shape,s.shape,l,m,u);return e.runWebGLProgram(c,p,p[0].dtype)},FO={kernelName:Io,backendName:"webgl",kernelFunc:Xoe};var xw=class{constructor(e){this.variableNames=["source"];this.outputShape=e,this.rank=e.length;let t=Ve(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=Yoe(this.rank),o,s=e.map((i,a)=>`sourceLoc.${Tw[a]} = start[${a}] + coords.${Tw[a]};`);o=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${n}));
      }
    `}},Tw=["x","y","z","w","u","v"];function Yoe(r){if(r===1)return"sourceLoc";if(r<=6)return Tw.slice(0,r).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var Iw=class{constructor(e){this.variableNames=["source"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=Ve(this.rank),n=nr("coords",this.rank),o=nr("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,i=`getChannel(getSource(${o.join()}), ${s})`,a=`
      result.x = ${i};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${i};
        --${o[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${i};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${i};
        }
      }
    `,p=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((l,m)=>`start[${m}]`).join()});`:e.map((l,m)=>`${o[m]} = ${n[m]} + start[${m}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${p}
        vec4 result = vec4(0.);
        ${a}
        ${u}
        setOutput(result);
      }
    `}};function Qoe(r,e,t,n){let o=n.texData.get(r.dataId),s=n.makeTensorInfo(t,r.dtype),i=n.texData.get(s.dataId);Object.assign(i,o),i.refCount=1,i.shape=t,i.dtype=r.dtype;let a=yt.computeFlatOffset(e,b.computeStrides(r.shape));o.slice&&(a+=o.slice.flatOffset),i.slice={flatOffset:a,origDataId:o.slice&&o.slice.origDataId||r.dataId};let u=n.dataRefCount.get(i.slice.origDataId)||1;return n.dataRefCount.set(i.slice.origDataId,u+1),s}function Ka(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:i}=n,[a,u]=yt.parseSliceParams(o,s,i);if(yt.assertParamsValid(o,a,u),b.sizeFromShape(u)===0)return t.makeTensorInfo(u,o.dtype,[]);if(t.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=t.texData.get(o.dataId),c=C$(m.values,a,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,c)}let{isPacked:p}=t.texData.get(o.dataId),l=yt.isSliceContinous(o.shape,a,u);if(p||!l){let m=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Iw(u):new xw(u),c=[a];return t.runWebGLProgram(m,[o],o.dtype,c)}return t.uploadToGPU(o.dataId),Qoe(o,a,u,t)}var RO={kernelName:xs,backendName:"webgl",kernelFunc:Ka};var Zoe=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:i}=n;b.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let a=s.reduce((T,x)=>T*x),u=C.getReshaped(o.shape,s,a),p=C.getPermuted(u.length,s.length),l=C.getReshapedPermuted(o.shape,s,a),m=C.getSliceBeginCoords(i,s.length),c=C.getSliceSize(l,i,s.length),d=[],f=pe({inputs:{x:o},backend:t,attrs:{shape:u}}),h=Vt({inputs:{x:f},backend:t,attrs:{perm:p}}),g=pe({inputs:{x:h},backend:t,attrs:{shape:l}}),y=Ka({inputs:{x:g},backend:t,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(T=>t.disposeIntermediateTensorInfo(T)),y},LO={kernelName:ms,backendName:"webgl",kernelFunc:Zoe};function Joe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:i}=n,a=t.readSync(o.dataId),u=t.readSync(s.dataId),p=vT(a,u,s.dtype,s.shape,i);return t.makeTensorInfo([i],s.dtype,p)}var _O={kernelName:om,backendName:"webgl",kernelFunc:Joe};function ese(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.readSync(n.dataId),i=t.readSync(o.dataId),a=C.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var BO={kernelName:sm,backendName:"webgl",kernelFunc:ese};var tse="return float(a != b);",Cw=pt({opSnippet:tse,cpuKernelImpl:b$,dtype:"bool"}),$O={kernelName:ca,backendName:"webgl",kernelFunc:Cw};function ku(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return or({inputs:{x:o.complexTensorInfos.real},backend:t})}var OO={kernelName:Uu,backendName:"webgl",kernelFunc:ku};var rse="return float(int(x));";function zO(r,e){let t=new xn(r.shape,rse),n=e.runWebGLProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function kw(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return or({inputs:{x:o},backend:t});let i=bt(o.shape),a=kw({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=Ln({inputs:{real:a,imag:i},backend:t});return i.dispose(),t.disposeIntermediateTensorInfo(a),u}if(o.dtype==="complex64"){let i=ku({inputs:{input:o},backend:t}),a=kw({inputs:{x:i},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(i),a}if(!b.hasEncodingLoss(o.dtype,s)){let i=or({inputs:{x:o},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32")return zO(o,t);if(s==="bool"){let i=t.makeTensorInfo([],"bool",b.getTypedArrayFromDType("bool",1)),u=Cw({inputs:{a:o,b:i},backend:t});return t.disposeIntermediateTensorInfo(i),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var GO={kernelName:Gn,backendName:"webgl",kernelFunc:kw};var UO="return ceil(x);",nse=we({opSnippet:UO,packedOpSnippet:UO,cpuKernelImpl:ZB}),WO={kernelName:po,backendName:"webgl",kernelFunc:nse};var Sw=class{constructor(e){this.variableNames=["A"];this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var vw=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function ose(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:i}=n,a;$().getBool("WEBGL_PACK_CLIP")?a=new vw(o.shape):a=new Sw(o.shape);let u=[[s],[i]];return t.runWebGLProgram(a,[o],o.dtype,u)}var KO={kernelName:Un,backendName:"webgl",kernelFunc:ose};var Aw=class{constructor(e){this.variableNames=["real","imag"];this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function VO(r,e){return{dataId:e.dataId,dtype:e.dtype,shape:r.shape}}function sse(r){let{inputs:e,backend:t}=r,{x:n}=e,o=t.texData.get(n.dataId),s=new Aw(n.shape),i=[VO(n,o.complexTensorInfos.real),VO(n,o.complexTensorInfos.imag)];return t.runWebGLProgram(s,i,i[0].dtype)}var HO={kernelName:Lu,backendName:"webgl",kernelFunc:sse};var ww=class{constructor(e){this.outputShape=[];this.outputShape=C.computeOutShape(e,1),this.variableNames=e.map((i,a)=>`T${a}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){let a=t[i-1];n.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${a}));`)}let o=t.length,s=t[t.length-1];n.push(`else setOutput(getT${o}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}};var Nw=class{constructor(e,t){this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];this.outputShape=C.computeOutShape(e,t);let n=this.outputShape,o=n.length,s=Ve(o),i=nr("coords",o),a=["x","y","z","w","u","v"].slice(0,o);this.variableNames=e.map((h,g)=>`T${g}`);let u=new Array(e.length-1);u[0]=e[0][t];for(let h=1;h<u.length;h++)u[h]=u[h-1]+e[h][t];let p=a[t],l=a.slice(-2),m=a.join(),c=`if (${p} < ${u[0]}) {
        return getChannel(
            getT0(${m}), vec2(${l.join()}));
        }`;for(let h=1;h<u.length;h++){let g=u[h-1];c+=`
        if (${p} < ${u[h]}  && ${p} >= ${u[h-1]}) {
          return getChannel(
            getT${h}(${RT(a,p,g)}),
            vec2(${RT(l,p,g)}));
        }`}let d=u.length,f=u[u.length-1];c+=`
        return getChannel(
          getT${d}(${RT(a,p,f)}),
          vec2(${RT(l,p,f)}));`,this.userCode=`
      float getValue(${a.map(h=>"int "+h)}) {
        ${c}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[o-1]} = ${i[o-1]} + 1;
        if (${i[o-1]} < ${n[o-1]}) {
          result.g = getValue(${i});
        }

        ${i[o-2]} = ${i[o-2]} + 1;
        if (${i[o-2]} < ${n[o-2]}) {
          result.a = getValue(${i});
        }

        ${i[o-1]} = ${i[o-1]} - 1;
        if (${i[o-2]} < ${n[o-2]} &&
            ${i[o-1]} < ${n[o-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}};function RT(r,e,t){let n=r.indexOf(e);return r.map((s,i)=>i===n?`${s} - ${t}`:s).join()}function Rl(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return or({inputs:{x:o.complexTensorInfos.imag},backend:t})}var qO={kernelName:Ou,backendName:"webgl",kernelFunc:Rl};function Ll(r,e,t){let n=r[0].dtype;if(n==="complex64"){let l=r.map(h=>ku({inputs:{input:h},backend:t})),m=r.map(h=>Rl({inputs:{input:h},backend:t})),c=Ll(l,e,t),d=Ll(m,e,t),f=Ln({inputs:{real:c,imag:d},backend:t});return l.forEach(h=>t.disposeIntermediateTensorInfo(h)),m.forEach(h=>t.disposeIntermediateTensorInfo(h)),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),f}let o=t.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let l=r.map(y=>{let T=b.sizeFromShape(y.shape.slice(e));return pe({inputs:{x:y},backend:t,attrs:{shape:[-1,T]}})}),m=l.map(y=>({vals:t.readSync(y.dataId),shape:y.shape})),c=C.computeOutShape(l.map(y=>y.shape),1),d=l[0].shape[0]===1,f=JB(m,c,n,d),h=C.computeOutShape(r.map(y=>y.shape),e),g=t.makeTensorInfo(h,n,f);return l.forEach(y=>t.disposeIntermediateTensorInfo(y)),g}if(r.length>$().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(r.length/2),m=Ll(r.slice(0,l),e,t),c=Ll(r.slice(l),e,t),d=Ll([m,c],e,t);return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),d}if($().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1){let l=new Nw(r.map(m=>m.shape),e);return t.runWebGLProgram(l,r,n)}let{tensors2D:s,outShape:i}=ase(r,e,t),a=new ww(s.map(l=>l.shape)),u=t.runWebGLProgram(a,s,n);s.forEach(l=>t.disposeIntermediateTensorInfo(l));let p=pe({inputs:{x:u},attrs:{shape:i},backend:t});return t.disposeIntermediateTensorInfo(u),p}function ase(r,e,t){let n=C.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>pe({inputs:{x:s},attrs:{shape:[-1,b.sizeFromShape(s.shape.slice(e))]},backend:t})),outShape:n}}function Dw(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],i=C.computeOutShape(e.map(p=>p.shape),s);if(b.sizeFromShape(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);let a=e.filter(p=>b.sizeFromShape(p.shape)>0);if(a.length===1)return or({inputs:{x:a[0]},backend:t});let u=a.map(p=>p.shape);return C.assertParamsConsistent(u,s),Ll(a,s,t)}var jO={kernelName:cs,backendName:"webgl",kernelFunc:Dw};var sg=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.outputShape=e.outShape;let i=e.padInfo.top,a=e.padInfo.left,u=e.strideHeight,p=e.strideWidth,l=e.dilationHeight,m=e.dilationWidth,c=e.filterHeight,d=e.filterWidth,f=Math.floor(e.inChannels/4)*4,h=e.inChannels%4,g=e.dataFormat==="channelsLast",y=g?1:2,T=g?2:3,x=g?3:1,I="",k="";n&&(o?I=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?I=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:I=`
          float activation(float x) {
            ${n}
          }
        `,k="result = activation(result);");let N=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${I}

      const ivec2 strides = ivec2(${u}, ${p});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${T}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${m};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${h===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${h===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${h===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${N}
        ${k}
        setOutput(result);
      }
    `}},Pw=class{constructor(e){this.variableNames=["x","W"];this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,o=e.padInfo.left,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,u=e.dilationDepth,p=e.dilationHeight,l=e.dilationWidth,m=e.filterDepth,c=e.filterHeight,d=e.filterWidth,f=Math.floor(e.inChannels/4)*4,h=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${i}, ${a});
      const ivec3 pads = ivec3(${t}, ${n}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${m}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c}; wR++) {
            int xR = xRCorner + wR * ${p};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${h===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${h===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${h===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var Ew=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}];this.outputShape=e,this.enableShapeUniforms=Lt(this.outputShape.length);let{dataFormat:n}=t,o=Xt(),s=n==="channelsLast",i=s?0:1,a=s?1:2,u=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,p="";for(let l=0;l<=1;l++)for(let m=0;m<=1;m++)p+=`
          blockIndex = rc.y + ${m};
          pos = rc.x + ${l};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+m}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+m}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${p}

        ${o.output} = result;
      }
    `}};function LT({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let u=r.shape,p=n.texData.get(r.dataId),l=t.inChannels,m=u[0]*u[1]*u[2],c=t.outChannels,d=t.dataFormat==="channelsLast",f=!1,h=!1,g,y=[];if(!((m===1||c===1)&&l>lw)&&p.isPacked&&d&&p.texture!=null&&u[2]%2!==0&&b.arraysEqual(p.shape.slice(-3),u.slice(-3))){let I=u[0]*u[1]*(u[2]+1),k={dataId:r.dataId,shape:[1,I,t.inChannels],dtype:r.dtype},N=p.shape;p.shape=p.shape.slice(),p.shape[p.shape.length-2]++,b.assert(dp(p.shape,k.shape),()=>`packed reshape ${p.shape} to ${k.shape} isn't free`);let E=pe({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});y.push(E);let M=Ml({a:k,b:E,backend:n,transposeA:f,transposeB:h,bias:o,activation:a,preluActivationWeights:s,leakyreluAlpha:i}),R=n.texData.get(M.dataId);b.assert(R.isPacked,()=>"batchMatMul result is expected to be packed"),p.shape=N,R.shape=t.outShape,g=or({inputs:{x:M},backend:n}),g.shape=t.outShape,y.push(M)}else{let I=d?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],k=pe({inputs:{x:r},backend:n,attrs:{shape:[1,I,t.inChannels]}}),N=pe({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),E=Ml({a:k,b:N,transposeA:f,transposeB:h,backend:n,bias:o,activation:a,preluActivationWeights:s,leakyreluAlpha:i});g=pe({inputs:{x:E},backend:n,attrs:{shape:t.outShape}}),y.push(k),y.push(N),y.push(E)}for(let I of y)n.disposeIntermediateTensorInfo(I);return g}function _T({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let{filterWidth:u,filterHeight:p,inChannels:l,outWidth:m,outHeight:c,dataFormat:d}=t,f=d==="channelsLast",h=u*p*l,g=c*m,y=[h,g],T=!0,x=!1,I=[],k=pe({inputs:{x:r},backend:n,attrs:{shape:r.shape.slice(1)}}),N=pe({inputs:{x:e},backend:n,attrs:{shape:[1,h,b.sizeFromShape(e.shape)/h]}});I.push(k),I.push(N);let E=new Ew(y,t),M=[k.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],R=n.runWebGLProgram(E,[k],"float32",M),B=pe({inputs:{x:R},backend:n,attrs:{shape:[1,y[0],y[1]]}});I.push(R),I.push(B);let U=o!=null,W=s!=null,K=a==="leakyrelu",H=a?hp(a,!0):null,V=new ng(B.shape,N.shape,[1,g,t.outChannels],T,x,U,H,W,K),j=[B,N];if(o&&j.push(o),W&&j.push(s),K){let oe=n.makeTensorInfo([],"float32",b.createScalarValue(i,"float32"));j.push(oe),I.push(oe)}let ee=n.runWebGLProgram(V,j,"float32"),Z=f?[1,c,m,t.outChannels]:[1,t.outChannels,c,m],te=pe({inputs:{x:ee},backend:n,attrs:{shape:Z}});I.push(ee);for(let oe of I)n.disposeIntermediateTensorInfo(oe);return te}function ise(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dataFormat:u,dilations:p,dimRoundingMode:l}=n,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,s.shape,i,p,a,l,!1,m),d;if(c.filterHeight===1&&c.filterWidth===1&&c.dilationHeight===1&&c.dilationWidth===1&&c.strideHeight===1&&c.strideWidth===1&&(c.padInfo.type==="SAME"||c.padInfo.type==="VALID"))d=LT({x:o,filter:s,convInfo:c,backend:t});else if($().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)d=_T({x:o,filter:s,convInfo:c,backend:t});else{let h=new sg(c);d=t.runWebGLProgram(h,[o,s],"float32")}let f=pe({inputs:{x:d},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(d),f}var XO={kernelName:lo,backendName:"webgl",kernelFunc:ise};var Mw=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,i=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${i}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Fw=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,i=e.dataFormat==="channelsLast",a=t-1-e.padInfo.top,u=n-1-e.padInfo.left,p=i?1:2,l=i?2:3,m=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${m}];

        ivec2 dyCorner = ivec2(coords[${p}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Rw=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${s};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Lw=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,u=t-1-e.padInfo.front,p=n-1-e.padInfo.top,l=o-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${p}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function use(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,pad:a,dataFormat:u,dimRoundingMode:p,filterShape:l}=n,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,l,i,1,a,p,!1,m),d=new Mw(c);return t.runWebGLProgram(d,[o,s],"float32")}var YO={kernelName:am,backendName:"webgl",kernelFunc:use};function pse(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:i,strides:a,pad:u,dataFormat:p,dimRoundingMode:l}=n,m=C.convertConv2DDataFormat(p),c=C.computeConv2DInfo(i,s.shape,a,1,u,l,!1,m),d=new Fw(c);return t.runWebGLProgram(d,[o,s],"float32")}var QO={kernelName:mo,backendName:"webgl",kernelFunc:pse};function lse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u}=n,p=C.computeConv3DInfo(o.shape,s.shape,i,u,a),l=new Pw(p);return t.runWebGLProgram(l,[o,s],"float32")}var ZO={kernelName:_u,backendName:"webgl",kernelFunc:lse};function mse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,pad:a,filterShape:u}=n,p=C.computeConv3DInfo(o.shape,u,i,1,a),l=new Rw(p);return t.runWebGLProgram(l,[o,s],"float32")}var JO={kernelName:im,backendName:"webgl",kernelFunc:mse};function cse(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:i,strides:a,inputShape:u}=n,p=C.computeConv3DInfo(u,s.shape,a,1,i),l=new Lw(p);return t.runWebGLProgram(l,[o,s],"float32")}var e3={kernelName:um,backendName:"webgl",kernelFunc:cse};var dse=Qs+`
  return cos(x);
`,fse=we({opSnippet:dse}),t3={kernelName:co,backendName:"webgl",kernelFunc:fse};var hse=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,gse=we({opSnippet:hse}),r3={kernelName:fo,backendName:"webgl",kernelFunc:gse};var _w=class{constructor(e,t,n,o,s){this.variableNames=["Image","Boxes","BoxInd"];this.outputShape=[];let[i,a,u,p]=e,[l]=t,[m,c]=n;this.outputShape=[l,m,c,p];let d=o==="bilinear"?1:0,[f,h]=[`${a-1}.0`,`${u-1}.0`],[g,y,T]=m>1?[`${(a-1)/(m-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[x,I,k]=c>1?[`${(u-1)/(c-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${I};

        float in_y = ${T};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${k};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var bse=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:i}=e,{cropSize:a,method:u,extrapolationValue:p}=n,l=new _w(o.shape,s.shape,a,u,p);return t.runWebGLProgram(l,[o,s,i],"float32")},n3={kernelName:ra,backendName:"webgl",kernelFunc:bse};var BT=class{constructor(e,t,n){this.variableNames=["x"];this.customUniforms=[{name:"index",type:"float"}];this.outputShape=e;let o=e.length,s=t?"0.0":`getX(${o3(o,"coords")})`,i=e[e.length-1],a="",u="";t?(a=n?`end != ${i-1}`:"end != 0",u=n?"end + 1":"end - 1"):(a=n?`end + pow2 < ${i}`:"end >= pow2",u=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Ve(o)} coords = getOutputCoords();
        int end = ${s3(o,"coords")};
        float val = ${s};
        int pow2 = int(pow(2.0, index));
        if (${a}) {
          int idx = ${u};
          ${s3(o,"coords")} = idx;
          val += getX(${o3(o,"coords")});
        }
        setOutput(val);
      }
    `}};function o3(r,e){if(r===1)return`${e}`;if(r===2)return`${e}.x, ${e}.y`;if(r===3)return`${e}.x, ${e}.y, ${e}.z`;if(r===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${r} is not yet supported`)}function s3(r,e){if(r===1)return`${e}`;if(r===2)return`${e}.y`;if(r===3)return`${e}.z`;if(r===4)return`${e}.w`;throw Error(`Cumulative sum for rank ${r} is not yet supported`)}function yse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:i,reverse:a}=n,u=o.shape.length,p=C.getAxesPermutation([s],u),l=o;p!=null&&(l=Vt({inputs:{x:o},backend:t,attrs:{perm:p}}));let m=C.getInnerMostAxes(1,u)[0];if(m!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${o.shape.length-1} but got axis=${s}`);let c=l.shape[m],d=or({inputs:{x:l},backend:t});for(let f=0;f<=Math.ceil(Math.log2(c))-1;f++){let h=new BT(l.shape,!1,a),g=[[f]],y=d;d=t.runWebGLProgram(h,[d],d.dtype,g),t.disposeIntermediateTensorInfo(y)}if(i){let f=new BT(l.shape,i,a),h=d;d=t.runWebGLProgram(f,[d],d.dtype),t.disposeIntermediateTensorInfo(h)}if(p!=null){let f=C.getUndoAxesPermutation(p),h=Vt({inputs:{x:d},backend:t,attrs:{perm:f}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(l),h}return d}var a3={kernelName:ta,backendName:"webgl",kernelFunc:yse};function Tse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:i,binaryOutput:a}=n;if(o.shape.length===1){let u=t.readSync(o.dataId),p=t.readSync(s.dataId),l=vT(u,p,s.dtype,s.shape,i);return t.makeTensorInfo([i],s.dtype,l)}else if(o.shape.length===2){let u=t.bufferSync(o),p=t.bufferSync(s),l=QB(u,p,i,a);return t.makeTensorInfo(l.shape,s.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var i3={kernelName:pm,backendName:"webgl",kernelFunc:Tse};var Bw=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=[];this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function xse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:i}=n,a=o.shape[0],u=i==="NHWC"?o.shape[1]:o.shape[2],p=i==="NHWC"?o.shape[2]:o.shape[3],l=i==="NHWC"?o.shape[3]:o.shape[1],m=u*s,c=p*s,d=l/(s*s),f=i==="NHWC"?[a,m,c,d]:[a,d,m,c],h=new Bw(f,s,i);return t.runWebGLProgram(h,[o],o.dtype)}var u3={kernelName:na,backendName:"webgl",kernelFunc:xse};var ag=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=e.outShape,this.enableShapeUniforms=Lt(this.outputShape.length);let i=e.filterHeight,a=e.filterWidth,u=e.outChannels/e.inChannels,p="",l="";n&&(o?p=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?p=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:p=`
          float activation(float x) {
            ${n}
          }
        `,l="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${p}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${m}
        ${l}
        setOutput(result);
      }
    `}};var ig=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=e.outShape,this.enableShapeUniforms=Lt(this.outputShape.length);let i=e.outChannels/e.inChannels,a=e.padInfo.left,u=e.strideWidth,p=e.dilationWidth,l=e.filterHeight,m=e.filterWidth,c=m,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<m;y++)d+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;d+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let y=0;y<m;y++)d+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(c+1)/2;y++){let T=y*2;if(d+=`
          xC = xCCorner + ${T*p};
          `,u===1){if(T<m&&(a%2===1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }
              `,p===1&&T>0?d+=`
                xC${T} = vec4(xTexelC${T-2}.zw, xTexelC${T}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${T} = vec4(previous.zw, xTexelC${T}.xy);
                  } else {
                    xC${T} = vec4(0.0, 0.0, xTexelC${T}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                xC${T} = xTexelC${T};
                `,T+1<m)){let x=a%2===0?b.nearestLargerEven(p):p;p%2===0&&a%2===1||p%2!==0&&a%2!==1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                    xTexelC${T+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${T+1}.zw = vec2(0.0);
                    }
                    xTexelC${T+1}Ready = 1;
                  }
                  `,p>1&&(d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                      xTexelC${T} = getX(batch, xR, xCOffset, d1);
                      xTexelC${T}Ready = 1;
                    }
                    `),d+=`
                  xC${T+1} = vec4(xTexelC${T}.zw, xTexelC${T+1}.xy);
                  `):x===1?d+=`
                    xC${T+1} = xTexelC${T};
                    `:d+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                      xTexelC${T+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${T+1}.zw = vec2(0.0);
                      }
                      xTexelC${T+1}Ready = 1;
                    }

                    xC${T+1} = xTexelC${T+1};
                    `}}else T<m&&(a%2===1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${T+1}Ready == 0) {
                  xTexelC${T+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${T+1}.zw = vec2(0.0);
                  }
                  xTexelC${T+1}Ready = 1;
                }

                xC${T} = vec4(xTexelC${T}.zw, xTexelC${T+1}.zw);
              `,T+1<m&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${T+1} = vec4(xTexelC${T+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                  xTexelC${T+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T+1}.zw = vec2(0.);
                  }
                  xTexelC${T+1}Ready = 1;
                }

                xC${T} = vec4(
                  xTexelC${T}.xy, xTexelC${T+1}.xy);
              `,T+1<m&&(d+=`
                  xC${T+1} = vec4(xTexelC${T}.zw, xTexelC${T+1}.zw);
                `)));T<m&&(d+=`
            wTexel = getW(r, ${T}, d1, q);
            dotProd += xC${T} * vec4(wTexel.xz, wTexel.xz);
          `,T+1<m&&(d+=`
              wTexel = getW(r, ${T+1}, d1, q);
              dotProd += xC${T+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let f="",h="";n&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:f=`vec4 activation(vec4 x) {
          ${n}
        }`,h="result = activation(result);");let g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${h}
        setOutput(result);
      }
    `}};function Ise(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u,dimRoundingMode:p}=n,l=u;l==null&&(l=[1,1]),b.assert(C.eitherStridesOrDilationsAreOne(i,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let m=C.computeConv2DInfo(o.shape,s.shape,i,l,a,p,!0),c;$().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1?c=new ig(m):c=new ag(m);let d=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];return t.runWebGLProgram(c,[o,s],"float32",d)}var p3={kernelName:ho,backendName:"webgl",kernelFunc:Ise};var $w=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Ow=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,i=t-1-e.padInfo.top,a=n-1-e.padInfo.left,u=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Cse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:p,filterShape:l}=n,m=C.computeConv2DInfo(o.shape,l,i,a,u,p,!0),c=new $w(m);return t.runWebGLProgram(c,[o,s],"float32")}var l3={kernelName:lm,backendName:"webgl",kernelFunc:Cse};function kse(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:p,inputShape:l}=n,m=C.computeConv2DInfo(l,s.shape,i,a,u,p,!0),c=new Ow(m);return t.runWebGLProgram(c,[o,s],"float32")}var m3={kernelName:mm,backendName:"webgl",kernelFunc:kse};var zw=class{constructor(e){this.variableNames=["X"];this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function Sse(r){let{inputs:e,backend:t}=r,{x:n}=e,o=[...n.shape,...n.shape],s=b.sizeFromShape(n.shape),i=pe({inputs:{x:n},backend:t,attrs:{shape:[s]}}),a=new zw(s),u=t.runWebGLProgram(a,[i],i.dtype),p=pe({inputs:{x:u},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),p}var c3={kernelName:cm,backendName:"webgl",kernelFunc:Sse};var Gw=class{constructor(e){this.variableNames=["x","W"];this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:o,strideHeight:s,strideWidth:i,filterHeight:a,filterWidth:u,dilationHeight:p,dilationWidth:l}=e,{top:m,left:c}=o;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${i});
      const ivec2 pads = ivec2(${m}, ${c});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${p};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function vse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u}=n,p=C.computeDilation2DInfo(o.shape,s.shape,i,a,"NHWC",u),l,m=new Gw(p);l=t.runWebGLProgram(m,[o,s],"float32");let c=pe({inputs:{x:l},backend:t,attrs:{shape:p.outShape}});return t.disposeIntermediateTensorInfo(l),c}var d3={kernelName:Bu,backendName:"webgl",kernelFunc:vse};function Ase(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:i,summedDims:a,idDims:u}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(i.length,u,s);let{path:p,steps:l}=C.getEinsumComputePath(a,u),m=l.length,c=null,d=i.length,f=[];for(let h=0;h<m;++h){for(let g of l[h]){let{permutationIndices:y,expandDims:T}=C.getEinsumPermutation(d,u[g]),x;C.isIdentityPermutation(y)?x=s[g]:(x=Vt({inputs:{x:s[g]},backend:t,attrs:{perm:y}}),f.push(x));let I=x.shape.slice();for(let k=0;k<T.length;++k)I.splice(T[k],0,1);b.arraysEqual(x.shape,I)||(x=pe({inputs:{x},backend:t,attrs:{shape:I}}),f.push(x)),c===null?c=x:(c=og({inputs:{a:x,b:c},backend:t}),f.push(c))}h<m-1&&(p[h]>=0&&(c=El({inputs:{x:c},backend:t,attrs:{axis:p[h]-(i.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&t.disposeIntermediateTensorInfo(h);return c}var f3={kernelName:$u,backendName:"webgl",kernelFunc:Ase};var wse="return (x >= 0.0) ? x : (exp(x) - 1.0);",Nse=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Dse=we({opSnippet:wse,packedOpSnippet:Nse}),h3={kernelName:bo,backendName:"webgl",kernelFunc:Dse};var Pse="return (b >= 1.0) ? a : a * (b + 1.0);",Ese=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Mse=r=>{let{inputs:e,backend:t}=r,{dy:n,y:o}=e,s=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Wa(Ese,n.shape,o.shape):new Ys(Pse,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],n.dtype)},g3={kernelName:dm,backendName:"webgl",kernelFunc:Mse};var Fse=`
  return vec4(equal(a, b));
`,Rse="return float(a == b);",Lse=pt({opSnippet:Rse,packedOpSnippet:Fse,dtype:"bool",cpuKernelImpl:e$}),b3={kernelName:oa,backendName:"webgl",kernelFunc:Lse};var _se=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${C.ERF_P};
  float a1 = ${C.ERF_A1};
  float a2 = ${C.ERF_A2};
  float a3 = ${C.ERF_A3};
  float a4 = ${C.ERF_A4};
  float a5 = ${C.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Bse=we({opSnippet:_se}),y3={kernelName:$i,backendName:"webgl",kernelFunc:Bse};var $se=Qs+`
  return exp(x);
`,Ose=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Uw=we({opSnippet:$se,packedOpSnippet:Ose,cpuKernelImpl:t$,dtype:"float32"}),T3={kernelName:yo,backendName:"webgl",kernelFunc:Uw};function $T(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,i=s.shape.length,a=s.shape.slice(),u=o;return o<0&&(b.assert(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+o+1),a.splice(u,0,1),pe({inputs:{x:s},backend:n,attrs:{shape:a}})}var x3={kernelName:ds,backendName:"webgl",kernelFunc:$T};var I3="return exp(x) - 1.0;",zse=we({opSnippet:I3,packedOpSnippet:I3,cpuKernelImpl:r$}),C3={kernelName:sa,backendName:"webgl",kernelFunc:zse};var OT=class{constructor(e,t,n){this.variableNames=["real","imag"];let o=t[1];this.outputShape=t;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${o}.0`:"1.0",a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function zT(r,e,t){let n=t.texData.get(r.dataId),o=b.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=o/s,a=pe({inputs:{x:r},backend:t,attrs:{shape:[i,s]}}),u=a.shape,p=new OT("real",u,e),l=new OT("imag",u,e),m=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:u},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:u}],c=t.runWebGLProgram(p,m,"float32"),d=t.runWebGLProgram(l,m,"float32"),f=Ln({inputs:{real:c,imag:d},backend:t});t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d);let h=pe({inputs:{x:f},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(f),h}function Gse(r){let{inputs:e,backend:t}=r,{input:n}=e;return zT(n,!1,t)}var k3={kernelName:fm,backendName:"webgl",kernelFunc:Gse};var Ww=class{constructor(e,t){this.outputShape=[];this.customUniforms=[{name:"value",type:"float"}];this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Su(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||b.inferDtype(o),s==="string"){let i=b.getArrayFromDType(s,b.sizeFromShape(n));return i.fill(o),e.makeTensorInfo(n,s,i)}else{let i=new Ww(n,o),a=[[o]];return e.runWebGLProgram(i,[],s,a)}}var S3={kernelName:Ja,backendName:"webgl",kernelFunc:Su};var Kw=class{constructor(e){this.variableNames=["Image"];this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var v3={kernelName:aa,backendName:"webgl",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new Kw(t.shape);return n.runWebGLProgram(o,[t],t.dtype)}};var A3="return floor(x);",Use=we({opSnippet:A3,packedOpSnippet:A3,cpuKernelImpl:n$}),w3={kernelName:To,backendName:"webgl",kernelFunc:Use};var Wse=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Kse=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Vse=pt({opSnippet:Wse,packedOpSnippet:Kse,dtype:"int32"}),N3={kernelName:xo,backendName:"webgl",kernelFunc:Vse};var Vw=class{constructor(e){this.variableNames=["A"];let t=Xt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var Hw=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;let t=Xt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}};var D3={kernelName:Np,backendName:"webgl",kernelFunc:Hse},Uc;function Hse(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n,i=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,[u,p]=i?[o.videoWidth,o.videoHeight]:[o.width,o.height],l=[p,u],m=[p,u,s];(a||i)&&(Uc==null&&(Uc=document.createElement("canvas").getContext("2d")),Uc.canvas.width=u,Uc.canvas.height=p,Uc.drawImage(o,0,0,u,p),o=Uc.canvas);let c=t.makeTensorInfo(l,"int32");t.texData.get(c.dataId).usage=2,t.gpgpu.uploadPixelDataToTexture(t.getTexture(c.dataId),o);let d=$().getBool("WEBGL_PACK")?new Hw(m):new Vw(m),f=t.runWebGLProgram(d,[c],"int32");return t.disposeData(c.dataId),f}function qse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:p,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=C.convertConv2DDataFormat(l),g=C.computeConv2DInfo(o.shape,s.shape,u,m,p,c,!1,h),y,T=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=LT({x:o,filter:s,convInfo:g,backend:t,bias:i,activation:d,preluActivationWeights:a,leakyreluAlpha:f});else if($().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)y=_T({x:o,filter:s,convInfo:g,backend:t,bias:i,activation:d,preluActivationWeights:a,leakyreluAlpha:f});else{let I=i!=null,k=a!=null,N=d==="leakyrelu",E=d?hp(d,!1):null,M=new sg(g,I,E,k,N),R=[o,s];if(i&&R.push(i),a&&R.push(a),N){let B=t.makeTensorInfo([],"float32",b.createScalarValue(f,"float32"));R.push(B),T.push(B)}y=t.runWebGLProgram(M,R,"float32")}let x=pe({inputs:{x:y},backend:t,attrs:{shape:g.outShape}});return T.push(y),T.forEach(I=>t.disposeIntermediateTensorInfo(I)),x}var P3={kernelName:ws,backendName:"webgl",kernelFunc:qse};function jse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:p,dilations:l,dimRoundingMode:m,activation:c,leakyreluAlpha:d}=n,f=[],h=l;h==null&&(h=[1,1]),b.assert(C.eitherStridesOrDilationsAreOne(u,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${h}'`);let g=C.computeConv2DInfo(o.shape,s.shape,u,h,p,m,!0),y=$().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,T=c?hp(c,y):null,x=[o,s],I=i!=null,k=a!=null,N=c==="leakyrelu";if(I&&x.push(i),k&&x.push(a),N){let B=t.makeTensorInfo([],"float32",b.createScalarValue(d,"float32"));x.push(B),f.push(B)}let E;y?E=new ig(g,I,T,k,N):E=new ag(g,I,T,k,N);let M=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=t.runWebGLProgram(E,x,"float32",M);return f.forEach(B=>t.disposeIntermediateTensorInfo(B)),R}var E3={kernelName:Ns,backendName:"webgl",kernelFunc:jse};var qw=class{constructor(e,t,n){this.sliceDim=e;this.strides=t;this.variableNames=["x","indices"];this.outputShape=n;let o=Ve(t.length),s=Ve(n.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${this.strides});
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${i};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function Xse(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,i=s[s.length-1],a=b.sizeFromShape(n.shape),[u,p,l,m]=C.prepareAndValidate(n,o),c=pe({inputs:{x:o},backend:t,attrs:{shape:[p,i]}}),d=pe({inputs:{x:n},backend:t,attrs:{shape:[b.sizeFromShape(n.shape)/l,l]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let y=t.readSync(o.dataId),T=t.bufferSync(n),x=o$(y,T,n.dtype,p,i,l,m,n.shape,a);return t.makeTensorInfo(u,n.dtype,x.values)}let f=new qw(i,m,[p,l]),h=t.runWebGLProgram(f,[d,c],d.dtype),g=pe({inputs:{x:h},backend:t,attrs:{shape:u}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var M3={kernelName:ia,backendName:"webgl",kernelFunc:Xse};var jw=class{constructor(e,t){this.variableNames=["A","indices"];this.outputShape=t,this.rank=t.length;let n=Ve(this.rank),o=Yse(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}};function Yse(r,e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push("index"):n.push(`${t[o]}`);return n.join()}function Xw(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:i,batchDims:a}=n,u=b.parseAxisParam(i,o.shape)[0];if($().get("DEBUG")){let T=t.readSync(s.dataId),x=o.shape[u];for(let I=0;I<T.length;++I){let k=T[I];b.assert(k<=x-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${x-1}]`)}}let p=C.segment_util.collectGatherOpShapeInfo(o,s,u,a),l=b.sizeFromShape(s.shape),m=[],c=pe({inputs:{x:o},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),d=pe({inputs:{x:s},backend:t,attrs:{shape:[p.batchSize,l/p.batchSize]}});m.push(c),m.push(d);let f=[p.batchSize,p.outerSize,l/p.batchSize,p.sliceSize];if(t.shouldExecuteOnCPU([o,s])||o.dtype==="string"){let T=t.bufferSync(d),x=t.bufferSync(c),I=s$(x,T,f);return m.forEach(k=>t.disposeIntermediateTensorInfo(k)),t.makeTensorInfo(p.outputShape,I.dtype,I.values)}let h=new jw(c.shape,f),g=t.runWebGLProgram(h,[c,d],c.dtype);m.push(g);let y=pe({inputs:{x:g},backend:t,attrs:{shape:p.outputShape}});return m.forEach(T=>t.disposeIntermediateTensorInfo(T)),y}var F3={kernelName:fs,backendName:"webgl",kernelFunc:Xw};var Qse="return float(a > b);",Zse=`
  return vec4(greaterThan(a, b));
`,Jse=pt({opSnippet:Qse,packedOpSnippet:Zse,cpuKernelImpl:a$,dtype:"bool"}),R3={kernelName:ua,backendName:"webgl",kernelFunc:Jse};var eae="return float(a >= b);",tae=`
  return vec4(greaterThanEqual(a, b));
`,rae=pt({opSnippet:eae,packedOpSnippet:tae,dtype:"bool",cpuKernelImpl:i$}),L3={kernelName:Co,backendName:"webgl",kernelFunc:rae};function nae(r){let{inputs:e,backend:t}=r,{input:n}=e;return zT(n,!0,t)}var _3={kernelName:hm,backendName:"webgl",kernelFunc:nae};var oae="return float(!isnan(x) && !isinf(x));",sae=we({opSnippet:oae,dtype:"bool"}),B3={kernelName:Oi,backendName:"webgl",kernelFunc:sae};var aae="return float(isinf(x));",iae=we({opSnippet:aae,dtype:"bool"}),$3={kernelName:zi,backendName:"webgl",kernelFunc:iae};var uae="return float(isnan(x));",pae=we({opSnippet:uae,dtype:"bool"}),O3={kernelName:Gi,backendName:"webgl",kernelFunc:pae};var lae="return float(a < b);",mae=`
  return vec4(lessThan(a, b));
`,cae=pt({opSnippet:lae,packedOpSnippet:mae,cpuKernelImpl:u$,dtype:"bool"}),z3={kernelName:pa,backendName:"webgl",kernelFunc:cae};var dae="return float(a <= b);",fae=`
  return vec4(lessThanEqual(a, b));
`,hae=pt({opSnippet:dae,packedOpSnippet:fae,cpuKernelImpl:p$,dtype:"bool"}),G3={kernelName:la,backendName:"webgl",kernelFunc:hae};function gae(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,i=l$(n,o,s);return e.makeTensorInfo([i.length],"float32",i)}var U3={kernelName:gm,backendName:"webgl",kernelFunc:gae};var bae=Qs+`
  return x < 0.0 ? 0./0. : log(x);
`,yae=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Tae=we({opSnippet:bae,packedOpSnippet:yae,cpuKernelImpl:m$}),W3={kernelName:So,backendName:"webgl",kernelFunc:Tae};var xae=Qs+`
  return log(1.0 + x);
`,Iae=we({opSnippet:xae}),K3={kernelName:Ui,backendName:"webgl",kernelFunc:Iae};var Cae="return float(a >= 1.0 && b >= 1.0);",kae=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Sae=pt({opSnippet:Cae,packedOpSnippet:kae,dtype:"bool"}),V3={kernelName:ma,backendName:"webgl",kernelFunc:Sae};var vae="return float(!(x >= 1.0));",Aae=we({opSnippet:vae}),H3={kernelName:Wi,backendName:"webgl",kernelFunc:Aae};var wae="return float(a >= 1.0 || b >= 1.0);",Nae=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Dae=pt({opSnippet:wae,packedOpSnippet:Nae,dtype:"bool"}),q3={kernelName:wp,backendName:"webgl",kernelFunc:Dae};var Yw=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.outputShape=[];let i=t,a=e[3]-1;this.outputShape=e;let u,p=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${p})`:s===1?u=`1.0/(${p})`:u=`exp(log(${p}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}};var Qw=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;let i=t,a=e[3]-1;this.outputShape=e;let u,p=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${p})`:s===1?u=`1.0/(${p})`:u=`exp(log(${p}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}};var Pae=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:i,alpha:a,beta:u}=n,p=$().getBool("WEBGL_PACK_NORMALIZATION")?new Qw(o.shape,s,i,a,u):new Yw(o.shape,s,i,a,u);return t.runWebGLProgram(p,[o],o.dtype)},j3={kernelName:zu,backendName:"webgl",kernelFunc:Pae};var Zw=class{constructor(e,t,n,o,s){this.variableNames=["inputImage","outputImage","dy"];this.outputShape=[];this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=o,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${s})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var Eae=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:i}=e,{depthRadius:a,bias:u,alpha:p,beta:l}=n,m=new Zw(o.shape,a,u,p,l);return t.runWebGLProgram(m,[o,s,i],o.dtype)},X3={kernelName:bm,backendName:"webgl",kernelFunc:Eae};function Y3(r,e,t,n){let o=b.sizeFromShape(e),i=b.sizeFromShape(r.shape)/o,a=pe({inputs:{x:r},attrs:{shape:[i,o]},backend:n}),u=eo(a,r.dtype,"max",n),p=pe({inputs:{x:u},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),p}function Jw(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:i}=n,a=o.shape.length,u=b.parseAxisParam(s,o.shape),p=u,l=C.getAxesPermutation(p,a),m=l!=null,c=t.shouldExecuteOnCPU([o]),d=o;if(m){if(c){let x=t.texData.get(d.dataId).values,I=new Array(a);for(let E=0;E<I.length;E++)I[E]=o.shape[l[E]];let k=Dl(x,o.shape,o.dtype,l,I);d=t.makeTensorInfo(I,o.dtype);let N=t.texData.get(d.dataId);N.values=k}else d=gp(o,l,t);p=C.getInnerMostAxes(p.length,a)}C.assertAxesAreInnerMostDims("max",p,a);let[f,h]=C.computeOutAndReduceShapes(d.shape,p),g=f;i&&(g=C.expandShapeToKeepDim(f,u));let y;if(c){let x=t.texData.get(d.dataId).values,I=c$(x,b.sizeFromShape(h),g,o.dtype);y=t.makeTensorInfo(g,o.dtype);let k=t.texData.get(y.dataId);k.values=I}else y=Y3(d,h,g,t);return m&&t.disposeIntermediateTensorInfo(d),y}var Q3={kernelName:vo,backendName:"webgl",kernelFunc:Jw};var Mae=DT+`
  return max(a, b);
`,Fae=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+fp+`
  return result;
`,Rae=pt({opSnippet:Mae,packedOpSnippet:Fae,cpuKernelImpl:d$}),Z3={kernelName:Ao,backendName:"webgl",kernelFunc:Rae};function Lae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;Ga(o,"maxPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,p=1;b.assert(C.eitherStridesOrDilationsAreOne(i,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let l=C.computePool2DInfo(o.shape,s,i,p,a,u);if(l.filterWidth===1&&l.filterHeight===1&&b.arraysEqual(l.inShape,l.outShape))return or({inputs:{x:o},backend:t});let m=new xi(l,"max",!1);return t.runWebGLProgram(m,[o],o.dtype)}var J3={kernelName:wo,backendName:"webgl",kernelFunc:Lae};function _ae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dataFormat:u,dimRoundingMode:p}=n,l=[1,1,1],m=C.computePool3DInfo(o.shape,s,i,l,a,p,u),c=new Fl(m,"max",!1);return t.runWebGLProgram(c,[o],o.dtype)}var ez={kernelName:Gu,backendName:"webgl",kernelFunc:_ae};var eN=class{constructor(e){this.variableNames=["dy","maxPos"];this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,o=e.dilationHeight,s=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=s-1-e.padInfo.top,u=i-1-e.padInfo.left,p=s*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${p} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},tN=class{constructor(e){this.variableNames=["dy","maxPos"];this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,u=e.effectiveFilterDepth,p=e.effectiveFilterHeight,l=e.effectiveFilterWidth,m=u-1-e.padInfo.front,c=p-1-e.padInfo.top,d=l-1-e.padInfo.left,f=u*p*l-1;this.userCode=`
      const ivec3 pads = ivec3(${m}, ${c}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${p} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Bae(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,i=s,{filterSize:a,strides:u,pad:p,dimRoundingMode:l}=n,m=[1,1,1],c=C.computePool3DInfo(i.shape,a,u,m,p,l),d=new Fl(c,"max",!0),f=t.runWebGLProgram(d,[i],i.dtype),h=new tN(c),g=t.runWebGLProgram(h,[o,f],i.dtype);return t.disposeIntermediateTensorInfo(f),g}var tz={kernelName:Tm,backendName:"webgl",kernelFunc:Bae};function $ae(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:i}=e,a=s;Ga([s,i],"maxPoolGrad");let{filterSize:u,strides:p,pad:l,dimRoundingMode:m}=n,c=C.computePool2DInfo(a.shape,u,p,1,l,m),d=!0,f=new xi(c,"max",d),h=t.runWebGLProgram(f,[a],a.dtype),g=new eN(c),y=t.runWebGLProgram(g,[o,h],a.dtype);return t.disposeIntermediateTensorInfo(h),y}var rz={kernelName:ym,backendName:"webgl",kernelFunc:$ae};function nz(r,e,t,n){let o=new xi(t,"max",!1),s=n.runWebGLProgram(o,[r],"float32");o=new xi(t,"max",!0,!0,e);let i=n.runWebGLProgram(o,[r],"float32");return[s,i]}var oz={kernelName:xm,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:i,includeBatchInIndex:a}=e,u=t;b.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let p=[1,1];b.assert(C.eitherStridesOrDilationsAreOne(s,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${p}'`);let l=C.computePool2DInfo(n.shape,o,s,p,i),[m,c]=nz(n,a,l,u);return[m,c]}};function sz(r,e,t,n){let o=b.sizeFromShape(e),i=b.sizeFromShape(r.shape)/o,a=pe({inputs:{x:r},attrs:{shape:[i,o]},backend:n}),u=eo(a,"float32","mean",n),p=pe({inputs:{x:u},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),p}var az={kernelName:No,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{keepDims:o,axis:s}=e,i=t,a=n.shape.length,u=b.parseAxisParam(s,n.shape),p=u,l=C.getAxesPermutation(p,a),m=l!=null,c=i.shouldExecuteOnCPU([n]),d=[],f=n;if(m){if(c){let I=i.texData.get(f.dataId).values,k=new Array(a);for(let M=0;M<k.length;M++)k[M]=n.shape[l[M]];let N=Dl(I,n.shape,n.dtype,l,k);f=i.makeTensorInfo(k,n.dtype);let E=i.texData.get(f.dataId);E.values=N}else f=gp(n,l,i);d.push(f),p=C.getInnerMostAxes(p.length,a)}C.assertAxesAreInnerMostDims("sum",p,a);let[h,g]=C.computeOutAndReduceShapes(f.shape,p),y=h;o&&(y=C.expandShapeToKeepDim(h,u));let T=sz(f,g,y,i);for(let x of d)i.disposeIntermediateTensorInfo(x);return T}};function Oae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n,a=o.shape.length,u=b.parseAxisParam(s,o.shape),p=u,l=C.getAxesPermutation(p,a),m=o;l!=null&&(m=Vt({inputs:{x:o},backend:t,attrs:{perm:l}}),p=C.getInnerMostAxes(p.length,o.shape.length)),C.assertAxesAreInnerMostDims("min",p,a);let[c,d]=C.computeOutAndReduceShapes(m.shape,p),f=b.sizeFromShape(d),h=pe({inputs:{x:m},backend:t,attrs:{shape:[-1,f]}}),g=eo(h,h.dtype,"min",t),y;if(i){let T=C.expandShapeToKeepDim(c,u);y=pe({inputs:{x:g},backend:t,attrs:{shape:T}})}else y=pe({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(m),y}var iz={kernelName:Do,backendName:"webgl",kernelFunc:Oae};var zae=DT+`
  return min(a, b);
`,Gae=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+fp+`
  return result;
`,Uae=pt({opSnippet:zae,packedOpSnippet:Gae,cpuKernelImpl:f$}),uz={kernelName:Po,backendName:"webgl",kernelFunc:Uae};var rN=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=t.map((l,m)=>l[0]+e[m]+l[1]);let o=e.length,s=Ve(o),i=t.map(l=>l[0]).join(","),a=t.map((l,m)=>l[0]+e[m]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),p=n==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${p};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${p};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${i});
      ${s} end = ${s}(${a});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${p};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${p};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}};var nN=class{constructor(e,t,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=t.map((f,h)=>f[0]+e[h]+f[1]);let o=e.length,s=Ve(o),i=t.map(f=>f[0]).join(","),a=t.map((f,h)=>f[0]+e[h]).join(","),u=nr("rc",o),p=nr("source",o),l=`${u[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${p.slice(-2).join()})`,c=n==="reflect"?0:1,d="";if(o===1){let f=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${c};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${c};
        }
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${p.join()}), ${m});
        ${u[o-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${p.join()}), ${m});
        }
      `}else{let f=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${c}) +
                gte * ((end - 1) * 2 - source + ${c});
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${p.join()}), ${m});
        ${u[o-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${p.join()}), ${m});
        }
        rc = outputLoc;
        ${u[o-2]} += 1;
        if(${u[o-2]} < ${this.outputShape[o-2]}) {
          ${f}
          result[2] = getChannel(getX(${p.join()}), ${m});
          ${u[o-1]} += 1;
          if(${l}) {
            ${f}
            result[3] = getChannel(getX(${p.join()}), ${m});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${i});
      const ${s} end = ${s}(${a});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}};var Wae=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{paddings:o,mode:s}=t,i=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nN(n.shape,o,s):new rN(n.shape,o,s);return e.runWebGLProgram(i,[n],n.dtype)},pz={kernelName:Eo,backendName:"webgl",kernelFunc:Wae};var Kae=`if (b == 0.0) return NAN;
  return mod(a, b);`,Vae=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+fp+`
  return result;
`,Hae=pt({opSnippet:Kae,packedOpSnippet:Vae}),lz={kernelName:Ki,backendName:"webgl",kernelFunc:Hae};var oN=class{constructor(e,t,n){this.variableNames=["probs"];this.customUniforms=[{name:"seed",type:"float"}];this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}};var qae=`
if (a == b) {
  return 1.0;
};
return a / b;`,jae=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,sN=pt({opSnippet:qae,packedOpSnippet:jae,checkOutOfBounds:!0}),mz={kernelName:go,backendName:"webgl",kernelFunc:sN};var cz="return a - b;",aN=pt({opSnippet:cz,packedOpSnippet:cz,supportsComplex:!0,cpuKernelImpl:P$}),dz={kernelName:Ho,backendName:"webgl",kernelFunc:aN};function iN(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,i=b.parseAxisParam([s],o.shape),a=Jw({inputs:{x:o},backend:t,attrs:{reductionIndices:i,keepDims:!1}}),u=C.expandShapeToKeepDim(a.shape,i),p=pe({inputs:{x:a},backend:t,attrs:{shape:u}}),l=aN({inputs:{a:o,b:p},backend:t}),m=Uw({inputs:{x:l},backend:t}),c=El({inputs:{x:m},backend:t,attrs:{axis:i,keepDims:!1}}),d=pe({inputs:{x:c},backend:t,attrs:{shape:u}}),f=sN({inputs:{a:m,b:d},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),f}var fz={kernelName:Ko,backendName:"webgl",kernelFunc:iN};function Xae(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:i,normalized:a}=n,u=a?o:iN({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),p=u.shape[0],l=u.shape[1],m=new oN(p,l,s),c=[[i]],d=t.runWebGLProgram(m,[u],"int32",c);return a||t.disposeIntermediateTensorInfo(u),d}var hz={kernelName:Im,backendName:"webgl",kernelFunc:Xae};var Yae=yr+`
  return -x;
`,Qae=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Zae(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.texData.get(n.dataId),[i,a]=g$(s.values,n.shape,n.dtype);return t.makeTensorInfo(a,n.dtype,i)}let o;return $().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Xs(n.shape,Qae):o=new xn(n.shape,Yae),t.runWebGLProgram(o,[n],n.dtype)}var gz={kernelName:hs,backendName:"webgl",kernelFunc:Zae};var Jae=br.nonMaxSuppressionV3Impl;function eie(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u}=n,p=t.readSync(o.dataId),l=t.readSync(s.dataId),{selectedIndices:m}=Jae(p,l,i,a,u);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}var bz={kernelName:da,backendName:"webgl",kernelFunc:eie};var tie=br.nonMaxSuppressionV4Impl;function rie(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:p}=n,l=t.readSync(o.dataId),m=t.readSync(s.dataId),{selectedIndices:c,validOutputs:d}=tie(l,m,i,a,u,p);return[t.makeTensorInfo([c.length],"int32",new Int32Array(c)),t.makeTensorInfo([],"int32",new Int32Array([d]))]}var yz={kernelName:Vi,backendName:"webgl",kernelFunc:rie};var nie=br.nonMaxSuppressionV5Impl;function oie(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,softNmsSigma:p}=n,l=t.readSync(o.dataId),m=t.readSync(s.dataId),c=i,d=a,f=u,h=p,{selectedIndices:g,selectedScores:y}=nie(l,m,c,d,f,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var Tz={kernelName:fa,backendName:"webgl",kernelFunc:oie};var uN=class{constructor(e,t,n,o){this.variableNames=["indices"];this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${n}),
                      float(index == coords.y)));
      }
    `}};var sie=r=>{let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:i,offValue:a}=n,u=b.sizeFromShape(o.shape),p=new uN(u,s,i,a),l=pe({inputs:{x:o},backend:t,attrs:{shape:[u]}}),m=t.runWebGLProgram(p,[l],o.dtype);t.disposeIntermediateTensorInfo(l);let c=[...o.shape,s],d=pe({inputs:{x:m},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(m),d},xz={kernelName:ha,backendName:"webgl",kernelFunc:sie};function ug(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=ku({inputs:{input:n},backend:t}),s=ug({inputs:{x:o},backend:t}),i=Rl({inputs:{input:n},backend:t}),a=ug({inputs:{x:i},backend:t}),u=Ln({inputs:{real:s,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),u}else return Su({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var Iz={kernelName:Ss,backendName:"webgl",kernelFunc:ug};function Cz(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=ku({inputs:{input:n},backend:t}),s=Cz({inputs:{x:o},backend:t}),i=Rl({inputs:{input:n},backend:t}),a=ug({inputs:{x:i},backend:t}),u=Ln({inputs:{real:s,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),u}else return Su({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var kz={kernelName:gs,backendName:"webgl",kernelFunc:Cz};function aie(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return $T({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,i=e[0].dtype;e.forEach(l=>{b.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),b.assert(i===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],u=e.map(l=>{let m=$T({inputs:{input:l},backend:t,attrs:{dim:o}});return a.push(m),m}),p=Dw({inputs:u,backend:t,attrs:{axis:o}});return a.forEach(l=>t.disposeIntermediateTensorInfo(l)),p}var Sz={kernelName:bs,backendName:"webgl",kernelFunc:aie};var pN=class{constructor(e,t,n){this.variableNames=["x"];this.customUniforms=[{name:"value",type:"float"}];this.outputShape=t.map((p,l)=>p[0]+e[l]+p[1]);let o=e.length,s=Ve(o),i=t.map(p=>p[0]).join(","),a=t.map((p,l)=>p[0]+e[l]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${i});
      ${s} end = ${s}(${a});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}};var lN=class{constructor(e,t,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"value",type:"float"}];this.outputShape=t.map((h,g)=>h[0]+e[g]+h[1]);let o=e.length,s=Ve(o),i=t.map(h=>h[0]).join(","),a=t.map((h,g)=>h[0]+e[g]).join(","),u=nr("rc",o),p=nr("source",o),l=`${u[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${p.slice(-2).join()})`,c=[`${s} rc = outputLoc;`,`${u[o-1]} += 1;
       if(${l}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${u[o-2]} += 1;
       if(${u[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${u[o-1]} += 1;
         if(${l}) {`],d=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",f="";for(let h=0,g=o===1?2:4;h<g;h++)f+=`
        ${c[h]}
        if (${d}) {
          result[${h}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${h}] = getChannel(getX(${p.join()}), ${m});
        }
      `;f+=o===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${i});
      const ${s} end = ${s}(${a});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var mN=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:i}=n;if(b.sizeFromShape(o.shape)===0){let p=s.map((l,m)=>l[0]+o.shape[m]+l[1]);return Su({backend:t,attrs:{shape:p,value:i,dtype:o.dtype}})}let a=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lN(o.shape,s,i):new pN(o.shape,s,i),u=[[i]];return t.runWebGLProgram(a,[o],o.dtype,u)},vz={kernelName:Fo,backendName:"webgl",kernelFunc:mN};var iie=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,uie=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+fp+`
  return result;
`,pie=pt({opSnippet:iie,packedOpSnippet:uie}),Az={kernelName:Ro,backendName:"webgl",kernelFunc:pie};function lie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n,a=o.shape.length,u=[],p=b.parseAxisParam(s,o.shape),l=p,m=C.getAxesPermutation(l,a),c=o;m!=null&&(c=Vt({inputs:{x:o},backend:t,attrs:{perm:m}}),l=C.getInnerMostAxes(l.length,a),u.push(c)),C.assertAxesAreInnerMostDims("prod",l,a);let d;if(t.shouldExecuteOnCPU([c])){let f=t.texData.get(c.dataId).values,{outVals:h,outShape:g,outDtype:y}=y$(c.shape,c.dtype,f,l);d=t.makeTensorInfo(g,y,h)}else{let[f,h]=C.computeOutAndReduceShapes(c.shape,l),g=b.sizeFromShape(h),y=pe({inputs:{x:c},backend:t,attrs:{shape:[-1,g]}}),T=Zi(o.dtype),x=eo(y,T,"prod",t);d=pe({inputs:{x},backend:t,attrs:{shape:f}}),u.push(y),u.push(x)}if(i){u.push(d);let f=C.expandShapeToKeepDim(d.shape,p);d=pe({inputs:{x:d},backend:t,attrs:{shape:f}})}return u.forEach(f=>t.disposeIntermediateTensorInfo(f)),d}var wz={kernelName:ga,backendName:"webgl",kernelFunc:lie};var cN=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:i}=t,a=T$(n,o,s,i);return e.makeTensorInfo([a.length],i,a)},Nz={kernelName:ei,backendName:"webgl",kernelFunc:cN};var mie="return 1.0 / x;",cie=we({opSnippet:mie}),Dz={kernelName:Hi,backendName:"webgl",kernelFunc:cie};var die=yr+`
  return (x < 0.0) ? 0.0 : x;
`,fie=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,hie=we({opSnippet:die,packedOpSnippet:fie}),Pz={kernelName:_o,backendName:"webgl",kernelFunc:hie};var gie=yr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,bie=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,yie=we({opSnippet:gie,packedOpSnippet:bie}),Ez={kernelName:$o,backendName:"webgl",kernelFunc:yie};var dN=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.outputShape=[];let[i,a,u,p]=e;this.outputShape=[i,t,n,p];let l=[o&&t>1?a-1:a,o&&n>1?u-1:u],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c;s?c="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":c="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/m[0]},
          ${l[1]/m[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var fN=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[i,a,u,p]=e;this.outputShape=[i,t,n,p];let l=[o&&t>1?a-1:a,o&&n>1?u-1:u],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c;s?c="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":c="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/m[0]},
          ${l[1]/m[1]},
          ${l[1]/m[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${p-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function Tie(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:a}=n,[u,p]=a,l=$().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new fN(o.shape,u,p,s,i):new dN(o.shape,u,p,s,i);return t.runWebGLProgram(l,[o],"float32")}var Mz={kernelName:Bo,backendName:"webgl",kernelFunc:Tie};var hN=class{constructor(e,t,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=t;let[,o,s]=t,[,i,a]=e,u=[n&&i>1?o-1:o,n&&a>1?s-1:s],p=[n&&i>1?i-1:i,n&&a>1?a-1:a],l=u[0]/p[0],m=u[1]/p[1],c=1/l,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function xie(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:i}=n,a=new hN(s.shape,o.shape,i);return t.runWebGLProgram(a,[s],s.dtype)}var Fz={kernelName:km,backendName:"webgl",kernelFunc:xie};var gN=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.outputShape=[];let[i,a,u,p]=e;this.outputShape=[i,t,n,p];let l=[o&&t>1?a-1:a,o&&n>1?u-1:u],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/m[0]},
          ${l[1]/m[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var bN=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[i,a,u,p]=e;this.outputShape=[i,t,n,p];let l=[o&&t>1?a-1:a,o&&n>1?u-1:u],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/m[0]},
          ${l[1]/m[1]},
          ${l[1]/m[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${p-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function Iie(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:a}=n,[u,p]=a,l=$().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new bN(o.shape,u,p,s,i):new gN(o.shape,u,p,s,i);return t.runWebGLProgram(l,[o],o.dtype)}var Rz={kernelName:ti,backendName:"webgl",kernelFunc:Iie};var yN=class{constructor(e,t,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=t;let[,o,s]=t,[,i,a]=e,u=[n&&i>1?o-1:o,n&&a>1?s-1:s],p=[n&&i>1?i-1:i,n&&a>1?a-1:a],l=u[0]/p[0],m=u[1]/p[1],c=1/l,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${p[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${p[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Cie(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:i}=n,a=new yN(s.shape,o.shape,i);return t.runWebGLProgram(a,[s],s.dtype)}var Lz={kernelName:Cm,backendName:"webgl",kernelFunc:Cie};var TN=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let o=a=>t.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,s=e.map((a,u)=>o(u)).join(","),i=Ve(n);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var xN=class{constructor(e,t){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let o=nr("rc",n),s=`${o[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${o[n-2]} + 1 < ${this.outputShape[n-2]}`,a=Ve(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(o.slice())};
          if(${s}){
            result.g = ${p(o.slice())};
          }
          if(${i}) {
            result.b = ${l(o.slice())};
            if(${s}) {
              result.a = ${m(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(f){return c(f)}function p(f){return f[n-1]="("+f[n-1]+" + 1)",c(f)}function l(f){return f[n-2]="("+f[n-2]+" + 1)",c(f)}function m(f){return f[n-1]="("+f[n-1]+" + 1)",f[n-2]="("+f[n-2]+" + 1)",c(f)}function c(f){let h=e.map((T,x)=>d(x,f)),g=h.join(","),y=h.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${y}))`}function d(f,h){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${h[f]} - 1`:`${h[f]}`}}};function kie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,i=o.shape.length,a=b.parseAxisParam(s,o.shape);if(i===0)return or({inputs:{x:o},backend:t});let u=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xN(o.shape,a):new TN(o.shape,a);return t.runWebGLProgram(u,[o],o.dtype)}var _z={kernelName:ba,backendName:"webgl",kernelFunc:kie};var IN=class{constructor(e,t){this.variableNames=["Image"];this.outputShape=[];this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],o=e[2];this.outputShape=e;let s="";typeof t=="number"?s=`float outputValue = ${t.toFixed(2)};`:s=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var Bz={kernelName:va,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:i}=e,a=t,u=new IN(n.shape,s),[p,l]=C.getImageCenter(i,n.shape[1],n.shape[2]),m=[[p,l,Math.sin(o),Math.cos(o)]];return a.runWebGLProgram(u,[n],n.dtype,m)}};var Sie=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,vie=we({opSnippet:Sie}),$z={kernelName:ya,backendName:"webgl",kernelFunc:vie};var Aie="return inversesqrt(x);",wie=we({opSnippet:Aie,cpuKernelImpl:x$}),Oz={kernelName:Oo,backendName:"webgl",kernelFunc:wie};var pg=class{constructor(e,t,n,o,s,i,a=!0){this.variableNames=["updates","indices","defaultValue"];this.outputShape=i;let u=Ve(s.length),p=Ve(i.length),l="";n===1?l="i":n===2&&(l="i, j");let m=`getIndices(${l})`,c="";o===1?c="i":o===2&&(c="i, coords[1]");let d=`getUpdates(${c})`,f=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${s});

        void main() {
          ${p} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${m});
              flattenedIndex += index * ${f};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function Nie(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:i}=n,{sliceRank:a,numUpdates:u,sliceSize:p,strides:l,outputSize:m}=C.calculateShapes(s,o,i),c=[m/p,p];if(m===0)return t.makeTensorInfo(i,o.dtype);let d=pe({inputs:{x:o},backend:t,attrs:{shape:[u,a]}}),f=pe({inputs:{x:s},backend:t,attrs:{shape:[u,p]}}),h=t.makeTensorInfo([],"float32",new Float32Array([0])),g=new pg(u,a,d.shape.length,f.shape.length,l,c),y=t.runWebGLProgram(g,[f,d,h],f.dtype),T=pe({inputs:{x:y},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(h),T}var zz={kernelName:Ta,backendName:"webgl",kernelFunc:Nie};var CN=class{constructor(e,t,n){this.variableNames=["c","a","b"];this.outputShape=t;let o,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",o="resRC";else{let a=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],p=[];for(let l=0;l<t.length;l++)p.push(`${a[l]}`),l<e&&u.push(`${a[l]}`);o=u.join(),s=p.join()}let i=Ve(n);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function Die(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,i=new CN(n.shape.length,o.shape,o.shape.length);return t.runWebGLProgram(i,[n,o,s],Ut(o.dtype,s.dtype))}var Gz={kernelName:Ts,backendName:"webgl",kernelFunc:Die};var Pie=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${C.SELU_SCALEALPHA};
  float scale = ${C.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Eie=we({opSnippet:Pie}),Uz={kernelName:qi,backendName:"webgl",kernelFunc:Eie};var Mie=Qs+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Fie=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Rie=we({opSnippet:Mie,packedOpSnippet:Fie,cpuKernelImpl:I$}),Wz={kernelName:Go,backendName:"webgl",kernelFunc:Rie};var Lie=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,_ie=we({opSnippet:Lie}),Kz={kernelName:ji,backendName:"webgl",kernelFunc:_ie};var Bie=Qs+`
  return sin(x);
`,$ie=we({opSnippet:Bie}),Vz={kernelName:zo,backendName:"webgl",kernelFunc:$ie};var Oie=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,zie=we({opSnippet:Oie}),Hz={kernelName:xa,backendName:"webgl",kernelFunc:zie};var Gie=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Uie=we({opSnippet:Gie}),qz={kernelName:Xi,backendName:"webgl",kernelFunc:Uie};var Wie=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:i}=n;b.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let a=s.reduce((y,T)=>y*T),u=[[0,0]];u.push(...i);for(let y=1+s.length;y<o.shape.length;++y)u.push([0,0]);let p=[],l=mN({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),m=C.getReshaped(l.shape,s,a,!1),c=C.getPermuted(m.length,s.length,!1),d=C.getReshapedPermuted(l.shape,s,a,!1),f=pe({inputs:{x:l},backend:t,attrs:{shape:m}}),h=Vt({inputs:{x:f},backend:t,attrs:{perm:c}}),g=pe({inputs:{x:h},backend:t,attrs:{shape:d}});return p.push(l),p.push(f),p.push(h),p.forEach(y=>t.disposeIntermediateTensorInfo(y)),g},jz={kernelName:Is,backendName:"webgl",kernelFunc:Wie};function Kie(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:i}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let a=t.readSync(n.dataId),u=t.readSync(o.dataId),p=t.readSync(s.dataId),l=t.readSync(i.dataId)[0],[m,c,d,f,h]=k$(a,n.shape,n.dtype,u,o.dtype,p,l);return[t.makeTensorInfo(c,n.dtype,m),t.makeTensorInfo([c[0]],o.dtype,d),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var Xz={kernelName:Wu,backendName:"webgl",kernelFunc:Kie};function Vie(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(t.readSync(o.dataId)),a=t.readSync(n.dataId),u=Array.from(t.readSync(s.dataId)),[p,l,m]=S$(a,n.shape,n.dtype,i,u);return[t.makeTensorInfo(l,n.dtype,p),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var Yz={kernelName:Yi,backendName:"webgl",kernelFunc:Vie};function Hie(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=t.readSync(n.dataId),a=t.readSync(o.dataId),u=t.readSync(s.dataId),[p,l]=wT(i,n.shape,n.dtype,a,u,!0);return t.makeTensorInfo(l,n.dtype,p)}var Qz={kernelName:Ku,backendName:"webgl",kernelFunc:Hie};function qie(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=t.readSync(n.dataId),a=t.readSync(o.dataId),u=t.readSync(s.dataId),[p,l]=wT(i,n.shape,n.dtype,a,u);return t.makeTensorInfo(l,n.dtype,p)}var Zz={kernelName:Vu,backendName:"webgl",kernelFunc:qie};function jie(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:i}=e,{outputShape:a}=n,{sliceRank:u,numUpdates:p,strides:l,outputSize:m}=C.calculateShapes(s,o,a),c=!1,d=new pg(p,u,o.shape.length,s.shape.length,l,[m,1],c),f=t.runWebGLProgram(d,[s,o,i],s.dtype),h=pe({inputs:{x:f},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(f),h}var Jz={kernelName:Hu,backendName:"webgl",kernelFunc:jie};function Xie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:i}=n,a=b.parseAxisParam(i,o.shape)[0],u=C.prepareSplitSize(o,s,a),p=o.shape.length,l=new Array(p).fill(0),m=o.shape.slice();return u.map(c=>{let d=[...m];d[a]=c;let f=Ka({inputs:{x:o},backend:t,attrs:{begin:l,size:d}});return l[a]+=c,f})}var eG={kernelName:Cs,backendName:"webgl",kernelFunc:Xie};var tG="return sqrt(x);",Yie=we({opSnippet:tG,packedOpSnippet:tG,cpuKernelImpl:v$}),rG={kernelName:Uo,backendName:"webgl",kernelFunc:Yie};var Qie="return x * x;",Zie=we({opSnippet:Qie}),nG={kernelName:ri,backendName:"webgl",kernelFunc:Zie};var oG="return (a - b) * (a - b);",Jie=pt({opSnippet:oG,packedOpSnippet:oG}),sG={kernelName:Vo,backendName:"webgl",kernelFunc:Jie};function eue({inputs:r,attrs:e,backend:t}){let{x:n}=r,o=yr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,s=new xn(n.shape,o);return t.runWebGLProgram(s,[n],n.dtype)}var aG={kernelName:vs,backendName:"webgl",kernelFunc:eue};var kN=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=n;let o=n.length,s=Ve(n.length),i=Ve(n.length),a="";if(o===1)a="coords * strides + begin";else{let u=0;a=n.map((p,l)=>(u++,n.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${u-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${e});
      ${s} strides = ${s}(${t});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}};function tue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:i,strides:a,beginMask:u,endMask:p,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:T,end:x,strides:I}=yt.sliceInfo(o.shape,s,i,a,u,p,l,m,c),k;if(h)k=pe({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let E=yt.computeOutShape(T,x,I),M=Ka({inputs:{x:o},backend:t,attrs:{begin:T,size:E}});k=pe({inputs:{x:M},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(M)}else if(t.shouldExecuteOnCPU([o])){let M=t.readSync(o.dataId),R=ke(o.shape,o.dtype,M),B=A$(d,R,I,T);k=t.makeTensorInfo(f,o.dtype,B.values)}else{let M=new kN(T,I,d);k=t.runWebGLProgram(M,[o],o.dtype)}let N=pe({inputs:{x:k},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(k),N}var iG={kernelName:Ia,backendName:"webgl",kernelFunc:tue};function rue(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:i,rightPad:a,padWidth:u,preserveShortSequences:p}=n,{data:l,dataSplits:m}=e,c=t.readSync(l.dataId),d=t.readSync(m.dataId),[f,h]=w$(c,d,o,s,i,a,u,p);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(m.shape,"int32",h)]}var uG={kernelName:qu,backendName:"webgl",kernelFunc:rue};function nue(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:i}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let a=t.readSync(s.dataId),u=t.readSync(i.dataId)[0],[p,l,m]=N$(a,u,o),c=l.length;return[t.makeTensorInfo([c,2],"int32",p),t.makeTensorInfo([c],"string",l),t.makeTensorInfo([2],"int32",new Int32Array(m))]}var pG={kernelName:Sm,backendName:"webgl",kernelFunc:nue};function oue(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let i=t.readSync(s.dataId),a=D$(i,o);return t.makeTensorInfo(s.shape,"int32",a)}var lG={kernelName:vm,backendName:"webgl",kernelFunc:oue};var sue="return tan(x);",aue=we({opSnippet:sue}),mG={kernelName:Ca,backendName:"webgl",kernelFunc:aue};var iue=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,uue=we({opSnippet:iue}),cG={kernelName:qo,backendName:"webgl",kernelFunc:uue};var SN=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[i]*t[i];this.outputShape=n,this.rank=n.length;let o=Ve(this.rank),s=pue(e);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function pue(r){let e=r.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${r[0]})`;let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let o=0;o<r.length;o++)n.push(`imod(${t[o]}, ${r[o]})`);return n.join()}function vN(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(o.dtype==="string"||o.shape.length>5){let u=t.readSync(o.dataId),p=o.dtype==="string"?u.map(c=>b.decodeString(c)):u,l=ke(o.shape,o.dtype,p),m=E$(l,s);return t.makeTensorInfo(m.shape,m.dtype,m.values)}let i=new SN(o.shape,s);return t.runWebGLProgram(i,[o],o.dtype)}var dG={kernelName:An,backendName:"webgl",kernelFunc:vN};var AN=class{constructor(e){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}];this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},wN=class{constructor(e){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}];this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function _l(r,e){e!==null&&r.disposeIntermediateTensorInfo(e)}function fG(r){let e=1;for(;e<r;)e*=2;return e}function lue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:i}=n,a=$().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=$().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),p=o.shape,l=p[p.length-1];if(t.shouldExecuteOnCPU([o])||l<a||s>u){let B=t.readSync(o.dataId),[U,W]=M$(B,p,o.dtype,s,i);return[t.makeTensorInfo(U.shape,U.dtype,U.values),t.makeTensorInfo(W.shape,W.dtype,W.values)]}if(s===0)return p[p.length-1]=0,[t.makeTensorInfo(p,o.dtype,[]),t.makeTensorInfo(p,"int32",[])];if(l===1)return[o,Su({attrs:{shape:p,dtype:"int32",value:0},backend:t})];let m=t.texData.get(o.dataId),c=m!==null&&m.isPacked,d=c?t.unpackTensor(o):o,h=b.sizeFromShape(p)/l,g=pe({inputs:{x:d},attrs:{shape:[h,l]},backend:t});c&&_l(t,d);let y=fG(s),T=fG(l),x=null,I=()=>x===null?[g,g]:[g,x],k=(B,U,W)=>{let K=I(),H=new AN(W),j=[[l],[x===null?1:0],[Number.NEGATIVE_INFINITY],[B],[U]],ee=x;x=t.runWebGLProgram(H,K,"int32",j),_l(t,ee)};for(let B=1;B<y;B*=2){let U=B*2;for(let W=B;W>=1;W/=2)k(U,W,[h,T])}for(let B=T;B>y;B/=2){let U=I(),W=new wN([h,B/2]),H=[[l],[x===null?1:0],[y]],V=x;x=t.runWebGLProgram(W,U,"int32",H),_l(t,V);let j=y/2,ee=j*2;for(let Z=j;Z>=1;Z/=2)k(ee,Z,x.shape)}let N=x;x=Ka({inputs:{x},backend:t,attrs:{begin:0,size:[h,s]}}),_l(t,N);let E=Xw({inputs:{x:g,indices:x},backend:t,attrs:{axis:1,batchDims:1}});_l(t,g);let M=p.slice(0,-1);M.push(s),N=x,x=pe({inputs:{x},attrs:{shape:M},backend:t}),_l(t,N);let R=E;return E=pe({inputs:{x:E},attrs:{shape:M},backend:t}),_l(t,R),[E,x]}var hG={kernelName:ka,backendName:"webgl",kernelFunc:lue};var NN=class{constructor(e,t,n,o,s,i){this.variableNames=["Image","Transforms"];this.outputShape=i;let a=n==="nearest"?1:2,u;switch(o){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function mue(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:i,fillMode:a,fillValue:u,outputShape:p}=n,[l,m,c,d]=o.shape,[f,h]=p??[m,c],g=[l,f,h,d],y=new NN(m,c,i,a,u,g);return t.runWebGLProgram(y,[o,s],"float32")}var gG={kernelName:Sa,backendName:"webgl",kernelFunc:mue};function cue(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;Ga(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=n.readSync(s.dataId),{outputValues:a,outputShape:u,indices:p}=F$(i,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,a),n.makeTensorInfo([p.length],"int32",p)]}var bG={kernelName:Am,backendName:"webgl",kernelFunc:cue};function due(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let i=o,a=i.shape.length,u=o.shape[s],p=new Array(a-1),l=0;for(let h=0;h<a;h++)h!==s&&(p[l++]=i.shape[h]);let m=[],c=new Array(a).fill(0),d=i.shape.slice();d[s]=1;let f=new Array(u);for(let h=0;h<f.length;h++){c[s]=h;let g=Ka({inputs:{x:i},backend:t,attrs:{begin:c,size:d}}),y=pe({inputs:{x:g},backend:t,attrs:{shape:p}});f[h]=y,m.push(g)}return m.forEach(h=>t.disposeIntermediateTensorInfo(h)),f}var yG={kernelName:ks,backendName:"webgl",kernelFunc:due};var DN=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,o=e.batchSize,s=e.inSize,i=e.numSegments,a=i*Math.ceil(s/n);this.outputShape=[o,a];let u="0.0",p="sumValue",l=Math.floor(n/4)*4,m=n%4,c=`
        sumValue += dot(values, segFilter);
    `,d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${c}
        }

        int inIdx = inOffset + ${l};
        if (${m===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${c}
        } else if (${m===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${c}
        } else if (${m===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${c}
        }
        setOutput(${p});
      }
    `}};function fue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:i}=n,a=o.shape.length,u=[],p=0,l=C.getAxesPermutation([p],a),m=o;l!=null&&(m=Vt({inputs:{x:o},backend:t,attrs:{perm:l}}),u.push(m),p=C.getInnerMostAxes(1,a)[0]);let c=C.segment_util.computeOutShape(m.shape,p,i),d=b.sizeFromShape([m.shape[p]]),f=pe({inputs:{x:m},backend:t,attrs:{shape:[-1,d]}});u.push(f);let h=Zi(o.dtype),g=(I,k,N,E,M)=>{let R=I.shape[0],B=I.shape[1],U=C.segment_util.segOpComputeOptimalWindowSize(B,M),W={windowSize:U,inSize:B,batchSize:R,numSegments:M},K=new DN(W,k),H=t.compileAndRun(K,[I,N],E);if(u.push(H),H.shape[1]===M)return H;let V=cN({backend:t,attrs:{start:0,stop:M,step:1,dtype:"float32"}}),j=vN({inputs:{x:V},backend:t,attrs:{reps:[B/U]}});return u.push(V),u.push(j),g(H,k,j,E,M)},y=g(f,"unsortedSegmentSum",s,h,i),T=pe({inputs:{x:y},backend:t,attrs:{shape:c}}),x=T;if(l!=null){u.push(T);let I=C.getUndoAxesPermutation(l);x=Vt({inputs:{x},backend:t,attrs:{perm:I}})}return u.forEach(I=>t.disposeIntermediateTensorInfo(I)),x}var TG={kernelName:ju,backendName:"webgl",kernelFunc:fue};var hue=[pO,mO,cO,dO,hO,gO,bO,yO,IO,CO,kO,SO,vO,AO,wO,NO,DO,PO,EO,MO,FO,LO,_O,BO,GO,WO,KO,Q$,HO,jO,XO,YO,QO,ZO,JO,e3,t3,r3,n3,a3,i3,u3,p3,l3,m3,c3,d3,f3,h3,g3,b3,y3,T3,x3,C3,k3,S3,v3,w3,N3,D3,P3,E3,M3,F3,R3,L3,Y$,_3,qO,B3,$3,O3,Z$,z3,G3,U3,W3,K3,V3,H3,q3,j3,X3,Q3,Z3,J3,ez,tz,rz,oz,az,iz,uz,pz,lz,hz,nO,gz,bz,yz,Tz,$O,xz,kz,Sz,vz,Az,J$,wz,Nz,OO,mz,Dz,Pz,Ez,sO,Mz,Fz,Rz,Lz,_z,Bz,$z,Oz,zz,Gz,Uz,Wz,Kz,Vz,Hz,RO,fz,qz,jz,Xz,Yz,Qz,Zz,Jz,eG,rG,nG,sG,aG,iG,uG,pG,lG,dz,iO,mG,cG,dG,hG,gG,uO,bG,yG,TG,Iz];for(let r of hue)Qi(r);var Ii=$();Ii.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Ii.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Ii.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);Ii.registerFlag("WEBGPU_USE_NAIVE_CONV2D",()=>!1);Ii.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);Ii.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);Ii.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Ii.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Ii.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Ii.registerFlag("WEBGPU_USE_IMPORT",()=>!1);function xG(r,e){if(Math.max(...r)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let t=r.length,n=r.map(s=>`${e}[${s}]`),o=new Array(t-1);o[t-2]=n[t-1];for(let s=t-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function Yt(r){if(r<=1)return"i32";if(r===2)return"vec2<i32>";if(r===3)return"vec3<i32>";if(r===4)return"vec4<i32>";throw Error(`GPU for rank ${r} is not yet supported`)}function GT(r,e){return r==="float32"?e?"vec4<f32>":"f32":r==="int32"||r==="bool"?e?"vec4<i32>":"i32":r}function lg(){return`
  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function to(){return`
  ${lg()}
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;
`}function Se(){return`
    ${to()}
      let index = getGlobalIndex();
`}function kG(r,e,t,n=!1){let o=[];if(o.push(`
    let workGroupSizeX = ${t.workGroupSize[0]}u;
    let workGroupSizeY = ${t.workGroupSize[1]}u;
    let workGroupSizeZ = ${t.workGroupSize[2]}u;

    var<private> localId: vec3<u32>;
    var<private> globalId: vec3<u32>;
    var<private> numWorkgroups: vec3<u32>;

    // Only used when the y/z dimension of workgroup size is 1.
    fn getGlobalIndex() -> i32 {
      if (numWorkgroups.y == 1u && numWorkgroups.z == 1u) {
        return i32(globalId.x);
      }

      let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
          localId.y * workGroupSizeX + localId.x;
      let workGroupID = (globalId - localId)/vec3<u32>(
          workGroupSizeX, workGroupSizeY, workGroupSizeZ);

      return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
        workGroupID.y * numWorkgroups.x + workGroupID.x) *
        (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
        localInvocationIndex);
    }
  `),n===!0)return o.push(`
      struct Matrix0 {
        numbers: array<${GT(e.dtype,t.isVec4)}>;
      };
      struct Uniform {
        size            : i32;
        numChannels     : i32;
        outShapeStrides : vec2<i32>;
        dispatchSize    : vec3<u32>;
      };

      @group(0) @binding(0) var<storage, write> result : Matrix0;
      @group(0) @binding(2) var<uniform> uniforms: Uniform;
    `),[IG,o.join(`
`),CG(e.shape),t.getUserCode()].join(`
`);let s="struct Uniforms { NAN : f32; ";t.variableNames.forEach((m,c)=>{s+=`${m.charAt(0).toLowerCase()+m.slice(1)}Shape : ${Yt(r[c].shape.length)}; `}),s+=`outShape : ${Yt(e.shape.length)} ; `;let i=e.shape.length-1;s+=`
       outShapeStrides: ${Yt(i)}; `,t.size&&(s+="size : i32; "),t.uniforms&&(s+=t.uniforms),s+="};",o.push(s),t.atomic?o.push(`
    struct Matrix0 {
        numbers: array<atomic<i32>>;
    };

    @group(0) @binding(0) var<storage, read_write> result : Matrix0;
  `):o.push(`
    struct Matrix0 {
        numbers: array<${GT(e.dtype,t.isVec4)}>;
    };

    @group(0) @binding(0) var<storage, write> result : Matrix0;
  `),t.variableNames.forEach((m,c)=>{o.push(`
    struct Matrix${1+c} {
      numbers: array<${GT(r[c].dtype,t.isVec4)}>;
    };
    @group(0) @binding(${1+c}) var<storage, read> ${m} : Matrix${1+c};
    `)}),s!==""&&o.push(`
    @group(0) @binding(${1+t.variableNames.length}) var<uniform> uniforms : Uniforms;
    `);let[a,u]=Iue(e.shape,t.dispatchLayout),p=[IG,o.join(`
`),CG(e.shape),a,gue(e.shape.length)];if(t.atomic||p.push(bue(e.shape,e.dtype,t.isVec4)),u===e.shape.length){let m=r.map(c=>yue(c,e.shape,t.isVec4,t.dispatchLayout.x.length===e.shape.length)).join(`
`);p.push(m)}return p.push(t.getUserCode()),p.join(`
`)}var IG=`
  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  fn isNanCustom(val : f32) -> bool {
    if (val > 0.0) {
      return false;
    }
    if (val < 0.0) {
      return false;
    }
    if (val == 0.0) {
      return false;
    }
    return true;
  }
  fn isNanCustomVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isNanCustom(val[0]), isNanCustom(val[1]), isNanCustom(val[2]), isNanCustom(val[3]));
  }
`;function gue(r){let e="";switch(r){case 0:case 1:e+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:e+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:e+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;default:b.assert(!1,()=>`Unsupported ${r}D shape`);break}return e}function bue(r,e,t){let n=r.length,o=GT(e,t),s;if(t?s=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result.numbers[flatIndex] = ${o}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result.numbers[flatIndex] = ${o}(value);
    }`:s=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result.numbers[flatIndex] = ${o}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result.numbers[flatIndex] = ${o}(value);
    }`,n>=2){let i=["d0","d1","d2","d3"].slice(0,n),a=Yt(n);t?s+=`
      fn setOutputAtCoords(${i.map(u=>`${u} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${a}(${i.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${i.map(u=>`${u} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${a}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:s+=`
      fn setOutputAtCoords(${i.map(u=>`${u} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${a}(${i.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${i.map(u=>`${u} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${a}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return s}function yue(r,e,t,n){let o=Tue(r,t);return r.shape.length<=e.length&&(o+=xue(r,e,t,n)),o}function Tue(r,e){let t=r.name,n=r.shape.length,o=Yt(n),s="get"+t.charAt(0).toUpperCase()+t.slice(1),i=["d0","d1","d2","d3"].slice(0,n),a=i.map(l=>`${l} : i32`).join(", ");if(n<1)return e?`
        fn ${s}() -> vec4<f32> {
          return vec4<f32>(${t}.numbers[0]);
        }
      `:`
      fn ${s}() ->f32 {
        return f32(${t}.numbers[0]);
      }
    `;let u=`uniforms.${t.charAt(0).toLowerCase()+t.slice(1)}Shape`,p=`${n}D`;return n===0&&(p="1D"),e?`
      fn ${s}(${a}) -> vec4<f32> {
        return vec4<f32>(${t}.numbers[getIndexFromCoords${p}(${o}(${i.join(",")}),
          ${u}) / 4]);
      }
      `:`
    fn ${s}(${a}) -> f32 {
      return f32(${t}.numbers[getIndexFromCoords${p}(${o}(${i.join(",")}),
        ${u})]);
    }
   `}function xue(r,e,t,n){let o=r.name,s=o.charAt(0).toUpperCase()+o.slice(1),i="get"+s+"ByOutput",a=r.shape.length,u=e.length,p=Yt(u);if(b.arraysEqual(r.shape,e)&&n)return t?`
        fn ${i}Index(globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${o}.numbers[globalIndex]);
        }

        fn ${i}Coords(coords : ${p}) -> vec4<f32> {
          return vec4<f32>(${o}.numbers[${u>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
        }
        `:`
      fn ${i}Index(globalIndex : i32) -> f32 {
        return f32(${o}.numbers[globalIndex]);
      }

      fn ${i}Coords(coords : ${p}) -> f32 {
        return f32(${o}.numbers[${u>1?"getOutputIndexFromCoords(coords)":"coords"}]);
      }
      `;let l=C.getBroadcastDims(r.shape,e),m=u-a,c="";if(a===0)return t?`
      fn ${i}Index(globalIndex : i32) -> vec4<f32> {
        return get${s}();
      }

      fn ${i}Coords(coords : ${p}) -> vec4<f32> {
        return get${s}();
      }
    `:`
      fn ${i}Index(globalIndex : i32) -> f32{
        return get${s}();
      }

      fn ${i}Coords(coords : ${p}) -> f32{
        return get${s}();
      }
    `;u<2&&l.length>=1?c="coords = 0;":c=l.map(g=>`coords[${g+m}] = 0;`).join(`
`);let d="";if(u<2&&a>0)d="coords";else if(u>1){let g=Yt(a),y=r.shape.map((T,x)=>`coords[${x+m}]`).join(", ");d=`${g}(${y})`}else d="coords";let f=`uniforms.${o.charAt(0).toLowerCase()+o.slice(1)}Shape`,h=`${a}D`;return t?`
      fn ${i}Index(globalIndex : i32) -> vec4<f32> {
        var coords = getCoordsFromIndex(globalIndex);
        ${c}
        return ${o}.numbers[getIndexFromCoords${h}(${d}, ${f}) / 4];
      }

      fn ${i}Coords(coordsIn : ${p}) -> vec4<f32> {
        var coords = coordsIn;
        ${c}
        return ${o}.numbers[getIndexFromCoords${h}(${d}, ${f}) / 4];
      }
    `:`
    fn ${i}Index(globalIndex : i32) -> f32 {
      var coords = getCoordsFromIndex(globalIndex);
      ${c}
      return f32(${o}.numbers[getIndexFromCoords${h}(${d}, ${f})]);
    }

    fn ${i}Coords(coordsIn : ${p}) -> f32 {
      var coords = coordsIn;
      ${c}
      return f32(${o}.numbers[getIndexFromCoords${h}(${d}, ${f})]);
    }
  `}function Iue(r,e){let{x:t,y:n=[],z:o=[]}=e,s=r.length;if(t.length===s)return[`fn getOutputCoords() -> ${Yt(s)}{
      let globalIndex = getGlobalIndex();
      return getCoordsFromIndex(globalIndex);
    }
    `,s];let i="",a=[t,n,o],u=0;for(let c=0;c<a.length;c++){let d=a[c];if(d.length!==0)if(u+=d.length,d.length===1)i+=`let d${d[0]} = i32(globalId[${c}]);`;else{let f=xG(d,"uniforms.outShape");i+=`var index${c} = i32(globalId[${c}]);`;for(let h=0;h<f.length;h++)i+=`let d${d[h]} = index${c} / ${f[h]};`,h===f.length-1?i+=`let d${d[h+1]} = index${c} - d${d[h]} * ${f[h]};`:i+=`index${c} = index${c} - d${d[h]} * ${f[h]};`}}let p=[];for(let c=0;c<u;c++)p.push(`d${c}`);let l=Yt(u),m=`fn getOutputCoords() -> ${l} {
    ${i}
  `;return p.length===0?m+=`return ${l}(0); }`:m+=`return ${l}(${p.join(",")}); }`,[m,u]}function CG(r){let e=r.length;if(e<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let t=b.computeStrides(r),n=Yt(e),o=[];for(let i=0;i<e;i++)o.push(`d${i}`);if(t.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let s="var index2 = index;"+t.map((i,a)=>{let u=`let ${o[a]} = index2 / uniforms.outShapeStrides[${a}]`,p=a===t.length-1?`let ${o[a+1]} = index2 - ${o[a]} * uniforms.outShapeStrides[${a}]`:`index2 = index2 - ${o[a]} * uniforms.outShapeStrides[${a}]`;return`${u}; ${p};`}).join("");return`
    fn getCoordsFromIndex(index : i32) -> ${n} {
      ${s}
      return ${n}(${o.join(",")});
    }
  `}var WT={};je(WT,{ArrayBufferToTypedArray:()=>EN,GPUBytesPerElement:()=>UT,computeDispatch:()=>de,computeWorkGroupSizeForConv2d:()=>mg,computeWorkGroupSizeForMatMul:()=>PN,computeWorkPerThreadForConv2d:()=>cg,flatDispatchLayout:()=>Ce,isWebGPUSupported:()=>dg,tilesFitEvenlyIntoShape:()=>rs});var Bl=r=>{let e=1;for(let t=0;t<r.length;t++)e*=r[t];return e};function rs(r,e){if(r.length!==e.length)throw new Error(`Cannot compute whether rank ${r.length} tiles fit evenly into rank ${e.length} shape - ranks must match.`);return e.every((t,n)=>t%r[n]===0)}function de(r,e,t=[1,1,1],n=[1,1,1]){let[o,s,i]=[Math.ceil(Bl(r.x.map(u=>e[u]))/(t[0]*n[0])),r.y?Math.ceil(Bl(r.y.map(u=>e[u]))/(t[1]*n[1])):1,r.z?Math.ceil(Bl(r.z.map(u=>e[u]))/(t[2]*n[2])):1];if(o<=65535&&s<=65535&&i<=65535)return[o,s,i];b.assert(o>65535&&r.y===void 0&&r.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let a=Math.ceil(Math.sqrt(o));return a>65535?(a=Math.ceil(Math.cbrt(o)),b.assert(a<=65535,()=>"Total dispatch size exceeds WebGPU maximum."),[a,a,a]):[a,a,1]}function mg(r,e){let t=Bl(r.x.map(o=>e[o])),n=Bl(r.y.map(o=>e[o]));return t<=4?[4,16,1]:n<=4?[16,4,1]:[16,16,1]}function PN(r,e,t){return r===1?[32,1,1]:t===1?[1,32,1]:[8,8,1]}function cg(r,e){let t=Bl(r.x.map(o=>e[o])),n=Bl(r.y.map(o=>e[o]));return t<=4?[1,2,1]:n<=4?[2,1,1]:[2,2,1]}function Ce(r){return{x:r.map((e,t)=>t)}}function UT(r){if(r==="float32"||r==="int32"||r==="bool"||r==="string")return 4;if(r==="complex64")return 8;throw new Error(`Unknown dtype ${r}`)}function EN(r,e){if(e==="float32")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${e}`)}function dg(){return!!navigator.gpu}var kue="return a + b;",Sue="return areal * breal - aimag * bimag;",vue="return areal * bimag + aimag * breal;",Aue="return a / b;",wue="return a * b;",Nue="return (a - b) * (a - b);",Due="return a - b;",Pue="return f32(a == b);",Eue="return vec4<f32>(a == b);",Mue="return f32(a > b);",Fue="return vec4<f32>(a > b);",Rue="return f32(a >= b);",Lue="return vec4<f32>(a >= b);",_ue="return f32(a < b);",Bue="return vec4<f32>(a < b);",$ue="return f32(a <= b);",Oue="return vec4<f32>(a <= b);",zue="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",Gue=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Uue=`
  if (isNanCustom(a)) { return a; }
  if (isNanCustom(b)) { return b; }
  `,vG=`
  if (isNaN.r) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a) {
    resultTemp.a = uniforms.NAN;
  }
  `,Wue=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,Kue=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,Vue="return f32(a != b);",Hue="return vec4<f32>(a != b);",que=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,jue=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  ${vG}
  return resultTemp;
  `,Xue="if (a < 0.0) { return b * a; }  return a;",Yue=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function SG(r,e){let t=e?vG:Uue;return e?`
    var resultTemp = vec4<f32>(${r}(a, b));
    let isNaN = isNanCustomVec4(a) | isNanCustomVec4(b);
    `+t+`
    return resultTemp;
  `:t+`
    return ${r}(a, b);
  `}function Ci(r,e){switch(r){case 0:return wue;case 1:return kue;case 2:return Due;case 3:return Aue;case 4:return e?Eue:Pue;case 5:return e?Fue:Mue;case 6:return e?Lue:Rue;case 7:return e?Bue:_ue;case 8:return e?Oue:$ue;case 9:return e?Gue:zue;case 10:return e?Hue:Vue;case 11:return Nue;case 12:return e?Kue:Wue;case 14:return e?Yue:Xue;case 15:return SG("max",e);case 16:return SG("min",e);case 13:return e?jue:que;case 17:return Sue;case 18:return vue;default:throw new Error(`BinaryType ${r} is not implemented!`)}}var Que="return abs(a);",Zue="return ceil(a);",Jue="return cos(a);",epe=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,tpe="return exp(a) - 1.0;",rpe="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",npe=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,ope="return exp(a);",spe="return floor(a);",ape="return a;",ipe=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,upe="return f32(!(a >= 1.0));",ppe="return -a;",lpe="return (a < 0.0) ? b * a : a;",mpe="if (a < 0.0) { return uniforms.alpha * a; } return a;",cpe="if(a < 0.0) { return 0.0; } return a;",dpe="return clamp(a, 0.0, 6.0);",fpe="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",hpe=`
  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));
  let isNaN = isNanCustomVec4(a);

  if (isNaN.r) {
    resFloat.r = a.r;
  }
  if (isNaN.g) {
    resFloat.g = a.g;
  }
  if (isNaN.b) {
    resFloat.b = a.b;
  }
  if (isNaN.a) {
    resFloat.a = a.a;
  }
  return resFloat;
`,gpe="return 1.0/sqrt(a);",bpe="return 1.0 / (1.0 + exp(-1.0 * a));",ype="return sin(a);",Tpe=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,xpe="return sqrt(a);",Ipe="return a * a;",Cpe=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,kpe="return f32(i32((a)));";function bp(r,e){switch(r){case 0:return Que;case 2:return Jue;case 3:return epe;case 1:return Zue;case 4:return e?npe:rpe;case 5:return ope;case 6:return tpe;case 7:return spe;case 8:return ape;case 9:return ipe;case 10:return upe;case 11:return ppe;case 12:return lpe;case 15:return mpe;case 13:return e?hpe:cpe;case 14:return e?fpe:dpe;case 16:return gpe;case 19:return bpe;case 17:return ype;case 18:return Tpe;case 20:return xpe;case 21:return Ipe;case 22:return Cpe;case 23:return kpe;default:throw new Error(`BinaryType ${r} is not implemented!`)}}function Qr(r,e=!1){if(r===null)return null;if(r==="linear")return bp(8);if(r==="relu")return bp(13,e);if(r==="elu")return bp(4,e);if(r==="relu6")return bp(14,e);if(r==="prelu")return Ci(14,e);if(r==="sigmoid")return bp(19);throw new Error(`Activation ${r} has not been implemented for the WebGPU backend.`)}function MN(r,e,t,n){return b.assert(n%4===0&&r[0]===4,()=>"tileInner must be divisible by 4. And ColPerThread must be 4"),`
  var<workgroup> mm_Asub : array<array<vec4<f32>, ${n/r[0]}>, ${e}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${t/r[0]}>, ${n}>;

  let RowPerThread = ${r[1]};
  let ColPerThread = ${r[0]};
  let TileInner = ${n};

  ${to()}

    let tileRow = ${e===1?"0":"i32(localId.y) * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${e===1?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, RowPerThread>;
    var ACached : vec4<f32>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / i32(workGroupSizeY);
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / ColPerThread;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {
            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];
            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];
            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];
            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];

            for (var i = 0; i < RowPerThread; i = i + 1) {
                ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                acc[i] = BCached[3] * ACached.w + acc[i];
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
  }`}var FN=class{constructor(e,t,n,o=null,s=null,i=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.workGroupSize=[8,8,1];this.isVec4=!0;this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let a=o!=null,u=i!=null;a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=t[1]===1?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=a,this.activation=s,this.hasPreluActivationWeights=u,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],o=[this.tileAOuter,this.tileInner],s=[this.tileInner,this.tileBOuter];return[rs(o,this.aShape.slice(1)),rs(s,n.slice(1))]}getUserCode(){let e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,n="",o="";if(this.activation){let a=Qr(this.activation,this.isVec4);this.hasPreluActivationWeights?n=`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${a}
                }`:n=`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${a}
            }`,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / 4;
        let batch = i32(globalId.z);
        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / 4;
        let batch = i32(globalId.z);
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${s}
          ${o}
          setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${MN(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner)}
    `}};function fg(r,e){let t=e[1]*r[1],n=e[0]*r[0],o=t>n?t:n;return`
    var<workgroup> mm_Asub : array<array<f32, ${o}>, ${t}>;
    var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${o}>;
    ${to()}
      let tileRow = i32(localId.y) * ${r[1]};
      let tileCol = i32(localId.x) * ${r[0]};

      let globalRow = i32(globalId.y) * ${r[1]};
      let globalCol = i32(globalId.x) * ${r[0]};

      let numTiles = (uniforms.dimInner - 1) / ${o} + 1;

      var acc : array<array<f32, ${r[0]}>, ${r[1]}>;
      var ACached : f32;
      var BCached : array<f32, ${r[0]}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let ColPerThreadA = ${o} / ${e[0]};
      let tileColA = i32(localId.x) * ColPerThreadA;
      let RowPerThreadB = ${o} / ${e[1]};
      let tileRowB = i32(localId.y) * RowPerThreadB;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;

            mm_Asub[inputRow][inputCol] = mm_readA(
                globalRow + innerRow,
                t * ${o} + inputCol, globalId);
          }
        }
        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;

            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${o} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${o}; k = k + 1) {
          for (var inner = 0; inner < ${r[0]}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
            ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}function Spe(r){return`
    let TileSize = ${r[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;

    ${to()}
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),
                                mm_readA(globalRow, colA + 1, globalId),
                                mm_readA(globalRow, colA + 2, globalId),
                                mm_readA(globalRow, colA + 3, globalId));
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var hg=class{constructor(e,t,n,o=!1,s=!1,i=null,a=null,u=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.workGroupSize=[16,16,1];this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let p=o?e[1]:e[2];this.workGroupSize=PN(t[1],p,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),b.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let l=i!=null,m=u!=null;l&&this.variableNames.push("bias"),m&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=o,this.transposeB=s,this.addBias=l,this.activation=a,this.hasPreluActivationWeights=m;let c=this.outputShape[2],d=this.transposeB?[this.outputShape[0],c,p]:[this.outputShape[0],p,c];[this.fitA,this.fitB]=this.getShapeFit(d),this.shaderKey=`matMulPacked_${this.workPerThread}_${o}_${s}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread,o=t>n?t:n;this.outputShape[1]===1&&(o*=4),b.assert(o%this.workGroupSize[0]===0&&o%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let s=[t,o],i=[o,n];return[rs(s,this.aShape.slice(1)),rs(i,e.slice(1))]}getUserCode(){let e;this.transposeA===!1?e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
           }
           return 0.0;`:e=this.fitA?"return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch* batchASize + col * uniforms.dimAOuter + row];
           }
           return 0.0;`;let t;this.transposeB===!1?t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
           }
           return 0.0;`:t=this.fitB?"return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];
           }
           return 0.0;`;let n="",o="";if(this.activation){let a=Qr(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${a}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${a}
              }
            `,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${s}
        ${o}
        setOutputAtCoords(batch, row, col, value);
      }
      ${this.outputShape[1]>1?fg([this.workPerThread,this.workPerThread,1],this.workGroupSize):Spe(this.workGroupSize)}
    `}};function vpe(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${to()}
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var RN=class{constructor(e,t=!1,n=!1,o=null,s=null,i=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.workGroupSize=[256,1,1];this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize);let a=o!=null,u=i!=null;a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=a,this.activation=s,this.hasPreluActivationWeights=u,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){let e;this.transposeA===!1?e="return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":e="return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];";let t;this.transposeB===!1?t="return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":t="return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];";let n="",o="";if(this.activation){let a=Qr(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${a}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${a}
              }
            `,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        ${e}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let outCoord = vec3<i32>(batch, row, col);
        ${s}
        ${o}
        setOutputAtCoords(batch, row, col, value);
      }
      ${vpe()}
    `}};function Ape(r){let e=r[1]/2,t=r[0],n=e>t?e:t;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${n}>, ${e}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${t}>, ${n}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${n}>, ${e}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${t}>, ${n}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${to()}
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${e}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${n};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${n};
        }
      } else {
        if (tileRow < ${e}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${n};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${n};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${n}; k = k + 1) {
            let subRow = tileRow - ${e};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${e}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${n};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${n};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${n}; k = k + 1) {
            let subRow = tileRow - ${e};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${e};
    if (tileRow >= ${e} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var LN=class{constructor(e,t,n,o=null,s=null,i=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.workGroupSize=[8,16,1];b.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]*2/this.workGroupSize[1]),n[0]];let a=o!=null;a&&this.variableNames.push("bias");let u=i!=null;u&&this.variableNames.push("preluActivationWeights"),this.addBias=a,this.activation=s,this.hasPreluActivationWeights=u,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;`,t=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;`,n="",o="";if(this.activation){let a=Qr(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsByOutputCoords(outCoord);
            ${a}
            }`:n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${a}
        }`,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${s}
          ${o}
          setOutputAtCoords(batch, row, col, value);
        }
      }
      ${Ape(this.workGroupSize)}
    `}};function _e(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=b.sizeFromShape(n.shape),i=b.inferFromImplicitShape(o,s),a=b.sizeFromShape(i);return b.assert(s===a,()=>`The new shape (${i}) has ${a} elements and the old shape (${n.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:i,dtype:n.dtype}}var AG={kernelName:ys,backendName:"webgpu",kernelFunc:_e};function Kc({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:u=null}){let p=r.shape.length,l=e.shape.length,m=t?r.shape[p-2]:r.shape[p-1],c=n?e.shape[l-1]:e.shape[l-2],d=t?r.shape[p-1]:r.shape[p-2],f=n?e.shape[l-2]:e.shape[l-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),y=b.sizeFromShape(h),T=b.sizeFromShape(g),I=wr.assertAndGetBroadcastShape(r.shape.slice(0,-2),e.shape.slice(0,-2)).concat([d,f]);b.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let k=t?[y,m,d]:[y,d,m],N=n?[T,f,c]:[T,c,f],E=_e({inputs:{x:r},backend:o,attrs:{shape:k}}),M=_e({inputs:{x:e},backend:o,attrs:{shape:N}}),R=[E,M],B=Math.max(y,T),U=m%4===0&&f%4===0&&!t&&!n&&f>=32,W;d*f<=32?W=new RN([B,d,f],t,n,s,u,i):!t&&!n&&(d<=16&&(f<=512||c>=2*f)||f<=16&&(d<=512||m>=2*d))?W=new LN(k,N,[B,d,f],s,u,i):U?W=new FN(k,[B,d,f],$().get("WEBGPU_MATMUL_WORK_PER_THREAD"),s,u,i):W=new hg(k,[B,d,f],$().get("WEBGPU_MATMUL_WORK_PER_THREAD"),t,n,s,u,i);let K=[E,M];s&&K.push(s),i&&K.push(i);let H=[{type:"int32",data:[d]},{type:"int32",data:[f]},{type:"int32",data:[m]}],V=o.runWebGPUProgram(W,K,r.dtype,H),j=_e({inputs:{x:V},backend:o,attrs:{shape:I}});R.push(V);for(let ee of R)o.disposeData(ee.dataId);return j}function wpe(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:i,preluActivationWeights:a}=e,{transposeA:u,transposeB:p,activation:l,leakyreluAlpha:m}=n;return Kc({a:o,b:s,transposeA:u,transposeB:p,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:m,activation:l})}var wG={kernelName:As,backendName:"webgpu",kernelFunc:wpe};var KT=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.workGroupSize=[128,1,1];this.size=!0;this.outputShape=C.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Ci(this.op,!1)}
      }

      ${Se()}
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};var _N=class{constructor(e,t,n,o){this.variableNames=["A","B"];this.size=!0;this.workGroupSize=[256,1,1],this.outputShape=C.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ce(this.outputShape),this.lastDimensionSize=o?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=o,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBByOutputCoords(coords);`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${Ci(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Se()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}.numbers[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromIndex(flatIndex);

              ${t}
              setOutputAtIndex(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}};var BN=class{constructor(e,t,n){this.variableNames=["A","B"];this.workPerThread=4;this.isVec4=!0;this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=C.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`
      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
        ${Ci(this.op,this.isVec4)}
      }
      ${Se()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
    `}};var gg=class{constructor(e,t,n){this.variableNames=["A","B"];this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=C.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`
      fn binaryOperation(a : f32, b : f32) -> f32 {
        ${Ci(this.op,!1)}
      }
      ${Se()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
      `}};function $N(r,e,t){if(b.arraysEqual(e,t)&&b.sizeFromShape(e)%4===0)return new BN(r,e,t);let o=e.length===1&&t.length>1&&e[0]<1024,s=t.length===1&&e.length>1&&t[0]<1024;return o||s?new _N(r,e,t,s):new gg(r,e,t)}function Sr(r){let{inputs:e}=r,{x:t}=e;return r.backend.incRef(t.dataId),{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}var NG={kernelName:Wn,backendName:"webgpu",kernelFunc:Sr};function Va(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),i=t.tensorMap.get(s.dataId),a=Sr({inputs:{x:n},backend:t}),u=Sr({inputs:{x:o},backend:t});return i.complexTensorInfos={real:a,imag:u},s}var DG={kernelName:Ru,backendName:"webgpu",kernelFunc:Va};var Ha=class{constructor(e,t){this.variableNames=["A"];this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${bp(this.op,!1)}
      }
      ${Se()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function lt({opType:r,cpuKernelImpl:e,dtype:t}){return({inputs:n,backend:o})=>{let{x:s}=n,i=o,a=t||s.dtype;if(i.shouldExecuteOnCPU([s])&&e!=null){let p=i.tensorMap.get(s.dataId),l=e(p.values,a);return i.makeTensorInfo(s.shape,a,l)}let u=new Ha(s.shape,r);return i.runWebGPUProgram(u,[s],a)}}function vt({opSnippet:r,cpuKernelImpl:e,supportsComplex:t=!1,dtype:n}){return({inputs:o,backend:s})=>{let{a:i,b:a}=o,u=s;if(t&&i.dtype==="complex64"){let m=u.tensorMap.get(i.dataId),c=u.tensorMap.get(a.dataId),d,f;if(r!==0)[d,f]=[[m.complexTensorInfos.real,c.complexTensorInfos.real],[m.complexTensorInfos.imag,c.complexTensorInfos.imag]].map(g=>{let[y,T]=g,x={dataId:y.dataId,dtype:y.dtype,shape:i.shape},I={dataId:T.dataId,dtype:T.dtype,shape:a.shape},k=$N(r,i.shape,a.shape);return u.runWebGPUProgram(k,[x,I],Ut(y.dtype,T.dtype))});else{let g=new KT(17,i.shape,a.shape),y=new KT(18,i.shape,a.shape),T=[{dataId:m.complexTensorInfos.real.dataId,dtype:m.complexTensorInfos.real.dtype,shape:i.shape},{dataId:m.complexTensorInfos.imag.dataId,dtype:m.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:a.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:a.shape}];d=u.runWebGPUProgram(g,T,"float32"),f=u.runWebGPUProgram(y,T,"float32")}let h=Va({inputs:{real:d,imag:f},backend:u});return u.disposeData(d.dataId),u.disposeData(f.dataId),h}let p=n||Ut(i.dtype,a.dtype);if((i.dtype==="string"||a.dtype==="string"||u.shouldExecuteOnCPU([i,a]))&&e!=null){let m=u.tensorMap.get(i.dataId).values,c=u.tensorMap.get(a.dataId).values,d=i.dtype==="string"?C.fromUint8ToStringArray(m):m,f=i.dtype==="string"?C.fromUint8ToStringArray(c):c,[h,g]=e(i.shape,a.shape,d,f,p);return u.makeTensorInfo(g,p,h)}let l=$N(r,i.shape,a.shape);return u.runWebGPUProgram(l,[i,a],p)}}var{addImpl:PG,ceilImpl:EG,concatImpl:MG,equalImpl:FG,expImpl:RG,expm1Impl:LG,floorImpl:_G,gatherNdImpl:BG,gatherV2Impl:$G,greaterEqualImpl:OG,greaterImpl:zG,lessEqualImpl:GG,lessImpl:UG,logImpl:WG,maxImpl:KG,maximumImpl:VG,minimumImpl:HG,multiplyImpl:qG,negImpl:jG,notEqualImpl:XG,prodImpl:YG,rangeImpl:QG,rsqrtImpl:ZG,simpleAbsImpl:JG,sliceImpl:eU,stridedSliceImpl:tU,stringNGramsImpl:rU,subImpl:nU,tileImpl:oU,topKImpl:sU,transposeImpl:aU,uniqueImpl:sxr}=wc;var Npe=lt({opType:0,cpuKernelImpl:JG}),iU={kernelName:ls,backendName:"webgpu",kernelFunc:Npe};var Dpe=vt({opSnippet:1,cpuKernelImpl:PG,supportsComplex:!0}),uU={kernelName:vn,backendName:"webgpu",kernelFunc:Dpe};var ON=class{constructor(e){this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(o=>{e.push(`let v${o} = get${o}ByOutputCoords(coords);`)});let t=this.variableNames.map(o=>`v${o}`).join(" + ");return`
      ${Se()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function Ppe(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return Sr({inputs:{x:n[0]},backend:t});let o=n.map(a=>a.dtype).reduce((a,u)=>Ut(a,u)),s=n.map(a=>a.shape),i=new ON(s);return t.runWebGPUProgram(i,n,o)}var pU={kernelName:so,backendName:"webgpu",kernelFunc:Ppe};var bg=class{constructor(e,t,n){this.workGroupSize=[64,1,1];this.variableNames=["x"];this.uniforms="axis : i32; infinityValue : f32;";this.size=!0;let o=[t];C.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.length),this.op=n==="min"?"<":">";let[s]=C.computeOutAndReduceShapes(e,o);this.outputShape=s.length===0?[1]:s,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=(s,i)=>this.outputShape.length===1?s:`${s}[${i}]`,n=s=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape[${s}]`;return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      // In order to get a flattened index into the input tensor, we need to
      // add back the index along the reduced dimension to |outputCoords|.
      // This function outputs the offset to the first value along
      // |axis| and the stride to get the next value of the input along |axis|.
      fn getInputCoordInfo(outputIndex : i32) -> vec2<i32>{
        let outputCoords = getCoordsFromIndex(outputIndex);
        var i = ${this.outputShape.length-1};

        var stride = 1;
        var inputStride = 1;
        var offset = 0;

        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {
          let length = ${n(`${this.inputShape.length} - r`)};
          if (${this.inputShape.length} - r == uniforms.axis) {
            inputStride = stride;
          } else {
            offset = offset + ${t("outputCoords","i")} * stride;
            i = i - 1;
          }
          stride = stride * length;
        }

        return vec2<i32>(offset, inputStride);
      }

      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{
        return coordInfo[0] + coordInfo[1] * index;
      }

      ${Se()}
        let outputIndex = index / i32(workGroupSizeX);
        let coordInfo = getInputCoordInfo(outputIndex);
        let Length = ${n("uniforms.axis")};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;

        for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = f32(x.numbers[getInputIndex(coordInfo, k)]);
          if (!isNanCustom(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(Length), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}};var zN=class{constructor(e,t){this.variableNames=["A"];this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${lg()}
      fn main(@builtin(local_invocation_id) localId : vec3<u32>,
              @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] =
              A.numbers[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}};var GN=class{constructor(e,t){this.variableNames=["A"];this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=Yt(this.outputShape.length),t=Epe(this.newDim);return`
      ${Se()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A.numbers[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function Epe(r){let e=r.length;if(e>4)throw Error(`Transpose for rank ${e} is not yet supported`);let t=new Array(e);for(let n=0;n<r.length;n++)t[r[n]]=`resRC[${n}]`;return t.join()}function ns(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,i=t,a=o.shape.length,u=new Array(a);for(let l=0;l<u.length;l++)u[l]=o.shape[s[l]];if(t.shouldExecuteOnCPU([o])){let m=i.tensorMap.get(o.dataId).values,c=aU(m,o.shape,o.dtype,s,u);return t.makeTensorInfo(u,o.dtype,c)}if(o.shape.length===2&&b.arraysEqual(s,[1,0])){let l=new zN(o.shape,s);return i.runWebGPUProgram(l,[o],o.dtype)}let p=new GN(o.shape,s);return i.runWebGPUProgram(p,[o],o.dtype)}var lU={kernelName:jo,backendName:"webgpu",kernelFunc:ns};function Mpe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,i=b.parseAxisParam(s,o.shape),a=C.getAxesPermutation(i,o.shape.length),u=o,p=[];a!=null&&(u=ns({inputs:{x:o},backend:t,attrs:{perm:a}}),p.push(u),i=C.getInnerMostAxes(i.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);let l=new bg(u.shape,i[0],"max"),m=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.NEGATIVE_INFINITY]}],c=t.runWebGPUProgram(l,[u],"int32",m);return p.forEach(d=>t.disposeData(d.dataId)),c}var mU={kernelName:ao,backendName:"webgpu",kernelFunc:Mpe};function Fpe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,i=b.parseAxisParam(s,o.shape),a=C.getAxesPermutation(i,o.shape.length),u=o,p=[];a!=null&&(u=ns({inputs:{x:o},backend:t,attrs:{perm:a}}),p.push(u),i=C.getInnerMostAxes(i.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);let l=new bg(u.shape,i[0],"min"),m=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.POSITIVE_INFINITY]}],c=t.runWebGPUProgram(l,[u],"int32",m);return p.forEach(d=>t.disposeData(d.dataId)),c}var cU={kernelName:Za,backendName:"webgpu",kernelFunc:Fpe};var yg=class{constructor(e,t){this.variableNames=["x"];this.uniforms="stride : vec2<i32>; pad : vec2<i32>; dilation : vec2<i32>; convDims : vec2<i32>; filterDims : vec2<i32>;";this.workGroupSize=[128,1,1];this.size=!0;this.outputShape=e.outShape,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${Se()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}};var Tg=class{constructor(e){this.variableNames=["x"];this.uniforms="stride : vec2<i32>;";this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=e.outShape,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Se()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};function Rpe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,p=1,l=C.computePool2DInfo(o.shape,s,i,p,a,u);if(l.filterWidth===1&&l.filterHeight===1&&b.arraysEqual(l.inShape,l.outShape))return Sr({inputs:{x:o},backend:t});let m,c=[{type:"int32",data:[l.strideHeight,l.strideWidth]}];return l.filterHeight===1&&l.filterWidth===1?m=new Tg(l):(m=new yg(l,"avg"),c.push({type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.inHeight,l.inWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]})),t.runWebGPUProgram(m,[o],o.dtype,c)}var dU={kernelName:io,backendName:"webgpu",kernelFunc:Rpe};function Lpe(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:i,transposeB:a}=n;return Kc({a:o,b:s,transposeA:i,transposeB:a,backend:t})}var fU={kernelName:uo,backendName:"webgpu",kernelFunc:Lpe};var WN=class{constructor(e,t){this.variableNames=["source"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.rank=t.length,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Yt(e.length)}; `,this.shaderKey="slice"}getUserCode(){let e=Yt(this.rank),t=_pe(this.rank),n;return this.start.length===1?n=this.outputShape.map((s,i)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((s,i)=>`sourceLoc.${UN[i]} = uniforms.start[${i}] + coords.${UN[i]};`),`
      ${Se()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},UN=["x","y","z","w","u","v"];function _pe(r){if(r===1)return"sourceLoc";if(r<=6)return UN.slice(0,r).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}function qa(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:i}=n,[a,u]=yt.parseSliceParams(o,s,i);if(yt.assertParamsValid(o,a,u),t.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=t.tensorMap.get(o.dataId),c=eU(m.values,a,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,c)}if(b.sizeFromShape(u)===0)return t.makeTensorInfo(u,o.dtype,[]);let p=new WN(a,u),l=[{type:"int32",data:a}];return t.runWebGPUProgram(p,[o],o.dtype,l)}var hU={kernelName:xs,backendName:"webgpu",kernelFunc:qa};var Bpe=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:i}=n;b.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let a=s.reduce((T,x)=>T*x),u=C.getReshaped(o.shape,s,a),p=C.getPermuted(u.length,s.length),l=C.getReshapedPermuted(o.shape,s,a),m=C.getSliceBeginCoords(i,s.length),c=C.getSliceSize(l,i,s.length),d=[],f=_e({inputs:{x:o},backend:t,attrs:{shape:u}}),h=ns({inputs:{x:f},backend:t,attrs:{perm:p}}),g=_e({inputs:{x:h},backend:t,attrs:{shape:l}}),y=qa({inputs:{x:g},backend:t,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(T=>t.disposeData(T.dataId)),y},gU={kernelName:ms,backendName:"webgpu",kernelFunc:Bpe};var KN=vt({opSnippet:10,dtype:"bool",cpuKernelImpl:XG}),bU={kernelName:ca,backendName:"webgpu",kernelFunc:KN};function vu(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.tensorMap.get(n.dataId);return Sr({inputs:{x:o.complexTensorInfos.real},backend:t})}var yU={kernelName:Uu,backendName:"webgpu",kernelFunc:vu};function TU(r,e){let t=new Ha(r.shape,23),n=e.runWebGPUProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function VN(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return Sr({inputs:{x:o},backend:t});let i=bt(o.shape),a=VN({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=Va({inputs:{real:a,imag:i},backend:t});return i.dispose(),t.disposeData(a.dataId),u}if(o.dtype==="complex64"){let i=vu({inputs:{input:o},backend:t}),a=VN({inputs:{x:i},backend:t,attrs:{dtype:s}});return t.disposeData(i.dataId),a}if(!b.hasEncodingLoss(o.dtype,s)){let i=Sr({inputs:{x:o},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32")return TU(o,t);if(s==="bool"){let i=t.makeTensorInfo([],"bool",b.getTypedArrayFromDType("bool",1)),u=KN({inputs:{a:o,b:i},backend:t});return t.disposeData(i.dataId),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var xU={kernelName:Gn,backendName:"webgpu",kernelFunc:VN};var $pe=lt({opType:1,cpuKernelImpl:EG}),IU={kernelName:po,backendName:"webgpu",kernelFunc:$pe};var HN=class{constructor(e){this.variableNames=["A"];this.uniforms="minVal : f32; maxVal : f32;";this.workPerThread=4;this.workGroupSize=[64,1,1];this.isVec4=!0;this.size=!0;this.outputShape=e,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${Se()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isNanCustom(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}};var qN=class{constructor(e){this.variableNames=["A"];this.uniforms="minVal : f32; maxVal : f32;";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${Se()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isNanCustom(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function Ope(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:i}=n,a,u=[{type:"float32",data:[s]},{type:"float32",data:[i]}];return b.sizeFromShape(o.shape)%4===0?a=new HN(o.shape):a=new qN(o.shape),t.runWebGPUProgram(a,[o],o.dtype,u)}var CU={kernelName:Un,backendName:"webgpu",kernelFunc:Ope};var jN=class{constructor(e){this.uniforms="";this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=C.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32;`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let s=1;s<this.offsetLength;s++)e.push(`else if (yC < uniforms.offset${[s]}){ setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${s-1})); }`);let n=this.offsetLength,o=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${o})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${Se()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function $l(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.tensorMap.get(n.dataId);return Sr({inputs:{x:o.complexTensorInfos.imag},backend:t})}var kU={kernelName:Ou,backendName:"webgpu",kernelFunc:$l};function VT(r,e,t){let n=r[0].dtype;if(n==="complex64"){let d=r.map(T=>vu({inputs:{input:T},backend:t})),f=r.map(T=>$l({inputs:{input:T},backend:t})),h=VT(d,e,t),g=VT(f,e,t),y=Va({inputs:{real:h,imag:g},backend:t});return d.forEach(T=>t.disposeData(T.dataId)),f.forEach(T=>t.disposeData(T.dataId)),t.disposeData(h.dataId),t.disposeData(g.dataId),y}let o=t.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let d=r.map(I=>{let k=b.sizeFromShape(I.shape.slice(e));return _e({inputs:{x:I},backend:t,attrs:{shape:[-1,k]}})}),f=d.map(I=>({vals:t.readSync(I.dataId),shape:I.shape})),h=C.computeOutShape(d.map(I=>I.shape),1),g=d[0].shape[0]===1,y=MG(f,h,n,g),T=C.computeOutShape(r.map(I=>I.shape),e),x=t.makeTensorInfo(T,n,y);return d.forEach(I=>t.disposeData(I.dataId)),x}let{tensors2D:s,outShape:i}=zpe(r,e,t),a=s.map(d=>d.shape),u=new jN(a),p=[],l=new Array(a.length-1);if(l.length>0){l[0]=a[0][1],p.push({type:"int32",data:[l[0]]});for(let d=1;d<l.length;d++)l[d]=l[d-1]+a[d][1],p.push({type:"int32",data:[l[d]]})}let m=t.runWebGPUProgram(u,s,s[0].dtype,p);s.forEach(d=>t.disposeData(d.dataId));let c=_e({inputs:{x:m},backend:t,attrs:{shape:i}});return t.disposeData(m.dataId),c}function zpe(r,e,t){let n=C.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>_e({inputs:{x:s},backend:t,attrs:{shape:[b.sizeFromShape(s.shape.slice(0,e)),b.sizeFromShape(s.shape.slice(e))]}})),outShape:n}}function XN(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],i=C.computeOutShape(e.map(p=>p.shape),s);if(b.sizeFromShape(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);let a=e.filter(p=>b.sizeFromShape(p.shape)>0);if(a.length===1)return Sr({inputs:{x:a[0]},backend:t});let u=a.map(p=>p.shape);return C.assertParamsConsistent(u,s),VT(a,s,t)}var SU={kernelName:cs,backendName:"webgpu",kernelFunc:XN};var YN=class{constructor(e,t){this.variableNames=["A"];this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; outWidth : i32; itemsPerBlockRow : i32;
      inChannels : i32;`;this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`
    ${Se()}

      for(var i = 0; i<${this.workPerThread}; i = i + 1) {
        let flatIndex = index * ${this.workPerThread} + i;

        let rc = getCoordsFromIndex(flatIndex);

        if(flatIndex < uniforms.size) {
          let blockIndex = rc[0];
          let pos = rc[1];

          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];
          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;
          var value = 0.0;
          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {
            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -
              uniforms.pad[0];
            let d1 = offsetX + uniforms.dilation[0] * ((pos %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
            let ch = pos % uniforms.inChannels;
            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {
              value = getA(d0, d1, ch);
            }
          }
          setOutputAtIndex(flatIndex, value);
        }
      }
    }
  `}};var QN=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.uniforms=`filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      dimAOuter : i32; dimBOuter : i32; dimInner : i32;`;this.workGroupSize=[8,8,1];this.isVec4=!0;this.outputShape=e.outShape,b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.outputShape[1]===1?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=o,this.hasLeakyreluAlpha=s,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),this.tileAOuter=this.outputShape[1]===1?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){let e=[this.tileAOuter,this.tileInner],t=[this.tileInner,this.tileBOuter],n=this.outputShape[1]*this.outputShape[2],o=this.outputShape[3],s=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[rs(e,[n,s]),rs(t,[s,o])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getIndexFromCoords4D(coord, uniforms.xShape);
    let divBy4Remainder${e} = flatIndex${e} % 4;
    let divBy4Index${e} = flatIndex${e} / 4;
    let curData${e} = x.numbers[divBy4Index${e}];
    if (divBy4Remainder${e} == 0) {
      temp = curData${e};
    } else {
      // TODO: This could end up being a redundant load with another one in
      // the same shader invocation. Perhaps there's an opportunity for
      // optimization
      let nextData${e} = x.numbers[divBy4Index${e} + 1];
      if (divBy4Remainder${e} == 1) {
        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);
      } else if (divBy4Remainder${e} == 2) {
        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);
      } else if (divBy4Remainder${e} == 3) {
        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);
      }
    }
    `}getUserCode(){let e=MN(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner),o=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        var coord = vec4<i32>(
            batch,
            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
            inChCoord);
        var resData = vec4<f32>(0.0);
        ${this.convInfo.inChannels%4===0?`// The bounds checking is always needed since we use it to pad zero for
          // the 'same' padding type.
          if (coordsInBounds4D(coord, uniforms.xShape)) {
            resData = x.numbers[getIndexFromCoords4D(coord, uniforms.xShape) / 4];
          } else {
            resData = vec4<f32>(0.0); }`:`var temp = vec4<f32>(0.0);
          ${this.getSampleAWithRemainder(1)}
          resData = temp;
          if (WCol == (uniforms.filterDims[1] - 1)) {
            coord = vec4<i32>(
              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);
              ${this.getSampleAWithRemainder(2)}
            if (inChCoord == 0) {
              resData = vec4<f32>(resData.xyz, temp.x);
            } else if (inChCoord == 1) {
              resData = vec4<f32>(resData.xy, temp.xy);
            } else {
              resData = vec4<f32>(resData.x, temp.xyz);
            }
          }
          `}
        return resData;`,s=this.fitA?`${o}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${o}
         }
         return vec4<f32>(0.0);
        `,i=this.fitB?"return W.numbers[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,a="",u="";if(this.activation){let m=Qr(this.activation,this.isVec4);if(this.hasPreluActivationWeights)a=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${m}
        }`;else{if(this.hasLeakyreluAlpha)throw a=`fn activation(outCoord: vec4<f32>) -> vec4<f32> {
          let b = getLeakyreluAlphaByOutputCoords(outCoord);
          ${m}
        }`,new Error("Leakyrelu is not supported.");a=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${m}
        }`}u="value = activation(value, outCoord);"}let p=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
        ${a}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          let r = row;
          let c = col * 4;
          var batch = i32(globalId.z);
          ${s}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${i}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${p}
            ${u}
            setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${e}
      `}};var ZN=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.outputShape=e.outShape,b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=mg(this.dispatchLayout,this.outputShape),this.elementsPerThread=cg(this.dispatchLayout,this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=o,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;b.assert(n%this.workGroupSize[0]===0&&n%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let o=[e,n],s=[n,t],i=this.outputShape[1]*this.outputShape[2],a=this.outputShape[3],u=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[rs(o,[i,u]),rs(s,[u,a])]}getUserCode(){let e=fg(this.elementsPerThread,this.workGroupSize),t=`
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);
    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];
    let coord = vec4<i32>(
        batch,
        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
        col % uniforms.xShape[3]);
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x.numbers[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;`,n=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${t}
    }
    return 0.0;
    `,o=this.fitB?"return W.numbers[row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter + col];
	 }
	 return 0.0;
	 `,s="",i="";if(this.activation){let p=Qr(this.activation,!1);this.hasPreluActivationWeights?s=`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${p}
                }`:s=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${p}
                  }
                `,i="value = activation(value, outCoord);"}let a=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
    ${s}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${n}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      ${o}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      ${a}
      ${i}
      result.numbers[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }
    ${e}
  `}};var JN=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;";this.workGroupSize=[128,1,1];this.outputShape=e.outShape,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=o,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let s=Qr(this.activation);this.hasPreluActivationWeights?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32{
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${s}
             }`:e=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{
                    ${s}
                  }
                `,t="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${e}
      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {
        let coord = vec4<i32>(batch, row, col, chan);
        if(coordsInBounds4D(coord, uniforms.xShape)) {
          return getX(batch, row, col, chan);
        }
        return 0.0;
      }

      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
        let coord = vec4<i32>(row, col, xChannel, outChannel);
        if(coordsInBounds4D(coord, uniforms.wShape)) {
          return getW(row, col, xChannel, outChannel);
        }
        return 0.0;
      }

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          ${n}
          ${t}
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${to()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let outChannel = coords[3];

        var acc = 0.0;

        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {
              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
              let v = readInp(batch, coordRow, coordCol, xChannel);
              let f = readFilt(row, col, xChannel, outChannel);
              acc = acc + v * f;
            }
          }
        }

        writeResult(batch, coords[1], coords[2], outChannel, acc);
      }
    `}};function Gpe({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let u=r.shape,p=t.dataFormat==="channelsLast",l=!1,m=!1,c=t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",d,f;if(c){let y=t.inHeight*t.inWidth*t.inChannels;d=_e({inputs:{x:r},backend:n,attrs:{shape:[1,t.batchSize,y]}}),f=_e({inputs:{x:e},backend:n,attrs:{shape:[1,y,t.outChannels]}})}else{let y=p?u[0]*u[1]*u[2]:u[0]*u[2]*u[3];d=_e({inputs:{x:r},backend:n,attrs:{shape:[1,y,t.inChannels]}}),f=_e({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}})}let h=Kc({a:d,b:f,transposeA:l,transposeB:m,backend:n,bias:o,activation:a,preluActivationWeights:s,leakyreluAlpha:i}),g=_e({inputs:{x:h},backend:n,attrs:{shape:t.outShape}});return n.disposeData(d.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),g}function Upe({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let{filterWidth:u,filterHeight:p,inChannels:l,strideWidth:m,strideHeight:c,padInfo:d,outWidth:f,outHeight:h,dilationWidth:g,dilationHeight:y,dataFormat:T}=t,x=T==="channelsLast",I=u*p*l,k=h*f,N=[k,I],E=!1,M=!1,R=[],B=_e({inputs:{x:r},backend:n,attrs:{shape:r.shape.slice(1)}}),U=_e({inputs:{x:e},backend:n,attrs:{shape:[1,I,-1]}});R.push(B),R.push(U);let W=new YN(N,x),K=[{type:"int32",data:[d.left,d.top]},{type:"int32",data:[m,c]},{type:"int32",data:[g,y]},{type:"int32",data:[f]},{type:"int32",data:[l*u]},{type:"int32",data:[l]}],H=n.runWebGPUProgram(W,[B],B.dtype,K),V=_e({inputs:{x:H},backend:n,attrs:{shape:[1,N[0],N[1]]}});R.push(H),R.push(V);let j=[1,N[0],N[1]],ee=new hg(j,[1,k,t.outChannels],$().get("WEBGPU_MATMUL_WORK_PER_THREAD"),E,M,o,a,s),Z=j[1],te=j[2],oe=t.outChannels,ie=[{type:"int32",data:[Z]},{type:"int32",data:[oe]},{type:"int32",data:[te]}],se=[V,U];o&&se.push(o),s&&se.push(s);let ue=n.runWebGPUProgram(ee,se,V.dtype,ie),ye=x?[1,h,f,t.outChannels]:[1,t.outChannels,h,f],fe=_e({inputs:{x:ue},backend:n,attrs:{shape:ye}});R.push(ue);for(let Te of R)n.disposeData(Te.dataId);return fe}function HT({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let u=o!=null,p=s!=null,l;if(t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID"||t.filterHeight===1&&t.filterWidth===1&&t.dilationHeight===1&&t.dilationWidth===1&&t.strideHeight===1&&t.strideWidth===1&&(t.padInfo.type==="SAME"||t.padInfo.type==="VALID"))return Gpe({x:r,filter:e,convInfo:t,backend:n,bias:o,activation:a,preluActivationWeights:s,leakyreluAlpha:i});if($().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&r.shape[0]===1)return Upe({x:r,filter:e,convInfo:t,backend:n,bias:o,preluActivationWeights:s,leakyreluAlpha:i,activation:a});let c=$().getBool("WEBGPU_USE_NAIVE_CONV2D"),d=(t.inChannels%4===0||t.inChannels===3&&t.padInfo.type==="VALID")&&t.outChannels%4===0&&t.outChannels>=32,f=[t.padInfo.top,t.padInfo.left],h=[{type:"int32",data:[t.filterHeight,t.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[t.strideHeight,t.strideWidth]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]}];if(c)l=new JN(t,u,a,p);else{d?l=new QN(t,u,a,p):l=new ZN(t,u,a,p);let y=t.outShape[1]*t.outShape[2],T=t.outShape[3],x=t.filterHeight*t.filterWidth*t.inShape[3];h.push({type:"int32",data:[y]},{type:"int32",data:[T]},{type:"int32",data:[x]})}let g=[r,e];return u&&g.push(o),p&&g.push(s),n.runWebGPUProgram(l,g,r.dtype,h)}function Wpe(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dataFormat:u,dilations:p,dimRoundingMode:l}=t,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,s.shape,i,p,a,l,!1,m);return HT({x:o,filter:s,convInfo:c,backend:n})}var vU={kernelName:lo,backendName:"webgpu",kernelFunc:Wpe};var eD=class{constructor(e){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.outputShape=e.inShape,b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=mg(this.dispatchLayout,this.outputShape),this.elementsPerThread=cg(this.dispatchLayout,this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x.numbers[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W.numbers[getIndexFromCoords4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result.numbers[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }

    ${fg(this.elementsPerThread,this.workGroupSize)}
  `}};var tD=class{constructor(e){this.variableNames=["dy","W"];this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>;";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e.inShape,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${Se()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function Kpe(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:i,strides:a,pad:u,dataFormat:p,dimRoundingMode:l}=n,m=C.convertConv2DDataFormat(p),c=C.computeConv2DInfo(i,s.shape,a,1,u,l,!1,m),d=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.filterHeight-1-c.padInfo.top,c.filterWidth-1-c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize,c.outHeight,c.outWidth,c.outChannels]}],f;if($().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new tD(c);else{f=new eD(c);let h=c.inShape[1]*c.inShape[2],g=c.inShape[3],y=c.filterHeight*c.filterWidth*c.outChannels;d.push({type:"uint32",data:[h]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return t.runWebGPUProgram(f,[o,s],"float32",d)}var AU={kernelName:mo,backendName:"webgpu",kernelFunc:Kpe};var Vpe=lt({opType:2}),wU={kernelName:co,backendName:"webgpu",kernelFunc:Vpe};var Hpe=lt({opType:3}),NU={kernelName:fo,backendName:"webgpu",kernelFunc:Hpe};var rD=class{constructor(e,t,n,o){this.variableNames=["Image","Boxes","BoxInd"];this.uniforms="extrapolationValue : f32;";this.workGroupSize=[64,1,1];this.size=!0;let[s]=t;this.outputShape=[s,n[0],n[1],e],this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=o==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,o,s]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[i,a,u]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${Se()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${i});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${o};
        let width_scale = ${a};
        let in_y = ${s};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${u};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}};var qpe=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:i}=e,{cropSize:a,method:u,extrapolationValue:p}=n,l=new rD(o.shape[3],s.shape,a,u),m=[{type:"float32",data:[p]}];return t.runWebGPUProgram(l,[o,s,i],"float32",m)},DU={kernelName:ra,backendName:"webgpu",kernelFunc:qpe};var nD=class{constructor(e,t){this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.uniforms="blockSize : i32;";this.outputShape=e,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${Se()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function jpe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:i}=n,a=o.shape[0],u=i==="NHWC"?o.shape[1]:o.shape[2],p=i==="NHWC"?o.shape[2]:o.shape[3],l=i==="NHWC"?o.shape[3]:o.shape[1],m=u*s,c=p*s,d=l/(s*s),f=i==="NHWC"?[a,m,c,d]:[a,d,m,c],h=[{type:"int32",data:[s]}],g=new nD(f,i);return t.runWebGPUProgram(g,[o],o.dtype,h)}var PU={kernelName:na,backendName:"webgpu",kernelFunc:jpe};var xg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;";this.workGroupSize=[4,4,4];this.isVec4=!0;this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let s=Qr(this.activation,this.isVec4);this.hasPreluActivation?e=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${s}
        }`:e=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
            ${s}
          }
        `,t="dotProd[i] = activation(dotProd[i], coords);"}let n=this.addBias?"dotProd[i] = dotProd[i] + getBiasByOutputCoords(coords);":"";return`
      ${e}

      ${lg()}
      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${n}
            ${t}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}};var Ig=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      inDims : vec2<i32>; filterHeight : i32; filterWidth : i32;
      channelMul : i32;`;this.workGroupSize=[256,1,1];this.outputShape=e.outShape,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwise_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let s=Qr(this.activation,!1);this.hasPreluActivation?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${s}
        }`:e=`
          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
            ${s}
          }
        `,t="dotProd = activation(dotProd, coords);"}let n=this.addBias?"dotProd = dotProd + getBiasByOutputCoords(coords);":"";return`
      ${e}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32,
          value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${to()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / uniforms.channelMul;
        let q = d2 - d1 * uniforms.channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${n}
        ${t}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function Xpe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u,dimRoundingMode:p}=n,l=u;l==null&&(l=[1,1]);let m=C.computeConv2DInfo(o.shape,s.shape,i,l,a,p,!0),c=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]},{type:"int32",data:[m.inHeight,m.inWidth]}],d;return m.batchSize===1&&m.inHeight===m.outHeight&&m.inWidth===m.outWidth&&m.strideHeight===1&&m.strideWidth===1&&m.filterHeight===m.filterWidth&&m.inChannels===m.outChannels&&m.filterHeight===3&&m.inChannels%4===0?d=new xg(m):(d=new Ig(m),c.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.outChannels/m.inChannels]})),t.runWebGPUProgram(d,[o,s],o.dtype,c)}var EU={kernelName:ho,backendName:"webgpu",kernelFunc:Xpe};var oD=vt({opSnippet:0,cpuKernelImpl:qG,supportsComplex:!0}),MU={kernelName:Mo,backendName:"webgpu",kernelFunc:oD};var sD=class{constructor(e,t){this.workGroupSize=[64,1,1];this.variableNames=["x"];this.uniforms="reduceSize : i32;";this.size=!0;this.inputShape=[e.batchSize,e.inSize];let[n]=C.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isNanCustom(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isNanCustom(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x.numbers[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${Se()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x.numbers[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function ki(r,e,t,n,o){let s=r.shape.length,i=[],a=b.parseAxisParam(e,r.shape),u=a,p=C.getAxesPermutation(u,s),l=r;p!=null&&(l=ns({inputs:{x:r},attrs:{perm:p},backend:o}),u=C.getInnerMostAxes(u.length,s),i.push(l)),C.assertAxesAreInnerMostDims(n,u,s);let[m,c]=C.computeOutAndReduceShapes(l.shape,u),d=m;t&&(d=C.expandShapeToKeepDim(m,a));let f;if((n==="max"||n==="prod")&&o.shouldExecuteOnCPU([l])){let h=o.tensorMap.get(l.dataId).values;switch(n){case"max":let g=KG(h,b.sizeFromShape(c),d,r.dtype);f=o.makeTensorInfo(d,r.dtype,g);break;case"prod":let{outVals:y,outShape:T,outDtype:x}=YG(l.shape,l.dtype,h,u);f=o.makeTensorInfo(T,x,y);break;default:throw new Error(`${n} CPU implementation is not yet supported.`)}}else{let h=b.sizeFromShape(c),y=b.sizeFromShape(l.shape)/h,T={windowSize:h,inSize:h,batchSize:y,outSize:1},x=n==="mean"?"float32":Zi(r.dtype),I=[{type:"int32",data:[h]}],k=new sD(T,n),N=o.runWebGPUProgram(k,[l],x,I);i.push(N),f=_e({inputs:{x:N},attrs:{shape:d},backend:o})}return i.forEach(h=>o.disposeData(h.dataId)),f}function Cg(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;return ki(o,s,i,"sum",t)}var FU={kernelName:Wo,backendName:"webgpu",kernelFunc:Cg};function Ype(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:i,summedDims:a,idDims:u}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(i.length,u,s);let{path:p,steps:l}=C.getEinsumComputePath(a,u),m=l.length,c=null,d=i.length,f=[];for(let h=0;h<m;++h){for(let g of l[h]){let{permutationIndices:y,expandDims:T}=C.getEinsumPermutation(d,u[g]),x;C.isIdentityPermutation(y)?x=s[g]:(x=ns({inputs:{x:s[g]},backend:t,attrs:{perm:y}}),f.push(x));let I=x.shape.slice();for(let k=0;k<T.length;++k)I.splice(T[k],0,1);b.arraysEqual(x.shape,I)||(x=_e({inputs:{x},backend:t,attrs:{shape:I}}),f.push(x)),c===null?c=x:(c=oD({inputs:{a:x,b:c},backend:t}),f.push(c))}h<m-1&&(p[h]>=0&&(c=Cg({inputs:{x:c},backend:t,attrs:{axis:p[h]-(i.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&t.disposeData(h.dataId);return c}var RU={kernelName:$u,backendName:"webgpu",kernelFunc:Ype};var Qpe=lt({opType:4}),LU={kernelName:bo,backendName:"webgpu",kernelFunc:Qpe};var Zpe=vt({opSnippet:4,dtype:"bool",cpuKernelImpl:FG}),_U={kernelName:oa,backendName:"webgpu",kernelFunc:Zpe};var aD=lt({opType:5,cpuKernelImpl:RG,dtype:"float32"}),BU={kernelName:yo,backendName:"webgpu",kernelFunc:aD};function qT(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,i=s.shape.length,a=s.shape.slice(),u=o;return o<0&&(b.assert(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+o+1),a.splice(u,0,1),_e({inputs:{x:s},backend:n,attrs:{shape:a}})}var $U={kernelName:ds,backendName:"webgpu",kernelFunc:qT};var Jpe=lt({opType:6,cpuKernelImpl:LG}),OU={kernelName:sa,backendName:"webgpu",kernelFunc:Jpe};var iD=class{constructor(e){this.variableNames=[];this.outputShape=[];this.uniforms="value : f32;";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${Se()}
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function ja(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||b.inferDtype(o),s==="string"){let i=b.getArrayFromDType(s,b.sizeFromShape(n));return i.fill(o),e.makeTensorInfo(n,s,i)}else{let i=new iD(n),a=[{type:"float32",data:[o]}];return e.runWebGPUProgram(i,[],s,a)}}var zU={kernelName:Ja,backendName:"webgpu",kernelFunc:ja};var uD=class{constructor(e){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${Se()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}};var GU={kernelName:aa,backendName:"webgpu",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new uD(t.shape);return n.runWebGPUProgram(o,[t],t.dtype)}};var ele=lt({opType:7,cpuKernelImpl:_G}),UU={kernelName:To,backendName:"webgpu",kernelFunc:ele};var tle=vt({opSnippet:12,dtype:"int32"}),WU={kernelName:xo,backendName:"webgpu",kernelFunc:tle};var KU=(r,e,t,n,o)=>{let s=[n,...t];return o&&s.push(o),r.createBindGroup({layout:e,entries:s.map((i,a)=>({binding:a,resource:i}))})},jT=(r,e,t,n,o,s=!1)=>{let i={dtype:o.dtype,shape:o.shape},a=kG(n,i,e,s),u=r.createShaderModule({code:a,label:e.constructor.name});return r.createComputePipeline({layout:t,compute:{module:u,entryPoint:"main"},label:e.constructor.name})};function XT(r,e,t,n="",o=""){return r.shaderKey+"_"+(r.workGroupSize?r.workGroupSize.join(","):"")+e.map(i=>i.length).join(",")+t.join(",")+r.variableNames.join(",")+n+o}function pD(r){let{externalImage:e,backend:t,attrs:n,outShape:o,useImport:s}=r,{numChannels:i}=n,a=b.sizeFromShape(o),u=b.computeStrides(o),p=t.makeTensorInfo(o,"int32"),l=t.getFromPixelsProgram(s?"import":"copyExternal");l.updateOutputShape(o);let m=[p.shape],c=[p.dtype,s?"import":"copyExternal"],d=XT(l,m,c),f=l.getLayout(t.device),h=t.getAndSavePipeline(d,()=>jT(t.device,l,f.pipelineLayout,[],p,!0));l.setPipeline(h),s||t.queue.copyExternalImageToTexture({source:e,origin:{x:0,y:0}},{texture:l.makeInputTexture(t.device,o[1],o[0])},[o[1],o[0]]);let g=t.tensorMap.get(p.dataId);g.bufferInfo.buffer=t.acquireBuffer(g.bufferInfo.byteSize);let y=[a,i,...u,...l.dispatch];l.setUniform(t.device,y);let T;if(s){let x={source:e};T=t.device.importExternalTexture(x)}else T=l.inputTexture.createView();return t.runFromPixelsProgram(l,g.bufferInfo.buffer,f,T,p.dataId),p}var HU={kernelName:Np,backendName:"webgpu",kernelFunc:rle},Vc;function rle(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n;if(o==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let i=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,u=typeof HTMLCanvasElement<"u"&&o instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&o instanceof OffscreenCanvas,p=typeof ImageBitmap<"u"&&o instanceof ImageBitmap,[l,m]=i?[o.videoWidth,o.videoHeight]:[o.width,o.height],c=[m,l,s];if($().getBool("WEBGPU_USE_IMPORT")&&i)return pD({externalImage:o,backend:t,attrs:n,outShape:c,useImport:!0});if((i||a)&&(Vc==null&&(Vc=document.createElement("canvas").getContext("2d")),Vc.canvas.width=l,Vc.canvas.height=m,Vc.drawImage(o,0,0,l,m),o=Vc.canvas),p||u||i||a)return pD({externalImage:o,backend:t,attrs:n,outShape:c,useImport:!1});let d=o.data,f=d;if(s!=null&&s!==4){f=new Uint8Array(o.width*o.height*s);let y=d.length,T=0;for(let x=0;x<y;x++)x%4<s&&(f[T++]=d[x])}let h=t.makeTensorInfo(c,"int32"),g=t.tensorMap.get(h.dataId);return g.values=new Int32Array(f),t.maybeReleaseBuffer(h.dataId),t.uploadToGPU(h.dataId),h}var lD=class{constructor(e,t,n,o,s){this.uniforms="varianceEpsilon : f32;";this.workGroupSize=[128,1,1];this.size=!0;this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(e,t),C.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),o!=null&&(C.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset")),s!=null&&(C.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale")),this.offsetShape=o,this.scaleShape=s,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${Se()}
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}};var qU={kernelName:Io,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n,scale:o,offset:s,mean:i,variance:a}=r,{varianceEpsilon:u}=e,p=t,l=[n,i,a],m=null;s!=null&&(m=s.shape,l.push(s));let c=null;o!=null&&(c=o.shape,l.push(o));let d=new lD(n.shape,i.shape,a.shape,m,c),f=[{type:"float32",data:[u]}];return p.runWebGPUProgram(d,l,n.dtype,f)}};function nle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:p,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=C.convertConv2DDataFormat(l),g=C.computeConv2DInfo(o.shape,s.shape,u,m,p,c,!1,h);return HT({x:o,filter:s,convInfo:g,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:f,activation:d})}var jU={kernelName:ws,backendName:"webgpu",kernelFunc:nle};function ole(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:p,dilations:l,dimRoundingMode:m,activation:c}=n,d=l;d==null&&(d=[1,1]),b.assert(C.eitherStridesOrDilationsAreOne(u,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${d}'`);let f=C.computeConv2DInfo(o.shape,s.shape,u,d,p,m,!0),h=[o,s],g=i!=null,y=a!=null;g&&h.push(i),y&&h.push(a);let T=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]},{type:"int32",data:[f.inHeight,f.inWidth]}],x;return f.batchSize===1&&f.inHeight===f.outHeight&&f.inWidth===f.outWidth&&f.strideHeight===1&&f.strideWidth===1&&f.filterHeight===f.filterWidth&&f.inChannels===f.outChannels&&f.filterHeight===3&&f.inChannels%4===0?x=new xg(f,g,c,y):(x=new Ig(f,g,c,y),T.push({type:"int32",data:[f.filterHeight]},{type:"int32",data:[f.filterWidth]},{type:"int32",data:[f.outChannels/f.inChannels]})),t.runWebGPUProgram(x,h,"float32",T)}var XU={kernelName:Ns,backendName:"webgpu",kernelFunc:ole};var mD=class{constructor(e,t){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32; strides : ${Yt(e)};`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${Se()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function sle(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,i=s[s.length-1],a=b.sizeFromShape(n.shape),[u,p,l,m]=C.prepareAndValidate(n,o),c=_e({inputs:{x:o},backend:t,attrs:{shape:[p,i]}}),d=_e({inputs:{x:n},backend:t,attrs:{shape:[b.sizeFromShape(n.shape)/l,l]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let T=t.readSync(o.dataId),x=t.bufferSync(n),I=BG(T,x,n.dtype,p,i,l,m,n.shape,a);return t.makeTensorInfo(u,n.dtype,I.values)}let f=new mD(i,[p,l]),h=[{type:"int32",data:[i]},{type:"int32",data:m}],g=t.runWebGPUProgram(f,[d,c],d.dtype,h),y=_e({inputs:{x:g},backend:t,attrs:{shape:u}});return t.disposeData(c.dataId),t.disposeData(d.dataId),t.disposeData(g.dataId),y}var YU={kernelName:ia,backendName:"webgpu",kernelFunc:sle};var cD=class{constructor(e,t){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=ale(this.aShape,"i32");return`
      ${Se()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function ale(r,e="int"){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push(`${e}(getIndices(resRC.x, resRC.z))`):n.push(`${t[o]}`);return n.join()}function dD(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:i,batchDims:a}=n,u=b.parseAxisParam(i,o.shape)[0],p=C.segment_util.collectGatherOpShapeInfo(o,s,u,a),l=b.sizeFromShape(s.shape),m=[],c=_e({inputs:{x:o},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),d=_e({inputs:{x:s},backend:t,attrs:{shape:[p.batchSize,l/p.batchSize]}});m.push(c),m.push(d);let f=[p.batchSize,p.outerSize,l/p.batchSize,p.sliceSize];if(t.shouldExecuteOnCPU([o,s])){let x=t.tensorMap.get(d.dataId).values,I=ke(d.shape,d.dtype,x),N=t.tensorMap.get(c.dataId).values,E=ke(c.shape,c.dtype,N),M=$G(E,I,f);return m.forEach(R=>t.disposeData(R.dataId)),t.makeTensorInfo(p.outputShape,M.dtype,M.values)}let h=new cD(c.shape,f),g=t.runWebGPUProgram(h,[c,d],c.dtype);m.push(g);let y=_e({inputs:{x:g},backend:t,attrs:{shape:p.outputShape}});return m.forEach(T=>t.disposeData(T.dataId)),y}var QU={kernelName:fs,backendName:"webgpu",kernelFunc:dD};var ile=vt({opSnippet:5,cpuKernelImpl:zG,dtype:"bool"}),ZU={kernelName:ua,backendName:"webgpu",kernelFunc:ile};var ule=vt({opSnippet:6,dtype:"bool",cpuKernelImpl:OG}),JU={kernelName:Co,backendName:"webgpu",kernelFunc:ule};function ple(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n,i=[{type:"float32",data:[s]}],a=new Ha(o.shape,15);return a.uniforms="alpha : f32;",t.runWebGPUProgram(a,[o],"float32",i)}var eW={kernelName:ko,backendName:"webgpu",kernelFunc:ple};var lle=vt({opSnippet:7,dtype:"bool",cpuKernelImpl:UG}),tW={kernelName:pa,backendName:"webgpu",kernelFunc:lle};var mle=vt({opSnippet:8,dtype:"bool",cpuKernelImpl:GG}),rW={kernelName:la,backendName:"webgpu",kernelFunc:mle};var cle=lt({opType:9,cpuKernelImpl:WG}),nW={kernelName:So,backendName:"webgpu",kernelFunc:cle};var dle=vt({opSnippet:9,dtype:"bool"}),oW={kernelName:ma,backendName:"webgpu",kernelFunc:dle};var fle=lt({opType:10}),sW={kernelName:Wi,backendName:"webgpu",kernelFunc:fle};function fD(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:i}=n;return ki(o,s,i,"max",t)}var aW={kernelName:vo,backendName:"webgpu",kernelFunc:fD};var hle=vt({opSnippet:15,cpuKernelImpl:VG}),iW={kernelName:Ao,backendName:"webgpu",kernelFunc:hle};function gle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,p=1,l=C.computePool2DInfo(o.shape,s,i,p,a,u),m,c=[];if(l.filterHeight===1&&l.filterWidth===1){if(b.arraysEqual(l.inShape,l.outShape))return Sr({inputs:{x:o},backend:t});m=new Tg(l),c.push({type:"int32",data:[l.strideHeight,l.strideWidth]})}else m=new yg(l,"max"),c.push({type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.inHeight,l.inWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]});return t.runWebGPUProgram(m,[o],o.dtype,c)}var uW={kernelName:wo,backendName:"webgpu",kernelFunc:gle};function ble(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{keepDims:s,axis:i}=n;return ki(o,i,s,"mean",t)}var pW={kernelName:No,backendName:"webgpu",kernelFunc:ble};function yle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;return ki(o,s,i,"min",t)}var lW={kernelName:Do,backendName:"webgpu",kernelFunc:yle};var Tle=vt({opSnippet:16,cpuKernelImpl:HG}),mW={kernelName:Po,backendName:"webgpu",kernelFunc:Tle};var hD=class{constructor(e,t,n){this.uniforms="";this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t.map((o,s)=>o[0]+e[s]+o[1]),this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((o,s)=>{this.uniforms+=` pad${s} : vec2<i32>;`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((p,l)=>`uniforms.pad${l}[0]`).join(","),n=this.xShape.map((p,l)=>`uniforms.pad${l}[0] + uniforms.xShape${e>1?`[${l}]`:""}`).join(","),o=e===1?"start":"start[i]",s=e===1?"end":"end[i]",i=e===1?"outC":"outC[i]",a=Yt(e),u=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Se()}
        if (index < uniforms.size) {
          let start = ${a}(${t});
          let end = ${a}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${i} < ${o}) {
              ${i} = ${o} * 2 - ${i} - ${this.offset};
            } else if(${i} >= ${s}) {
              ${i} = (${s} - 1) * 2 - ${i} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${u}));
        }
      }
    `}};var cW={kernelName:Eo,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{paddings:o,mode:s}=e,i=t,a=o.map(l=>({type:"int32",data:[l[0],l[1]]})),u=new hD(n.shape,o,s);return i.runWebGPUProgram(u,[n],n.dtype,a)}};function xle(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.tensorMap.get(n.dataId),[i,a]=jG(s.values,n.shape,n.dtype);return t.makeTensorInfo(a,n.dtype,i)}let o=new Ha(n.shape,11);return t.runWebGPUProgram(o,[n],n.dtype)}var dW={kernelName:hs,backendName:"webgpu",kernelFunc:xle};function Ile(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u}=n,p=t.readSync(o.dataId),l=t.readSync(s.dataId),{selectedIndices:m}=br.nonMaxSuppressionV3Impl(p,l,i,a,u);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}var fW={kernelName:da,backendName:"webgpu",kernelFunc:Ile};function Cle(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,softNmsSigma:p}=n,l=t.readSync(o.dataId),m=t.readSync(s.dataId),c=i,d=a,f=u,h=p,{selectedIndices:g,selectedScores:y}=br.nonMaxSuppressionV5Impl(l,m,c,d,f,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var hW={kernelName:fa,backendName:"webgpu",kernelFunc:Cle};function kg(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=vu({inputs:{input:n},backend:t}),s=kg({inputs:{x:o},backend:t}),i=$l({inputs:{input:n},backend:t}),a=kg({inputs:{x:i},backend:t}),u=Va({inputs:{real:s,imag:a},backend:t});return t.disposeData(o.dataId),t.disposeData(s.dataId),t.disposeData(i.dataId),t.disposeData(a.dataId),u}else return ja({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var gW={kernelName:Ss,backendName:"webgpu",kernelFunc:kg};function bW(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=vu({inputs:{input:n},backend:t}),s=bW({inputs:{x:o},backend:t}),i=$l({inputs:{input:n},backend:t}),a=kg({inputs:{x:i},backend:t}),u=Va({inputs:{real:s,imag:a},backend:t});return t.disposeData(o.dataId),t.disposeData(s.dataId),t.disposeData(i.dataId),t.disposeData(a.dataId),u}else return ja({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var yW={kernelName:gs,backendName:"webgpu",kernelFunc:bW};function kle(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return qT({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,i=e[0].dtype;e.forEach(l=>{b.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),b.assert(i===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],u=e.map(l=>{let m=qT({inputs:{input:l},backend:t,attrs:{dim:o}});return a.push(m),m}),p=XN({inputs:u,backend:t,attrs:{axis:o}});return a.forEach(l=>t.disposeData(l.dataId)),p}var TW={kernelName:bs,backendName:"webgpu",kernelFunc:kle};var gD=class{constructor(e,t){this.variableNames=["x"];this.uniforms="constantValue : f32;";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t.map((n,o)=>n[0]+e[o]+n[1]),this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,o)=>{this.uniforms+=` pad${o} : vec2<i32>;`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=Yt(e),n=this.xShape.map((m,c)=>`uniforms.pad${c}[0]`).join(","),o=this.xShape.map((m,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),s=e>1?`${t}(${n})`:`${n}`,i=e>1?`${t}(${o})`:`${o}`,a=e>1?"any(outC < start)":"outC < start",u=e>1?"any(outC >= end)":"outC >= end",p=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Se()}
        if (index < uniforms.size) {
          let start = ${s};
          let end = ${i};
          let outC = getCoordsFromIndex(index);

          if (${a} || ${u}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${p}));
          }
        }
      }
    `}};var bD=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:i}=n;if(s.every(p=>b.arraysEqual(p,[0,0])))return Sr({inputs:{x:o},backend:t});if(b.sizeFromShape(o.shape)===0){let p=s.map((l,m)=>l[0]+o.shape[m]+l[1]);return ja({backend:t,attrs:{shape:p,value:i,dtype:o.dtype}})}let a=[{type:"float32",data:[i]}];s.map(p=>a.push({type:"int32",data:[p[0],p[1]]}));let u=new gD(o.shape,s);return t.runWebGPUProgram(u,[o],o.dtype,a)},xW={kernelName:Fo,backendName:"webgpu",kernelFunc:bD};var Sle=vt({opSnippet:13}),IW={kernelName:Ro,backendName:"webgpu",kernelFunc:Sle};function vle(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=new gg(14,n.shape,o.shape);return t.runWebGPUProgram(s,[n,o],"float32")}var CW={kernelName:Lo,backendName:"webgpu",kernelFunc:vle};function Ale(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;return ki(o,s,i,"prod",t)}var kW={kernelName:ga,backendName:"webgpu",kernelFunc:Ale};var wle=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:i}=t,a=QG(n,o,s,i);return e.makeTensorInfo([a.length],i,a)},SW={kernelName:ei,backendName:"webgpu",kernelFunc:wle};var yD=vt({opSnippet:3}),vW={kernelName:go,backendName:"webgpu",kernelFunc:yD};var Nle=lt({opType:13}),AW={kernelName:_o,backendName:"webgpu",kernelFunc:Nle};var Dle=lt({opType:14}),wW={kernelName:$o,backendName:"webgpu",kernelFunc:Dle};var TD=class{constructor(e,t,n){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>; halfPixelCenters : f32;";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${Se()}
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Ple(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,size:i,halfPixelCenters:a}=n,[u,p]=i,l=s&&u>1?1:0,m=s&&p>1?1:0,d=[{type:"float32",data:[l,m]},{type:"float32",data:[a?.5:0]}],f=new TD(o.shape,u,p);return t.runWebGPUProgram(f,[o],"float32",d)}var NW={kernelName:Bo,backendName:"webgpu",kernelFunc:Ple};var xD=class{constructor(e,t,n,o){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>; roundBase : f32;";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=o,this.shaderKey=`resizeNearest_${o}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${Se()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Ele(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:a}=n,[u,p]=a,l=s&&u>1?1:0,m=s&&p>1?1:0,d=[{type:"float32",data:[l,m]},{type:"float32",data:[s?.5:0]}],f=new xD(o.shape,u,p,i);return t.runWebGPUProgram(f,[o],o.dtype,d)}var DW={kernelName:ti,backendName:"webgpu",kernelFunc:Ele};var ID=class{constructor(e,t){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32; centerY : f32; sinRadians : f32;
          cosRadians : f32;`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32;",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>;",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Se()}

          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}};var PW={kernelName:va,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:i}=e,a=t,u=new ID(n.shape,s),[p,l]=C.getImageCenter(i,n.shape[1],n.shape[2]),m=[{type:"float32",data:[p]},{type:"float32",data:[l]},{type:"float32",data:[Math.sin(o)]},{type:"float32",data:[Math.cos(o)]}];return typeof s=="number"?m.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):m.push({type:"float32",data:s}),a.runWebGPUProgram(u,[n],n.dtype,m)}};var Mle=lt({opType:16,cpuKernelImpl:ZG}),EW={kernelName:Oo,backendName:"webgpu",kernelFunc:Mle};var CD=class{constructor(e,t,n,o,s,i,a){this.variableNames=["updates","indices"];this.workGroupSize=[64,1,1];this.atomic=!0;this.outputShape=i,this.type=a,this.dispatchLayout=Ce(e),this.dispatch=de(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${o}_${this.sliceDimGreaterThanOne}_${a}`;let u=Yt(s.length);this.uniforms=`sliceDim : i32; strides: ${u}; size: i32;`,this.updatesRank=o,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",o="",s="",i="";this.updatesRank===1?(o="coords[0]",s="flattenedIndex",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.updatesRank===2&&(o="coords[0], coords[1]",s="vec2<i32>(flattenedIndex, coords[1])",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        let d0 = index / uniforms.updatesShape[1];
        let d1 = index - d0 * uniforms.updatesShape[1];
        return vec2<i32>(d0, d1);
      }
      `);let a=`getUpdates(${o})`,u=this.type==="int32"?"atomicAdd(&(result.numbers[flatIndex]), i32(updateValue));":`
     var assumed = atomicLoad(&(result.numbers[flatIndex]));
     var success = 0;
     for (; success == 0;) {
       let new = bitcast<f32>(assumed) + updateValue;
       let newI32 = bitcast<i32>(new);
       let resValue = atomicCompareExchangeWeak(&(result.numbers[flatIndex]), assumed, newI32);
       assumed = resValue[0];
       success = resValue[1];
     }
     `;return`
    ${i}

      ${Se()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue = ${a};
          let flatIndex = getOutputIndexFromCoords(${s});

         ${u}
        }
      }`}};function Fle(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:i}=n,{sliceRank:a,numUpdates:u,sliceSize:p,strides:l,outputSize:m}=C.calculateShapes(s,o,i),c=[m/p,p];if(m===0)return t.makeTensorInfo(i,o.dtype);let d=_e({inputs:{x:o},backend:t,attrs:{shape:[u,a]}}),f=_e({inputs:{x:s},backend:t,attrs:{shape:[u,p]}}),h=f.dtype,g=ja({backend:t,attrs:{shape:c,value:0,dtype:h}}),y=b.sizeFromShape(f.shape),T=[{type:"int32",data:[a]},{type:"int32",data:l},{type:"int32",data:[y]}],x=new CD(f.shape,a,d.shape.length,f.shape.length,l,c,h),I=t.runWebGPUProgram(x,[f,d],h,T,g),k=_e({inputs:{x:I},backend:t,attrs:{shape:i}});return t.disposeData(d.dataId),t.disposeData(f.dataId),t.disposeData(I.dataId),k}var MW={kernelName:Ta,backendName:"webgpu",kernelFunc:Fle};var kD=class{constructor(e,t,n){this.variableNames=["c","a","b"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let a=0;a<this.outputShape.length;a++)i.push(`${o[a]}`),a<this.cRank&&s.push(`${o[a]}`);e=s.join(),t=i.join()}return`
      ${Se()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function Rle(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,i=new kD(n.shape.length,o.shape,o.shape.length);return t.runWebGPUProgram(i,[n,o,s],Ut(o.dtype,s.dtype))}var FW={kernelName:Ts,backendName:"webgpu",kernelFunc:Rle};var Lle=lt({opType:19}),RW={kernelName:Go,backendName:"webgpu",kernelFunc:Lle};var _le=lt({opType:17}),LW={kernelName:zo,backendName:"webgpu",kernelFunc:_le};var Ble=lt({opType:18}),_W={kernelName:xa,backendName:"webgpu",kernelFunc:Ble};var SD=vt({opSnippet:2,cpuKernelImpl:nU,supportsComplex:!0}),BW={kernelName:Ho,backendName:"webgpu",kernelFunc:SD};function $le(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,i=b.parseAxisParam([s],o.shape),a=fD({inputs:{x:o},backend:t,attrs:{reductionIndices:i,keepDims:!1}}),u=C.expandShapeToKeepDim(a.shape,i),p=_e({inputs:{x:a},backend:t,attrs:{shape:u}}),l=SD({inputs:{a:o,b:p},backend:t}),m=aD({inputs:{x:l},backend:t}),c=Cg({inputs:{x:m},backend:t,attrs:{axis:i,keepDims:!1}}),d=_e({inputs:{x:c},backend:t,attrs:{shape:u}}),f=yD({inputs:{a:m,b:d},backend:t});return t.disposeData(a.dataId),t.disposeData(p.dataId),t.disposeData(l.dataId),t.disposeData(m.dataId),t.disposeData(c.dataId),t.disposeData(d.dataId),f}var $W={kernelName:Ko,backendName:"webgpu",kernelFunc:$le};var Ole=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:i}=n;b.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let a=s.reduce((y,T)=>y*T),u=[[0,0]];u.push(...i);for(let y=1+s.length;y<o.shape.length;++y)u.push([0,0]);let p=[],l=bD({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),m=C.getReshaped(l.shape,s,a,!1),c=C.getPermuted(m.length,s.length,!1),d=C.getReshapedPermuted(l.shape,s,a,!1),f=_e({inputs:{x:l},backend:t,attrs:{shape:m}}),h=ns({inputs:{x:f},backend:t,attrs:{perm:c}}),g=_e({inputs:{x:h},backend:t,attrs:{shape:d}});return p.push(l),p.push(f),p.push(h),p.forEach(y=>t.disposeData(y.dataId)),g},OW={kernelName:Is,backendName:"webgpu",kernelFunc:Ole};var vD=class{constructor(e,t,n,o,s,i,a=!0){this.variableNames=["updates","indices","defaultValue"];this.workGroupSize=[64,1,1];this.workPerThread=4;this.size=!0;this.outputShape=i,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let u=t>1;this.shaderKey=`scatter_${n}_${o}_${u}`;let p=Yt(s.length);this.uniforms=`updateSize : i32; sliceDim : i32; strides: ${p};`;let l="";n===1?l="i":n===2&&(l="i, j"),this.indicesSnippet=`getIndices(${l})`;let m="";o===1?m="i":o===2&&(m="i, coords[1]"),this.updatesSnippet=`getUpdates(${m})`,this.strideString=u?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${Se()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputAtIndex(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function zle(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:i}=e,{outputShape:a}=n,{sliceRank:u,numUpdates:p,strides:l,outputSize:m}=C.calculateShapes(s,o,a),c=!1,d=[{type:"int32",data:[p]},{type:"int32",data:[u]},{type:"int32",data:l}],f=new vD(p,u,o.shape.length,s.shape.length,l,[m,1],c),h=t.runWebGPUProgram(f,[s,o,i],s.dtype,d),g=_e({inputs:{x:h},backend:t,attrs:{shape:a}});return t.disposeData(h.dataId),g}var zW={kernelName:Hu,backendName:"webgpu",kernelFunc:zle};function Gle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:i}=n,a=b.parseAxisParam(i,o.shape)[0],u=C.prepareSplitSize(o,s,a),p=o.shape.length,l=new Array(p).fill(0),m=o.shape.slice();return u.map(c=>{let d=[...m];d[a]=c;let f=qa({inputs:{x:o},backend:t,attrs:{begin:l,size:d}});return l[a]+=c,f})}var GW={kernelName:Cs,backendName:"webgpu",kernelFunc:Gle};var Ule=lt({opType:20}),UW={kernelName:Uo,backendName:"webgpu",kernelFunc:Ule};var WW={kernelName:ri,backendName:"webgpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e,o=new Ha(t.shape,21);return n.runWebGPUProgram(o,[t],t.dtype)}};var Wle=vt({opSnippet:11}),KW={kernelName:Vo,backendName:"webgpu",kernelFunc:Wle};var AD=class{constructor(e){this.variableNames=["x"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=Yt(this.outputShape.length);this.uniforms=`begin : ${t};  strides : ${t}; `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let o=0;t=this.outputShape.map((s,i)=>(o++,this.outputShape.length===1?`coords * uniforms.strides[${i}] + uniforms.begin[${i}]`:`coords[${o-1}] * uniforms.strides[${i}] + uniforms.begin[${i}]`)).join(",")}return`
       ${Se()}
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function Kle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:i,strides:a,beginMask:u,endMask:p,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:T,end:x,strides:I}=yt.sliceInfo(o.shape,s,i,a,u,p,l,m,c),k;if(h)k=_e({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let N=yt.computeOutShape(T,x,I),E=qa({inputs:{x:o},backend:t,attrs:{begin:T,size:N}});k=_e({inputs:{x:E},backend:t,attrs:{shape:f}}),t.disposeData(E.dataId)}else if(t.shouldExecuteOnCPU([o])){let E=t.readSync(o.dataId),M=ke(o.shape,o.dtype,E),R=tU(d,M,I,T);k=t.makeTensorInfo(f,o.dtype,R.values)}else{let E=new AD(d),M=[{type:"int32",data:T},{type:"int32",data:I}],R=t.runWebGPUProgram(E,[o],o.dtype,M);k=_e({inputs:{x:R},backend:t,attrs:{shape:f}}),t.disposeData(R.dataId)}return k}var VW={kernelName:Ia,backendName:"webgpu",kernelFunc:Kle};function Vle(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:i,rightPad:a,padWidth:u,preserveShortSequences:p}=n,{data:l,dataSplits:m}=e,c=t.readSync(l.dataId),d=t.readSync(m.dataId),[f,h]=rU(c,d,o,s,i,a,u,p);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(m.shape,"int32",h)]}var HW={kernelName:qu,backendName:"webgpu",kernelFunc:Vle};var Hle=lt({opType:22}),qW={kernelName:qo,backendName:"webgpu",kernelFunc:Hle};var wD=class{constructor(e,t){this.variableNames=["A"];this.workGroupSize=[64,1,1];this.size=!0;let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[o]*t[o];this.outputShape=n,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=qle(this.rank,"uniforms.");return`
      ${Se()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function qle(r,e=""){if(r>=5)throw Error(`Tile for rank ${r} is not yet supported`);if(r===1)return`(resRC % ${e}aShape)`;let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r;o++)n.push(`(${t[o]} % ${e}aShape[${o}])`);return n.join()}function jle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(t.shouldExecuteOnCPU([o])||o.dtype==="string"||o.shape.length>=5){let u=t.readSync(o.dataId),p=o.dtype==="string"?u.map(c=>b.decodeString(c)):u,l=ke(o.shape,o.dtype,p),m=oU(l,s);return t.makeTensorInfo(m.shape,m.dtype,m.values)}let i=new wD(o.shape,s);return t.runWebGPUProgram(i,[o],o.dtype)}var jW={kernelName:An,backendName:"webgpu",kernelFunc:jle};var ND=class{constructor(e){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32; firstPass : i32; negativeInf : f32;
        dir : i32; inc : i32;`,this.shaderKey="swap"}getUserCode(){return`
        ${Se()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},DD=class{constructor(e){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32; firstPass : i32; k : i32;",this.shaderKey="merge"}getUserCode(){return`
        ${Se()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function Hc(r,e){e!==null&&r.disposeData(e.dataId)}function XW(r){let e=1;for(;e<r;)e*=2;return e}function Xle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:i}=n,a=o.shape,u=a[a.length-1];if(t.shouldExecuteOnCPU([o])){let k=t.readSync(o.dataId),[N,E]=sU(k,a,o.dtype,s,i);return[t.makeTensorInfo(N.shape,N.dtype,N.values),t.makeTensorInfo(E.shape,E.dtype,E.values)]}if(s===0)return a[a.length-1]=0,[t.makeTensorInfo(a,o.dtype,[]),t.makeTensorInfo(a,"int32",[])];if(u===1)return[o,ja({attrs:{shape:a,dtype:"int32",value:0},backend:t})];let l=b.sizeFromShape(a)/u,m=_e({inputs:{x:o},attrs:{shape:[l,u]},backend:t}),c=XW(s),d=XW(u),f=null,h=()=>f===null?[m,m]:[m,f],g=(k,N,E)=>{let M=h(),R=new ND(E),U=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[k]},{type:"int32",data:[N]}],W=f;f=t.runWebGPUProgram(R,M,"int32",U),Hc(t,W)};for(let k=1;k<c;k*=2){let N=k*2;for(let E=k;E>=1;E/=2)g(N,E,[l,d])}for(let k=d;k>c;k/=2){let N=h(),E=new DD([l,k/2]),R=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[c]}],B=f;f=t.runWebGPUProgram(E,N,"int32",R),Hc(t,B);let U=c/2,W=U*2;for(let K=U;K>=1;K/=2)g(W,K,f.shape)}let y=f;f=qa({inputs:{x:f},backend:t,attrs:{begin:0,size:[l,s]}}),Hc(t,y);let T=dD({inputs:{x:m,indices:f},backend:t,attrs:{axis:1,batchDims:1}});Hc(t,m);let x=a.slice(0,-1);x.push(s),y=f,f=_e({inputs:{x:f},attrs:{shape:x},backend:t}),Hc(t,y);let I=T;return T=_e({inputs:{x:T},attrs:{shape:x},backend:t}),Hc(t,I),[T,f]}var YW={kernelName:ka,backendName:"webgpu",kernelFunc:Xle};var PD=class{constructor(e){this.variableNames=["Image","Transforms"];this.uniforms="interpolationModeId : i32; fillModeId : i32; fillValue : f32;";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Se()}
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function Yle(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:i,fillMode:a,fillValue:u,outputShape:p}=n,[l,m,c,d]=o.shape,[f,h]=p??[m,c],g=[l,f,h,d],y=new PD(g),T=i==="nearest"?1:2,x;switch(a){case"constant":x=1;break;case"reflect":x=2;break;case"wrap":x=3;break;case"nearest":x=4;break;default:x=1;break}let I=[{type:"int32",data:[T]},{type:"int32",data:[x]},{type:"float32",data:[u]}];return t.runWebGPUProgram(y,[o,s],"float32",I)}var QW={kernelName:Sa,backendName:"webgpu",kernelFunc:Yle};function Qle(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let i=o,a=i.shape.length,u=o.shape[s],p=new Array(a-1),l=0;for(let h=0;h<a;h++)h!==s&&(p[l++]=i.shape[h]);let m=[],c=new Array(a).fill(0),d=i.shape.slice();d[s]=1;let f=new Array(u);for(let h=0;h<f.length;h++){c[s]=h;let g=qa({inputs:{x:i},backend:t,attrs:{begin:c,size:d}}),y=_e({inputs:{x:g},backend:t,attrs:{shape:p}});f[h]=y,m.push(g)}return m.forEach(h=>t.disposeData(h.dataId)),f}var ZW={kernelName:ks,backendName:"webgpu",kernelFunc:Qle};var Zle=[wG,iU,uU,pU,mU,cU,dU,fU,gU,xU,IU,CU,DG,SU,vU,AU,wU,NU,DU,PU,EU,RU,LU,_U,BU,$U,OU,zU,GU,HU,UU,WU,qU,jU,XU,YU,QU,ZU,JU,NG,kU,eW,tW,rW,nW,oW,sW,aW,iW,uW,pW,lW,mW,cW,MU,dW,fW,hW,bU,yW,TW,xW,IW,CW,kW,SW,yU,vW,AW,wW,AG,NW,DW,PW,EW,MW,FW,RW,LW,_W,hU,VW,HW,$W,OW,zW,GW,UW,WW,KW,BW,FU,qW,jW,YW,QW,lU,ZW,gW];for(let r of Zle)Qi(r);var ED=class{constructor(e){this.device=e;this.numUsedBuffers=0;this.numFreeBuffers=0;this.freeBuffers=new Map;this.usedBuffers=new Map;this.numBytesUsed=0;this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){let o=JW(e,t);if(this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.usedBuffers.has(o)||this.usedBuffers.set(o,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(o).length>0){this.numFreeBuffers--;let i=this.freeBuffers.get(o).shift();return this.usedBuffers.get(o).push(i),i}this.numBytesAllocated+=e;let s=this.device.createBuffer({mappedAtCreation:n,size:e,usage:t});return this.usedBuffers.get(o).push(s),s}releaseBuffer(e,t,n){if(this.freeBuffers.size===0)return;let o=JW(t,n);this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.freeBuffers.get(o).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let s=this.usedBuffers.get(o),i=s.indexOf(e);if(i<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");s.splice(i,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,n)},o=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function JW(r,e){return`${r}_${e}`}var Sg=class{constructor(){this.outputShape=[0];this.variableNames=[];this.workGroupSize=[256,1,1];this.lastUniformData=[];this.inputTexture=null;this.layout=null;this.lastPixelSize={width:0,height:0};this.disposed=!1;this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){b.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=Ce(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${Se()}
        let flatIndexBase = index * uniforms.numChannels;
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndexBase);
            let values = ${e};
            result.numbers[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){if(!this.uniform){let n=e.createBuffer({size:t.length*4,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.uniform=n}!t||t.length===this.lastUniformData.length&&t.every((n,o)=>n===this.lastUniformData[o])||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,n){return(!this.inputTexture||this.lastPixelSize.width!==t||this.lastPixelSize.height!==n)&&(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,n],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=n),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return this.layout===null&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),o=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:o}}};var MD=class extends Sg{constructor(){super(...arguments);this.layout=null;this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return this.layout===null&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),o=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:o}}};var Jle=$().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),FD=class extends ps{constructor(e,t=!1){super();this.commandQueueOwnedIds=new WeakSet;this.tensorDisposalQueue=[];this.uniformDisposalQueue=[];this.stagingDisposalQueue=[];this.disposed=!1;this.uploadWaitMs=0;this.downloadWaitMs=0;this.dispatchNumberInEncoder=0;if(!dg())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new ED(this.device),this.tensorMap=new Xa(this,qn()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),$().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return FD.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.stagingDisposalQueue.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.byteSize,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:o}=this.tensorMap.get(e);o!=null&&(this.disposeData(o.real.dataId,!0),this.disposeData(o.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);t!=null&&t.bufferInfo.buffer!=null&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()},s=b.sizeFromShape(t)*UT(n);return this.tensorMap.set(o,{dtype:n,values:e,bufferInfo:{byteSize:s,usage:this.defaultGpuBufferUsage()},refCount:1}),o}move(e,t,n,o,s){if(o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let i=b.sizeFromShape(n)*UT(o);this.tensorMap.set(e,{dtype:o,values:t,bufferInfo:{byteSize:i,usage:this.defaultGpuBufferUsage()},refCount:s})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new Sg),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new MD),this.fromPixelImportProgram;default:b.assert(!1,()=>"Unsupported fromPixels shape");return}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.endPass(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(e.values!=null)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let n=t.getMappedRange().slice(0);return t.unmap(),t!=null&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),$().getBool("WEBGPU_USE_PROFILE_TOOL")&&(b.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let o;if(t.dtype==="complex64"){let s=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),i=s[0],a=s[1];o=C.mergeRealAndImagArrays(i,a)}else{let s=await this.getBufferData(t);o=EN(s,t.dtype)}return this.convertAndCacheOnCPU(e,o),o}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>b.decodeString(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ke(e.shape,e.dtype,n)}async time(e){let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=b.flatten(this.activeTimers.map(p=>p.query)).filter(p=>p!=null),i=b.flatten(this.activeTimers.map(p=>p.name)).filter(p=>p!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},u=await Promise.all(s);return a.kernelMs=b.sum(u),a.getExtraProfileInfo=()=>u.map((p,l)=>({name:i[l],ms:p})).map(p=>`${p.name}: ${p.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,a}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(i=>b.encodeString(i));o=this.write(s,e,t)}else o=this.write(n,e,t);return{dataId:o,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.bufferInfo.buffer==null&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values)){let n=this.bufferManager.acquireUploadBuffer(t.bufferInfo.byteSize,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),o=n.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(o).set(t.values):new Float32Array(o).set(t.values),n.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(n,0,t.bufferInfo.buffer,0,t.bufferInfo.byteSize);let s={byteSize:t.bufferInfo.byteSize,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:n};this.stagingDisposalQueue.push(s)}}makeUniforms(e){let t=0,n=[];e.forEach(i=>{i.data.length===0&&(i.data=[1]);let a;switch(i.data.length){case 1:a=4;break;case 2:a=8;break;case 3:a=16;break;case 4:a=16;break;default:b.assert(!1,()=>`Unsupported ${i.data.length}D shape`)}t=Math.ceil(t/a)*a,n.push(t),t+=i.data.length*4});let o=new ArrayBuffer(t);e.forEach((i,a)=>{let u=n[a];i.type==="int32"?new Int32Array(o,u,i.data.length).set(i.data):i.type==="uint32"?new Uint32Array(o,u,i.data.length).set(i.data):new Float32Array(o,u,i.data.length).set(i.data)});let s=this.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(s,0,o,0,t),{offset:0,size:t,buffer:s}}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let s=0;s<e;s++)t.push({binding:s+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t}),o=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:o}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,o,s){if(!s){if(s=this.makeTensorInfo(e.outputShape,n),b.sizeFromShape(s.shape)===0){let M=this.tensorMap.get(s.dataId);return M.values=b.getTypedArrayFromDType(s.dtype,0),s}this.uploadToGPU(s.dataId)}let i=[{type:"float32",data:[NaN]}],a=t.concat(s).map(M=>M.shape),u="int32";a.map(M=>{i.push({type:u,data:M})});let p=b.computeStrides(s.shape);if(i.push({type:u,data:p}),e.size){let M=b.sizeFromShape(e.outputShape);i.push({type:u,data:[e.isVec4?M/4:M]})}o&&(i=[...i,...o]);let l=this.makeUniforms(i),m=t.map((M,R)=>{if(M.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(M.dataId),{dtype:this.tensorMap.get(M.dataId).dtype,shape:M.shape,name:e.variableNames[R]}}),c=m.map(M=>M.dtype).concat(s.dtype),d=m.map(M=>C.getBroadcastDims(M.shape,s.shape)),f=m.map(M=>b.arraysEqual(M.shape,s.shape)).join("_"),h=d.map(M=>M.join("_")).join(";"),g=XT(e,a,c,h,f),{bindGroupLayout:y,pipelineLayout:T}=this.getCachedOrCreateLayout(e.variableNames.length),x=this.getAndSavePipeline(g,()=>jT(this.device,e,T,m,s)),I=this.activeTimers!=null,k=KU(this.device,y,t.map(M=>this.tensorToBinding(M)),this.tensorToBinding(s),l);this.ensureCommandEncoderReady();let N=this.getComputePass();I&&this.supportTimeQuery&&N.writeTimestamp(this.querySet,0),N.setPipeline(x),N.setBindGroup(0,k),N.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),I&&this.supportTimeQuery&&N.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(M=>{this.commandQueueOwnedIds.add(M.dataId)}),this.commandQueueOwnedIds.add(s.dataId);let E={byteSize:l.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:l.buffer};return this.uniformDisposalQueue.push(E),$().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),I&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),s}runFromPixelsProgram(e,t,n,o,s){let i=this.device.createBindGroup({layout:n.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:o},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();let a=this.getComputePass(),u=this.activeTimers!=null;u&&this.supportTimeQuery&&a.writeTimestamp(this.querySet,0),a.setPipeline(e.pipeline),a.setBindGroup(0,i),a.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),u&&this.supportTimeQuery&&a.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(s),this.submitQueue(),u&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let o=new BigUint64Array(n.getMappedRange()),s=Number(o[1]-o[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),s/1e6}shouldExecuteOnCPU(e,t=Jle){return $().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).bufferInfo.buffer==null&&b.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}},qc=FD;qc.nextDataId=0;var eK={};je(eK,{WebGPUBackend:()=>qc,webgpu_util:()=>WT});oi.isBrowser()&&dg()&&Ju("webgpu",async()=>{$().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let r={powerPreference:$().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(r),t={},n=e.features.has("timestamp-query");n?t={requiredFeatures:["timestamp-query"]}:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let o=await e.requestDevice(t);return new qc(o,n)},3);var Je=(s=>(s[s.float32=0]="float32",s[s.int32=1]="int32",s[s.bool=2]="bool",s[s.string=3]="string",s[s.complex64=4]="complex64",s))(Je||{}),Ol=(a=>(a[a.linear=0]="linear",a[a.relu=1]="relu",a[a.relu6=2]="relu6",a[a.prelu=3]="prelu",a[a.leakyrelu=4]="leakyrelu",a[a.sigmoid=5]="sigmoid",a[a.elu=6]="elu",a))(Ol||{});var tK;function eme(r){tK=r.wasm.cwrap(As,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function tme(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:i,preluActivationWeights:a}=e;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:u,transposeB:p,activation:l,leakyreluAlpha:m}=n,c=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(s.dataId).id,f=0;if(i!=null){let M=t.dataIdMap.get(i.dataId);if(M.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${M.shape.length}.`);f=M.id}let h=a==null?0:t.dataIdMap.get(a.dataId).id,g=Ol[l];if(g==null)throw new Error(`${l} activation not yet supported for FusedConv2D in the wasm backend.`);let y=u?o.shape[2]:o.shape[1],T=p?s.shape[1]:s.shape[2],x=wr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)),I=t.makeOutput([...x,y,T],o.dtype),k=t.dataIdMap.get(I.dataId).id,N=new Uint8Array(new Int32Array(o.shape).buffer),E=new Uint8Array(new Int32Array(s.shape).buffer);return tK(c,N,o.shape.length,d,E,s.shape.length,u,p,g,f,h,m||0,k),I}var rK={kernelName:As,backendName:"wasm",setupFunc:eme,kernelFunc:tme};function mt(r,e){let t;function n(s){t=s.wasm.cwrap(r,null,["number","number","number"])}function o(s){let{backend:i,inputs:{x:a}}=s,u=i.dataIdMap.get(a.dataId).id,p=i.makeOutput(a.shape,e||a.dtype),l=i.dataIdMap.get(p.dataId).id;return b.sizeFromShape(p.shape)===0||t(u,Je[a.dtype],l),p}return{kernelName:r,backendName:"wasm",setupFunc:n,kernelFunc:o}}var nK=mt(ls);function At(r,e,t){let n;function o(i){n=i.wasm.cwrap(r,null,["number","array","number","number","array","number","number","number"])}function s(i){let{backend:a,inputs:u}=i,{a:p,b:l}=u,m=a.dataIdMap.get(p.dataId).id,c=a.dataIdMap.get(l.dataId).id,d=t??p.dtype,f=C.assertAndGetBroadcastShape(p.shape,l.shape),h=a.makeOutput(f,d);if(b.sizeFromShape(f)===0)return h;let g=new Uint8Array(new Int32Array(p.shape).buffer),y=new Uint8Array(new Int32Array(l.shape).buffer),T=a.dataIdMap.get(h.dataId).id;return(()=>n(m,g,p.shape.length,c,y,l.shape.length,Je[p.dtype],T))(),h}return{kernelName:r,backendName:"wasm",setupFunc:o,kernelFunc:s}}var rme=!0,oK=At(vn,rme);var sK;function nme(r){sK=r.wasm.cwrap(so,null,["array","number","number","number"])}function ome(r){let{inputs:e,backend:t}=r,n=t.makeOutput(e[0].shape,e[0].dtype);if(b.sizeFromShape(n.shape)===0)return n;let o=e.map(a=>t.dataIdMap.get(a.dataId).id),s=new Uint8Array(new Int32Array(o).buffer),i=t.dataIdMap.get(n.dataId).id;return sK(s,o.length,Je[n.dtype],i),n}var aK={kernelName:so,backendName:"wasm",setupFunc:nme,kernelFunc:ome};function zl(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype),o=t.typedArrayFromHeap(e);return t.typedArrayFromHeap(n).set(o),n}var iK={kernelName:Wn,backendName:"wasm",kernelFunc:zl};var uK;function sme(r){uK=r.wasm.cwrap(jo,null,["number","array","number","number","number","array","number"])}function Si(r){let{inputs:e,backend:t,attrs:n}=r,[o,s]=ime(e.x.shape,n.perm),i=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(i=!1);let a=ame(e.x.shape,n.perm),u={dataId:e.x.dataId,shape:o,dtype:e.x.dtype};if(i){let f=zl({inputs:e,backend:t});return f.shape=a,f}let p=t.makeOutput(a,u.dtype),l=t.dataIdMap.get(u.dataId).id,m=t.dataIdMap.get(p.dataId).id,c=new Uint8Array(new Int32Array(s).buffer),d=new Uint8Array(new Int32Array(u.shape).buffer);return uK(l,d,u.shape.length,Je[u.dtype],m,c,s.length),p}function ame(r,e){let t=new Array(r.length);for(let n=0;n<t.length;n++)t[n]=r[e[n]];return t}function ime(r,e){let t=[],n=[];for(let o=0;o<r.length;++o)r[o]!==1&&t.push(r[o]),r[e[o]]!==1&&n.push(e[o]);for(let o=0;o<n.length;++o){let s=-1;for(let i=0;i<n.length;++i)n[i]>=o&&(s===-1||n[s]>n[i])&&(s=i);n[s]=o}return[t,n]}var pK={kernelName:jo,backendName:"wasm",kernelFunc:Si,setupFunc:sme};function In(r,e,t){let n=r.shape,o=r.shape.length,s=b.parseAxisParam(e,n),i=s,a=C.getAxesPermutation(i,o),u=null,p=!1;if(a!=null){let l=new Array(o);for(let d=0;d<l.length;d++)l[d]=n[a[d]];i=C.getInnerMostAxes(i.length,o),u=Si({inputs:{x:r},attrs:{perm:a},backend:t});let m=t.dataIdMap.get(r.dataId).id;t.dataIdMap.get(u.dataId).id!==m&&(p=!0)}return{transposed:u,originalAxes:s,axes:i,inputWasTransposed:p}}var lK;function ume(r){lK=r.wasm.cwrap(Ei,null,["number, number, number"])}function pme(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,u=e.dataIdMap.get(i.dataId).id,p=i,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=In(i,o,e);if(d){let x=e.dataIdMap.get(l.dataId).id;p=l,u=x}let f=p.shape.length;C.assertAxesAreInnerMostDims("all",m,f);let[h,g]=C.computeOutAndReduceShapes(p.shape,m),y=b.sizeFromShape(g),T=e.makeOutput(h,i.dtype);if(b.sizeFromShape(p.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;lK(u,y,x)}if(d&&e.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var mK={kernelName:Ei,backendName:"wasm",setupFunc:ume,kernelFunc:pme};var cK;function lme(r){cK=r.wasm.cwrap(Mi,null,["number, number, number"])}function mme(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,u=e.dataIdMap.get(i.dataId).id,p=i,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=In(i,o,e);if(d){let x=e.dataIdMap.get(l.dataId).id;p=l,u=x}let f=p.shape.length;C.assertAxesAreInnerMostDims("any",m,f);let[h,g]=C.computeOutAndReduceShapes(p.shape,m),y=b.sizeFromShape(g),T=e.makeOutput(h,i.dtype);if(b.sizeFromShape(p.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;cK(u,y,x)}if(d&&e.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var dK={kernelName:Mi,backendName:"wasm",setupFunc:lme,kernelFunc:mme};var fK;function cme(r){fK=r.wasm.cwrap(ao,null,["number","number","number","number","number"])}function dme(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o}=n,{x:s}=t,i=e.dataIdMap.get(s.dataId).id,a=i,u=s,{transposed:p,axes:l,inputWasTransposed:m}=In(s,o,e);if(m){let y=e.dataIdMap.get(p.dataId).id;y!==i&&(u=p,a=y)}let c=u.shape.slice(0,-1),d=e.makeOutput(c,"int32"),f=e.dataIdMap.get(d.dataId).id,h=b.sizeFromShape(d.shape),g=u.shape[l[0]];return fK(a,Je[u.dtype],h,g,f),m&&e.disposeData(p.dataId),d}var hK={kernelName:ao,backendName:"wasm",kernelFunc:dme,setupFunc:cme};var gK;function fme(r){gK=r.wasm.cwrap(io,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function hme(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:i,strides:a,pad:u,dimRoundingMode:p}=t,l=C.computePool2DInfo(o.shape,i,a,1,u,p),m=l.filterHeight,c=l.filterWidth,d=l.padInfo.top,f=l.padInfo.right,h=l.padInfo.bottom,g=l.padInfo.left,y=l.strideHeight,T=l.strideWidth,x=l.inChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);if(l.dilationWidth!==1||l.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${l.dilationHeight}, ${l.dilationWidth}].`);let I=n.makeOutput(l.outShape,"float32"),k=n.dataIdMap.get(I.dataId).id;return gK(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,y,T,x,k),I}var bK={kernelName:io,backendName:"wasm",setupFunc:fme,kernelFunc:hme};function dr(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=b.sizeFromShape(n.shape),i=b.inferFromImplicitShape(o,s);return b.assert(s===b.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:i,dtype:n.dtype}}var yK={kernelName:ys,backendName:"wasm",kernelFunc:dr};var TK;function gme(r){TK=r.wasm.cwrap(uo,null,["number","array","number","number","array","number","number","number","number"])}function bme(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:i,transposeB:a}=n;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let u=o.shape.length,p=s.shape.length,l=i?o.shape[u-2]:o.shape[u-1],m=a?s.shape[p-1]:s.shape[p-2],c=i?o.shape[u-1]:o.shape[u-2],d=a?s.shape[p-2]:s.shape[p-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=b.sizeFromShape(f),y=b.sizeFromShape(h),x=wr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);b.assert(l===m,()=>`Error in matMul: inner shapes (${l}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${i} and transposeB=${a} must match.`);let I=i?[g,l,c]:[g,c,l],k=a?[y,d,m]:[y,m,d],N=dr({inputs:{x:o},backend:t,attrs:{shape:I}}),E=dr({inputs:{x:s},backend:t,attrs:{shape:k}}),M=t.dataIdMap.get(N.dataId).id,R=t.dataIdMap.get(E.dataId).id,B=i?N.shape[2]:N.shape[1],U=a?E.shape[1]:E.shape[2],W=Math.max(g,y),K=t.makeOutput([W,B,U],N.dtype),H=t.dataIdMap.get(K.dataId).id,V=new Uint8Array(new Int32Array(N.shape).buffer),j=new Uint8Array(new Int32Array(E.shape).buffer);return TK(M,V,N.shape.length,R,j,E.shape.length,i,a,H),t.disposeData(N.dataId),t.disposeData(E.dataId),K.shape=x,K}var xK={kernelName:uo,backendName:"wasm",setupFunc:gme,kernelFunc:bme};function Zs(r){let{inputs:{x:e},attrs:{begin:t,size:n},backend:o}=r,[s,i]=yt.parseSliceParams(e,t,n),a=yt.isSliceContinous(e.shape,s,i),u=o.readSync(e.dataId),p=o.makeOutput(i,e.dtype),l=b.computeStrides(e.shape),m=o.dataIdMap.get(p.dataId);if(a){let f=yt.computeFlatOffset(s,l);return e.dtype==="string"?m.stringBytes=u.slice(f,f+b.sizeFromShape(i)):o.typedArrayFromHeap(p).set(u.subarray(f,f+b.sizeFromShape(i))),p}if(e.dtype==="string"){let f=Sl(u,s,i,e.shape,e.dtype);return m.stringBytes=f,p}let c=o.typedArrayFromHeap(p),d=e.shape.length;if(d===2)yme(u,l[0],c,s,i);else if(d===3)Tme(u,l[0],l[1],c,s,i);else if(d===4)xme(u,l[0],l[1],l[2],c,s,i);else{let f=Sl(u,s,i,e.shape,e.dtype);c.set(f)}return p}function yme(r,e,t,n,o){let s=0,i=n[0],a=n[1],u=i+o[0];for(let p=i;p<u;p++){let l=p*e+a;t.set(r.subarray(l,l+o[1]),s),s+=o[1]}}function Tme(r,e,t,n,o,s){let i=0,a=o[0],u=o[1],p=o[2],l=a+s[0],m=u+s[1];for(let c=a;c<l;c++)for(let d=u;d<m;d++){let f=c*e+d*t+p;n.set(r.subarray(f,f+s[2]),i),i+=s[2]}}function xme(r,e,t,n,o,s,i){let a=0,u=s[0],p=s[1],l=s[2],m=u+i[0],c=p+i[1],d=l+i[2],f=s[3];for(let h=u;h<m;h++)for(let g=p;g<c;g++)for(let y=l;y<d;y++){let T=h*e+g*t+y*n+f;o.set(r.subarray(T,T+i[3]),a),a+=i[3]}}var IK={kernelName:xs,backendName:"wasm",kernelFunc:Zs};function Ime(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:i}=n,a=s.reduce((y,T)=>y*T),u=C.getReshaped(o.shape,s,a),p=C.getPermuted(u.length,s.length),l=C.getReshapedPermuted(o.shape,s,a),m=C.getSliceBeginCoords(i,s.length),c=C.getSliceSize(l,i,s.length),d=dr({inputs:{x:o},backend:t,attrs:{shape:u}}),f=Si({inputs:{x:d},backend:t,attrs:{perm:p}}),h=dr({inputs:{x:f},backend:t,attrs:{shape:l}}),g=Zs({inputs:{x:h},backend:t,attrs:{begin:m,size:c}});return t.disposeData(d.dataId),t.disposeData(f.dataId),t.disposeData(d.dataId),g}var CK={kernelName:ms,backendName:"wasm",kernelFunc:Ime};function Au(r){let{inputs:{x:e},attrs:{dtype:t},backend:n}=r,o=n.makeOutput(e.shape,t),s=n.typedArrayFromHeap(e);return n.typedArrayFromHeap(o).set(s),o}var kK={kernelName:Gn,backendName:"wasm",kernelFunc:Au};var SK=mt(po);var vK;function Cme(r){vK=r.wasm.cwrap(Un,null,["number","number","number","number"])}function kme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:i}=n,a=t.dataIdMap.get(o.dataId).id,u=t.makeOutput(o.shape,o.dtype),p=t.dataIdMap.get(u.dataId).id;return vK(a,s,i,p),u}var AK={kernelName:Un,backendName:"wasm",setupFunc:Cme,kernelFunc:kme};function RD(r){let{inputs:e,backend:t}=r,n=b.parseAxisParam(r.attrs.axis,e[0].shape)[0],o=C.computeOutShape(e.map(d=>d.shape),n),s=e.filter(d=>b.sizeFromShape(d.shape)>0);if(s.length===1)return zl({inputs:{x:s[0]},backend:t});let i=t.makeOutput(o,e[0].dtype);if(b.sizeFromShape(o)===0)return i;let a=s.map(d=>d.shape);if(C.assertParamsConsistent(a,n),s[0].dtype==="string"){let d=s.map(x=>{let I=b.sizeFromShape(x.shape.slice(n));return dr({inputs:{x},backend:t,attrs:{shape:[-1,I]}})}),f=d.map(x=>({vals:t.readSync(x.dataId),shape:x.shape}));o=C.computeOutShape(d.map(x=>x.shape),1);let h=d[0].shape[0]===1,g=Il(f,o,e[0].dtype,h),y=C.computeOutShape(s.map(x=>x.shape),n);i.shape=y;let T=t.dataIdMap.get(i.dataId);return T.stringBytes=C.fromStringArrayToUint8(g),d.forEach(x=>t.disposeData(x.dataId)),i}let u=b.sizeFromShape(s[0].shape.slice(0,n)),p=0,l=s.map(d=>{let f=b.sizeFromShape(d.shape.slice(n));return p+=f,f}),m=s.map(d=>t.typedArrayFromHeap(d)),c=t.typedArrayFromHeap(i);for(let d=0;d<u;d++){let f=d*p;for(let h=0;h<m.length;h++){let g=l[h],y=d*g,T=m[h].subarray(y,y+g);c.set(T,f),f+=g}}return i}var wK={kernelName:cs,backendName:"wasm",kernelFunc:RD};var NK;function Sme(r){NK=r.wasm.cwrap(lo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function vme(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,i=n.dataIdMap.get(o.dataId).id,a=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:p,pad:l,dimRoundingMode:m,dataFormat:c}=t,d=C.convertConv2DDataFormat(c),f=C.computeConv2DInfo(o.shape,s.shape,u,p,l,m,!1,d),h=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,T=f.padInfo.right,x=f.padInfo.bottom,I=f.padInfo.left,k=f.dilationHeight,N=f.dilationWidth,E=f.strideHeight,M=f.strideWidth,R=f.inChannels,B=f.outChannels,U=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let W=n.makeOutput(f.outShape,"float32"),K=n.dataIdMap.get(W.dataId).id;return NK(i,o.shape[0],o.shape[1],o.shape[2],a,h,g,y,T,x,I,U,k,N,E,M,R,B,K),W}var DK={kernelName:lo,backendName:"wasm",setupFunc:Sme,kernelFunc:vme};var PK;function Ame(r){PK=r.wasm.cwrap(mo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function wme(r){let{backend:e,inputs:t,attrs:n}=r,{dy:o,filter:s}=t,{strides:i,pad:a,dataFormat:u,dimRoundingMode:p,inputShape:l}=n,m=1,c=C.convertConv2DDataFormat(u),d=C.computeConv2DInfo(l,s.shape,i,m,a,p,!1,c),{batchSize:f,filterHeight:h,filterWidth:g,inChannels:y,inHeight:T,inWidth:x,outChannels:I,outHeight:k,outWidth:N,strideHeight:E,strideWidth:M}=d,R=h-1-d.padInfo.top,B=g-1-d.padInfo.left,U=d.dataFormat==="channelsLast",W=b.computeStrides(d.inShape),K=b.computeStrides(o.shape),[H,V,j]=b.computeStrides(s.shape),ee=W[0],Z=U?W[1]:W[2],te=U?W[2]:1,oe=U?1:W[1],ie=K[0],se=U?K[1]:K[2],ue=U?K[2]:1,ye=U?1:K[1],fe=e.makeOutput(d.inShape,"float32"),Te=e.dataIdMap.get(fe.dataId).id,Ae=e.dataIdMap.get(o.dataId).id,Le=e.dataIdMap.get(s.dataId).id;return PK(Ae,Le,f,h,g,T,x,y,k,N,I,E,M,R,B,H,V,j,ee,Z,te,oe,ie,se,ue,ye,Te),fe}var EK={kernelName:mo,backendName:"wasm",setupFunc:Ame,kernelFunc:wme};var MK=mt(co);var FK=mt(fo);var RK=(t=>(t[t.bilinear=0]="bilinear",t[t.nearest=1]="nearest",t))(RK||{}),LK;function Nme(r){LK=r.wasm.cwrap(ra,null,["number","number","number","number","array","number","number","number","number","number"])}function Dme(r){let{backend:e,inputs:t,attrs:n}=r,{method:o,extrapolationValue:s,cropSize:i}=n,{image:a,boxes:u,boxInd:p}=t,l=u.shape[0],[m,c]=i,d=[l,m,c,a.shape[3]],f=e.dataIdMap.get(a.dataId),h;a.dtype!=="float32"&&(h=Au({backend:e,inputs:{x:a},attrs:{dtype:"float32"}}),f=e.dataIdMap.get(h.dataId));let g=f.id,y=e.dataIdMap.get(u.dataId).id,T=e.dataIdMap.get(p.dataId).id,x=e.makeOutput(d,"float32"),I=e.dataIdMap.get(x.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer);return LK(g,y,T,l,k,m,c,RK[o],s,I),h!=null&&e.disposeData(h.dataId),x}var _K={kernelName:ra,backendName:"wasm",setupFunc:Nme,kernelFunc:Dme};var BK;function Pme(r){BK=r.wasm.cwrap(ta,null,["number","number","number","number","number","number"])}function Eme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:i,reverse:a}=n,u=o.shape.length;b.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumsum does not support ${o.dtype} tensors in the WASM backend`);let p=C.getAxesPermutation([s],u),l=o;p!==null&&(l=Si({inputs:{x:o},attrs:{perm:p},backend:t}));let m=C.getInnerMostAxes(1,u)[0];C.assertAxesAreInnerMostDims("cumsum",[m],u);let c=t.makeOutput(l.shape,l.dtype),d=l.shape[m],f=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(c.dataId).id;BK(f,i?1:0,a?1:0,d,h,Je[o.dtype]);let g=c;if(p!==null){let y=C.getUndoAxesPermutation(p);g=Si({inputs:{x:c},attrs:{perm:y},backend:t}),t.disposeData(l.dataId),t.disposeData(c.dataId)}return g}var $K={kernelName:ta,backendName:"wasm",setupFunc:Pme,kernelFunc:Eme};var OK;function Mme(r){OK=r.wasm.cwrap(na,null,["number","number","number","array","number","array","array","number","number"])}function Fme(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:i}=n,a=o.shape[0],u=i==="NHWC"?o.shape[1]:o.shape[2],p=i==="NHWC"?o.shape[2]:o.shape[3],l=i==="NHWC"?o.shape[3]:o.shape[1],m=u*s,c=p*s,d=l/(s*s),f=i==="NHWC"?[a,m,c,d]:[a,d,m,c],h=e.makeOutput(f,"float32"),y=e.dataIdMap.get(o.dataId).id,T=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),x=new Uint8Array(new Int32Array(f).buffer),I=new Uint8Array(new Int32Array(b.computeStrides(f)).buffer),k=e.dataIdMap.get(h.dataId).id;return OK(y,s,i==="NHWC"?1:0,T,o.shape.length-1,x,I,f.length,k),h}var zK={kernelName:na,backendName:"wasm",setupFunc:Mme,kernelFunc:Fme};var GK;function Rme(r){GK=r.wasm.cwrap(ho,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Lme(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,i=n.dataIdMap.get(o.dataId).id,a=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:p,pad:l,dimRoundingMode:m}=t,c=p??[1,1],d=C.computeConv2DInfo(o.shape,s.shape,u,c,l,m,!0),f=d.filterHeight,h=d.filterWidth,g=d.padInfo.top,y=d.padInfo.right,T=d.padInfo.bottom,x=d.padInfo.left,I=d.dilationHeight,k=d.dilationWidth,N=d.strideHeight,E=d.strideWidth,M=d.inChannels,R=d.outChannels,B=d.padInfo.type==="SAME"?1:0;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let U=n.makeOutput(d.outShape,"float32"),W=n.dataIdMap.get(U.dataId).id;return GK(i,o.shape[0],o.shape[1],o.shape[2],a,f,h,g,y,T,x,B,I,k,N,E,M,R,W),U}var UK={kernelName:ho,backendName:"wasm",setupFunc:Rme,kernelFunc:Lme};var WK=mt(bo);var _me=!1,KK=At(oa,_me,"bool");var VK=mt(yo,"float32");function YT(r){let{inputs:e,attrs:t,backend:n}=r,{input:o}=e,{dim:s}=t,i=o.shape.length,a=o.shape.slice(),u=s;return s<0&&(b.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),a.splice(u,0,1),dr({inputs:{x:o},backend:n,attrs:{shape:a}})}var HK={kernelName:ds,backendName:"wasm",kernelFunc:YT};function LD(r){let{attrs:{shape:e,value:t,dtype:n},backend:o}=r,s=o.makeOutput(e,n);return o.typedArrayFromHeap(s).fill(t),s}var qK={kernelName:Ja,backendName:"wasm",kernelFunc:LD};var jK;function Bme(r){jK=r.wasm.cwrap(aa,null,["number","number","number","number","number","number"])}function $me(r){let{inputs:e,backend:t}=r,{image:n}=e,o=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,[a,u,p,l]=n.shape;return jK(s,a,u,p,l,i),o}var XK={kernelName:aa,backendName:"wasm",kernelFunc:$me,setupFunc:Bme};var YK=mt(To);var Ome=!1,QK=At(xo,Ome);var ZK;function zme(r){ZK=r.wasm.cwrap(Io,null,["number","number","number","number","number","number","number"])}function Gme(r){let{backend:e,inputs:t,attrs:n}=r,{varianceEpsilon:o}=n,{x:s,mean:i,variance:a,offset:u,scale:p}=t,l=e.dataIdMap.get(s.dataId).id,m=e.dataIdMap.get(i.dataId).id,c=e.dataIdMap.get(a.dataId).id,d=u!=null?e.dataIdMap.get(u.dataId).id:0,f=p!=null?e.dataIdMap.get(p.dataId).id:0,h=e.makeOutput(s.shape,s.dtype);if(b.sizeFromShape(s.shape)===0)return h;let g=e.dataIdMap.get(h.dataId).id;return ZK(l,m,c,d,f,o,g),h}var JK={kernelName:Io,backendName:"wasm",setupFunc:zme,kernelFunc:Gme};var eV;function Ume(r){eV=r.wasm.cwrap(ws,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Wme(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:p,dilations:l,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=t,h=C.computeConv2DInfo(o.shape,s.shape,u,l,p,c),g=Ol[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let y=n.dataIdMap.get(o.dataId).id,T=n.dataIdMap.get(s.dataId).id,x=h.outChannels,I=0;if(i!=null){let ue=n.dataIdMap.get(i.dataId);if(ue.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${ue.shape.length}.`);if(ue.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${ue.shape}) does not match the number of output channels (${x})`);I=ue.id}let k=h.filterHeight,N=h.filterWidth,E=h.padInfo.top,M=h.padInfo.right,R=h.padInfo.bottom,B=h.padInfo.left,U=h.dilationHeight,W=h.dilationWidth,K=h.strideHeight,H=h.strideWidth,V=h.inChannels,j=h.padInfo.type==="SAME"?1:0,ee=h.batchSize,Z=h.inHeight,te=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let oe=n.makeOutput(h.outShape,"float32"),ie=n.dataIdMap.get(oe.dataId).id,se=a==null?0:n.dataIdMap.get(a.dataId).id;return eV(y,ee,Z,te,T,k,N,I,E,M,R,B,j,U,W,K,H,V,x,g,se,f||0,ie),oe}var tV={kernelName:ws,backendName:"wasm",setupFunc:Ume,kernelFunc:Wme};var rV;function Kme(r){rV=r.wasm.cwrap(Ns,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Vme(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:p,dilations:l,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=t,h=C.computeConv2DInfo(o.shape,s.shape,u,l,p,c,!0),g=Ol[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=n.dataIdMap.get(o.dataId).id,T=n.dataIdMap.get(s.dataId).id,x=h.outChannels,I=0;if(i!=null){let ue=n.dataIdMap.get(i.dataId);if(ue.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${ue.shape.length}.`);if(ue.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${ue.shape}) does not match the number of output channels (${x})`);I=ue.id}let k=h.filterHeight,N=h.filterWidth,E=h.padInfo.top,M=h.padInfo.right,R=h.padInfo.bottom,B=h.padInfo.left,U=h.dilationHeight,W=h.dilationWidth,K=h.strideHeight,H=h.strideWidth,V=h.inChannels,j=h.padInfo.type==="SAME"?1:0,ee=h.batchSize,Z=h.inHeight,te=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let oe=n.makeOutput(h.outShape,"float32"),ie=n.dataIdMap.get(oe.dataId).id,se=a==null?0:n.dataIdMap.get(a.dataId).id;return rV(y,ee,Z,te,T,k,N,I,E,M,R,B,j,U,W,K,H,V,x,g,se,f||0,ie),oe}var nV={kernelName:Ns,backendName:"wasm",setupFunc:Kme,kernelFunc:Vme};var oV;function Hme(r){oV=r.wasm.cwrap(ia,null,["number","number","number","number","number","number","array","number"])}function qme(r){let{backend:e,inputs:t}=r,{params:n,indices:o}=t,[s,i,a,u]=xb.prepareAndValidate(n,o),p=e.makeOutput(s,n.dtype);if(i===0)return p;let l=o.shape,m=l[l.length-1],d=e.dataIdMap.get(n.dataId).id,h=e.dataIdMap.get(o.dataId).id,g=new Uint8Array(new Int32Array(u).buffer),y=e.dataIdMap.get(p.dataId).id;return oV(d,Je[n.dtype],h,i,m,a,g,y),p}var sV={kernelName:ia,backendName:"wasm",setupFunc:Hme,kernelFunc:qme};var aV;function jme(r){aV=r.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Xme(r){let{backend:e,inputs:t,attrs:n}=r,{x:o,indices:s}=t,{axis:i,batchDims:a}=n,u=b.parseAxisParam(i,o.shape)[0],p=e.readSync(s.dataId),l=o.shape[u];for(let R=0;R<p.length;++R){let B=p[R];b.assert(B<=l-1&&B>=0,()=>`GatherV2: the index value ${B} is not in [0, ${l-1}]`)}let m=C.segment_util.collectGatherOpShapeInfo(o,s,u,a),c=dr({inputs:{x:o},attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]},backend:e}),d=b.sizeFromShape(s.shape),f=dr({inputs:{x:s},attrs:{shape:[m.batchSize,d/m.batchSize]},backend:e}),h=[m.batchSize,m.outerSize,d/m.batchSize,m.sliceSize],g=e.makeOutput(h,o.dtype);if(b.sizeFromShape(o.shape)===0)return g;let y=c.shape.length-1,x=e.dataIdMap.get(c.dataId).id,k=e.dataIdMap.get(f.dataId).id,N=e.dataIdMap.get(g.dataId).id,E=new Uint8Array(new Int32Array(b.computeStrides(c.shape)).buffer),M=new Uint8Array(new Int32Array(b.computeStrides(h)).buffer);return aV(x,Je[o.dtype],E,y,k,m.batchSize,M,N),e.disposeData(c.dataId),e.disposeData(f.dataId),g.shape=m.outputShape,g}var iV={kernelName:fs,backendName:"wasm",setupFunc:jme,kernelFunc:Xme};var Yme=!1,uV=At(ua,Yme,"bool");var Qme=!1,pV=At(Co,Qme,"bool");var lV;function Zme(r){lV=r.wasm.cwrap(ko,null,["number","number","number","number"])}function Jme(r){let{inputs:{x:e},attrs:{alpha:t},backend:n}=r,o=n.dataIdMap.get(e.dataId).id,s=n.makeOutput(e.shape,"float32");if(b.sizeFromShape(e.shape)!==0){let i=n.dataIdMap.get(s.dataId).id;lV(o,Je[e.dtype],t,i)}return s}var mV={kernelName:ko,backendName:"wasm",setupFunc:Zme,kernelFunc:Jme};var ece=!1,cV=At(pa,ece,"bool");var tce=!1,dV=At(la,tce,"bool");var fV=mt(So);var rce=!1,hV=At(ma,rce,"bool");var gV;function nce(r){gV=r.wasm.cwrap(vo,null,["number","number","number","number"])}function oce(r){let{backend:e,inputs:t,attrs:n}=r,{reductionIndices:o,keepDims:s}=n,{x:i}=t,u=e.dataIdMap.get(i.dataId).id,p=i,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=In(i,o,e);if(d){let x=e.dataIdMap.get(l.dataId).id;p=l,u=x}let f=p.shape.length;C.assertAxesAreInnerMostDims("max",m,f);let[h,g]=C.computeOutAndReduceShapes(p.shape,m),y=b.sizeFromShape(g),T=e.makeOutput(h,i.dtype);if(b.sizeFromShape(p.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;gV(u,Je[i.dtype],y,x)}if(d&&e.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var bV={kernelName:vo,backendName:"wasm",setupFunc:nce,kernelFunc:oce};var sce=!1,yV=At(Ao,sce);var TV;function ace(r){TV=r.wasm.cwrap(wo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ice(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id;b.assert(o.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${o.dtype}.`);let{filterSize:i,strides:a,pad:u,dimRoundingMode:p}=t,l=C.computePool2DInfo(o.shape,i,a,1,u,p),m=l.filterHeight,c=l.filterWidth,d=l.padInfo.top,f=l.padInfo.right,h=l.padInfo.bottom,g=l.padInfo.left,y=l.dilationHeight,T=l.dilationWidth,x=l.strideHeight,I=l.strideWidth,k=l.inChannels,N=l.outChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);let E=n.makeOutput(l.outShape,"float32"),M=n.dataIdMap.get(E.dataId).id;return TV(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,y,T,x,I,k,N,M),E}var xV={kernelName:wo,backendName:"wasm",setupFunc:ace,kernelFunc:ice};var IV;function uce(r){IV=r.wasm.cwrap(No,null,["number, number, number"])}function pce(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,a=e.dataIdMap.get(i.dataId).id,u=a,p=i,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=In(i,o,e),f=m;if(d){let I=e.dataIdMap.get(l.dataId).id;I!==a&&(p=l,u=I,f=C.getInnerMostAxes(f.length,p.shape.length))}C.assertAxesAreInnerMostDims("mean",f,p.shape.length);let[h,g]=C.computeOutAndReduceShapes(p.shape,f),y=b.sizeFromShape(g),T=p;p.dtype!=="float32"&&(T=Au({backend:e,inputs:{x:p},attrs:{dtype:"float32"}}),u=e.dataIdMap.get(T.dataId).id);let x=e.makeOutput(h,"float32");if(b.sizeFromShape(p.shape)!==0){let I=e.dataIdMap.get(x.dataId).id;IV(u,y,I)}if(d&&e.disposeData(l.dataId),s){let I=C.expandShapeToKeepDim(x.shape,c);x.shape=I}return p.dtype!=="float32"&&e.disposeData(T.dataId),x}var CV={kernelName:No,backendName:"wasm",setupFunc:uce,kernelFunc:pce};var kV;function lce(r){kV=r.wasm.cwrap(Do,null,["number","number","number","number"])}function mce(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,a=e.dataIdMap.get(i.dataId).id,u=a,p=i,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=In(i,o,e);if(d){let x=e.dataIdMap.get(l.dataId).id;x!==a&&(p=l,u=x)}let f=p.shape.length;C.assertAxesAreInnerMostDims("min",m,f);let[h,g]=C.computeOutAndReduceShapes(p.shape,m),y=b.sizeFromShape(g),T=e.makeOutput(h,p.dtype);if(b.sizeFromShape(p.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;kV(u,Je[i.dtype],y,x)}if(d&&e.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var SV={kernelName:Do,backendName:"wasm",setupFunc:lce,kernelFunc:mce};var cce=!1,vV=At(Po,cce);var AV=(t=>(t[t.reflect=0]="reflect",t[t.symmetric=1]="symmetric",t))(AV||{}),wV;function dce(r){wV=r.wasm.cwrap(Eo,null,["number","array","number","number","array","array","number","number"])}function fce(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,mode:o}}=r,s=n.map((f,h)=>f[0]+e.shape[h]+f[1]),i=t.dataIdMap.get(e.dataId).id,a=t.makeOutput(s,e.dtype),u=t.dataIdMap.get(a.dataId).id,p=new Uint8Array(new Int32Array(e.shape).buffer),l=n.map(f=>f[0]),m=n.map(f=>f[1]),c=new Uint8Array(new Int32Array(l).buffer),d=new Uint8Array(new Int32Array(m).buffer);return wV(i,p,e.shape.length,Je[e.dtype],c,d,AV[o],u),a}var NV={kernelName:Eo,backendName:"wasm",kernelFunc:fce,setupFunc:dce};var hce=!0,DV=At(Mo,hce);var PV=mt(hs);function jc(r,e){let t=new Int32Array(r.wasm.HEAPU8.buffer,e,4),n=t[0],o=t[1],s=t[2],i=t[3];return r.wasm._free(e),{pSelectedIndices:n,selectedSize:o,pSelectedScores:s,pValidOutputs:i}}var EV;function gce(r){EV=r.wasm.cwrap(da,"number",["number","number","number","number","number"])}function bce(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:i}=n,{boxes:a,scores:u}=t,p=e.dataIdMap.get(a.dataId).id,l=e.dataIdMap.get(u.dataId).id,m=EV(p,l,s,o,i),{pSelectedIndices:c,selectedSize:d,pSelectedScores:f,pValidOutputs:h}=jc(e,m);return e.wasm._free(f),e.wasm._free(h),e.makeOutput([d],"int32",c)}var MV={kernelName:da,backendName:"wasm",setupFunc:gce,kernelFunc:bce};var FV;function yce(r){FV=r.wasm.cwrap(Vi,"number",["number","number","number","number","number","bool"])}function Tce(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:a}=n,{boxes:u,scores:p}=t,l=e.dataIdMap.get(u.dataId).id,m=e.dataIdMap.get(p.dataId).id,c=FV(l,m,s,o,i,a),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=jc(e,c);e.wasm._free(h);let y=e.makeOutput([f],"int32",d),T=e.makeOutput([],"int32",g);return[y,T]}var RV={kernelName:Vi,backendName:"wasm",setupFunc:yce,kernelFunc:Tce};var LV;function xce(r){LV=r.wasm.cwrap(fa,"number",["number","number","number","number","number","number"])}function Ice(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:i,softNmsSigma:a}=n,{boxes:u,scores:p}=t,l=e.dataIdMap.get(u.dataId).id,m=e.dataIdMap.get(p.dataId).id,c=LV(l,m,s,o,i,a),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=jc(e,c);e.wasm._free(g);let y=e.makeOutput([f],"int32",d),T=e.makeOutput([f],"float32",h);return[y,T]}var _V={kernelName:fa,backendName:"wasm",setupFunc:xce,kernelFunc:Ice};var Cce=!1,BV=At(ca,Cce,"bool");var $V;function kce(r){$V=r.wasm.cwrap(ha,null,["number","number","number","number","number"])}function Sce(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:i,offValue:a}=n,u=t.makeOutput([...o.shape,s],"int32"),p=t.dataIdMap.get(u.dataId).id,m=t.dataIdMap.get(o.dataId).id;return $V(m,s,i,a,p),u}var OV={kernelName:ha,backendName:"wasm",setupFunc:kce,kernelFunc:Sce};function vce(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(1),n}var zV={kernelName:gs,backendName:"wasm",kernelFunc:vce};function Ace(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return YT({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,i=e[0].dtype;e.forEach(l=>{b.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),b.assert(i===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],u=e.map(l=>{let m=YT({inputs:{input:l},backend:t,attrs:{dim:o}});return a.push(m),m}),p=RD({inputs:u,backend:t,attrs:{axis:o}});return a.forEach(l=>t.disposeData(l.dataId)),p}var GV={kernelName:bs,backendName:"wasm",kernelFunc:Ace};var UV;function wce(r){UV=r.wasm.cwrap(Fo,null,["number","array","number","number","array","array","number","number"])}function Nce(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,constantValue:o}}=r,s=n.map((h,g)=>h[0]+e.shape[g]+h[1]);if(b.sizeFromShape(e.shape)===0)return LD({backend:t,attrs:{shape:s,value:o,dtype:e.dtype}});let i=t.dataIdMap.get(e.dataId).id,a=t.makeOutput(s,e.dtype),p=t.dataIdMap.get(a.dataId).id,l=new Uint8Array(new Int32Array(e.shape).buffer),m=n.map(h=>h[0]),c=n.map(h=>h[1]),d=new Uint8Array(new Int32Array(m).buffer),f=new Uint8Array(new Int32Array(c).buffer);return UV(i,l,e.shape.length,Je[e.dtype],d,f,o,p),a}var QT={kernelName:Fo,backendName:"wasm",kernelFunc:Nce,setupFunc:wce};var Dce=!1,WV=At(Ro,Dce);var KV;function Pce(r){KV=r.wasm.cwrap(Lo,null,["number","number","number"])}function Ece(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,a=s,u=n,p=u;u.dtype!=="float32"&&(p=Au({backend:t,inputs:{x:n},attrs:{dtype:"float32"}}),a=t.dataIdMap.get(p.dataId).id);let l=t.makeOutput(n.shape,"float32"),m=t.dataIdMap.get(l.dataId).id;return KV(a,i,m),u.dtype!=="float32"&&t.disposeData(p.dataId),l}var VV={kernelName:Lo,backendName:"wasm",setupFunc:Pce,kernelFunc:Ece};var HV;function Mce(r){HV=r.wasm.cwrap(ga,null,["number","number","number","number"])}function Fce(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,a=e.dataIdMap.get(i.dataId).id,u=a,p=i,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=In(i,o,e),f=m;if(d){let x=e.dataIdMap.get(l.dataId).id;x!==a&&(p=l,u=x,f=C.getInnerMostAxes(f.length,p.shape.length))}C.assertAxesAreInnerMostDims("prod",f,p.shape.length);let[h,g]=C.computeOutAndReduceShapes(p.shape,f),y=b.sizeFromShape(g),T=e.makeOutput(h,p.dtype);if(b.sizeFromShape(p.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;HV(u,y,Je[T.dtype],x)}if(d&&e.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var qV={kernelName:ga,backendName:"wasm",setupFunc:Mce,kernelFunc:Fce};var Rce=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:i}=t,a=kl(n,o,s,i),u=e.makeOutput([a.length],i);return e.typedArrayFromHeap(u).set(a),u},jV={kernelName:ei,backendName:"wasm",kernelFunc:Rce};var Lce=!0,XV=At(go,Lce);var YV=mt(_o);var QV=mt($o);var ZV;function _ce(r){ZV=r.wasm.cwrap(Bo,null,["number","number","number","number","number","number","number","number","number","number"])}function Bce(r){let{backend:e,inputs:t,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:i,size:a}=n,[u,p]=a,[l,m,c,d]=o.shape,f=[l,u,p,d],h=e.dataIdMap.get(o.dataId),g;h.dtype!=="float32"&&(g=Au({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),h=e.dataIdMap.get(g.dataId));let y=h.id,T=e.makeOutput(f,"float32");if(b.sizeFromShape(o.shape)===0)return T;let x=e.dataIdMap.get(T.dataId).id;return ZV(y,l,m,c,d,u,p,s?1:0,i?1:0,x),g!=null&&e.disposeData(g.dataId),T}var JV={kernelName:Bo,backendName:"wasm",setupFunc:_ce,kernelFunc:Bce};var e4;function $ce(r){e4=r.wasm.cwrap(ba,null,["number","array","number","array","number","number"])}function Oce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,i=b.parseAxisParam(s,o.shape);if(o.shape.length===0)return zl({inputs:{x:o},backend:t});let a=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(a.dataId).id,l=new Uint8Array(new Int32Array(i).buffer),m=new Uint8Array(new Int32Array(o.shape).buffer);e4(u,l,i.length,m,o.shape.length,p);let c=dr({inputs:{x:a},attrs:{shape:o.shape},backend:t});return t.disposeData(a.dataId),c}var t4={kernelName:ba,backendName:"wasm",kernelFunc:Oce,setupFunc:$ce};var r4;function zce(r){r4=r.wasm.cwrap(va,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Gce(r){let{inputs:e,backend:t,attrs:n}=r,{image:o}=e,{radians:s,fillValue:i,center:a}=n,u=t.makeOutput(o.shape,o.dtype),p=t.dataIdMap.get(o.dataId).id,l=t.dataIdMap.get(u.dataId).id,[m,c,d,f]=o.shape,[h,g]=C.getImageCenter(a,c,d),y=i===0,T=255,x=typeof i=="number"?[i,i,i,y?0:T]:[...i,T],I=new Uint8Array(new Int32Array(x).buffer);return r4(p,m,c,d,f,s,h,g,I,x.length,l),u}var n4={kernelName:va,backendName:"wasm",kernelFunc:Gce,setupFunc:zce};var o4=mt(ya);var s4=mt(Oo);var a4;function Uce(r){a4=r.wasm.cwrap(Ta,null,["number","number","number","number","number","number","array","number","number"])}function Wce(r){let{backend:e,inputs:t,attrs:n}=r,{indices:o,updates:s}=t,{shape:i}=n,a=e.makeOutput(i,s.dtype);if(b.sizeFromShape(i)===0)return a;let{sliceRank:u,numUpdates:p,sliceSize:l,strides:m,outputSize:c}=Sd.calculateShapes(s,o,i),f=e.dataIdMap.get(o.dataId).id,g=e.dataIdMap.get(s.dataId).id,y=new Uint8Array(new Int32Array(m).buffer),T=e.dataIdMap.get(a.dataId).id;return a4(f,g,Je[s.dtype],u,p,l,y,c,T),a}var i4={kernelName:Ta,backendName:"wasm",setupFunc:Uce,kernelFunc:Wce};var u4;function Kce(r){u4=r.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Vce(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,i=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(s.dataId).id,p=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(p.dataId).id,m=n.shape.length,c=o.shape.length,d=m===0||m>1||c===1?1:b.sizeFromShape(o.shape.slice(1));return u4(i,a,u,d,l),p}var p4={kernelName:Ts,backendName:"wasm",kernelFunc:Vce,setupFunc:Kce};var l4;function Hce(r){l4=r.wasm.cwrap(Go,null,["number","number"])}function qce(r){let{backend:e,inputs:{x:t}}=r,n=e.dataIdMap.get(t.dataId).id,o=e.makeOutput(t.shape,t.dtype),s=e.dataIdMap.get(o.dataId).id;return b.sizeFromShape(o.shape)===0||l4(n,s),o}var m4={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Hce,kernelFunc:qce};var c4=mt(zo);var d4;function jce(r){d4=r.wasm.cwrap(Ko,null,["number","number","number","number"])}function Xce(r){let{backend:e,inputs:{logits:t},attrs:{dim:n}}=r,o=e.dataIdMap.get(t.dataId).id,s=e.makeOutput(t.shape,t.dtype),i=e.dataIdMap.get(s.dataId).id,a=t.shape[n],u=b.sizeFromShape(t.shape)/a;return b.sizeFromShape(s.shape)===0||d4(o,i,a,u),s}var f4={kernelName:Ko,backendName:"wasm",setupFunc:jce,kernelFunc:Xce};function Yce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:i}=n,a=b.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let N=1+s.length;N<o.shape.length;++N)u.push([0,0]);let p=QT.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),l=C.getReshaped(p.shape,s,a,!1),m=C.getPermuted(l.length,s.length,!1),c=C.getReshapedPermuted(p.shape,s,a,!1),h=dr({inputs:{x:p},backend:t,attrs:{shape:l}}),T=Si({inputs:{x:h},backend:t,attrs:{perm:m}}),k=dr({inputs:{x:T},backend:t,attrs:{shape:c}});return t.disposeData(p.dataId),t.disposeData(h.dataId),t.disposeData(T.dataId),k}var h4={kernelName:Is,backendName:"wasm",kernelFunc:Yce};var g4;function Qce(r){g4=r.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function Zce(r){let{backend:e,inputs:t}=r,{indices:n,values:o,denseShape:s,defaultValue:i}=t,a=n.shape[0],u=n.shape[1],p=e.readSync(s.dataId)[0],l=[a+p,u],m=e.dataIdMap.get(n.dataId).id,c=e.dataIdMap.get(o.dataId).id,d=e.dataIdMap.get(i.dataId).id,f=e.makeOutput(l,n.dtype),h=e.dataIdMap.get(f.dataId).id,g=e.makeOutput(l.slice(0,1),o.dtype),y=e.dataIdMap.get(g.dataId).id,T=e.makeOutput([p],"bool"),x=e.dataIdMap.get(T.dataId).id,I=e.makeOutput([a],n.dtype),k=e.dataIdMap.get(I.dataId).id,N=e.makeOutput([4],"int32"),E=e.dataIdMap.get(N.dataId).id,M=g4(m,c,Je[o.dtype],a,p,u,d,h,y,x,k,E),R=e.readSync(N.dataId),B;switch(R[0]){case 1:{B=C.getSparseFillEmptyRowsIndicesDenseShapeMismatch(R[1]);break}case 2:{B=C.getSparseFillEmptyRowsNegativeIndexErrorMessage(R[1],R[2]);break}case 3:B=C.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(R[1],R[2],R[3]);break;default:B=""}if(e.disposeData(N.dataId),B)throw e.disposeData(f.dataId),e.disposeData(g.dataId),e.disposeData(T.dataId),e.disposeData(I.dataId),new Error(B);let U=f,W=g;return M!==l[0]&&(U=Zs({inputs:{x:f},attrs:{begin:0,size:[M,u]},backend:e}),W=Zs({inputs:{x:g},attrs:{begin:0,size:M},backend:e}),e.disposeData(f.dataId),e.disposeData(g.dataId)),[U,W,T,I]}var b4={kernelName:Wu,backendName:"wasm",setupFunc:Qce,kernelFunc:Zce};var y4;function Jce(r){y4=r.wasm.cwrap(Yi,null,["number","number","number","number","number","number","number"])}function ede(r){let{backend:e,inputs:t}=r,{inputIndices:n,inputShape:o,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=e.dataIdMap.get(n.dataId).id,a=e.dataIdMap.get(o.dataId).id,u=e.dataIdMap.get(s.dataId).id,p=n.shape[0],l=b.sizeFromShape(s.shape),m=e.makeOutput([p,l],n.dtype),c=e.dataIdMap.get(m.dataId).id,d=e.makeOutput([l],s.dtype),f=e.dataIdMap.get(d.dataId).id,h=e.makeOutput([3],"int32"),g=e.dataIdMap.get(h.dataId).id;y4(i,a,u,p,c,f,g);let y=e.readSync(h.dataId),T;switch(y[0]){case 0:{T=C.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{T=C.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:T=C.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let x=Array.from(e.readSync(o.dataId)),I=Array.from(e.readSync(d.dataId));T=C.getSparseReshapeInputOutputMultipleErrorMessage(x,I);break}case 4:{let x=Array.from(e.readSync(o.dataId)),I=Array.from(e.readSync(d.dataId));T=C.getSparseReshapeInputOutputMismatchErrorMessage(x,I);break}default:T=""}if(e.disposeData(h.dataId),T)throw e.disposeData(m.dataId),e.disposeData(d.dataId),new Error(T);return[m,d]}var T4={kernelName:Yi,backendName:"wasm",setupFunc:Jce,kernelFunc:ede};var x4;function ZT(r){x4=r.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function JT(r,e){let{backend:t,inputs:n}=r,{data:o,indices:s,segmentIds:i}=n,a=s.shape[0],u=t.readSync(i.dataId,a-1,a)[0],l=a>0?u+1:0;if(l<0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=o.shape.slice();m[0]=l;let c=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(s.dataId).id,f=t.dataIdMap.get(i.dataId).id,h=t.makeOutput(m,o.dtype),g=t.dataIdMap.get(h.dataId).id,y=t.makeOutput([4],"int32"),T=t.dataIdMap.get(y.dataId).id;x4(c,Je[o.dtype],o.shape[0],d,f,g,T,e,0);let x=t.readSync(y.dataId),I;switch(x[0]){case 0:{I=C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{I=C.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:I=C.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:I=C.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:I=""}if(t.disposeData(y.dataId),I)throw t.disposeData(h.dataId),new Error(I);return h}function tde(r){return JT(r,!0)}var I4={kernelName:Ku,backendName:"wasm",setupFunc:ZT,kernelFunc:tde};function rde(r){return JT(r,!1)}var C4={kernelName:Vu,backendName:"wasm",setupFunc:ZT,kernelFunc:rde};function nde(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:i}=t,a=b.parseAxisParam(i,o.shape)[0],u=C.prepareSplitSize(o,s,a),p=new Array(o.shape.length).fill(0),l=o.shape.slice();return u.map(m=>{let c=[...l];c[a]=m;let d=Zs({inputs:{x:o},attrs:{begin:p,size:c},backend:n});return p[a]+=m,d})}var k4={kernelName:Cs,backendName:"wasm",kernelFunc:nde};var S4=mt(Uo);var v4=mt(ri);var ode=!0,A4=At(Vo,ode);var w4;function sde(r){w4=r.wasm.cwrap(vs,null,["number","number","number","number"])}function ade(r){let{backend:e,inputs:t,attrs:n}=r,{alpha:o}=n,{x:s}=t,i=e.dataIdMap.get(s.dataId).id,a=e.makeOutput(s.shape,s.dtype),u=e.dataIdMap.get(a.dataId).id;return w4(i,o,Je[s.dtype],u),a}var N4={kernelName:vs,backendName:"wasm",setupFunc:sde,kernelFunc:ade};var D4;function ide(r){D4=r.wasm.cwrap(Ia,null,["number","array","number","array","array","array","array","array","number","number"])}function ude(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{begin:s,end:i,strides:a,beginMask:u,endMask:p,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:T,end:x,strides:I}=yt.sliceInfo(o.shape,s,i,a,u,p,l,m,c),k;if(h)k=dr({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let N=yt.computeOutShape(T,x,I),E=Zs({inputs:{x:o},backend:e,attrs:{begin:T,size:N}});k=dr({inputs:{x:E},backend:e,attrs:{shape:f}}),e.disposeData(E.dataId)}else{let N=e.makeOutput(d,"float32"),E=e.dataIdMap.get(o.dataId).id,M=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),R=new Uint8Array(new Int32Array(T).buffer),B=new Uint8Array(new Int32Array(x).buffer),U=new Uint8Array(new Int32Array(I).buffer),W=new Uint8Array(new Int32Array(d).buffer),K=new Uint8Array(new Int32Array(b.computeStrides(d)).buffer),H=e.dataIdMap.get(N.dataId).id;D4(E,M,o.shape.length,R,B,U,W,K,d.length,H),k=dr({inputs:{x:N},backend:e,attrs:{shape:f}}),e.disposeData(N.dataId)}return k}var P4={kernelName:Ia,backendName:"wasm",setupFunc:ide,kernelFunc:ude};var pde=!0,E4=At(Ho,pde);var M4;function lde(r){M4=r.wasm.cwrap(Wo,null,["number","number","number","number"])}function mde(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,a=e.dataIdMap.get(i.dataId).id,u=a,p=i,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=In(i,o,e),f=m;if(d){let x=e.dataIdMap.get(l.dataId).id;x!==a&&(p=l,u=x,f=C.getInnerMostAxes(f.length,p.shape.length))}C.assertAxesAreInnerMostDims("sum",f,p.shape.length);let[h,g]=C.computeOutAndReduceShapes(p.shape,f),y=b.sizeFromShape(g),T=e.makeOutput(h,p.dtype);if(b.sizeFromShape(p.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;M4(u,y,Je[T.dtype],x)}if(d&&e.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var F4={kernelName:Wo,backendName:"wasm",setupFunc:lde,kernelFunc:mde};var R4=mt(Ca);var L4=mt(qo);var _4;function cde(r){_4=r.wasm.cwrap(An,null,["number","array","number","array","number","number"])}function dde(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,s=t.dataIdMap.get(o.dataId).id,{reps:i}=n,a=new Array(o.shape.length);for(let c=0;c<a.length;c++)a[c]=o.shape[c]*i[c];let u=new Uint8Array(new Int32Array(o.shape).buffer),p=new Uint8Array(new Int32Array(a).buffer),l=t.makeOutput(a,o.dtype),m=t.dataIdMap.get(l.dataId).id;return _4(s,u,o.shape.length,p,a.length,Je[l.dtype],m),l}var B4={kernelName:An,backendName:"wasm",setupFunc:cde,kernelFunc:dde};var $4;function fde(r){$4=r.wasm.cwrap(ka,null,["number","array","number","number","number","bool","number","number"])}var hde=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{k:o,sorted:s}=t,i=e.dataIdMap.get(n.dataId).id,a=new Uint8Array(new Int32Array(n.shape).buffer),u=n.shape.slice();u[u.length-1]=o;let p=e.makeOutput(u,n.dtype),l=e.dataIdMap.get(p.dataId).id,m=e.makeOutput(u,"int32"),c=e.dataIdMap.get(m.dataId).id;return $4(i,a,n.shape.length,Je[n.dtype],o,s,l,c),[p,m]},O4={kernelName:ka,backendName:"wasm",setupFunc:fde,kernelFunc:hde};var z4;function gde(r){z4=r.wasm.cwrap(Sa,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function bde(r){let{backend:e,inputs:t,attrs:n}=r,{image:o,transforms:s}=t,{interpolation:i,fillMode:a,fillValue:u,outputShape:p}=n,[l,m,c,d]=o.shape,[f,h]=p??[m,c],g=[l,f,h,d],y=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),T=e.makeOutput(g,o.dtype),x=e.dataIdMap.get(T.dataId).id,k=e.dataIdMap.get(o.dataId).id,E=e.dataIdMap.get(s.dataId).id,M=i==="nearest"?1:2,R;switch(a){case"constant":R=1;break;case"reflect":R=2;break;case"wrap":R=3;break;case"nearest":R=4;break;default:R=1;break}return z4(k,E,s.shape[0]>1,l,f,h,d,c,m,y,o.shape.length-1,M,R,u,x),T}var G4={kernelName:Sa,backendName:"wasm",setupFunc:gde,kernelFunc:bde};function yde(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let i=o.shape[s],a=o.shape.length,u=new Array(a-1),p=0;for(let d=0;d<a;d++)d!==s&&(u[p++]=o.shape[d]);let l=new Array(i),m=new Array(a).fill(0),c=o.shape.slice();c[s]=1;for(let d=0;d<l.length;d++)m[s]=d,l[d]=Zs({inputs:{x:o},attrs:{begin:m,size:c},backend:t});return l.map(({dataId:d,dtype:f})=>({dataId:d,dtype:f,shape:u}))}var U4={kernelName:ks,backendName:"wasm",kernelFunc:yde};function Tde(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(0),n}var W4={kernelName:Ss,backendName:"wasm",kernelFunc:Tde};var xde=[rK,nK,oK,aK,mK,dK,hK,bK,xK,CK,kK,SK,AK,wK,DK,EK,MK,FK,_K,$K,zK,UK,WK,KK,VK,HK,qK,XK,YK,QK,JK,tV,nV,sV,iV,uV,pV,iK,mV,cV,dV,fV,hV,bV,yV,xV,CV,SV,vV,NV,DV,PV,MV,RV,_V,BV,OV,zV,GV,QT,WV,VV,qV,jV,XV,YV,QV,yK,JV,t4,n4,o4,s4,i4,p4,m4,c4,IK,f4,h4,b4,T4,I4,C4,k4,S4,v4,A4,N4,P4,E4,F4,R4,L4,B4,O4,G4,pK,U4,W4];for(let r of xde)Qi(r);var _D=$();_D.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));_D.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(_D.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var GD=Sp(q4());var j4='var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}';var Q4=Sp(X4());var nx=class extends ps{constructor(e){super();this.wasm=e;this.dataIdNextNumber=1;this.wasm.tfjs.initWithThreadsCount(J4),UD=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Xa(this,qn())}write(e,t,n){let o={id:this.dataIdNextNumber++};return this.move(o,e,t,n,1),o}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=b.now();return e(),{kernelMs:b.now()-t}}move(e,t,n,o,s){let i=this.dataIdNextNumber++;if(o==="string"){let l=t;this.dataIdMap.set(e,{id:i,stringBytes:l,shape:n,dtype:o,memoryOffset:null,refCount:s});return}let a=b.sizeFromShape(n),u=a*b.bytesPerElement(o),p=this.wasm._malloc(u);this.dataIdMap.set(e,{id:i,memoryOffset:p,shape:n,dtype:o,refCount:s}),this.wasm.tfjs.registerTensor(i,a,p),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,u),p)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:o,dtype:s,shape:i,stringBytes:a}=this.dataIdMap.get(e);if(s==="string")return(t==null||t===0)&&(n==null||n>=a.length)?a:a.slice(t,n);t=t||0,n=n||b.sizeFromShape(i);let u=b.bytesPerElement(s),p=this.wasm.HEAPU8.slice(o+t*u,o+n*u);return Cde(p.buffer,s)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let o;if(n==null)o=this.write(null,e,t);else{let s=this.dataIdNextNumber++;o={id:s},this.dataIdMap.set(o,{id:s,memoryOffset:n,shape:e,dtype:t,refCount:1});let i=b.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,i,n)}return{dataId:o,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let o=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(n),i=b.sizeFromShape(e);switch(t){case"float32":return new Float32Array(o,s,i);case"int32":return new Int32Array(o,s,i);case"bool":return new Uint8Array(o,s,i);default:throw new Error(`Unknown dtype ${t}`)}}};function Ide(r){return(e,t)=>(b.fetch(r,{credentials:"same-origin"}).then(n=>{n.ok||e.env.a(`failed to load wasm binary file at '${r}'`),n.arrayBuffer().then(o=>{WebAssembly.instantiate(o,e).then(s=>{t(s.instance,s.module)})})}),{})}function Y4(r,e,t){if(rx!=null)return rx;let n="tfjs-backend-wasm.wasm";return r&&e?n="tfjs-backend-wasm-threaded-simd.wasm":r&&(n="tfjs-backend-wasm-simd.wasm"),Ag!=null&&Ag[n]!=null?Ag[n]:t+n}async function Z4(){let[r,e]=await Promise.all([$().getAsync("WASM_HAS_SIMD_SUPPORT"),$().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((t,n)=>{let o={};o.locateFile=(a,u)=>{if(a.endsWith(".worker.js")){let p=j4,l=new Blob([p],{type:"application/javascript"});return URL.createObjectURL(l)}return a.endsWith(".wasm")?Y4(r,e,vg??u):u+a},WD&&(o.instantiateWasm=Ide(Y4(r,e,vg??"")));let s=!1;o.onAbort=()=>{if(s||wg)return;wg=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let i;e&&r&&rx==null?(o.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+GD.default.toString()],{type:"text/javascript"}),i=(0,GD.default)(o)):i=(0,Q4.default)(o),i.then(a=>{s=!0,wg=!1;let u=null;a.tfjs={init:a.cwrap("init",null,[]),initWithThreadsCount:a.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:a.cwrap("get_threads_count","number",[]),registerTensor:a.cwrap("register_tensor",null,["number","number","number"]),disposeData:a.cwrap("dispose_data",u,["number"]),dispose:a.cwrap("dispose",u,[])},t({wasm:a})})})}function Cde(r,e){switch(e){case"float32":return new Float32Array(r);case"int32":return new Int32Array(r);case"bool":return new Uint8Array(r);default:throw new Error(`Unknown dtype ${e}`)}}var kde=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],rx=null,vg=null,Ag={},wg=!1,WD=!1;function Sde(r,e=!1){if(gC("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),wg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");rx=r,WD=e}function vde(r,e=!1){if(wg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof r=="string")vg=r;else{Ag=r;let t=kde.filter(n=>Ag[n]==null);if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}WD=e}var J4=-1,UD=-1;function Ade(r){J4=r}function wde(){if(UD===-1)throw new Error("WASM backend not initialized.");return UD}var Nde="0.0.0";var Dde=2;Ju("wasm",async()=>{let{wasm:r}=await Z4();return new nx(r)},Dde);var yp="3.13.0-20220210",j6r={tfjs:yp,"tfjs-core":yp,"tfjs-data":yp,"tfjs-layers":yp,"tfjs-converter":yp,"tfjs-backend-cpu":yp,"tfjs-backend-webgl":yp,"tfjs-backend-wasm":yp};export{ls as Abs,Di as Acos,Pi as Acosh,ol as AdadeltaOptimizer,sl as AdagradOptimizer,al as AdamOptimizer,il as AdamaxOptimizer,vn as Add,so as AddN,Ei as All,Mi as Any,ao as ArgMax,Za as ArgMin,Fi as Asin,Ri as Asinh,Li as Atan,Bi as Atan2,_i as Atanh,io as AvgPool,Fu as AvgPool3D,nm as AvgPool3DGrad,rm as AvgPoolGrad,nx as BackendWasm,uo as BatchMatMul,ms as BatchToSpaceND,om as Bincount,sm as BroadcastArgs,p0 as BroadcastTo,MS as Callback,zk as CallbackList,Gn as Cast,po as Ceil,Un as ClipByValue,Ru as Complex,Lu as ComplexAbs,cs as Concat,lo as Conv2D,am as Conv2DBackpropFilter,mo as Conv2DBackpropInput,_u as Conv3D,im as Conv3DBackpropFilterV2,um as Conv3DBackpropInputV2,co as Cos,fo as Cosh,ra as CropAndResize,ta as Cumsum,Uk as CustomCallback,Xa as DataStorage,pm as DenseBincount,na as DepthToSpace,ho as DepthwiseConv2dNative,lm as DepthwiseConv2dNativeBackpropFilter,mm as DepthwiseConv2dNativeBackpropInput,cm as Diag,Bu as Dilation2D,fd as Dilation2DBackpropFilter,dd as Dilation2DBackpropInput,LI as ENV,FS as EarlyStopping,$u as Einsum,bo as Elu,dm as EluGrad,nb as Environment,oa as Equal,$i as Erf,yo as Exp,ds as ExpandDims,sa as Expm1,fm as FFT,Ja as Fill,aa as FlipLeftRight,To as Floor,xo as FloorDiv,Np as FromPixels,Io as FusedBatchNorm,ws as FusedConv2D,Ns as FusedDepthwiseConv2D,Gc as GPGPUContext,ia as GatherNd,fs as GatherV2,lv as GraphModel,ua as Greater,Co as GreaterEqual,Gk as History,hm as IFFT,Wn as Identity,Ou as Imag,Et as InputSpec,Oi as IsFinite,zi as IsInf,Gi as IsNan,ps as KernelBackend,zu as LRN,bm as LRNGrad,sy as LayerVariable,ts as LayersModel,ko as LeakyRelu,pa as Less,la as LessEqual,gm as LinSpace,So as Log,Ui as Log1p,l0 as LogSoftmax,ma as LogicalAnd,Wi as LogicalNot,wp as LogicalOr,zh as MathBackendCPU,rg as MathBackendWebGL,vo as Max,wo as MaxPool,Gu as MaxPool3D,Tm as MaxPool3DGrad,ym as MaxPoolGrad,xm as MaxPoolWithArgmax,Ao as Maximum,No as Mean,Do as Min,Po as Minimum,Eo as MirrorPad,Ki as Mod,ul as MomentumOptimizer,Im as Multinomial,Mo as Multiply,hs as Neg,da as NonMaxSuppressionV3,Vi as NonMaxSuppressionV4,fa as NonMaxSuppressionV5,ca as NotEqual,K0 as OP_SCOPE_SUFFIX,ha as OneHot,gs as OnesLike,Jr as Optimizer,mi as OptimizerConstructors,bs as Pack,Fo as PadV2,Lde as Pool,Ro as Pow,Lo as Prelu,ga as Prod,pl as RMSPropOptimizer,Ws as RNN,ei as Range,_0 as Rank,Uu as Real,go as RealDiv,Hi as Reciprocal,Ea as Reduction,_o as Relu,$o as Relu6,ys as Reshape,Bo as ResizeBilinear,km as ResizeBilinearGrad,ti as ResizeNearestNeighbor,Cm as ResizeNearestNeighborGrad,ba as Reverse,va as RotateWithOffset,ya as Round,Oo as Rsqrt,du as SGDOptimizer,Ta as ScatterNd,Ts as Select,qi as Selu,lc as Sequential,Go as Sigmoid,ji as Sign,zo as Sin,xa as Sinh,xs as Slice,Ko as Softmax,Xi as Softplus,Is as SpaceToBatchND,Wu as SparseFillEmptyRows,Yi as SparseReshape,Ku as SparseSegmentMean,Vu as SparseSegmentSum,Hu as SparseToDense,Cs as SplitV,Uo as Sqrt,ri as Square,Vo as SquaredDifference,vs as Step,Ia as StridedSlice,qu as StringNGrams,Sm as StringSplit,vm as StringToHashBucketFast,Ho as Sub,Wo as Sum,hn as SymbolicTensor,Ca as Tan,qo as Tanh,Xe as Tensor,gt as TensorBuffer,An as Tile,ka as TopK,Sa as Transform,jo as Transpose,Am as Unique,ks as Unpack,ju as UnsortedSegmentSum,Qu as Variable,Ss as ZerosLike,As as _FusedMatMul,_t as abs,bC as acos,yC as acosh,X as add,TC as addN,wd as all,Bm as any,su as argMax,xC as argMin,IC as asin,CC as asinh,kC as atan,SC as atan2,vC as atanh,$p as avgPool,Nd as avgPool3d,U2 as backend,C as backend_util,Sj as basicLSTMCell,ai as batchNorm,DC as batchNorm2d,PC as batchNorm3d,EC as batchNorm4d,Op as batchToSpaceND,Dd as bincount,w_e as booleanMaskAsync,MC as broadcastArgs,zp as broadcastTo,wr as broadcast_util,Tb as browser,ke as buffer,t9 as callbacks,J as cast,FC as ceil,Lr as clipByValue,wn as clone,Hn as complex,it as concat,RC as concat1d,LC as concat2d,_C as concat3d,BC as concat4d,sM as constraints,Pd as conv1d,jn as conv2d,Ed as conv2dTranspose,Md as conv3d,$C as conv3dTranspose,Ude as copyRegisteredKernels,Gp as cos,Fd as cosh,_b as cosineWindow,Rd as cumsum,pn as customGrad,SR as data,OC as denseBincount,gC as deprecationWarn,zC as depthToSpace,iu as depthwiseConv2d,a9 as deregisterOp,oi as device_util,Jj as diag,GC as dilation2d,xye as disableDeprecationWarnings,Fe as dispose,Iye as disposeVariables,me as div,UC as divNoNan,a5 as dot,f1 as dropout,WC as einsum,uu as elu,Tye as enableDebugMode,yye as enableProdMode,h1 as enclosingPowerOfTwo,qn as engine,$ as env,Wr as equal,KC as erf,pr as exp,Nr as expandDims,VC as expm1,zm as eye,Qp as fft,Da as fill,wye as findBackend,Nye as findBackendFactory,pu as floor,Ad as floorDiv,X$ as forceHalfFloat,Rs as fused,ii as gather,c1 as gatherND,xb as gather_util,vye as getBackend,$I as getGradient,gd as getKernel,ob as getKernelsForBackend,wde as getThreadsCount,XA as gpgpu_util,E5 as grad,M5 as grads,tr as greater,Qo as greaterEqual,tp as ifft,Up as imag,En as image,LBe as inTopKAsync,vM as initializers,Qk as input,Ur as io,Yd as irfft,I5 as isFinite,k5 as isInf,HC as isNaN,Wt as keep,br as kernel_impls,iF as layers,Wp as leakyRelu,Ld as less,Zo as lessEqual,rP as linalg,qC as linspace,J9 as loadGraphModel,dZ as loadLayersModel,jC as localResponseNormalization,_r as log,Kp as log1p,$5 as logSigmoid,_d as logSoftmax,JC as logSumExp,Vr as logicalAnd,Vp as logicalNot,$d as logicalOr,Y5 as logicalXor,QKe as losses,Ke as matMul,S2 as math,Zr as max,Hp as maxPool,Od as maxPool3d,ek as maxPoolWithArgmax,Xn as maximum,Ft as mean,vd as memory,r8 as meshgrid,uF as metrics,Gm as min,lu as minimum,tk as mirrorPad,rk as mod,mZ as model,pF as models,Um as moments,Q_e as movingAverage,L as mul,l8 as multiRNNCell,nk as multinomial,Qe as neg,Ck as nextFrame,Rb as norm,pi as notEqual,nu as oneHot,lr as ones,Dr as onesLike,w as op,h8 as outerProduct,Dn as pad,y8 as pad1d,x8 as pad2d,C8 as pad3d,S8 as pad4d,D8 as pool,Pn as pow,jp as prelu,aC as print,zd as prod,Cye as profile,R8 as rand,U8 as randomGamma,Pb as randomNormal,Pa as randomUniform,mu as range,Sye as ready,ep as real,ck as reciprocal,Ju as registerBackend,fZ as registerCallbackConstructor,c0 as registerGradient,Qi as registerKernel,s9 as registerOp,lF as regularizers,Hr as relu,Ud as relu6,Aye as removeBackend,_ as reshape,gr as reverse,Q8 as reverse1d,J8 as reverse2d,tX as reverse3d,nX as reverse4d,Zp as rfft,Wd as round,Kd as rsqrt,ce as scalar,l1 as scatterND,Sd as scatter_util,Vd as selu,dk as separableConv2d,cZ as sequential,re as serialization,H6 as setBackend,Dye as setPlatform,Ade as setThreadsCount,Sde as setWasmPath,vde as setWasmPaths,oA as setWebGLContext,fk as setdiff1dAsync,wc as shared,un as sigmoid,hk as sign,SKe as signal,Hd as sin,qd as sinh,ze as slice,jd as slice1d,Eb as slice2d,Xd as slice3d,Km as slice4d,yt as slice_util,Yp as softmax,ui as softplus,qp as spaceToBatchND,Jd as sparse,Lb as sparseToDense,TKe as spectral,Ir as split,Rt as sqrt,qe as square,Qd as squaredDifference,ln as squeeze,mr as stack,cu as step,gk as stridedSlice,Kb as string,le as sub,he as sum,Zi as sumOutType,bk as tan,au as tanh,Fr as tensor,$t as tensor1d,li as tensor2d,lC as tensor3d,DX as tensor4d,PX as tensor5d,EX as tensor6d,Ms as tensor_util,G2 as test_util,G as tidy,Kr as tile,kye as time,yk as topk,ll as train,He as transpose,Jp as truncatedNormal,Mb as unique,Gde as unregisterGradient,zde as unregisterKernel,Tk as unsortedSegmentSum,Br as unstack,Ut as upcastType,b as util,F5 as valueAndGrad,R5 as valueAndGrads,xk as variable,Ab as variableGrads,j6r as version,eee as version_converter,V6 as version_core,Nee as version_cpu,vf as version_layers,Nde as version_wasm,goe as version_webgl,ZHt as webgl,Fc as webgl_util,eK as webgpu,Bt as where,Zd as whereAsync,bt as zeros,De as zerosLike};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
//# sourceMappingURL=tfjs.min.esm.js.map
