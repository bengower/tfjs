var L6=Object.create;var rb=Object.defineProperty;var $6=Object.getOwnPropertyDescriptor;var B6=Object.getOwnPropertyNames;var O6=Object.getPrototypeOf,z6=Object.prototype.hasOwnProperty;var G6=r=>rb(r,"__esModule",{value:!0});var b0=(r=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(r,{get:(e,t)=>(typeof require!="undefined"?require:e)[t]}):r)(function(r){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+r+'" is not supported')});var Ar=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),je=(r,e)=>{for(var t in e)rb(r,t,{get:e[t],enumerable:!0})},U6=(r,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of B6(e))!z6.call(r,o)&&(t||o!=="default")&&rb(r,o,{get:()=>e[o],enumerable:!(n=$6(e,o))||n.enumerable});return r},Ml=(r,e)=>U6(G6(rb(r!=null?L6(O6(r)):{},"default",!e&&r&&r.__esModule?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);var O0=Ar((oge,B0)=>{B0.exports=er;var As=null;try{As=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function er(r,e,t){this.low=r|0,this.high=e|0,this.unsigned=!!t}er.prototype.__isLong__;Object.defineProperty(er.prototype,"__isLong__",{value:!0});function Hn(r){return(r&&r.__isLong__)===!0}er.isLong=Hn;var D0={},P0={};function $l(r,e){var t,n,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(n=P0[r],n)?n:(t=tr(r,(r|0)<0?-1:0,!0),o&&(P0[r]=t),t)):(r|=0,(o=-128<=r&&r<128)&&(n=D0[r],n)?n:(t=tr(r,r<0?-1:0,!1),o&&(D0[r]=t),t))}er.fromInt=$l;function ws(r,e){if(isNaN(r))return e?Ll:Ns;if(e){if(r<0)return Ll;if(r>=E0)return $0}else{if(r<=-M0)return Vn;if(r+1>=M0)return L0}return r<0?ws(-r,e).neg():tr(r%_m|0,r/_m|0,e)}er.fromNumber=ws;function tr(r,e,t){return new er(r,e,t)}er.fromBits=tr;var ib=Math.pow;function FC(r,e,t){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return Ns;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var n;if((n=r.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return FC(r.substring(1),e,t).neg();for(var o=ws(ib(t,8)),s=Ns,a=0;a<r.length;a+=8){var i=Math.min(8,r.length-a),u=parseInt(r.substring(a,a+i),t);if(i<8){var l=ws(ib(t,i));s=s.mul(l).add(ws(u))}else s=s.mul(o),s=s.add(ws(u))}return s.unsigned=e,s}er.fromString=FC;function Ea(r,e){return typeof r=="number"?ws(r,e):typeof r=="string"?FC(r,e):tr(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}er.fromValue=Ea;var F0=1<<16,cj=1<<24,_m=F0*F0,E0=_m*_m,M0=E0/2,R0=$l(cj),Ns=$l(0);er.ZERO=Ns;var Ll=$l(0,!0);er.UZERO=Ll;var Em=$l(1);er.ONE=Em;var _0=$l(1,!0);er.UONE=_0;var PC=$l(-1);er.NEG_ONE=PC;var L0=tr(-1,2147483647,!1);er.MAX_VALUE=L0;var $0=tr(-1,-1,!0);er.MAX_UNSIGNED_VALUE=$0;var Vn=tr(0,-2147483648,!1);er.MIN_VALUE=Vn;var xe=er.prototype;xe.toInt=function(){return this.unsigned?this.low>>>0:this.low};xe.toNumber=function(){return this.unsigned?(this.high>>>0)*_m+(this.low>>>0):this.high*_m+(this.low>>>0)};xe.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Vn)){var t=ws(e),n=this.div(t),o=n.mul(t).sub(this);return n.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var s=ws(ib(e,6),this.unsigned),a=this,i="";;){var u=a.div(s),l=a.sub(u.mul(s)).toInt()>>>0,p=l.toString(e);if(a=u,a.isZero())return p+i;for(;p.length<6;)p="0"+p;i=""+p+i}};xe.getHighBits=function(){return this.high};xe.getHighBitsUnsigned=function(){return this.high>>>0};xe.getLowBits=function(){return this.low};xe.getLowBitsUnsigned=function(){return this.low>>>0};xe.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Vn)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return this.high!=0?t+33:t+1};xe.isZero=function(){return this.high===0&&this.low===0};xe.eqz=xe.isZero;xe.isNegative=function(){return!this.unsigned&&this.high<0};xe.isPositive=function(){return this.unsigned||this.high>=0};xe.isOdd=function(){return(this.low&1)===1};xe.isEven=function(){return(this.low&1)===0};xe.equals=function(e){return Hn(e)||(e=Ea(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};xe.eq=xe.equals;xe.notEquals=function(e){return!this.eq(e)};xe.neq=xe.notEquals;xe.ne=xe.notEquals;xe.lessThan=function(e){return this.comp(e)<0};xe.lt=xe.lessThan;xe.lessThanOrEqual=function(e){return this.comp(e)<=0};xe.lte=xe.lessThanOrEqual;xe.le=xe.lessThanOrEqual;xe.greaterThan=function(e){return this.comp(e)>0};xe.gt=xe.greaterThan;xe.greaterThanOrEqual=function(e){return this.comp(e)>=0};xe.gte=xe.greaterThanOrEqual;xe.ge=xe.greaterThanOrEqual;xe.compare=function(e){if(Hn(e)||(e=Ea(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};xe.comp=xe.compare;xe.negate=function(){return!this.unsigned&&this.eq(Vn)?Vn:this.not().add(Em)};xe.neg=xe.negate;xe.add=function(e){Hn(e)||(e=Ea(e));var t=this.high>>>16,n=this.high&65535,o=this.low>>>16,s=this.low&65535,a=e.high>>>16,i=e.high&65535,u=e.low>>>16,l=e.low&65535,p=0,m=0,c=0,d=0;return d+=s+l,c+=d>>>16,d&=65535,c+=o+u,m+=c>>>16,c&=65535,m+=n+i,p+=m>>>16,m&=65535,p+=t+a,p&=65535,tr(c<<16|d,p<<16|m,this.unsigned)};xe.subtract=function(e){return Hn(e)||(e=Ea(e)),this.add(e.neg())};xe.sub=xe.subtract;xe.multiply=function(e){if(this.isZero())return Ns;if(Hn(e)||(e=Ea(e)),As){var t=As.mul(this.low,this.high,e.low,e.high);return tr(t,As.get_high(),this.unsigned)}if(e.isZero())return Ns;if(this.eq(Vn))return e.isOdd()?Vn:Ns;if(e.eq(Vn))return this.isOdd()?Vn:Ns;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(R0)&&e.lt(R0))return ws(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,o=this.high&65535,s=this.low>>>16,a=this.low&65535,i=e.high>>>16,u=e.high&65535,l=e.low>>>16,p=e.low&65535,m=0,c=0,d=0,f=0;return f+=a*p,d+=f>>>16,f&=65535,d+=s*p,c+=d>>>16,d&=65535,d+=a*l,c+=d>>>16,d&=65535,c+=o*p,m+=c>>>16,c&=65535,c+=s*l,m+=c>>>16,c&=65535,c+=a*u,m+=c>>>16,c&=65535,m+=n*p+o*l+s*u+a*i,m&=65535,tr(d<<16|f,m<<16|c,this.unsigned)};xe.mul=xe.multiply;xe.divide=function(e){if(Hn(e)||(e=Ea(e)),e.isZero())throw Error("division by zero");if(As){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?As.div_u:As.div_s)(this.low,this.high,e.low,e.high);return tr(t,As.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Ll:Ns;var n,o,s;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Ll;if(e.gt(this.shru(1)))return _0;s=Ll}else{if(this.eq(Vn)){if(e.eq(Em)||e.eq(PC))return Vn;if(e.eq(Vn))return Em;var a=this.shr(1);return n=a.div(e).shl(1),n.eq(Ns)?e.isNegative()?Em:PC:(o=this.sub(e.mul(n)),s=n.add(o.div(e)),s)}else if(e.eq(Vn))return this.unsigned?Ll:Ns;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=Ns}for(o=this;o.gte(e);){n=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),u=i<=48?1:ib(2,i-48),l=ws(n),p=l.mul(e);p.isNegative()||p.gt(o);)n-=u,l=ws(n,this.unsigned),p=l.mul(e);l.isZero()&&(l=Em),s=s.add(l),o=o.sub(p)}return s};xe.div=xe.divide;xe.modulo=function(e){if(Hn(e)||(e=Ea(e)),As){var t=(this.unsigned?As.rem_u:As.rem_s)(this.low,this.high,e.low,e.high);return tr(t,As.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};xe.mod=xe.modulo;xe.rem=xe.modulo;xe.not=function(){return tr(~this.low,~this.high,this.unsigned)};xe.and=function(e){return Hn(e)||(e=Ea(e)),tr(this.low&e.low,this.high&e.high,this.unsigned)};xe.or=function(e){return Hn(e)||(e=Ea(e)),tr(this.low|e.low,this.high|e.high,this.unsigned)};xe.xor=function(e){return Hn(e)||(e=Ea(e)),tr(this.low^e.low,this.high^e.high,this.unsigned)};xe.shiftLeft=function(e){return Hn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?tr(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):tr(0,this.low<<e-32,this.unsigned)};xe.shl=xe.shiftLeft;xe.shiftRight=function(e){return Hn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?tr(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):tr(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};xe.shr=xe.shiftRight;xe.shiftRightUnsigned=function(e){if(Hn(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var n=this.low;return tr(n>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?tr(t,0,this.unsigned):tr(t>>>e-32,0,this.unsigned)};xe.shru=xe.shiftRightUnsigned;xe.shr_u=xe.shiftRightUnsigned;xe.toSigned=function(){return this.unsigned?tr(this.low,this.high,!1):this};xe.toUnsigned=function(){return this.unsigned?this:tr(this.low,this.high,!0)};xe.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};xe.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};xe.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};er.fromBytes=function(e,t,n){return n?er.fromBytesLE(e,t):er.fromBytesBE(e,t)};er.fromBytesLE=function(e,t){return new er(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};er.fromBytesBE=function(e,t){return new er(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}});var A2=Ar(()=>{});var w2=Ar(()=>{});var tP=Ar((eP,hk)=>{(function(r,e,t){function n(i){var u=this,l=a();u.next=function(){var p=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=p-(u.c=p|0)},u.c=1,u.s0=l(" "),u.s1=l(" "),u.s2=l(" "),u.s0-=l(i),u.s0<0&&(u.s0+=1),u.s1-=l(i),u.s1<0&&(u.s1+=1),u.s2-=l(i),u.s2<0&&(u.s2+=1),l=null}function o(i,u){return u.c=i.c,u.s0=i.s0,u.s1=i.s1,u.s2=i.s2,u}function s(i,u){var l=new n(i),p=u&&u.state,m=l.next;return m.int32=function(){return l.next()*4294967296|0},m.double=function(){return m()+(m()*2097152|0)*11102230246251565e-32},m.quick=m,p&&(typeof p=="object"&&o(p,l),m.state=function(){return o(l,{})}),m}function a(){var i=4022871197,u=function(l){l=String(l);for(var p=0;p<l.length;p++){i+=l.charCodeAt(p);var m=.02519603282416938*i;i=m>>>0,m-=i,m*=i,i=m>>>0,m-=i,i+=m*4294967296}return(i>>>0)*23283064365386963e-26};return u}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(eP,typeof hk=="object"&&hk,typeof define=="function"&&define)});var nP=Ar((rP,gk)=>{(function(r,e,t){function n(a){var i=this,u="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var p=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^p^p>>>8},a===(a|0)?i.x=a:u+=a;for(var l=0;l<u.length+64;l++)i.x^=u.charCodeAt(l)|0,i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i}function s(a,i){var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(rP,typeof gk=="object"&&gk,typeof define=="function"&&define)});var sP=Ar((oP,bk)=>{(function(r,e,t){function n(a){var i=this,u="";i.next=function(){var p=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(p^p<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,a===(a|0)?i.x=a:u+=a;for(var l=0;l<u.length+64;l++)i.x^=u.charCodeAt(l)|0,l==u.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i.v=a.v,i.d=a.d,i}function s(a,i){var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(oP,typeof bk=="object"&&bk,typeof define=="function"&&define)});var iP=Ar((aP,yk)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var l=i.x,p=i.i,m,c,d;return m=l[p],m^=m>>>7,c=m^m<<24,m=l[p+1&7],c^=m^m>>>10,m=l[p+3&7],c^=m^m>>>3,m=l[p+4&7],c^=m^m<<7,m=l[p+7&7],m=m^m<<13,c^=m^m<<9,l[p]=c,i.i=p+1&7,c};function u(l,p){var m,c,d=[];if(p===(p|0))c=d[0]=p;else for(p=""+p,m=0;m<p.length;++m)d[m&7]=d[m&7]<<15^p.charCodeAt(m)+d[m+1&7]<<13;for(;d.length<8;)d.push(0);for(m=0;m<8&&d[m]===0;++m);for(m==8?c=d[7]=-1:c=d[m],l.x=d,l.i=0,m=256;m>0;--m)l.next()}u(i,a)}function o(a,i){return i.x=a.x.slice(),i.i=a.i,i}function s(a,i){a==null&&(a=+new Date);var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(l.x&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(aP,typeof yk=="object"&&yk,typeof define=="function"&&define)});var lP=Ar((uP,Tk)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var l=i.w,p=i.X,m=i.i,c,d;return i.w=l=l+1640531527|0,d=p[m+34&127],c=p[m=m+1&127],d^=d<<13,c^=c<<17,d^=d>>>15,c^=c>>>12,d=p[m]=d^c,i.i=m,d+(l^l>>>16)|0};function u(l,p){var m,c,d,f,h,g=[],y=128;for(p===(p|0)?(c=p,p=null):(p=p+"\0",c=0,y=Math.max(y,p.length)),d=0,f=-32;f<y;++f)p&&(c^=p.charCodeAt((f+32)%p.length)),f===0&&(h=c),c^=c<<10,c^=c>>>15,c^=c<<4,c^=c>>>13,f>=0&&(h=h+1640531527|0,m=g[f&127]^=c+h,d=m==0?d+1:0);for(d>=128&&(g[(p&&p.length||0)&127]=-1),d=127,f=4*128;f>0;--f)c=g[d+34&127],m=g[d=d+1&127],c^=c<<13,m^=m<<17,c^=c>>>15,m^=m>>>12,g[d]=c^m;l.w=h,l.X=g,l.i=d}u(i,a)}function o(a,i){return i.i=a.i,i.w=a.w,i.X=a.X.slice(),i}function s(a,i){a==null&&(a=+new Date);var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(l.X&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(uP,typeof Tk=="object"&&Tk,typeof define=="function"&&define)});var mP=Ar((pP,xk)=>{(function(r,e,t){function n(a){var i=this,u="";i.next=function(){var p=i.b,m=i.c,c=i.d,d=i.a;return p=p<<25^p>>>7^m,m=m-c|0,c=c<<24^c>>>8^d,d=d-p|0,i.b=p=p<<20^p>>>12^m,i.c=m=m-c|0,i.d=c<<16^m>>>16^d,i.a=d-p|0},i.a=0,i.b=0,i.c=-1640531527,i.d=1367130551,a===Math.floor(a)?(i.a=a/4294967296|0,i.b=a|0):u+=a;for(var l=0;l<u.length+20;l++)i.b^=u.charCodeAt(l)|0,i.next()}function o(a,i){return i.a=a.a,i.b=a.b,i.c=a.c,i.d=a.d,i}function s(a,i){var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(pP,typeof xk=="object"&&xk,typeof define=="function"&&define)});var cP=Ar(()=>{});var fP=Ar((dP,ty)=>{(function(r,e,t){var n=256,o=6,s=52,a="random",i=t.pow(n,o),u=t.pow(2,s),l=u*2,p=n-1,m;function c(x,I,k){var w=[];I=I==!0?{entropy:!0}:I||{};var F=g(h(I.entropy?[x,T(e)]:x??y(),3),w),M=new d(w),R=function(){for(var L=M.g(o),O=i,W=0;L<u;)L=(L+W)*n,O*=n,W=M.g(1);for(;L>=l;)L/=2,O/=2,W>>>=1;return(L+W)/O};return R.int32=function(){return M.g(4)|0},R.quick=function(){return M.g(4)/4294967296},R.double=R,g(T(M.S),e),(I.pass||k||function(L,O,W,V){return V&&(V.S&&f(V,M),L.state=function(){return f(M,{})}),W?(t[a]=L,O):L})(R,F,"global"in I?I.global:this==t,I.state)}function d(x){var I,k=x.length,w=this,F=0,M=w.i=w.j=0,R=w.S=[];for(k||(x=[k++]);F<n;)R[F]=F++;for(F=0;F<n;F++)R[F]=R[M=p&M+x[F%k]+(I=R[F])],R[M]=I;(w.g=function(L){for(var O,W=0,V=w.i,j=w.j,q=w.S;L--;)O=q[V=p&V+1],W=W*n+q[p&(q[V]=q[j=p&j+O])+(q[j]=O)];return w.i=V,w.j=j,W})(n)}function f(x,I){return I.i=x.i,I.j=x.j,I.S=x.S.slice(),I}function h(x,I){var k=[],w=typeof x,F;if(I&&w=="object")for(F in x)try{k.push(h(x[F],I-1))}catch{}return k.length?k:w=="string"?x:x+"\0"}function g(x,I){for(var k=x+"",w,F=0;F<k.length;)I[p&F]=p&(w^=I[p&F]*19)+k.charCodeAt(F++);return T(I)}function y(){try{var x;return m&&(x=m.randomBytes)?x=x(n):(x=new Uint8Array(n),(r.crypto||r.msCrypto).getRandomValues(x)),T(x)}catch{var I=r.navigator,k=I&&I.plugins;return[+new Date,r,k,r.screen,T(e)]}}function T(x){return String.fromCharCode.apply(0,x)}if(g(t.random(),e),typeof ty=="object"&&ty.exports){ty.exports=c;try{m=cP()}catch{}}else typeof define=="function"&&define.amd?define(function(){return c}):t["seed"+a]=c})(typeof self<"u"?self:dP,[],Math)});var qd=Ar((yEe,hP)=>{var cY=tP(),dY=nP(),fY=sP(),hY=iP(),gY=lP(),bY=mP(),jl=fP();jl.alea=cY;jl.xor128=dY;jl.xorwow=fY;jl.xorshift7=hY;jl.xor4096=gY;jl.tychei=bY;hP.exports=jl});var dv=Ar(()=>{});var Eh=Ar(()=>{});var Tg=Ar(()=>{});var BD=Ar(()=>{});var Rq=Ar(()=>{});var Eq=Ar(()=>{});var _q=Ar((Rx,zD)=>{var OD=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e){e=e||{};function t(){return Be.buffer!=Ir&&ta(Be.buffer),Vp}function n(){return Be.buffer!=Ir&&ta(Be.buffer),Hp}function o(){return Be.buffer!=Ir&&ta(Be.buffer),fd}function s(){return Be.buffer!=Ir&&ta(Be.buffer),kg}function a(){return Be.buffer!=Ir&&ta(Be.buffer),Sg}function i(){return Be.buffer!=Ir&&ta(Be.buffer),vg}function u(){return Be.buffer!=Ir&&ta(Be.buffer),Ag}var l=typeof e<"u"?e:{},p,m;l.ready=new Promise(function(N,E){p=N,m=E});var c;typeof process<"u"&&process.listeners&&(c={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var d=Object.assign({},l),f=[],h="./this.program",g=(N,E)=>{throw E},y=typeof window=="object",T=typeof importScripts=="function",x=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",I=l.ENVIRONMENT_IS_PTHREAD||!1,k="";function w(N){return l.locateFile?l.locateFile(N,k):k+N}var F,M,R,L;function O(N){if(N instanceof kd)return;H("exiting due to exception: "+N)}var W,V,j;if(x){T?k=Tg().dirname(k)+"/":k=__dirname+"/",j=()=>{V||(W=Eh(),V=Tg())},F=function(G,X){return j(),G=V.normalize(G),W.readFileSync(G,X?void 0:"utf8")},R=E=>{var G=F(E,!0);return G.buffer||(G=new Uint8Array(G)),G},M=(E,G,X)=>{j(),E=V.normalize(E),W.readFile(E,function(ge,Ce){ge?X(ge):G(Ce.buffer)})},process.argv.length>1&&(h=process.argv[1].replace(/\\/g,"/")),f=process.argv.slice(2),process.on("uncaughtException",function(E){if(!(E instanceof kd))throw E}),process.on("unhandledRejection",function(E){throw E}),g=(E,G)=>{if(wl())throw process.exitCode=E,G;O(G),process.exit(E)},l.inspect=function(){return"[Emscripten Module object]"};let N;try{N=BD()}catch(E){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),E}global.Worker=N.Worker}else(y||T)&&(T?k=self.location.href:typeof document<"u"&&document.currentScript&&(k=document.currentScript.src),r&&(k=r),k.indexOf("blob:")!==0?k=k.substr(0,k.replace(/[?#].*/,"").lastIndexOf("/")+1):k="",x||(F=N=>{var E=new XMLHttpRequest;return E.open("GET",N,!1),E.send(null),E.responseText},T&&(R=N=>{var E=new XMLHttpRequest;return E.open("GET",N,!1),E.responseType="arraybuffer",E.send(null),new Uint8Array(E.response)}),M=(N,E,G)=>{var X=new XMLHttpRequest;X.open("GET",N,!0),X.responseType="arraybuffer",X.onload=()=>{if(X.status==200||X.status==0&&X.response){E(X.response);return}G()},X.onerror=G,X.send(null)}),L=N=>document.title=N);x&&typeof performance>"u"&&(global.performance=Rq().performance);var q=console.log.bind(console),Y=console.warn.bind(console);x&&(j(),q=N=>W.writeSync(1,N+`
`),Y=N=>W.writeSync(2,N+`
`));var J=l.print||q,H=l.printErr||Y;Object.assign(l,d),d=null,l.arguments&&(f=l.arguments),l.thisProgram&&(h=l.thisProgram),l.quit&&(g=l.quit);var oe=4;function se(N){se.shown||(se.shown={}),se.shown[N]||(se.shown[N]=1,H(N))}function ae(N,E){if(typeof WebAssembly.Function=="function"){for(var G={i:"i32",j:"i64",f:"f32",d:"f64"},X={parameters:[],results:E[0]=="v"?[]:[G[E[0]]]},ge=1;ge<E.length;++ge)X.parameters.push(G[E[ge]]);return new WebAssembly.Function(X,N)}var Ce=[1,0,1,96],Ne=E.slice(0,1),Ue=E.slice(1),lr={i:127,j:126,f:125,d:124};Ce.push(Ue.length);for(var ge=0;ge<Ue.length;++ge)Ce.push(lr[Ue[ge]]);Ne=="v"?Ce.push(0):Ce=Ce.concat([1,lr[Ne]]),Ce[1]=Ce.length-2;var sa=new Uint8Array([0,97,115,109,1,0,0,0].concat(Ce,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),aa=new WebAssembly.Module(sa),tb=new WebAssembly.Instance(aa,{e:{f:N}}),Sd=tb.exports.f;return Sd}var pe=[],ie;function be(){if(pe.length)return pe.pop();try{eo.grow(1)}catch(N){throw N instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":N}return eo.length-1}function fe(N,E){for(var G=N;G<N+E;G++){var X=Zp(G);X&&ie.set(X,G)}}var Ie=0,we=N=>{Ie=N},Ee=Atomics.load,Le=Atomics.store,Ze=Atomics.compareExchange,ee;l.wasmBinary&&(ee=l.wasmBinary);var gt=l.noExitRuntime||!0;typeof WebAssembly!="object"&&jp("no native wasm support detected");var Be,Rt,Dt=!1,pt;function Jt(N,E){N||jp(E)}function Ot(N){var E=l["_"+N];return E}function nn(N,E,G,X,ge){var Ce={string:function(zn){var om=0;if(zn!=null&&zn!==0){var g0=(zn.length<<2)+1;om=nm(g0),On(zn,om,g0)}return om},array:function(zn){var om=nm(zn.length);return Iu(zn,om),om}};function Ne(zn){return E==="string"?jr(zn):E==="boolean"?Boolean(zn):zn}var Ue=Ot(N),lr=[],sa=0;if(X)for(var aa=0;aa<X.length;aa++){var tb=Ce[G[aa]];tb?(sa===0&&(sa=bC()),lr[aa]=tb(X[aa])):lr[aa]=X[aa]}var Sd=Ue.apply(null,lr);function _6(zn){return sa!==0&&Zg(sa),Ne(zn)}return Sd=_6(Sd),Sd}function Ht(N,E,G,X){G=G||[];var ge=G.every(function(Ne){return Ne==="number"}),Ce=E!=="string";return Ce&&ge&&!X?Ot(N):function(){return nn(N,E,G,arguments,X)}}var Js=1;function Lr(N){var E=new TextDecoder(N);this.decode=G=>(G.buffer instanceof SharedArrayBuffer&&(G=new Uint8Array(G)),E.decode.call(E,G))}var on=typeof TextDecoder<"u"?new Lr("utf8"):void 0;function sn(N,E,G){for(var X=E+G,ge=E;N[ge]&&!(ge>=X);)++ge;if(ge-E>16&&N.subarray&&on)return on.decode(N.subarray(E,ge));for(var Ce="";E<ge;){var Ne=N[E++];if(!(Ne&128)){Ce+=String.fromCharCode(Ne);continue}var Ue=N[E++]&63;if((Ne&224)==192){Ce+=String.fromCharCode((Ne&31)<<6|Ue);continue}var lr=N[E++]&63;if((Ne&240)==224?Ne=(Ne&15)<<12|Ue<<6|lr:Ne=(Ne&7)<<18|Ue<<12|lr<<6|N[E++]&63,Ne<65536)Ce+=String.fromCharCode(Ne);else{var sa=Ne-65536;Ce+=String.fromCharCode(55296|sa>>10,56320|sa&1023)}}return Ce}function jr(N,E){return N?sn(n(),N,E):""}function os(N,E,G,X){if(!(X>0))return 0;for(var ge=G,Ce=G+X-1,Ne=0;Ne<N.length;++Ne){var Ue=N.charCodeAt(Ne);if(Ue>=55296&&Ue<=57343){var lr=N.charCodeAt(++Ne);Ue=65536+((Ue&1023)<<10)|lr&1023}if(Ue<=127){if(G>=Ce)break;E[G++]=Ue}else if(Ue<=2047){if(G+1>=Ce)break;E[G++]=192|Ue>>6,E[G++]=128|Ue&63}else if(Ue<=65535){if(G+2>=Ce)break;E[G++]=224|Ue>>12,E[G++]=128|Ue>>6&63,E[G++]=128|Ue&63}else{if(G+3>=Ce)break;E[G++]=240|Ue>>18,E[G++]=128|Ue>>12&63,E[G++]=128|Ue>>6&63,E[G++]=128|Ue&63}}return E[G]=0,G-ge}function On(N,E,G){return os(N,n(),E,G)}function ea(N){for(var E=0,G=0;G<N.length;++G){var X=N.charCodeAt(G);X>=55296&&X<=57343&&(X=65536+((X&1023)<<10)|N.charCodeAt(++G)&1023),X<=127?++E:X<=2047?E+=2:X<=65535?E+=3:E+=4}return E}var ss=typeof TextDecoder<"u"?new Lr("utf-16le"):void 0;function Iu(N,E){t().set(N,E)}function vl(N,E,G){for(var X=0;X<N.length;++X)t()[E++>>0]=N.charCodeAt(X);G||(t()[E>>0]=0)}function Kp(N,E){return N%E>0&&(N+=E-N%E),N}var Ir,Vp,Hp,fd,kg,Sg,YD,vg,Ag;I&&(Ir=l.buffer);function ta(N){Ir=N,l.HEAP8=Vp=new Int8Array(N),l.HEAP16=fd=new Int16Array(N),l.HEAP32=Sg=new Int32Array(N),l.HEAPU8=Hp=new Uint8Array(N),l.HEAPU16=kg=new Uint16Array(N),l.HEAPU32=YD=new Uint32Array(N),l.HEAPF32=vg=new Float32Array(N),l.HEAPF64=Ag=new Float64Array(N)}var wg=l.INITIAL_MEMORY||16777216;if(I)Be=l.wasmMemory,Ir=l.buffer;else if(l.wasmMemory)Be=l.wasmMemory;else if(Be=new WebAssembly.Memory({initial:wg/65536,maximum:32768,shared:!0}),!(Be.buffer instanceof SharedArrayBuffer))throw H("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),x&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");Be&&(Ir=Be.buffer),wg=Ir.byteLength,ta(Ir);var eo,qp=[],Cu=[],Bx=[],Ng=[],Al=!1,Ox=!1,Dg=0;function wl(){return gt||Dg>0}function an(){if(l.preRun)for(typeof l.preRun=="function"&&(l.preRun=[l.preRun]);l.preRun.length;)ZD(l.preRun.shift());Eg(qp)}function hd(){Al=!0,!I&&Eg(Cu)}function zx(){I||(He.terminateAllThreads(),Ox=!0)}function Gx(){if(!I){if(l.postRun)for(typeof l.postRun=="function"&&(l.postRun=[l.postRun]);l.postRun.length;)gd(l.postRun.shift());Eg(Ng)}}function ZD(N){qp.unshift(N)}function QD(N){Cu.unshift(N)}function gd(N){Ng.unshift(N)}var ku=0,Pg=null,ra=null;function bd(N){ku++,l.monitorRunDependencies&&l.monitorRunDependencies(ku)}function JD(N){if(ku--,l.monitorRunDependencies&&l.monitorRunDependencies(ku),ku==0&&(Pg!==null&&(clearInterval(Pg),Pg=null),ra)){var E=ra;ra=null,E()}}l.preloadedImages={},l.preloadedAudios={};function jp(N){I?postMessage({cmd:"onAbort",arg:N}):l.onAbort&&l.onAbort(N),N="Aborted("+N+")",H(N),Dt=!0,pt=1,N+=". Build with -s ASSERTIONS=1 for more info.";var E=new WebAssembly.RuntimeError(N);throw m(E),E}var Ux="data:application/octet-stream;base64,";function Fg(N){return N.startsWith(Ux)}function Mg(N){return N.startsWith("file://")}var un;un="tfjs-backend-wasm-threaded-simd.wasm",Fg(un)||(un=w(un));function Rg(N){try{if(N==un&&ee)return new Uint8Array(ee);if(R)return R(N);throw"both async and sync fetching of the wasm failed"}catch(E){jp(E)}}function Xp(){if(!ee&&(y||T)){if(typeof fetch=="function"&&!Mg(un))return fetch(un,{credentials:"same-origin"}).then(function(N){if(!N.ok)throw"failed to load wasm binary file at '"+un+"'";return N.arrayBuffer()}).catch(function(){return Rg(un)});if(M)return new Promise(function(N,E){M(un,function(G){N(new Uint8Array(G))},E)})}return Promise.resolve().then(function(){return Rg(un)})}function Wx(){var N={env:Hg,wasi_snapshot_preview1:Hg};function E(Ne,Ue){var lr=Ne.exports;if(l.asm=lr,Yx(l.asm.emscripten_tls_init),eo=l.asm.__indirect_function_table,QD(l.asm.__wasm_call_ctors),Rt=Ue,!I){var sa=He.unusedWorkers.length;He.unusedWorkers.forEach(function(aa){He.loadWasmModuleToWorker(aa,function(){--sa||JD("wasm-instantiate")})})}}I||bd("wasm-instantiate");function G(Ne){E(Ne.instance,Ne.module)}function X(Ne){return Xp().then(function(Ue){return WebAssembly.instantiate(Ue,N)}).then(function(Ue){return Ue}).then(Ne,function(Ue){H("failed to asynchronously prepare wasm: "+Ue),jp(Ue)})}function ge(){return!ee&&typeof WebAssembly.instantiateStreaming=="function"&&!Fg(un)&&!Mg(un)&&typeof fetch=="function"?fetch(un,{credentials:"same-origin"}).then(function(Ne){var Ue=WebAssembly.instantiateStreaming(Ne,N);return Ue.then(G,function(lr){return H("wasm streaming compile failed: "+lr),H("falling back to ArrayBuffer instantiation"),X(G)})}):X(G)}if(l.instantiateWasm)try{var Ce=l.instantiateWasm(N,E);return Ce}catch(Ne){return H("Module.instantiateWasm callback failed with error: "+Ne),!1}return ge().catch(m),{}}var e0,t0,Kx={};function Eg(N){for(;N.length>0;){var E=N.shift();if(typeof E=="function"){E(l);continue}var G=E.func;typeof G=="number"?E.arg===void 0?Zp(G)():Zp(G)(E.arg):G(E.arg===void 0?null:E.arg)}}function Yp(N){var E=bC(),G=N();return Zg(E),G}function Wq(N){return N}function r0(N){var E=/\b_Z[\w\d_]+/g;return N.replace(E,function(G){var X=G;return G===X?G:X+" ["+G+"]"})}function Vx(N){a()[N>>2]=0;var E=He.pthreads[N];delete He.pthreads[N],E.worker.terminate(),gC(N),He.runningWorkers.splice(He.runningWorkers.indexOf(E.worker),1),E.worker.pthread=void 0}function Hx(N){var E=He.pthreads[N];E.worker.postMessage({cmd:"cancel"})}function _g(N){var E=He.pthreads[N];if(E){a()[N>>2]=0;var G=E.worker;He.returnWorkerToPool(G)}}function Lg(N){M6(N)}function qx(N){if(N instanceof kd||N=="unwind")return pt;g(1,N)}var He={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){I?He.initWorker():He.initMainThread()},initMainThread:function(){for(var N=8,E=0;E<N;++E)He.allocateUnusedWorker()},initWorker:function(){gt=!1},pthreads:{},setExitStatus:function(N){pt=N},terminateAllThreads:function(){for(var N in He.pthreads){var E=He.pthreads[N];E&&E.worker&&He.returnWorkerToPool(E.worker)}for(var G=0;G<He.unusedWorkers.length;++G){var X=He.unusedWorkers[G];X.terminate()}He.unusedWorkers=[]},returnWorkerToPool:function(N){He.runWithoutMainThreadQueuedCalls(function(){delete He.pthreads[N.pthread.threadInfoStruct],He.unusedWorkers.push(N),He.runningWorkers.splice(He.runningWorkers.indexOf(N),1),gC(N.pthread.threadInfoStruct),N.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(N){a()[h0>>2]=0;try{N()}finally{a()[h0>>2]=1}},receiveObjectTransfer:function(N){},threadInit:function(){for(var N in He.tlsInitFunctions)He.tlsInitFunctions[N]()},loadWasmModuleToWorker:function(N,E){N.onmessage=G=>{var X=G.data,ge=X.cmd;if(N.pthread&&(He.currentProxiedOperationCallerThread=N.pthread.threadInfoStruct),X.targetThread&&X.targetThread!=Yg()){var Ce=He.pthreads[X.targetThread];Ce?Ce.worker.postMessage(X,X.transferList):H('Internal error! Worker sent a message "'+ge+'" to target pthread '+X.targetThread+", but that thread no longer exists!"),He.currentProxiedOperationCallerThread=void 0;return}ge==="processQueuedMainThreadWork"?p0():ge==="spawnThread"?Bg(X):ge==="cleanupThread"?_g(X.thread):ge==="killThread"?Vx(X.thread):ge==="cancelThread"?Hx(X.thread):ge==="loaded"?(N.loaded=!0,E&&E(N),N.runPthread&&(N.runPthread(),delete N.runPthread)):ge==="print"?J("Thread "+X.threadId+": "+X.text):ge==="printErr"?H("Thread "+X.threadId+": "+X.text):ge==="alert"?alert("Thread "+X.threadId+": "+X.text):X.target==="setimmediate"?N.postMessage(X):ge==="onAbort"?l.onAbort&&l.onAbort(X.arg):H("worker sent an unknown command "+ge),He.currentProxiedOperationCallerThread=void 0},N.onerror=G=>{var X="worker sent an error!";throw H(X+" "+G.filename+":"+G.lineno+": "+G.message),G},x&&(N.on("message",function(G){N.onmessage({data:G})}),N.on("error",function(G){N.onerror(G)}),N.on("detachedExit",function(){})),N.postMessage({cmd:"load",urlOrBlob:l.mainScriptUrlOrBlob||r,wasmMemory:Be,wasmModule:Rt})},allocateUnusedWorker:function(){var N=w("tfjs-backend-wasm-threaded-simd.worker.js");He.unusedWorkers.push(new Worker(N))},getNewWorker:function(){return He.unusedWorkers.length==0&&(He.allocateUnusedWorker(),He.loadWasmModuleToWorker(He.unusedWorkers[0])),He.unusedWorkers.pop()}};function jx(){var N=Yg(),E=a()[N+44>>2],G=a()[N+48>>2],X=E-G;f0(E,X),Zg(E)}l.establishStackSpace=jx;function $g(N){if(I)return Pl(1,0,N);try{Lg(N)}catch(E){qx(E)}}var Nl=[];function Zp(N){var E=Nl[N];return E||(N>=Nl.length&&(Nl.length=N+1),Nl[N]=E=eo.get(N)),E}function Xx(N,E){return Zp(N)(E)}l.invokeEntryPoint=Xx;function n0(){var N=new Error;if(!N.stack){try{throw new Error}catch(E){N=E}if(!N.stack)return"(no stack trace available)"}return N.stack.toString()}function Yx(N,E,G){He.tlsInitFunctions.push(N)}function o0(N,E){eo.set(N,E),Nl[N]=E}var Dl;x?Dl=()=>{var N=process.hrtime();return N[0]*1e3+N[1]/1e6}:I?Dl=()=>performance.now()-l.__performance_now_clock_drift:Dl=()=>performance.now();var Zx=!0;function Qx(N){return a()[l0()>>2]=N,N}function Jx(N,E){var G;if(N===0)G=Date.now();else if((N===1||N===4)&&Zx)G=Dl();else return Qx(28),-1;return a()[E>>2]=G/1e3|0,a()[E+4>>2]=G%1e3*1e3*1e3|0,0}function eI(N,E){return Jx(N,E)}function tI(N){m0(N,!T,1,!y),He.threadInit()}function rI(N){I?postMessage({cmd:"cleanupThread",thread:N}):_g(N)}function Bg(N){var E=He.getNewWorker();if(!E)return 6;He.runningWorkers.push(E);var G=He.pthreads[N.pthread_ptr]={worker:E,threadInfoStruct:N.pthread_ptr};E.pthread=G;var X={cmd:"run",start_routine:N.startRoutine,arg:N.arg,threadInfoStruct:N.pthread_ptr};return E.runPthread=()=>{X.time=performance.now(),E.postMessage(X,N.transferList)},E.loaded&&(E.runPthread(),delete E.runPthread),0}function nI(N,E,G,X){if(typeof SharedArrayBuffer>"u")return H("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var ge=[],Ce=0;if(I&&(ge.length===0||Ce))return c0(687865856,N,E,G,X);if(Ce)return Ce;var Ne={startRoutine:G,pthread_ptr:N,arg:X,transferList:ge};return I?(Ne.cmd="spawnThread",postMessage(Ne,ge),0):Bg(Ne)}function oI(){return 2097152}function sI(N,E){if(N==E)postMessage({cmd:"processQueuedMainThreadWork"});else if(I)postMessage({targetThread:N,cmd:"processThreadQueue"});else{var G=He.pthreads[N],X=G&&G.worker;if(!X)return;X.postMessage({cmd:"processThreadQueue"})}return 1}function aI(){jp("")}function iI(){x||T||se("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Og(){return 2147483648}function uI(N,E,G){n().copyWithin(N,E,E+G)}function lI(){return x?Eq().cpus().length:navigator.hardwareConcurrency}function Pl(N,E){var G=arguments.length-2,X=arguments;return Yp(function(){for(var ge=G,Ce=nm(ge*8),Ne=Ce>>3,Ue=0;Ue<G;Ue++){var lr=X[2+Ue];u()[Ne+Ue]=lr}return d0(N,ge,Ce,E)})}var yd=[];function pI(N,E,G){yd.length=E;for(var X=G>>3,ge=0;ge<E;ge++)yd[ge]=u()[X+ge];var Ce=N<0,Ne=Ce?Kx[-N-1]:DI[N];return Ne.apply(null,yd)}function mI(N){try{return Be.grow(N-Ir.byteLength+65535>>>16),ta(Be.buffer),1}catch{}}function cI(N){var E=n().length;if(N=N>>>0,N<=E)return!1;var G=Og();if(N>G)return!1;for(var X=1;X<=4;X*=2){var ge=E*(1+.2/X);ge=Math.min(ge,N+100663296);var Ce=Math.min(G,Kp(Math.max(N,ge),65536)),Ne=mI(Ce);if(Ne)return!0}return!1}var at={inEventHandler:0,removeAllEventListeners:function(){for(var N=at.eventHandlers.length-1;N>=0;--N)at._removeHandler(N);at.eventHandlers=[],at.deferredCalls=[]},registerRemoveEventListeners:function(){at.removeEventListenersRegistered||(Bx.push(at.removeAllEventListeners),at.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(N,E,G){function X(Ne,Ue){if(Ne.length!=Ue.length)return!1;for(var lr in Ne)if(Ne[lr]!=Ue[lr])return!1;return!0}for(var ge in at.deferredCalls){var Ce=at.deferredCalls[ge];if(Ce.targetFunction==N&&X(Ce.argsList,G))return}at.deferredCalls.push({targetFunction:N,precedence:E,argsList:G}),at.deferredCalls.sort(function(Ne,Ue){return Ne.precedence<Ue.precedence})},removeDeferredCalls:function(N){for(var E=0;E<at.deferredCalls.length;++E)at.deferredCalls[E].targetFunction==N&&(at.deferredCalls.splice(E,1),--E)},canPerformEventHandlerRequests:function(){return at.inEventHandler&&at.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!at.canPerformEventHandlerRequests())for(var N=0;N<at.deferredCalls.length;++N){var E=at.deferredCalls[N];at.deferredCalls.splice(N,1),--N,E.targetFunction.apply(null,E.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(N,E){for(var G=0;G<at.eventHandlers.length;++G)at.eventHandlers[G].target==N&&(!E||E==at.eventHandlers[G].eventTypeString)&&at._removeHandler(G--)},_removeHandler:function(N){var E=at.eventHandlers[N];E.target.removeEventListener(E.eventTypeString,E.eventListenerFunc,E.useCapture),at.eventHandlers.splice(N,1)},registerOrRemoveHandler:function(N){var E=function(ge){++at.inEventHandler,at.currentEventHandler=N,at.runDeferredCalls(),N.handlerFunc(ge),at.runDeferredCalls(),--at.inEventHandler};if(N.callbackfunc)N.eventListenerFunc=E,N.target.addEventListener(N.eventTypeString,E,N.useCapture),at.eventHandlers.push(N),at.registerRemoveEventListeners();else for(var G=0;G<at.eventHandlers.length;++G)at.eventHandlers[G].target==N.target&&at.eventHandlers[G].eventTypeString==N.eventTypeString&&at._removeHandler(G--)},queueEventHandlerOnThread_iiii:function(N,E,G,X,ge){Yp(function(){var Ce=nm(12);a()[Ce>>2]=G,a()[Ce+4>>2]=X,a()[Ce+8>>2]=ge,hC(N,637534208,E,X,Ce)})},getTargetThreadForEventCallback:function(N){switch(N){case 1:return 0;case 2:return He.currentProxiedOperationCallerThread;default:return N}},getNodeNameForTarget:function(N){return N?N==window?"#window":N==screen?"#screen":N&&N.nodeName?N.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function dI(N){var E=ea(N)+1,G=fC(E);return On(N,G,E),G}function fI(N,E,G,X){Yp(function(){var ge=nm(12),Ce=0;E&&(Ce=dI(E)),a()[ge>>2]=Ce,a()[ge+4>>2]=G,a()[ge+8>>2]=X,hC(N,657457152,0,Ce,ge)})}function hI(N,E,G,X){E=E?jr(E):"",fI(N,E,G,X)}function gI(N){return N>2?jr(N):N}var bI=[0,typeof document<"u"?document:0,typeof window<"u"?window:0];function yI(N){N=gI(N);var E=bI[N]||(typeof document<"u"?document.querySelector(N):void 0);return E}function Td(N){return yI(N)}function zg(N,E,G){var X=Td(N);if(!X)return-4;if(X.canvasSharedPtr&&(a()[X.canvasSharedPtr>>2]=E,a()[X.canvasSharedPtr+4>>2]=G),X.offscreenCanvas||!X.controlTransferredOffscreen){X.offscreenCanvas&&(X=X.offscreenCanvas);var ge=!1;if(X.GLctxObject&&X.GLctxObject.GLctx){var Ce=X.GLctxObject.GLctx.getParameter(2978);ge=Ce[0]===0&&Ce[1]===0&&Ce[2]===X.width&&Ce[3]===X.height}X.width=E,X.height=G,ge&&X.GLctxObject.GLctx.viewport(0,0,E,G)}else if(X.canvasSharedPtr){var Ne=a()[X.canvasSharedPtr+8>>2];return hI(Ne,N,E,G),1}else return-4;return 0}function Gg(N,E,G){return I?Pl(2,1,N,E,G):zg(N,E,G)}function TI(N,E,G){var X=Td(N);return X?zg(N,E,G):Gg(N,E,G)}function xI(){throw"unwind"}function II(N){var E=N.getExtension("ANGLE_instanced_arrays");if(E)return N.vertexAttribDivisor=function(G,X){E.vertexAttribDivisorANGLE(G,X)},N.drawArraysInstanced=function(G,X,ge,Ce){E.drawArraysInstancedANGLE(G,X,ge,Ce)},N.drawElementsInstanced=function(G,X,ge,Ce,Ne){E.drawElementsInstancedANGLE(G,X,ge,Ce,Ne)},1}function CI(N){var E=N.getExtension("OES_vertex_array_object");if(E)return N.createVertexArray=function(){return E.createVertexArrayOES()},N.deleteVertexArray=function(G){E.deleteVertexArrayOES(G)},N.bindVertexArray=function(G){E.bindVertexArrayOES(G)},N.isVertexArray=function(G){return E.isVertexArrayOES(G)},1}function kI(N){var E=N.getExtension("WEBGL_draw_buffers");if(E)return N.drawBuffers=function(G,X){E.drawBuffersWEBGL(G,X)},1}function SI(N){return!!(N.multiDrawWebgl=N.getExtension("WEBGL_multi_draw"))}var ur={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(E){ur.lastError||(ur.lastError=E)},getNewId:function(N){for(var E=ur.counter++,G=N.length;G<E;G++)N[G]=null;return E},getSource:function(N,E,G,X){for(var ge="",Ce=0;Ce<E;++Ce){var Ne=X?a()[X+Ce*4>>2]:-1;ge+=jr(a()[G+Ce*4>>2],Ne<0?void 0:Ne)}return ge},createContext:function(N,E){N.getContextSafariWebGL2Fixed||(N.getContextSafariWebGL2Fixed=N.getContext,N.getContext=function(ge,Ce){var Ne=N.getContextSafariWebGL2Fixed(ge,Ce);return ge=="webgl"==Ne instanceof WebGLRenderingContext?Ne:null});var G=N.getContext("webgl",E);if(!G)return 0;var X=ur.registerContext(G,E);return X},registerContext:function(N,E){var G=fC(8);a()[G+4>>2]=Yg();var X={handle:G,attributes:E,version:E.majorVersion,GLctx:N};return N.canvas&&(N.canvas.GLctxObject=X),ur.contexts[G]=X,(typeof E.enableExtensionsByDefault>"u"||E.enableExtensionsByDefault)&&ur.initExtensions(X),G},makeContextCurrent:function(N){return ur.currentContext=ur.contexts[N],l.ctx=Vg=ur.currentContext&&ur.currentContext.GLctx,!(N&&!Vg)},getContext:function(N){return ur.contexts[N]},deleteContext:function(N){ur.currentContext===ur.contexts[N]&&(ur.currentContext=null),typeof at=="object"&&at.removeAllHandlersOnTarget(ur.contexts[N].GLctx.canvas),ur.contexts[N]&&ur.contexts[N].GLctx.canvas&&(ur.contexts[N].GLctx.canvas.GLctxObject=void 0),u0(ur.contexts[N].handle),ur.contexts[N]=null},initExtensions:function(N){if(N||(N=ur.currentContext),!N.initExtensionsDone){N.initExtensionsDone=!0;var E=N.GLctx;II(E),CI(E),kI(E),E.disjointTimerQueryExt=E.getExtension("EXT_disjoint_timer_query"),SI(E);var G=E.getSupportedExtensions()||[];G.forEach(function(X){!X.includes("lose_context")&&!X.includes("debug")&&E.getExtension(X)})}}},vI=["default","low-power","high-performance"];function AI(N,E){var G=E>>2,X=a()[G+6],ge={alpha:!!a()[G+0],depth:!!a()[G+1],stencil:!!a()[G+2],antialias:!!a()[G+3],premultipliedAlpha:!!a()[G+4],preserveDrawingBuffer:!!a()[G+5],powerPreference:vI[X],failIfMajorPerformanceCaveat:!!a()[G+7],majorVersion:a()[G+8],minorVersion:a()[G+9],enableExtensionsByDefault:a()[G+10],explicitSwapControl:a()[G+11],proxyContextToMainThread:a()[G+12],renderViaOffscreenBackBuffer:a()[G+13]},Ce=Td(N);if(!Ce||ge.explicitSwapControl)return 0;var Ne=ur.createContext(Ce,ge);return Ne}function wI(N,E){return AI(N,E)}var Qp={mappings:{},buffers:[null,[],[]],printChar:function(N,E){var G=Qp.buffers[N];E===0||E===10?((N===1?J:H)(sn(G,0)),G.length=0):G.push(E)},varargs:void 0,get:function(){Qp.varargs+=4;var N=a()[Qp.varargs-4>>2];return N},getStr:function(N){var E=jr(N);return E},get64:function(N,E){return N}};function Ug(N){return I?Pl(3,1,N):0}function Wg(N,E,G,X,ge){if(I)return Pl(4,1,N,E,G,X,ge)}function Kg(N,E,G,X){if(I)return Pl(5,1,N,E,G,X);for(var ge=0,Ce=0;Ce<G;Ce++){var Ne=a()[E>>2],Ue=a()[E+4>>2];E+=8;for(var lr=0;lr<Ue;lr++)Qp.printChar(N,n()[Ne+lr]);ge+=Ue}return a()[X>>2]=ge,0}function NI(N){we(N)}He.init();var Vg,DI=[null,$g,Gg,Ug,Wg,Kg],s0=!1,Hg={__clock_gettime:eI,__emscripten_init_main_thread_js:tI,__emscripten_thread_cleanup:rI,__pthread_create_js:nI,_emscripten_default_pthread_stack_size:oI,_emscripten_notify_thread_queue:sI,abort:aI,emscripten_check_blocking_allowed:iI,emscripten_get_heap_max:Og,emscripten_get_now:Dl,emscripten_memcpy_big:uI,emscripten_num_logical_cores:lI,emscripten_receive_on_main_thread_js:pI,emscripten_resize_heap:cI,emscripten_set_canvas_element_size:TI,emscripten_unwind_to_js_event_loop:xI,emscripten_webgl_create_context:wI,exit:Lg,fd_close:Ug,fd_seek:Wg,fd_write:Kg,memory:Be||l.wasmMemory,setTempRet0:NI},a0=Wx(),PI=l.___wasm_call_ctors=function(){return(PI=l.___wasm_call_ctors=l.asm.__wasm_call_ctors).apply(null,arguments)},FI=l._init=function(){return(FI=l._init=l.asm.init).apply(null,arguments)},MI=l._init_with_threads_count=function(){return(MI=l._init_with_threads_count=l.asm.init_with_threads_count).apply(null,arguments)},RI=l._get_threads_count=function(){return(RI=l._get_threads_count=l.asm.get_threads_count).apply(null,arguments)},EI=l._register_tensor=function(){return(EI=l._register_tensor=l.asm.register_tensor).apply(null,arguments)},_I=l._dispose_data=function(){return(_I=l._dispose_data=l.asm.dispose_data).apply(null,arguments)},LI=l._dispose=function(){return(LI=l._dispose=l.asm.dispose).apply(null,arguments)},$I=l._Abs=function(){return($I=l._Abs=l.asm.Abs).apply(null,arguments)},BI=l._Add=function(){return(BI=l._Add=l.asm.Add).apply(null,arguments)},OI=l._AddN=function(){return(OI=l._AddN=l.asm.AddN).apply(null,arguments)},zI=l._All=function(){return(zI=l._All=l.asm.All).apply(null,arguments)},GI=l._Any=function(){return(GI=l._Any=l.asm.Any).apply(null,arguments)},UI=l._ArgMax=function(){return(UI=l._ArgMax=l.asm.ArgMax).apply(null,arguments)},WI=l._AvgPool=function(){return(WI=l._AvgPool=l.asm.AvgPool).apply(null,arguments)},KI=l._BatchMatMul=function(){return(KI=l._BatchMatMul=l.asm.BatchMatMul).apply(null,arguments)},VI=l._Ceil=function(){return(VI=l._Ceil=l.asm.Ceil).apply(null,arguments)},HI=l._ClipByValue=function(){return(HI=l._ClipByValue=l.asm.ClipByValue).apply(null,arguments)},qI=l._Conv2D=function(){return(qI=l._Conv2D=l.asm.Conv2D).apply(null,arguments)},jI=l._Conv2DBackpropInput=function(){return(jI=l._Conv2DBackpropInput=l.asm.Conv2DBackpropInput).apply(null,arguments)},XI=l._Cos=function(){return(XI=l._Cos=l.asm.Cos).apply(null,arguments)},YI=l._Cosh=function(){return(YI=l._Cosh=l.asm.Cosh).apply(null,arguments)},ZI=l._CropAndResize=function(){return(ZI=l._CropAndResize=l.asm.CropAndResize).apply(null,arguments)},QI=l._Cumprod=function(){return(QI=l._Cumprod=l.asm.Cumprod).apply(null,arguments)},JI=l._Cumsum=function(){return(JI=l._Cumsum=l.asm.Cumsum).apply(null,arguments)},eC=l._DepthToSpace=function(){return(eC=l._DepthToSpace=l.asm.DepthToSpace).apply(null,arguments)},tC=l._DepthwiseConv2dNative=function(){return(tC=l._DepthwiseConv2dNative=l.asm.DepthwiseConv2dNative).apply(null,arguments)},rC=l._Elu=function(){return(rC=l._Elu=l.asm.Elu).apply(null,arguments)},nC=l._Equal=function(){return(nC=l._Equal=l.asm.Equal).apply(null,arguments)},oC=l._Exp=function(){return(oC=l._Exp=l.asm.Exp).apply(null,arguments)},sC=l._FlipLeftRight=function(){return(sC=l._FlipLeftRight=l.asm.FlipLeftRight).apply(null,arguments)},aC=l._Floor=function(){return(aC=l._Floor=l.asm.Floor).apply(null,arguments)},iC=l._FloorDiv=function(){return(iC=l._FloorDiv=l.asm.FloorDiv).apply(null,arguments)},uC=l._FusedBatchNorm=function(){return(uC=l._FusedBatchNorm=l.asm.FusedBatchNorm).apply(null,arguments)},lC=l._FusedConv2D=function(){return(lC=l._FusedConv2D=l.asm.FusedConv2D).apply(null,arguments)},qg=l._FusedDepthwiseConv2D=function(){return(qg=l._FusedDepthwiseConv2D=l.asm.FusedDepthwiseConv2D).apply(null,arguments)},jg=l._Gather=function(){return(jg=l._Gather=l.asm.Gather).apply(null,arguments)},xd=l._GatherNd=function(){return(xd=l._GatherNd=l.asm.GatherNd).apply(null,arguments)},pC=l._Greater=function(){return(pC=l._Greater=l.asm.Greater).apply(null,arguments)},mC=l._GreaterEqual=function(){return(mC=l._GreaterEqual=l.asm.GreaterEqual).apply(null,arguments)},Jp=l._LeakyRelu=function(){return(Jp=l._LeakyRelu=l.asm.LeakyRelu).apply(null,arguments)},Id=l._Less=function(){return(Id=l._Less=l.asm.Less).apply(null,arguments)},Cd=l._LessEqual=function(){return(Cd=l._LessEqual=l.asm.LessEqual).apply(null,arguments)},i0=l._Log=function(){return(i0=l._Log=l.asm.Log).apply(null,arguments)},em=l._LogicalAnd=function(){return(em=l._LogicalAnd=l.asm.LogicalAnd).apply(null,arguments)},tm=l._LogicalNot=function(){return(tm=l._LogicalNot=l.asm.LogicalNot).apply(null,arguments)},cC=l._LogicalOr=function(){return(cC=l._LogicalOr=l.asm.LogicalOr).apply(null,arguments)},K=l._LogicalXor=function(){return(K=l._LogicalXor=l.asm.LogicalXor).apply(null,arguments)},Q=l._Max=function(){return(Q=l._Max=l.asm.Max).apply(null,arguments)},ye=l._MaxPool=function(){return(ye=l._MaxPool=l.asm.MaxPool).apply(null,arguments)},_e=l._Maximum=function(){return(_e=l._Maximum=l.asm.Maximum).apply(null,arguments)},Tt=l._Mean=function(){return(Tt=l._Mean=l.asm.Mean).apply(null,arguments)},kt=l._Min=function(){return(kt=l._Min=l.asm.Min).apply(null,arguments)},it=l._Minimum=function(){return(it=l._Minimum=l.asm.Minimum).apply(null,arguments)},ot=l._MirrorPad=function(){return(ot=l._MirrorPad=l.asm.MirrorPad).apply(null,arguments)},Cr=l._Multiply=function(){return(Cr=l._Multiply=l.asm.Multiply).apply(null,arguments)},na=l._Neg=function(){return(na=l._Neg=l.asm.Neg).apply(null,arguments)},oa=l._NonMaxSuppressionV3=function(){return(oa=l._NonMaxSuppressionV3=l.asm.NonMaxSuppressionV3).apply(null,arguments)},rm=l._NonMaxSuppressionV4=function(){return(rm=l._NonMaxSuppressionV4=l.asm.NonMaxSuppressionV4).apply(null,arguments)},Fl=l._NonMaxSuppressionV5=function(){return(Fl=l._NonMaxSuppressionV5=l.asm.NonMaxSuppressionV5).apply(null,arguments)},dC=l._NotEqual=function(){return(dC=l._NotEqual=l.asm.NotEqual).apply(null,arguments)},ln=l._OneHot=function(){return(ln=l._OneHot=l.asm.OneHot).apply(null,arguments)},Su=l._PadV2=function(){return(Su=l._PadV2=l.asm.PadV2).apply(null,arguments)},Xg=l._Pow=function(){return(Xg=l._Pow=l.asm.Pow).apply(null,arguments)},Kq=l._Prelu=function(){return(Kq=l._Prelu=l.asm.Prelu).apply(null,arguments)},Vq=l._Prod=function(){return(Vq=l._Prod=l.asm.Prod).apply(null,arguments)},Hq=l._RealDiv=function(){return(Hq=l._RealDiv=l.asm.RealDiv).apply(null,arguments)},qq=l._Relu=function(){return(qq=l._Relu=l.asm.Relu).apply(null,arguments)},jq=l._Relu6=function(){return(jq=l._Relu6=l.asm.Relu6).apply(null,arguments)},Xq=l._ResizeBilinear=function(){return(Xq=l._ResizeBilinear=l.asm.ResizeBilinear).apply(null,arguments)},Yq=l._ResizeNearestNeighbor=function(){return(Yq=l._ResizeNearestNeighbor=l.asm.ResizeNearestNeighbor).apply(null,arguments)},Zq=l._Reverse=function(){return(Zq=l._Reverse=l.asm.Reverse).apply(null,arguments)},Qq=l._RotateWithOffset=function(){return(Qq=l._RotateWithOffset=l.asm.RotateWithOffset).apply(null,arguments)},Jq=l._Round=function(){return(Jq=l._Round=l.asm.Round).apply(null,arguments)},e6=l._Rsqrt=function(){return(e6=l._Rsqrt=l.asm.Rsqrt).apply(null,arguments)},t6=l._ScatterNd=function(){return(t6=l._ScatterNd=l.asm.ScatterNd).apply(null,arguments)},r6=l._SelectV2=function(){return(r6=l._SelectV2=l.asm.SelectV2).apply(null,arguments)},n6=l._Sigmoid=function(){return(n6=l._Sigmoid=l.asm.Sigmoid).apply(null,arguments)},o6=l._Sin=function(){return(o6=l._Sin=l.asm.Sin).apply(null,arguments)},s6=l._Softmax=function(){return(s6=l._Softmax=l.asm.Softmax).apply(null,arguments)},a6=l._SparseFillEmptyRows=function(){return(a6=l._SparseFillEmptyRows=l.asm.SparseFillEmptyRows).apply(null,arguments)},i6=l._SparseReshape=function(){return(i6=l._SparseReshape=l.asm.SparseReshape).apply(null,arguments)},u6=l._SparseSegmentReduction=function(){return(u6=l._SparseSegmentReduction=l.asm.SparseSegmentReduction).apply(null,arguments)},l6=l._Sqrt=function(){return(l6=l._Sqrt=l.asm.Sqrt).apply(null,arguments)},p6=l._Square=function(){return(p6=l._Square=l.asm.Square).apply(null,arguments)},m6=l._SquaredDifference=function(){return(m6=l._SquaredDifference=l.asm.SquaredDifference).apply(null,arguments)},c6=l._Step=function(){return(c6=l._Step=l.asm.Step).apply(null,arguments)},d6=l._StridedSlice=function(){return(d6=l._StridedSlice=l.asm.StridedSlice).apply(null,arguments)},f6=l._Sub=function(){return(f6=l._Sub=l.asm.Sub).apply(null,arguments)},h6=l._Sum=function(){return(h6=l._Sum=l.asm.Sum).apply(null,arguments)},g6=l._Tan=function(){return(g6=l._Tan=l.asm.Tan).apply(null,arguments)},b6=l._Tanh=function(){return(b6=l._Tanh=l.asm.Tanh).apply(null,arguments)},y6=l._Tile=function(){return(y6=l._Tile=l.asm.Tile).apply(null,arguments)},T6=l._TopK=function(){return(T6=l._TopK=l.asm.TopK).apply(null,arguments)},x6=l._Transform=function(){return(x6=l._Transform=l.asm.Transform).apply(null,arguments)},I6=l._Transpose=function(){return(I6=l._Transpose=l.asm.Transpose).apply(null,arguments)},C6=l.__FusedMatMul=function(){return(C6=l.__FusedMatMul=l.asm._FusedMatMul).apply(null,arguments)},fC=l._malloc=function(){return(fC=l._malloc=l.asm.malloc).apply(null,arguments)},u0=l._free=function(){return(u0=l._free=l.asm.free).apply(null,arguments)},k6=l._emscripten_tls_init=function(){return(k6=l._emscripten_tls_init=l.asm.emscripten_tls_init).apply(null,arguments)},l0=l.___errno_location=function(){return(l0=l.___errno_location=l.asm.__errno_location).apply(null,arguments)},Yg=l._pthread_self=function(){return(Yg=l._pthread_self=l.asm.pthread_self).apply(null,arguments)},p0=l._emscripten_main_thread_process_queued_calls=function(){return(p0=l._emscripten_main_thread_process_queued_calls=l.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},S6=l.__emscripten_thread_crashed=function(){return(S6=l.__emscripten_thread_crashed=l.asm._emscripten_thread_crashed).apply(null,arguments)},m0=l.__emscripten_thread_init=function(){return(m0=l.__emscripten_thread_init=l.asm._emscripten_thread_init).apply(null,arguments)},v6=l._emscripten_current_thread_process_queued_calls=function(){return(v6=l._emscripten_current_thread_process_queued_calls=l.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},A6=l._emscripten_main_browser_thread_id=function(){return(A6=l._emscripten_main_browser_thread_id=l.asm.emscripten_main_browser_thread_id).apply(null,arguments)},w6=l._emscripten_sync_run_in_main_thread_2=function(){return(w6=l._emscripten_sync_run_in_main_thread_2=l.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},c0=l._emscripten_sync_run_in_main_thread_4=function(){return(c0=l._emscripten_sync_run_in_main_thread_4=l.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)},d0=l._emscripten_run_in_main_runtime_thread_js=function(){return(d0=l._emscripten_run_in_main_runtime_thread_js=l.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},hC=l._emscripten_dispatch_to_thread_=function(){return(hC=l._emscripten_dispatch_to_thread_=l.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},gC=l.__emscripten_thread_free_data=function(){return(gC=l.__emscripten_thread_free_data=l.asm._emscripten_thread_free_data).apply(null,arguments)},N6=l.__emscripten_thread_exit=function(){return(N6=l.__emscripten_thread_exit=l.asm._emscripten_thread_exit).apply(null,arguments)},D6=l._memalign=function(){return(D6=l._memalign=l.asm.memalign).apply(null,arguments)},f0=l._emscripten_stack_set_limits=function(){return(f0=l._emscripten_stack_set_limits=l.asm.emscripten_stack_set_limits).apply(null,arguments)},bC=l.stackSave=function(){return(bC=l.stackSave=l.asm.stackSave).apply(null,arguments)},Zg=l.stackRestore=function(){return(Zg=l.stackRestore=l.asm.stackRestore).apply(null,arguments)},nm=l.stackAlloc=function(){return(nm=l.stackAlloc=l.asm.stackAlloc).apply(null,arguments)},P6=l.dynCall_iijjiiii=function(){return(P6=l.dynCall_iijjiiii=l.asm.dynCall_iijjiiii).apply(null,arguments)},F6=l.dynCall_jiji=function(){return(F6=l.dynCall_jiji=l.asm.dynCall_jiji).apply(null,arguments)},h0=l.__emscripten_allow_main_runtime_queued_calls=21664;l.cwrap=Ht,l.keepRuntimeAlive=wl,l.PThread=He,l.PThread=He,l.wasmMemory=Be,l.ExitStatus=kd;var Qg;function kd(N){this.name="ExitStatus",this.message="Program terminated with exit("+N+")",this.status=N}ra=function N(){Qg||yC(),Qg||(ra=N)};function yC(N){if(N=N||f,ku>0)return;if(I){p(l),hd(),postMessage({cmd:"loaded"});return}if(an(),ku>0)return;function E(){Qg||(Qg=!0,l.calledRun=!0,!Dt&&(hd(),p(l),l.onRuntimeInitialized&&l.onRuntimeInitialized(),Gx()))}l.setStatus?(l.setStatus("Running..."),setTimeout(function(){setTimeout(function(){l.setStatus("")},1),E()},1)):E()}l.run=yC;function M6(N,E){if(pt=N,!E&&I)throw $g(N),"unwind";wl()||zx(),R6(N)}function R6(N){pt=N,wl()||(He.terminateAllThreads(),l.onExit&&l.onExit(N),Dt=!0),g(N,new kd(N))}if(l.preInit)for(typeof l.preInit=="function"&&(l.preInit=[l.preInit]);l.preInit.length>0;)l.preInit.pop()();yC();var Jg;c&&(Jg={uncaughtException:process.listeners("uncaughtException").filter(function(N){return!c.uncaughtException.indexOf(N)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(N){return!c.unhandledRejection.indexOf(N)>-1})});var eb;if(typeof WasmBackendModule<"u")eb=WasmBackendModule;else if(typeof e<"u")eb=e;else throw new Error("Could not find wasm module in post.js");if(Jg){var E6=eb._dispose;eb._dispose=function(){E6(),Jg.uncaughtException.forEach(function(N){process.removeListener("uncaughtException",N)}),Jg.unhandledRejection.forEach(function(N){process.removeListener("unhandledRejection",N)})}}return e.ready}})();typeof Rx=="object"&&typeof zD=="object"?zD.exports=OD:typeof define=="function"&&define.amd?define([],function(){return OD}):typeof Rx=="object"&&(Rx.WasmBackendModuleThreadedSimd=OD)});var $q=Ar((_x,VD)=>{var KD=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e){e=e||{};var t=typeof e<"u"?e:{},n,o;t.ready=new Promise(function(K,Q){n=K,o=Q});var s;typeof process<"u"&&process.listeners&&(s={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var a=Object.assign({},t),i=[],u="./this.program",l=(K,Q)=>{throw Q},p=typeof window=="object",m=typeof importScripts=="function",c=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",d="";function f(K){return t.locateFile?t.locateFile(K,d):d+K}var h,g,y,T;function x(K){if(K instanceof Id)return;M("exiting due to exception: "+K)}var I,k,w;c?(m?d=Tg().dirname(d)+"/":d=__dirname+"/",w=()=>{k||(I=Eh(),k=Tg())},h=function(Q,ye){return w(),Q=k.normalize(Q),I.readFileSync(Q,ye?void 0:"utf8")},y=K=>{var Q=h(K,!0);return Q.buffer||(Q=new Uint8Array(Q)),Q},g=(K,Q,ye)=>{w(),K=k.normalize(K),I.readFile(K,function(_e,Tt){_e?ye(_e):Q(Tt.buffer)})},process.argv.length>1&&(u=process.argv[1].replace(/\\/g,"/")),i=process.argv.slice(2),process.on("uncaughtException",function(K){if(!(K instanceof Id))throw K}),process.on("unhandledRejection",function(K){throw K}),l=(K,Q)=>{if(fd())throw process.exitCode=K,Q;x(Q),process.exit(K)},t.inspect=function(){return"[Emscripten Module object]"}):(p||m)&&(m?d=self.location.href:typeof document<"u"&&document.currentScript&&(d=document.currentScript.src),r&&(d=r),d.indexOf("blob:")!==0?d=d.substr(0,d.replace(/[?#].*/,"").lastIndexOf("/")+1):d="",h=K=>{var Q=new XMLHttpRequest;return Q.open("GET",K,!1),Q.send(null),Q.responseText},m&&(y=K=>{var Q=new XMLHttpRequest;return Q.open("GET",K,!1),Q.responseType="arraybuffer",Q.send(null),new Uint8Array(Q.response)}),g=(K,Q,ye)=>{var _e=new XMLHttpRequest;_e.open("GET",K,!0),_e.responseType="arraybuffer",_e.onload=()=>{if(_e.status==200||_e.status==0&&_e.response){Q(_e.response);return}ye()},_e.onerror=ye,_e.send(null)},T=K=>document.title=K);var F=t.print||console.log.bind(console),M=t.printErr||console.warn.bind(console);Object.assign(t,a),a=null,t.arguments&&(i=t.arguments),t.thisProgram&&(u=t.thisProgram),t.quit&&(l=t.quit);var R=4;function L(K){L.shown||(L.shown={}),L.shown[K]||(L.shown[K]=1,M(K))}function O(K,Q){if(typeof WebAssembly.Function=="function"){for(var ye={i:"i32",j:"i64",f:"f32",d:"f64"},_e={parameters:[],results:Q[0]=="v"?[]:[ye[Q[0]]]},Tt=1;Tt<Q.length;++Tt)_e.parameters.push(ye[Q[Tt]]);return new WebAssembly.Function(_e,K)}var kt=[1,0,1,96],it=Q.slice(0,1),ot=Q.slice(1),Cr={i:127,j:126,f:125,d:124};kt.push(ot.length);for(var Tt=0;Tt<ot.length;++Tt)kt.push(Cr[ot[Tt]]);it=="v"?kt.push(0):kt=kt.concat([1,Cr[it]]),kt[1]=kt.length-2;var na=new Uint8Array([0,97,115,109,1,0,0,0].concat(kt,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),oa=new WebAssembly.Module(na),rm=new WebAssembly.Instance(oa,{e:{f:K}}),Fl=rm.exports.f;return Fl}var W=[],V;function j(){if(W.length)return W.pop();try{ss.grow(1)}catch(K){throw K instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":K}return ss.length-1}function q(K,Q){for(var ye=K;ye<K+Q;ye++){var _e=bd(ye);_e&&V.set(_e,ye)}}var Y=0,J=K=>{Y=K},H;t.wasmBinary&&(H=t.wasmBinary);var oe=t.noExitRuntime||!0;typeof WebAssembly!="object"&&Al("no native wasm support detected");var se,ae=!1,pe;function ie(K,Q){K||Al(Q)}function be(K){var Q=t["_"+K];return Q}function fe(K,Q,ye,_e,Tt){var kt={string:function(ln){var Su=0;if(ln!=null&&ln!==0){var Xg=(ln.length<<2)+1;Su=xd(Xg),gt(ln,Su,Xg)}return Su},array:function(ln){var Su=xd(ln.length);return Dt(ln,Su),Su}};function it(ln){return Q==="string"?Ze(ln):Q==="boolean"?Boolean(ln):ln}var ot=be(K),Cr=[],na=0;if(_e)for(var oa=0;oa<_e.length;oa++){var rm=kt[ye[oa]];rm?(na===0&&(na=qg()),Cr[oa]=rm(_e[oa])):Cr[oa]=_e[oa]}var Fl=ot.apply(null,Cr);function dC(ln){return na!==0&&jg(na),it(ln)}return Fl=dC(Fl),Fl}function Ie(K,Q,ye,_e){ye=ye||[];var Tt=ye.every(function(it){return it==="number"}),kt=Q!=="string";return kt&&Tt&&!_e?be(K):function(){return fe(K,Q,ye,arguments,_e)}}var we=1,Ee=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function Le(K,Q,ye){for(var _e=Q+ye,Tt=Q;K[Tt]&&!(Tt>=_e);)++Tt;if(Tt-Q>16&&K.subarray&&Ee)return Ee.decode(K.subarray(Q,Tt));for(var kt="";Q<Tt;){var it=K[Q++];if(!(it&128)){kt+=String.fromCharCode(it);continue}var ot=K[Q++]&63;if((it&224)==192){kt+=String.fromCharCode((it&31)<<6|ot);continue}var Cr=K[Q++]&63;if((it&240)==224?it=(it&15)<<12|ot<<6|Cr:it=(it&7)<<18|ot<<12|Cr<<6|K[Q++]&63,it<65536)kt+=String.fromCharCode(it);else{var na=it-65536;kt+=String.fromCharCode(55296|na>>10,56320|na&1023)}}return kt}function Ze(K,Q){return K?Le(Ht,K,Q):""}function ee(K,Q,ye,_e){if(!(_e>0))return 0;for(var Tt=ye,kt=ye+_e-1,it=0;it<K.length;++it){var ot=K.charCodeAt(it);if(ot>=55296&&ot<=57343){var Cr=K.charCodeAt(++it);ot=65536+((ot&1023)<<10)|Cr&1023}if(ot<=127){if(ye>=kt)break;Q[ye++]=ot}else if(ot<=2047){if(ye+1>=kt)break;Q[ye++]=192|ot>>6,Q[ye++]=128|ot&63}else if(ot<=65535){if(ye+2>=kt)break;Q[ye++]=224|ot>>12,Q[ye++]=128|ot>>6&63,Q[ye++]=128|ot&63}else{if(ye+3>=kt)break;Q[ye++]=240|ot>>18,Q[ye++]=128|ot>>12&63,Q[ye++]=128|ot>>6&63,Q[ye++]=128|ot&63}}return Q[ye]=0,ye-Tt}function gt(K,Q,ye){return ee(K,Ht,Q,ye)}function Be(K){for(var Q=0,ye=0;ye<K.length;++ye){var _e=K.charCodeAt(ye);_e>=55296&&_e<=57343&&(_e=65536+((_e&1023)<<10)|K.charCodeAt(++ye)&1023),_e<=127?++Q:_e<=2047?Q+=2:_e<=65535?Q+=3:Q+=4}return Q}var Rt=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0;function Dt(K,Q){nn.set(K,Q)}function pt(K,Q,ye){for(var _e=0;_e<K.length;++_e)nn[Q++>>0]=K.charCodeAt(_e);ye||(nn[Q>>0]=0)}function Jt(K,Q){return K%Q>0&&(K+=Q-K%Q),K}var Ot,nn,Ht,Js,Lr,on,sn,jr,os;function On(K){Ot=K,t.HEAP8=nn=new Int8Array(K),t.HEAP16=Js=new Int16Array(K),t.HEAP32=on=new Int32Array(K),t.HEAPU8=Ht=new Uint8Array(K),t.HEAPU16=Lr=new Uint16Array(K),t.HEAPU32=sn=new Uint32Array(K),t.HEAPF32=jr=new Float32Array(K),t.HEAPF64=os=new Float64Array(K)}var ea=t.INITIAL_MEMORY||16777216,ss,Iu=[],vl=[],Kp=[],Ir=!1,Vp=!1,Hp=0;function fd(){return oe||Hp>0}function kg(){if(t.preRun)for(typeof t.preRun=="function"&&(t.preRun=[t.preRun]);t.preRun.length;)Ag(t.preRun.shift());gd(Iu)}function Sg(){Ir=!0,gd(vl)}function YD(){Vp=!0}function vg(){if(t.postRun)for(typeof t.postRun=="function"&&(t.postRun=[t.postRun]);t.postRun.length;)wg(t.postRun.shift());gd(Kp)}function Ag(K){Iu.unshift(K)}function ta(K){vl.unshift(K)}function wg(K){Kp.unshift(K)}var eo=0,qp=null,Cu=null;function Bx(K){eo++,t.monitorRunDependencies&&t.monitorRunDependencies(eo)}function Ng(K){if(eo--,t.monitorRunDependencies&&t.monitorRunDependencies(eo),eo==0&&(qp!==null&&(clearInterval(qp),qp=null),Cu)){var Q=Cu;Cu=null,Q()}}t.preloadedImages={},t.preloadedAudios={};function Al(K){t.onAbort&&t.onAbort(K),K="Aborted("+K+")",M(K),ae=!0,pe=1,K+=". Build with -s ASSERTIONS=1 for more info.";var Q=new WebAssembly.RuntimeError(K);throw o(Q),Q}var Ox="data:application/octet-stream;base64,";function Dg(K){return K.startsWith(Ox)}function wl(K){return K.startsWith("file://")}var an;an="tfjs-backend-wasm.wasm",Dg(an)||(an=f(an));function hd(K){try{if(K==an&&H)return new Uint8Array(H);if(y)return y(K);throw"both async and sync fetching of the wasm failed"}catch(Q){Al(Q)}}function zx(){if(!H&&(p||m)){if(typeof fetch=="function"&&!wl(an))return fetch(an,{credentials:"same-origin"}).then(function(K){if(!K.ok)throw"failed to load wasm binary file at '"+an+"'";return K.arrayBuffer()}).catch(function(){return hd(an)});if(g)return new Promise(function(K,Q){g(an,function(ye){K(new Uint8Array(ye))},Q)})}return Promise.resolve().then(function(){return hd(an)})}function Gx(){var K={env:Yp,wasi_snapshot_preview1:Yp};function Q(it,ot){var Cr=it.exports;t.asm=Cr,se=t.asm.memory,On(se.buffer),ss=t.asm.__indirect_function_table,ta(t.asm.__wasm_call_ctors),Ng("wasm-instantiate")}Bx("wasm-instantiate");function ye(it){Q(it.instance)}function _e(it){return zx().then(function(ot){return WebAssembly.instantiate(ot,K)}).then(function(ot){return ot}).then(it,function(ot){M("failed to asynchronously prepare wasm: "+ot),Al(ot)})}function Tt(){return!H&&typeof WebAssembly.instantiateStreaming=="function"&&!Dg(an)&&!wl(an)&&typeof fetch=="function"?fetch(an,{credentials:"same-origin"}).then(function(it){var ot=WebAssembly.instantiateStreaming(it,K);return ot.then(ye,function(Cr){return M("wasm streaming compile failed: "+Cr),M("falling back to ArrayBuffer instantiation"),_e(ye)})}):_e(ye)}if(t.instantiateWasm)try{var kt=t.instantiateWasm(K,Q);return kt}catch(it){return M("Module.instantiateWasm callback failed with error: "+it),!1}return Tt().catch(o),{}}var ZD,QD;function gd(K){for(;K.length>0;){var Q=K.shift();if(typeof Q=="function"){Q(t);continue}var ye=Q.func;typeof ye=="number"?Q.arg===void 0?bd(ye)():bd(ye)(Q.arg):ye(Q.arg===void 0?null:Q.arg)}}function ku(K){return K}function Pg(K){var Q=/\b_Z[\w\d_]+/g;return K.replace(Q,function(ye){var _e=ye;return ye===_e?ye:_e+" ["+ye+"]"})}var ra=[];function bd(K){var Q=ra[K];return Q||(K>=ra.length&&(ra.length=K+1),ra[K]=Q=ss.get(K)),Q}function JD(){var K=new Error;if(!K.stack){try{throw new Error}catch(Q){K=Q}if(!K.stack)return"(no stack trace available)"}return K.stack.toString()}function jp(K,Q){ss.set(K,Q),ra[K]=Q}function Ux(){Al("")}function Fg(K,Q,ye){Ht.copyWithin(K,Q,Q+ye)}function Mg(){return 2147483648}function un(K){try{return se.grow(K-Ot.byteLength+65535>>>16),On(se.buffer),1}catch{}}function Rg(K){var Q=Ht.length;K=K>>>0;var ye=Mg();if(K>ye)return!1;for(var _e=1;_e<=4;_e*=2){var Tt=Q*(1+.2/_e);Tt=Math.min(Tt,K+100663296);var kt=Math.min(ye,Jt(Math.max(K,Tt),65536)),it=un(kt);if(it)return!0}return!1}var Xp={mappings:{},buffers:[null,[],[]],printChar:function(K,Q){var ye=Xp.buffers[K];Q===0||Q===10?((K===1?F:M)(Le(ye,0)),ye.length=0):ye.push(Q)},varargs:void 0,get:function(){Xp.varargs+=4;var K=on[Xp.varargs-4>>2];return K},getStr:function(K){var Q=Ze(K);return Q},get64:function(K,Q){return K}};function Wx(K){return 0}function e0(K,Q,ye,_e,Tt){}function t0(K,Q,ye,_e){for(var Tt=0,kt=0;kt<ye;kt++){var it=on[Q>>2],ot=on[Q+4>>2];Q+=8;for(var Cr=0;Cr<ot;Cr++)Xp.printChar(K,Ht[it+Cr]);Tt+=ot}return on[_e>>2]=Tt,0}function Kx(K){J(K)}var Eg=!1,Yp={abort:Ux,emscripten_memcpy_big:Fg,emscripten_resize_heap:Rg,fd_close:Wx,fd_seek:e0,fd_write:t0,setTempRet0:Kx},Wq=Gx(),r0=t.___wasm_call_ctors=function(){return(r0=t.___wasm_call_ctors=t.asm.__wasm_call_ctors).apply(null,arguments)},Vx=t._init=function(){return(Vx=t._init=t.asm.init).apply(null,arguments)},Hx=t._init_with_threads_count=function(){return(Hx=t._init_with_threads_count=t.asm.init_with_threads_count).apply(null,arguments)},_g=t._get_threads_count=function(){return(_g=t._get_threads_count=t.asm.get_threads_count).apply(null,arguments)},Lg=t._register_tensor=function(){return(Lg=t._register_tensor=t.asm.register_tensor).apply(null,arguments)},qx=t._dispose_data=function(){return(qx=t._dispose_data=t.asm.dispose_data).apply(null,arguments)},He=t._dispose=function(){return(He=t._dispose=t.asm.dispose).apply(null,arguments)},jx=t._Abs=function(){return(jx=t._Abs=t.asm.Abs).apply(null,arguments)},$g=t._Add=function(){return($g=t._Add=t.asm.Add).apply(null,arguments)},Nl=t._AddN=function(){return(Nl=t._AddN=t.asm.AddN).apply(null,arguments)},Zp=t._All=function(){return(Zp=t._All=t.asm.All).apply(null,arguments)},Xx=t._Any=function(){return(Xx=t._Any=t.asm.Any).apply(null,arguments)},n0=t._ArgMax=function(){return(n0=t._ArgMax=t.asm.ArgMax).apply(null,arguments)},Yx=t._AvgPool=function(){return(Yx=t._AvgPool=t.asm.AvgPool).apply(null,arguments)},o0=t._BatchMatMul=function(){return(o0=t._BatchMatMul=t.asm.BatchMatMul).apply(null,arguments)},Dl=t._Ceil=function(){return(Dl=t._Ceil=t.asm.Ceil).apply(null,arguments)},Zx=t._ClipByValue=function(){return(Zx=t._ClipByValue=t.asm.ClipByValue).apply(null,arguments)},Qx=t._Conv2D=function(){return(Qx=t._Conv2D=t.asm.Conv2D).apply(null,arguments)},Jx=t._Conv2DBackpropInput=function(){return(Jx=t._Conv2DBackpropInput=t.asm.Conv2DBackpropInput).apply(null,arguments)},eI=t._Cos=function(){return(eI=t._Cos=t.asm.Cos).apply(null,arguments)},tI=t._Cosh=function(){return(tI=t._Cosh=t.asm.Cosh).apply(null,arguments)},rI=t._CropAndResize=function(){return(rI=t._CropAndResize=t.asm.CropAndResize).apply(null,arguments)},Bg=t._Cumprod=function(){return(Bg=t._Cumprod=t.asm.Cumprod).apply(null,arguments)},nI=t._Cumsum=function(){return(nI=t._Cumsum=t.asm.Cumsum).apply(null,arguments)},oI=t._DepthToSpace=function(){return(oI=t._DepthToSpace=t.asm.DepthToSpace).apply(null,arguments)},sI=t._DepthwiseConv2dNative=function(){return(sI=t._DepthwiseConv2dNative=t.asm.DepthwiseConv2dNative).apply(null,arguments)},aI=t._Elu=function(){return(aI=t._Elu=t.asm.Elu).apply(null,arguments)},iI=t._Equal=function(){return(iI=t._Equal=t.asm.Equal).apply(null,arguments)},Og=t._Exp=function(){return(Og=t._Exp=t.asm.Exp).apply(null,arguments)},uI=t._FlipLeftRight=function(){return(uI=t._FlipLeftRight=t.asm.FlipLeftRight).apply(null,arguments)},lI=t._Floor=function(){return(lI=t._Floor=t.asm.Floor).apply(null,arguments)},Pl=t._FloorDiv=function(){return(Pl=t._FloorDiv=t.asm.FloorDiv).apply(null,arguments)},yd=t._FusedBatchNorm=function(){return(yd=t._FusedBatchNorm=t.asm.FusedBatchNorm).apply(null,arguments)},pI=t._FusedConv2D=function(){return(pI=t._FusedConv2D=t.asm.FusedConv2D).apply(null,arguments)},mI=t._FusedDepthwiseConv2D=function(){return(mI=t._FusedDepthwiseConv2D=t.asm.FusedDepthwiseConv2D).apply(null,arguments)},cI=t._Gather=function(){return(cI=t._Gather=t.asm.Gather).apply(null,arguments)},at=t._GatherNd=function(){return(at=t._GatherNd=t.asm.GatherNd).apply(null,arguments)},dI=t._Greater=function(){return(dI=t._Greater=t.asm.Greater).apply(null,arguments)},fI=t._GreaterEqual=function(){return(fI=t._GreaterEqual=t.asm.GreaterEqual).apply(null,arguments)},hI=t._LeakyRelu=function(){return(hI=t._LeakyRelu=t.asm.LeakyRelu).apply(null,arguments)},gI=t._Less=function(){return(gI=t._Less=t.asm.Less).apply(null,arguments)},bI=t._LessEqual=function(){return(bI=t._LessEqual=t.asm.LessEqual).apply(null,arguments)},yI=t._Log=function(){return(yI=t._Log=t.asm.Log).apply(null,arguments)},Td=t._LogicalAnd=function(){return(Td=t._LogicalAnd=t.asm.LogicalAnd).apply(null,arguments)},zg=t._LogicalNot=function(){return(zg=t._LogicalNot=t.asm.LogicalNot).apply(null,arguments)},Gg=t._LogicalOr=function(){return(Gg=t._LogicalOr=t.asm.LogicalOr).apply(null,arguments)},TI=t._LogicalXor=function(){return(TI=t._LogicalXor=t.asm.LogicalXor).apply(null,arguments)},xI=t._Max=function(){return(xI=t._Max=t.asm.Max).apply(null,arguments)},II=t._MaxPool=function(){return(II=t._MaxPool=t.asm.MaxPool).apply(null,arguments)},CI=t._Maximum=function(){return(CI=t._Maximum=t.asm.Maximum).apply(null,arguments)},kI=t._Mean=function(){return(kI=t._Mean=t.asm.Mean).apply(null,arguments)},SI=t._Min=function(){return(SI=t._Min=t.asm.Min).apply(null,arguments)},ur=t._Minimum=function(){return(ur=t._Minimum=t.asm.Minimum).apply(null,arguments)},vI=t._MirrorPad=function(){return(vI=t._MirrorPad=t.asm.MirrorPad).apply(null,arguments)},AI=t._Multiply=function(){return(AI=t._Multiply=t.asm.Multiply).apply(null,arguments)},wI=t._Neg=function(){return(wI=t._Neg=t.asm.Neg).apply(null,arguments)},Qp=t._NonMaxSuppressionV3=function(){return(Qp=t._NonMaxSuppressionV3=t.asm.NonMaxSuppressionV3).apply(null,arguments)},Ug=t._NonMaxSuppressionV4=function(){return(Ug=t._NonMaxSuppressionV4=t.asm.NonMaxSuppressionV4).apply(null,arguments)},Wg=t._NonMaxSuppressionV5=function(){return(Wg=t._NonMaxSuppressionV5=t.asm.NonMaxSuppressionV5).apply(null,arguments)},Kg=t._NotEqual=function(){return(Kg=t._NotEqual=t.asm.NotEqual).apply(null,arguments)},NI=t._OneHot=function(){return(NI=t._OneHot=t.asm.OneHot).apply(null,arguments)},Vg=t._PadV2=function(){return(Vg=t._PadV2=t.asm.PadV2).apply(null,arguments)},DI=t._Pow=function(){return(DI=t._Pow=t.asm.Pow).apply(null,arguments)},s0=t._Prelu=function(){return(s0=t._Prelu=t.asm.Prelu).apply(null,arguments)},Hg=t._Prod=function(){return(Hg=t._Prod=t.asm.Prod).apply(null,arguments)},a0=t._RealDiv=function(){return(a0=t._RealDiv=t.asm.RealDiv).apply(null,arguments)},PI=t._Relu=function(){return(PI=t._Relu=t.asm.Relu).apply(null,arguments)},FI=t._Relu6=function(){return(FI=t._Relu6=t.asm.Relu6).apply(null,arguments)},MI=t._ResizeBilinear=function(){return(MI=t._ResizeBilinear=t.asm.ResizeBilinear).apply(null,arguments)},RI=t._ResizeNearestNeighbor=function(){return(RI=t._ResizeNearestNeighbor=t.asm.ResizeNearestNeighbor).apply(null,arguments)},EI=t._Reverse=function(){return(EI=t._Reverse=t.asm.Reverse).apply(null,arguments)},_I=t._RotateWithOffset=function(){return(_I=t._RotateWithOffset=t.asm.RotateWithOffset).apply(null,arguments)},LI=t._Round=function(){return(LI=t._Round=t.asm.Round).apply(null,arguments)},$I=t._Rsqrt=function(){return($I=t._Rsqrt=t.asm.Rsqrt).apply(null,arguments)},BI=t._ScatterNd=function(){return(BI=t._ScatterNd=t.asm.ScatterNd).apply(null,arguments)},OI=t._SelectV2=function(){return(OI=t._SelectV2=t.asm.SelectV2).apply(null,arguments)},zI=t._Sigmoid=function(){return(zI=t._Sigmoid=t.asm.Sigmoid).apply(null,arguments)},GI=t._Sin=function(){return(GI=t._Sin=t.asm.Sin).apply(null,arguments)},UI=t._Softmax=function(){return(UI=t._Softmax=t.asm.Softmax).apply(null,arguments)},WI=t._SparseFillEmptyRows=function(){return(WI=t._SparseFillEmptyRows=t.asm.SparseFillEmptyRows).apply(null,arguments)},KI=t._SparseReshape=function(){return(KI=t._SparseReshape=t.asm.SparseReshape).apply(null,arguments)},VI=t._SparseSegmentReduction=function(){return(VI=t._SparseSegmentReduction=t.asm.SparseSegmentReduction).apply(null,arguments)},HI=t._Sqrt=function(){return(HI=t._Sqrt=t.asm.Sqrt).apply(null,arguments)},qI=t._Square=function(){return(qI=t._Square=t.asm.Square).apply(null,arguments)},jI=t._SquaredDifference=function(){return(jI=t._SquaredDifference=t.asm.SquaredDifference).apply(null,arguments)},XI=t._Step=function(){return(XI=t._Step=t.asm.Step).apply(null,arguments)},YI=t._StridedSlice=function(){return(YI=t._StridedSlice=t.asm.StridedSlice).apply(null,arguments)},ZI=t._Sub=function(){return(ZI=t._Sub=t.asm.Sub).apply(null,arguments)},QI=t._Sum=function(){return(QI=t._Sum=t.asm.Sum).apply(null,arguments)},JI=t._Tan=function(){return(JI=t._Tan=t.asm.Tan).apply(null,arguments)},eC=t._Tanh=function(){return(eC=t._Tanh=t.asm.Tanh).apply(null,arguments)},tC=t._Tile=function(){return(tC=t._Tile=t.asm.Tile).apply(null,arguments)},rC=t._TopK=function(){return(rC=t._TopK=t.asm.TopK).apply(null,arguments)},nC=t._Transform=function(){return(nC=t._Transform=t.asm.Transform).apply(null,arguments)},oC=t._Transpose=function(){return(oC=t._Transpose=t.asm.Transpose).apply(null,arguments)},sC=t.__FusedMatMul=function(){return(sC=t.__FusedMatMul=t.asm._FusedMatMul).apply(null,arguments)},aC=t._malloc=function(){return(aC=t._malloc=t.asm.malloc).apply(null,arguments)},iC=t._free=function(){return(iC=t._free=t.asm.free).apply(null,arguments)},uC=t.___errno_location=function(){return(uC=t.___errno_location=t.asm.__errno_location).apply(null,arguments)},lC=t._emscripten_main_thread_process_queued_calls=function(){return(lC=t._emscripten_main_thread_process_queued_calls=t.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},qg=t.stackSave=function(){return(qg=t.stackSave=t.asm.stackSave).apply(null,arguments)},jg=t.stackRestore=function(){return(jg=t.stackRestore=t.asm.stackRestore).apply(null,arguments)},xd=t.stackAlloc=function(){return(xd=t.stackAlloc=t.asm.stackAlloc).apply(null,arguments)},pC=t.dynCall_iijjiiii=function(){return(pC=t.dynCall_iijjiiii=t.asm.dynCall_iijjiiii).apply(null,arguments)},mC=t.dynCall_jiji=function(){return(mC=t.dynCall_jiji=t.asm.dynCall_jiji).apply(null,arguments)};t.cwrap=Ie;var Jp;function Id(K){this.name="ExitStatus",this.message="Program terminated with exit("+K+")",this.status=K}Cu=function K(){Jp||Cd(),Jp||(Cu=K)};function Cd(K){if(K=K||i,eo>0||(kg(),eo>0))return;function Q(){Jp||(Jp=!0,t.calledRun=!0,!ae&&(Sg(),n(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),vg()))}t.setStatus?(t.setStatus("Running..."),setTimeout(function(){setTimeout(function(){t.setStatus("")},1),Q()},1)):Q()}t.run=Cd;function i0(K){pe=K,fd()||(t.onExit&&t.onExit(K),ae=!0),l(K,new Id(K))}if(t.preInit)for(typeof t.preInit=="function"&&(t.preInit=[t.preInit]);t.preInit.length>0;)t.preInit.pop()();Cd();var em;s&&(em={uncaughtException:process.listeners("uncaughtException").filter(function(K){return!s.uncaughtException.indexOf(K)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(K){return!s.unhandledRejection.indexOf(K)>-1})});var tm;if(typeof e<"u")tm=e;else if(typeof WasmBackendModuleThreadedSimd<"u")tm=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(em){var cC=tm._dispose;tm._dispose=function(){cC(),em.uncaughtException.forEach(function(K){process.removeListener("uncaughtException",K)}),em.unhandledRejection.forEach(function(K){process.removeListener("unhandledRejection",K)})}}return e.ready}})();typeof _x=="object"&&typeof VD=="object"?VD.exports=KD:typeof define=="function"&&define.amd?define([],function(){return KD}):typeof _x=="object"&&(_x.WasmBackendModule=KD)});var W6=1e-7,K6=1e-4,ri=class{constructor(e,t){this.backend=e;this.dataMover=t;this.data=new WeakMap;this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},as=class{refCount(e){return to("refCount")}incRef(e){return to("incRef")}timerAvailable(){return!0}time(e){return to("time")}read(e){return to("read")}readSync(e){return to("readSync")}readToGPU(e,t){return to("readToGPU")}numDataIds(){return to("numDataIds")}disposeData(e,t){return to("disposeData")}write(e,t,n){return to("write")}move(e,t,n,o,s){return to("move")}memory(){return to("memory")}floatPrecision(){return to("floatPrecision")}epsilon(){return this.floatPrecision()===32?W6:K6}dispose(){return to("dispose")}};function to(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function y0(r){let e=r.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,nb(r,e,t)}function V6(r,e){if(r.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${e.length}`);let t=r.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,nb(r,t,n),nb(e,t,n)}function sm(r,e,t){return Math.max(r,Math.min(e,t))}function H6(r){return r%2===0?r:r+1}function nb(r,e,t){let n=r[e];r[e]=r[t],r[t]=n}function q6(r){let e=0;for(let t=0;t<r.length;t++)e+=r[t];return e}function j6(r,e){let t=Math.random();return e*t+(1-t)*r}function X6(r,e){let t=0;for(let n=0;n<r.length;n++){let o=Number(r[n])-Number(e[n]);t+=o*o}return t}function P(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function zt(r,e,t=""){P(Gn(r,e),()=>t+` Shapes ${r} and ${e} must match`)}function ro(r){P(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ia(r,e=[],t=!1){if(e==null&&(e=[]),Array.isArray(r)||kr(r)&&!t)for(let n=0;n<r.length;++n)ia(r[n],e,t);else e.push(r);return e}function rt(r){if(r.length===0)return 1;let e=r[0];for(let t=1;t<r.length;t++)e*=r[t];return e}function Y6(r){return r.length===0}function Gn(r,e){if(r===e)return!0;if(r==null||e==null||r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==e[t])return!1;return!0}function Ni(r){return r%1===0}function Z6(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let e=Math.exp(2*r);return(e-1)/(e+1)}}function Q6(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}function J6(r){let e=new Uint32Array(r);for(let t=0;t<r;++t)e[t]=t;return y0(e),e}function El(r,e){return e<=r.length?r:r+" ".repeat(e-r.length)}function ej(r,e=n=>0,t){return new Promise((n,o)=>{let s=0,a=()=>{if(r()){n();return}s++;let i=e(s);if(t!=null&&s>=t){o();return}setTimeout(a,i)};a()})}function tj(r,e){let t=1,n=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)t*=r[s];else if(r[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(n===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${r}`);return r}if(t===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);let o=r.slice();return o[n]=e/t,o}function fr(r,e){let t=e.length;return r=r==null?e.map((n,o)=>o):[].concat(r),P(r.every(n=>n>=-t&&n<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${r}`),P(r.every(n=>Ni(n)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(n=>n<0?t+n:n)}function TC(r,e){let t=[],n=[],o=e!=null&&Array.isArray(e)&&e.length===0,s=e==null||o?null:fr(e,r).sort(),a=0;for(let i=0;i<r.length;++i){if(s!=null){if(s[a]===i&&r[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${r[i]}' is not 1`);(s[a]==null||s[a]>i)&&r[i]===1&&(t.push(r[i]),n.push(i)),s[a]<=i&&a++}r[i]!==1&&(t.push(r[i]),n.push(i))}return{newShape:t,keptDims:n}}function xC(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${r}`);return t}function IC(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else if(r==="string")t=new Array(e);else throw new Error(`Unknown data type ${r}`);return t}function CC(r,e){for(let t=0;t<r.length;t++){let n=r[t];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${e} being uploaded contains ${n}.`)}}function kC(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function rj(r,e){return!(e==="complex64"||e==="float32"&&r!=="complex64"||e==="int32"&&r!=="float32"&&r!=="complex64"||e==="bool"&&r==="bool")}function kr(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}function ob(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function SC(r){if(r==null)return 0;let e=0;return r.forEach(t=>e+=t.length),e}function ua(r){return typeof r=="string"||r instanceof String}function T0(r){return typeof r=="boolean"}function x0(r){return typeof r=="number"}function am(r){return Array.isArray(r)?am(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":x0(r)?"float32":ua(r)?"string":T0(r)?"bool":"float32"}function ni(r){return!!(r&&r.constructor&&r.call&&r.apply)}function im(r,e){for(let t=e;t<r;++t)if(r%t===0)return t;return r}function oi(r){let e=r.length;if(e<2)return[];let t=new Array(e-1);t[e-2]=r[e-1];for(let n=e-3;n>=0;--n)t[n]=t[n+1]*r[n+1];return t}function I0(r,e,t,n=!1){let o=new Array;if(e.length===1){let s=e[0]*(n?2:1);for(let a=0;a<s;a++)o[a]=t[r+a]}else{let s=e[0],a=e.slice(1),i=a.reduce((u,l)=>u*l)*(n?2:1);for(let u=0;u<s;u++)o[u]=I0(r+u*i,a,t,n)}return o}function Rl(r,e,t=!1){if(r.length===0)return e[0];let n=r.reduce((o,s)=>o*s)*(t?2:1);if(n===0)return[];if(n!==e.length)throw new Error(`[${r}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return I0(0,r,e,t)}function vd(r,e){let t=um(r,e);for(let n=0;n<t.length;n++)t[n]=1;return t}function um(r,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${e}`)}function nj(r,e){let t=r.reduce((n,o)=>n*o,1);if(e==null||e==="float32")return Rl(r,new Float32Array(t));if(e==="int32")return Rl(r,new Int32Array(t));if(e==="bool")return Rl(r,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function Ad(r){r.forEach(e=>{P(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function oj(r,e,t){if(e===0)return 0;if(e===1)return r[0];let n=r[r.length-1];for(let o=0;o<r.length-1;++o)n+=t[o]*r[o];return n}function sj(r,e,t){if(e===0)return[];if(e===1)return[r];let n=new Array(e);for(let o=0;o<n.length-1;++o)n[o]=Math.floor(r/t[o]),r-=n[o]*t[o];return n[n.length-1]=r,n}function wd(r){return r&&r.then&&typeof r.then=="function"}var C0="tfjsflags",sb=class{constructor(e){this.global=e;this.flags={};this.flagRegistry={};this.urlFlags={};this.getQueryParams=ij;this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(B().getBool("IS_TEST")||B().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let o=this.urlFlags[e];B().getBool("IS_TEST")||B().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${o}.`),this.set(e,o)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(wd(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);C0 in e&&e[C0].split(",").forEach(n=>{let[o,s]=n.split(":");this.urlFlags[o]=lj(o,s)})}};function ij(r){let e={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(uj(e,n[0],n[1]),n.join("="))),e}function uj(r,e,t){r[decodeURIComponent(e)]=decodeURIComponent(t||"")}function lj(r,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${r}.`)}function B(){return vC}var vC=null;function k0(r){vC=r}var AC;function wC(){if(AC==null){let r;if(typeof window<"u")r=window;else if(typeof global<"u")r=global;else if(typeof process<"u")r=process;else if(typeof self<"u")r=self;else throw new Error("Could not find a global object");AC=r}return AC}function pj(){let r=wC();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function Nd(r,e){let t=pj();if(t.has(r))return t.get(r);{let n=e();return t.set(r,n),t.get(r)}}var is="Abs",Di="Acos",Pi="Acosh",wn="Add",no="AddN",Fi="All",Mi="Any",oo="ArgMax",si="ArgMin",Ri="Asin",Ei="Asinh",_i="Atan",Li="Atanh",$i="Atan2",so="AvgPool",lm="AvgPoolGrad",vu="AvgPool3D",pm="AvgPool3DGrad",ao="BatchMatMul",us="BatchToSpaceND",mm="Bincount",S0="BroadcastTo",cm="BroadcastArgs",Un="Cast",io="Ceil",Wn="ClipByValue",Au="Complex",wu="ComplexAbs",ls="Concat",uo="Conv2D",dm="Conv2DBackpropFilter",lo="Conv2DBackpropInput",Nu="Conv3D",fm="Conv3DBackpropFilterV2",hm="Conv3DBackpropInputV2",po="Cos",mo="Cosh",la="Cumprod",co="Cumsum",pa="CropAndResize",gm="DenseBincount",ma="DepthToSpace",fo="DepthwiseConv2dNative",bm="DepthwiseConv2dNativeBackpropFilter",ym="DepthwiseConv2dNativeBackpropInput",Tm="Diag",Du="Dilation2D",Dd="Dilation2DBackpropInput",Pd="Dilation2DBackpropFilter",ho="RealDiv",Pu="Einsum",go="Elu",xm="EluGrad",Bi="Erf",ca="Equal",bo="Exp",ps="ExpandDims",da="Expm1",Im="FFT",ai="Fill",fa="FlipLeftRight",yo="Floor",To="FloorDiv",xo="FusedBatchNorm",ms="GatherV2",ha="GatherNd",ga="Greater",Io="GreaterEqual",Kn="Identity",Cm="IFFT",Fu="Imag",Oi="IsFinite",zi="IsInf",Gi="IsNan",Co="LeakyRelu",ba="Less",ya="LessEqual",km="LinSpace",ko="Log",Ui="Log1p",Ta="LogicalAnd",xa="LogicalNot",Wi="LogicalOr",v0="LogicalXor",A0="LogSoftmax",qhe="LowerBound",Mu="LRN",Sm="LRNGrad",So="Max",vo="Maximum",Ao="MaxPool",vm="MaxPoolGrad",Ru="MaxPool3D",Am="MaxPool3DGrad",wm="MaxPoolWithArgmax",wo="Mean",No="Min",Do="Minimum",Po="MirrorPad",Ki="Mod",Nm="Multinomial",Fo="Multiply",cs="Neg",Ia="NotEqual",Ca="NonMaxSuppressionV3",Vi="NonMaxSuppressionV4",ka="NonMaxSuppressionV5",ds="OnesLike",Sa="OneHot",fs="Pack",Mo="PadV2",jhe="Pool",Ro="Pow",Eo="Prelu",_o="Prod",ii="Range",Eu="Real",Hi="Reciprocal",Lo="Relu",hs="Reshape",$o="ResizeNearestNeighbor",Dm="ResizeNearestNeighborGrad",Bo="ResizeBilinear",Pm="ResizeBilinearGrad",Oo="Relu6",va="Reverse",Aa="Round",zo="Rsqrt",wa="ScatterNd",Fm="SearchSorted",gs="Select",qi="Selu",bs="Slice",Go="Sin",Na="Sinh",ji="Sign",Uo="Sigmoid",Xi="Softplus",Wo="Sqrt",Ko="Sum",ys="SpaceToBatchND",Ts="SplitV",Vo="Softmax",_u="SparseFillEmptyRows",Yi="SparseReshape",Lu="SparseSegmentMean",$u="SparseSegmentSum",Bu="SparseToDense",Ho="SquaredDifference",ui="Square",Da="StridedSlice",li="StringNGrams",Ou="StringSplit",zu="StringToHashBucketFast",qo="Sub",Pa="Tan",jo="Tanh",Nn="Tile",Fa="TopK",Ma="Transform",Dn="Transpose",Mm="Unique",xs="Unpack",Gu="UnsortedSegmentSum",Xhe="UpperBound",Is="ZerosLike",Cs="Step",_l="FromPixels",Ra="RotateWithOffset",ks="_FusedMatMul",Ss="FusedConv2D",vs="FusedDepthwiseConv2D";function pi(...r){B().getBool("IS_TEST")||B().getBool("PROD")||console.warn(...r)}function mj(...r){B().getBool("IS_TEST")||B().getBool("PROD")||console.log(...r)}var Rm=Nd("kernelRegistry",()=>new Map),Fd=Nd("gradRegistry",()=>new Map);function Md(r,e){let t=DC(r,e);return Rm.get(t)}function NC(r){return Fd.get(r)}function ab(r){let e=Rm.entries(),t=[];for(;;){let{done:n,value:o}=e.next();if(n)break;let[s,a]=o,[i]=s.split("_");i===r&&t.push(a)}return t}function Zi(r){let{kernelName:e,backendName:t}=r,n=DC(e,t);Rm.has(n)&&pi(`The kernel '${e}' for backend '${t}' is already registered`),Rm.set(n,r)}function N0(r){let{kernelName:e}=r;Fd.has(e)&&B().getBool("DEBUG")&&pi(`Overriding the gradient for '${e}'`),Fd.set(e,r)}function ege(r,e){let t=DC(r,e);if(!Rm.has(t))throw new Error(`The kernel '${r}' for backend '${e}' is not registered`);Rm.delete(t)}function tge(r){if(!Fd.has(r))throw new Error(`The gradient '${r}' for backend is not registered`);Fd.delete(r)}function rge(r,e){ab(r).forEach(n=>{let o=Object.assign({},n,{backendName:e});Zi(o)})}function DC(r,e){return`${e}_${r}`}var b={};je(b,{arraysEqual:()=>Gn,assert:()=>P,assertNonNegativeIntegerDimensions:()=>Ad,assertNonNull:()=>ro,assertShapesMatch:()=>zt,bytesFromStringArray:()=>SC,bytesPerElement:()=>ob,checkConversionForErrors:()=>CC,clamp:()=>sm,computeStrides:()=>oi,createScalarValue:()=>yj,createShuffledIndices:()=>J6,decodeString:()=>$m,distSquared:()=>X6,encodeString:()=>Wu,fetch:()=>xj,fingerPrint64:()=>bj,flatten:()=>ia,getArrayFromDType:()=>IC,getTypedArrayFromDType:()=>xC,hasEncodingLoss:()=>rj,hexToLong:()=>Rd,indexToLoc:()=>sj,inferDtype:()=>am,inferFromImplicitShape:()=>tj,isBoolean:()=>T0,isFunction:()=>ni,isInt:()=>Ni,isNumber:()=>x0,isPromise:()=>wd,isScalarShape:()=>Y6,isString:()=>ua,isTypedArray:()=>kr,isValidDtype:()=>kC,locToIndex:()=>oj,makeOnesTypedArray:()=>vd,makeZerosNestedTypedArray:()=>nj,makeZerosTypedArray:()=>um,nearestDivisor:()=>im,nearestLargerEven:()=>H6,now:()=>zl,parseAxisParam:()=>fr,randUniform:()=>j6,repeatedTry:()=>ej,rightPad:()=>El,shuffle:()=>y0,shuffleCombo:()=>V6,sizeFromShape:()=>rt,sizeToSquarishShape:()=>Q6,squeezeShape:()=>TC,sum:()=>q6,swap:()=>nb,tanh:()=>Z6,toNestedArray:()=>Rl,toTypedArray:()=>Lm});var RC=Ml(O0());var Ol=RC.default||RC;function Rd(r){return Ol.fromString(r,!0,16)}var G0=Rd("c3a5c85c97cb3127"),Bl=Rd("b492b66fbe98f273"),pn=Rd("9ae16a3b2f90404f");function MC(r){return r.xor(r.shru(47))}function U0(r,e,t){let n=r.slice(e,e+t);return Ol.fromBytes(Array.from(n),!0,!0)}function qt(r,e){return U0(r,e,8)}function z0(r,e){return U0(r,e,4)}function Mr(r,e){return e===0?r:r.shru(e).or(r.shl(64-e))}function Uu(r,e,t=Rd("9ddfea08eb382d69")){let n=r.xor(e).mul(t);n=n.xor(n.shru(47));let o=e.xor(n).mul(t);return o=o.xor(o.shru(47)),o=o.mul(t),o}function dj(r,e,t,n,o,s){o=o.add(r),s=Mr(s.add(o).add(n),21);let a=o;return o=o.add(e),o=o.add(t),s=s.add(Mr(o,44)),[o.add(n),s.add(a)]}function ub(r,e,t,n){return dj(qt(r,e),qt(r,e+8),qt(r,e+16),qt(r,e+24),t,n)}function fj(r,e=r.length){if(e>=8){let t=pn.add(e*2),n=qt(r,0).add(pn),o=qt(r,e-8),s=Mr(o,37).mul(t).add(n),a=Mr(n,25).add(o).mul(t);return Uu(s,a,t)}if(e>=4){let t=pn.add(e*2),n=z0(r,0);return Uu(n.shl(3).add(e),z0(r,e-4),t)}if(e>0){let t=r[0],n=r[e>>1],o=r[e-1],s=t+(n<<8),a=e+(o<<2);return MC(pn.mul(s).xor(G0.mul(a))).mul(pn)}return pn}function hj(r,e=r.length){let t=pn.add(e*2),n=qt(r,0).mul(Bl),o=qt(r,8),s=qt(r,e-8).mul(t),a=qt(r,e-16).mul(pn);return Uu(Mr(n.add(o),43).add(Mr(s,30)).add(a),n.add(Mr(o.add(pn),18)).add(s),t)}function gj(r,e=r.length){let t=pn.add(e*2),n=qt(r,0).mul(pn),o=qt(r,8),s=qt(r,e-8).mul(t),a=qt(r,e-16).mul(pn),i=Mr(n.add(o),43).add(Mr(s,30)).add(a),u=Uu(i,n.add(Mr(o.add(pn),18)).add(s),t),l=qt(r,16).mul(t),p=qt(r,24),m=i.add(qt(r,e-32)).mul(t),c=u.add(qt(r,e-24)).mul(t);return Uu(Mr(l.add(p),43).add(Mr(m,30)).add(c),l.add(Mr(p.add(n),18)).add(m),t)}function bj(r,e=r.length){let t=Ol.fromNumber(81,!0);if(e<=32)return e<=16?fj(r,e):hj(r,e);if(e<=64)return gj(r,e);let n=t,o=t.mul(Bl).add(113),s=MC(o.mul(pn).add(113)).mul(pn),a=[Ol.UZERO,Ol.UZERO],i=[Ol.UZERO,Ol.UZERO];n=n.mul(pn).add(qt(r,0));let u=0,l=(e-1>>6)*64,p=l+(e-1&63)-63;do n=Mr(n.add(o).add(a[0]).add(qt(r,u+8)),37).mul(Bl),o=Mr(o.add(a[1]).add(qt(r,u+48)),42).mul(Bl),n=n.xor(i[1]),o=o.add(a[0]).add(qt(r,u+40)),s=Mr(s.add(i[0]),33).mul(Bl),a=ub(r,u,a[1].mul(Bl),n.add(i[0])),i=ub(r,u+32,s.add(i[1]),o.add(qt(r,u+16))),[s,n]=[n,s],u+=64;while(u!==l);let m=Bl.add(s.and(255).shl(1));return u=p,i[0]=i[0].add(e-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),n=Mr(n.add(o).add(a[0]).add(qt(r,u+8)),37).mul(m),o=Mr(o.add(a[1]).add(qt(r,u+48)),42).mul(m),n=n.xor(i[1].mul(9)),o=o.add(a[0].mul(9).add(qt(r,u+40))),s=Mr(s.add(i[0]),33).mul(m),a=ub(r,u,a[1].mul(m),n.add(i[0])),i=ub(r,u+32,s.add(i[1]),o.add(qt(r,u+16))),[s,n]=[n,s],Uu(Uu(a[0],i[0],m).add(MC(o).mul(G0)).add(s),Uu(a[1],i[1],m).add(n),m)}function yj(r,e){return e==="string"?Wu(r):Lm([r],e)}function Tj(r,e){return r instanceof Float32Array&&e==="float32"||r instanceof Int32Array&&e==="int32"||r instanceof Uint8Array&&e==="bool"}function Lm(r,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=ia(r)),B().getBool("DEBUG")&&CC(r,e),Tj(r,e))return r;if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"){let t=new Uint8Array(r.length);for(let n=0;n<t.length;++n)Math.round(r[n])!==0&&(t[n]=1);return t}else throw new Error(`Unknown data type ${e}`)}function zl(){return B().platform.now()}function xj(r,e){return B().platform.fetch(r,e)}function Wu(r,e="utf-8"){return e=e||"utf-8",B().platform.encode(r,e)}function $m(r,e="utf-8"){return e=e||"utf-8",B().platform.decode(r,e)}var EC=class{constructor(e,t){this.backendTimer=e;this.logger=t;t==null&&(this.logger=new W0)}profileKernel(e,t,n){let o,s=()=>{o=n()},a,i=zl();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let l of o)l.dataSync();a=Promise.resolve({kernelMs:zl()-i})}if(B().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<o.length;l++){let p=o[l];p.data().then(m=>{Ij(m,p.dtype,e)})}return{kernelName:e,outputs:o,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:o,inputs:s,extraInfo:a}=e;n.forEach(i=>{Promise.all([i.data(),o,a]).then(u=>{this.logger.logKernelProfile(t,i,u[0],u[1],s,u[2])})})}};function Ij(r,e,t){if(e!=="float32")return!1;for(let n=0;n<r.length;n++){let o=r[n];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${t}'`),!0}return!1}var W0=class{logKernelProfile(e,t,n,o,s,a){let i=typeof o=="number"?El(`${o}ms`,9):o.error,u=El(e,25),l=t.rank,p=t.size,m=El(t.shape.toString(),14),c="";for(let d in s){let f=s[d];if(f!=null){let h=f.shape||t.shape,g=h.length;c+=`${d}: ${g}D ${g>0?h:""} `}}console.log(`%c${u}	%c${i}	%c${l}D ${m}	%c${p}	%c${c}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function K0(r,e,t){let n={},o={};for(let u=0;u<e.length;u++)n[e[u].id]=!0;for(let u=0;u<r.length;u++){let l=r[u],p=l.inputs;for(let m in p){let c=p[m],d=!1;for(let f=0;f<e.length;f++)if(n[c.id]){l.outputs.forEach(h=>n[h.id]=!0),d=!0,o[l.id]=!0;break}if(d)break}}let s={};s[t.id]=!0;let a={};for(let u=r.length-1;u>=0;u--){let l=r[u],p=l.inputs;for(let m=0;m<l.outputs.length;m++)if(s[l.outputs[m].id]){for(let c in p)s[p[c].id]=!0,a[l.id]=!0;break}}let i=[];for(let u=0;u<r.length;u++){let l=r[u];if(o[l.id]&&a[l.id]){let p={};for(let c in l.inputs){let d=l.inputs[c];n[d.id]&&(p[c]=d)}let m=Object.assign({},l);m.inputs=p,m.outputs=l.outputs,i.push(m)}}return i}function V0(r,e,t,n){for(let o=e.length-1;o>=0;o--){let s=e[o],a=[];if(s.outputs.forEach(u=>{let l=r[u.id];l!=null?a.push(l):a.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let i=s.gradient(a);for(let u in s.inputs){if(!(u in i))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(i)}.`);let l=t(()=>i[u]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${l.dtype}'`);let p=s.inputs[u];if(!Gn(l.shape,p.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${u}' has shape '${l.shape}', which does not match the shape of the input '${p.shape}'`);if(r[p.id]==null)r[p.id]=l;else{let m=r[p.id];r[p.id]=n(m,l),m.dispose()}}}}var H0=20,Ed=3,_C=7;function q0(r,e,t,n){let o=oi(e),s=Cj(r,e,t,o),a=e.length,i=lb(r,e,t,o,s),u=["Tensor"];return n&&(u.push(`  dtype: ${t}`),u.push(`  rank: ${a}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(i.map(l=>"    "+l).join(`
`)),u.join(`
`)}function Cj(r,e,t,n){let o=rt(e),s=n[n.length-1],a=new Array(s).fill(0),i=e.length,u=t==="complex64"?Ld(r):r;if(i>1)for(let l=0;l<o/s;l++){let p=l*s;for(let m=0;m<s;m++)a[m]=Math.max(a[m],_d(u[p+m],0,t).length)}return a}function _d(r,e,t){let n;return Array.isArray(r)?n=`${parseFloat(r[0].toFixed(_C))} + ${parseFloat(r[1].toFixed(_C))}j`:ua(r)?n=`'${r}'`:t==="bool"?n=j0(r):n=parseFloat(r.toFixed(_C)).toString(),El(n,e)}function j0(r){return r===0?"false":"true"}function lb(r,e,t,n,o,s=!0){let a=t==="complex64"?2:1,i=e[0],u=e.length;if(u===0){if(t==="complex64"){let h=Ld(r);return[_d(h[0],0,t)]}return t==="bool"?[j0(r[0])]:[r[0].toString()]}if(u===1){if(i>H0){let g=Ed*a,y=Array.from(r.slice(0,g)),T=Array.from(r.slice((i-Ed)*a,i*a));return t==="complex64"&&(y=Ld(y),T=Ld(T)),["["+y.map((x,I)=>_d(x,o[I],t)).join(", ")+", ..., "+T.map((x,I)=>_d(x,o[i-Ed+I],t)).join(", ")+"]"]}let h=t==="complex64"?Ld(r):Array.from(r);return["["+h.map((g,y)=>_d(g,o[y],t)).join(", ")+"]"]}let l=e.slice(1),p=n.slice(1),m=n[0]*a,c=[];if(i>H0){for(let h=0;h<Ed;h++){let g=h*m,y=g+m;c.push(...lb(r.slice(g,y),l,t,p,o,!1))}c.push("...");for(let h=i-Ed;h<i;h++){let g=h*m,y=g+m;c.push(...lb(r.slice(g,y),l,t,p,o,h===i-1))}}else for(let h=0;h<i;h++){let g=h*m,y=g+m;c.push(...lb(r.slice(g,y),l,t,p,o,h===i-1))}let d=u===2?",":"";c[0]="["+c[0]+d;for(let h=1;h<c.length-1;h++)c[h]=" "+c[h]+d;let f=`,
`;for(let h=2;h<u;h++)f+=`
`;return c[c.length-1]=" "+c[c.length-1]+"]"+(s?"":f),c}function Ld(r){let e=[];for(let t=0;t<r.length;t+=2)e.push([r[t],r[t+1]]);return e}var yt=class{constructor(e,t,n){this.dtype=t;if(this.shape=e.slice(),this.size=rt(e),n!=null){let o=n.length;P(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||IC(t,this.size),this.strides=oi(e)}set(e,...t){t.length===0&&(t=[0]),P(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let o of e){if(o<0||o>=this.shape[t]){let s=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(s)}t++}let n=e[e.length-1];for(let o=0;o<e.length-1;++o)n+=this.strides[o]*e[o];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return _a().makeTensor(this.values,this.shape,this.dtype)}},_a=null,Bm=null,kj=null;function X0(r){_a=r}function Y0(r){Bm=r}function Z0(r){kj=r}var Xe=class{constructor(e,t,n,o){this.kept=!1;this.isDisposedInternal=!1;this.shape=e.slice(),this.dtype=t||"float32",this.size=rt(e),this.strides=oi(e),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Bm.buffer(this.shape,this.dtype,e)}bufferSync(){return Bm.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Rl(this.shape,e,this.dtype==="complex64")}arraySync(){return Rl(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=_a().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>$m(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),_a().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=_a().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>$m(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await _a().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(_a().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Bm.print(this,e)}clone(){return this.throwIfDisposed(),Bm.clone(this)}toString(e=!1){let t=this.dataSync();return q0(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Bm.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),_a().makeVariable(this,e,t,n)}};Object.defineProperty(Xe,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function Sj(){return Nd("Tensor",()=>Xe)}Sj();var Ku=class extends Xe{constructor(e,t,n,o){super(e.shape,e.dtype,e.dataId,o);this.trainable=t;this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Gn(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);_a().disposeTensor(this),this.dataId=e.dataId,_a().incRef(this,null)}dispose(){_a().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Ku,Symbol.hasInstance,{value:r=>r instanceof Xe&&r.assign!=null&&r.assign instanceof Function});var Ds={};je(Ds,{assertTypesMatch:()=>LC,getTensorsInContainer:()=>$d,isTensorInList:()=>Aj,makeTypesMatch:()=>Qe});var Q0=(i=>(i.R0="R0",i.R1="R1",i.R2="R2",i.R3="R3",i.R4="R4",i.R5="R5",i.R6="R6",i))(Q0||{}),J0=(o=>(o.float32="float32",o.int32="int32",o.bool="int32",o.complex64="complex64",o))(J0||{}),e2=(o=>(o.float32="float32",o.int32="int32",o.bool="bool",o.complex64="complex64",o))(e2||{}),t2=(o=>(o.float32="float32",o.int32="float32",o.bool="float32",o.complex64="complex64",o))(t2||{}),r2=(o=>(o.float32="complex64",o.int32="complex64",o.bool="complex64",o.complex64="complex64",o))(r2||{}),vj={float32:t2,int32:J0,bool:e2,complex64:r2};function Et(r,e){if(r==="string"||e==="string"){if(r==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${r} with ${e}`)}return vj[r][e]}function Qi(r){return Et(r,"int32")}function Qe(r,e){if(r.dtype===e.dtype)return[r,e];let t=Et(r.dtype,e.dtype);return[r.cast(t),e.cast(t)]}function LC(r,e){P(r.dtype===e.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${e.dtype}) input must match`)}function Aj(r,e){return e.some(t=>t.id===r.id)}function $d(r){let e=[];return n2(r,e,new Set),e}function n2(r,e,t){if(r==null)return;if(r instanceof Xe){e.push(r);return}if(!wj(r))return;let n=r;for(let o in n){let s=n[o];t.has(s)||(t.add(s),n2(s,e,t))}}function wj(r){return Array.isArray(r)||typeof r=="object"}function $C(r){return r.kernelName!=null}var BC=class{constructor(){this.registeredVariables={};this.nextTapeNodeId=0;this.numBytes=0;this.numTensors=0;this.numStringTensors=0;this.numDataBuffers=0;this.gradientDepth=0;this.kernelDepth=0;this.scopeStack=[];this.numDataMovesStack=[];this.nextScopeId=0;this.tensorInfo=new WeakMap;this.profiling=!1;this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},mb=class{constructor(e){this.ENV=e;this.registry={};this.registryFactory={};this.pendingBackendInitId=0;this.state=new BC}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(pi(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new EC(this.backendInstance),!0}setupRegisteredKernels(){ab(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){ab(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof as)&&typeof n.then=="function"){let o=++this.pendingBackendInitId,s=n.then(a=>o<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,pi(`Initialization of backend ${e} failed`),pi(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return pi(`Initialization of backend ${e} failed`),pi(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:o,asyncInit:s}=this.initializeBackend(n);if(s||o)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),o=n.backend,s=this.readSync(t),a=o.refCount(t);o.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let o;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(o),()=>(o=t(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(e,t,n){e();try{let o=n();return t(),o}catch(o){throw t(),o}}nextTensorId(){return mb.nextTensorId++}nextVariableId(){return mb.nextVariableId++}clone(e){let t=D.runKernel(Kn,{x:e}),n={x:e},o=a=>({x:()=>{let i="float32",u={x:a},l={dtype:i};return D.runKernel(Un,u,l)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[t],o,s,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(Md(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let o=this.backend.numDataIds(),s=0;n.forEach(u=>{s+=u.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=o-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],o=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let u,l=$C(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if($C(e)){let{kernelName:f,inputs:h,attrs:g}=e;this.backendName==null&&this.backend;let y=Md(f,this.backendName);P(y!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{let T=this.backend.numDataIds();u=y.kernelFunc({inputs:h,attrs:g,backend:this.backend});let x=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,T,x);let I=x.map(k=>k.rank!=null?k:this.makeTensorFromTensorInfo(k));if(o){let k=this.getTensorsForGradient(f,h,I);n=this.saveTensorsForBackwardMode(k)}return I}}else{let{forwardFunc:f}=e,h=g=>{!o||(n=g.map(y=>this.keep(this.clone(y))))};i=()=>{let g=this.backend.numDataIds();u=this.tidy(()=>f(this.backend,h));let y=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,g,y),y}}let{inputs:p,attrs:m}=e,c=$C(e)?null:e.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(d=this.profiler.profileKernel(l,p,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs)}),o&&this.addTapeNode(l,p,t,c,n,m),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(f=>p[f]!=null?p[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let o=NC(e);if(o!=null){let s=o.inputsToSave||[],a=o.outputsToSave||[],i;o.saveAllInputs?(P(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(l=>t[l])):i=s.map(l=>t[l]);let u=n.filter((l,p)=>a[p]);return i.concat(u)}return[]}makeTensor(e,t,n,o){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",o=o||this.backend;let s=e;n==="string"&&ua(e[0])&&(s=e.map(u=>Wu(u)));let a=o.write(s,t,n),i=new Xe(t,n,a,this.nextTensorId());if(this.trackTensor(i,o),n==="string"){let u=this.state.tensorInfo.get(a),l=SC(s);this.state.numBytes+=l-u.bytes,u.bytes=l}return i}makeTensorFromDataId(e,t,n,o){n=n||"float32";let s={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(s,o)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:o,dtype:s}=e,a=new Xe(o,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,o){n=n||this.nextVariableId().toString(),o!=null&&o!==e.dtype&&(e=e.cast(o));let s=new Ku(e,t,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*ob(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ku||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*ob(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,o,s,a){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},u=NC(e);u!=null&&(o=u.gradFunc),o!=null&&(i.gradient=l=>(l=l.map((p,m)=>{if(p==null){let c=n[m],d=um(c.size,c.dtype);return this.makeTensor(d,c.shape,c.dtype)}return p}),o(l.length>1?l:l[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=$d(e),n=new Set(t.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!n.has(a.id)&&a.dispose()}let o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(s=>{!s.kept&&s.scopeId===o.id&&this.track(s)})}gradients(e,t,n,o=!1){if(P(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));P(s instanceof Xe,()=>"The result y returned by f() must be a tensor.");let a=K0(this.state.activeTape,t,s);if(!o&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[s.id]=n??Nj(s.shape),V0(i,a,l=>this.tidy(l),Dj);let u=t.map(l=>i[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let p of l.saved)p.dispose()}),this.state.activeTape=null),{value:s,grads:u}})}customGrad(e){return P(ni(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{P(t.every(i=>i instanceof Xe),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,o={};t.forEach((i,u)=>{o[u]=i});let s=(i,u)=>(n=e(...t,u),P(n.value instanceof Xe,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),P(ni(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(i,u)=>{let l=n.gradFunc(i,u),p=Array.isArray(l)?l:[l];P(p.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),P(p.every(c=>c instanceof Xe),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let m={};return p.forEach((c,d)=>{m[d]=()=>c}),m};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=zl(),n=await this.backend.time(e);return n.wallMs=zl()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new BC;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},pb=mb;pb.nextTensorId=0,pb.nextVariableId=0;function Nj(r){let e=vd(rt(r),"float32");return D.makeTensor(e,r,"float32")}function OC(){let r=wC();if(r._tfengine==null){let e=new sb(r);r._tfengine=new pb(e)}return k0(r._tfengine.ENV),X0(()=>r._tfengine),r._tfengine}var D=OC();function Dj(r,e){let t={a:r,b:e};return D.runKernel(wn,t)}var Vu={};je(Vu,{isBrowser:()=>GC,isMobile:()=>Mj,mockIsMobile:()=>Fj});function Pj(){return typeof navigator<"u"&&navigator!=null}var zC;function Fj(r){zC=r}function Mj(r){if(zC!==void 0)return zC;if(r||Pj()){if(r||(r=navigator),r.product==="ReactNative")return!0;let e=r.userAgent||r.vendor||(typeof window<"u"?window.opera:"");if(!e){let t=r;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function GC(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Ps=B();Ps.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Ps.registerFlag("IS_BROWSER",()=>GC());Ps.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Ps.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Ps.registerFlag("PROD",()=>!1);Ps.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Ps.getBool("DEBUG"));Ps.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Ps.registerFlag("IS_TEST",()=>!1);Ps.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Ps.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Ps.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function $r(r,e){let t=r;if(kr(r))return e==="string"?[]:[r.length];if(!Array.isArray(r))return[];let n=[];for(;Array.isArray(t)||kr(t)&&e!=="string";)n.push(t.length),t=t[0];return Array.isArray(r)&&B().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&s2(r,n,[]),n}function s2(r,e,t){if(t=t||[],!Array.isArray(r)&&!kr(r)){P(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}P(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${r.length} elements`),P(r.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${r.length} elements`);let n=e.slice(1);for(let o=0;o<r.length;++o)s2(r[o],n,t.concat(o))}function o2(r,e,t,n){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==e||r==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${n}' must be ${r} tensor, but got ${e} tensor`)}}function v(r,e,t,n="numeric"){if(r instanceof Xe)return o2(n,r.dtype,e,t),r;let o=am(r);if(o!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(o=n),o2(n,o,e,t),r==null||!kr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let u=r==null?"null":r.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${u}'`)}let s=$r(r,o);!kr(r)&&!Array.isArray(r)&&(r=[r]);let i=o!=="string"?Lm(r,o):ia(r,[],!0);return D.makeTensor(i,s,o)}function Ji(r,e,t,n="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,a)=>v(s,`${e}[${a}]`,t,n))}var UC="__op";function A(r){let e=Object.keys(r);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0],n=r[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+UC;let o=(...s)=>{D.startScope(t);try{let a=n(...s);return wd(a)&&console.error("Cannot return a Promise inside of tidy."),D.endScope(a),a}catch(a){throw D.endScope(null),a}};return Object.defineProperty(o,"name",{value:t,configurable:!0}),o}function Rj(r,e){let t=v(r,"real","complex"),n=v(e,"imag","complex");zt(t.shape,n.shape,`real and imag shapes, ${t.shape} and ${n.shape}, must match in call to tf.complex().`);let o={real:t,imag:n};return D.runKernel(Au,o)}var Pn=A({complex_:Rj});function mn(r,e,t,n){if(n==null&&(n=am(r)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!kr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Ad(e);let o=rt(e),s=rt(t);P(o===s,()=>`Based on the provided shape, [${e}], the tensor should have ${o} values but has ${s}`);for(let a=0;a<t.length;++a){let i=t[a],u=a===t.length-1?i!==rt(e.slice(a)):!0;P(t[a]===e[a]||!u,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!kr(r)&&!Array.isArray(r)&&(r=[r]),e=e||t,r=n!=="string"?Lm(r,n):ia(r,[],!0),D.makeTensor(r,e,n)}function wr(r,e,t){let n=$r(r,t);return mn(r,e,n,t)}var Bd={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var cb=4;async function i2(r,e){let t=[],n=[],o=Array.isArray(r)?r.map(a=>a.name):Object.keys(r);for(let a=0;a<o.length;++a){let i=o[a],u=Array.isArray(r)?r[a].tensor:r[i];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${u.dtype}`);let l={name:i,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){let p=new Promise(async m=>{let c=await u.bytes(),d=c.reduce((g,y)=>g+y.length,0)+cb*c.length,f=new Uint8Array(d),h=0;for(let g=0;g<c.length;g++){let y=c[g],T=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(T,h),h+=cb,f.set(y,h),h+=y.length}m(f)});n.push(p)}else n.push(u.data());e!=null&&(l.group=e),t.push(l)}let s=await Promise.all(n);return{data:Ej(s),specs:t}}function db(r,e){let t={},n,o=0;for(let s of e){let a=s.name,i=s.dtype,u=s.shape,l=rt(u),p;if("quantization"in s){let m=s.quantization;if(m.dtype==="uint8"||m.dtype==="uint16"){if(!("min"in m&&"scale"in m))throw new Error(`Weight ${s.name} with quantization ${m.dtype} doesn't have corresponding metadata min and scale.`)}else if(m.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${s.name} is quantized with ${m.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${m.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let c=Bd[m.dtype],d=r.slice(o,o+l*c),f=m.dtype==="uint8"?new Uint8Array(d):new Uint16Array(d);if(i==="float32")if(m.dtype==="uint8"||m.dtype==="uint16"){p=new Float32Array(f.length);for(let h=0;h<f.length;h++){let g=f[h];p[h]=g*m.scale+m.min}}else if(m.dtype==="float16")n===void 0&&(n=Bj()),p=n(f);else throw new Error(`Unsupported quantization type ${m.dtype} for weight type float32.`);else if(i==="int32"){if(m.dtype!=="uint8"&&m.dtype!=="uint16")throw new Error(`Unsupported quantization type ${m.dtype} for weight type int32.`);p=new Int32Array(f.length);for(let h=0;h<f.length;h++){let g=f[h];p[h]=Math.round(g*m.scale+m.min)}}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=l*c}else if(i==="string"){let m=rt(s.shape);p=[];for(let c=0;c<m;c++){let d=new Uint32Array(r.slice(o,o+cb))[0];o+=cb;let f=new Uint8Array(r.slice(o,o+d));p.push(f),o+=d}}else{let m=Bd[i],c=r.slice(o,o+l*m);if(i==="float32")p=new Float32Array(c);else if(i==="int32")p=new Int32Array(c);else if(i==="bool")p=new Uint8Array(c);else if(i==="complex64"){p=new Float32Array(c);let d=new Float32Array(p.length/2),f=new Float32Array(p.length/2);for(let y=0;y<d.length;y++)d[y]=p[y*2],f[y]=p[y*2+1];let h=wr(d,u,"float32"),g=wr(f,u,"float32");t[a]=Pn(h,g),h.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=l*m}i!=="complex64"&&(t[a]=wr(p,u,i))}return t}function Ej(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let e=0,t=[];r.forEach(s=>{if(e+=s.byteLength,t.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(e),o=0;return t.forEach(s=>{n.set(new Uint8Array(s.buffer),o),o+=s.byteLength}),n.buffer}var WC=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function a2(r){return WC?Buffer.byteLength(r):new Blob([r]).size}function u2(r){if(WC)return Buffer.from(r).toString("base64");let e=new Uint8Array(r),t="";for(let n=0,o=e.length;n<o;n++)t+=String.fromCharCode(e[n]);return btoa(t)}function l2(r){if(WC){let n=Buffer.from(r,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let e=atob(r),t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)t.set([e.charCodeAt(n)],n);return t.buffer}function Om(r){if(r.length===1)return r[0];let e=0;r.forEach(o=>{e+=o.byteLength});let t=new Uint8Array(e),n=0;return r.forEach(o=>{t.set(new Uint8Array(o),n),n+=o.byteLength}),t.buffer}function KC(r){let e="/";for(r=r.trim();r.endsWith(e);)r=r.slice(0,r.length-1);let t=r.split(e);return t[t.length-1]}function fb(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:e};return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),t}async function zm(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),r.weightsManifest!=null){let[n,o]=await e(r.weightsManifest);t.weightSpecs=n,t.weightData=o}return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),t}function mi(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:a2(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:a2(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:r.weightData.byteLength}}function _j(){let r=t=>{let n=t<<13,o=0;for(;(n&8388608)===0;)o-=8388608,n<<=1;return n&=-8388609,o+=947912704,n|o},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=r(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function Lj(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let e=1;e<31;e++)r[e]=e<<23;for(let e=33;e<63;e++)r[e]=2147483648+(e-32<<23);return r}function $j(){let r=new Uint32Array(64);for(let e=0;e<64;e++)r[e]=1024;return r[0]=r[32]=0,r}function Bj(){let r=_j(),e=Lj(),t=$j();return n=>{let o=new ArrayBuffer(4*n.length),s=new Uint32Array(o);for(let a=0;a<n.length;a++){let i=n[a],u=r[t[i>>10]+(i&1023)]+e[i>>10];s[a]=u}return new Float32Array(o)}}var _t=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return _t.instance==null&&(_t.instance=new _t),_t.instance}static registerSaveRouter(e){_t.getInstance().saveRouters.push(e)}static registerLoadRouter(e){_t.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return _t.getHandlers(e,"save")}static getLoadHandlers(e,t){return _t.getHandlers(e,"load",t)}static getHandlers(e,t,n){let o=[];return(t==="load"?_t.getInstance().loadRouters:_t.getInstance().saveRouters).forEach(a=>{let i=a(e,n);i!==null&&o.push(i)}),o}},p2=r=>_t.registerSaveRouter(r),m2=r=>_t.registerLoadRouter(r),c2=r=>_t.getSaveHandlers(r),d2=(r,e)=>_t.getLoadHandlers(r,e);var VC="tensorflowjs",HC=1,Gl="models_store",Hu="model_info_store";function f2(){if(!B().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,e=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function qC(r){let e=r.result;e.createObjectStore(Gl,{keyPath:"modelPath"}),e.createObjectStore(Hu,{keyPath:"modelPath"})}var eu=class{constructor(e){if(this.indexedDB=f2(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,o)=>{let s=this.indexedDB.open(VC,HC);s.onupgradeneeded=()=>qC(s),s.onsuccess=()=>{let a=s.result;if(t==null){let i=a.transaction(Gl,"readonly"),l=i.objectStore(Gl).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(l.result.modelArtifacts)},l.onerror=p=>(a.close(),o(l.error)),i.oncomplete=()=>a.close()}else{let i=mi(t),u=a.transaction(Hu,"readwrite"),l=u.objectStore(Hu),p=l.put({modelPath:this.modelPath,modelArtifactsInfo:i}),m;p.onsuccess=()=>{m=a.transaction(Gl,"readwrite");let d=m.objectStore(Gl).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});d.onsuccess=()=>n({modelArtifactsInfo:i}),d.onerror=f=>{l=u.objectStore(Hu);let h=l.delete(this.modelPath);h.onsuccess=()=>(a.close(),o(d.error)),h.onerror=g=>(a.close(),o(d.error))}},p.onerror=c=>(a.close(),o(p.error)),u.oncomplete=()=>{m==null?a.close():m.oncomplete=()=>a.close()}}},s.onerror=a=>o(s.error)})}};eu.URL_SCHEME="indexeddb://";var h2=r=>B().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(eu.URL_SCHEME)?Oj(r.slice(eu.URL_SCHEME.length)):null;_t.registerSaveRouter(h2);_t.registerLoadRouter(h2);function Oj(r){return new eu(r)}function zj(r){return r.startsWith(eu.URL_SCHEME)?r.slice(eu.URL_SCHEME.length):r}var jC=class{constructor(){this.indexedDB=f2()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(VC,HC);n.onupgradeneeded=()=>qC(n),n.onsuccess=()=>{let o=n.result,s=o.transaction(Hu,"readonly"),i=s.objectStore(Hu).getAll();i.onsuccess=()=>{let u={};for(let l of i.result)u[l.modelPath]=l.modelArtifactsInfo;e(u)},i.onerror=u=>(o.close(),t(i.error)),s.oncomplete=()=>o.close()},n.onerror=o=>t(n.error)})}async removeModel(e){return e=zj(e),new Promise((t,n)=>{let o=this.indexedDB.open(VC,HC);o.onupgradeneeded=()=>qC(o),o.onsuccess=()=>{let s=o.result,a=s.transaction(Hu,"readwrite"),i=a.objectStore(Hu),u=i.get(e),l;u.onsuccess=()=>{if(u.result==null)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let p=i.delete(e),m=()=>{l=s.transaction(Gl,"readwrite");let d=l.objectStore(Gl).delete(e);d.onsuccess=()=>t(u.result.modelArtifactsInfo),d.onerror=f=>n(u.error)};p.onsuccess=m,p.onerror=c=>(m(),s.close(),n(u.error))}},u.onerror=p=>(s.close(),n(u.error)),a.oncomplete=()=>{l==null?s.close():l.oncomplete=()=>s.close()}},o.onerror=s=>n(o.error)})}};var tu="/",Gm="tensorflowjs_models",g2="info",Gj="model_topology",Uj="weight_specs",Wj="weight_data",Kj="model_metadata";function b2(r){return{info:[Gm,r,g2].join(tu),topology:[Gm,r,Gj].join(tu),weightSpecs:[Gm,r,Uj].join(tu),weightData:[Gm,r,Wj].join(tu),modelMetadata:[Gm,r,Kj].join(tu)}}function y2(r){for(let e of Object.values(r))window.localStorage.removeItem(e)}function Vj(r){let e=r.split(tu);if(e.length<3)throw new Error(`Invalid key format: ${r}`);return e.slice(1,e.length-1).join(tu)}function Hj(r){return r.startsWith(ru.URL_SCHEME)?r.slice(ru.URL_SCHEME.length):r}var ru=class{constructor(e){if(!B().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=b2(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),o=mi(e);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,u2(e.weightData));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:o}}catch{throw y2(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=o;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let i=JSON.parse(s);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=l2(a),t}};ru.URL_SCHEME="localstorage://";var T2=r=>B().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(ru.URL_SCHEME)?qj(r.slice(ru.URL_SCHEME.length)):null;_t.registerSaveRouter(T2);_t.registerLoadRouter(T2);function qj(r){return new ru(r)}var XC=class{constructor(){P(B().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),P(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Gm+tu,n=tu+g2;for(let o=0;o<this.LS.length;++o){let s=this.LS.key(o);if(s.startsWith(t)&&s.endsWith(n)){let a=Vj(s);e[a]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=Hj(e);let t=b2(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return y2(t),n}};var Um="://",Br=class{constructor(){this.managers={}}static getInstance(){return Br.instance==null&&(Br.instance=new Br),Br.instance}static registerManager(e,t){P(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Um)&&(e=e.slice(0,e.indexOf(Um))),P(e.length>0,()=>"scheme must not be an empty string.");let n=Br.getInstance();P(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=Br.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Br.getInstance().managers)}};function hb(r){if(r.indexOf(Um)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Br.getSchemes().join(",")}`);return{scheme:r.split(Um)[0],path:r.split(Um)[1]}}async function x2(r,e,t=!1){P(r!==e,()=>`Old path and new path are the same: '${r}'`);let n=_t.getLoadHandlers(r);P(n.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),P(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${r}.`);let o=n[0],s=_t.getSaveHandlers(e);P(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),P(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${e}.`);let a=s[0],i=hb(r).scheme,u=hb(r).path,l=i===hb(r).scheme,p=await o.load();t&&l&&await Br.getManager(i).removeModel(u);let m=await a.save(p);return t&&!l&&await Br.getManager(i).removeModel(u),m.modelArtifactsInfo}async function I2(){let r=Br.getSchemes(),e={};for(let t of r){let n=await Br.getManager(t).listModels();for(let o in n){let s=t+Um+o;e[s]=n[o]}}return e}async function C2(r){let e=hb(r);return Br.getManager(e.scheme).removeModel(e.path)}async function k2(r,e){return x2(r,e,!1)}async function S2(r,e){return x2(r,e,!0)}var v2=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(B().get("IS_BROWSER")){B().setPlatform("browser",new v2);try{Br.registerManager(ru.URL_SCHEME,new XC)}catch{}try{Br.registerManager(eu.URL_SCHEME,new jC)}catch{}}var jj={importFetch:()=>A2()},YC;var N2=class{constructor(){this.util=w2(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return B().global.fetch!=null?B().global.fetch(e,t):(YC==null&&(YC=jj.importFetch()),YC(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};B().get("IS_NODE")&&!B().get("IS_BROWSER")&&B().setPlatform("node",new N2);function Te(r,e="float32",t){return e=e||"float32",Ad(r),new yt(r,e,t)}function Xj(r,e){let t=v(r,"x","cast");if(!kC(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:t},o={dtype:e};return D.runKernel(Un,n,o)}var ne=A({cast_:Xj});function Yj(r){let t={x:v(r,"x","clone","string_or_numeric")};return D.runKernel(Kn,t)}var cn=A({clone_:Yj});function gb(r,e=!1){console.log(r.toString(e))}OC();var Zj={buffer:Te,cast:ne,clone:cn,print:gb};Y0(Zj);var Fn={};je(Fn,{browserFiles:()=>F2,browserHTTPRequest:()=>E2,concatenateArrayBuffers:()=>Om,copyModel:()=>k2,decodeWeights:()=>db,encodeWeights:()=>i2,fromMemory:()=>L2,fromMemorySync:()=>tk,getLoadHandlers:()=>d2,getModelArtifactsForJSON:()=>zm,getModelArtifactsInfoForJSON:()=>mi,getSaveHandlers:()=>c2,http:()=>xb,isHTTPScheme:()=>Tb,listModels:()=>I2,loadWeights:()=>M2,moveModel:()=>S2,registerLoadRouter:()=>m2,registerSaveRouter:()=>p2,removeModel:()=>C2,weightsLoaderFactory:()=>JC,withSaveHandler:()=>$2,withSaveHandlerSync:()=>B2});var Qj="model",Jj=".json",e5=".weights.bin";function D2(r){return new Promise(e=>setTimeout(e)).then(r)}var bb=class{constructor(e){if(!B().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(bb.URL_SCHEME)&&(e=e.slice(bb.URL_SCHEME.length)),(e==null||e.length===0)&&(e=Qj),this.modelJsonFileName=e+Jj,this.weightDataFileName=e+e5}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=fb(e,n),s=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=s,await D2(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await D2(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:mi(e)}}}},Od=bb;Od.URL_SCHEME="downloads://";var P2=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=o=>{let s=JSON.parse(o.target.result),a=s.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let u=zm(s,l=>this.loadWeights(l));e(u)},n.onerror=o=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let o=this.checkManifestAndWeightFiles(e),s=n.map(a=>this.loadWeightsFile(a,o[a]));return Promise.all(s).then(a=>[t,Om(a)])}loadWeightsFile(e,t){return new Promise((n,o)=>{let s=new FileReader;s.onload=a=>{let i=a.target.result;n(i)},s.onerror=a=>o(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(s=>KC(s.name)),o={};for(let s of e)s.paths.forEach(a=>{let i=KC(a);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);o[a]=this.weightsFiles[n.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return o}},t5=r=>B().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(Od.URL_SCHEME)?r5(r.slice(Od.URL_SCHEME.length)):null;_t.registerSaveRouter(t5);function r5(r="model"){return new Od(r)}function F2(r){return new P2(r)}function ZC(r,e,t,n){a(r),t=t??0,n=n??1,i(t,n);let o=0,s=u=>(u.then(l=>{let p=t+ ++o/r.length*(n-t);return e(p),l}),u);function a(u){P(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function i(u,l){P(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),P(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),P(l>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${l}`)}return Promise.all(r.map(s))}async function QC(r,e){e==null&&(e={});let t=e.fetchFunc==null?B().platform.fetch:e.fetchFunc,n=r.map(m=>t(m,e.requestInit,{isBinary:!0})),o=0,s=.5,i=(e.onProgress==null?await Promise.all(n):await ZC(n,e.onProgress,o,s)).map(m=>m.arrayBuffer()),u=.5,l=1;return e.onProgress==null?await Promise.all(i):await ZC(i,e.onProgress,u,l)}async function M2(r,e="",t,n){return JC(a=>QC(a,{requestInit:n}))(r,e,t)}function JC(r){return async(e,t="",n)=>{let o=e.map(()=>!1),s={},a=n!=null?n.map(()=>!1):[],i=[];if(e.forEach((d,f)=>{let h=0;d.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,T=Bd[y]*rt(g.shape),x=()=>{o[f]=!0,s[f]==null&&(s[f]=[]),s[f].push({manifestEntry:g,groupOffset:h,sizeBytes:T})};n!=null?n.forEach((I,k)=>{I===g.name&&(x(),a[k]=!0)}):x(),i.push(g.name),h+=T})}),!a.every(d=>d)){let d=n.filter((f,h)=>!a[h]);throw new Error(`Could not find weights in manifest with names: ${d.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let u=o.reduce((d,f,h)=>(f&&d.push(h),d),[]),l=[];u.forEach(d=>{e[d].paths.forEach(f=>{let h=t+(t.endsWith("/")?"":"/")+f;l.push(h)})});let p=await r(l),m={},c=0;return u.forEach(d=>{let f=e[d].paths.length,h=0;for(let I=0;I<f;I++)h+=p[c+I].byteLength;let g=new ArrayBuffer(h),y=new Uint8Array(g),T=0;for(let I=0;I<f;I++){let k=new Uint8Array(p[c+I]);y.set(k,T),T+=k.byteLength}s[d].forEach(I=>{let k=g.slice(I.groupOffset,I.groupOffset+I.sizeBytes),w=db(k,[I.manifestEntry]);for(let F in w)m[F]=w[F]}),c+=f}),m}}var n5="application/octet-stream",o5="application/json",yb=class{constructor(e,t){this.DEFAULT_METHOD="POST";if(t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(P(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=B().platform.fetch,P(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&P(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],o=fb(e,n);t.body.append("model.json",new Blob([JSON.stringify(o)],{type:o5}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:n5}),"model.weights.bin");let s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:mi(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,o=t.weightsManifest;if(n==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return zm(t,s=>this.loadWeights(s))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,o]=s5(t),s=this.weightPathPrefix||n,a=[];for(let p of e)a.push(...p.weights);let i=[],u=[];for(let p of e)for(let m of p.paths)this.weightUrlConverter!=null?u.push(this.weightUrlConverter(m)):i.push(s+m+o);this.weightUrlConverter&&i.push(...await Promise.all(u));let l=await QC(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,Om(l)]}};yb.URL_SCHEME_REGEX=/^https?:\/\//;function s5(r){let e=r.lastIndexOf("/"),t=r.lastIndexOf("?"),n=r.substring(0,e),o=t>e?r.substring(t):"";return[n+"/",o]}function Tb(r){return r.match(yb.URL_SCHEME_REGEX)!=null}var R2=(r,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(r)?t=r.every(n=>Tb(n)):t=Tb(r),t)return xb(r,e)}return null};_t.registerSaveRouter(R2);_t.registerLoadRouter(R2);function xb(r,e){return new yb(r,e)}function E2(r,e){return xb(r,e)}var Ib=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},ek=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},_2=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function L2(r,e,t,n){let o=arguments;return new _2(tk(...o))}function tk(r,e,t,n){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new Ib(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ib({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ib({modelTopology:r,weightSpecs:e,weightData:t,trainingConfig:n}))}function $2(r){return new ek(r)}function B2(r){return new ek(r)}var G2={};je(G2,{confusionMatrix:()=>z2});function a5(r,e,t=!1,n=!1){let o=v(r,"a","matMul"),s=v(e,"b","matMul");[o,s]=Qe(o,s);let a={a:o,b:s},i={transposeA:t,transposeB:n};return D.runKernel(ao,a,i)}var qe=A({matMul_:a5});function i5(r,e,t=1,n=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);let s={indices:v(r,"indices","oneHot","int32")},a={depth:e,onValue:t,offValue:n};return D.runKernel(Sa,s,a)}var qu=A({oneHot_:i5});function qTe(){B().set("PROD",!0)}function jTe(){B().set("DEBUG",!0)}function XTe(){B().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function rk(r){B().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}Z0(rk);function YTe(){D.disposeVariables()}function Mn(){return D}function zd(){return D.memory()}function ZTe(r){return D.profile(r)}function U(r,e){return D.tidy(r,e)}function Fe(r){$d(r).forEach(t=>t.dispose())}function Gt(r){return D.keep(r)}function QTe(r){return D.time(r)}function u5(r){return D.setBackend(r)}function JTe(){return D.ready()}function exe(){return D.backendName}function txe(r){D.removeBackend(r)}function rxe(r){return D.findBackend(r)}function nxe(r){return D.findBackendFactory(r)}function ju(r,e,t=1){return D.registerBackend(r,e,t)}function O2(){return D.backend}function oxe(r,e){B().setPlatform(r,e)}function l5(r){let t={input:v(r,"input","imag")};return D.runKernel(Fu,t)}var Xu=A({imag_:l5});function p5(r){let t={x:v(r,"x","neg")};return D.runKernel(cs,t)}var et=A({neg_:p5});function m5(r){let t={input:v(r,"input","real")};return D.runKernel(Eu,t)}var nu=A({real_:m5});function c5(r,e,t){let n=v(r,"x","transpose");if(e==null&&(e=n.shape.map((a,i)=>i).reverse()),P(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`),e.forEach(a=>{P(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${e}`)}),n.rank<=1)return n.clone();let o={x:n},s={perm:e};return n.dtype==="complex64"?U(()=>{let a=nu(n),i=Xu(n);return a=D.runKernel(Dn,{x:a},s),i=D.runKernel(Dn,{x:i},s),t&&(i=et(i)),Pn(a,i)}):D.runKernel(Dn,o,s)}var We=A({transpose_:c5});function d5(r,e,t){let n=v(r,"labels","confusionMatrix"),o=v(e,"predictions","confusionMatrix");P(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),P(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),P(o.rank===1,()=>`Expected the rank of predictions to be 1, but got ${o.rank}`),P(n.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),P(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);let s=qu(ne(n,"int32"),t),a=qu(ne(o,"int32"),t),i=We(s),u=qe(i,a);return ne(u,"int32")}var z2=A({confusionMatrix_:d5});var Nr={};je(Nr,{assertAndGetBroadcastShape:()=>ze,getBroadcastDims:()=>U2,getReductionAxes:()=>St});function U2(r,e){let t=r.length,n=[];for(let o=0;o<t;o++){let s=t-1-o,a=r[s]||1;(e[e.length-1-o]||1)>1&&a===1&&n.unshift(s)}return n}function St(r,e){let t=[];for(let n=0;n<e.length;n++){let o=r[r.length-n-1],s=e.length-n-1,a=e[s];(o==null||o===1&&a>1)&&t.unshift(s)}return t}function ze(r,e){let t=[],n=Math.max(r.length,e.length);for(let o=0;o<n;o++){let s=r[r.length-o-1];s==null&&(s=1);let a=e[e.length-o-1];if(a==null&&(a=1),s===1)t.unshift(a);else if(a===1)t.unshift(s);else if(s!==a){let i=`Operands could not be broadcast together with shapes ${r} and ${e}.`;throw Error(i)}else t.unshift(s)}return t}var kb={};je(kb,{fromPixels:()=>x5,fromPixelsAsync:()=>y5,toPixels:()=>T5});function Cb(r,e,t){if(ro(r),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=$r(r,t);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return mn(r,e,n,t)}var Ul;function W2(r,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,n=!1,o=!1,s=!1,a=!1,i=!1;if(r.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&r instanceof ImageData)n=!0;else if(typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement)s=!0;else if(r.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&r instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(o&&o&&r.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(Md(_l,D.backendName)!=null){let f={pixels:r},h={numChannels:e};return D.runKernel(_l,f,h)}let[l,p]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],m;if(a)m=r.getContext("2d").getImageData(0,0,l,p).data;else if(n||t)m=r.data;else if(s||o||i){if(Ul==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Ul=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Ul=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Ul.canvas.width=l,Ul.canvas.height=p,Ul.drawImage(r,0,0,l,p),m=Ul.getImageData(0,0,l,p).data}let c;if(e===4)c=new Int32Array(m);else{let f=l*p;c=new Int32Array(f*e);for(let h=0;h<f;h++)for(let g=0;g<e;++g)c[h*e+g]=m[h*4+g]}return Cb(c,[p,l,e],"int32")}function f5(r){return r!=null&&r.data instanceof Uint8Array}function h5(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function g5(r){return r!=null&&r.width!==0&&r.height!==0}function b5(r){return h5()&&!(r instanceof ImageBitmap)&&g5(r)&&!f5(r)}async function y5(r,e=3){let t=null;if(B().getBool("WRAP_TO_IMAGEBITMAP")&&b5(r)){let n;try{n=await createImageBitmap(r,{premultiplyAlpha:"none"})}catch{n=null}n!=null&&n.width===r.width&&n.height===r.height?t=n:t=r}else t=r;return W2(t,e)}async function T5(r,e){let t=v(r,"img","toPixels");if(!(r instanceof Xe)){let l=t;t=ne(l,"int32"),l.dispose()}if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);let[n,o]=t.shape.slice(0,2),s=t.rank===2?1:t.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`);let a=await t.data(),i=t.dtype==="float32"?255:1,u=new Uint8ClampedArray(o*n*4);for(let l=0;l<n*o;++l){let p=[0,0,0,255];for(let c=0;c<s;c++){let d=a[l*s+c];if(t.dtype==="float32"){if(d<0||d>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${d}.`)}else if(t.dtype==="int32"&&(d<0||d>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${d}.`);s===1?(p[0]=d*i,p[1]=d*i,p[2]=d*i):p[c]=d*i}let m=l*4;u[m+0]=Math.round(p[0]),u[m+1]=Math.round(p[1]),u[m+2]=Math.round(p[2]),u[m+3]=Math.round(p[3])}if(e!=null){e.width=o,e.height=n;let l=e.getContext("2d"),p=new ImageData(u,o,n);l.putImageData(p,0,0)}return t!==r&&t.dispose(),u}var x5=A({fromPixels_:W2});var Sb={};je(Sb,{prepareAndValidate:()=>K2});function K2(r,e){let t=r.shape.length,n=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[n-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[n-1]} vs. ${t}`);if(rt(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let o=e.shape,s=o[o.length-1],a=1;for(let m=0;m<o.length-1;++m)a*=o[m];let i=r.shape,u=o.slice();u.pop();let l=1;for(let m=s;m<t;++m)l*=i[m],u.push(i[m]);let p=[...oi(r.shape).map(m=>m/l),1].slice(0,s);return[u,a,l,p]}var Gd={};je(Gd,{calculateShapes:()=>V2,validateInput:()=>vb,validateUpdateShape:()=>nk});function nk(r,e,t){let n=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${r}, sliceDim: ${n}, and batchDim: ${o}.`;if(t.rank<o)throw new Error(s+` update.rank < ${o}. `);if(r.length<n+(t.rank-o))throw new Error(s+` Output shape length < ${n+(t.rank-o)}`);if(t.rank!==o+r.length-n)throw new Error(s+` update.rank != ${o+r.length-n}`);for(let a=0;a<o;++a)if(t.shape[a]!==e.shape[a])throw new Error(s+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-o;++a)if(t.shape[a+o]!==r[a+n])throw new Error(s+` updates.shape[${a+o}] (${t.shape[a+o]}) != shape[${a+o}] (${r[a+o]})`)}function vb(r,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}nk(t,e,r)}function V2(r,e,t){let n=e.shape.length,o=n>1?e.shape[n-1]:1,s=t.length,a=1;for(let m=o;m<s;++m)a*=t[m];let i=o<1?1:o,u=rt(e.shape)/i,l=[...oi(t.slice(0,o)),1],p=rt(t);return{sliceRank:o,numUpdates:u,sliceSize:a,strides:l,outputSize:p}}var xt={};je(xt,{assertParamsValid:()=>C5,computeFlatOffset:()=>w5,computeOutShape:()=>S5,getNormalizedAxes:()=>v5,isSliceContinous:()=>A5,maskToAxes:()=>k5,parseSliceParams:()=>sk,sliceInfo:()=>N5,startForAxis:()=>J2,startIndicesWithElidedDims:()=>Y2,stopForAxis:()=>e1,stopIndicesWithElidedDims:()=>Z2,stridesForAxis:()=>Q2,stridesWithElidedDims:()=>q2});var ok=-2,I5=-1;function C5(r,e,t){let n=r.shape.length;P(n===e.length,()=>`Error in slice${n}D: Length of begin ${e} must match the rank of the array (${n}).`),P(n===t.length,()=>`Error in slice${n}D: Length of size ${t} must match the rank of the array (${n}).`);for(let o=0;o<n;++o)P(e[o]+t[o]<=r.shape[o],()=>`Error in slice${n}D: begin[${o}] + size[${o}] (${e[o]+t[o]}) would overflow input.shape[${o}] (${r.shape[o]})`)}function k5(r){let e=[],t=0;for(;r>0;)r&1&&e.push(t),r/=2,t++;return e}function S5(r,e,t){let n=[];for(let o=0;o<r.length;o++)n[o]=Math.ceil((e[o]-r[o])/t[o]);return n}function q2(r,e,t,n){let o=[...r];for(let s=o.length;s<n.length;s++)o.push(1);for(let s=0;s<t;s++)s===0?o[e]=1:(o.splice(e,0,1),o.pop());return o}function j2(r,e,t){return t<=r?t:t-(e-1)}function X2(r,e){let t=[];for(let n=0;n<r;n++)t.push(e+n);return t}function v5(r,e,t,n,o,s,a,i,u){let l=r.length,p=new Array(l),m=new Array(l),c=new Array(l);if(e.length&&t>0){let d=e[0],f=t+1;p=Y2(a,d,f,n,r),m=Z2(i,d,f,o,r),c=q2(s,d,f,r)}else for(let d=0;d<l;d++)p[d]=J2(a,n,s,r,d,u),m[d]=e1(i,o,s,r,d,u),c[d]=Q2(s,d,u);return{begin:p,end:m,strides:c}}function Y2(r,e,t,n,o){let s=[...o],a=X2(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=0;else{let u=j2(e,t,i),l=n[u];r&1<<u&&(l=0),s[i]=l}return s}function Z2(r,e,t,n,o){let s=[...o],a=X2(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{let u=j2(e,t,i),l=n[u];r&1<<u&&(l=Number.MAX_SAFE_INTEGER),s[i]=l}for(let i=0;i<s.length;i++){let u=o[i];s[i]<0&&(s[i]+=u),s[i]=sm(0,s[i],o[i])}return s}function Q2(r,e,t){let n=r[e];return(t&1<<e||n==null)&&(n=1),n}function J2(r,e,t,n,o,s){let a=e[o],i=t[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);let u=n[o];return a<0&&(a+=u),a=sm(0,a,u-1),a}function e1(r,e,t,n,o,s){let a=e[o],i=t[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);let u=n[o];return a<0&&(a+=u),i>0?a=sm(0,a,u):a=sm(-1,a,u-1),a}function A5(r,e,t){let n=t.length;for(let o=0;o<t.length;o++)if(t[o]>1){n=o;break}for(let o=n+1;o<t.length;o++)if(e[o]>0||t[o]!==r[o])return!1;return!0}function w5(r,e){let t=r.length>0?r[r.length-1]:1;for(let n=0;n<r.length-1;n++)t+=r[n]*e[n];return t}function sk(r,e,t){let n,o=r.shape.length;typeof e=="number"?n=[e,...new Array(o-1).fill(0)]:e.length<o?n=e.concat(new Array(o-e.length).fill(0)):n=e.slice(),n.forEach(a=>{P(a!==-1,()=>"slice() does not support negative begin indexing.")});let s;return t==null?s=new Array(o).fill(-1):typeof t=="number"?s=[t,...new Array(o-1).fill(-1)]:t.length<o?s=t.concat(new Array(o-t.length).fill(-1)):s=t,s=s.map((a,i)=>a>=0?a:(P(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),r.shape[i]-n[i])),[n,s]}function N5(r,e,t,n,o,s,a,i,u){let l;if(n==null?(l=new Array(e.length),l.fill(1)):l=n,a!=null&&(a&a-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let p=!1,m={dims:l.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:l.slice(),beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};for(let x=0;x<m.dims;x++)p&&(1<<x&i)!==0&&m.numAddAxisAfterEllipsis++,1<<x&a&&(p=!0);p||(m.ellipsisMask|=1<<m.dims,m.dims++);let c={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};D5(m,c);let d=!0,f=!0,h=!0,g=[],y=[];for(let x=0;x<r.length;++x){if(c.strides[x]===0)throw Error(`strides[${x}] must be non-zero`);let I=!!(c.shrinkAxisMask&1<<x),k=r[x];if(k===-1){g.push(I?1:-1);continue}let w=[c.beginMask&1<<x,c.endMask&1<<x],F=[c.strides[x]>0?0:-1,c.strides[x]>0?k:k-1];if(I&&c.strides[x]<=0)throw Error("only stride 1 allowed on non-range indexing.");h=h&&c.strides[x]===1;let M=!!(c.beginMask&1<<x&&c.endMask&1<<x);if(c.beginValid&&c.endValid){if(I){let W=c.begin[x]<0?k+c.begin[x]:c.begin[x];if(c.begin[x]=W,c.end[x]=c.begin[x]+1,W<0||W>=k)throw Error(`slice index ${c.begin[x]} of dimension ${x} out of bounds.`)}else c.begin[x]=H2(c.begin[x],0,c.strides[x],k,w,F),c.end[x]=H2(c.end[x],1,c.strides[x],k,w,F);let O=c.strides[x]===1&&c.begin[x]===0&&c.end[x]===k;d=d&&O,f=f&&(x===0&&c.strides[x]===1||O)}else d=d&&c.strides[x]===1&&M,f=f&&(x===0&&c.strides[x]===1||M);let R,L=!1;if(c.beginValid&&c.endValid?(R=c.end[x]-c.begin[x],L=!0):I?(R=1,L=!0):M&&k>=0&&(c.strides[x]<0?R=-k:R=k,L=!0),L){let O;R===0||R<0!=c.strides[x]<0?O=0:O=Math.trunc(R/c.strides[x])+(R%c.strides[x]!==0?1:0),g.push(O)}else g.push(-1)}for(let x=0;x<c.finalShapeGatherIndices.length;++x){let I=c.finalShapeGatherIndices[x];I>=0?y.push(g[I]):I===ok&&y.push(1)}return{finalShapeSparse:y.filter((x,I)=>c.finalShapeGatherIndices[I]!==ok),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:h,begin:c.begin,end:c.end,strides:c.strides}}function D5(r,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=r.begin!=null,e.endValid=r.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let n=0;n<r.dims;n++)if(1<<n&r.ellipsisMask){let o=Math.min(e.dims-(r.dims-n)+1+r.numAddAxisAfterEllipsis,e.dims);for(;t<o;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=n}else if(1<<n&r.newAxisMask)e.finalShapeGatherIndices.push(ok),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);r.begin!=null&&(e.begin[t]=r.begin[n]),r.end!=null&&(e.end[t]=r.end[n]),e.strides[t]=r.strides[n],r.beginMask&1<<n&&(e.beginMask|=1<<t),r.endMask&1<<n&&(e.endMask|=1<<t),r.shrinkAxisMask&1<<n?(e.finalShapeGatherIndices.push(I5),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(n)),e.inputShapeGatherIndicesSparse[t]=n,t++}}function H2(r,e,t,n,o,s){if(o[e])return t>0?s[e]:s[e+1&1];{let a=r<0?n+r:r;return a<s[0]?s[0]:a>s[1]?s[1]:a}}var te={};je(te,{Serializable:()=>Ab,SerializationMap:()=>ou,registerClass:()=>Rn});var Ab=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},ou=class{constructor(){this.classNameMap={}}static getMap(){return ou.instance==null&&(ou.instance=new ou),ou.instance}static register(e){ou.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Rn(r){P(r.className!=null,()=>"Class being registered does not have the static className property defined."),P(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),P(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),ou.register(r)}var o1={};je(o1,{TEST_EPSILON_FLOAT16:()=>t1,encodeStrings:()=>n1,expectArrayBuffersEqual:()=>_5,expectArraysClose:()=>F5,expectArraysEqual:()=>R5,expectNumbersClose:()=>r1,expectPromiseToFail:()=>M5,expectValuesInRange:()=>E5,testEpsilon:()=>wb});var P5=.001,t1=.1;function F5(r,e,t){return t==null&&(t=wb()),ak(r,e,(n,o)=>ik(n,o,t))}function wb(){return D.backend.floatPrecision()===32?P5:t1}function ak(r,e,t){let n=!0;if((kr(r)||kr(e))&&(n=!1),kr(r)&&kr(e)&&(n=!0),n){let a=r.constructor.name,i=e.constructor.name;if(a!==i)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${i}`)}if(Array.isArray(r)&&Array.isArray(e)){let a=$r(r),i=$r(e);if(!Gn(a,i))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${i}]`)}let o=kr(r)?r:ia(r),s=kr(e)?e:ia(e);if(o.length!==s.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${s.length}.
Actual:   ${o}.
Expected: ${s}.`);for(let a=0;a<s.length;++a){let i=o[a],u=s[a];if(!t(i,u))throw new Error(`Arrays differ: actual[${a}] = ${i}, expected[${a}] = ${u}.
Actual:   ${o}.
Expected: ${s}.`)}}function M5(r,e){r().then(()=>e.fail(),()=>e())}function R5(r,e){let t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return ua(r)||ua(r[0])||ua(e)||ua(e[0])?ak(r,t,(n,o)=>n==o):ak(r,e,(n,o)=>ik(n,o,0))}function r1(r,e,t){if(t==null&&(t=wb()),!ik(r,e,t))throw new Error(`Numbers differ: actual === ${r}, expected === ${e}`)}function ik(r,e,t){return!isFinite(r)&&!isFinite(e)?!0:!(isNaN(r)||isNaN(e)||Math.abs(r-e)>t)}function E5(r,e,t){for(let n=0;n<r.length;n++)if(r[n]<e||r[n]>t)throw new Error(`Value out of range:${r[n]} low: ${e}, high: ${t}`)}function _5(r,e){let t=new Float32Array(r),n=new Float32Array(e);if(t.length!==n.length)throw new Error(`Expected ArrayBuffer to be of length ${n.length}, but it was ${t.length}`);for(let o=0;o<n.length;o++)if(t[o]!==n[o])throw new Error(`Expected ArrayBuffer value at ${o} to be ${n[o]} but got ${t[o]} instead`)}function n1(r){for(let e=0;e<r.length;e++){let t=r[e];Array.isArray(t)?n1(t):r[e]=Wu(t)}return r}var L5="0.0.0";function $5(r,e){let t=v(r,"a","add"),n=v(e,"b","add");[t,n]=Qe(t,n);let o={a:t,b:n};return D.runKernel(wn,o)}var Z=A({add_:$5});function B5(r,e){let t=v(r,"a","floorDiv"),n=v(e,"b","floorDiv");[t,n]=Qe(t,n);let o={a:t,b:n};return D.runKernel(To,o)}var Nb=A({floorDiv_:B5});function O5(r,e){let t=v(r,"a","div"),n=v(e,"b","div");if([t,n]=Qe(t,n),t.dtype==="int32"&&n.dtype==="int32")return Nb(t,n);let o={a:t,b:n},s={};return D.runKernel(ho,o,s)}var me=A({div_:O5});function z5(r,e){let t=v(r,"a","mul"),n=v(e,"b","mul");[t,n]=Qe(t,n);let o={a:t,b:n};return D.runKernel(Fo,o)}var _=A({mul_:z5});function G5(r){let e=v(r,"x","abs");if(e.dtype==="complex64"){let t={x:e};return D.runKernel(wu,t)}else{let t={x:e};return D.runKernel(is,t)}}var Ut=A({abs_:G5});function U5(r){let t={x:v(r,"x","acos")};return D.runKernel(Di,t)}var s1=A({acos_:U5});function W5(r){let t={x:v(r,"x","acosh")};return D.runKernel(Pi,t)}var a1=A({acosh_:W5});function K5(r){P(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),P(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let e=r.map((o,s)=>v(o,`tensors${s}`,"addN")),t=e[0];e.forEach(o=>{if(o.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(o=>{if(!Gn(o.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=e;return D.runKernel(no,n)}var i1=A({addN_:K5});function V5(r,e=null,t=!1){let o={x:v(r,"x","all","bool")},s={axis:e,keepDims:t};return D.runKernel(Fi,o,s)}var Db=A({all_:V5});function H5(r,e=null,t=!1){let o={x:v(r,"x","any","bool")},s={axis:e,keepDims:t};return D.runKernel(Mi,o,s)}var Ud=A({any_:H5});function q5(r,e=0){let n={x:v(r,"x","argMax")},o={axis:e};return D.runKernel(oo,n,o)}var Yu=A({argMax_:q5});function j5(r,e=0){let n={x:v(r,"x","argMin")},o={axis:e};return D.runKernel(si,n,o)}var u1=A({argMin_:j5});function X5(r){let t={x:v(r,"x","asin")};return D.runKernel(Ri,t)}var l1=A({asin_:X5});function Y5(r){let t={x:v(r,"x","asinh")};return D.runKernel(Ei,t)}var p1=A({asinh_:Y5});function Z5(r){let t={x:v(r,"x","atan")};return D.runKernel(_i,t)}var m1=A({atan_:Z5});function Q5(r,e){let t=v(r,"a","atan2"),n=v(e,"b","atan2");[t,n]=Qe(t,n);let o={a:t,b:n};return D.runKernel($i,o)}var c1=A({atan2_:Q5});function J5(r){let t={x:v(r,"x","atanh")};return D.runKernel(Li,t)}var d1=A({atanh_:J5});function e8(r,e,t,n,o="NHWC",s){let a=r[3],i=[...e,a],u=h1(o);return Kl(r,i,t,s,n,null,null,u)}function lk(r,e,t,n,o,s,a="channelsLast"){let[i,u]=Pb(e),l;if(a==="channelsLast")l=[i,u,r[3],r[3]];else if(a==="channelsFirst")l=[i,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return Kl(r,l,t,n,o,s,!1,a)}function t8(r,e,t,n,o,s,a="NDHWC"){let[i,u,l]=uk(e),p,m;if(a==="NDHWC")m="channelsLast",p=[i,u,l,r[4],r[4]];else if(a==="NCDHW")m="channelsFirst",p=[i,u,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return f1(r,p,t,n,o,!1,m,s)}function Kl(r,e,t,n,o,s,a=!1,i="channelsLast"){let[u,l,p,m]=[-1,-1,-1,-1];if(i==="channelsLast")[u,l,p,m]=r;else if(i==="channelsFirst")[u,m,l,p]=r;else throw new Error(`Unknown dataFormat ${i}`);let[c,d,,f]=e,[h,g]=Pb(t),[y,T]=Pb(n),x=Wm(c,y),I=Wm(d,T),{padInfo:k,outHeight:w,outWidth:F}=o8(o,l,p,h,g,x,I,s,i),M=a?f*m:f,R;return i==="channelsFirst"?R=[u,M,w,F]:i==="channelsLast"&&(R=[u,w,F,M]),{batchSize:u,dataFormat:i,inHeight:l,inWidth:p,inChannels:m,outHeight:w,outWidth:F,outChannels:M,padInfo:k,strideHeight:h,strideWidth:g,filterHeight:c,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:I,dilationHeight:y,dilationWidth:T,inShape:r,outShape:R,filterShape:e}}function f1(r,e,t,n,o,s=!1,a="channelsLast",i){let[u,l,p,m,c]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[u,l,p,m,c]=r;else if(a==="channelsFirst")[u,c,l,p,m]=r;else throw new Error(`Unknown dataFormat ${a}`);let[d,f,h,,g]=e,[y,T,x]=uk(t),[I,k,w]=uk(n),F=Wm(d,I),M=Wm(f,k),R=Wm(h,w),{padInfo:L,outDepth:O,outHeight:W,outWidth:V}=s8(o,l,p,m,y,T,x,F,M,R,i),j=s?g*c:g,q;return a==="channelsFirst"?q=[u,j,O,W,V]:a==="channelsLast"&&(q=[u,O,W,V,j]),{batchSize:u,dataFormat:a,inDepth:l,inHeight:p,inWidth:m,inChannels:c,outDepth:O,outHeight:W,outWidth:V,outChannels:j,padInfo:L,strideDepth:y,strideHeight:T,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:h,effectiveFilterDepth:F,effectiveFilterHeight:M,effectiveFilterWidth:R,dilationDepth:I,dilationHeight:k,dilationWidth:w,inShape:r,outShape:q,filterShape:e}}function r8(r,e,t,n,o){n==null&&(n=pk(r,e,t));let s=r[0],a=r[1],i=Wl((s-e+2*n)/t+1,o),u=Wl((a-e+2*n)/t+1,o);return[i,u]}function n8(r,e,t,n,o,s){o==null&&(o=pk(r,e,n));let a=r[0],i=r[1],u=r[2],l=Wl((a-e+2*o)/n+1,s),p=Wl((i-e+2*o)/n+1,s),m=Wl((u-e+2*o)/n+1,s);return[l,p,m,t]}function pk(r,e,t,n=1){let o=Wm(e,n);return Math.floor((r[0]*(t-1)-t+o)/2)}function Pb(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function uk(r){return typeof r=="number"?[r,r,r]:r}function Wm(r,e){return e<=1?r:r+(r-1)*(e-1)}function o8(r,e,t,n,o,s,a,i,u){let l,p,m;if(typeof r=="number"){l={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let d=r8([e,t],s,n,r,i);p=d[0],m=d[1]}else if(r==="same"){p=Math.ceil(e/n),m=Math.ceil(t/o);let c=Math.max(0,(p-1)*n+s-e),d=Math.max(0,(m-1)*o+a-t),f=Math.floor(c/2),h=c-f,g=Math.floor(d/2),y=d-g;l={top:f,bottom:h,left:g,right:y,type:"SAME"}}else if(r==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((e-s+1)/n),m=Math.ceil((t-a+1)/o);else if(typeof r=="object"){let c=u==="channelsLast"?r[1][0]:r[2][0],d=u==="channelsLast"?r[1][1]:r[2][1],f=u==="channelsLast"?r[2][0]:r[3][0],h=u==="channelsLast"?r[2][1]:r[3][1];l={top:c,bottom:d,left:f,right:h,type:c===0&&d===0&&f===0&&h===0?"VALID":"EXPLICIT"},p=Wl((e-s+c+d)/n+1,i),m=Wl((t-a+f+h)/o+1,i)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:l,outHeight:p,outWidth:m}}function s8(r,e,t,n,o,s,a,i,u,l,p){let m,c,d,f;if(typeof r=="number"){m={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=n8([e,t,n,1],i,1,o,r,p);c=g[0],d=g[1],f=g[2]}else if(r==="same"){c=Math.ceil(e/o),d=Math.ceil(t/s),f=Math.ceil(n/a);let h=(c-1)*o+i-e,g=(d-1)*s+u-t,y=(f-1)*a+l-n,T=Math.floor(h/2),x=h-T,I=Math.floor(g/2),k=g-I,w=Math.floor(y/2),F=y-w;m={top:I,bottom:k,left:w,right:F,front:T,back:x,type:"SAME"}}else if(r==="valid")m={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},c=Math.ceil((e-i+1)/o),d=Math.ceil((t-u+1)/s),f=Math.ceil((n-l+1)/a);else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:m,outDepth:c,outHeight:d,outWidth:f}}function Wl(r,e){if(!e)return Math.trunc(r);switch(e){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${e}`)}}function Xo(r){let[e,t,n]=Pb(r);return e===1&&t===1&&n===1}function Rr(r,e){return Xo(r)||Xo(e)}function h1(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function Pt(r,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")P(Ni(e),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(n=>{n.forEach(o=>{P(Ni(o),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${o}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${e}`)}}function a8(r,e){let n={x:v(r,"x","reshape","string_or_numeric")},o={shape:e};return D.runKernel(hs,n,o)}var $=A({reshape_:a8});function i8(r,e,t,n,o){let s=v(r,"x","avgPool","float32"),a=1;P(Rr(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let i=s,u=!1;s.rank===3&&(u=!0,i=$(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Pt("avgPool",n,o);let l={x:i},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o},m=D.runKernel(so,l,p);return m=ne(m,s.dtype),u?$(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Km=A({avgPool_:i8});function u8(r,e,t,n,o,s="NDHWC"){let a=v(r,"x","avgPool3d","float32"),i=a,u=!1;a.rank===4&&(u=!0,i=$(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),P(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Pt("avgPool3d",n,o);let l={x:i},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},m=D.runKernel(vu,l,p);return m=ne(m,i.dtype),u?$(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Fb=A({avgPool3d_:u8});function l8(r,e=0){P(r.length>=1,()=>"Pass at least one tensor to concat");let t=Ji(r,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),t.length===1)return cn(t[0]);let n=t,o={axis:e};return D.runKernel(ls,n,o)}var mt=A({concat_:l8});function p8(r){let t={x:v(r,"x","sigmoid","float32")};return D.runKernel(Uo,t)}var En=A({sigmoid_:p8});function m8(r,e,t){let n=v(r,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let o={x:n},s={begin:e,size:t};return D.runKernel(bs,o,s)}var Ge=A({slice_:m8});function c8(r){let t={x:v(r,"x","tanh","float32")};return D.runKernel(jo,t)}var Zu=A({tanh_:c8});function d8(r,e,t,n,o,s){let a=v(r,"forgetBias","basicLSTMCell"),i=v(e,"lstmKernel","basicLSTMCell"),u=v(t,"lstmBias","basicLSTMCell"),l=v(n,"data","basicLSTMCell"),p=v(o,"c","basicLSTMCell"),m=v(s,"h","basicLSTMCell"),c=mt([l,m],1),d=qe(c,i),f=Z(d,u),h=f.shape[0],g=f.shape[1]/4,y=[h,g],T=Ge(f,[0,0],y),x=Ge(f,[0,g],y),I=Ge(f,[0,g*2],y),k=Ge(f,[0,g*3],y),w=Z(_(En(T),Zu(x)),_(p,En(Z(a,I)))),F=_(Zu(w),En(k));return[w,F]}var g1=A({basicLSTMCell_:d8});function f8(r,e,t){let n=v(r,"x","batchToSpaceND"),o=e.reduce((i,u)=>i*u);P(n.rank>=1+e.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${e.length}`),P(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),P(n.shape[0]%o===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${o}`);let s={x:n},a={blockShape:e,crops:t};return D.runKernel(us,s,a)}var Vm=A({batchToSpaceND_:f8});function b1(r){let e;return r.rank===0||r.rank===1?e=$(r,[1,1,1,r.size]):r.rank===2?e=$(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?e=$(r,[1,r.shape[0],r.shape[1],r.shape[2]]):e=r,e}function h8(r,e,t,n,o,s){s==null&&(s=.001);let a=v(r,"x","batchNorm"),i=v(e,"mean","batchNorm"),u=v(t,"variance","batchNorm"),l;o!=null&&(l=v(o,"scale","batchNorm"));let p;n!=null&&(p=v(n,"offset","batchNorm")),P(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(p==null||i.rank===p.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let c={x:b1(a),scale:l,offset:p,mean:i,variance:u},d={varianceEpsilon:s},f=D.runKernel(xo,c,d);return $(f,a.shape)}var Qu=A({batchNorm_:h8});function g8(r,e,t,n,o,s){let a=v(r,"x","batchNorm"),i=v(e,"mean","batchNorm"),u=v(t,"variance","batchNorm"),l;o!=null&&(l=v(o,"scale","batchNorm"));let p;return n!=null&&(p=v(n,"offset","batchNorm")),P(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),P(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),P(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),p!=null&&P(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`),Qu(a,i,u,p,l,s)}var Mb=A({batchNorm2d_:g8});function b8(r,e,t,n,o,s){let a=v(r,"x","batchNorm"),i=v(e,"mean","batchNorm"),u=v(t,"variance","batchNorm"),l;o!=null&&(l=v(o,"scale","batchNorm"));let p;return n!=null&&(p=v(n,"offset","batchNorm")),P(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),P(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),P(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),p!=null&&P(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`),Qu(a,i,u,p,l,s)}var Rb=A({batchNorm3d_:b8});function y8(r,e,t,n,o,s){let a=v(r,"x","batchNorm"),i=v(e,"mean","batchNorm"),u=v(t,"variance","batchNorm"),l;o!=null&&(l=v(o,"scale","batchNorm"));let p;return n!=null&&(p=v(n,"offset","batchNorm")),P(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),P(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),P(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),p!=null&&P(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`),Qu(a,i,u,p,l,s)}var Eb=A({batchNorm4d_:y8});function T8(r,e,t){let n=v(r,"x","bincount"),o=v(e,"weights","bincount");P(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),P(t>=0,()=>`size must be non-negative, but got ${t}.`),P(o.size===n.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${o.shape}.`);let s={x:n,weights:o},a={size:t};return D.runKernel(mm,s,a)}var _b=A({bincount_:T8});function x8(r,e){let t=v(r,"s0","broadcastArgs","int32"),n=v(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);let o={s0:t,s1:n};return D.runKernel(cm,o)}var y1=A({broadcastArgs_:x8});function I8(r,e){let t=v(r,"broadcastTo","x"),n=t.shape;if(e.some(l=>!(l>0)||l%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){let l=t.shape.slice();for(;l.length<e.length;)l.unshift(1);t=$(t,l)}let o=t.shape,s=Array.from(e);for(let l=e.length-1;l>=0;l--)if(o[l]===e[l])s[l]=1;else if(t.shape[l]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${e}].`);if(s.map((l,p)=>l>1?p:-1).filter(l=>l>=0).length===0)return cn(t);let i={x:t},u={reps:s};return D.runKernel(Nn,i,u)}var Hm=A({broadcastTo_:I8});function C8(r){let t={x:v(r,"x","ceil","float32")};return D.runKernel(io,t)}var T1=A({ceil_:C8});function k8(r,e,t){let n=v(r,"x","clipByValue");P(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`);let o={x:n},s={clipValueMin:e,clipValueMax:t};return D.runKernel(Wn,o,s)}var Or=A({clipByValue_:k8});function S8(r){return mt(r,0)}var Lb=A({concat1d_:S8});function v8(r,e){return mt(r,e)}var $b=A({concat2d_:v8});function A8(r,e){return mt(r,e)}var Bb=A({concat3d_:A8});function w8(r,e){return mt(r,e)}var Ob=A({concat4d_:w8});function N8(r,e,t,n,o="NHWC",s=[1,1],a){let i=v(r,"x","conv2d","float32"),u=v(e,"filter","conv2d","float32"),l=i,p=!1;i.rank===3&&(p=!0,l=$(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),P(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Pt("conv2d",n,a);let m=o==="NHWC"?l.shape[3]:l.shape[1];P(m===u.shape[2],()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${u.shape[2]}.`),P(Rr(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);let c={x:l,filter:u},d={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},f=D.runKernel(uo,c,d);return p?$(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Zo=A({conv2d_:N8});function D8(r,e,t,n,o="NWC",s=1,a){let i=v(r,"x","conv1d"),u=v(e,"filter","conv1d"),l=i,p=!1;i.rank===2&&(p=!0,l=$(i,[1,i.shape[0],i.shape[1]])),P(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),P(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Pt("conv1d",n,a),P(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),P(Rr(t,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${s}'`),P(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);let m=$(u,[1,u.shape[0],u.shape[1],u.shape[2]]),c=$(l,[l.shape[0],1,l.shape[1],l.shape[2]]),g=Zo(c,m,[1,t],n,"NHWC",[1,s],a);return p?$(g,[g.shape[2],g.shape[3]]):$(g,[g.shape[0],g.shape[2],g.shape[3]])}var zb=A({conv1d_:D8});function P8(r,e,t,n,o,s="NHWC",a){P(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let i=r,u=e,l=!1;e.rank===3&&(l=!0,u=$(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,r[0],r[1],r[2]]),P(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),P(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),P(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);let p=s==="NHWC"?i[3]:i[1],m=s==="NHWC"?u.shape[3]:u.shape[1];P(p===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${t.shape[2]}.`),P(m===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${t.shape[3]}.`),Pt("conv2dDerInput",o,a);let c={dy:u,filter:t},d={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,inputShape:i},f=D.runKernel(lo,c,d);return l?$(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var qm=A({conv2DBackpropInput_:P8});function F8(r,e,t,n,o,s){let a=v(r,"x","conv2dTranspose"),i=v(e,"filter","conv2dTranspose");return qm(t,a,i,n,o,"NHWC",s)}var Gb=A({conv2dTranspose_:F8});function M8(r,e,t,n,o="NDHWC",s=[1,1,1]){let a=v(r,"x","conv3d"),i=v(e,"filter","conv3d"),u=a,l=!1;a.rank===4&&(l=!0,u=$(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),P(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),P(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),P(Rr(t,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),P(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);let p={x:u,filter:i},m={strides:t,pad:n,dataFormat:o,dilations:s},c=D.runKernel(Nu,p,m);return l?$(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Ub=A({conv3d_:M8});function R8(r,e,t,n,o){P(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let s=r,a=e,i=!1;e.rank===4&&(i=!0,a=$(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let u=s[4],l=a.shape[4];P(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),P(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),P(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),P(u===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[3]}.`),P(l===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${t.shape[4]}.`);let p={dy:a,filter:t},m={pad:o,strides:n,inputShape:s},c=D.runKernel(hm,p,m);return i?$(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Wb=A({conv3DBackpropInput_:R8});function E8(r,e,t,n,o){let s=v(r,"x","conv3dTranspose"),a=v(e,"filter","conv3dTranspose");return Wb(t,s,a,n,o)}var Kb=A({conv3dTranspose_:E8});function _8(r){let t={x:v(r,"x","cos","float32")};return D.runKernel(po,t)}var jm=A({cos_:_8});function L8(r){let t={x:v(r,"x","cosh","float32")};return D.runKernel(mo,t)}var Vb=A({cosh_:L8});function $8(r,e=0,t=!1,n=!1){let s={x:v(r,"x","cumprod")},a={axis:e,exclusive:t,reverse:n};return D.runKernel(la,s,a)}var Wd=A({cumprod_:$8});function B8(r,e=0,t=!1,n=!1){let s={x:v(r,"x","cumsum")},a={axis:e,exclusive:t,reverse:n};return D.runKernel(co,s,a)}var Hb=A({cumsum_:B8});function O8(r,e,t,n=!1){let o=v(r,"x","denseBincount"),s=v(e,"weights","denseBincount");P(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),P(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),P(t>=0,()=>`size must be non-negative, but got ${t}.`),P(s.size===o.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${s.shape}.`);let a={x:o,weights:s},i={size:t,binaryOutput:n};return D.runKernel(gm,a,i)}var x1=A({denseBincount_:O8});function z8(r,e,t="NHWC"){let n=v(r,"x","depthToSpace","float32"),o=t==="NHWC"?n.shape[1]:n.shape[2],s=t==="NHWC"?n.shape[2]:n.shape[3],a=t==="NHWC"?n.shape[3]:n.shape[1];P(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),P(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e}  for depthToSpace with input shape
    ${n.shape}`),P(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e} for depthToSpace with input shape
        ${n.shape}`),P(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${n.shape}`);let i={x:n},u={blockSize:e,dataFormat:t};return D.runKernel(ma,i,u)}var I1=A({depthToSpace_:z8});function G8(r,e,t,n,o="NHWC",s=[1,1],a){let i=v(r,"x","depthwiseConv2d","float32"),u=v(e,"filter","depthwiseConv2d","float32"),l=i,p=!1;i.rank===3&&(p=!0,l=$(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),P(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);let m=o==="NHWC"?l.shape[3]:l.shape[1];P(m===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${m}) must match the inChannels dimension in filter ${u.shape[2]}.`),Pt("depthwiseConv2d",n,a);let c={x:l,filter:u},d={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},f=D.runKernel(fo,c,d);return p?$(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Ju=A({depthwiseConv2d_:G8});function U8(r){let t={x:v(r,"x","diag")};return D.runKernel(Tm,t)}var C1=A({diag_:U8});function W8(r,e,t,n,o=[1,1],s="NHWC"){let a=v(r,"x","dilation2d"),i=v(e,"filter","dilation2d");P(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),P(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),P(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let u=a,l=!1;a.rank===3&&(u=$(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=!0);let p={x:u,filter:i},m={strides:t,pad:n,dilations:o},c=D.runKernel(Du,p,m);return l?$(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var k1=A({dilation2d_:W8});function K8(r,e){let t=v(r,"a","equal","string_or_numeric"),n=v(e,"b","equal","string_or_numeric");[t,n]=Qe(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ca,o)}var Xr=A({equal_:K8});function V8(r,e,t){let n=v(e,"a","where"),o=v(t,"b","where"),s=v(r,"condition","where","bool"),a=ze(ze(s.shape,n.shape),o.shape),i=Hm(s,a),u=Hm(n,a),l=Hm(o,a),p={condition:i,t:u,e:l};return D.runKernel(gs,p)}var Wt=A({where_:V8});function H8(r){let t={x:v(r,"x","zerosLike")};return D.runKernel(Is,t)}var De=A({zerosLike_:H8});function q8(r,e){let t=v(r,"a","div"),n=v(e,"b","div");[t,n]=Qe(t,n);let o=me(t,n),s=De(o),a=Xr(n,s);return Wt(a,s,o)}var S1=A({divNoNan_:q8});function j8(r,e){let t=v(r,"t1","dot"),n=v(e,"t2","dot");P((t.rank===1||t.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${n.rank}.`);let o=t.rank===1?t.size:t.shape[1],s=n.rank===1?n.size:n.shape[0];if(P(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),t.rank===1&&n.rank===1){let a=$(t,[1,-1]),i=$(n,[-1,1]),u=qe(a,i);return $(u,[])}else if(t.rank===1&&n.rank===2){let a=$(t,[1,-1]),i=$(n,[n.shape[0],n.shape[1]]),u=qe(a,i);return $(u,[u.size])}else if(t.rank===2&&n.rank===1){let a=$(n,[-1,1]),i=qe(t,a);return $(i,[i.size])}else{let a=$(n,[n.shape[0],n.shape[1]]);return qe(t,a)}}var v1=A({dot_:j8});function X8(r,...e){let t=e.map((o,s)=>v(o,`tensors${s}`,"einsum")),n={equation:r};return D.runKernel(Pu,t,n)}var A1=A({einsum_:X8});function Y8(r){let t={x:v(r,"x","elu","float32")};return D.runKernel(go,t)}var el=A({elu_:Y8});function Z8(r){let e=v(r,"x","erf");P(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=ne(e,"float32"));let t={x:e};return D.runKernel(Bi,t)}var w1=A({erf_:Z8});function mk(r,e){for(let t=0;t<r.length;++t)if(r[r.length-t-1]!==e-1-t)return!1;return!0}function N1(r,e,t){let n=r.length+e.length,o=[],s=0,a=0;for(let i=0;i<n;i++)t.indexOf(i)===-1?o.push(r[s++]):o.push(e[a++]);return o}function ck(r,e){let t=[],n=r.length;for(let s=0;s<n;s++)e.indexOf(s)===-1&&t.push(r[s]);let o=e.map(s=>r[s]);return[t,o]}function Fs(r,e){let t=e.map(n=>1);return N1(r,t,e)}function Q8(r,e,t){P(mk(e,t),()=>`${r} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function dk(r,e){if(mk(r,e))return null;let t=[];for(let n=0;n<e;++n)r.indexOf(n)===-1&&t.push(n);return r.forEach(n=>t.push(n)),t}function Kd(r){return r.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function J8(r,e){let t=[];for(let n=e-r;n<e;++n)t.push(n);return t}function eX(r,e=null,t=!1){let o={x:v(r,"x","max")},s={reductionIndices:e,keepDims:t};return D.runKernel(So,o,s)}var dn=A({max_:eX});function tX(r,e=null,t=!1){let o={x:v(r,"x","min")},s={axis:e,keepDims:t};return D.runKernel(No,o,s)}var Vd=A({min_:tX});function rX(r,e){let t=v(r,"base","pow"),n=v(e,"exp","pow");[t,n]=Qe(t,n);let o={a:t,b:n};return D.runKernel(Ro,o)}var qn=A({pow_:rX});function ce(r,e){if((kr(r)&&e!=="string"||Array.isArray(r))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&kr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return mn(r,[],[],e)}function nX(r){let t={x:v(r,"x","sqrt","float32")};return D.runKernel(Wo,t)}var $t=A({sqrt_:nX});function oX(r){let e=v(r,"x","square"),t={};return D.runKernel("Square",{x:e},t)}var Ye=A({square_:oX});function sX(r,e=null,t=!1){let n=v(r,"x","sum");n.dtype==="bool"&&(n=ne(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return D.runKernel(Ko,o,s)}var de=A({sum_:sX});function aX(r,e="euclidean",t=null,n=!1){r=v(r,"x","norm");let o=D1(r,e,t),s=o.shape;if(n){let a=fr(t,r.shape);s=Fs(o.shape,a)}return $(o,s)}function D1(r,e,t=null){if(r.rank===0)return Ut(r);if(r.rank!==1&&t===null)return D1($(r,[-1]),e,t);if(r.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return de(Ut(r),t);if(e===1/0)return dn(Ut(r),t);if(e===-1/0)return Vd(Ut(r),t);if(e==="euclidean"||e===2)return $t(de(qn(Ut(r),ce(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return dn(de(Ut(r),t[0]),t[1]-1);if(e===1/0)return dn(de(Ut(r),t[1]),t[0]);if(e===-1/0)return Vd(de(Ut(r),t[1]),t[0]);if(e==="fro"||e==="euclidean")return $t(de(Ye(r),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}var Vl=A({norm_:aX});function iX(r,e=null,t=!1){return Vl(r,"euclidean",e,t)}var P1=A({euclideanNorm_:iX});function uX(r){let t={x:v(r,"x","exp")};return D.runKernel(bo,t)}var hr=A({exp_:uX});function lX(r,e=0){let t=v(r,"x","expandDims","string_or_numeric");P(e<=t.rank,()=>"Axis must be <= rank of the tensor");let n={input:t},o={dim:e};return D.runKernel(ps,n,o)}var Er=A({expandDims_:lX});function pX(r){let t={x:v(r,"x","expm1")};return D.runKernel(da,t)}var F1=A({expm1_:pX});function mX(r,e){let t=v(r,"x","tile","string_or_numeric");P(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);let n={x:t},o={reps:e};return D.runKernel(Nn,n,o)}var Yr=A({tile_:mX});function cX(r,e,t,n="float32"){e==null&&(e=r);let o=Te([r,e],n),s=r<=e?r:e;for(let i=0;i<s;++i)o.set(1,i,i);let a=$(o.toTensor(),[r,e]);if(t==null)return a;if(t.length===1)return Yr(Er(a,0),[t[0],1,1]);if(t.length===2)return Yr(Er(Er(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return Yr(Er(Er(Er(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}var Hl=A({eye_:cX});function ci(r,e,t){let n={shape:r,value:e,dtype:t};return D.runKernel(ai,{},n)}function dX(r){let t={x:v(r,"x","floor","float32")};return D.runKernel(yo,t)}var tl=A({floor_:dX});function fX(r,e,t=0,n=0){let o=v(r,"x","gather"),s=v(e,"indices","gather","int32"),a={x:o,indices:s},i={axis:t,batchDims:n};return D.runKernel(ms,a,i)}var rl=A({gather_:fX});function hX(r,e){let t=v(r,"a","greater","string_or_numeric"),n=v(e,"b","greater","string_or_numeric");[t,n]=Qe(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ga,o)}var pr=A({greater_:hX});function gX(r,e){let t=v(r,"a","greaterEqual","string_or_numeric"),n=v(e,"b","greaterEqual","string_or_numeric");[t,n]=Qe(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Io,o)}var Ms=A({greaterEqual_:gX});function bX(r){let t={x:v(r,"x","isFinite")};return D.runKernel(Oi,t)}var M1=A({isFinite_:bX});function yX(r){let t={x:v(r,"x","isInf")};return D.runKernel(zi,t)}var R1=A({isInf_:yX});function TX(r){let t={x:v(r,"x","isNaN")};return D.runKernel(Gi,t)}var E1=A({isNaN_:TX});function xX(r,e=.2){let n={x:v(r,"x","leakyRelu")},o={alpha:e};return D.runKernel(Co,n,o)}var Xm=A({leakyRelu_:xX});function IX(r,e){let t=v(r,"a","less","string_or_numeric"),n=v(e,"b","less","string_or_numeric");[t,n]=Qe(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ba,o)}var qb=A({less_:IX});function CX(r,e){let t=v(r,"a","lessEqual","string_or_numeric"),n=v(e,"b","lessEqual","string_or_numeric");[t,n]=Qe(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ya,o)}var Rs=A({lessEqual_:CX});function _1(r,e,t){if(t<=0)throw new Error("The number of values should be positive.");let n={start:r,stop:e,num:t};return D.runKernel(km,{},n)}function kX(r,e=5,t=1,n=1,o=.5){let s=v(r,"x","localResponseNormalization");P(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),P(Ni(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=s,i=!1;s.rank===3&&(i=!0,a=$(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let u={x:a},l={depthRadius:e,bias:t,alpha:n,beta:o},p=D.runKernel(Mu,u,l);return i?$(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var L1=A({localResponseNormalization_:kX});function SX(r){let t={x:v(r,"x","log","float32")};return D.runKernel(ko,t)}var zr=A({log_:SX});function vX(r){let t={x:v(r,"x","log1p")};return D.runKernel(Ui,t)}var Ym=A({log1p_:vX});function AX(r){return P(ni(r),()=>"The f passed in grad(f) must be a function"),(e,t)=>{let n=v(e,"x","tf.grad","string_or_numeric"),o=t!=null?v(t,"dy","tf.grad"):null;return D.tidy(()=>{let{value:s,grads:a}=D.gradients(()=>r(n),[n],o);return o!=null&&zt(s.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Xb(a),a[0]})}}function wX(r){return P(ni(r),()=>"The f passed in grads(f) must be a function"),(e,t)=>{P(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=Ji(e,"args","tf.grads","string_or_numeric"),o=t!=null?v(t,"dy","tf.grads"):null;return D.tidy(()=>{let{value:s,grads:a}=D.gradients(()=>r(...n),n,o);return o!=null&&zt(s.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Xb(a),a})}}function NX(r){return P(ni(r),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{P(e instanceof Xe,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),P(t==null||t instanceof Xe,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:o}=D.gradients(()=>r(e),[e],t);return Xb(n),{grad:n[0],value:o}}}function DX(r){return P(ni(r),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{P(Array.isArray(e)&&e.every(o=>o instanceof Xe),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),P(t==null||t instanceof Xe,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=D.gradients(()=>r(...e),e,t);return t!=null&&zt(n.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Xb(n.grads),n}}function jb(r,e){P(ni(r),()=>"The f passed in variableGrads(f) must be a function"),P(e==null||Array.isArray(e)&&e.every(l=>l instanceof Ku),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let t=e!=null;if(!t){e=[];for(let l in D.registeredVariables)e.push(D.registeredVariables[l])}let n=t?e.filter(l=>!l.trainable):null,o=e.length;e=e.filter(l=>l.trainable),P(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let s=!0,{value:a,grads:i}=D.gradients(r,e,null,s);P(i.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),P(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);let u={};return e.forEach((l,p)=>{i[p]!=null&&(u[l.name]=i[p])}),n?.forEach(l=>u[l.name]=null),{value:a,grads:u}}function fn(r){return D.customGrad(r)}function Xb(r){if(r.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function PX(r){let t={x:v(r,"x","softplus")};return D.runKernel(Xi,t)}var su=A({softplus_:PX});function FX(r){let e=v(r,"x","logSigmoid");return fn(n=>({value:et(su(et(n))),gradFunc:a=>_(a,En(et(n)))}))(e)}var $1=A({logSigmoid_:FX});function MX(r,e){let t=v(r,"a","sub"),n=v(e,"b","sub");[t,n]=Qe(t,n);let o={a:t,b:n};return D.runKernel(qo,o)}var le=A({sub_:MX});function RX(r,e=-1){let t=v(r,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return fn((o,s)=>{let i=dn(o,e,!0),u=le(o,i),l=le(ne(u,"float32"),zr(de(hr(u),e,!0)));return s([l]),{value:l,gradFunc:(m,c)=>{let[d]=c,f=!0,h=hr(d);return le(m,_(de(m,e,f),h))}}})(t)}var Yb=A({logSoftmax_:RX});function EX(r,e=null,t=!1){let n=v(r,"x","logSumExp"),o=fr(e,n.shape),s=dn(n,o,!0),a=le(n,s),i=hr(a),u=de(i,o),l=zr(u),p=Z($(s,l.shape),l);if(t){let m=Fs(p.shape,o);return $(p,m)}return p}var Zb=A({logSumExp_:EX});function _X(r,e){let t=v(r,"a","logicalAnd","bool"),n=v(e,"b","logicalAnd","bool");ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Ta,o)}var Zr=A({logicalAnd_:_X});function LX(r){let t={x:v(r,"x","logicalNot","bool")};return D.runKernel(xa,t)}var Zm=A({logicalNot_:LX});function $X(r,e){let t=v(r,"a","logicalOr","bool"),n=v(e,"b","logicalOr","bool");ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Wi,o)}var Qb=A({logicalOr_:$X});function BX(r,e){let t=v(r,"a","logicalXor","bool"),n=v(e,"b","logicalXor","bool");return ze(t.shape,n.shape),Zr(Qb(r,e),Zm(Zr(r,e)))}var B1=A({logicalXor_:BX});var Jb=2147483648;function OX(r,e,t="left"){let n=v(r,"sortedSequence","searchSorted"),o=v(e,"values","searchSorted"),s=n.shape[n.shape.length-1],a=o.shape[o.shape.length-1],i=$(n,[-1,s]),u=$(o,[-1,a]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(rt(u.shape)>=Jb)throw new Error(`values tensor size must less than ${Jb}`);if(i.shape[1]>=Jb)throw new Error(`trailing dim_size must less than ${Jb} for int32 output type, was ${i.shape[1]}`);let l={sortedSequence:i,values:u},p={side:t};return D.runKernel(Fm,l,p)}var Hd=A({searchSorted_:OX});function O1(r,e){return Hd(r,e,"left")}function zX(r,e,t,n,o){let s=v(r,"x","maxPool"),a=1,i=s,u=!1;s.rank===3&&(u=!0,i=$(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),P(Rr(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),Pt("maxPool",n,o);let l={x:i},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o},m=D.runKernel(Ao,l,p);return u?$(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Qm=A({maxPool_:zX});function GX(r,e=[1,1,1],t,n,o,s="NDHWC"){let a=v(r,"x","maxPool3d"),i=a,u=!1;a.rank===4&&(u=!0,i=$(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),P(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Pt("maxPool3d",n,o);let l={x:i},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},m=D.runKernel(Ru,l,p);return u?$(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var ey=A({maxPool3d_:GX});function UX(r,e,t,n,o=!1){let a={x:v(r,"x","maxPoolWithArgmax")},i={filterSize:e,strides:t,pad:n,includeBatchInIndex:o},u=D.runKernel(wm,a,i);return{result:u[0],indexes:u[1]}}var z1=A({maxPoolWithArgmax_:UX});function WX(r,e){let t=v(r,"a","maximum"),n=v(e,"b","maximum");[t,n]=Qe(t,n),t.dtype==="bool"&&(t=ne(t,"int32"),n=ne(n,"int32")),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(vo,o)}var Qo=A({maximum_:WX});function KX(r,e=null,t=!1){let o={x:v(r,"x","mean")},s={axis:e,keepDims:t};return D.runKernel(wo,o,s)}var Bt=A({mean_:KX});function It(r,e="float32"){if(e==="complex64"){let n=It(r,"float32"),o=It(r,"float32");return Pn(n,o)}let t=um(rt(r),e);return D.makeTensor(t,r,e)}function gr(r,e="float32"){if(e==="complex64"){let n=gr(r,"float32"),o=It(r,"float32");return Pn(n,o)}let t=vd(rt(r),e);return D.makeTensor(t,r,e)}function G1(r,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(r===void 0)return[];let n=v(r,"x","meshgrid",r instanceof Xe?r.dtype:"float32");if(e===void 0)return[n];let o=v(e,"y","meshgrid",e instanceof Xe?e.dtype:"float32"),s=rt(n.shape),a=rt(o.shape);return t==="xy"?(n=$(n,[1,-1]),o=$(o,[-1,1]),[qe(gr([a,1],n.dtype),n),qe(o,gr([1,s],o.dtype))]):(n=$(n,[-1,1]),o=$(o,[1,-1]),[qe(n,gr([1,a],n.dtype)),qe(gr([s,1],o.dtype),o)])}function VX(r,e){let t=v(r,"a","minimum"),n=v(e,"b","minimum");[t,n]=Qe(t,n),t.dtype==="bool"&&(t=ne(t,"int32"),n=ne(n,"int32")),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Do,o)}var nl=A({minimum_:VX});function HX(r,e,t){P(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);let n=v(r,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");P(e.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${e.length}.`);let o=t==="reflect"?1:0;for(let i=0;i<n.rank;i++)P(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),P(e[i][0]>=0&&e[i][0]<=n.shape[i]-o&&e[i][1]>=0&&e[i][1]<=n.shape[i]-o,()=>`Padding in dimension ${i} cannot be greater than or equal to ${n.shape[i]-o} or less than 0 for input of shape ${n.shape}`);let s={paddings:e,mode:t},a={x:n};return D.runKernel(Po,a,s)}var U1=A({mirrorPad_:HX});function qX(r,e){let t=v(r,"a","mod"),n=v(e,"b","mod");[t,n]=Qe(t,n);let o={a:t,b:n};return D.runKernel(Ki,o)}var W1=A({mod_:qX});function jX(r,e=null,t=!1){r=v(r,"x","moments");let n=fr(e,r.shape),o=Bt(r,n,t),s=o.shape;t||(s=Fs(o.shape,n));let a=Ye(le(ne(r,"float32"),$(o,s))),i=Bt(a,n,t);return{mean:o,variance:i}}var ql=A({moments_:jX});function XX(r,e,t,n){let o=v(e,"data","multiRNNCell"),s=Ji(t,"c","multiRNNCell"),a=Ji(n,"h","multiRNNCell"),i=o,u=[];for(let m=0;m<r.length;m++){let c=r[m](i,s[m],a[m]);u.push(c[0]),u.push(c[1]),i=c[1]}let l=[],p=[];for(let m=0;m<u.length;m+=2)l.push(u[m]),p.push(u[m+1]);return[l,p]}var K1=A({multiRNNCell_:XX});function YX(r,e,t,n=!1){let o=v(r,"logits","multinomial"),s=o.size,a=o.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();let u={logits:a===1?$(o,[1,-1]):o},l={numSamples:e,seed:t,normalized:n},p=D.runKernel(Nm,u,l);return a===1?$(p,[p.size]):p}var V1=A({multinomial_:YX});function ZX(r,e){let t=v(r,"a","notEqual","string_or_numeric"),n=v(e,"b","notEqual","string_or_numeric");[t,n]=Qe(t,n),ze(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Ia,o)}var au=A({notEqual_:ZX});function QX(r){let t={x:v(r,"x","onesLike")};return D.runKernel(ds,t)}var _r=A({onesLike_:QX});function JX(r,e){let t=v(r,"v1","outerProduct"),n=v(e,"v2","outerProduct");P(t.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${n.rank}.`);let o=$(t,[-1,1]),s=$(n,[1,-1]);return qe(o,s)}var H1=A({outerProduct_:JX});function eY(r,e,t=0){let n=v(r,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let o={paddings:e,constantValue:t},s={x:n};return D.runKernel(Mo,s,o)}var jn=A({pad_:eY});function tY(r,e,t=0){return P(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),jn(r,[e],t)}var q1=A({pad1d_:tY});function rY(r,e,t=0){return P(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),jn(r,e,t)}var j1=A({pad2d_:rY});function nY(r,e,t=0){return P(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),jn(r,e,t)}var X1=A({pad3d_:nY});function oY(r,e,t=0){return P(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),jn(r,e,t)}var Y1=A({pad4d_:oY});function sY(r,e,t){let n=v(r,"x","spaceToBatchND");P(n.rank>=1+e.length,()=>`input rank ${n.rank} should be > than [blockShape] ${e.length}`),P(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),P(n.shape.reduce((a,i,u)=>u>0&&u<=e.length?a&&(i+t[u-1][0]+t[u-1][1])%e[u-1]===0:a,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);let o={x:n},s={blockShape:e,paddings:t};return D.runKernel(ys,o,s)}var Jm=A({spaceToBatchND_:sY});function aY(r,e,t,n,o,s,a){o==null&&(o=[1,1]),s==null&&(s=1),n===0&&(n="valid");let i=v(r,"x","maxPool"),u=i,l=!1;i.rank===3&&(l=!0,u=$(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(Rr(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);let p=lk(u.shape,e,s,o,n),m=[p.dilationHeight,p.dilationWidth],c;n==="same"?c=uY([p.filterHeight,p.filterWidth],m):c=[[0,0],[0,0]];let d=m[0]===1&&m[1]===1,[f,h]=iY([p.inHeight,p.inWidth],m,c),g=d?n:"valid",y=d?u:Jm(u,m,f),x=(t==="avg"?()=>Km(y,e,s,g,a):()=>Qm(y,e,s,g,a))(),I=d?x:Vm(x,m,h);return l?$(I,[I.shape[1],I.shape[2],I.shape[3]]):I}function iY(r,e,t){let n=t.map(p=>p[0]),o=t.map(p=>p[1]),s=r.concat(n,o),a=e.map((p,m)=>(p-s[m]%p)%p),i=o.map((p,m)=>p+a[m]),u=e.map((p,m)=>[n[m],i[m]]),l=e.map((p,m)=>[0,a[m]]);return[u,l]}function uY(r,e){let n=r.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),o=n.map(a=>Math.floor(a/2)),s=n.map((a,i)=>a-o[i]);return n.map((a,i)=>[o[i],s[i]])}var Z1=A({pool_:aY});function lY(r,e){let t=v(r,"x","prelu"),n=v(e,"alpha","prelu"),o={x:t,alpha:n};return D.runKernel(Eo,o)}var ec=A({prelu_:lY});function pY(r,e=null,t=!1){let n=v(r,"x","prod");n.dtype==="bool"&&(n=ne(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return D.runKernel(_o,o,s)}var Q1=A({prod_:pY});function mY(r,e,t){let n=rt(r),o=null;if(t==null||t==="float32")o=new Float32Array(n);else if(t==="int32")o=new Int32Array(n);else if(t==="bool")o=new Uint8Array(n);else throw new Error(`Unknown data type ${t}`);for(let s=0;s<n;s++)o[s]=e();return D.makeTensor(o,r,t)}var J1=A({rand_:mY});var ry=Ml(qd());var tc=class{constructor(e,t,n,o,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=s||Math.random();this.random=ry.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let o=this.nextVal;return this.nextVal=NaN,o}let e,t,n=!1;for(;!n;){let o,s,a;do o=2*this.random()-1,s=2*this.random()-1,a=o*o+s*s;while(a>=1||a===0);let i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*o*i,t=this.mean+this.stdDev*s*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},Ik=class{constructor(e,t,n,o){this.alpha=e,this.beta=1/t,this.dtype=n;let s=o||Math.random();this.randu=ry.alea(s.toString()),this.randn=new tc(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,o,s,a;for(;;){do o=this.randn.nextValue(),a=1+this.c*o;while(a<=0);if(a*=a*a,e=o*o,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},Ck=class{constructor(e=0,t=1,n,o){this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32";if(this.min=e,this.range=t-e,this.dtype=n,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=ry.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function yY(r,e,t=1,n="float32",o){if(t==null&&(t=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new Ik(e,t,n,o),a=Te(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var gP=A({randomGamma_:yY});function TY(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new tc(e,t,n,!1,o),a=Te(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var Xl=A({randomNormal_:TY});function xY(r,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return Xl(r,0,1,e,t)}var bP=A({randomStandardNormal_:xY});function IY(r,e=0,t=1,n="float32",o){let s=Te(r,n),a=new Ck(e,t,null,o);for(let i=0;i<s.values.length;i++)s.values[i]=a.nextValue();return s.toTensor()}var di=A({randomUniform_:IY});function ol(r,e,t=1,n="float32"){if(t===0)throw new Error("Cannot have a step of zero");let o={start:r,stop:e,step:t,dtype:n};return D.runKernel(ii,{},o)}function CY(r){let t={x:v(r,"x","reciprocal")};return D.runKernel(Hi,t)}var yP=A({reciprocal_:CY});function kY(r){let t={x:v(r,"x","relu")};return D.runKernel(Lo,t)}var Qr=A({relu_:kY});function SY(r){let t={x:v(r,"x","relu6")};return D.runKernel(Oo,t)}var ny=A({relu6_:SY});function vY(r,e){let n={x:v(r,"x","reverse")},o={dims:e};return D.runKernel(va,n,o)}var Dr=A({reverse_:vY});function AY(r){let e=v(r,"x","reverse");return P(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Dr(e,0)}var TP=A({reverse1d_:AY});function wY(r,e){let t=v(r,"x","reverse");return P(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),Dr(t,e)}var xP=A({reverse2d_:wY});function NY(r,e){let t=v(r,"x","reverse");return P(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),Dr(t,e)}var IP=A({reverse3d_:NY});function DY(r,e){let t=v(r,"x","reverse");return P(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),Dr(t,e)}var CP=A({reverse4d_:DY});function PY(r){let t={x:v(r,"x","round")};return D.runKernel(Aa,t)}var oy=A({round_:PY});function FY(r){let t={x:v(r,"x","rsqrt","float32")};return D.runKernel(zo,t)}var sy=A({rsqrt_:FY});function MY(r){let t={x:v(r,"x","selu")};return D.runKernel(qi,t)}var ay=A({selu_:MY});function RY(r,e,t,n,o,s=[1,1],a="NHWC"){let i=v(r,"x","separableConv2d"),u=v(e,"depthwiseFilter","separableConv2d"),l=v(t,"pointwiseFilter","separableConv2d"),p=i,m=!1;if(i.rank===3&&(m=!0,p=$(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");P(p.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`),P(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),P(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),P(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);let c=u.shape[2],d=u.shape[3];P(l.shape[2]===c*d,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${c*d}, but got ${l.shape[2]}.`);let f=Ju(p,u,n,o,a,s),g=Zo(f,l,1,"valid",a);return m?$(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var iy=A({separableConv2d_:RY});async function EY(r,e){let t=v(r,"x","setdiff1d"),n=v(e,"y","setdiff1d");P(t.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${n.dtype}).`),P(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),P(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let o=await t.data(),s=await n.data(),a=new Set(s),i=0;for(let p=0;p<o.length;p++)a.has(o[p])||i++;let u=new yt([i],t.dtype),l=new yt([i],"int32");for(let p=0,m=0;p<o.length;p++)a.has(o[p])||(u.values[m]=o[p],l.values[m]=p,m++);return[u.toTensor(),l.toTensor()]}var kP=EY;function _Y(r){let t={x:v(r,"x","sign")};return D.runKernel(ji,t)}var SP=A({sign_:_Y});function LY(r){let t={x:v(r,"x","sin","float32")};return D.runKernel(Go,t)}var uy=A({sin_:LY});function $Y(r){let t={x:v(r,"x","sinh")};return D.runKernel(Na,t)}var ly=A({sinh_:$Y});function BY(r,e,t){let n=v(r,"x","slice1d");return P(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),Ge(n,[e],[t])}var rc=A({slice1d_:BY});function OY(r,e,t){let n=v(r,"x","slice2d");return P(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),Ge(n,e,t)}var jd=A({slice2d_:OY});function zY(r,e,t){let n=v(r,"x","slice3d");return P(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),Ge(n,e,t)}var nc=A({slice3d_:zY});function GY(r,e,t){let n=v(r,"x","slice4d");return P(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),Ge(n,e,t)}var Yl=A({slice4d_:GY});function UY(r,e=-1){let t=v(r,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);let n={logits:t},o={dim:e};return D.runKernel(Vo,n,o)}var oc=A({softmax_:UY});function WY(r){P(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let e={input:r};return D.runKernel(Im,e)}var sc=A({fft_:WY});function KY(r){P(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let e={input:r};return D.runKernel(Cm,e)}var Zl=A({ifft_:KY});function VY(r){let e=r.shape[r.shape.length-1],t=r.size/e,n;if(e<=2){let o=$(r,[t,e]);n=Zl(o)}else{let o=[t,2*(e-1)],s=$(nu(r),[t,e]),a=$(Xu(r),[t,e]),i=Dr(Ge(s,[0,1],[t,e-2]),1),u=_(Dr(Ge(a,[0,1],[t,e-2]),1),ce(-1)),l=mt([s,i],1),p=mt([a,u],1),m=$(Pn(l,p),[o[0],o[1]]);n=Zl(m)}if(n=nu(n),r.rank===3&&r.shape[0]!==0){let o=n,s=r.shape[0];n=$(n,[s,n.shape[0]/s,n.shape[1]]),o.dispose()}return n}var py=A({irfft_:VY});function HY(r,e,t=0){let o={x:v(r,"x","split")},s={numOrSizeSplits:e,axis:t};return D.runKernel(Ts,o,s)}var Pr=A({split_:HY});function qY(r,e){P(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let t=r.shape[r.shape.length-1],n=r.size/t,o;if(e!=null&&e<t){let f=r.shape.map(g=>0),h=r.shape.map(g=>g);h[r.shape.length-1]=e,o=Ge(r,f,h),t=e}else if(e!=null&&e>t){let f=r.shape.map(h=>h);f[r.shape.length-1]=e-t,o=mt([r,It(f)],r.shape.length-1),t=e}else o=r;let s=De(o),a=$(Pn(o,s),[n,t]),i=sc(a),u=Math.floor(t/2)+1,l=nu(i),p=Xu(i),m=Pr(l,[u,t-u],l.shape.length-1),c=Pr(p,[u,t-u],p.shape.length-1),d=o.shape.slice();return d[o.shape.length-1]=u,$(Pn(m[0],c[0]),d)}var ac=A({rfft_:qY});function jY(r,e){let t=v(r,"a","squaredDifference"),n=v(e,"b","squaredDifference");[t,n]=Qe(t,n),ze(t.shape,n.shape);let o={a:t,b:n},s={};return D.runKernel(Ho,o,s)}var my=A({squaredDifference_:jY});function XY(r,e){let t=v(r,"x","squeeze","string_or_numeric");return $(t,TC(t.shape,e).newShape)}var Es=A({squeeze_:XY});function YY(r,e=0){let t=Ji(r,"tensors","stack","string_or_numeric");P(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&P(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");let n=t,o={axis:e};return D.runKernel(fs,n,o)}var br=A({stack_:YY});function ZY(r,e=0){let n={x:v(r,"x","step")},o={alpha:e};return D.runKernel(Cs,n,o)}var fi=A({step_:ZY});function QY(r,e,t,n,o=0,s=0,a=0,i=0,u=0){let p={x:v(r,"x","stridedSlice","string_or_numeric")},m={begin:e,end:t,strides:n,beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};return D.runKernel(Da,p,m)}var vP=A({stridedSlice_:QY});function JY(r){let t={x:v(r,"x","tan","float32")};return D.runKernel(Pa,t)}var AP=A({tan_:JY});function jt(r,e){ro(r);let t=$r(r,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return mn(r,null,t,e)}function La(r,e,t){if(ro(r),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=$r(r,t);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return mn(r,e,n,t)}function wP(r,e,t){if(ro(r),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=$r(r,t);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return mn(r,e,n,t)}function NP(r,e,t){if(ro(r),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=$r(r,t);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return mn(r,e,n,t)}function DP(r,e,t){if(ro(r),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=$r(r,t);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||n,mn(r,e,n,t)}function eZ(r,e=1,t=!0){let n=v(r,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let o=n.shape[n.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${e}`);let s={x:n},a={k:e,sorted:t},[i,u]=D.runKernel(Fa,s,a);return{values:i,indices:u}}var PP=A({topk_:eZ});function tZ(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new tc(e,t,n,!0,o),a=Te(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var ic=A({truncatedNormal_:tZ});function rZ(r,e=0){let t=v(r,"x","unique","string_or_numeric");P(t.rank>0,()=>"The input tensor must be at least 1D");let n={x:t},o={axis:e},[s,a]=D.runKernel(Mm,n,o);return{values:s,indices:a}}var FP=A({unique_:rZ});function nZ(r,e,t){let n=v(r,"x","unsortedSegmentSum"),o=v(e,"segmentIds","unsortedSegmentSum","int32");P(Ni(t),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:o},a={numSegments:t};return D.runKernel(Gu,s,a)}var cy=A({unsortedSegmentSum_:nZ});function oZ(r,e=0){let t=v(r,"x","unstack","string_or_numeric");P(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);let n={value:t},o={axis:e};return D.runKernel(xs,n,o)}var Gr=A({unstack_:oZ});function MP(r,e){return Hd(r,e,"right")}function dy(r,e=!0,t,n){return D.makeVariable(r,e,t,n)}function fy(r,e){let t=[];for(let s=0;s<e.length;s++)e[s]&&t.push(s);let n=Te(r,"int32"),o=Te([t.length,r.length],"int32");for(let s=0;s<t.length;s++){let a=n.indexToLoc(t[s]),i=s*r.length;o.values.set(a,i)}return o.toTensor()}async function sZ(r){let e=v(r,"condition","whereAsync","bool"),t=await e.data(),n=fy(e.shape,t);return r!==e&&e.dispose(),n}var hy=sZ;async function aZ(r,e,t){let n=v(r,"tensor","boolMask"),o=v(e,"mask","boolMask","bool"),s=t??0,a=o.rank,i=n.shape;P(a>0,()=>"mask cannot be scalar"),zt(i.slice(s,s+a),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let h=s;h<s+a;h++)u*=i[h];let l=i.slice(0,s).concat([u],i.slice(s+a)),p=$(n,l),m=$(o,[-1]),c=await hy(m),d=Es(c,[1]),f=rl(p,d,s);return r!==n&&n.dispose(),e!==o&&o.dispose(),d.dispose(),p.dispose(),m.dispose(),c.dispose(),f}var iZ=aZ;function uZ(r,e,t,n,o=!0){let s=v(r,"v","movingAverage"),a=v(e,"x","movingAverage"),i=v(t,"decay","movingAverage");LC(s,a),P(Gn(s.shape,a.shape),()=>"Shape mismatch in v and x");let u=ce(1),l=le(u,i),p=_(le(a,s),l);if(o){P(n!=null,()=>"When using zeroDebias: true, step is required.");let m=v(n,"step","movingAverage");p=me(p,le(u,qn(i,m)))}return Z(s,p)}var lZ=A({movingAverage_:uZ});function pZ(r,e,t){let n=v(r,"indices","scatterND","int32"),o=v(e,"updates","scatterND");vb(o,n,t);let s={indices:n,updates:o},a={shape:t};return D.runKernel(wa,s,a)}var mZ=A({scatterND_:pZ});function RP(r,e,t,n){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let o=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(t.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${s}.`);let a=e.size;if(!(e.rank===0||e.rank===1&&a===o))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${o}]`);if(e.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function dZ(r,e,t,n=0){let o=v(r,"sparseIndices","sparseToDense","int32"),s=v(e,"sparseValues","sparseToDense","string_or_numeric"),a=v(n,"defaultValue","sparseToDense",s.dtype);RP(o,s,t,a);let i={sparseIndices:o,sparseValues:s,defaultValue:a},u={outputShape:t};return D.runKernel(Bu,i,u)}var fZ=A({sparseToDense_:dZ});function hZ(r,e){let t=v(e,"indices","gatherND","int32"),o={params:v(r,"x","gatherND","string_or_numeric"),indices:t};return D.runKernel(ha,o)}var gZ=A({gatherND_:hZ});function EP(r,e){if(e==null)return r.shape.slice();if(Gn(r.shape,e))return e;if(r.shape.length===e.length){let t=[];for(let n=0;n<r.shape.length;n++)e[n]==null&&r.shape[n]!=null?t.push(r.shape[n]):t.push(e[n]);return t}return e}function bZ(r,e,t,n){let o=v(r,"x","dropout");if(P(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),P(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return r instanceof Xe?o.clone():o;let s=EP(o,t),a=1-e,i=me(tl(Z(di(s,0,1,"float32",n),a)),a);return _(o,i)}var kk=A({dropout_:bZ});function Sk(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function Xd(r,e,t){let n=1-r%2,o=new Float32Array(r);for(let s=0;s<r;++s){let a=2*Math.PI*s/(r+n-1);o[s]=e-t*Math.cos(a)}return jt(o,"float32")}async function yZ(r,e,t=1){let n=v(r,"predictions","inTopK"),o=v(e,"targets","inTopK");P(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),P(n.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${o.rank}`),zt(n.shape.slice(0,n.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];P(t>0&&t<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${t}`);let a=await n.data(),i=await o.data(),[u,l]=[a.length/s,s],p=xC("bool",u);for(let m=0;m<u;m++){let c=m*l,d=a.subarray(c,c+l),f=[];for(let h=0;h<d.length;h++)f.push({value:d[h],index:h});f.sort((h,g)=>g.value-h.value),p[m]=0;for(let h=0;h<t;h++)if(f[h].index===i[m]){p[m]=1;break}}return r!==n&&n.dispose(),e!==o&&o.dispose(),wr(p,o.shape,"bool")}var TZ=yZ;var sl={};je(sl,{conv2d:()=>_P,depthwiseConv2d:()=>LP,matMul:()=>$P});function xZ(r,e,t,n,o,s="NHWC",a){let i=r;r.rank===3&&(i=$(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=e;u.rank===3&&(u=$(e,[1,e.shape[0],e.shape[1],e.shape[2]])),P(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),P(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),P(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);let l=s==="NHWC"?i.shape[3]:i.shape[1],p=s==="NHWC"?u.shape[3]:u.shape[1];P(l===t[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${t[2]}.`),P(p===t[3],()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${t[3]}).`),Pt("conv2dDerFilter",o,a);let m={x:i,dy:u},c={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,filterShape:t};return D.runKernel(dm,m,c)}var uc=A({conv2DBackpropFilter_:xZ});function Ql(r,e,t){if(t==null||t==="linear")return r;if(t==="relu")return _(r,fi(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Jl(r,e){let t=e,n=St(r.shape,e.shape);return n.length>0&&(t=de(t,n)),$(t,r.shape)}function ep(r,e,t,n){if(e==="linear")return r;if(e==="relu")return Qr(r);if(e==="elu")return el(r);if(e==="relu6")return ny(r);if(e==="prelu")return ec(r,t);if(e==="leakyrelu")return Xm(r,n);if(e==="sigmoid")return En(r);throw new Error(`Unknown fused activation ${e}.`)}var tp=(r,e)=>!(r>0)||e==="linear";function IZ({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:p}){if(u=u||"linear",tp(D.state.gradientDepth,u)===!1){P(o==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${o} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let w=Zo(r,e,t,n,o,s,a);return i!=null&&(w=Z(w,i)),ep(w,u,l,p)}let m=v(r,"x","conv2d","float32"),c=v(e,"filter","conv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=$(m,[1,m.shape[0],m.shape[1],m.shape[2]])),P(d.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`),P(c.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`),Pt("fused conv2d",n,a);let h=o==="NHWC"?d.shape[3]:d.shape[1];P(c.shape[2]===h,()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${c.shape[2]}.`),P(Rr(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);let g=Kl(d.shape,c.shape,t,s,n,a),y;i!=null&&(y=v(i,"bias","fused conv2d"),[y]=Qe(y,m),o==="NHWC"?ze(g.outShape,y.shape):(P(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),P(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let T;if(l!=null){let w=l.shape;if(P(w.length<=1||w.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${w.length}.`),w.length===1)P(w[0]===1||w[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${w}) is not compatible with the number of output channels (${g.outChannels}).`);else if(w.length===3)try{ze(w,g.outShape)}catch{let M=`Error in fused conv2d: PReLU activation weights (${w}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(M)}T=v(l,"prelu weights","fused conv2d")}let x=(w,F)=>{P(o==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${o} but only NHWC is currently supported.`);let[M,R,L,O]=F,W=Ql(w,L,u);P(Xo(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let V=qm(R.shape,W,M,t,n),j=uc(R,W,M.shape,t,n),q=[V,j];if(O!=null){let Y=Jl(O,W);q.push(Y)}return q},I={x:d,filter:c,bias:y,preluActivationWeights:T},k={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:u,leakyreluAlpha:p};return i==null?fn((F,M,R)=>{let L=D.runKernel(Ss,I,k);return R([M,F,L]),f&&(L=$(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:x}})(d,c):fn((F,M,R,L)=>{let O=D.runKernel(Ss,I,k);return L([M,F,O,R]),f&&(O=$(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:x}})(d,c,y)}var _P=A({fusedConv2d_:IZ});function CZ(r,e,t,n,o,s=[1,1],a){let i=r;r.rank===3&&(i=$(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=e;u.rank===3&&(u=$(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l={x:i,dy:u},p={strides:n,pad:o,dimRoundingMode:a,dilations:s,filterShape:t};return D.runKernel(bm,l,p)}var gy=A({depthwiseConv2dNativeBackpropFilter_:CZ});function kZ(r,e,t,n,o,s=[1,1],a){let i=e,u=!1;e.rank===3&&(u=!0,i=$(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l={dy:i,filter:t},p={strides:n,pad:o,dimRoundingMode:a,dilations:s,inputShape:r},m=D.runKernel(ym,l,p);return u?$(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var by=A({depthwiseConv2dNativeBackpropInput_:kZ});function SZ({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:p}){if(tp(D.state.gradientDepth,u)===!1){let k=Ju(r,e,t,n,o,s,a);return i!=null&&(k=Z(k,i)),ep(k,u,l,p)}let m=v(r,"x","depthwiseConv2d","float32"),c=v(e,"filter","depthwiseConv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=$(m,[1,m.shape[0],m.shape[1],m.shape[2]])),P(d.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),P(c.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`),P(d.shape[3]===c.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),s==null&&(s=[1,1]),P(Rr(t,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),Pt("fused depthwiseConv2d",n,a);let h=Kl(d.shape,c.shape,t,s,n,a,!0),g;i!=null&&(g=v(i,"bias","fused conv2d"),[g]=Qe(g,m),ze(h.outShape,g.shape));let y;l!=null&&(y=v(l,"prelu weights","fused depthwiseConv2d"));let T=(k,w)=>{P(Xo(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[F,M,R,L]=w,O=Ql(k,R,u),W=by(M.shape,O,F,t,n,s,a),V=gy(M,O,F.shape,t,n,s,a);if(L!=null){let j=Jl(g,O);return[W,V,j]}return[W,V]},x={x:d,filter:c,bias:g,preluActivationWeights:y},I={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:u,leakyreluAlpha:p};return i==null?fn((w,F,M)=>{let R=D.runKernel(vs,x,I);return M([F,w,R]),f&&(R=$(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:T}})(d,c):fn((w,F,M,R)=>{let L=D.runKernel(vs,x,I);return R([F,w,L,M]),f&&(L=$(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:T}})(d,c,g)}var LP=A({fusedDepthwiseConv2d_:SZ});function vZ({a:r,b:e,transposeA:t=!1,transposeB:n=!1,bias:o,activation:s="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(tp(D.state.gradientDepth,s)===!1){let O=qe(r,e,t,n);return o!=null&&(O=Z(O,o)),ep(O,s,a,i)}let u=v(r,"a","fused matMul"),l=v(e,"b","fused matMul");[u,l]=Qe(u,l);let p=t?u.shape[u.rank-2]:u.shape[u.rank-1],m=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=t?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),h=l.shape.slice(0,-2),g=rt(f),y=rt(h);P(p===m,()=>`Error in fused matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${t} and transposeB=${n} must match.`);let x=ze(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([c,d]),I=t?$(u,[g,p,c]):$(u,[g,c,p]),k=n?$(l,[y,d,m]):$(l,[y,m,d]),w;o!=null&&(w=v(o,"bias","fused matMul"),[w]=Qe(w,u),ze(x,w.shape));let F;a!=null&&(F=v(a,"prelu weights","fused matMul"));let M=(O,W)=>{let[V,j,q,Y]=W,J=Ql($(O,q.shape),q,s),H,oe;if(!t&&!n?(H=qe(J,j,!1,!0),oe=qe(V,J,!0,!1)):!t&&n?(H=qe(J,j,!1,!1),oe=qe(J,V,!0,!1)):t&&!n?(H=qe(j,J,!1,!0),oe=qe(V,J,!1,!1)):(H=qe(j,J,!0,!0),oe=qe(J,V,!0,!0)),o!=null){let se=Jl(Y,J);return[H,oe,se]}else return[H,oe]},R={a:I,b:k,bias:w,preluActivationWeights:F},L={transposeA:t,transposeB:n,activation:s,leakyreluAlpha:i};return o==null?fn((W,V,j)=>{let q=D.runKernel(ks,R,L);return j([W,V,q]),{value:$(q,x),gradFunc:M}})(I,k):fn((W,V,j,q)=>{let Y=D.runKernel(ks,R,L);return q([W,V,Y,j]),{value:$(Y,x),gradFunc:M}})(I,k,w)}var $P=A({fusedMatMul_:vZ});function AZ(r){return Xd(r,.54,.46)}var BP=A({hammingWindow_:AZ});function wZ(r){return Xd(r,.5,.5)}var yy=A({hannWindow_:wZ});function NZ(r,e,t,n=!1,o=0){let s=0,a=[];for(;s+e<=r.size;)a.push(Ge(r,s,e)),s+=t;if(n)for(;s<r.size;){let i=s+e-r.size,u=mt([Ge(r,s,e-i),ci([i],o)]);a.push(u),s+=t}return a.length===0?La([],[0,e]):$(mt(a),[a.length,e])}var Ty=A({frame_:NZ});function DZ(r,e,t,n,o=yy){n==null&&(n=Sk(e));let s=Ty(r,e,t),a=_(s,o(e));return ac(a,n)}var OP=A({stft_:DZ});function PZ(r,e,t,n,o="bilinear",s=0){let a=v(r,"image","cropAndResize"),i=v(e,"boxes","cropAndResize","float32"),u=v(t,"boxInd","cropAndResize","int32"),l=i.shape[0];P(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),P(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`),P(u.rank===1&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`),P(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),P(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),P(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);let p={image:a,boxes:i,boxInd:u},m={method:o,extrapolationValue:s,cropSize:n};return D.runKernel(pa,p,m)}var zP=A({cropAndResize_:PZ});function FZ(r){let e=v(r,"image","flipLeftRight","float32");P(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);let t={image:e};return D.runKernel(fa,t,{})}var GP=A({flipLeftRight_:FZ});function MZ(r){let e=v(r,"image","grayscaleToRGB"),t=e.rank-1,n=e.shape[t];P(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),P(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let o=new Array(e.rank);return o.fill(1,0,t),o[t]=3,Yr(e,o)}var UP=A({grayscaleToRGB_:MZ});function RZ(r,e,t=0,n=.5){let o=v(r,"image","rotateWithOffset","float32");P(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);let s={image:o},a={radians:e,fillValue:t,center:n};return D.runKernel(Ra,s,a)}var WP=A({rotateWithOffset_:RZ});function _s(r,e,t,n,o,s){n==null&&(n=.5),o==null&&(o=Number.NEGATIVE_INFINITY),s==null&&(s=0);let a=r.shape[0];return t=Math.min(t,a),P(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),P(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),P(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),P(e.rank===1,()=>"scores must be a 1D tensor"),P(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),P(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s}}function EZ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=v(r,"boxes","nonMaxSuppression","float32"),a=v(e,"scores","nonMaxSuppression","float32"),i=_s(s,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let u={maxOutputSize:t,iouThreshold:n,scoreThreshold:o};return D.runKernel(Ca,{boxes:s,scores:a},u)}var KP=A({nonMaxSuppression_:EZ});function VP(r,e,t){let n=_Z(r,e,t),o=n<0?-(n+1):n;r.splice(o,0,e)}function _Z(r,e,t){return $Z(r,e,t||LZ)}function LZ(r,e){return r>e?1:r<e?-1:0}function $Z(r,e,t){let n=0,o=r.length,s=0,a=!1;for(;n<o;){s=n+(o-n>>>1);let i=t(e,r[s]);i>0?n=s+1:(o=s,a=!i)}return a?n:-n-1}function xy(r,e,t,n,o){return vk(r,e,t,n,o,0)}function Iy(r,e,t,n,o,s){return vk(r,e,t,n,o,0,!1,s,!0)}function Cy(r,e,t,n,o,s){return vk(r,e,t,n,o,s,!0)}function vk(r,e,t,n,o,s,a=!1,i=!1,u=!1){let l=[];for(let g=0;g<e.length;g++)e[g]>o&&l.push({score:e[g],boxIndex:g,suppressBeginIndex:0});l.sort(HP);let p=s>0?-.5/s:0,m=[],c=[];for(;m.length<t&&l.length>0;){let g=l.pop(),{score:y,boxIndex:T,suppressBeginIndex:x}=g;if(y<o)break;let I=!1;for(let k=m.length-1;k>=x;--k){let w=BZ(r,T,m[k]);if(w>=n){I=!0;break}if(g.score=g.score*OZ(n,p,w),g.score<=o)break}g.suppressBeginIndex=m.length,I||(g.score===y?(m.push(T),c.push(g.score)):g.score>o&&VP(l,g,HP))}let d=m.length,f=t-d;i&&f>0&&(m.push(...new Array(f).fill(0)),c.push(...new Array(f).fill(0)));let h={selectedIndices:m};return a&&(h.selectedScores=c),u&&(h.validOutputs=d),h}function BZ(r,e,t){let n=r.subarray(e*4,e*4+4),o=r.subarray(t*4,t*4+4),s=Math.min(n[0],n[2]),a=Math.min(n[1],n[3]),i=Math.max(n[0],n[2]),u=Math.max(n[1],n[3]),l=Math.min(o[0],o[2]),p=Math.min(o[1],o[3]),m=Math.max(o[0],o[2]),c=Math.max(o[1],o[3]),d=(i-s)*(u-a),f=(m-l)*(c-p);if(d<=0||f<=0)return 0;let h=Math.max(s,l),g=Math.max(a,p),y=Math.min(i,m),T=Math.min(u,c),x=Math.max(y-h,0)*Math.max(T-g,0);return x/(d+f-x)}function OZ(r,e,t){let n=Math.exp(e*t*t);return t<=r?n:0}function HP(r,e){return r.score-e.score||r.score===e.score&&e.boxIndex-r.boxIndex}async function zZ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=v(r,"boxes","nonMaxSuppressionAsync"),a=v(e,"scores","nonMaxSuppressionAsync"),i=_s(s,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let u=await Promise.all([s.data(),a.data()]),l=u[0],p=u[1],{selectedIndices:m}=xy(l,p,t,n,o);return s!==r&&s.dispose(),a!==e&&a.dispose(),jt(m,"int32")}var qP=zZ;function GZ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=v(r,"boxes","nonMaxSuppression"),i=v(e,"scores","nonMaxSuppression"),u=_s(a,i,t,n,o,s);t=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let l={boxes:a,scores:i},p={maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s},m=D.runKernel(ka,l,p);return{selectedIndices:m[0],selectedScores:m[1]}}var jP=A({nonMaxSuppressionWithScore_:GZ});async function UZ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=v(r,"boxes","nonMaxSuppressionAsync"),i=v(e,"scores","nonMaxSuppressionAsync"),u=_s(a,i,t,n,o,s);t=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let l=await Promise.all([a.data(),i.data()]),p=l[0],m=l[1],{selectedIndices:c,selectedScores:d}=Cy(p,m,t,n,o,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:jt(c,"int32"),selectedScores:jt(d)}}var XP=UZ;function WZ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=v(r,"boxes","nonMaxSuppression"),i=v(e,"scores","nonMaxSuppression"),u=_s(a,i,t,n,o,null),l=u.maxOutputSize,p=u.iouThreshold,m=u.scoreThreshold,c={boxes:a,scores:i},d={maxOutputSize:l,iouThreshold:p,scoreThreshold:m,padToMaxOutputSize:s},f=D.runKernel(Vi,c,d);return{selectedIndices:f[0],validOutputs:f[1]}}var YP=A({nonMaxSuppressionPadded_:WZ});async function KZ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=v(r,"boxes","nonMaxSuppressionAsync"),i=v(e,"scores","nonMaxSuppressionAsync"),u=_s(a,i,t,n,o,null),l=u.maxOutputSize,p=u.iouThreshold,m=u.scoreThreshold,[c,d]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:h}=Iy(c,d,l,p,m,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:jt(f,"int32"),validOutputs:ce(h,"int32")}}var ZP=KZ;function VZ(r,e,t=!1,n=!1){let o=v(r,"images","resizeBilinear");P(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),P(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),P(n===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=$(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,i={images:s},u={alignCorners:t,halfPixelCenters:n,size:e},l=D.runKernel(Bo,i,u);return a?$(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var QP=A({resizeBilinear_:VZ});function HZ(r,e,t=!1,n=!1){let o=v(r,"images","resizeNearestNeighbor");P(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),P(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),P(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),P(n===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=$(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,i={images:s},u={alignCorners:t,halfPixelCenters:n,size:e},l=D.runKernel($o,i,u);return a?$(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var JP=A({resizeNearestNeighbor_:HZ});function qZ(r,e="binary",t=!1,n=.5){let o=v(r,"image","threshold"),s=.2989,a=.587,i=.114,u=o.shape[0]*o.shape[1],l=_(jt([n]),255),p,m,c,d;if(P(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),P(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),P(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),P(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),o.shape[2]===3){[p,m,c]=Pr(o,[1,1,1],-1);let g=_(p,s),y=_(m,a),T=_(c,i);d=Z(Z(g,y),T)}else d=r;if(e==="otsu"){let g=_b(ne(oy(d),"int32"),wr([]),256);l=jZ(g,u)}let f=t?Rs(d,l):pr(d,l);return ne(_(f,255),"int32")}function jZ(r,e){let t=jt([-1]),n=jt([0]),o=jt([0]),s,a,i,u,l,p;for(let m=0;m<r.size-1;m++){s=Ge(r,0,m+1),a=Ge(r,m+1),l=me(de(s),e),p=me(de(a),e);let c=de(_(s,ol(0,s.size)));i=me(c,de(s));let d=ci(a.shape,s.size),f=Z(ol(0,a.size),d),h=_(a,f);u=me(de(h),de(a));let g=le(i,u),y=le(i,u),T=_(l,p);o=_(_(T,g),y);let x=pr(o,n);n=Wt(x,o,n),t=Wt(x,jt([m]),t)}return t}var eF=A({threshold_:qZ});function XZ(r,e,t="nearest",n="constant",o=0,s){let a=v(r,"image","transform","float32"),i=v(e,"transforms","transform","float32");P(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),P(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),P(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let u={image:a,transforms:i},l={interpolation:t,fillMode:n,fillValue:o,outputShape:s};return D.runKernel(Ma,u,l)}var tF=A({transform_:XZ});function YZ(r,e,t){P(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),P(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);let n=v(r,"a","bandPart");P(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let o=n.shape,[s,a]=n.shape.slice(-2);if(!(e<=s))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`);if(!(t<=a))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`);e<0&&(e=s),t<0&&(t=a);let i=$(ol(0,s,1,"int32"),[-1,1]),u=ol(0,a,1,"int32"),l=le(i,u),p=Zr(Rs(l,ce(+e,"int32")),Ms(l,ce(-t,"int32"))),m=It([s,a],n.dtype);return $(br(Gr($(n,[-1,s,a])).map(c=>Wt(p,c,m))),o)}var rF=A({bandPart_:YZ});function ZZ(r){let e;if(Array.isArray(r)){e=!1,P(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let o=r[0].shape[0];for(let s=1;s<r.length;++s)P(r[s].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${o})`)}else e=!0,r=Pr(r,r.shape[0],0).map(o=>Es(o,[0]));P(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let t=[],n=r;for(let o=0;o<r.length;++o)t.push(D.tidy(()=>{let s=n[o];if(o>0)for(let a=0;a<o;++a){let i=_(de(_(t[a],s)),t[a]);s=le(s,i)}return me(s,Vl(s,"euclidean"))}));return e?br(t,0):t}var nF=A({gramSchmidt_:ZZ});function QZ(r,e=!1){if(P(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return oF(r,e);{let t=r.shape.slice(0,r.shape.length-2).reduce((u,l)=>u*l),n=Gr($(r,[t,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),o=[],s=[];n.forEach(u=>{let[l,p]=oF(u,e);o.push(l),s.push(p)});let a=$(br(o,0),r.shape),i=$(br(s,0),r.shape);return[a,i]}}function oF(r,e=!1){return D.tidy(()=>{P(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let t=r.shape[0],n=r.shape[1],o=Hl(t),s=cn(r),a=La([[1]],[1,1]),i=cn(a),u=t>=n?n:t;for(let l=0;l<u;++l){let p=s,m=i,c=o;[i,s,o]=D.tidy(()=>{let d=Ge(s,[l,l],[t-l,1]),f=Vl(d),h=Ge(s,[l,l],[1,1]),g=Wt(pr(h,0),La([[-1]]),La([[1]])),y=le(h,_(g,f)),T=me(d,y);T.shape[0]===1?i=cn(a):i=mt([a,Ge(T,[1,0],[T.shape[0]-1,T.shape[1]])],0);let x=et(me(qe(g,y),f)),I=Ge(s,[l,0],[t-l,n]),k=_(x,i),w=We(i);if(l===0)s=le(I,qe(k,qe(w,I)));else{let R=le(I,qe(k,qe(w,I)));s=mt([Ge(s,[0,0],[l,n]),R],0)}let F=We(k),M=Ge(o,[0,l],[t,o.shape[1]-l]);if(l===0)o=le(M,qe(qe(M,i),F));else{let R=le(M,qe(qe(M,i),F));o=mt([Ge(o,[0,0],[t,l]),R],1)}return[i,s,o]}),Fe([p,m,c])}return!e&&t>n&&(o=Ge(o,[0,0],[t,n]),s=Ge(s,[0,0],[n,n])),[o,s]})}var sF=A({qr_:QZ});var $a=(o=>(o[o.NONE=0]="NONE",o[o.MEAN=1]="MEAN",o[o.SUM=2]="SUM",o[o.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",o))($a||{});function JZ(r,e,t=3){let n=v(r,"losses","computeWeightedLoss"),o=null;e!=null&&(o=v(e,"weights","computeWeightedLoss"));let s=o==null?n:_(n,o);if(t===0)return s;if(t===2)return de(s);if(t===1){if(o==null)return Bt(s);{let a=n.size/o.size,i=me(de(s),de(o));return a>1?me(i,ce(a)):i}}if(t===3){if(o==null)return me(de(s),ce(n.size));{let a=_(o,gr(n.shape)),i=ne(de(au(a,ce(0))),"float32");return me(de(s),i)}}throw Error(`Unknown reduction: ${t}`)}var Ur=A({computeWeightedLoss_:JZ});function eQ(r,e,t,n=3){let o=v(r,"labels","absoluteDifference"),s=v(e,"predictions","absoluteDifference"),a=null;t!=null&&(a=v(t,"weights","absoluteDifference")),zt(o.shape,s.shape,"Error in absoluteDifference: ");let i=Ut(le(o,s));return Ur(i,a,n)}var aF=A({absoluteDifference_:eQ});function tQ(r,e,t,n,o=3){let s=v(r,"labels","cosineDistance"),a=v(e,"predictions","cosineDistance"),i=null;n!=null&&(i=v(n,"weights","cosineDistance")),zt(s.shape,a.shape,"Error in cosineDistance: ");let u=ce(1),l=le(u,de(_(s,a),t,!0));return Ur(l,i,o)}var iF=A({cosineDistance_:tQ});function rQ(r,e,t,n=3){let o=v(r,"labels","hingeLoss"),s=v(e,"predictions","hingeLoss"),a=null;t!=null&&(a=v(t,"weights","hingeLoss")),zt(o.shape,s.shape,"Error in hingeLoss: ");let i=ce(1);o=le(_(ce(2),o),i);let u=Qr(le(i,_(o,s)));return Ur(u,a,n)}var uF=A({hingeLoss_:rQ});function nQ(r,e,t,n=1,o=3){let s=v(r,"labels","huberLoss"),a=v(e,"predictions","huberLoss"),i=null;t!=null&&(i=v(t,"weights","huberLoss")),zt(s.shape,a.shape,"Error in huberLoss: ");let u=ce(n),l=Ut(le(a,s)),p=nl(l,u),m=le(l,p),c=Z(_(ce(.5),Ye(p)),_(u,m));return Ur(c,i,o)}var lF=A({huberLoss_:nQ});function oQ(r,e,t,n=1e-7,o=3){let s=v(r,"labels","logLoss"),a=v(e,"predictions","logLoss"),i=null;t!=null&&(i=v(t,"weights","logLoss")),zt(s.shape,a.shape,"Error in logLoss: ");let u=ce(1),l=ce(n),p=et(_(s,zr(Z(a,l)))),m=_(le(u,s),zr(Z(le(u,a),l))),c=le(p,m);return Ur(c,i,o)}var pF=A({logLoss_:oQ});function sQ(r,e,t,n=3){let o=v(r,"labels","meanSquaredError"),s=v(e,"predictions","meanSquaredError"),a=null;t!=null&&(a=v(t,"weights","meanSquaredError")),zt(o.shape,s.shape,"Error in meanSquaredError: ");let i=my(o,s);return Ur(i,a,n)}var mF=A({meanSquaredError_:sQ});function aQ(r,e){let t=v(r,"labels","sigmoidCrossEntropyWithLogits"),n=v(e,"logits","sigmoidCrossEntropyWithLogits");zt(t.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let o=Qr(n),s=_(n,t),a=Ym(hr(et(Ut(n))));return Z(le(o,s),a)}function iQ(r,e,t,n=0,o=3){let s=v(r,"multiClassLabels","sigmoidCrossEntropy"),a=v(e,"logits","sigmoidCrossEntropy"),i=null;if(t!=null&&(i=v(t,"weights","sigmoidCrossEntropy")),zt(s.shape,a.shape,"Error in sigmoidCrossEntropy: "),n>0){let l=ce(n),p=ce(1),m=ce(.5);s=Z(_(s,le(p,l)),_(m,l))}let u=aQ(s,a);return Ur(u,i,o)}var cF=A({sigmoidCrossEntropy_:iQ});function uQ(r,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return fn((o,s,a)=>{let u=Zb(s,[t],!0),l=le(ne(s,"float32"),u);a([o,l]);let p=et(_(l,o));return{value:de(p,[t]),gradFunc:(d,f)=>{let[h,g]=f,y=Fs(d.shape,[t]);return[_($(d,y),le(ne(h,"float32"),hr(g))),_($(d,y),le(hr(g),ne(h,"float32")))]}}})(r,e)}function lQ(r,e,t,n=0,o=3){let s=v(r,"onehotLabels","softmaxCrossEntropy"),a=v(e,"logits","softmaxCrossEntropy"),i=null;if(t!=null&&(i=v(t,"weights","softmaxCrossEntropy")),zt(s.shape,a.shape,"Error in softmaxCrossEntropy: "),n>0){let l=ce(n),p=ce(1),m=ce(s.shape[1]);s=Z(_(s,le(p,l)),me(l,m))}let u=uQ(s,a);return Ur(u,i,o)}var dF=A({softmaxCrossEntropy_:lQ});function pQ(r,e,t,n){let o=v(r,"indices","sparseFillEmptyRows","int32"),s=v(e,"values","sparseFillEmptyRows"),a=v(t,"denseShape","sparseFillEmptyRows","int32"),i=v(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let u={indices:o,values:s,denseShape:a,defaultValue:i},l=D.runKernel(_u,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}var fF=A({sparseFillEmptyRows_:pQ});function mQ(r,e,t){let n=v(r,"inputIndices","sparseReshape","int32"),o=v(e,"inputShape","sparseReshape","int32"),s=v(t,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let a={inputIndices:n,inputShape:o,newShape:s},i=D.runKernel(Yi,a);return{outputIndices:i[0],outputShape:i[1]}}var hF=A({sparseReshape_:mQ});function cQ(r,e,t){let n=v(r,"data","sparseSegmentMean"),o=v(e,"indices","sparseSegmentMean","int32"),s=v(t,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return D.runKernel(Lu,a)}var gF=A({sparseSegmentMean_:cQ});function dQ(r,e,t){let n=v(r,"data","sparseSegmentSum"),o=v(e,"indices","sparseSegmentSum","int32"),s=v(t,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return D.runKernel($u,a)}var bF=A({sparseSegmentSum_:dQ});function fQ(r,e,t,n,o,s,a,i){let u=v(r,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);let l=v(e,"dataSplits","stringNGrams");if(l.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let p={separator:t,nGramWidths:n,leftPad:o,rightPad:s,padWidth:a,preserveShortSequences:i},m={data:u,dataSplits:l},c=D.runKernel(li,m,p);return{nGrams:c[0],nGramsSplits:c[1]}}var yF=A({stringNGrams_:fQ});function hQ(r,e,t=!0){let n=v(r,"input","stringSplit","string"),o=v(e,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);let s={skipEmpty:t},a={input:n,delimiter:o},i=D.runKernel(Ou,a,s);return{indices:i[0],values:i[1],shape:i[2]}}var TF=A({stringSplit_:hQ});function gQ(r,e){let t=v(r,"input","stringToHashBucketFast","string"),n={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");let o={input:t};return D.runKernel(zu,o,n)}var xF=A({stringToHashBucketFast_:gQ});var bQ={fft:sc,ifft:Zl,rfft:ac,irfft:py},yQ={hammingWindow:BP,hannWindow:yy,frame:Ty,stft:OP},al={flipLeftRight:GP,grayscaleToRGB:UP,resizeNearestNeighbor:JP,resizeBilinear:QP,rotateWithOffset:WP,cropAndResize:zP,nonMaxSuppression:KP,nonMaxSuppressionAsync:qP,nonMaxSuppressionWithScore:jP,nonMaxSuppressionWithScoreAsync:XP,nonMaxSuppressionPadded:YP,nonMaxSuppressionPaddedAsync:ZP,threshold:eF,transform:tF},Ak={bandPart:rF,gramSchmidt:nF,qr:sF},TQ={absoluteDifference:aF,computeWeightedLoss:Ur,cosineDistance:iF,hingeLoss:uF,huberLoss:lF,logLoss:pF,meanSquaredError:mF,sigmoidCrossEntropy:cF,softmaxCrossEntropy:dF},xQ={sparseFillEmptyRows:fF,sparseReshape:hF,sparseSegmentMean:gF,sparseSegmentSum:bF},IQ={stringNGrams:yF,stringSplit:TF,stringToHashBucketFast:xF};var Jr=class extends Ab{minimize(e,t=!1,n){let{value:o,grads:s}=this.computeGradients(e,n);if(n!=null){let a=n.map(i=>({name:i.name,tensor:s[i.name]}));this.applyGradients(a)}else this.applyGradients(s);return Fe(s),t?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return jb(e,t)}dispose(){this.iterations_!=null&&Fe(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ce(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Jr,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var rp=class extends Jr{constructor(e,t,n=null){super();this.learningRate=e;this.rho=t;this.epsilon=n;this.accumulatedGrads=[];this.accumulatedUpdates=[];n==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n],a=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accum_grad`,variable:U(()=>De(s).variable(a))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${n}/accum_var`,variable:U(()=>De(s).variable(a))});let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let u=this.accumulatedGrads[o].variable,l=this.accumulatedUpdates[o].variable;U(()=>{let p=Z(_(u,this.rho),_(Ye(i),1-this.rho)),m=_(me($t(Z(l,this.epsilon)),$t(Z(u,this.epsilon))),i),c=Z(_(l,this.rho),_(Ye(m),1-this.rho));u.assign(p),l.assign(c);let d=Z(_(m,-this.learningRate),s);s.assign(d)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Fe(this.accumulatedGrads.map(e=>e.variable)),Fe(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};rp.className="Adadelta";Rn(rp);var np=class extends Jr{constructor(e,t=.1){super();this.learningRate=e;this.initialAccumulatorValue=t;this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n];this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accumulator`,variable:U(()=>ci(s.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[o].tensor:e[n];if(a==null)return;let i=this.accumulatedGrads[o].variable;U(()=>{let u=Z(i,Ye(a));i.assign(u);let l=Z(_(me(a,$t(Z(u,D.backend.epsilon()))),-this.learningRate),s);s.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Fe(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};np.className="Adagrad";Rn(np);var op=class extends Jr{constructor(e,t,n,o=null){super();this.learningRate=e;this.beta1=t;this.beta2=n;this.epsilon=o;this.accumulatedFirstMoment=[];this.accumulatedSecondMoment=[];U(()=>{this.accBeta1=ce(t).variable(),this.accBeta2=ce(n).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);U(()=>{let n=le(1,this.accBeta1),o=le(1,this.accBeta2);t.forEach((s,a)=>{let i=D.registeredVariables[s],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:U(()=>De(i).variable(u))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${s}/v`,variable:U(()=>De(i).variable(u))});let l=Array.isArray(e)?e[a].tensor:e[s];if(l==null)return;let p=this.accumulatedFirstMoment[a].variable,m=this.accumulatedSecondMoment[a].variable,c=Z(_(p,this.beta1),_(l,1-this.beta1)),d=Z(_(m,this.beta2),_(Ye(l),1-this.beta2)),f=me(c,n),h=me(d,o);p.assign(c),m.assign(d);let g=Z(_(me(f,Z($t(h),this.epsilon)),-this.learningRate),i);i.assign(g)}),this.accBeta1.assign(_(this.accBeta1,this.beta1)),this.accBeta2.assign(_(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Fe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Fe(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),U(()=>{this.accBeta1.assign(qn(this.beta1,this.iterations_+1)),this.accBeta2.assign(qn(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};op.className="Adam";Rn(op);var sp=class extends Jr{constructor(e,t,n,o=null,s=0){super();this.learningRate=e;this.beta1=t;this.beta2=n;this.epsilon=o;this.decay=s;this.accumulatedFirstMoment=[];this.accumulatedWeightedInfNorm=[];U(()=>{this.iteration=ce(0).variable(),this.accBeta1=ce(t).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);U(()=>{let n=le(1,this.accBeta1),o=me(-this.learningRate,Z(_(this.iteration,this.decay),1));t.forEach((s,a)=>{let i=D.registeredVariables[s],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:De(i).variable(u)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${s}/v`,variable:De(i).variable(u)});let l=Array.isArray(e)?e[a].tensor:e[s];if(l==null)return;let p=this.accumulatedFirstMoment[a].variable,m=this.accumulatedWeightedInfNorm[a].variable,c=Z(_(p,this.beta1),_(l,1-this.beta1)),d=_(m,this.beta2),f=Ut(l),h=Qo(d,f);p.assign(c),m.assign(h);let g=Z(_(me(o,n),me(c,Z(h,this.epsilon))),i);i.assign(g)}),this.iteration.assign(Z(this.iteration,1)),this.accBeta1.assign(_(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Fe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Fe(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};sp.className="Adamax";Rn(sp);var iu=class extends Jr{constructor(e){super();this.learningRate=e;this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=Array.isArray(e)?e[o].tensor:e[n];if(s==null)return;let a=D.registeredVariables[n];U(()=>{let i=Z(_(this.c,s),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Gt(ce(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};iu.className="SGD";Rn(iu);var ap=class extends iu{constructor(e,t,n=!1){super(e);this.learningRate=e;this.momentum=t;this.useNesterov=n;this.accumulations=[];this.m=ce(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n];this.accumulations[o]==null&&(this.accumulations[o]={originalName:`${n}/momentum`,variable:U(()=>De(s).variable(!1))});let a=this.accumulations[o].variable,i=Array.isArray(e)?e[o].tensor:e[n];i!=null&&U(()=>{let u,l=Z(_(this.m,a),i);this.useNesterov?u=Z(_(this.c,Z(i,_(l,this.m))),s):u=Z(_(this.c,l),s),a.assign(l),s.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Fe(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};ap.className="Momentum";Rn(ap);var ip=class extends Jr{constructor(e,t=.9,n=0,o=null,s=!1){super();this.learningRate=e;this.decay=t;this.momentum=n;this.epsilon=o;this.accumulatedMeanSquares=[];this.accumulatedMoments=[];this.accumulatedMeanGrads=[];if(this.centered=s,o==null&&(this.epsilon=D.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n],a=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${n}/rms`,variable:U(()=>De(s).variable(a))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${n}/momentum`,variable:U(()=>De(s).variable(a))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${n}/mg`,variable:U(()=>De(s).variable(a))});let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let u=this.accumulatedMeanSquares[o].variable,l=this.accumulatedMoments[o].variable;U(()=>{let p=Z(_(u,this.decay),_(Ye(i),1-this.decay));if(this.centered){let m=this.accumulatedMeanGrads[o].variable,c=Z(_(m,this.decay),_(i,1-this.decay)),d=me(_(i,this.learningRate),$t(le(p,Z(Ye(c),this.epsilon)))),f=Z(_(l,this.momentum),d);u.assign(p),m.assign(c),l.assign(f);let h=le(s,f);s.assign(h)}else{let m=Z(_(u,this.decay),_(Ye(i),1-this.decay)),c=Z(_(l,this.momentum),me(_(i,this.learningRate),$t(Z(m,this.epsilon))));u.assign(m),l.assign(c);let d=le(s,c);s.assign(d)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Fe(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Fe(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Fe(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};ip.className="RMSProp";Rn(ip);var hi=class{static sgd(e){return new iu(e)}static momentum(e,t,n=!1){return new ap(e,t,n)}static rmsprop(e,t=.9,n=0,o=null,s=!1){return new ip(e,t,n,o,s)}static adam(e=.001,t=.9,n=.999,o=null){return new op(e,t,n,o)}static adadelta(e=.001,t=.95,n=null){return new rp(e,t,n)}static adamax(e=.002,t=.9,n=.999,o=null,s=0){return new sp(e,t,n,o,s)}static adagrad(e,t=.1){return new np(e,t)}};var up={sgd:hi.sgd,momentum:hi.momentum,adadelta:hi.adadelta,adagrad:hi.adagrad,rmsprop:hi.rmsprop,adamax:hi.adamax,adam:hi.adam};var CQ=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:r=>r())();function Yd(){return new Promise(r=>CQ(()=>r()))}var C={};je(C,{ERF_A1:()=>RQ,ERF_A2:()=>EQ,ERF_A3:()=>_Q,ERF_A4:()=>LQ,ERF_A5:()=>$Q,ERF_P:()=>MQ,PARALLELIZE_THRESHOLD:()=>ky,SELU_SCALE:()=>Nk,SELU_SCALEALPHA:()=>wk,applyActivation:()=>ep,assertAndGetBroadcastShape:()=>ze,assertAxesAreInnerMostDims:()=>Q8,assertParamsConsistent:()=>kQ,assignToTypedArray:()=>WQ,axesAreInnerMostDims:()=>mk,calculateShapes:()=>V2,checkEinsumDimSizes:()=>XQ,checkPadOnDimRoundingMode:()=>Pt,combineLocations:()=>N1,complexWithEvenIndex:()=>zQ,complexWithOddIndex:()=>GQ,computeConv2DInfo:()=>Kl,computeConv3DInfo:()=>f1,computeDefaultPad:()=>pk,computeDilation2DInfo:()=>e8,computeOptimalWindowSize:()=>vQ,computeOutAndReduceShapes:()=>ck,computeOutShape:()=>SQ,computePool2DInfo:()=>lk,computePool3DInfo:()=>t8,convertConv2DDataFormat:()=>h1,decodeEinsumEquation:()=>qQ,eitherStridesOrDilationsAreOne:()=>Rr,expandShapeToKeepDim:()=>Fs,exponent:()=>VQ,exponents:()=>KQ,fromStringArrayToUint8:()=>g7,fromUint8ToStringArray:()=>h7,getAxesPermutation:()=>dk,getBroadcastDims:()=>U2,getComplexWithIndex:()=>UQ,getEinsumComputePath:()=>YQ,getEinsumPermutation:()=>jQ,getFusedBiasGradient:()=>Jl,getFusedDyActivation:()=>Ql,getImageCenter:()=>AQ,getInnerMostAxes:()=>J8,getPermuted:()=>NQ,getReductionAxes:()=>St,getReshaped:()=>wQ,getReshapedPermuted:()=>DQ,getSliceBeginCoords:()=>PQ,getSliceSize:()=>FQ,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>e7,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>t7,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>r7,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>s7,getSparseReshapeInputOutputMismatchErrorMessage:()=>i7,getSparseReshapeInputOutputMultipleErrorMessage:()=>a7,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>n7,getSparseReshapeNegativeOutputDimErrorMessage:()=>o7,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>m7,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>u7,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>l7,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>p7,getUndoAxesPermutation:()=>Kd,isIdentityPermutation:()=>ZQ,log:()=>mj,mergeRealAndImagArrays:()=>BQ,prepareAndValidate:()=>K2,prepareSplitSize:()=>JQ,segment_util:()=>Pk,shouldFuse:()=>tp,slice_util:()=>xt,splitRealAndImagArrays:()=>OQ,tupleValuesAreOne:()=>Xo,upcastType:()=>Et,validateInput:()=>vb,validateUpdateShape:()=>nk,warn:()=>pi});function kQ(r,e){let t=r[0].length;r.forEach((o,s)=>{P(o.length===t,()=>`Error in concat${t}D: rank of tensors[${s}] must be the same as the rank of the rest (${t})`)}),P(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);let n=r[0];r.forEach((o,s)=>{for(let a=0;a<t;a++)P(a===e||o[a]===n[a],()=>`Error in concat${t}D: Shape of tensors[${s}] (${o}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function SQ(r,e){let t=r[0].slice();for(let n=1;n<r.length;n++)t[e]+=r[n][e];return t}var ky=30;function vQ(r){return r<=ky?r:im(r,Math.floor(Math.sqrt(r)))}function AQ(r,e,t){let n=t*(typeof r=="number"?r:r[0]),o=e*(typeof r=="number"?r:r[1]);return[n,o]}function wQ(r,e,t,n=!0){let o=[];if(n)o=o.concat(e.slice(0)),o.push(r[0]/t),o=o.concat(r.slice(1));else{o=o.concat(r[0]);let s=e.length;for(let a=0;a<s;++a)o=o.concat([r[a+1]/e[a],e[a]]);o=o.concat(r.slice(s+1))}return o}function NQ(r,e,t=!0){let n=[];if(t){n.push(e);for(let o=e+1;o<r;++o)o<=2*e?(n.push(o),n.push(o-(e+1))):n.push(o)}else{let o=[],s=[];for(let a=1;a<r;++a)a>=e*2+1||a%2===1?s.push(a):o.push(a);n.push(...o),n.push(0),n.push(...s)}return n}function DQ(r,e,t,n=!0){let o=[];n?o.push(r[0]/t):o.push(r[0]*t);for(let s=1;s<r.length;++s)s<=e.length?n?o.push(e[s-1]*r[s]):o.push(r[s]/e[s-1]):o.push(r[s]);return o}function PQ(r,e){let t=[0];for(let n=0;n<e;++n)t.push(r[n][0]);return t}function FQ(r,e,t){let n=r.slice(0,1);for(let o=0;o<t;++o)n.push(r[o+1]-e[o][0]-e[o][1]);return n}var wk=1.7580993408473768,Nk=1.0507009873554805;var MQ=.3275911,RQ=.254829592,EQ=-.284496736,_Q=1.421413741,LQ=-1.453152027,$Q=1.061405429;function BQ(r,e){if(r.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${e.length}.`);let t=new Float32Array(r.length*2);for(let n=0;n<t.length;n+=2)t[n]=r[n/2],t[n+1]=e[n/2];return t}function OQ(r){let e=new Float32Array(r.length/2),t=new Float32Array(r.length/2);for(let n=0;n<r.length;n+=2)e[n/2]=r[n],t[n/2]=r[n+1];return{real:e,imag:t}}function zQ(r){let e=Math.ceil(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=0;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function GQ(r){let e=Math.floor(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=2;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function UQ(r,e){let t=r[e*2],n=r[e*2+1];return{real:t,imag:n}}function WQ(r,e,t,n){r[n*2]=e,r[n*2+1]=t}function KQ(r,e){let t=new Float32Array(r/2),n=new Float32Array(r/2);for(let o=0;o<Math.ceil(r/2);o++){let s=(e?2:-2)*Math.PI*(o/r);t[o]=Math.cos(s),n[o]=Math.sin(s)}return{real:t,imag:n}}function VQ(r,e,t){let n=(t?2:-2)*Math.PI*(r/e),o=Math.cos(n),s=Math.sin(n);return{real:o,imag:s}}var Dk="->",HQ=/->/g,IF=",",CF="...";function qQ(r,e){r=r.replace(/\s/g,"");let t=(r.length-r.replace(HQ,"").length)/Dk.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${Dk}").`);let[n,o]=r.split(Dk);P(n.indexOf(CF)===-1,()=>`The ellipsis notation ("${CF}") is not supported yet.`);let s=n.split(IF),a=s.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let c=0;c<o.length;++c){let d=o[c];if(!s.some(f=>f.indexOf(d)!==-1))throw new Error(`Output subscripts contain the label ${d} not present in the input subscripts.`);i.indexOf(d)===-1&&i.push(d)}for(let c=0;c<n.length;++c){let d=n[c];i.indexOf(d)===-1&&d!==IF&&i.push(d)}let u=new Array(s.length);for(let c=0;c<a;++c){if(new Set(s[c].split("")).size!==s[c].length)throw new Error(`Found duplicate axes in input component ${s[c]}. Support for duplicate axes in input is not implemented yet.`);u[c]=[];for(let d=0;d<s[c].length;++d)u[c].push(i.indexOf(s[c][d]))}let l=i.length,p=o.length,m=[];for(let c=p;c<l;++c)m.push(c);return{allDims:i,summedDims:m,idDims:u}}function jQ(r,e){let t=new Array(r);t.fill(-1);for(let o=0;o<e.length;++o)t[e[o]]=o;let n=[];for(let o=0;o<r;++o)t[o]===-1&&n.push(o);return t=t.filter(o=>o!==-1),{permutationIndices:t,expandDims:n}}function XQ(r,e,t){let n=new Array(r);for(let o=0;o<t.length;++o){let s=t[o].shape;for(let a=0;a<e[o].length;++a)n[e[o][a]]===void 0?n[e[o][a]]=s[a]:P(n[e[o][a]]===s[a],()=>`Expected dimension ${n[e[o][a]]} at axis ${a} of input shaped ${JSON.stringify(s)}, but got dimension ${s[a]}`)}}function YQ(r,e){let t=r,n=[],o=0;r.length===0&&t.push(-1),o=r.length+1;for(let a=0;a<o;++a)n.push([]);let s=[];for(let a=0;a<t.length;++a){let i=t[a],u=QQ(e,i);for(let l of u)s.indexOf(l)===-1&&(n[a].push(l),s.push(l))}return{path:t,steps:n}}function ZQ(r){return r.every((e,t)=>e===t)}function QQ(r,e){let t=[];for(let n=0;n<r.length;++n)(r[n].length===0||r[n].indexOf(e)!==-1||e===-1)&&t.push(n);return t}function JQ(r,e,t=0){let n=[];if(typeof e=="number")P(r.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),n=new Array(e).fill(r.shape[t]/e);else{let o=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);P(o<=1,()=>"There should be only one negative value in split array.");let s=e.indexOf(-1);if(s!==-1){let a=e.reduce((i,u)=>u>0?i+u:i);e[s]=r.shape[t]-a}P(r.shape[t]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),n=e}return n}function e7(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function t7(r,e){return`indices(${r}, 0) is invalid: ${e} < 0`}function r7(r,e,t){return`indices(${r}, 0) is invalid: ${e} >= ${t}`}function n7(r,e){return`only one output dimension may be -1, not both ${r} and ${e}`}function o7(r,e){return`size ${r} must be non-negative, not ${e}`}function s7(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function a7(r,e){let t=rt(r),n=rt(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${r} outputShape= ${e}`}function i7(r,e){let t=rt(r),n=rt(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${n}. inputShape=${r} outputShape=${e}`}function u7(){return"segment ids must be >= 0"}function l7(){return"segment ids are not increasing"}function p7(r,e){return`Segment id ${r} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function m7(r,e,t){return`Bad: indices[${r}] == ${e} out of range [0, ${t})`}var Pk={};je(Pk,{collectGatherOpShapeInfo:()=>f7,computeOutShape:()=>d7,segOpComputeOptimalWindowSize:()=>c7});function c7(r,e){let t=!1,n;for(r<=ky?(n=r,t=!0):n=im(r,Math.floor(Math.sqrt(r)));!t;)n>e||n===r?t=!0:n=im(r,n+1);return n}function d7(r,e,t){let n=[],o=r.length;for(let s=0;s<o;s++)s!==e?n.push(r[s]):n.push(t);return n}function f7(r,e,t,n){let o=e.shape.length,s=r.shape.length;if(n!==0&&(n<-o||n>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${n}`);if(n<0&&(n+=o),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(t<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${t}).`);for(let m=0;m<n;++m)if(r.shape[m]!==e.shape[m])throw new Error(`x.shape[${m}]: ${r.shape[m]} should be equal to indices.shape[${m}]: ${e.shape[m]}.`);let a=r.shape[t],i=[],u=1,l=1,p=1;for(let m=0;m<n;++m)i.push(r.shape[m]),u*=r.shape[m];for(let m=n;m<t;m++)i.push(r.shape[m]),l*=r.shape[m];for(let m=n;m<o;m++)i.push(e.shape[m]);for(let m=t+1;m<s;m++)i.push(r.shape[m]),p*=r.shape[m];return{batchSize:u,sliceSize:p,outerSize:l,dimSize:a,outputShape:i}}function h7(r){try{return r.map(e=>$m(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function g7(r){return r.map(e=>Wu(e))}var yr={};je(yr,{nonMaxSuppressionV3Impl:()=>xy,nonMaxSuppressionV4Impl:()=>Iy,nonMaxSuppressionV5Impl:()=>Cy,whereImpl:()=>fy});var Xn=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Xn.prototype)}},en=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,en.prototype)}},z=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,z.prototype)}},Pe=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Pe.prototype)}},Zd=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Zd.prototype)}};var Sy=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=e}};function $s(r,e){if(Array.isArray(r)){let t=[];for(let n=0;n<e;n++)t=t.concat(r);return t}else{let t=new Array(e);return t.fill(r),t}}function Jo(r,e){if(!r)throw new Zd(e)}function Mk(r,e){let t=0;for(let n of r)n===e&&t++;return t}function Fr(r){return r.length===1?r[0]:r}function vt(r){return Array.isArray(r)?r:[r]}function Bs(r){let t=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function uu(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}var Ls={};function lc(r){if(r==null)return null;let e={};return e.className=r.getClassName(),e.config=r.getConfig(),e}function Fk(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(e=>Fk(e));else{let e=Object.keys(r);for(let t of e){let n=r[t];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?r[t]=n.value:Fk(n))}}}function gi(r,e={},t={},n="object",o=!1){if(typeof r=="string"){let s=r,a;if(s in t)a=t[s];else if(s in Ls)a=Ls[s];else if(a=e[s],a==null)throw new z(`Unknown ${n}: ${r}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{let s=r;if(s.className==null||s.config==null)throw new z(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let a=s.className,i,u;if(a in t?[i,u]=t[a]:a in Ls?[i,u]=Ls.className:a in e&&([i,u]=e[a]),i==null)throw new z(`Unknown ${n}: ${a}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){let l={};for(let d of Object.keys(Ls))l[d]=Ls[d];for(let d of Object.keys(t))l[d]=t[d];let p=s.config;p.customObjects=l;let m={...Ls};for(let d of Object.keys(t))Ls[d]=t[d];Fk(s.config);let c=u(i,s.config,t,o);return Ls={...m},c}else{let l={...Ls};for(let m of Object.keys(t))Ls[m]=t[m];let p=new i(s.config);return Ls={...l},p}}}function b7(r,e){return r<e?-1:r>e?1:0}function Qd(r,e){return-1*b7(r,e)}function Os(r){if(r==null)return r;let e=[];for(let t of r)e.indexOf(t)===-1&&e.push(t);return e}function kF(r){if(r==null)throw new z(`Invalid value in obj: ${JSON.stringify(r)}`);for(let e in r)if(r.hasOwnProperty(e))return!1;return!0}function bi(r,e,t){if(t!=null&&r.indexOf(t)<0)throw new z(`${t} is not a valid ${e}.  Valid values are ${r} or null/undefined.`)}function vy(r,e,t=0,n=1/0){return Jo(t>=0),Jo(n>=t),Array.isArray(r)&&r.length>=t&&r.length<=n&&r.every(o=>typeof o===e)}function nr(r,e){Array.isArray(r)?(b.assert(r.length>0,()=>`${e} is unexpectedly an empty array.`),r.forEach((t,n)=>nr(t,`element ${n+1} of ${e}`))):b.assert(Number.isInteger(r)&&r>0,()=>`Expected ${e} to be a positive integer, but got ${SF(r)}.`)}function SF(r){return r===null?"null":Array.isArray(r)?"["+r.map(e=>SF(e)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function vF(r,e,t){let n=t!=null?t():b.now(),o;return(...a)=>{let i=t!=null?t():b.now();return i-n<e||(n=i,o=r(...a)),o}}function Ay(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}var y7=0;function Ny(){return y7++}var wy={};function il(r=""){return r in wy||(wy[r]=0),wy[r]+=1,r+wy[r].toString()}var AF=["channelsFirst","channelsLast"],wF=["nearest","bilinear"],NF=["valid","same","causal"],DF=["max","avg"],PF=["sum","mul","concat","ave"];var pc=new Map;function Kt(r){bi(AF,"DataFormat",r)}function MF(r){bi(wF,"InterpolationFormat",r)}function hn(r){bi(NF,"PaddingMode",r)}function Rk(r){bi(DF,"PoolMode",r)}var Jd=[],FF="/";function Oa(r,e){Jd.push(r);try{let t=e();return Jd.pop(),t}catch(t){throw Jd.pop(),t}}function T7(){return Jd.length===0?"":Jd.join(FF)+FF}function Dy(r){if(!RF(r))throw new Error("Not a valid tensor name: '"+r+"'");return T7()+r}function Py(r){if(!RF(r))throw new Error("Not a valid tensor name: '"+r+"'");pc.has(r)||pc.set(r,0);let e=pc.get(r);if(pc.set(r,pc.get(r)+1),e>0){let t=`${r}_${e}`;return pc.set(t,1),t}else return r}var x7=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function RF(r){return!!r.match(x7)}function EF(r){return r===parseInt(r.toString(),10)}function zs(r,e,t){e==null&&(e=0),t==null&&(t=r.length);let n=1;for(let o=e;o<t;++o)n*=r[o];return n}function lp(r){if(r.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n<e&&(e=n)}return e}function za(r){if(r.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n>e&&(e=n)}return e}function tn(r,e){if(e<r)throw new z(`end (${e}) < begin (${r}) is forbidden.`);let t=[];for(let n=r;n<e;++n)t.push(n);return t}var Ek;function cr(){return Ek==null&&(Ek=O2().epsilon()),Ek}function gn(){return"channelsLast"}function pp(r,e){return ne(r,e)}function pu(r,e=-1){let t=r.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),$(r,t)}function _F(r,e){return U(()=>{if(r.shape.length!==2)throw new z(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let t=pu(r,1);return My(t,[1,e,1])})}function LF(r){let e=[zs(r.shape)];return $(r,e)}function $F(r){if(r.rank<=1)throw new z(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let e=[r.shape[0],zs(r.shape,1)];return $(r,e)}function lu(r,e,t){return U(()=>{switch(r.rank){case 1:return rc(r,e,t);case 2:return jd(r,[e,0],[t,r.shape[1]]);case 3:return nc(r,[e,0,0],[t,r.shape[1],r.shape[2]]);case 4:return Yl(r,[e,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3]]);case 5:return Ge(r,[e,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return Ge(r,[e,0,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new z(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function _k(r,e,t){return U(()=>{switch(r.rank){case 1:return rc(r,e,t);case 2:return jd(r,[0,e],[r.shape[0],t]);case 3:return nc(r,[0,0,e],[r.shape[0],r.shape[1],t]);case 4:return Yl(r,[0,0,0,e],[r.shape[0],r.shape[1],r.shape[2],t]);default:throw new z(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function ef(r,e,t,n){return U(()=>{switch(r.rank){case 1:return rc(r,e,t);case 2:switch(n){case 1:return lu(r,e,t);case 2:return _k(r,e,t);default:throw new z(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return lu(r,e,t);case 2:return nc(r,[0,e,0],[r.shape[0],t,r.shape[2]]);case 3:return _k(r,e,t);default:throw new z(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return lu(r,e,t);case 2:return Yl(r,[0,e,0,0],[r.shape[0],t,r.shape[2],r.shape[3]]);case 3:return Yl(r,[0,0,e,0],[r.shape[0],r.shape[1],t,r.shape[3]]);case 4:return _k(r,e,t);default:throw new z(`The axis is not within the rank of the tensor ${n}`)}default:throw new z(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function mc(r,e=-1){let t;return e<0&&(t=r[0].rank,t!==0?e=t:e=0),e===r[0].rank&&(e=-1),mt(r,e)}function $k(r,e){switch(r.rank){case 1:return Lb([r,e]);case 2:return $b([r,e],0);case 3:return Bb([r,e],0);case 4:return Ob([r,e],0);default:throw new z(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function My(r,e){if(Array.isArray(e)||(e=[e]),r.rank!==e.length)throw new z(`The length of input n (${e.length}) does not match the number of dimensions in input x (${r.rank})`);return Yr(r,e)}function cc(r,e=0,t=1,n,o){return Xl(r,e,t,n,o)}function Gs(r,e,t,n){if(r.rank<2||e.rank<2)throw new Pe(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${e.shape}`);if(e.rank>=3){let o=r.shape.slice(-1)[0],s=e.shape.slice(-2)[0];if(o!==s)throw new Pe(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${e.shape}`)}if(r.rank===2&&e.rank===2)return sl.matMul({a:r,b:e,transposeA:!1,transposeB:!1,bias:n?Lk(r.rank,n,gn()):null,activation:t});{let o=r.shape.slice(),s=o.pop();r=$(r,[-1,s]);let a=e.shape.slice(),i=a.pop(),u=a.pop(),l=[...a,i],p=Array.from({length:e.rank},(f,h)=>h===0?e.rank-2:h<=e.rank-2?h-1:h);e=$(We(e,p),[u,-1]);let m=[...o,...l],c=!1,d=!1;return $(sl.matMul({a:r,b:e,transposeA:c,transposeB:d,bias:n?Lk(r.rank,n,gn()):null,activation:t}),m)}}function Ry(r,e,t){return U(()=>(Array.isArray(e)?e=jt(e,"int32"):e=ne(e,"int32"),rl(r,e,t)))}function mp(r){return _(r,r)}function Lk(r,e,t){let n=e.shape;if(e.rank!==1&&e.rank!==r)throw new z(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${r}`);if(r===5){if(t==="channelsFirst")return n.length===1?$(e,[1,n[0],1,1,1]):$(e,[1,n[3],n[0],n[1],n[2]]);if(t==="channelsLast")return n.length===1?$(e,[1,1,1,1,n[0]]):$(e,[1].concat(n))}else if(r===4){if(t==="channelsFirst")return n.length===1?$(e,[1,n[0],1,1]):$(e,[1,n[2],n[0],n[1]]);if(t==="channelsLast")return n.length===1?$(e,[1,1,1,n[0]]):$(e,[1].concat(n))}else if(r===3){if(t==="channelsFirst")return n.length===1?$(e,[1,n[0],1]):$(e,[1,n[1],n[0]]);if(t==="channelsLast")return n.length===1?$(e,[1,1,n[0]]):$(e,[1].concat(n))}else if(r<3)return e;throw new z(`Unsupported input rank by biasAdd: ${e.rank}`)}function bn(r,e,t){return U(()=>(t==null&&(t=gn()),Kt(t),Z(r,Lk(r.rank,e,t))))}function BF(r,e=1){if(e!==1)throw new Pe(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return el(r)}function OF(r){return U(()=>me(r,Z(Ut(r),1)))}function Ey(r,e,t,n){return U(()=>kk(r,e,t,n))}function zF(r){return U(()=>{let e=Z(.5,_(.2,r));return Or(e,0,1)})}function ul(r,e,t=!1){return t?r():e()}var GF=["fanIn","fanOut","fanAvg"],UF=["normal","uniform","truncatedNormal"];function I7(r){bi(GF,"FanMode",r)}function C7(r){bi(UF,"Distribution",r)}var _n=class extends te.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},tf=class extends _n{apply(e,t){return It(e,t)}};tf.className="Zeros";te.registerClass(tf);var cp=class extends _n{apply(e,t){return gr(e,t)}};cp.className="Ones";te.registerClass(cp);var rf=class extends _n{constructor(e){super();if(typeof e!="object")throw new z(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new z(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return U(()=>_(ce(this.value),gr(e,t)))}getConfig(){return{value:this.value}}};rf.className="Constant";te.registerClass(rf);var nf=class extends _n{constructor(e){super();this.DEFAULT_MINVAL=-.05;this.DEFAULT_MAXVAL=.05;this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return di(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};nf.className="RandomUniform";te.registerClass(nf);var of=class extends _n{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Pe(`randomNormal does not support dType ${t}.`);return cc(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};of.className="RandomNormal";te.registerClass(of);var sf=class extends _n{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Pe(`truncatedNormal does not support dType ${t}.`);return ic(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};sf.className="TruncatedNormal";te.registerClass(sf);var af=class extends _n{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return U(()=>{if(e.length!==2||e[0]!==e[1])throw new z("Identity matrix initializer can only be used for 2D square matrices.");return _(this.gain,Hl(e[0]))})}getConfig(){return{gain:this.gain}}};af.className="Identity";te.registerClass(af);function k7(r,e="channelsLast"){let t,n;if(Kt(e),r.length===2)t=r[0],n=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(e==="channelsFirst"){let o=zs(r,2);t=r[1]*o,n=r[0]*o}else if(e==="channelsLast"){let o=zs(r,0,r.length-2);t=r[r.length-2]*o,n=r[r.length-1]*o}}else{let o=zs(r);t=Math.sqrt(o),n=Math.sqrt(o)}return[t,n]}var rn=class extends _n{constructor(e){super();if(e.scale<0)throw new z(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,I7(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,C7(this.distribution),this.seed=e.seed}apply(e,t){let n=k7(e),o=n[0],s=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,o):this.mode==="fanOut"?a/=Math.max(1,s):a/=Math.max(1,(o+s)/2),this.distribution==="normal"){let i=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Pe(`${this.getClassName()} does not support dType ${t}.`);return ic(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*a);return di(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};rn.className="VarianceScaling";te.registerClass(rn);var dc=class extends rn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return rn.className}};dc.className="GlorotUniform";te.registerClass(dc);var fc=class extends rn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return rn.className}};fc.className="GlorotNormal";te.registerClass(fc);var hc=class extends rn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return rn.className}};hc.className="HeNormal";te.registerClass(hc);var gc=class extends rn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return rn.className}};gc.className="HeUniform";te.registerClass(gc);var bc=class extends rn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return rn.className}};bc.className="LeCunNormal";te.registerClass(bc);var yc=class extends rn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return rn.className}};yc.className="LeCunNormal";te.registerClass(yc);var uf=class extends _n{constructor(e){super();this.DEFAULT_GAIN=1;if(this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Pe("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return U(()=>{if(e.length<2)throw new Pe("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,o=cc(n,0,1,"float32"),s=Ak.gramSchmidt(o);return e[0]>e[1]&&(s=We(s)),_(this.gain,s)})}getConfig(){return{gain:this.gain,seed:this.seed}}};uf.className="Orthogonal";te.registerClass(uf);var WF={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function KF(r,e={}){return gi(r,te.SerializationMap.getMap().classNameMap,e,"initializer")}function Ft(r){return lc(r)}function Ct(r){if(typeof r=="string"){let e=r in WF?WF[r]:r;if(e==="GlorotNormal")return new fc;if(e==="GlorotUniform")return new dc;if(e==="HeNormal")return new hc;if(e==="HeUniform")return new gc;if(e==="LeCunNormal")return new bc;if(e==="LeCunUniform")return new yc;{let t={};return t.className=e,t.config={},KF(t)}}else return r instanceof _n?r:KF(r)}function _y(r){return Array.isArray(r)&&Array.isArray(r[0])}function Tc(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function Oe(r){let e;if(Array.isArray(r)){if(r.length!==1)throw new z(`Expected Tensor length to be 1; got ${r.length}`);e=r[0]}else e=r;return e}function nt(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new z(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function xc(r){let e=0;for(let t of r)t.shape.length===0?e+=1:e+=t.shape.reduce((n,o)=>n*o);return e}var HF="Variable",Ly=class{constructor(e,t="float32",n=HF,o=!0,s=null){this.dtype=t??"float32",this.shape=e.shape,this.id=Ny(),n=n??HF,this.originalName=Dy(n),this.name=Py(this.originalName),this.trainable_=o,this.constraint=s,this.val=dy(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),v7(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function v7(r,e){if(r.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(e.shape))}function lf(r){return r.map(e=>e.read())}function Ic(r){r.forEach(e=>{e[0].write(e[1])})}var Mt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Tn=class{constructor(e,t,n,o,s,a,i){this.dtype=e;this.shape=t;this.sourceLayer=n;this.inputs=o;this.callArgs=s;this.outputTensorIndex=i;this.id=Ny(),a!=null&&(this.originalName=Dy(a),this.name=Py(this.originalName)),this.rank=t.length}},A7=0,ll=class{constructor(e,t){this.callArgs=t;this.id=A7++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},w7=0,Ke=class extends te.Serializable{constructor(e={}){super();this._callHook=null;this._addedWeightNames=[];this._stateful=!1;this.id=w7++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=Bs(n)+"_"+il(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let s=null;e.batchSize!=null&&(s=e.batchSize),n=[s].concat(e.inputShape)}this.batchInputShape=n;let o=e.dtype;o==null&&(o=e.inputDType),o==null&&(o="float32"),this.dtype=o}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new en(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new z(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Fr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Fr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Xn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Xn(`Layer ${this.name} is not connected, no input to return.`);return Fr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Xn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Xn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Fr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=vt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=vt(this.inputSpec);if(e.length!==t.length)throw new z(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let o=e[n],s=t[n];if(s==null)continue;let a=o.rank;if(s.ndim!=null&&a!==s.ndim)throw new z(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(s.maxNDim!=null&&a>s.maxNDim)throw new z(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(s.minNDim!=null&&a<s.minNDim)throw new z(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(s.dtype!=null&&o.dtype!==s.dtype)throw new z(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${o.dtype}.`);if(s.axes){let i=o.shape;for(let u in s.axes){let l=Number(u),p=s.axes[u],m=l>=0?i[l]:i[i.length+l];if(p!=null&&[p,null].indexOf(m)===-1)throw new z(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${p} but got shape ${i}.`)}}if(s.shape!=null)for(let i=0;i<s.shape.length;++i){let u=s.shape[i],l=o.shape[i];if(u!=null&&l!=null&&u!==l)throw new z(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=vt(e),o=!0;for(let a of n)if(!(a instanceof Tn)){o=!1;break}let s=!0;for(let a of n)if(a instanceof Tn){s=!1;break}if(o===s)throw new z("Arguments to apply() must be all SymbolicTensors or all Tensors");return Oa(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let i of vt(e))a.push(i.shape);this.build(Fr(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let a=this.call(e,t),i=vt(a),u=[];for(let l of i)n.indexOf(l)!==-1&&(l=l.clone()),u.push(l);if(a=Fr(u),this.activityRegularizer!=null)throw new Pe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=N7(e),i=this.computeOutputShape(a),u,l=D7(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?u=i.map((p,m)=>new Tn(l,p,this,vt(e),t,this.name,m)):u=new Tn(l,i,this,vt(e),t,this.name),this.addInboundNode(e,u,null,null,a,i,t),this._refCount++,this.activityRegularizer!=null)throw new Pe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,o)=>{n!=null&&e[o]!=null&&e[o]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Xn(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Xn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new en(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return xc(this.weights)}build(e){this.built=!0}getWeights(e=!1){return lf(e?this.trainableWeights:this.weights)}setWeights(e){U(()=>{let t=this.weights;if(t.length!==e.length)throw new z(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],o=lf(t);for(let s=0;s<o.length;++s){let a=o[s],i=t[s],u=e[s];if(!b.arraysEqual(a.shape,u.shape))throw new z(`Layer weight shape ${a.shape} not compatible with provided weight shape ${u.shape}`);n.push([i,u])}Ic(n)})}addWeight(e,t,n,o,s,a,i,u){if(this._addedWeightNames.indexOf(e)!==-1)throw new z(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(o=u!=null?u():Ct("zeros"));let l=o.apply(t,n),p=new Ly(l,n,e,a,i);return l.dispose(),s!=null&&this.addLoss(()=>s.apply(p.read())),a==null&&(a=!0),a?this._trainableWeights.push(p):this._nonTrainableWeights.push(p),p}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=vt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,o,s,a,i=null){let u=vt(e);t=vt(t),n=vt(n),o=vt(o),s=Tc(s),a=Tc(a);let l=[],p=[],m=[];for(let c of u)l.push(c.sourceLayer),p.push(c.nodeIndex),m.push(c.tensorIndex);new ll({outboundLayer:this,inboundLayers:l,nodeIndices:p,tensorIndices:m,inputTensors:u,outputTensors:t,inputMasks:n,outputMasks:o,inputShapes:s,outputShapes:a},i);for(let c=0;c<t.length;c++)t[c].sourceLayer=this,t[c].nodeIndex=this.inboundNodes.length-1,t[c].tensorIndex=c}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function N7(r){r=vt(r);let e=[];for(let t of r)e.push(t.shape);return Fr(e)}function D7(r){return"float32"}function Bk(r,e,t){if((e==null||t!=null&&t>0)&&(e=r.sourceLayer,t=r.nodeIndex),e.inboundNodes.length===0)return[r];{let n=e.inboundNodes[t];if(n.inboundLayers.length===0)return n.inputTensors;{let o=[];for(let s=0;s<n.inboundLayers.length;s++){let a=n.inputTensors[s],i=n.inboundLayers[s],u=n.nodeIndices[s],l=Bk(a,i,u);for(let p of l)o.indexOf(p)===-1&&o.push(p)}return o}}}var yi=class extends Ke{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:il("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new z("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new z("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new z("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let o=new Tn(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new ll({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new z(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};yi.className="InputLayer";te.registerClass(yi);function $y(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new z("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=r.batchShape;r.shape!=null&&e==null&&(e=[null].concat(r.shape));let t=r.dtype;return t==null&&(t="float32"),new yi({batchInputShape:e,name:r.name,dtype:t,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}function P7(r,e){if(r.dtype==null||r.dtype===e.dtype)return e;try{return ne(e,r.dtype)}catch{throw new z(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var Ga=class{constructor(e){this.id2Value={};this.id2Mask={};this.name2Id={};if(e instanceof Ga)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=P7(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new z(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Tn){if(this.id2Value[e.id]==null)throw new z(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new z(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Tn){if(this.id2Value[e.id]==null)throw new z(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new z(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Fe(this.id2Mask)}},By=new Sy,Oy=new Sy;function jF(r){By?.setMaxEntries(r),Oy?.setMaxEntries(r)}function dp(r,e,t,n){let o=t==null?!1:t.training,s=Array.isArray(r),a=s?r:[r],i=a.map(f=>f.name),u=[],l=e.names();for(let f of i)l.indexOf(f)!==-1?u.push(e.getValue(f)):u.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);let p=i.join(",")+"|"+e.names().sort().join(","),m=By.get(p),c;if(m==null){let f=F7(a,e);m=f.sorted,c=f.recipientCounts,By.put(p,m),Oy.put(p,c)}c={},o||Object.assign(c,Oy.get(p));let d=new Ga(e);for(let f=0;f<m.length;++f){if(n!=null){let R=zd().numTensors;R>n.maxNumTensors&&(n.maxNumTensors=R),R<n.minNumTensors&&(n.minNumTensors=R)}let h=m[f],g=h.sourceLayer;if(g instanceof yi)continue;let y=[],T=[],x=[],I=!1;for(let R of h.inputs){let L=d.getValue(R),O=d.getMask(R);y.push(L),T.push(O),O!=null&&(I=!0),o||(c[R.name]--,c[R.name]===0&&!e.hasKey(R)&&i.indexOf(R.name)===-1&&!L.isDisposed&&R.sourceLayer.stateful!==!0&&x.push(L))}I&&(t=t||{},t.mask=T[0]);let k=vt(g.apply(y,t)),w=null;g.supportsMasking&&(w=g.computeMask(y,T));let F=R7(h),M=Array.isArray(F)?F:[F];for(let R=0;R<M.length;++R){d.hasKey(M[R])||d.add(M[R],k[R],Array.isArray(w)?w[0]:w);let L=i.indexOf(M[R].name);L!==-1&&(u[L]=k[R])}o||Fe(x)}return d.disposeMasks(),s?u:u[0]}function F7(r,e){b.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let t=[],n={};if(r.length===1){let o=qF(r[0],e);t=o.sorted,n=o.recipientMap}else{let o=new Set;for(let s of r){let{sorted:a,recipientMap:i}=qF(s,e);for(let u of a)o.has(u.name)||(t.push(u),o.add(u.name));for(let u in i)n[u]==null&&(n[u]=new Set),i[u].forEach(l=>n[u].add(l))}}return{sorted:t,recipientCounts:M7(n)}}function M7(r){let e={};for(let t in r)e[t]=r[t].size;return e}function qF(r,e){let t=new Set,n=[],o={};for(let i of e.names())t.add(i);let s=[],a=[];for(s.push(r);s.length>0;){let i=s[s.length-1];if(t.has(i.name)){s.pop();continue}let u=a[a.length-1]===s.length-1;if(i.inputs.length===0||u)s.pop(),n.push(i),t.add(i.name),u&&a.pop();else{a.push(s.length-1);for(let l of i.inputs)o[l.name]==null&&(o[l.name]=new Set),o[l.name].add(i.name),!t.has(l.name)&&s.push(l)}}return{sorted:n,recipientMap:o}}function R7(r){let e;if(r.sourceLayer.inboundNodes.length===1)e=r.sourceLayer.output;else{let t=null;for(let n=0;n<r.sourceLayer.inboundNodes.length;++n)for(let o of r.sourceLayer.inboundNodes[n].outputTensors)if(o.id===r.id){t=n;break}e=r.sourceLayer.getOutputAt(t)}return e}var E7=B();E7.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,jF);var zy={kernelName:is,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(r,fi(ne(t,"float32"),-1))}}};var XF={kernelName:Di,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Ye(ne(t,"float32")),o=$t(le(ce(1),n));return et(me(r,o))}}}};var YF={kernelName:Pi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=$t(le(Ye(ne(t,"float32")),1));return me(r,n)}}}};var ZF={kernelName:wn,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=r,u=St(t.shape,o);return u.length>0&&(i=de(i,u)),$(i,t.shape)},b:()=>{let i=r,u=St(n.shape,o);return u.length>0&&(i=de(i,u)),$(i,n.shape)}}}};var QF={kernelName:no,saveAllInputs:!0,gradFunc:(r,e)=>{let t={};return e.forEach((n,o)=>{t[o]=()=>r.clone()}),t}};var JF={kernelName:oo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>De(t)}}};var eM={kernelName:si,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>De(t)}}};var tM={kernelName:Ri,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,$t(le(ce(1),Ye(ne(t,"float32")))))}}};var rM={kernelName:Ei,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=$t(Z(ce(1),Ye(ne(t,"float32"))));return me(r,n)}}}};var nM={kernelName:$i,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=Z(Ye(t),Ye(n)),u=_(r,me(n,i)),l=St(t.shape,o);return l.length>0&&(u=de(u,l)),$(u,t.shape)},b:()=>{let i=Z(Ye(t),Ye(n)),u=et(_(r,me(t,i))),l=St(n.shape,o);return l.length>0&&(u=de(u,l)),$(u,n.shape)}}}};var oM={kernelName:_i,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,Z(Ye(ne(t,"float32")),1))}}};var sM={kernelName:Li,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,le(ce(1),Ye(ne(t,"float32"))))}}};function _7(r,e,t,n,o,s){let a=v(r,"dy","avgPool3dGrad"),i=v(e,"input","avgPool3dGrad"),u=a,l=i,p=!1;i.rank===4&&(p=!0,u=$(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),l=$(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),P(l.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),Pt("avgPool3dGrad",o,s);let m={dy:u,input:l},c={filterSize:t,strides:n,pad:o,dimRoundingMode:s},d=D.runKernel(pm,m,c);return p?$(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var aM=A({avgPool3dGrad_:_7});var iM={kernelName:vu,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:a,dimRoundingMode:i}=t;return{x:()=>aM(r,n,o,s,a,i)}}};function L7(r,e,t,n,o){let s=v(r,"dy","avgPoolGrad"),a=v(e,"input","avgPoolGrad");P(a.rank===s.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${s.rank})`);let i=a,u=s,l=!1;a.rank===3&&(l=!0,i=$(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=$(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),P(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let p={dy:u,input:i},m={filterSize:t,strides:n,pad:o},c=D.runKernel(lm,p,m);return l?$(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var uM=A({avgPoolGrad_:L7});var lM={kernelName:so,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:a}=t;return{x:()=>uM(r,n,o,s,a)}}};var pM={kernelName:ao,inputsToSave:["a","b"],gradFunc:(r,e,t)=>{let[n,o]=e,{transposeA:s,transposeB:a}=t;return!s&&!a?{a:()=>qe(r,o,!1,!0),b:()=>qe(n,r,!0,!1)}:!s&&a?{a:()=>qe(r,o,!1,!1),b:()=>qe(r,n,!0,!1)}:s&&!a?{a:()=>qe(o,r,!1,!0),b:()=>qe(n,r,!1,!1)}:{a:()=>qe(o,r,!0,!0),b:()=>qe(r,n,!0,!0)}}};var mM={kernelName:us,gradFunc:(r,e,t)=>{let{blockShape:n,crops:o}=t;return{x:()=>Jm(r,n,o)}}};var cM={kernelName:S0,gradFunc:(r,e,t)=>{let n=t,o=n.inputShape,s=n.shape,a=Array.from(s);for(let u=o.length-1;u>=0;u--)if(o[u]===s[u])a[u]=1;else if(o[u]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);let i=[];for(let u=0;u<a.length;u++)a[u]>1&&i.push(u);return{x:()=>de(r,i,!0)}}};var dM={kernelName:Un,gradFunc:r=>({x:()=>r.clone()})};var fM={kernelName:io,gradFunc:r=>({x:()=>De(r)})};var hM={kernelName:Wn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{clipValueMin:o,clipValueMax:s}=t;return{x:()=>Wt(Zr(Ms(n,o),Rs(n,s)),r,De(r))}}};var gM={kernelName:wu,inputsToSave:["x"],gradFunc:zy.gradFunc};var bM={kernelName:ls,saveAllInputs:!0,gradFunc:(r,e,t)=>{let n=e.map(u=>u.shape),{axis:o}=t,s=fr(o,e[0].shape)[0],a=n.map(u=>u[s]);return Pr(r,a,s).map(u=>()=>u)}};var yM={kernelName:uo,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{dilations:s,strides:a,pad:i,dataFormat:u}=t;return P(Xo(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>qm(n.shape,r,o,a,i,u),filter:()=>uc(n,r,o.shape,a,i,u)}}};var TM={kernelName:lo,inputsToSave:["dy","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{strides:s,pad:a,dataFormat:i,dimRoundingMode:u}=t;return{dy:()=>Zo(r,o,s,a,i,1,u),filter:()=>uc(r,n,o.shape,s,a,i,u)}}};function $7(r,e,t,n,o){let s=r;r.rank===4&&(s=$(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let a=e;a.rank===4&&(a=$(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),P(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),P(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),P(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),P(s.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${t[3]}.`),P(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);let i={x:s,dy:a},u={strides:n,pad:o,filterShape:t};return D.runKernel(fm,i,u)}var xM=A({conv3DBackpropFilter_:$7});var IM={kernelName:Nu,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s}=t;P(Xo(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[a,i]=e;return{x:()=>Wb(a.shape,r,i,o,s),filter:()=>xM(a,r,i.shape,o,s)}}};var CM={kernelName:po,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(et(uy(ne(t,"float32"))),r)}}};var kM={kernelName:mo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(ly(ne(t,"float32")),r)}}};var SM={kernelName:co,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o,exclusive:s,reverse:a}=t;return{x:()=>{let i=dk([o],n.rank),u=Hb(r,o,s,!a);return i!=null&&(u=We(u,i)),u}}}};var vM={kernelName:fo,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s,dimRoundingMode:a}=t,i=n??[1,1];P(Xo(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[u,l]=e;return P(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),P(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),P(Rr(o,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${i}'.`),Pt("depthwiseConv2d",s,a),{x:()=>by(u.shape,r,l,o,s,i,a),filter:()=>gy(u,r,l.shape,o,s,i,a)}}};var AM={kernelName:Du,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,s={x:n,filter:o,dy:r},a={x:n,filter:o,dy:r};return{x:()=>D.runKernel(Dd,s,t),filter:()=>D.runKernel(Pd,a,t)}}};var wM={kernelName:go,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e,n={dy:r,y:t};return{x:()=>D.runKernel(xm,n)}}};var NM={kernelName:Bi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=_(hr(et(Ye(t))),2/Math.sqrt(Math.PI));return{x:()=>_(r,n)}}};var DM={kernelName:bo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(r,t)}}};var PM={kernelName:ps,inputsToSave:["input"],gradFunc:(r,e)=>{let[t]=e;return{input:()=>$(r,t.shape)}}};var FM={kernelName:da,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(r,hr(t))}}};var MM={kernelName:yo,gradFunc:r=>({x:()=>De(r)})};var RM={kernelName:To,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=me(r,ne(n,"float32")),u=St(t.shape,o);return u.length>0?$(de(i,u),t.shape):i},b:()=>{let i=_(r,ne(t,"float32")),u=St(n.shape,o);u.length>0&&(i=$(de(i,u),n.shape));let l=Ye(n);return et(me(i,ne(l,"float32")))}}}};var EM={kernelName:xo,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,e,t)=>{let{varianceEpsilon:n}=t,[o,s,a,i]=e,u=i??ce(1),l=St(s.shape,o.shape),p=[];if(s.rank===1){for(let I=0;I<o.shape.length-1;++I)p.push(o.shape[I]);p.push(1)}let m=le(o,s),c=_(r,u),d=sy(Z(a,ce(n))),f=_(_(_(d,d),d),ce(-.5));return{x:()=>s.rank===1?$(_(_(r,Yr($(d,[1,1,1,s.shape[0]]),p)),u),o.shape):$(_(_(r,d),u),o.shape),mean:()=>{let I=_(_(d,ce(-1)),c);return s.rank===1&&(I=de(I,l)),$(I,s.shape)},variance:()=>{let I=_(_(f,m),c);return s.rank===1&&(I=de(I,l)),$(I,s.shape)},scale:()=>{let I=_(m,d),k=_(r,I);return s.rank===1&&(k=de(k,l)),$(k,s.shape)},offset:()=>{let I=r;return s.rank===1&&(I=de(I,l)),$(I,s.shape)}}}};var $M={kernelName:ms,inputsToSave:["x","indices"],gradFunc:(r,e,t)=>{let[n,o]=e,{axis:s}=t,a=fr(s,n.shape)[0];return{x:()=>{let u=n.shape,l=o.size,p=u.slice(0,a),m=p.length,c=u.slice(s,u.length).slice(1),d=c.length,f=_M(0,m),h=_M(m+1,m+1+d),g=LM([p,[l],c]),y=$(r,g),T=$(o,[l]),x=LM([[m],f,h]),I=We(y,x),k=cy(I,T,n.shape[a]),w=Kd(x);return k=We(k,w),k},indices:()=>o}}};function _M(r,e){let t=[];for(let n=r;n<e;++n)t.push(n);return t}function LM(r){let e=[];for(let t=0;t<r.length;++t)for(let n=0;n<r[t].length;++n)e.push(r[t][n]);return e}var BM={kernelName:Io,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>De(t),b:()=>De(n)}}};var OM={kernelName:Kn,gradFunc:r=>({x:()=>ne(r,"float32")})};var zM={kernelName:Oi,gradFunc:r=>({x:()=>De(r)})};var GM={kernelName:zi,gradFunc:r=>({x:()=>De(r)})};var UM={kernelName:Gi,gradFunc:r=>({x:()=>De(r)})};var WM={kernelName:Co,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{alpha:o}=t,s=pr(n,0);return{x:()=>Wt(s,r,_(r,o))}}};var KM={kernelName:Ui,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,Z(t,1))}}};var VM={kernelName:ko,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,ne(t,"float32"))}}};var HM={kernelName:A0,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t;return{logits:()=>{let a=hr(n);return le(r,_(de(r,o,!0),a))}}}};function B7(r,e,t,n=5,o=1,s=1,a=.5){let i={x:r,y:e,dy:t},u={depthRadius:n,bias:o,alpha:s,beta:a};return D.runKernel(Sm,i,u)}var qM=A({localResponseNormalizationBackprop_:B7});var jM={kernelName:Mu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{depthRadius:s,bias:a,alpha:i,beta:u}=t;return{x:()=>qM(n,o,r,s,a,i,u)}}};function Gy(r,e,t,n){return e.rank<t.rank&&(e=$(e,Fs(e.shape,n))),r.rank<t.rank&&(r=$(r,Fs(r.shape,n))),{x:()=>_(r,ne(Xr(t,e),r.dtype))}}var Ok={kernelName:So,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{reductionIndices:o}=n,s=e[0],a=e[1],i=fr(o,s.shape),u=Gy(r,a,s,i);return{x:()=>u.x()}}};var XM={kernelName:vo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>_(r,ne(Ms(t,n),"float32")),b:()=>_(r,ne(qb(t,n),"float32"))}}};function O7(r,e,t,n,o,s,a){let i=v(r,"dy","maxPool3dGrad"),u=v(e,"input","maxPool3dGrad"),l=v(t,"output","maxPool3dGrad"),p=i,m=u,c=l,d=!1;u.rank===4&&(d=!0,p=$(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),m=$(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),c=$(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),P(p.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),P(m.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${m.rank}.`),P(c.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${c.rank}.`),Pt("maxPool3dGrad",s,a);let f={dy:p,input:m,output:c},h={filterSize:n,strides:o,pad:s,dimRoundingMode:a},g=D.runKernel(Am,f,h);return d?$(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var YM=A({maxPool3dGrad_:O7});var ZM={kernelName:Ru,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=t;return{x:()=>YM(r,n,o,s,a,i,u)}}};function z7(r,e,t,n,o,s,a){let i=v(r,"dy","maxPoolGrad"),u=v(e,"input","maxPoolGrad"),l=v(t,"output","maxPoolGrad");P(u.rank===i.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${i.rank})`),P(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),P(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),Pt("maxPoolGrad",s,a);let p={dy:i,input:u,output:l},m={filterSize:n,strides:o,pad:s,dimRoundingMode:a};return D.runKernel(vm,p,m)}var QM=A({maxPoolGrad_:z7});var JM={kernelName:Ao,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:a,pad:i}=t;return{x:()=>QM(r,n,o,s,a,i)}}};var eR={kernelName:wo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t,s=fr(o,n.shape),i=ck(n.shape,s)[1],u=rt(i);return{x:()=>{let p=n.shape.slice();s.forEach(d=>{p[d]=1});let m=$(r,p);return me(_(m,gr(n.shape,"float32")),u)}}}};var tR={kernelName:No,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{axis:o}=n,[s,a]=e,i=fr(o,s.shape),u=Gy(r,a,s,i);return{x:()=>u.x()}}};var rR={kernelName:Do,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>_(r,ne(Rs(t,n),"float32")),b:()=>_(r,ne(pr(t,n),"float32"))}}};var nR={kernelName:Po,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(a=>a[0]);return{x:()=>Ge(r,s,n.shape)}}};var oR={kernelName:Ki,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=St(t.shape,o);return i.length>0?$(de(r,i),t.shape):r},b:()=>{let i=_(r,et(tl(me(t,n)))),u=St(n.shape,o);return u.length>0?$(de(i,u),n.shape):i}}}};var sR={kernelName:Fo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=_(r,ne(n,"float32")),u=St(t.shape,o);return u.length>0?$(de(i,u),t.shape):i},b:()=>{let i=_(r,ne(t,"float32")),u=St(n.shape,o);return u.length>0?$(de(i,u),n.shape):i}}}};var aR={kernelName:cs,gradFunc:r=>({x:()=>et(r)})};var iR={kernelName:Sa,inputsToSave:["indices"],gradFunc:(r,e)=>{let t=e[0];return{indices:()=>It(t.shape,"float32")}}};var uR={kernelName:ds,gradFunc:r=>({x:()=>De(r)})};var lR={kernelName:fs,saveAllInputs:!0,gradFunc:(r,e,t)=>{let{axis:n}=t;return Gr(r,n).map(s=>()=>s)}};var zk={kernelName:Mo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(a=>a[0]);return{x:()=>Ge(r,s,n.shape)}}};var pR={kernelName:Ro,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,e)=>{let[t,n,o]=e,s=t,a=n,i=ze(s.shape,a.shape);return{a:()=>{let p=ne(a,"float32"),m=_(r,_(p,qn(s,le(p,ce(1))))),c=St(s.shape,i);return c.length>0&&(m=de(m,c)),$(m,s.shape)},b:()=>{let p=pr(s,0),m=Wt(p,zr(s),De(s)),c=_(r,_(o,m)),d=St(a.shape,i);return d.length>0&&(c=de(c,d)),$(c,a.shape)}}}};var mR={kernelName:Eo,inputsToSave:["x","alpha"],gradFunc:(r,e)=>{let[t,n]=e,o=pr(t,0);return{x:()=>Wt(o,r,_(r,n)),alpha:()=>{let s=Wt(o,De(r),_(r,t)),a=St(n.shape,r.shape);return a.length>0&&(s=de(s,a)),$(s,n.shape)}}}};function G7(r,e,t){let n=r.shape.slice();n[t]=1;let o=$(e,n),s=Wd(r,t,!0,!1),a=Wd(r,t,!0,!0),i=_(s,a);return _(o,i)}function U7(r,e,t){let n=r.shape.length,o=n-t.length,s=C.getAxesPermutation(t,n),a=r;s!=null&&(a=We(r,s));let i=a.shape.slice(),l=i.splice(n-t.length,t.length).reduce((c,d)=>c*d,1);i.push(l);let p=a.reshape(i),m=G7(p,e,o);if(m=m.reshape(a.shape),s!=null){let c=C.getUndoAxesPermutation(s);m=We(m,c)}return m}var cR={kernelName:_o,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t,s=[];return o==null?s=n.shape.map((a,i)=>i):typeof o=="number"?s=[o]:s=o,{x:()=>U7(n,r,s)}}};var dR={kernelName:ho,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=me(r,ne(n,"float32")),u=St(t.shape,o);return u.length>0?$(de(i,u),t.shape):i},b:()=>{let i=_(r,ne(t,"float32")),u=St(n.shape,o);u.length>0&&(i=$(de(i,u),n.shape));let l=Ye(n);return et(me(i,ne(l,"float32")))}}}};var fR={kernelName:Hi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,et(Ye(t)))}}};var hR={kernelName:Oo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=_(Rs(t,6),fi(t));return{x:()=>_(r,ne(n,"float32"))}}};var gR={kernelName:Lo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(r,ne(fi(t),"float32"))}}};var bR={kernelName:hs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>$(r,t.shape)}}};var yR={kernelName:Bo,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>D.runKernel(Pm,o,t)}}};var TR={kernelName:$o,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>D.runKernel(Dm,o,t)}}};var xR={kernelName:va,gradFunc:(r,e,t)=>{let{dims:n}=t,o=fr(n,r.shape);return{x:()=>Dr(r,o)}}};var IR={kernelName:Aa,gradFunc:r=>({x:()=>De(r)})};var CR={kernelName:zo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>et(me(r,_(qn(t,1.5),2)))}}};var kR={kernelName:gs,inputsToSave:["condition"],gradFunc:(r,e)=>{let[t]=e;return{condition:()=>ne(De(t),"float32"),t:()=>_(r,ne(t,r.dtype)),e:()=>_(r,ne(Zm(t),r.dtype))}}};var SR={kernelName:qi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=pr(t,ce(0)),o=ce(wk),s=ce(Nk),a=_(r,s),i=_(_(r,o),hr(ne(t,"float32")));return Wt(n,a,i)}}}};var vR={kernelName:Uo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(r,_(t,le(ce(1),t)))}}};var AR={kernelName:ji,gradFunc:r=>({x:()=>De(r)})};var wR={kernelName:Go,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(jm(ne(t,"float32")),r)}}};var NR={kernelName:Na,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(Vb(ne(t,"float32")),r)}}};var DR={kernelName:bs,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{begin:o,size:s}=t,a=n.shape,[i,u]=sk(n,o,s),l=[];for(let p=0;p<r.rank;p++)l.push([i[p],a[p]-i[p]-u[p]]);return{x:()=>jn(r,l)}}};var PR={kernelName:Vo,outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{dim:o}=t,s=!0,a=_(r,n);return{logits:()=>le(a,_(de(a,[o],s),n))}}};var FR={kernelName:Xi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(r,En(t))}}};var Gk={kernelName:ys,gradFunc:(r,e,t)=>{let{blockShape:n,paddings:o}=t;return{x:()=>Vm(r,n,o)}}};var Uk={kernelName:Ts,gradFunc:(r,e,t)=>{let{axis:n}=t;return{x:()=>mt(r,n)}}};var MR={kernelName:Wo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,_($t(ne(t,"float32")),2))}}};var RR={kernelName:ui,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(r,_(ne(t,"float32"),2))}}};var ER={kernelName:Ho,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ce(2);return{a:()=>_(r,_(o,le(t,n))),b:()=>_(r,_(o,le(n,t)))}}};var _R={kernelName:Cs,gradFunc:r=>({x:()=>De(r)})};var LR={kernelName:qo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t.shape,n.shape);return{a:()=>{let i=r,u=St(t.shape,o);return u.length>0&&(i=de(i,u)),$(i,t.shape)},b:()=>{let i=r,u=St(n.shape,o);return u.length>0&&(i=de(i,u)),$(et(i),n.shape)}}}};var $R={kernelName:Ko,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,o=n.shape.slice(),{axis:s}=t;fr(s,n.shape).forEach(l=>{o[l]=1});let i=$(r,o),u=_(i,gr(n.shape,"float32"));return{x:()=>u}}};var BR={kernelName:Pa,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,Ye(jm(t)))}}};var OR={kernelName:jo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(le(ce(1),Ye(t)),r)}}};var zR={kernelName:Nn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{reps:o}=t;return{x:()=>{let a=De(n);if(n.rank===1)for(let i=0;i<o[0];++i)a=Z(a,Ge(r,[i*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let i=0;i<o[0];++i)for(let u=0;u<o[1];++u)a=Z(a,Ge(r,[i*n.shape[0],u*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let i=0;i<o[0];++i)for(let u=0;u<o[1];++u)for(let l=0;l<o[2];++l)a=Z(a,Ge(r,[i*n.shape[0],u*n.shape[1],l*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let i=0;i<o[0];++i)for(let u=0;u<o[1];++u)for(let l=0;l<o[2];++l)for(let p=0;p<o[3];++p)a=Z(a,Ge(r,[i*n.shape[0],u*n.shape[1],l*n.shape[2],p*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return a}}}};var GR={kernelName:Dn,gradFunc:(r,e,t)=>{let n=t,{perm:o}=n,s=Kd(o);return{x:()=>We(r,s)}}};var UR={kernelName:xs,gradFunc:(r,e,t)=>{let n=t,{axis:o}=n;return{value:()=>br(r,o)}}};var WR={kernelName:Gu,inputsToSave:["segmentIds"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>W7(r,t)}}};function W7(r,e){let t=Qo(e,De(e)),n=rl(r,t),o=Ms(e,ce(0,"int32")),s=n.rank-o.rank;for(let i=0;i<s;++i)o=Er(o,i+1);o=Zr(o,gr(n.shape,"bool"));let a=De(n);return Wt(o,n,a)}var KR={kernelName:Is,gradFunc:r=>({x:()=>De(r)})};var K7=[zy,XF,YF,ZF,QF,JF,eM,tM,rM,nM,oM,sM,iM,lM,pM,mM,cM,dM,fM,hM,gM,bM,TM,yM,IM,CM,kM,SM,vM,AM,dR,wM,NM,DM,PM,FM,RM,MM,EM,$M,BM,OM,zM,GM,UM,WM,KM,VM,HM,jM,Ok,Ok,XM,ZM,JM,eR,tR,rR,nR,oR,sR,aR,iR,uR,lR,zk,zk,pR,mR,cR,fR,hR,gR,bR,yR,TR,xR,IR,CR,kR,SR,vR,AR,wR,NR,DR,PR,FR,Gk,Gk,Uk,Uk,MR,ER,RR,_R,LR,$R,BR,OR,zR,GR,UR,WR,KR];for(let r of K7)N0(r);var qR={};je(qR,{maxNorm:()=>V7,minMaxNorm:()=>j7,nonNeg:()=>q7,unitNorm:()=>H7});function Wk(r,e){return U(()=>$t(de(_(r,r),e,!0)))}var Cc=class extends te.Serializable{getConfig(){return{}}},pf=class extends Cc{constructor(e){super();this.defaultMaxValue=2;this.defaultAxis=0;this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return U(()=>{let t=Wk(e,this.axis),n=Or(t,0,this.maxValue);return _(e,me(n,Z(cr(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};pf.className="MaxNorm";te.registerClass(pf);var mf=class extends Cc{constructor(e){super();this.defaultAxis=0;this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return U(()=>me(e,Z(cr(),Wk(e,this.axis))))}getConfig(){return{axis:this.axis}}};mf.className="UnitNorm";te.registerClass(mf);var cf=class extends Cc{apply(e){return Qr(e)}};cf.className="NonNeg";te.registerClass(cf);var df=class extends Cc{constructor(e){super();this.defaultMinValue=0;this.defaultMaxValue=1;this.defaultRate=1;this.defaultAxis=0;this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return U(()=>{let t=Wk(e,this.axis),n=Z(_(this.rate,Or(t,this.minValue,this.maxValue)),_(1-this.rate,t));return _(e,me(n,Z(cr(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};df.className="MinMaxNorm";te.registerClass(df);var VR={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Xt(r){return lc(r)}function HR(r,e={}){return gi(r,te.SerializationMap.getMap().classNameMap,e,"constraint")}function Yt(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in VR?VR[r]:r,config:{}};return HR(t)}else return r instanceof Cc?r:HR(r)}function V7(r){return new pf(r)}function H7(r){return new mf(r)}function q7(){return new cf}function j7(r){return new df(r)}var jR={};je(jR,{constant:()=>Z7,glorotNormal:()=>oJ,glorotUniform:()=>nJ,heNormal:()=>sJ,heUniform:()=>aJ,identity:()=>tJ,leCunNormal:()=>iJ,leCunUniform:()=>uJ,ones:()=>Y7,orthogonal:()=>lJ,randomNormal:()=>J7,randomUniform:()=>Q7,truncatedNormal:()=>eJ,varianceScaling:()=>rJ,zeros:()=>X7});function X7(){return new tf}function Y7(){return new cp}function Z7(r){return new rf(r)}function Q7(r){return new nf(r)}function J7(r){return new of(r)}function eJ(r){return new sf(r)}function tJ(r){return new af(r)}function rJ(r){return new rn(r)}function nJ(r){return new dc(r)}function oJ(r){return new fc(r)}function sJ(r){return new hc(r)}function aJ(r){return new gc(r)}function iJ(r){return new bc(r)}function uJ(r){return new yc(r)}function lJ(r){return new uf(r)}var AE={};je(AE,{Layer:()=>Ke,RNN:()=>Ws,RNNCell:()=>fl,activation:()=>k9,add:()=>M9,alphaDropout:()=>hee,average:()=>R9,averagePooling1d:()=>MS,averagePooling2d:()=>RS,averagePooling3d:()=>ES,avgPool1d:()=>U9,avgPool2d:()=>K9,avgPool3d:()=>H9,avgPooling1d:()=>W9,avgPooling2d:()=>V9,avgPooling3d:()=>q9,batchNormalization:()=>O9,bidirectional:()=>iee,concatenate:()=>E9,conv1d:()=>f9,conv2d:()=>h9,conv2dTranspose:()=>g9,conv3d:()=>b9,conv3dTranspose:()=>y9,convLstm2d:()=>nee,convLstm2dCell:()=>oee,cropping2D:()=>x9,dense:()=>S9,depthwiseConv2d:()=>C9,dot:()=>B9,dropout:()=>v9,elu:()=>u9,embedding:()=>F9,flatten:()=>w9,gaussianDropout:()=>fee,gaussianNoise:()=>dee,globalAveragePooling1d:()=>j9,globalAveragePooling2d:()=>X9,globalMaxPool1d:()=>lee,globalMaxPool2d:()=>pee,globalMaxPooling1d:()=>CE,globalMaxPooling2d:()=>kE,gru:()=>Z9,gruCell:()=>Q9,input:()=>eS,inputLayer:()=>i9,layerNormalization:()=>z9,leakyReLU:()=>p9,lstm:()=>J9,lstmCell:()=>eee,masking:()=>gee,maxPool1d:()=>mee,maxPool2d:()=>cee,maxPooling1d:()=>SE,maxPooling2d:()=>vE,maxPooling3d:()=>Y9,maximum:()=>_9,minimum:()=>L9,multiply:()=>$9,permute:()=>P9,prelu:()=>m9,reLU:()=>l9,repeatVector:()=>N9,reshape:()=>D9,rnn:()=>see,separableConv2d:()=>T9,simpleRNN:()=>tee,simpleRNNCell:()=>ree,softmax:()=>c9,spatialDropout1d:()=>A9,stackedRNNCells:()=>aee,thresholdedReLU:()=>d9,timeDistributed:()=>uee,upSampling2d:()=>I9,zeroPadding2d:()=>G9});async function Ti(r){if(r==null)return;let e=[],t=[],n=[];for(let o in r){let s=r[o];if(typeof s!="number"){let a=s;e.push(a.data()),t.push(o),n.push(a)}}if(e.length>0){let o=await Promise.all(e);for(let s=0;s<o.length;++s)r[t[s]]=o[s][0];Fe(n)}}function Uy(r){if(r!=null)for(let e in r){let t=r[e];typeof t!="number"&&t.dispose()}}var pJ=125,pl=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},Kk=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},XR=class extends pl{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let o in t){let s=t[o];if(typeof s=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+s*n;else{let a;o in this.totals?a=this.totals[o]:this.totals[o]=0;let i=U(()=>Z(this.totals[o],_(s,n)));this.totals[o]=i,a?.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:U(()=>{let o=_(me(1,this.seen),this.totals[n]);t[n]=o,this.totals[n].dispose(),Gt(t[n])}))}},Vk=class extends pl{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let s in this.history){let a=this.history[s];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){let u=a[i];e.push(u.data()),t.push(s),n.push(i)}}let o=await Promise.all(e);for(let s=0;s<o.length;++s)this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=o[s][0]}},Hk=class extends pl{constructor(e,t){super();this.currentEpoch=0;if(this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Yd,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=pJ),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");b.isNumber(this.yieldEvery)&&(this.maybeWait=vF(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let o=[];this.yield!=null&&(await Ti(n),o.push(this.yield(e,t,n))),o.push(this.nextFrameFunc()),await Promise.all(o)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Ti(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await Ti(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Ti(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await Ti(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):b.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await Ti(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Ti(e),await this.trainEnd(e))}};function Wy(r,e){return r==null&&(r={}),r instanceof pl?[r]:Array.isArray(r)&&r[0]instanceof pl?r:vt(r).map(n=>new Hk(n,e))}var Ua=class{constructor(){}static registerCallbackConstructor(e,t){b.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Ua.checkForDuplicate(t),Ua.constructors[e]==null&&(Ua.constructors[e]=[]),Ua.constructors[e].push(t)}static checkForDuplicate(e){for(let t in Ua.constructors)Ua.constructors[+t].forEach(o=>{if(o===e)throw new z("Duplicate callback constructor.")})}static clear(){Ua.constructors={}}static createCallbacks(e){let t=[];for(let n in Ua.constructors){let o=+n;e>=o&&t.push(...Ua.constructors[o])}return t.map(n=>new n)}},ff=Ua;ff.constructors={};function Ky(r,e,t,n,o,s,a,i,u){let l=new Vk,p=[new XR,...ff.createCallbacks(e)];r!=null&&p.push(...r),p.push(l);let m=new Kk(p);return m.setParams({epochs:t,initialEpoch:n,samples:o,steps:s,batchSize:a,verbose:e,doValidation:i,metrics:u}),{callbackList:m,history:l}}function xn(r,e={},t=!1){return gi(r,te.SerializationMap.getMap().classNameMap,e,"layer",t)}function hf(r,e){return U(()=>{r.dtype!=="float32"&&(r=ne(r,"float32"));let t=de(mp(r),e,!0),n=ci(t.shape,cr()),o=$t(Qo(t,n));return me(r,o)})}function xi(r,e){return U(()=>Bt(mp(le(e,r)),-1))}function kc(r,e){return U(()=>Bt(Ut(le(e,r)),-1))}function ml(r,e){return U(()=>{let t=le(r,e),n=Or(Ut(r),cr(),Number.MAX_VALUE),o=Ut(me(t,n));return _(100,Bt(o,-1))})}function mJ(r,e){return U(()=>{let t=Or(e,cr(),Number.MAX_VALUE),n=zr(Z(1,t)),o=Or(r,cr(),Number.MAX_VALUE),s=zr(Z(1,o));return Bt(mp(le(n,s)),-1)})}function cJ(r,e){return U(()=>{let t=Qo(0,le(1,_(r,e)));return Bt(mp(t),-1)})}function dJ(r,e){return U(()=>{let t=Qo(0,le(1,_(r,e)));return Bt(t,-1)})}function fJ(r,e){return U(()=>{let t=de(_(r,e),-1),n=dn(_(le(1,r),e),-1);return Qo(0,Z(1,le(n,t)))})}function hJ(r,e){return U(()=>{let t=Math.log(2),n=le(e,r),o=le(Z(n,su(_(-2,n))),t);return Bt(o,-1)})}function fp(r,e,t=!1){return U(()=>{if(t)e=oc(e);else{let n=de(e,e.shape.length-1,!0);e=me(e,n)}return e=Or(e,cr(),1-cr()),et(de(_(ne(r,"float32"),zr(e)),e.shape.length-1))})}function Sc(r,e,t=!1){return U(()=>{let n=ne(tl(LF(r)),"int32");e=Or(e,cr(),1-cr());let o=e.shape,s=$(qu(n,o[o.length-1]),o);return fp(s,e,t)})}function gJ(r,e){if(!b.arraysEqual(r.shape,e.shape))throw new z(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(e.shape)}`);return U(()=>{let t=Qr(e),n=et(Ut(e));return Z(le(t,_(e,r)),Ym(hr(n)))})}function vc(r,e){return U(()=>{let t;return t=Or(e,cr(),1-cr()),t=zr(me(t,le(1,t))),Bt(gJ(r,t),-1)})}function bJ(r,e){return U(()=>{let t=Or(r,cr(),1),n=Or(e,cr(),1);return de(_(r,zr(me(t,n))),-1)})}function yJ(r,e){return U(()=>{let t=zr(Z(cr(),e));return Bt(le(e,_(r,t)),-1)})}function bf(r,e){return U(()=>{let t=hf(r,-1),n=hf(e,-1),o=_(t,n);return et(de(o,-1))})}var gf={meanSquaredError:xi,meanAbsoluteError:kc,meanAbsolutePercentageError:ml,meanSquaredLogarithmicError:mJ,squaredHinge:cJ,hinge:dJ,categoricalHinge:fJ,logcosh:hJ,categoricalCrossentropy:fp,sparseCategoricalCrossentropy:Sc,binaryCrossentropy:vc,kullbackLeiblerDivergence:bJ,poisson:yJ,cosineProximity:bf};function Vy(r){if(typeof r=="string"){if(r in gf)return gf[r];let e=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new z(e)}else return r}function yf(r,e){return U(()=>{let t=_(.5,_r(e)),n=pp(pr(e,t),r.dtype);return Bt(Xr(r,n),-1)})}function Tf(r,e){return U(()=>pp(Xr(Yu(r,-1),Yu(e,-1)),"float32"))}function ZR(r,e){return U(()=>ne(de(Zr(Xr(r,1),Xr(e,1))),"float32"))}function TJ(r,e){return U(()=>ne(de(Zr(Xr(r,1),Xr(e,0))),"float32"))}function xJ(r,e){return U(()=>ne(de(Zr(Xr(r,0),Xr(e,1))),"float32"))}function qk(r,e){return U(()=>{let t=ZR(r,e),n=xJ(r,e),o=Z(t,n);return ne(Wt(pr(o,0),me(t,o),0),"float32")})}function QR(r,e){return U(()=>{let t=ZR(r,e),n=TJ(r,e),o=Z(t,n);return ne(Wt(pr(o,0),me(t,o),0),"float32")})}function qy(r,e){return vc(r,e)}function jy(r,e){return r.rank===e.rank&&(r=Es(r,[r.rank-1])),e=Yu(e,-1),e.dtype!==r.dtype&&(e=ne(e,r.dtype)),ne(Xr(r,e),"float32")}var IJ=xi,CJ=xi,kJ=kc,SJ=kc,vJ=ml,AJ=ml,xf=fp,wJ=bf,jk=Sc,Hy={binaryAccuracy:yf,categoricalAccuracy:Tf,precision:qk,categoricalCrossentropy:xf,sparseCategoricalCrossentropy:jk,mse:IJ,MSE:CJ,mae:kJ,MAE:SJ,mape:vJ,MAPE:AJ,cosine:wJ};function JR(r){if(typeof r=="string"&&r in Hy)return Hy[r];if(typeof r!="string"&&r!=null)return r;throw new z(`Unknown metric ${r}`)}function If(r){if(Jo(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let e;for(let t of Object.keys(gf))if(gf[t]===r){e=t;break}if(e!==void 0)return e;for(let t of Object.keys(Hy))if(Hy[t]===r){e=t;break}return e!==void 0?e:r.name}}function tE(r){let e={Adagrad:()=>up.adagrad(.01),Adadelta:()=>up.adadelta(1,.95,cr()),Adam:()=>up.adam(.001,.9,.999,cr()),Adamax:()=>up.adamax(.002,.9,.999,cr(),0),RMSProp:()=>up.rmsprop(.001,.9,0,cr()),SGD:()=>up.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,r in e)return e[r]();throw new z(`Unknown Optimizer ${r}`)}function Yk(r,e,t=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!Xk(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){let n=JSON.stringify(r);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${1048576}.`)}}function Xk(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let e=Object.keys(r);for(let t of e)if(typeof t!="string"||!Xk(r[t]))return!1;return!0}else if(Array.isArray(r)){for(let e of r)if(!Xk(e))return!1;return!0}else return!1;else{let e=typeof r;return e==="string"||e==="number"||e==="boolean"}}function rE(r,e,t,n=console.log){let o=PJ(r),s=["Layer (type)","Input Shape","Output shape","Param #"];o?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(p=>Math.floor(e*p)));let a;if(!o){s.push("Receives inputs"),a=[];for(let p in r.nodesByDepth)a.push(...r.nodesByDepth[p])}n("_".repeat(e)),Xy(s,t,n),n("=".repeat(e));let i=r.layers;for(let p=0;p<i.length;++p)o?FJ(i[p],t,n):MJ(i[p],t,a,n),n((p===i.length-1?"=":"_").repeat(e));r.checkTrainableWeightsConsistency();let u=DJ(r),l=xc(r.nonTrainableWeights);n(`Total params: ${u+l}`),n(`Trainable params: ${u}`),n(`Non-trainable params: ${l}`),n("_".repeat(e))}function DJ(r){let e;return r.collectedTrainableWeights!=null?e=xc(r.collectedTrainableWeights):e=xc(r.trainableWeights),e}function PJ(r){let e=!0,t=[],n=[];for(let o in r.nodesByDepth)t.push(r.nodesByDepth[o]);for(let o of t){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){e=!1;break}n.push(...o)}if(e)for(let o of r.layers){let s=!1;for(let a of o.inboundNodes)if(n.indexOf(a)!==-1)if(s){e=!1;break}else s=!0;if(!e)break}return e}function Xy(r,e,t=console.log){let n="";for(let o=0;o<r.length;++o)o>0&&(n=n.slice(0,n.length-1)+" "),n+=r[o],n=n.slice(0,e[o]),n+=" ".repeat(e[o]-n.length);t(n)}function FJ(r,e,t){let n,o;try{o=r.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{o="multiple"}try{n=JSON.stringify(r.outputShape)}catch{n="multiple"}let s=r.name,a=r.getClassName(),i=[`${s} (${a})`,o,n,r.countParams().toString()];Xy(i,e,t)}function MJ(r,e,t,n){let o,s;try{s=r.inboundNodes.map(m=>JSON.stringify(m.inputShapes)).join(",")}catch{s="multiple"}try{o=JSON.stringify(r.outputShape)}catch{o="multiple"}let a=[];for(let m of r.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(m)===-1))for(let c=0;c<m.inboundLayers.length;++c){let d=m.inboundLayers[c].name,f=m.nodeIndices[c],h=m.tensorIndices[c];a.push(`${d}[${f}][${h}]`)}let i=r.name,u=r.getClassName(),l=a.length===0?"":a[0],p=[`${i} (${u})`,s,o,r.countParams().toString(),l];Xy(p,e,n);for(let m=1;m<a.length;++m)Xy(["","","","",a[m]],e,n)}function nE(r,e,t){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&e===0&&typeof t=="string"}function hp(r,e){if(r===null)return null;if(typeof r=="string")return uu(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];nE(e,o,s)?t.push(s):t.push(hp(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n];if(n==="name"&&typeof o=="string")t[n]=o;else{let s=uu(n);t[s]=hp(o,s)}}return t}}function Yy(r,e){if(r==null)return null;if(typeof r=="string")return Bs(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];nE(e,o,s)?t.push(s):t.push(Yy(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n],s=Bs(n);(n==="name"||n==="className")&&typeof o=="string"?t[s]=o:t[s]=Yy(o,n)}return t}}var Cf="0.0.0";var es=class extends Ke{constructor(e){super({});this.containerNodes=new Set;if(this.name=e.name,this.name==null){let T=this.getClassName().toLowerCase();this.name=il(T)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Os(this.inputs).length!==this.inputs.length)throw new z(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(T=>T.name)}`);Os(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(T=>T.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let T of this.outputs){let x=T.sourceLayer,I=T.nodeIndex,k=T.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(I),this.outputLayersTensorIndices.push(k)}for(let T of this.inputs){let x=T.sourceLayer,I=T.nodeIndex,k=T.tensorIndex;Jo(I===0,"input layer has >1 nodes"),Jo(k===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(I),this.inputLayersTensorIndices.push(k)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let T=0;T<this.inputLayers.length;T++){let x=this.inputLayers[T];if(!(x instanceof yi))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${T} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(let T of this.outputLayers)this.outputNames.push(T.name);this.internalInputShapes=this.inputs.map(T=>T.shape),this.internalOutputShapes=this.outputs.map(T=>T.shape);let t={},n={},o={},s={},a={},i=[],u=(T,x,I,k,w,F)=>{(k==null||w==null||F==null)&&(k=T.sourceLayer,w=T.nodeIndex,F=T.tensorIndex);let M=k.inboundNodes[w];if(I.indexOf(M)!==-1)throw new en(`The tensor ${T.name} at layer "${k.name}" is part of a cycle.`);if(x.indexOf(M)!==-1)return;this.containerNodes.add(es.nodeKey(k,w)),k.id in a||(a[k.id]=Object.keys(a).length),I.indexOf(M)===-1&&I.push(M);let R=M.inboundLayers.length;for(let L=0;L<R;L++){let O=M.inputTensors[L],W=M.inboundLayers[L],V=M.nodeIndices[L],j=M.tensorIndices[L];u(O,x,I,W,V,j)}for(x.push(M);I.indexOf(M)>=0;)I.splice(I.indexOf(M),1);i.push(M)},l=[],p=[];for(let T of this.outputs)u(T,l,p);let m=i.slice().reverse();for(let T of m){n[T.id]=T,T.id in t||(t[T.id]=0);let x=t[T.id],I=o[T.outboundLayer.id]==null?0:o[T.outboundLayer.id];x=Math.max(x,I),o[T.outboundLayer.id]=x,s[T.outboundLayer.id]=T.outboundLayer,t[T.id]=x;for(let k=0;k<T.inboundLayers.length;k++){let w=T.inboundLayers[k],F=T.nodeIndices[k],M=w.inboundNodes[F],R=t[M.id]==null?0:t[M.id];t[M.id]=Math.max(x+1,R),n[M.id]=M}}let c={};for(let T in t){let x=t[T];x in c||(c[x]=[]),c[x].push(n[T])}let d={};for(let T in o){let x=o[T];x in d||(d[x]=[]),d[x].push(s[T])}let f=Object.keys(d).map(T=>parseInt(T,10)).sort(Qd);this.layers=[];for(let T of f){let x=d[T];x.sort((I,k)=>{let w=a[I.id],F=a[k.id];return w<F?-1:w>F?1:0});for(let I of x)I instanceof es&&this.internalContainerRefs.push(I),this.layers.push(I)}this.layersByDepth=d,f=Object.keys(c).map(T=>parseInt(T,10)).sort(Qd);let h=this.inputs.slice(),g=[];for(let T of f)for(let x of c[T]){let I=x.outboundLayer;if(I!=null){for(let k of x.inputTensors)if(h.indexOf(k)===-1)throw new en(`Graph disconnected: cannot obtain value for tensor ${k} at layer "${I.name}". The following previous layers were accessed without issue: ${g}`);for(let k of x.outputTensors)h.push(k);g.push(I.name)}}this.nodesByDepth=c;let y=this.layers.map(T=>T.name);for(let T of y){let x=y.filter(I=>I===T).length;if(x!==1)throw new en(`The name "${T}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new ll({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(T=>null),outputMasks:this.outputs.map(T=>null),inputShapes:this.inputs.map(T=>T.shape),outputShapes:this.outputs.map(T=>T.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new z("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},o=0;for(let a of this.layers)for(let i of a.weights){if(n[i.originalName]!=null)throw new z(`Duplicate weight name: ${i.originalName}`);n[i.originalName]=i,o++}let s=[];for(let a in e){let i=a;if(n[a]==null){let u=a.split("/");i=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(n[i]!=null)s.push([n[i],e[a]]);else if(t)throw new z(`Provided weight data has no target variable: ${a}`);delete n[i]}if(t){let a=[];for(let i in n)a.push(i);if(a.length>0)throw new z(`${a.length} of ${o} weights are not set: ${a}`)}Ic(s)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Cf}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=Yy(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return U(()=>{e=vt(e);let n=new Ga;for(let o=0;o<this.inputs.length;++o)n.add(this.inputs[o],e[o]);return dp(this.outputs,n,t)})}computeMask(e,t){return U(()=>{e=vt(e);let n;return t==null?n=$s(null,e.length):n=vt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=Tc(e);if(t.length!==this.inputLayers.length)throw new z(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let u=this.inputLayers[i],l=t[i],p=u.name+"_0_0";n[p]=l}let o=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Qd);if(o.length>1)for(let i of o){let u=this.nodesByDepth[i];for(let l of u){let p=l.outboundLayer;if(this.inputLayers.map(h=>h.id).indexOf(p.id)!==-1)continue;let m=[];for(let h=0;h<l.inboundLayers.length;h++){let g=l.inboundLayers[h],y=l.nodeIndices[h],T=l.tensorIndices[h],x=`${g.name}_${y}_${T}`,I=n[x];m.push(I)}let c=p.computeOutputShape(Fr(m)),d=Tc(c),f=p.inboundNodes.indexOf(l);for(let h=0;h<d.length;h++){let g=`${p.name}_${f}_${h}`;n[g]=d[h]}}}let s=[],a=[];for(let i=0;i<this.outputLayers.length;i++){let u=this.outputLayers[i],l=this.outputLayersNodeIndices[i],p=this.outputLayersTensorIndices[i],m=`${u.name}_${l}_${p}`;a.push(m)}for(let i=0;i<a.length;i++){let u=a[i];Jo(u in n),s.push(n[u])}return Fr(s)}runInternalGraph(e,t){t==null&&(t=$s(null,e.length));let n={};for(let u=0;u<this.inputs.length;++u){let l=this.inputs[u],p=e[u],m=t[u];n[l.id]=[p,m]}let o=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(Qd);for(let u of o){let l=this.nodesByDepth[u];for(let p of l){let m=p.outboundLayer,c=p.inputTensors,d=p.outputTensors,f=new Array;for(let h of c)h.id in n&&f.push(n[h.id]);if(f.length===c.length){let h={},g,y,T,x;if(p.callArgs!=null&&(h=p.callArgs),f.length===1){let[I,k]=f[0];h.mask==null&&(h.mask=k),T=vt(m.call(I,h)),x=vt(m.computeMask(I,k)),g=[I],y=[k]}else g=f.map(I=>I[0]),y=f.map(I=>I[1]),h.mask==null&&(h.mask=y),T=vt(m.call(g,h)),x=vt(m.computeMask(g,y));if(m.activityRegularizer)throw new Pe("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let I=0;I<d.length;++I){let k=d[I],w=T[I],F=x[I];n[k.id]=[w,F]}}}}let s=[],a=[],i=[];for(let u of this.outputs){Jo(u.id in n,`Could not compute output ${u.name} : ${u.id}`);let[l,p]=n[u.id];i.push(l.shape),s.push(l),a.push(p)}return[s,a,i]}buildNodeConversionMap(e){let t={},n;for(let o of this.layers){n=o instanceof es?1:0;for(let s=0;s<o.inboundNodes.length;s++){let a=es.nodeKey(o,s);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new z(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new z("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new z(`No such layer: ${e}`)}calculateLosses(){return U(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let o=es.nodeKey(t,n);this.containerNodes.has(o)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let i=a.getClassName(),u=a.getConfig(),l=[];for(let m=0;m<a.inboundNodes.length;m++){let c=a.inboundNodes[m],d=es.nodeKey(a,m),f={};if(this.containerNodes.has(d)){if(c.callArgs)try{JSON.stringify(c.callArgs),f=c.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${c.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(c.inboundLayers.length>0){let h=[];for(let g=0;g<c.inboundLayers.length;g++){let y=c.inboundLayers[g],T=c.nodeIndices[g],x=c.tensorIndices[g],I=es.nodeKey(y,T),k=t[I];k==null&&(k=0),h.push([y.name,k,x,f])}l.push(h)}}}let p={};p.name=a.name,p.className=i,p.config=u,p.inboundNodes=l,n.push(p)}e.layers=n;let o=[];for(let a=0;a<this.inputLayers.length;a++){let i=this.inputLayers[a],u=this.inputLayersNodeIndices[a],l=es.nodeKey(i,u);if(!this.containerNodes.has(l))continue;let p=t[l];p==null&&(p=0);let m=this.inputLayersTensorIndices[a];o.push([i.name,p,m])}e.inputLayers=o;let s=[];for(let a=0;a<this.outputLayers.length;a++){let i=this.outputLayers[a],u=this.outputLayersNodeIndices[a],l=es.nodeKey(i,u);if(!this.containerNodes.has(l))continue;let p=t[l];p==null&&(p=0);let m=this.outputLayersTensorIndices[a];s.push([i.name,p,m])}return e.outputLayers=s,e}static fromConfig(e,t,n={},o=!1){let s={},a={};function i(g,y){g.name in a?a[g.name].push(y):a[g.name]=[y]}function u(g,y){let T=[],x;for(let I of y){let k=I[0],w=I[1],F=I[2];if(x=I[3]==null?{}:I[3],!(k in s)){i(g,y);return}let M=s[k];if(M.inboundNodes.length<=w){i(g,y);return}let R=M.inboundNodes[w];T.push(R.outputTensors[F])}T.length>0&&g.apply(Fr(T),x)}function l(g){let y=g.name,T=xn(g,t.customObjects!=null?t.customObjects:{});T.setFastWeightInitDuringBuild(o),s[y]=T,g.inboundNodes.forEach(I=>{if(!(I instanceof Array))throw new z(`Corrupted configuration, expected array for nodeData: ${I}`);i(T,I)})}let p=t.name,m=t.layers;for(let g of m)l(g);for(;!kF(a);)for(let g of m){let y=s[g.name];if(y.name in a){let T=a[y.name];delete a[y.name];for(let x of T)u(y,x)}}let c=[],d=[],f=t.inputLayers;for(let g of f){let y=g[0],T=g[1],x=g[2];Jo(y in s);let k=s[y].inboundNodes[T].outputTensors;c.push(k[x])}let h=t.outputLayers;for(let g of h){let y=g[0],T=g[1],x=g[2];Jo(y in s);let k=s[y].inboundNodes[T].outputTensors;d.push(k[x])}return new e({inputs:c,outputs:d,name:p})}get stateful(){if(this._stateful)throw new z("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){U(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function RJ(r,e,t){let n=e.length;if(r==null||Array.isArray(r)&&r.length===0)return e.map(o=>null);if(n===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&e[0]in r?[r[e[0]]]:[r];if(Array.isArray(r)){if(r.length!==n)throw new Error(`Provided ${t} is an array of ${r.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let o=[];return e.forEach(s=>{s in r?o.push(r[s]):o.push(null)}),o}else throw new Error(`The model has multiple (${n}) outputs, so ${t} must be either an array with ${n} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(r)}`)}function Zy(r,e){return RJ(r,e,"classWeight")}async function Qy(r,e,t,n){if(e!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){let o=U(()=>{if(r.shape.length===1)return cn(r);if(r.shape.length===2){if(r.shape[1]>1)return Yu(r,1);if(r.shape[1]===1)return $(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await o.data());Fe(o);let a=[];return s.forEach(i=>{if(t[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(t[i])}),jt(a,"float32")}else return null}function oE(r,e){return _(r,e)}var EJ=32;function iE(r,e){let t,n,o=e;t=o.xs,n=o.ys,b.assert(t!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);let s=sE("input",r.inputNames,t),a=sE("output",r.outputNames,n),i=s[0].shape[0];b.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),b.assert(a.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let u=0;u<s.length;u++)b.assert(s[u].shape[0]===i,()=>`Batch size mismatch: input ${r.inputNames[u]} has ${s[u].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);for(let u=0;u<a.length;u++)b.assert(a[u].shape[0]===i,()=>`Batch size mismatch: output ${r.outputNames[u]} has ${a[u].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);return{xs:s,ys:a}}function sE(r,e,t){if(t instanceof Xe)return[t];if(Array.isArray(t))return b.assert(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${r} keys ${e}.`),t;{let n=[];for(let o of e){if(t[o]==null)throw new z(`The feature data generated by the dataset lacks the required ${r} key '${o}'.`);n.push(t[o])}return n}}function _J(r){if(r.length===3)throw new Pe("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}async function uE(r,e,t){let n=t.batchesPerEpoch!=null;if(b.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),b.assert(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),b.assert(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),b.assert(!n||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),b.assert(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let o=t.validationData!=null,s,a;if(o)if(aE(t.validationData))b.assert(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{let g=_J(t.validationData);s=g.xs,a=g.ys}let i=r.makeTrainFunction(),u=r.getDedupedMetricsNames(),l;o?l=u.slice().concat(u.map(g=>"val_"+g)):l=u.slice();let p=Wy(t.callbacks,t.yieldEvery),m=t.verbose==null?1:t.verbose,{callbackList:c,history:d}=Ky(p,m,t.epochs,null,null,LJ(e,t),null,o,l);c.setModel(r),r.history=d,await c.onTrainBegin(),r.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,h=await e.iterator();for(;f<t.epochs;){let g={};await c.onEpochBegin(f);let y=0,T=0;for(n||(h=await e.iterator());!n||y<t.batchesPerEpoch;){let x=await h.next();if(n&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:I,ys:k}=iE(r,x.value),w={};w.batch=T,w.size=I[0].shape[0],await c.onBatchBegin(T,w);let F=[];if(t.classWeight!=null){let L=Zy(t.classWeight,r.outputNames);for(let O=0;O<L.length;++O)F.push(await Qy(k[O],null,L[O]))}let M=I.concat(k).concat(F),R=i(M);Fe(M);for(let L=0;L<u.length;++L){let O=u[L],W=R[L];w[O]=W,Gt(W)}await c.onBatchEnd(T,w),Uy(w),T++,y++}if(n?y>=t.batchesPerEpoch:x.done){if(o){let I;aE(t.validationData)?I=vt(await r.evaluateDataset(t.validationData,{batches:t.validationBatches})):I=vt(r.evaluate(s,a,{batchSize:t.validationBatchSize==null?EJ:t.validationBatchSize,verbose:0}));for(let k=0;k<r.metricsNames.length;++k)g[`val_${r.metricsNames[k]}`]=I[k]}break}if(r.stopTraining_)break}if(await c.onEpochEnd(f,g),f++,r.stopTraining_)break}return await c.onTrainEnd(),await r.history.syncData(),r.history}finally{r.isTraining=!1}}function LJ(r,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(r.size)&&(t=r.size),t}function aE(r){return typeof r.iterator=="function"}function $J(r){return typeof r.next=="function"}async function lE(r,e,t){t=t||{};let n=t.batches!=null,o=r.testFunction,s=[];if(t.verbose>0)throw new Pe("Verbose mode is not implemented yet.");b.assert(!n||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);let a=$J(e)?e:await e.iterator(),i=0,u=0;for(;!n||u<t.batches;){let l=await a.next();if(s=U(()=>{if(l.value){let{xs:p,ys:m}=iE(r,l.value),c=p.concat(m),d=U(()=>o(c));if(Fe(c),u===0)for(let h=0;h<d.length;++h)s.push(ce(0));let f=c[0].shape[0];for(let h=0;h<d.length;++h){let g=d[h],y=s[h];s[h]=U(()=>Z(s[h],_(f,g))),u>0&&Fe(y)}Fe(d),i+=f,++u}return s}),l.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<s.length;++l){let p=s[l];s[l]=me(s[l],i),Fe(p)}return Fr(s)}function Jy(r){b.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function Ac(r,e,t){return r==null?[null]:Array.isArray(r)?r.map(n=>lu(n,e,t-e)):lu(r,e,t-e)}function eT(r,e){return U(()=>r==null?null:Array.isArray(r)?r.map(t=>eT(t,e)):Ry(r,e.dtype==="int32"?e:ne(e,"int32")))}function tT(r,e){let t=[],n=0,o=null;for(;n<r;)o=n+e,o>=r&&(o=r),t.push([n,o]),n=o;return t}async function BJ(r,e,t,n,o,s,a,i,u,l,p,m,c,d,f){o==null&&(o=32),s==null&&(s=1),p==null&&(p=!0),c==null&&(c=0);let h=!1;if(u!=null&&l!=null&&(h=!0),f!=null&&(h=!0,d==null))throw new z("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=r.checkNumSamples(t,o,d,"steps_per_epoch"),y;g!=null&&(y=tn(0,g)),a==null&&(a=1);let{callbackList:T,history:x}=Ky(i,a,s,c,g,d,o,h,m);T.setModel(r),r.history=x,await T.onTrainBegin(),r.stopTraining_=!1;for(let I=c;I<s;++I){await T.onEpochBegin(I);let k={};if(d!=null)throw new Pe("stepsPerEpoch mode is not implemented yet.");{if(p==="batch")throw new Pe("batch shuffling is not implemneted yet");p&&b.shuffle(y);let w=jt(y),F=tT(g,o);for(let M=0;M<F.length;++M){let R={};if(await T.onBatchBegin(M,R),U(()=>{let L=F[M][0],O=F[M][1],W=lu(w,L,O-L);R.batch=M,R.size=O-L;let V=eT(t,W),j=e(V);for(let q=0;q<n.length;++q){let Y=n[q],J=j[q];R[Y]=J,Gt(J)}if(M===F.length-1&&h){let q=r.testLoop(u,l,o);for(let Y=0;Y<n.length;++Y){let J=n[Y],H=q[Y];Gt(H),k["val_"+J]=H}}}),await T.onBatchEnd(M,R),Uy(R),r.stopTraining_)break}w.dispose()}if(await T.onEpochEnd(I,k),r.stopTraining_)break}return await T.onTrainEnd(),await r.history.syncData(),r.history}async function pE(r,e,t,n={}){if(r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;let o,s,a,i,u,l,p,m,c;try{let d=n.batchSize==null?32:n.batchSize;Jy(d);let f=!1,h=await r.standardizeUserData(e,t,n.sampleWeight,n.classWeight,f,d);o=h[0],s=h[1],c=h[2];let g=!1,y;if(n.validationData!=null&&n.validationData.length>0){if(g=!0,n.validationData.length===2)u=n.validationData[0],l=n.validationData[1];else throw n.validationData.length===3?new Pe("validationData including sample weights is not supported yet."):new z(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let R=!0,L=await r.standardizeUserData(u,l,null,null,R,d);p=L[0],m=L[1],y=p.concat(m)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){g=!0;let R=Math.floor(o[0].shape[0]*(1-n.validationSplit)),L=o[0].shape[0];p=Ac(o,R,L),a=o,o=Ac(o,0,R),m=Ac(s,R,L),i=s,s=Ac(s,0,R),y=p.concat(m)}else n.validationSteps!=null&&(g=!0);let T=o.concat(s).concat(c);r.checkTrainableWeightsConsistency();let x=r.makeTrainFunction(),I=r.getDedupedMetricsNames(),k,w;g?(r.makeTestFunction(),k=r.testFunction,w=I.slice().concat(I.map(R=>"val_"+R))):(k=null,y=[],w=I.slice());let F=Wy(n.callbacks,n.yieldEvery);return await BJ(r,x,T,I,d,n.epochs,n.verbose,F,k,y,n.shuffle,w,n.initialEpoch,null,null)}finally{r.isTraining=!1,Us(o,e),Us(s,t),Us(a,e),Us(i,t),Us(p,u),Us(m,l),c!=null&&Fe(c)}}function Zk(r){let e=[];r instanceof Xe&&(r=[r]);for(let t=0;t<r.length;++t){let n=r[t];if(n.rank===1)e.push(pu(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(n)}}return e}function Us(r,e){if(r==null)return;let t=[];if(e instanceof Xe)t.push(e.id);else if(Array.isArray(e))e.forEach(o=>t.push(o.id));else if(e!=null)for(let o in e){let s=e[o];t.push(s.id)}let n=[];if(r instanceof Xe)t.indexOf(r.id)===-1&&n.push(r);else if(Array.isArray(r))r.forEach(o=>{t.indexOf(o.id)===-1&&n.push(o)});else if(r!=null)for(let o in r){let s=r[o];t.indexOf(s.id)===-1&&n.push(s)}n.forEach(o=>{o.isDisposed||o.dispose()})}function OJ(r){return r instanceof Xe}function Qk(r){return Array.isArray(r)}function mE(r){return!OJ(r)&&!Qk(r)}function cE(r,e,t,n=!0,o=""){if(e==null||e.length===0){if(r!=null){let a=!1;if(Qk(r)&&r.length>0)a=!0;else if(mE(r)){for(let i in r)if(r.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new z(`Error when checking model ${o} expected no data, but got ${r}`)}return[]}if(r==null)return e.map(a=>null);let s;if(mE(r)){r=r,s=[];for(let a of e){if(r[a]==null)throw new z(`No data provided for "${a}". Need data for each key in: ${e}`);s.push(r[a])}}else if(Qk(r)){if(r=r,r.length!==e.length)throw new z(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,e.length>1)throw new z(`The model ${o} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=Zk(s),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new z(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${i.shape}`);for(let u=0;u<t[a].length;++u){if(u===0&&!n)continue;let l=i.shape[u],p=t[a][u];if(p!=null&&p>=0&&l!==p)throw new z(`${o} expected a batch of elements where each example has shape [${t[a].slice(1,t[a].length)}] (i.e.,tensor shape [*,${t[a].slice(1,t[a].length)}]) but the ${o} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function zJ(r,e,t){let n=Os(r.map(s=>s.shape[0]));n.sort();let o=Os(e.map(s=>s.shape[0]));if(o.sort(),n.length>1)throw new z(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(o.length>1)throw new z(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(n.length>0&&o.length>0&&!b.arraysEqual(n,o))throw new z(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${o[0]} target sample(s).`)}function GJ(r,e,t){let n=[xi,vc,fp];for(let o=0;o<r.length;++o){let s=r[o],a=e[o],i=t[o];if(a!=null){if(a===fp&&s.shape[s.shape.length-1]===1)throw new z(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(a)!==-1){let u=s.shape.slice(1),l=i.slice(1);for(let p=0;p<u.length;++p){let m=u[p],c=l[p];if(c!=null&&m!==c)throw new z(`A target Tensor with shape ${s.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function dE(r,e,t,n=!0,o=""){let s;if(Array.isArray(r)){if(r.length!==e.length)throw new z(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(e.length>1)throw new z(`The model expects ${e.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new z(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let u=0;u<t[a].length;++u){if(u===0&&!n)continue;let l=i.shape[u],p=t[a][u];if(p!=null&&p!==l)throw new z(`Error when checking ${o}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function UJ(r,e){if(r==null||Array.isArray(r)&&r.length===0)return e.map(n=>[]);let t;if(typeof r=="string"||typeof r=="function")t=[r];else if(Array.isArray(r)||typeof r=="object")t=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(t))return e.map(n=>t);{let n=[];for(let o of e){let s=t.hasOwnProperty(o)?t[o]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var WJ="layers-model",ts=class extends es{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new z("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");rE(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=tE(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Jr))throw new z("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new z(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(Vy(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new z(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>Vy(i))}else{let a=Vy(e.loss);this.outputs.forEach(i=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let i=this.internalOutputShapes[a],u=this.outputNames[a];this.feedOutputNames.push(u),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Oa("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let o=UJ(e.metrics,this.outputNames),s=(a,i,u)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([u,a])};Oa("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=o[a];(l=>{let p="",m,c,d;for(let f of l){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){let g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===vc?["accuracy","acc"].indexOf(f)!==-1?c=yf:["crossentropy","ce"].indexOf(f)!==-1&&(c=qy):this.lossFunctions[a]===Sc?["accuracy","acc"].indexOf(f)!==-1?c=jy:["crossentropy","ce"].indexOf(f)!==-1&&(c=jk):["accuracy","acc"].indexOf(f)!==-1?c=Tf:["crossentropy","ce"].indexOf(f)!==-1&&(c=xf);let y;["accuracy","acc"].indexOf(f)!==-1?y="acc":["crossentropy","ce"].indexOf(f)!==-1&&(y="ce"),d=c,m=p+y}else d=JR(f),m=p+If(f);let h;Oa(m,()=>{h=d}),s(a,m,h)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let o=n.batchSize==null?32:n.batchSize;Jy(o);let s=!0,a=this.standardizeUserDataXY(e,t,s,o);try{let i=a[0].concat(a[1]);this.makeTestFunction();let u=this.testFunction,l=this.testLoop(u,i,o,n.verbose,n.steps);return Fr(l)}finally{Us(a[0],e),Us(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),lE(this,e,t)}checkNumSamples(e,t,n,o="steps"){let s;if(n!=null){if(s=null,t!=null)throw new z(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?s=e[0].shape[0]:s=e.shape[0];else throw new z(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return s}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new z("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),o=n?t:[t],s=this.retrieveSymbolicTensors(o),a=new Ga;if(e instanceof Xe&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new z(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)a.add(this.inputs[u],e[u])}else for(let u of this.inputs){let l=e[u.name];if(l==null)throw new z(`No value is provided for the model's input ${u.name}`);a.add(u,l)}let i=dp(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){let t=$s(null,e.length),n=e.length;for(let o of this.layers){let s=Array.isArray(o.output)?o.output:[o.output],a=s.map(i=>i.name);for(let i=0;i<e.length;++i){let u=a.indexOf(e[i]);if(u!==-1&&(t[i]=s[u],n--),n===0)break}if(n===0)break}if(n>0){let o=[];throw t.forEach((s,a)=>{s==null&&o.push(e[a])}),new z(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return t}predictLoop(e,t=32,n=!1){return U(()=>{let o=this.checkNumSamples(e);if(n)throw new Pe("Verbose predictLoop() is not implemented yet.");let s=tT(o,t),a=this.outputs.map(i=>[]);for(let i=0;i<s.length;++i)U(()=>{let l=s[i][0],p=s[i][1],m=Ac(e,l,p),c=[];if(Array.isArray(m))for(let f=0;f<m.length;++f)c.push({key:this.inputs[f],value:m[f]});else c.push({key:this.inputs[0],value:m});let d=new Ga(c);return dp(this.outputs,d)}).forEach((l,p)=>a[p].push(l));return Fr(a.map(i=>mt(i,0)))})}predict(e,t={}){let n=Zk(e);dE(n,this.inputNames,this.feedInputShapes,!1);try{let o=t.batchSize==null?32:t.batchSize;return Jy(o),this.predictLoop(n,o)}finally{Us(n,e)}}predictOnBatch(e){dE(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,o){if(this.optimizer_==null)throw new en("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let a=0;a<this.feedOutputShapes.length;++a){let i=this.feedOutputShapes[a];this.feedLossFns[a]===Sc?s.push(i.slice(0,i.length-1).concat([1])):s.push(i)}if(e=cE(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=cE(t,this.feedOutputNames,s,!1,"target"),zJ(e,t,null),GJ(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&e[0].shape[0]%o!==0)throw new z(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,o,s=!0,a){let[i,u]=this.standardizeUserDataXY(e,t,s,a);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(o!=null){let p=Zy(o,this.outputNames);l=[];for(let m=0;m<p.length;++m)l.push(await Qy(u[m],null,p[m]))}return[i,u,l]}testLoop(e,t,n,o=0,s){return U(()=>{let a=this.checkNumSamples(t,n,s,"steps"),i=[];if(o>0)throw new Pe("Verbose mode is not implemented yet.");if(s!=null)throw new Pe("steps mode in testLoop() is not implemented yet");{let u=tT(a,n),l=jt(tn(0,a));for(let p=0;p<u.length;++p){let m=u[p][0],c=u[p][1],d=lu(l,m,c-m),f=eT(t,d),h=e(f);if(p===0)for(let g=0;g<h.length;++g)i.push(ce(0));for(let g=0;g<h.length;++g){let y=h[g];i[g]=Z(i[g],_(c-m,y))}}for(let p=0;p<i.length;++p)i[p]=me(i[p],a)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let o=e[n],s=o;Mk(e,o)>1&&(s+=`_${Mk(e.slice(0,n),o)}`),t.push(s)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{let m=[];for(let h=0;h<this.inputs.length;++h)m.push({key:this.inputs[h],value:n[h]});let c=new Ga(m),d=dp(this.outputs,c,{training:!0}),f;for(let h=0;h<this.lossFunctions.length;++h){let y=this.lossFunctions[h](o[h],d[h]);s[h]!=null&&(y=oE(y,s[h]));let T=Bt(y);t.push(T),h===0?f=y:f=Z(f,y)}for(let h=0;h<this.metricsTensors.length;++h){let g;if(this.outputs.length>1&&h<this.outputs.length)g=t[h];else{let y=this.metricsTensors[h][0],T=this.metricsTensors[h][1];g=Bt(y(o[T],d[T]))}Gt(g),a.push(g)}return f=Bt(f),this.calculateLosses().forEach(h=>{f=Z(f,h)}),f},u=this.collectedTrainableWeights.map(m=>m.read()),l=!0;return[this.optimizer_.minimize(i,l,u)].concat(a)}}makeTestFunction(){this.testFunction=e=>U(()=>{let t=[],n,o=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let l=0;l<this.inputs.length;++l)a.push({key:this.inputs[l],value:o[l]});let i=new Ga(a),u=dp(this.outputs,i);for(let l=0;l<this.lossFunctions.length;++l){let p=this.lossFunctions[l],m=Bt(p(s[l],u[l]));l===0?n=m:n=Z(n,m),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let p=this.metricsTensors[l][0],m=this.metricsTensors[l][1],c=Bt(p(s[m],u[m]));t.push(c)}return t})}async fit(e,t,n={}){return pE(this,e,t,n)}async fitDataset(e,t){return uE(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),o=n[0],s=n[1],i=this.makeTrainFunction()(o.concat(s)),u=[];for(let l of i){let p=await l.data();u.push(p[0])}return Fe(i),Us(n[0],e),Us(n[1],t),Fr(u)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,o=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<o.length;++a)n&&!o[a].trainable||t.push({name:o[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=zd().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-zd().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Bs(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Bs(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let o of t)if(typeof n[o]=="string")e[o]=Bs(n[o]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Bs(If(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Bs(If(e)));{let e={};for(let t in this.metrics)e[t]=Bs(If(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=hp(e.optimizer_config),n=xn(t),o;if(typeof e.loss=="string")o=uu(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(a=>uu(a));else if(e.loss!=null){o={};for(let a in e.loss)o[a]=uu(e.loss[a])}let s;if(Array.isArray(e.metrics))s=e.metrics.map(a=>uu(a));else if(e.metrics!=null){s={};for(let a in e.metrics)s[a]=uu(e.metrics[a])}this.compile({loss:o,metrics:s,optimizer:n})}async save(e,t){if(typeof e=="string"){let l=Fn.getSaveHandlers(e);if(l.length===0)throw new z(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new z(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new z("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Fn.encodeWeights(this.getNamedWeights(t)),o=!1,s=null,i={modelTopology:this.toJSON(s,o),format:WJ,generatedBy:`TensorFlow.js tfjs-layers v${Cf}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();let l="optimizer",{data:p,specs:m}=await Fn.encodeWeights(await this.optimizer.getWeights(),l);n.specs.push(...m),n.data=Fn.concatenateArrayBuffers([n.data,p])}return this.userDefinedMetadata!=null&&(Yk(this.userDefinedMetadata,this.name,!0),i.userDefinedMetadata=this.userDefinedMetadata),i.weightData=n.data,i.weightSpecs=n.specs,e.save(i)}setUserDefinedMetadata(e){Yk(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};ts.className="Model";te.registerClass(ts);var Jk=class extends ts{};Jk.className="Functional";te.registerClass(Jk);async function fE(r,e){"modelTopology"in r||(r={modelTopology:r}),r=r;let t=r.modelTopology;t.model_config!=null&&(t=t.model_config);let n=hp(t),o=xn(n,e);if(r.weightsManifest!=null){let s=await Fn.loadWeights(r.weightsManifest,r.pathPrefix,o.weights.map(i=>i.originalName)),a={};for(let i of o.weights)a[i.originalName]=s[i.originalName];o.loadWeights(a),Fe(s)}return o}async function hE(r,e){if(e==null&&(e={}),typeof r=="string"){let t=Fn.getLoadHandlers(r,e);if(t.length===0)t.push(Fn.browserHTTPRequest(r,e));else if(t.length>1)throw new z(`Found more than one (${t.length}) load handlers for URL '${r}'`);r=t[0]}return KJ(r,void 0,e)}async function KJ(r,e,t){if(t==null&&(t={}),r.load==null)throw new z("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let n=await r.load(),o=n.modelTopology;o.model_config!=null&&(o=o.model_config);let s=t.strict==null?!0:t.strict,a=n.weightData!=null&&n.weightSpecs!=null&&s,i=xn(hp(o),e,a),u=n.trainingConfig;if(u!=null&&i.loadTrainingConfig(u),n.userDefinedMetadata!=null&&i.setUserDefinedMetadata(n.userDefinedMetadata),n.weightData!=null){if(n.weightSpecs==null)throw new z("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:l,optimizerWeights:p}=VJ(n.weightData,n.weightSpecs);i.loadWeights(l,s),i.optimizer!=null&&p.length>0&&await i.optimizer.setWeights(p),Fe(l),Fe(p.map(m=>m.tensor))}return i}function VJ(r,e){let t=Fn.decodeWeights(r,e),n={},o=[];return e.forEach(s=>{s.group==="optimizer"?o.push({name:s.name,tensor:t[s.name]}):n[s.name]=t[s.name]}),{modelWeights:n,optimizerWeights:o}}var rT=class extends ts{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:il("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new z(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof rT||e instanceof ts,n;if(t){if(n=e,n.outputs.length!==1)throw new z("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new z("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new z("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let o=$y({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new z(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new z("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Bk(this.outputs[0])}this.inboundNodes=[],new ll({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:$s(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{let o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(nt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ts({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new en("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new en("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new en("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new en("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},o=!1){let s,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new z("Legacy serialization format not supported yet.");s=t}else b.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,a=t;let i=new e(a);if(!(i instanceof rT))throw new Pe(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let u of s){let p=xn(u,void 0,o);o&&p.setFastWeightInitDuringBuild(!0),i.add(p)}return i}set stopTraining(e){if(this.model==null)throw new z("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new z("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},wc=rT;wc.className="Sequential";te.registerClass(wc);function HJ(r){return new ts(r)}function qJ(r){return new wc(r)}function jJ(r,e){return e==null&&(e={}),hE(r,e)}function eS(r){return $y(r)}function XJ(r,e){ff.registerCallbackConstructor(r,e)}var In=class extends te.Serializable{getConfig(){return{}}},rS=class extends In{apply(e,t=1){return BF(e,t)}};rS.className="elu";te.registerClass(rS);var nS=class extends In{apply(e){return ay(e)}};nS.className="selu";te.registerClass(nS);var oS=class extends In{apply(e){return Qr(e)}};oS.className="relu";te.registerClass(oS);var sS=class extends In{apply(e){return U(()=>nl(6,Qr(e)))}};sS.className="relu6";te.registerClass(sS);var aS=class extends In{apply(e){return e}};aS.className="linear";te.registerClass(aS);var iS=class extends In{apply(e){return En(e)}};iS.className="sigmoid";te.registerClass(iS);var uS=class extends In{apply(e){return zF(e)}};uS.className="hardSigmoid";te.registerClass(uS);var lS=class extends In{apply(e){return su(e)}};lS.className="softplus";te.registerClass(lS);var pS=class extends In{apply(e){return OF(e)}};pS.className="softsign";te.registerClass(pS);var mS=class extends In{apply(e){return Zu(e)}};mS.className="tanh";te.registerClass(mS);var kf=class extends In{apply(e,t=-1){return oc(e,t)}};kf.className="softmax";te.registerClass(kf);var cS=class extends In{apply(e,t=-1){return Yb(e,t)}};cS.className="logSoftmax";te.registerClass(cS);var dS=class extends In{apply(e,t=1){return U(()=>_(En(_(e,t)),e))}};dS.className="swish";te.registerClass(dS);var fS=class extends In{apply(e){return U(()=>_(e,Zu(su(e))))}};fS.className="mish";te.registerClass(fS);function Wa(r){return r.getClassName()}function tS(r,e={}){return gi(r,te.SerializationMap.getMap().classNameMap,e,"activation")}function Ka(r){if(r==null){let e={};return e.className="linear",e.config={},tS(e)}if(typeof r=="string"){let e={};return e.className=r,e.config={},tS(e)}else return r instanceof In?r:tS(r)}function hS(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var gS=class extends te.Serializable{},gp=class extends gS{constructor(e){super();hS(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return U(()=>{let t=It([1]);return this.hasL1&&(t=Z(t,de(_(this.l1,Ut(e))))),this.hasL2&&(t=Z(t,de(_(this.l2,mp(e))))),$(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};gp.className="L1L2";te.registerClass(gp);function yE(r){return hS(r),new gp({l1:r!=null?r.l1:null,l2:0})}function TE(r){return hS(r),new gp({l2:r!=null?r.l2:null,l1:0})}var gE={l1l2:"L1L2"};function bt(r){return lc(r)}function bE(r,e={}){return gi(r,te.SerializationMap.getMap().classNameMap,e,"regularizer")}function At(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in gE?gE[r]:r,config:{}};return bE(t)}else return r instanceof gS?r:bE(r)}var Sf=class extends Ke{constructor(e){super(e??{});this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Oe(e);let n=Qr(e);return this.maxValue!=null&&(n=Or(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Sf.className="ReLU";te.registerClass(Sf);var vf=class extends Ke{constructor(e){super(e??{});this.DEFAULT_ALPHA=.3;e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Oe(e);return Xm(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};vf.className="LeakyReLU";te.registerClass(vf);var Af=class extends Ke{constructor(e){super(e??{});this.DEFAULT_ALPHA_INITIALIZER="zeros";if(e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ct(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=At(e.alphaRegularizer),this.alphaConstraint=Yt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new z(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=nt(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let o of this.sharedAxes)t[o-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let o=1;o<e.length;++o)n[o]=e[o];this.inputSpec=[new Mt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Oe(e),ec(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Ft(this.alphaInitializer),alphaRegularizer:bt(this.alphaRegularizer),alphaConstraint:Xt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Af.className="PReLU";te.registerClass(Af);var wf=class extends Ke{constructor(e){super(e??{});this.DEFAULT_ALPHA=1;if(e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Pe(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Oe(e);return el(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};wf.className="ELU";te.registerClass(wf);var Nf=class extends Ke{constructor(e){super(e??{});this.DEFAULT_THETA=1;e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Oe(e);return _(n,ne(pr(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Nf.className="ThresholdedReLU";te.registerClass(Nf);var Df=class extends Ke{constructor(e){super(e??{});this.DEFAULT_AXIS=1;e==null&&(e={}),this.softmax=new kf().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Oe(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Df.className="Softmax";te.registerClass(Df);function cl(r,e,t){if(typeof r=="number")return $s(r,e);if(r.length!==e)throw new z(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${r.length} elements.`);for(let n=0;n<e;++n){let o=r[n];if(!EF(o))throw new z(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(r)} including a non-integer number ${o}`)}return r}function Ln(r,e,t,n,o=1){if(r==null)return r;let s=e+(e-1)*(o-1),a;return t==="same"?a=r:a=r-s+1,Math.floor((a+n-1)/n)}function Va(r,e,t,n){if(r==null)return null;if(n==="valid")r=r*e+za([t-e,0]);else if(n==="same")r=r*e;else throw new z(`Unsupport padding mode: ${n}.`);return r}function Lf(r,e){return U(()=>(Kt(e),e==="channelsFirst"?We(r,[0,2,3,1]):r))}function yS(r,e){return U(()=>(Kt(e),e==="channelsFirst"?We(r,[0,2,3,4,1]):r))}function ZJ(r,e,t,n=1,o="valid",s,a=1){return U(()=>{if(s==null&&(s=gn()),Kt(s),r.shape.length!==3)throw new z(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(e.shape.length!==3)throw new z(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new z(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(s==="channelsFirst"&&(r=We(r,[0,2,1])),o==="causal")throw new Pe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=zb(r,e,n,o==="same"?"same":"valid","NWC",a);return t!=null&&(i=bn(i,t)),i})}function xE(r,e,t,n=[1,1],o="valid",s,a,i=null){return U(()=>{if(s==null&&(s=gn()),Kt(s),r.rank!==3&&r.rank!==4)throw new z(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(e.rank!==3&&e.rank!==4)throw new z(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let u=Lf(r,s);if(o==="causal")throw new Pe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=sl.conv2d({x:u,filter:e,strides:n,pad:o==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:i}),s==="channelsFirst"&&(u=We(u,[0,3,1,2])),u})}function QJ(r,e,t,n=[1,1,1],o="valid",s,a){return U(()=>{if(s==null&&(s=gn()),Kt(s),r.rank!==4&&r.rank!==5)throw new z(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(e.rank!==4&&e.rank!==5)throw new z(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let i=yS(r,s);if(o==="causal")throw new Pe("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Ub(i,e,n,o==="same"?"same":"valid","NDHWC",a),t!=null&&(i=bn(i,t)),s==="channelsFirst"&&(i=We(i,[0,4,1,2,3])),i})}var Pc=class extends Ke{constructor(e,t){super(t);this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(Pc.verifyArgs(t),this.rank=e,nr(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Pe(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=cl(t.kernelSize,e,"kernelSize"),this.strides=cl(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,hn(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Kt(this.dataFormat),this.activation=Ka(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Ct(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Yt(t.biasConstraint),this.biasRegularizer=At(t.biasRegularizer),this.activityRegularizer=At(t.activityRegularizer),this.dilationRate=cl(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new z(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new z(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new z(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Jo("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!vy(e.kernelSize,"number",1,3))throw new z(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Wa(this.activation),useBias:this.useBias,biasInitializer:Ft(this.biasInitializer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),biasConstraint:Xt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},bp=class extends Pc{constructor(e,t){super(e,t);this.kernel=null;bp.verifyArgs(t),this.filters=t.filters,nr(this.filters,"filters"),this.kernelInitializer=Ct(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Yt(t.kernelConstraint),this.kernelRegularizer=At(t.kernelRegularizer)}build(e){e=nt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new z(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return U(()=>{e=Oe(e);let n,o=this.bias==null?null:this.bias.read(),s=Ay(this.activation.getClassName());if(s!=null&&this.rank===2)n=xE(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)n=ZJ(e,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=xE(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=QJ(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Pe("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=nt(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){let a=Ln(n[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);t.push(a)}let o=[e[0]];return this.dataFormat==="channelsLast"?(o=o.concat(t),o.push(this.filters)):(o.push(this.filters),o=o.concat(t)),o}getConfig(){let e={filters:this.filters,kernelInitializer:Ft(this.kernelInitializer),kernelRegularizer:bt(this.kernelRegularizer),kernelConstraint:Xt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new z(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},TS=class extends bp{constructor(e){super(2,e);TS.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!vy(e.kernelSize,"number",1,2))throw new z(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},Nc=TS;Nc.className="Conv2D";te.registerClass(Nc);var xS=class extends bp{constructor(e){super(3,e);xS.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new z(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},Dc=xS;Dc.className="Conv3D";te.registerClass(Dc);var Pf=class extends Nc{constructor(e){super(e);if(this.inputSpec=[new Mt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new z(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=nt(e),e.length!==4)throw new z("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new z("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Mt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return U(()=>{let n=Oe(e);if(n.shape.length!==4)throw new z(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);let u=o[a],l=o[i],p=this.kernelSize[0],m=this.kernelSize[1],c=this.strides[0],d=this.strides[1],f=Va(u,c,p,this.padding),h=Va(l,d,m,this.padding),g=[s,f,h,this.filters];this.dataFormat!=="channelsLast"&&(n=We(n,[0,2,3,1]));let y=Gb(n,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=We(y,[0,3,1,2])),this.bias!=null&&(y=bn(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(e){e=nt(e);let t=e.slice(),n,o,s;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3):(n=3,o=1,s=2);let a=this.kernelSize[0],i=this.kernelSize[1],u=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[o]=Va(t[o],u,a,this.padding),t[s]=Va(t[s],l,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Pf.className="Conv2DTranspose";te.registerClass(Pf);var Ff=class extends Dc{constructor(e){super(e);if(this.inputSpec=[new Mt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new z(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=nt(e),e.length!==5)throw new z("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new z("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Mt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return U(()=>{let n=Oe(e);if(n.shape.length!==5)throw new z(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],a,i,u;this.dataFormat==="channelsFirst"?(u=2,a=3,i=4):(u=1,a=2,i=3);let l=o[u],p=o[a],m=o[i],c=this.kernelSize[0],d=this.kernelSize[1],f=this.kernelSize[2],h=this.strides[0],g=this.strides[1],y=this.strides[2],T=Va(l,h,c,this.padding),x=Va(p,g,d,this.padding),I=Va(m,y,f,this.padding),k=[s,T,x,I,this.filters];this.dataFormat!=="channelsLast"&&(n=We(n,[0,2,3,4,1]));let w=Kb(n,this.kernel.read(),k,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(w=We(w,[0,4,1,2,3])),this.bias!==null&&(w=bn(w,this.bias.read(),this.dataFormat)),this.activation!==null&&(w=this.activation.apply(w)),w})}computeOutputShape(e){e=nt(e);let t=e.slice(),n,o,s,a;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3,a=4):(n=4,o=1,s=2,a=3);let i=this.kernelSize[0],u=this.kernelSize[1],l=this.kernelSize[2],p=this.strides[0],m=this.strides[1],c=this.strides[2];return t[n]=this.filters,t[o]=Va(t[o],p,i,this.padding),t[s]=Va(t[s],m,u,this.padding),t[a]=Va(t[a],c,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Ff.className="Conv3DTranspose";te.registerClass(Ff);var bS=class extends bp{constructor(e,t){super(e,t);this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform";this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform";this.depthwiseKernel=null;this.pointwiseKernel=null;if(t.filters==null)throw new z("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new z("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new z(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Ct(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=At(t.depthwiseRegularizer),this.depthwiseConstraint=Yt(t.depthwiseConstraint),this.pointwiseInitializer=Ct(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=At(t.pointwiseRegularizer),this.pointwiseConstraint=Yt(t.pointwiseConstraint)}build(e){if(e=nt(e),e.length<this.rank+2)throw new z(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new z(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],o=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let i=0;i<this.rank;++i)s.push(1);s.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Mt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return U(()=>{e=Oe(e);let n;if(this.rank===1)throw new Pe("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=We(e,[0,2,3,1])),n=iy(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=bn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=We(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ft(this.depthwiseInitializer),e.pointwiseInitializer=Ft(this.pointwiseInitializer),e.depthwiseRegularizer=bt(this.depthwiseRegularizer),e.pointwiseRegularizer=bt(this.pointwiseRegularizer),e.depthwiseConstraint=Xt(this.depthwiseConstraint),e.pointwiseConstraint=Xt(this.pointwiseConstraint),e}};bS.className="SeparableConv";var Mf=class extends bS{constructor(e){super(2,e)}};Mf.className="SeparableConv2D";te.registerClass(Mf);var IS=class extends bp{constructor(e){super(1,e);IS.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!vy(e.kernelSize,"number",1,1))throw new z(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},Rf=IS;Rf.className="Conv1D";te.registerClass(Rf);var Ef=class extends Ke{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return U(()=>{if(e=Oe(e),this.dataFormat==="channelsLast"){let n=ef(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ef(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=ef(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ef(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Ef.className="Cropping2D";te.registerClass(Ef);var _f=class extends Ke{constructor(e){super(e);this.DEFAULT_SIZE=[2,2];this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Kt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,MF(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return U(()=>{let n=Oe(e),o=n.shape;if(this.dataFormat==="channelsFirst"){n=We(n,[0,2,3,1]);let s=this.size[0]*o[2],a=this.size[1]*o[3],i=this.interpolation==="nearest"?al.resizeNearestNeighbor(n,[s,a]):al.resizeBilinear(n,[s,a]);return We(i,[0,3,1,2])}else{let s=this.size[0]*o[1],a=this.size[1]*o[2];return this.interpolation==="nearest"?al.resizeNearestNeighbor(n,[s,a]):al.resizeBilinear(n,[s,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};_f.className="UpSampling2D";te.registerClass(_f);function JJ(r,e,t=[1,1],n="valid",o,s){return U(()=>{o==null&&(o=gn()),Kt(o);let a=Lf(r,o);if(r.rank!==4)throw new z(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(e.rank!==4)throw new z(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=Ju(a,e,t,n==="same"?"same":"valid","NHWC",s),o==="channelsFirst"&&(a=We(a,[0,3,1,2])),a})}var $f=class extends Pc{constructor(e){super(2,e);this.depthwiseKernel=null;this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Ct(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Yt(e.depthwiseConstraint),this.depthwiseRegularizer=At(e.depthwiseRegularizer)}build(e){if(e=nt(e),e.length<4)throw new z(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new z(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],o=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return U(()=>{e=Oe(e);let n=JJ(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=bn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=nt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Ln(t,this.kernelSize[0],this.padding,this.strides[0]),a=Ln(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],o,s,a]:[e[0],s,a,o]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ft(this.depthwiseInitializer),e.depthwiseRegularizer=bt(this.depthwiseRegularizer),e.depthwiseConstraint=Xt(this.depthwiseRegularizer),e}};$f.className="DepthwiseConv2D";te.registerClass($f);function CS(r,e,t,n){if(Array.isArray(r)){if(e!=null||t!=null)throw new z("When inputs is an array, neither initialState or constants should be provided");n!=null&&(t=r.slice(r.length-n,r.length),r=r.slice(0,r.length-n)),r.length>1&&(e=r.slice(1,r.length)),r=r[0]}function o(s){return s==null||Array.isArray(s)?s:[s]}return e=o(e),t=o(t),{inputs:r,initialState:e,constants:t}}function kS(r,e,t,n=!1,o,s,a=!1,i=!1){return U(()=>{let u=e.shape.length;if(u<3)throw new z(`Input should be at least 3D, but is ${u}D.`);let l=[1,0].concat(tn(2,u));if(e=We(e,l),s!=null)throw new Pe("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=ne(ne(o,"bool"),"float32"),o.rank===u-1&&(o=Er(o,-1)),o=We(o,l)),n&&(e=Dr(e,0),o!=null&&(o=Dr(o,0)));let p=[],m,c=t,d=e.shape[0],f=Gr(e),h;o!=null&&(h=Gr(o));for(let y=0;y<d;++y){let T=f[y],x=U(()=>r(T,c));if(o==null)m=x[0],c=x[1];else{let I=U(()=>{let k=h[y],w=le(_r(k),k),F=Z(_(x[0],k),_(c[0],w)),M=c.map((R,L)=>Z(_(x[1][L],k),_(R,w)));return{output:F,newStates:M}});m=I.output,c=I.newStates}i&&p.push(m)}let g;return i&&(g=br(p,1)),[m,g,c]})}var SS=class extends Ke{constructor(e){super(e);let t;if(e.cell==null)throw new z("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Rc({cells:e.cell}):t=e.cell,t.stateSize==null)throw new z("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Mt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return tn(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){_y(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],o;if(this.returnSequences?o=[e[0],e[1],n]:o=[e[0],n],this.returnState){let s=[];for(let a of t)s.push([e[0],a]);return[o].concat(s)}else return o}computeMask(e,t){return U(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let o=this.states.map(s=>null);return[n].concat(o)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Pe("Constants support is not implemented in RNN yet.");_y(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,o=e.slice(2);this.inputSpec[0]=new Mt({shape:[n,null,...o]});let s=[e[0]].concat(e.slice(2));this.cell.build(s);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!b.arraysEqual(this.stateSpec.map(i=>i.shape[i.shape.length-1]),a))throw new z(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(i=>new Mt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){U(()=>{if(!this.stateful)throw new Xn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new z("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>It([n,o])):this.states_=[It([n,this.cell.stateSize])];else if(e==null)Fe(this.states_),this.keptStates!=null&&(Fe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>It([n,o])):this.states_[0]=It([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new z(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Fe(this.states_);for(let o=0;o<this.states_.length;++o){let s=e[o],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,i=[n,a];if(!b.arraysEqual(s.shape,i))throw new z(`State ${o} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[o]=s}}this.states_=this.states_.map(o=>Gt(o.clone()))})}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=CS(e,n,o,this.numConstants);e=s.inputs,n=s.initialState,o=s.constants;let a=[],i=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let l of n)this.stateSpec.push(new Mt({shape:l.shape}));i=i.concat(this.stateSpec)}if(o!=null&&(t.constants=o,a=a.concat(o),this.numConstants=o.length),a[0]instanceof Tn){let l=[e].concat(a),p=this.inputSpec.concat(i),m=this.inputSpec;this.inputSpec=p;let c=super.apply(l,t);return this.inputSpec=m,c}else return super.apply(e,t)}call(e,t){return U(()=>{let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;e=Oe(e),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new z(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:o},l=kS((f,h)=>{let g=this.cell.call([f].concat(h),i);return[g[0],g.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),p=l[0],m=l[1],c=l[2];this.stateful&&this.resetStates(c,o);let d=this.returnSequences?m:p;return this.returnState?[d].concat(c):d})}getInitialState(e){return U(()=>{let t=It(e.shape);return t=de(t,[1,2]),t=pu(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?My(t,[1,n]):t):this.cell.stateSize>1?[My(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===SS.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let o=t.cell,s=xn(o,n);return new e(Object.assign(t,{cell:s}))}},Ws=SS;Ws.className="RNN";te.registerClass(Ws);var fl=class extends Ke{},Fc=class extends fl{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,nr(this.units,"units"),this.activation=Ka(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ct(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=At(e.kernelRegularizer),this.recurrentRegularizer=At(e.recurrentRegularizer),this.biasRegularizer=At(e.biasRegularizer),this.kernelConstraint=Yt(e.kernelConstraint),this.recurrentConstraint=Yt(e.recurrentConstraint),this.biasConstraint=Yt(e.biasConstraint),this.dropout=lp([1,za([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=lp([1,za([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=nt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return U(()=>{if(e=e,e.length!==2)throw new z(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let o=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=mu({ones:()=>_r(e),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=mu({ones:()=>_r(n),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));let s,a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?s=Gs(_(e,a),this.kernel.read()):s=Gs(e,this.kernel.read()),this.bias!=null&&(s=bn(s,this.bias.read())),i!=null&&(n=_(n,i));let u=Z(s,Gs(n,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Wa(this.activation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:bt(this.kernelRegularizer),recurrentRegularizer:bt(this.recurrentRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:Xt(this.kernelConstraint),recurrentConstraint:Xt(this.recurrentConstraint),biasConstraint:Xt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};Fc.className="SimpleRNNCell";te.registerClass(Fc);var Bf=class extends Ws{constructor(e){e.cell=new Fc(e);super(e)}call(e,t){return U(()=>{this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return new e(t)}};Bf.className="SimpleRNN";te.registerClass(Bf);var Mc=class extends fl{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.resetAfter)throw new z("GRUCell does not support reset_after parameter set to true.");this.units=e.units,nr(this.units,"units"),this.activation=Ka(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ka(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ct(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=At(e.kernelRegularizer),this.recurrentRegularizer=At(e.recurrentRegularizer),this.biasRegularizer=At(e.biasRegularizer),this.kernelConstraint=Yt(e.kernelConstraint),this.recurrentConstraint=Yt(e.recurrentConstraint),this.biasConstraint=Yt(e.biasConstraint),this.dropout=lp([1,za([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=lp([1,za([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=nt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return U(()=>{if(e=e,e.length!==2)throw new z(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=mu({ones:()=>_r(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=mu({ones:()=>_r(o),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,a=this.recurrentDropoutMask,i,u,l;0<this.dropout&&this.dropout<1&&(e=_(e,s[0]));let p=Gs(e,this.kernel.read());this.useBias&&(p=bn(p,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=_(o,a[0]));let m=this.recurrentKernel.read(),[c,d]=Pr(m,[2*this.units,this.units],m.rank-1),f=Gs(o,c),[h,g,y]=Pr(p,3,p.rank-1),[T,x]=Pr(f,2,f.rank-1);i=this.recurrentActivation.apply(Z(h,T)),u=this.recurrentActivation.apply(Z(g,x));let I=Gs(_(u,o),d);l=this.activation.apply(Z(y,I));let k=Z(_(i,o),_(Z(1,et(i)),l));return[k,k]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Wa(this.activation),recurrentActivation:Wa(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:bt(this.kernelRegularizer),recurrentRegularizer:bt(this.recurrentRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:Xt(this.kernelConstraint),recurrentConstraint:Xt(this.recurrentConstraint),biasConstraint:Xt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};Mc.className="GRUCell";te.registerClass(Mc);var Of=class extends Ws{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Mc(e);super(e)}call(e,t){return U(()=>{this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Of.className="GRU";te.registerClass(Of);var dl=class extends fl{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,nr(this.units,"units"),this.activation=Ka(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ka(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ct(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=At(e.kernelRegularizer),this.recurrentRegularizer=At(e.recurrentRegularizer),this.biasRegularizer=At(e.biasRegularizer),this.kernelConstraint=Yt(e.kernelConstraint),this.recurrentConstraint=Yt(e.recurrentConstraint),this.biasConstraint=Yt(e.biasConstraint),this.dropout=lp([1,za([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=lp([1,za([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var o;e=nt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let n;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,a=this.units;n=new(o=class extends _n{apply(u,l){let p=s.apply([a]),m=new cp().apply([a]),c=s.apply([a*2]);return $k($k(p,m),c)}},o.className="CustomInit",o)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return U(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new z(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1],s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=mu({ones:()=>_r(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=mu({ones:()=>_r(o),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,i=this.recurrentDropoutMask,u,l,p,m;0<this.dropout&&this.dropout<1&&(e=_(e,a[0]));let c=Gs(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=_(o,i[0])),c=Z(c,Gs(o,this.recurrentKernel.read())),this.useBias&&(c=bn(c,this.bias.read()));let[d,f,h,g]=Pr(c,4,c.rank-1);u=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(f),p=Z(_(l,s),_(u,this.activation.apply(h))),m=this.recurrentActivation.apply(g);let y=_(m,this.activation.apply(p));return[y,y,p]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Wa(this.activation),recurrentActivation:Wa(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:bt(this.kernelRegularizer),recurrentRegularizer:bt(this.recurrentRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:Xt(this.kernelConstraint),recurrentConstraint:Xt(this.recurrentConstraint),biasConstraint:Xt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};dl.className="LSTMCell";te.registerClass(dl);var zf=class extends Ws{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new dl(e);super(e)}call(e,t){return U(()=>{this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};zf.className="LSTM";te.registerClass(zf);var Rc=class extends fl{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return U(()=>{e=e;let n=e.slice(1),o=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?o.push(n.splice(0,i.stateSize.length)):o.push(n.splice(0,1));o.reverse();let s=[],a;for(let i=0;i<this.cells.length;++i){let u=this.cells[i];n=o[i],i===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=u.call(a,t),s.push(a.slice(1))}n=[];for(let i of s.slice().reverse())n.push(...i);return[a[0]].concat(n)})}build(e){_y(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,o)=>{Oa(`RNNCell_${o}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=s=>({className:s.getClassName(),config:s.getConfig()}),o={cells:this.cells.map(t)};return{...e,...o}}static fromConfig(e,t,n={}){let o=[];for(let s of t.cells)o.push(xn(s,n));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return lf(e)}setWeights(e){let t=[];for(let n of this.cells){let o=n.weights.length,s=e.splice(o);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],s[a]])}Ic(t)}};Rc.className="StackedRNNCells";te.registerClass(Rc);function mu(r){let{ones:e,rate:t,training:n=!1,count:o=1,dropoutFunc:s}=r,a=()=>s!=null?s(e(),t):Ey(e(),t),i=()=>ul(a,e,n);return!o||o<=1?Gt(i().clone()):Array(o).fill(void 0).map(i).map(l=>Gt(l.clone()))}var vS=class extends Ws{constructor(e){if(e.unroll)throw new Pe("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Pe("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Mt({ndim:5})]}call(e,t){return U(()=>{if(this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new z("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return U(()=>{let{stateSize:t}=this.cell,n=e.shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)],a=It(s);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){U(()=>{if(!this.stateful)throw new Xn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)];if(n[0]==null)throw new z("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>It(s)):this.states_=[It(s)];else if(e==null)Fe(this.states_),this.keptStates!=null&&(Fe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>It(s)):this.states_[0]=It(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new z(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Fe(this.states_);for(let i=0;i<this.states_.length;++i){let u=e[i],l=s;if(!b.arraysEqual(u.shape,l))throw new z(`State ${i} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${u.shape}`);this.states_[i]=u}}this.states_=this.states_.map(i=>Gt(i.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:o,padding:s,strides:a,dilationRate:i}=this.cell,u=t==="channelsFirst",l=e[u?3:2],p=e[u?4:3],m=Ln(l,o[0],s,a[0],i[0]),c=Ln(p,o[1],s,a[1],i[1]);return[...e.slice(0,2),...u?[n,m,c]:[m,c,n]]}};vS.className="ConvRNN2D";var Ec=class extends dl{constructor(e){let{filters:t,kernelSize:n,strides:o,padding:s,dataFormat:a,dilationRate:i}=e;super({...e,units:t});this.filters=t,nr(this.filters,"filters"),this.kernelSize=cl(n,2,"kernelSize"),this.kernelSize.forEach(u=>nr(u,"kernelSize")),this.strides=cl(o||1,2,"strides"),this.strides.forEach(u=>nr(u,"strides")),this.padding=s||"valid",hn(this.padding),this.dataFormat=a||"channelsLast",Kt(this.dataFormat),this.dilationRate=cl(i||1,2,"dilationRate"),this.dilationRate.forEach(u=>nr(u,"dilationRate"))}build(e){var i;e=nt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new z(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=4,s=this.kernelSize.concat([n,this.filters*o]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let a=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){let l=this.biasInitializer,p=this.filters;u=new(i=class extends _n{apply(c,d){let f=l.apply([p]),h=gr([p]),g=l.apply([p*2]);return mc([f,h,g])}},i.className="CustomInit",i)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return U(()=>{if(e.length!==3)throw new z(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,o=e[0],s=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=mu({ones:()=>_r(o),rate:this.dropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let u=this.dropoutMask,l=(se,ae,pe)=>!ae||!ae[pe]?se:_(ae[pe],se),p=l(o,u,0),m=l(o,u,1),c=l(o,u,2),d=l(o,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=mu({ones:()=>_r(s),rate:this.recurrentDropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let f=this.recurrentDropoutMask,h=l(s,f,0),g=l(s,f,1),y=l(s,f,2),T=l(s,f,3),x=3,[I,k,w,F]=Pr(this.kernel.read(),i,x),[M,R,L,O]=this.useBias?Pr(this.bias.read(),i):[null,null,null,null];p=this.inputConv(p,I,M,this.padding),m=this.inputConv(m,k,R,this.padding),c=this.inputConv(c,w,L,this.padding),d=this.inputConv(d,F,O,this.padding);let[W,V,j,q]=Pr(this.recurrentKernel.read(),i,x);h=this.recurrentConv(h,W),g=this.recurrentConv(g,V),y=this.recurrentConv(y,j),T=this.recurrentConv(T,q);let Y=this.recurrentActivation.apply(Z(p,h)),J=this.recurrentActivation.apply(Z(m,g)),H=Z(_(J,a),_(Y,this.activation.apply(Z(c,y)))),oe=_(this.recurrentActivation.apply(Z(d,T)),this.activation.apply(H));return[oe,oe,H]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,o){let s=Zo(e,t,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?bn(s,n,this.dataFormat):s}recurrentConv(e,t){return Zo(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Ec.className="ConvLSTM2DCell";te.registerClass(Ec);var Gf=class extends vS{constructor(e){let t=new Ec(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};Gf.className="ConvLSTM2D";te.registerClass(Gf);var _c=class extends Ke{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let o=0;o<this.noiseShape.length;++o)n.push(this.noiseShape[o]==null?t[o]:this.noiseShape[o]);return n}call(e,t){return U(()=>{this.invokeCallHook(e,t);let n=Oe(e);if(0<this.rate&&this.rate<1){let o=t.training==null?!1:t.training,s=this.getNoiseShape(n);return ul(()=>Ey(n,this.rate,s,this.seed),()=>n,o)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};_c.className="Dropout";te.registerClass(_c);var Uf=class extends _c{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Uf.className="SpatialDropout1D";te.registerClass(Uf);var Wf=class extends Ke{constructor(e){super(e);this.activation=null;this.useBias=!0;this.kernel=null;this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,nr(this.units,"units"),this.activation=Ka(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Yt(e.kernelConstraint),this.biasConstraint=Yt(e.biasConstraint),this.kernelRegularizer=At(e.kernelRegularizer),this.biasRegularizer=At(e.biasRegularizer),this.activityRegularizer=At(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=nt(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=nt(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return U(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=Ay(this.activation.getClassName()),s;return o!=null?s=Gs(n,this.kernel.read(),o,this.bias?this.bias.read():null):(s=Gs(n,this.kernel.read()),this.bias!=null&&(s=bn(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let e={units:this.units,activation:Wa(this.activation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:bt(this.kernelRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:Xt(this.kernelConstraint),biasConstraint:Xt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Wf.className="Dense";te.registerClass(Wf);var Kf=class extends Ke{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=nt(e);for(let t of e.slice(1))if(t==null)throw new z(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],zs(e,1)]}call(e,t){return U(()=>{this.invokeCallHook(e,t);let n=Oe(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let o=[0];for(let s=2;s<n.rank;++s)o.push(s);o.push(1),n=We(n,o)}return $F(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Kf.className="Flatten";te.registerClass(Kf);var Vf=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.activation=Ka(e.activation)}call(e,t){return U(()=>{this.invokeCallHook(e,t);let n=Oe(e);return this.activation.apply(n)})}getConfig(){let e={activation:Wa(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Vf.className="Activation";te.registerClass(Vf);var Hf=class extends Ke{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return U(()=>(e=Oe(e),_F(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Hf.className="RepeatVector";te.registerClass(Hf);var qf=class extends Ke{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",o=t.slice(),s=1,a=null;for(let u=0;u<o.length;++u){let l=o[u];if(this.isUnknown(l))if(a===null)a=u;else throw new z("Can only specifiy one unknown dimension.");else s*=l}let i=zs(e);if(a!==null){if(s===0||i%s!==0)throw new z(n);o[a]=i/s}else if(i!==s)throw new z(n);return o}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return U(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=n.shape,s=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return $(n,s)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};qf.className="Reshape";te.registerClass(qf);var jf=class extends Ke{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=tn(1,e.dims.length+1);if(!b.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Mt({ndim:this.dims.length+1})]}computeOutputShape(e){e=nt(e);let t=e.slice();return this.dims.forEach((n,o)=>{t[o+1]=e[n]}),t}call(e,t){return We(Oe(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};jf.className="Permute";te.registerClass(jf);var Xf=class extends Ke{constructor(e){super(e??{});this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Oe(e),o=-1;return Ud(au(n,this.maskValue),o)}call(e,t){return U(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=-1,s=!0,a=Ud(au(n,this.maskValue),o,s);return _(n,ne(a,n.dtype))})}};Xf.className="Masking";te.registerClass(Xf);var Yf=class extends Ke{constructor(e){super(e);this.embeddings=null;this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform";if(e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(vt(e.inputLength))}this.inputDim=e.inputDim,nr(this.inputDim,"inputDim"),this.outputDim=e.outputDim,nr(this.outputDim,"outputDim"),this.embeddingsInitializer=Ct(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=At(e.embeddingsRegularizer),this.activityRegularizer=At(e.activityRegularizer),this.embeddingsConstraint=Yt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return U(()=>this.maskZero?(e=Oe(e),au(e,De(e))):null)}computeOutputShape(e){if(e=nt(e),this.inputLength==null)return[...e,this.outputDim];let t=vt(this.inputLength);if(t.length!==e.length-1)throw new z(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let o=0;o<t.length;++o){let s=t[o],a=e[o+1];if(s!=null&&a!=null&&s!==a)throw new z(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);s==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return U(()=>{this.invokeCallHook(e,t);let n=Oe(e);n.dtype!=="int32"&&(n=pp(n,"int32"));let o=Ry(this.embeddings.read(),$(n,[n.size]));return $(o,nt(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ft(this.embeddingsInitializer),embeddingsRegularizer:bt(this.embeddingsRegularizer),activityRegularizer:bt(this.activityRegularizer),embeddingsConstraint:Xt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Yf.className="Embedding";te.registerClass(Yf);var hl=class extends Ke{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Pe}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let o=0;o<t.length;++o){let s=e[e.length-t.length+o],a=t[o];if(s==null||a==null||s<0||a<0)n.push(null);else if(s===1)n.push(a);else if(a===1)n.push(s);else{if(s!==a)throw new z("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[nt(e)]),e=e,e.length<2)throw new z(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let s of e)s!=null&&s[0]!==null&&t.push(s[0]);if(t=Os(t),t.length>1)throw new z(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let s=1;s<e.length;++s){let a=e[s]==null?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let o=e.map(s=>s.length);e.indexOf(null)===-1&&Os(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return U(()=>{if(e=e,this.reshapeRequired){let n=[],o=e.map(s=>s.rank);if(o.indexOf(null)===-1){let s=za(o);for(let a of e){let i=a.rank;for(let u=0;u<s-i;++u)a=pu(a,1);n.push(a)}return this.mergeFunction(n)}else{let s=!1;for(let u of e){let l=u.rank;if(l==null){let p=u.shape,m=p[0],c=p.slice(1).concat([m]),d=$(u,[m].concat(zs(p.slice(1))));d=We(d,[1,0]),d=$(d,c),n.push(d),s=!0}else if(l>1){let p=tn(1,l).concat([0]);n.push(We(u,p)),s=!0}else n.push(u)}let a=this.mergeFunction(n),i=a.rank;if(s){if(i==null){let u=a.shape,l=u.length,p=u[l-1],m=[p].concat(u.slice(0,u.length-1));a=$(We($(a,[-1,p]),[1,0]),m)}else if(i>1){let u=[i-1].concat(tn(0,i-1));a=We(a,u)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let o=1;o<e.length;++o){let s=e[o]==null?null:e[o].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(let o of e)o!=null&&o[0]!==null&&n.push(o[0]);return n=Os(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return U(()=>{if(t==null)return null;if(!Array.isArray(t))throw new z("`mask` should be an Array");if(!Array.isArray(e))throw new z("`inputs` should be an Array");if(t.length!==e.length)throw new z(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(o=>o==null))return null;t=t.map(o=>o==null?o:Er(o,0));let n=t[0];for(let o=1;o<t.length-1;++o)n=Zr(n,t[o]);return n})}},Qf=class extends hl{constructor(e){super(e)}mergeFunction(e){return U(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Z(t,e[n]);return t})}};Qf.className="Add";te.registerClass(Qf);var Jf=class extends hl{constructor(e){super(e)}mergeFunction(e){return U(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=_(t,e[n]);return t})}};Jf.className="Multiply";te.registerClass(Jf);var eh=class extends hl{constructor(e){super(e)}mergeFunction(e){return U(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Z(t,e[n]);return _(1/e.length,t)})}};eh.className="Average";te.registerClass(eh);var th=class extends hl{constructor(e){super(e)}mergeFunction(e){return U(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Qo(t,e[n]);return t})}};th.className="Maximum";te.registerClass(th);var rh=class extends hl{constructor(e){super(e)}mergeFunction(e){return U(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=nl(t,e[n]);return t})}};rh.className="Minimum";te.registerClass(rh);var nh=class extends hl{constructor(e){super(e);this.DEFAULT_AXIS=-1;e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new z("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let o of e)if(o!=null){t=!1;break}if(t)return;let n=[];for(let o=0;o<e.length;++o){let s=e[o].slice();s.splice(this.axis,1);let a=!1;for(let i of n)if(b.arraysEqual(i,s)){a=!0;break}a||n.push(s)}if(n.length>1)throw new z("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return U(()=>mc(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new z("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),o=this.axis<0?n.length+this.axis:this.axis;for(let s of t.slice(1)){if(n[o]==null||s[o]==null){n[o]=null;break}n[o]+=s[o]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new z("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new z("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new z(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return U(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let o=[];for(let a=0;a<e.length;++a)t[a]==null?o.push(ne(_r(e[a]),"bool")):t[a].rank<e[a].rank?o.push(Er(t[a],-1)):o.push(t[a]);let s=mt(o,this.axis);return Db(s,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};nh.className="Concatenate";te.registerClass(nh);function Zf(r,e){for(;r<0;)r+=e;return r}function e9(r,e,t){if(r.shape.length>3||e.shape.length>3)throw new Pe("batchDot is not implemented for tensors of 4D or higher rank yet");if(b.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),b.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),r.dtype==="complex64"||e.dtype==="complex64")throw new Pe("batchDot is not implemented for complex64-type Tensors yet.");let n=r.shape.length,o=e.shape.length;t==null&&(t=[n-1,o-2]);let s=t;return U(()=>{let a;if(n>o){a=n-o;let u=[];for(let l=0;l<a;++l)u.push(1);e=$(e,e.shape.concat(u))}else if(o>n){a=o-n;let u=[];for(let l=0;l<a;++l)u.push(1);r=$(r,r.shape.concat(u))}else a=0;let i;if(r.shape.length===2&&e.shape.length===2)s[0]===s[1]?i=de(_(r,e),s[0]):i=de(_(We(r,[1,0]),e),s[1]);else{let u=s[0]!==r.shape.length-1,l=s[1]===e.shape.length-1;i=qe(r,e,u,l)}if(a>0){let u;n>o?u=n+o-3:u=n-1;let l=[];for(let p=u;p<u+a;++p)l.push(p);i=Es(i,l)}return i.shape.length===1&&(i=Er(i,1)),i})}var oh=class extends hl{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){b.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Pe("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);if(t[o[0]]!==n[o[1]])throw new z(`Dimension incompatibility: ${t[o[0]]} !== ${n[o[1]]}`)}mergeFunction(e){if(e.length!==2)throw new z(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],o;return Array.isArray(this.axes)?o=this.axes.map((s,a)=>Zf(s,e[a].shape.length)):o=[Zf(this.axes,t.shape.length),Zf(this.axes,n.shape.length)],this.normalize&&(t=hf(t,o[0]),n=hf(n,o[1])),e9(t,n,o)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[Zf(this.axes,e.length),Zf(this.axes,t.length)],n}computeOutputShape(e){b.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Pe("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);t.splice(o[0],1),n.splice(o[1],1),n.splice(0,1);let s=t.concat(n);return s.length===1&&s.push(1),s}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};oh.className="Dot";te.registerClass(oh);var sh=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return U(()=>{this.invokeCallHook(e,t);let n=Oe(e);return ul(()=>Z(cc(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};sh.className="GaussianNoise";te.registerClass(sh);var ah=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return U(()=>{this.invokeCallHook(e,t);let n=Oe(e);return this.rate>0&&this.rate<1?ul(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return _(n,cc(n.shape,1,s))},()=>n,t.training||!1):n})}};ah.className="GaussianDropout";te.registerClass(ah);var ih=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Oe(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return U(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return ul(()=>{let s=Oe(e),a=1.6732632423543772,i=1.0507009873554805,u=-a*i,l=Ms(di(n),this.rate);l=pp(l,"float32");let p=((1-this.rate)*(1+this.rate*u**2))**-.5,m=-p*u*this.rate,c=Z(_(s,l),_(Z(l,-1),u));return Z(_(c,p),m)},()=>Oe(e),t.training||!1)}return e})}};ih.className="AlphaDropout";te.registerClass(ih);function uh(r,e,t,n,o,s=.001){let a;if(r.rank===2)a=Mb(r,e,t,n,o,s);else if(r.rank===3)a=Rb(r,e,t,n,o,s);else if(r.rank===4)a=Eb(r,e,t,n,o,s);else throw new Pe(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return a}function t9(r,e,t,n,o=.001){return U(()=>{let s=ql(r,n),a=s.mean,i=s.variance;return[uh(r,a,i,t,e,o),a,i]})}function r9(r,e,t,n,o=.001){return U(()=>{let s=ql(r,n),a=s.mean,i=s.variance,u=[];for(let f of tn(0,r.rank))n.indexOf(f)!==-1?u.push(1):u.push(r.shape[f]);let l=$(a,u),p=$(i,u),m=e==null?null:$(e,u),c=t==null?null:$(t,u);return[uh(r,l,p,c,m,o),a,i]})}function n9(r,e,t,n,o=.001){return b.arraysEqual(n.slice().sort(),tn(0,r.rank-1))?t9(r,e,t,n,o):r9(r,e,t,n,o)}var lh=class extends Ke{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Ct(e.betaInitializer||"zeros"),this.gammaInitializer=Ct(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ct(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ct(e.movingVarianceInitializer||"ones"),this.betaConstraint=Yt(e.betaConstraint),this.gammaConstraint=Yt(e.gammaConstraint),this.betaRegularizer=At(e.betaRegularizer),this.gammaRegularizer=At(e.gammaRegularizer)}build(e){e=nt(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new z(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Mt({ndim:e.length,axes:{[t]:n}})];let o=[n];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return U(()=>{let n=t.training==null?!1:t.training,o=Oe(e),s=o.shape,a=s.length,i=tn(0,a),u=this.axis>=0?this.axis:this.axis+a;i.splice(u,1);let l=$s(1,a);l[u]=s[u];let p=i.slice();p.sort();let m=!b.arraysEqual(p,tn(0,a).slice(0,a-1)),c=()=>{if(m){let T=$(this.movingMean.read(),l),x=$(this.movingVariance.read(),l),I=this.center?$(this.beta.read(),l):null,k=this.scale?$(this.gamma.read(),l):null;return uh(o,T,x,I,k,this.epsilon)}else return uh(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return c();let[d,f,h]=n9(o,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(T,x,I)=>{U(()=>{let k=1-I,w=T.read(),F=_(le(w,x),k);T.write(le(w,F))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,h,this.momentum)})(),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ft(this.betaInitializer),gammaInitializer:Ft(this.gammaInitializer),movingMeanInitializer:Ft(this.movingMeanInitializer),movingVarianceInitializer:Ft(this.movingVarianceInitializer),betaRegularizer:bt(this.betaRegularizer),gammaRegularizer:bt(this.gammaRegularizer),betaConstraint:Xt(this.betaConstraint),gammaConstraint:Xt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};lh.className="BatchNormalization";te.registerClass(lh);var ph=class extends Ke{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Ct(e.betaInitializer||"zeros"),this.gammaInitializer=Ct(e.gammaInitializer||"ones"),this.betaRegularizer=At(e.betaRegularizer),this.gammaRegularizer=At(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=nt(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(let s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==Os(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(s=>e[s]),o=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(e,t){let n=Oe(e),o=n.shape,s=o.length;return U(()=>{let{mean:i,variance:u}=ql(n,this.axis,!0),l=$s(1,s);for(let h of this.axis)l[h]=o[h];let p=h=>h!=null&&h.shape.length!==s?$(h,l):h,m=this.scale?p(this.gamma.read()):null,c=this.center?p(this.beta.read()):null,d=[],f=[];for(let h=0;h<s;++h)this.axis.indexOf(h)!==-1?(d.push(o[h]),f.push(1)):(d.push(1),f.push(o[h]));return i=Yr(i,d),u=Yr(u,d),m!=null&&(m=Yr(m,f)),c!=null&&(c=Yr(c,f)),uh(n,i,u,c,m,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ft(this.betaInitializer),gammaInitializer:Ft(this.gammaInitializer),betaRegularizer:bt(this.betaRegularizer),gammaRegularizer:bt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};ph.className="LayerNormalization";te.registerClass(ph);function o9(r,e,t){return U(()=>{if(r.rank!==4)throw new z(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new z("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=gn()),t!=="channelsLast"&&t!=="channelsFirst")throw new z(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return t==="channelsFirst"?n=[[0,0],[0,0],e[0],e[1]]:n=[[0,0],e[0],e[1],[0,0]],jn(r,n)})}var mh=class extends Ke{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?gn():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new z(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new z(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new z(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Mt({ndim:4})]}computeOutputShape(e){e=nt(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return U(()=>o9(Oe(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};mh.className="ZeroPadding2D";te.registerClass(mh);function nT(r,e,t,n,o,s){return U(()=>{Kt(o),Rk(s),hn(n),t==null&&(t=[1,1]),n==null&&(n="valid"),o==null&&(o=gn()),s==null&&(s="max"),r=Lf(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=Qm(r,e,t,i):a=Km(r,e,t,i),o==="channelsFirst"&&(a=We(a,[0,3,1,2])),a})}function IE(r,e,t,n,o,s){return U(()=>{Kt(o),Rk(s),hn(n),t==null&&(t=[1,1,1]),n==null&&(n="valid"),o==null&&(o=gn()),s==null&&(s="max"),r=yS(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=ey(r,e,t,i):a=Fb(r,e,t,i),o==="channelsFirst"&&(a=We(a,[0,4,1,2,3])),a})}var AS=class extends Ke{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new z(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(nr(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new z(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);nr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,hn(this.padding),this.inputSpec=[new Mt({ndim:3})]}computeOutputShape(e){e=nt(e);let t=Ln(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return U(()=>{this.invokeCallHook(e,t),e=pu(Oe(e),2);let n=this.poolingFunction(Oe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Es(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},ch=class extends AS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Kt(s),hn(o),nT(e,t,n,o,s,"max")}};ch.className="MaxPooling1D";te.registerClass(ch);var dh=class extends AS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Kt(s),hn(o),nT(e,t,n,o,s,"avg")}};dh.className="AveragePooling1D";te.registerClass(dh);var wS=class extends Ke{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new z(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];nr(this.poolSize,"poolSize"),nr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Kt(this.dataFormat),hn(this.padding),this.inputSpec=[new Mt({ndim:4})]}computeOutputShape(e){e=nt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Ln(t,this.poolSize[0],this.padding,this.strides[0]),n=Ln(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return U(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},fh=class extends wS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Kt(s),hn(o),nT(e,t,n,o,s,"max")}};fh.className="MaxPooling2D";te.registerClass(fh);var hh=class extends wS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Kt(s),hn(o),nT(e,t,n,o,s,"avg")}};hh.className="AveragePooling2D";te.registerClass(hh);var NS=class extends Ke{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new z(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];nr(this.poolSize,"poolSize"),nr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Kt(this.dataFormat),hn(this.padding),this.inputSpec=[new Mt({ndim:5})]}computeOutputShape(e){e=nt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Ln(t,this.poolSize[0],this.padding,this.strides[0]),n=Ln(n,this.poolSize[1],this.padding,this.strides[1]),o=Ln(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,o]:[e[0],t,n,o,e[4]]}call(e,t){return U(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},gh=class extends NS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Kt(s),hn(o),IE(e,t,n,o,s,"max")}};gh.className="MaxPooling3D";te.registerClass(gh);var bh=class extends NS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Kt(s),hn(o),IE(e,t,n,o,s,"avg")}};bh.className="AveragePooling3D";te.registerClass(bh);var DS=class extends Ke{constructor(e){super(e);this.inputSpec=[new Mt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Pe}},yh=class extends DS{constructor(e){super(e||{})}call(e,t){return U(()=>{let n=Oe(e);return Bt(n,1)})}};yh.className="GlobalAveragePooling1D";te.registerClass(yh);var Th=class extends DS{constructor(e){super(e||{})}call(e,t){return U(()=>{let n=Oe(e);return dn(n,1)})}};Th.className="GlobalMaxPooling1D";te.registerClass(Th);var PS=class extends Ke{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Kt(this.dataFormat),this.inputSpec=[new Mt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Pe}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},xh=class extends PS{call(e,t){return U(()=>{let n=Oe(e);return this.dataFormat==="channelsLast"?Bt(n,[1,2]):Bt(n,[2,3])})}};xh.className="GlobalAveragePooling2D";te.registerClass(xh);var Ih=class extends PS{call(e,t){return U(()=>{let n=Oe(e);return this.dataFormat==="channelsLast"?dn(n,[1,2]):dn(n,[2,3])})}};Ih.className="GlobalMaxPooling2D";te.registerClass(Ih);var FS=class extends Ke{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let o=t.layer,s=xn(o,n);delete t.layer;let a={layer:s};return Object.assign(a,t),new e(a)}},Ch=class extends FS{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=nt(e),e.length<3)throw new z(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=nt(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),o=e[1];return[n[0],o].concat(n.slice(1))}call(e,t){return U(()=>(e=Oe(e),kS((a,i)=>[Oe(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};Ch.className="TimeDistributed";te.registerClass(Ch);function s9(r){bi(PF,"BidirectionalMergeMode",r)}var a9="concat",kh=class extends FS{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=xn(n),t.goBackwards=t.goBackwards!==!0;let o={};if(o.className=e.layer.getClassName(),o.config=t,this.backwardLayer=xn(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?a9:e.mergeMode,s9(this.mergeMode),e.weights)throw new Pe("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,o,s;return this.returnState&&(s=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,o=[n]):this.mergeMode==null?o=[n,n.slice()]:o=[n],this.returnState?this.mergeMode==null?o.concat(s).concat(s.slice()):[n].concat(s).concat(s.slice()):Fr(o)}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=CS(e,n,o,this.numConstants);if(e=s.inputs,n=s.initialState,o=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&o==null)return super.apply(e,t);let a=[],i=[];if(n!=null){let l=n.length;if(l%2>0)throw new z("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let p=n.map(m=>new Mt({shape:m.shape}));this.forwardLayer.stateSpec=p.slice(0,l/2),this.backwardLayer.stateSpec=p.slice(l/2),i.push(...p)}if(o!=null)throw new Pe("Support for constants in Bidirectional layers is not implemented yet.");let u=a[0]instanceof Tn;for(let l of a)if(l instanceof Tn!==u)throw new z("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){let l=[e].concat(a),p=this.inputSpec.concat(i),m=this.inputSpec;this.inputSpec=p;let c=super.apply(l,t);return this.inputSpec=m,c}else return super.apply(e,t)}call(e,t){return U(()=>{let n=t.initialState,o,s;if(n==null)o=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{let u=n.slice(0,n.length/2),l=n.slice(n.length/2);o=this.forwardLayer.call(e,Object.assign(t,{initialState:u})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let a;this.returnState&&(Array.isArray(o)&&(a=o.slice(1).concat(s.slice(1))),o=o[0],s=s[0]),this.returnSequences&&(s=Dr(s,1));let i;return this.mergeMode==="concat"?i=mc([o,s]):this.mergeMode==="sum"?i=Z(o,s):this.mergeMode==="ave"?i=_(.5,Z(o,s)):this.mergeMode==="mul"?i=_(o,s):this.mergeMode==null&&(i=[o,s]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Oa(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Oa(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let s=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(s).concat(s):[n].concat(s).concat(s)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=xn(t.layer);if(delete t.layer,t.numConstants!=null)throw new Pe("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let o=t;return o.layer=n,new e(o)}};kh.className="Bidirectional";te.registerClass(kh);function i9(r){return new yi(r)}function u9(r){return new wf(r)}function l9(r){return new Sf(r)}function p9(r){return new vf(r)}function m9(r){return new Af(r)}function c9(r){return new Df(r)}function d9(r){return new Nf(r)}function f9(r){return new Rf(r)}function h9(r){return new Nc(r)}function g9(r){return new Pf(r)}function b9(r){return new Dc(r)}function y9(r){return new Ff(r)}function T9(r){return new Mf(r)}function x9(r){return new Ef(r)}function I9(r){return new _f(r)}function C9(r){return new $f(r)}function k9(r){return new Vf(r)}function S9(r){return new Wf(r)}function v9(r){return new _c(r)}function A9(r){return new Uf(r)}function w9(r){return new Kf(r)}function N9(r){return new Hf(r)}function D9(r){return new qf(r)}function P9(r){return new jf(r)}function F9(r){return new Yf(r)}function M9(r){return new Qf(r)}function R9(r){return new eh(r)}function E9(r){return new nh(r)}function _9(r){return new th(r)}function L9(r){return new rh(r)}function $9(r){return new Jf(r)}function B9(r){return new oh(r)}function O9(r){return new lh(r)}function z9(r){return new ph(r)}function G9(r){return new mh(r)}function MS(r){return new dh(r)}function U9(r){return MS(r)}function W9(r){return MS(r)}function RS(r){return new hh(r)}function K9(r){return RS(r)}function V9(r){return RS(r)}function ES(r){return new bh(r)}function H9(r){return ES(r)}function q9(r){return ES(r)}function j9(r){return new yh(r)}function X9(r){return new xh(r)}function CE(r){return new Th(r)}function kE(r){return new Ih(r)}function SE(r){return new ch(r)}function vE(r){return new fh(r)}function Y9(r){return new gh(r)}function Z9(r){return new Of(r)}function Q9(r){return new Mc(r)}function J9(r){return new zf(r)}function eee(r){return new dl(r)}function tee(r){return new Bf(r)}function ree(r){return new Fc(r)}function nee(r){return new Gf(r)}function oee(r){return new Ec(r)}function see(r){return new Ws(r)}function aee(r){return new Rc(r)}function iee(r){return new kh(r)}function uee(r){return new Ch(r)}var lee=CE,pee=kE,mee=SE,cee=vE;function dee(r){return new sh(r)}function fee(r){return new ah(r)}function hee(r){return new ih(r)}function gee(r){return new Xf(r)}var wE={};je(wE,{MAPE:()=>wee,MSE:()=>Pee,binaryAccuracy:()=>bee,binaryCrossentropy:()=>yee,categoricalAccuracy:()=>xee,categoricalCrossentropy:()=>Iee,cosineProximity:()=>See,mape:()=>Nee,meanAbsoluteError:()=>vee,meanAbsolutePercentageError:()=>Aee,meanSquaredError:()=>Dee,mse:()=>Fee,precision:()=>Cee,recall:()=>kee,sparseCategoricalAccuracy:()=>Tee});function bee(r,e){return yf(r,e)}function yee(r,e){return qy(r,e)}function Tee(r,e){return jy(r,e)}function xee(r,e){return Tf(r,e)}function Iee(r,e){return xf(r,e)}function Cee(r,e){return qk(r,e)}function kee(r,e){return QR(r,e)}function See(r,e){return bf(r,e)}function vee(r,e){return kc(r,e)}function Aee(r,e){return ml(r,e)}function wee(r,e){return ml(r,e)}function Nee(r,e){return ml(r,e)}function Dee(r,e){return xi(r,e)}function Pee(r,e){return xi(r,e)}function Fee(r,e){return xi(r,e)}var NE={};je(NE,{modelFromJSON:()=>fE});var DE={};je(DE,{l1:()=>Ree,l1l2:()=>Mee,l2:()=>Eee});function Mee(r){return new gp(r)}function Ree(r){return yE(r)}function Eee(r){return TE(r)}var _S=class extends pl{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof ts))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function oT(r,e){return r<e}function PE(r,e){return r>e}var LS=class extends _S{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Pe("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=oT:this.mode==="max"?this.monitorFunc=PE:this.monitor.indexOf("acc")!==-1?this.monitorFunc=PE:this.monitorFunc=oT,this.monitorFunc===oT&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===oT?1/0:-1/0}async onEpochEnd(e,t){await Ti(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function _ee(r){return new LS(r)}var Lee={earlyStopping:_ee};var $ee=B();$ee.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var $S=(ee=>(ee[ee.DT_INVALID=0]="DT_INVALID",ee[ee.DT_FLOAT=1]="DT_FLOAT",ee[ee.DT_DOUBLE=2]="DT_DOUBLE",ee[ee.DT_INT32=3]="DT_INT32",ee[ee.DT_UINT8=4]="DT_UINT8",ee[ee.DT_INT16=5]="DT_INT16",ee[ee.DT_INT8=6]="DT_INT8",ee[ee.DT_STRING=7]="DT_STRING",ee[ee.DT_COMPLEX64=8]="DT_COMPLEX64",ee[ee.DT_INT64=9]="DT_INT64",ee[ee.DT_BOOL=10]="DT_BOOL",ee[ee.DT_QINT8=11]="DT_QINT8",ee[ee.DT_QUINT8=12]="DT_QUINT8",ee[ee.DT_QINT32=13]="DT_QINT32",ee[ee.DT_BFLOAT16=14]="DT_BFLOAT16",ee[ee.DT_QINT16=15]="DT_QINT16",ee[ee.DT_QUINT16=16]="DT_QUINT16",ee[ee.DT_UINT16=17]="DT_UINT16",ee[ee.DT_COMPLEX128=18]="DT_COMPLEX128",ee[ee.DT_HALF=19]="DT_HALF",ee[ee.DT_RESOURCE=20]="DT_RESOURCE",ee[ee.DT_VARIANT=21]="DT_VARIANT",ee[ee.DT_UINT32=22]="DT_UINT32",ee[ee.DT_UINT64=23]="DT_UINT64",ee[ee.DT_FLOAT_REF=101]="DT_FLOAT_REF",ee[ee.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",ee[ee.DT_INT32_REF=103]="DT_INT32_REF",ee[ee.DT_UINT8_REF=104]="DT_UINT8_REF",ee[ee.DT_INT16_REF=105]="DT_INT16_REF",ee[ee.DT_INT8_REF=106]="DT_INT8_REF",ee[ee.DT_STRING_REF=107]="DT_STRING_REF",ee[ee.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",ee[ee.DT_INT64_REF=109]="DT_INT64_REF",ee[ee.DT_BOOL_REF=110]="DT_BOOL_REF",ee[ee.DT_QINT8_REF=111]="DT_QINT8_REF",ee[ee.DT_QUINT8_REF=112]="DT_QUINT8_REF",ee[ee.DT_QINT32_REF=113]="DT_QINT32_REF",ee[ee.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",ee[ee.DT_QINT16_REF=115]="DT_QINT16_REF",ee[ee.DT_QUINT16_REF=116]="DT_QUINT16_REF",ee[ee.DT_UINT16_REF=117]="DT_UINT16_REF",ee[ee.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",ee[ee.DT_HALF_REF=119]="DT_HALF_REF",ee[ee.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",ee[ee.DT_VARIANT_REF=121]="DT_VARIANT_REF",ee[ee.DT_UINT32_REF=122]="DT_UINT32_REF",ee[ee.DT_UINT64_REF=123]="DT_UINT64_REF",ee))($S||{}),Bee;(e=>{let r;(s=>(s[s.LEGACY=0]="LEGACY",s[s.V1=1]="V1",s[s.V2=2]="V2"))(r=e.CheckpointFormatVersion||={})})(Bee||={});var BS={};function zee(r,e){let t={tfOpName:r,category:"custom",inputs:[],attrs:[],customExecutor:e};BS[r]=t}function sT(r){return BS[r]}function Gee(r){delete BS[r]}function S(r,e,t,n,o){let s=e.inputParams[r];if(s&&s.inputIndexStart!==void 0){let i=s.inputIndexStart,u=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?i+1:s.inputIndexEnd;if(s.type==="tensor")return Sr(e.inputNames[s.inputIndexStart],t,n,o);if(s.type==="tensors")return e.inputNames.slice(i,u).map(c=>Sr(c,t,n,o));let l=Sr(e.inputNames.slice(i)[0],t,n,o),p=l.dataSync();return s.type==="number"?p[0]:b.toNestedArray(l.shape,p)}let a=e.attrParams[r];return a&&a.value}function Sr(r,e,t,n){let[o,s]=Cn(r);if(n!=null){let i=n.getHashTableHandleByName(o);if(i!=null)return i}let a=t.currentContextIds.find(i=>!!e[aT(o,i)]);return a!==void 0?e[aT(o,a)][s]:void 0}function FE(r,e,t){return e[aT(r,t.currentContextId)]}function Ks(r,e){let[t,n,o]=Cn(r);return[aT(t,e&&e.currentContextId),n,o]}function aT(r,e){return e?`${r}-${e}`:r}function Cn(r){let e=r.split(":");if(e.length===1)return[r,0,void 0];let t=e[0],n=e.length===3?e[1]:void 0,o=Number(e[e.length-1]);return[t,o,n]}function Sh(r,e,t){let n=S("pad",r,e,t);if(n==="explicit"){n=S("explicitPaddings",r,e,t);let o=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)o[s][0]=n[s*2],o[s][1]=n[s*2+1];return o}return n}function Ha(r){return r.kept?r:cn(r)}var OS={};je(OS,{json:()=>Uee});var Uee=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var zS={};je(zS,{json:()=>Wee});var Wee=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var GS={};je(GS,{json:()=>Kee});var Kee=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var US={};je(US,{json:()=>Vee});var Vee=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var WS={};je(WS,{json:()=>Hee});var Hee=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var KS={};je(KS,{json:()=>qee});var qee=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var VS={};je(VS,{json:()=>jee});var jee=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var HS={};je(HS,{json:()=>Xee});var Xee=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var qS={};je(qS,{json:()=>Yee});var Yee=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}];var jS={};je(jS,{json:()=>Zee});var Zee=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var XS={};je(XS,{json:()=>Qee});var Qee=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var YS={};je(YS,{json:()=>Jee});var Jee=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}];var ZS={};je(ZS,{json:()=>ete});var ete=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var QS={};je(QS,{json:()=>tte});var tte=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var JS={};je(JS,{json:()=>rte});var rte=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var ev={};je(ev,{json:()=>nte});var nte=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var tv={};je(tv,{json:()=>ote});var ote=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var rv={};je(rv,{json:()=>ste});var ste=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var nv={};je(nv,{json:()=>ate});var ate=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var bT=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[OS,zS,GS,US,WS,KS,VS,HS,qS,jS,XS,YS,ZS,QS,JS,ev,tv,rv,nv],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,o)=>(n[o.tfOpName]=o,n),{})}transformGraph(e,t={}){let n=e.node,o=[],s=[],a=[],i=n.reduce((h,g)=>(h[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?o.push(h[g.name]):g.op==="Const"?s.push(h[g.name]):(g.input==null||g.input.length===0)&&a.push(h[g.name]),h),{}),u=[],l=[],p={},m={};t!=null&&(p=this.mapSignatureEntries(t.inputs),m=this.mapSignatureEntries(t.outputs));let c=Object.keys(i);c.forEach(h=>{let g=i[h];g.inputNames.forEach((y,T)=>{let[x,,I]=Ks(y),k=i[x];if(k.outputs!=null){let w=k.outputs.indexOf(I);if(w!==-1){let F=`${x}:${w}`;g.inputNames[T]=F}}g.inputs.push(k),k.children.push(g)})}),Object.keys(m).length===0?c.forEach(h=>{let g=i[h];g.children.length===0&&l.push(g)}):Object.keys(m).forEach(h=>{let[g]=Ks(h),y=i[g];y!=null&&(y.signatureKey=m[h],l.push(y))}),Object.keys(p).length>0?Object.keys(p).forEach(h=>{let[g]=Ks(h),y=i[g];y&&(y.signatureKey=p[h],u.push(y))}):u=o;let d={};e.library!=null&&e.library.function!=null&&(d=e.library.function.reduce((h,g)=>(h[g.signature.name]=this.mapFunction(g),h),{}));let f={nodes:i,inputs:u,outputs:l,weights:s,placeholders:o,signature:t,functions:d};return a.length>0&&(f.initNodes=a),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=sT(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(o=>o.startsWith("^")?o.slice(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((o,s)=>(o[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},o),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((o,s)=>{let a=s.type,i;switch(s.type){case"string":i=iT(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=iT(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":i=fT(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=fT(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":i=lT(e.attr,s.tfName,s.defaultValue||0),i===void 0&&!!s.tfDeprecatedName&&(i=lT(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":i=dT(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=dT(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":i=uT(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=uT(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":i=gT(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=gT(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":i=cT(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=cT(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":i=hT(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=hT(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":i=pT(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=pT(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":i=mT(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=mT(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":i=ME(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=ME(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${e.op}`)}return o[s.name]={value:i,type:a},o},{})),n}mapFunction(e){let t=e.nodeDef,n=[],o=[],s={};t!=null&&(s=t.reduce((m,c)=>(m[c.name]=this.mapNode(c),c.op==="Const"&&o.push(m[c.name]),m),{}));let a=[],i=[];e.signature.inputArg.forEach(m=>{let[c]=Ks(m.name),d={name:c,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ov(m.type),type:"dtype"}},children:[]};d.signatureKey=m.name,a.push(d),s[c]=d}),Object.keys(s).forEach(m=>{let c=s[m];c.inputNames.forEach((d,f)=>{let[h,,g]=Ks(d),y=s[h];if(y.outputs!=null){let T=y.outputs.indexOf(g);if(T!==-1){let x=`${h}:${T}`;c.inputNames[f]=x}}c.inputs.push(y),y.children.push(c)})});let l=e.ret;e.signature.outputArg.forEach(m=>{let[c,d]=Ks(l[m.name]),f=s[c];f!=null&&(f.defaultOutput=d,i.push(f))});let p=this.mapArgsToSignature(e);return{nodes:s,inputs:a,outputs:i,weights:o,placeholders:n,signature:p}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function ite(r){let e=B().global;if(typeof e.atob<"u")return e.atob(r);if(typeof Buffer<"u")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function RE(r,e){let t=Array.isArray(r)?String.fromCharCode.apply(null,r):ite(r);return e?t:t.toLowerCase()}function iT(r,e,t,n=!1){let o=r[e];return o!=null?RE(o.s,n):t}function uT(r,e,t){let n=r[e];return n?n.b:t}function lT(r,e,t){let n=r[e]||{},o=n.i!=null?n.i:n.f!=null?n.f:t;return typeof o=="number"?o:parseInt(o,10)}function ov(r){switch(typeof r=="string"&&(r=$S[r]),r){case 1:case 19:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 2:return"float32";case 7:return"string";default:return null}}function ME(r,e,t){let n=r[e];return n&&n.func?n.func.name:t}function pT(r,e,t){let n=r[e];return n&&n.type?ov(n.type):t}function mT(r,e,t){let n=r[e];return n&&n.list&&n.list.type?n.list.type.map(o=>ov(o)):t}function EE(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function cT(r,e,t){let n=r[e];return n&&n.shape?EE(n.shape):t}function dT(r,e,t){let n=r[e];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):t}function fT(r,e,t,n=!1){let o=r[e];return o&&o.list&&o.list.s?o.list.s.map(s=>RE(s,n)):t}function hT(r,e,t){let n=r[e];return n&&n.list&&n.list.shape?n.list.shape.map(o=>EE(o)):t}function gT(r,e,t){let n=r[e];return n&&n.list&&n.list.b?n.list.b:t}var sv=class{constructor(e,t,n){this.node=e;this.tensorMap=t;this.context=n;this.inputs=[];this.attrs={};this.inputs=e.inputNames.map(o=>this.getInput(o)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((o,s)=>(o[s]=this.getAttr(s),o),{}))}getInput(e){return Sr(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return Sr(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return lT(this.node.rawAttrs,e,t);if(n.s!=null)return iT(this.node.rawAttrs,e,t);if(n.b!=null)return uT(this.node.rawAttrs,e,t);if(n.shape!=null)return cT(this.node.rawAttrs,e,t);if(n.type!=null)return pT(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return dT(this.node.rawAttrs,e,t);if(n.list.s!=null)return fT(this.node.rawAttrs,e,t);if(n.list.shape!=null)return hT(this.node.rawAttrs,e,t);if(n.list.b!=null)return gT(this.node.rawAttrs,e,t);if(n.list.type!=null)return mT(this.node.rawAttrs,e,t)}return t}};var ct={};je(ct,{OP_SCOPE_SUFFIX:()=>UC,abs:()=>Ut,acos:()=>s1,acosh:()=>a1,add:()=>Z,addN:()=>i1,all:()=>Db,any:()=>Ud,argMax:()=>Yu,argMin:()=>u1,asin:()=>l1,asinh:()=>p1,atan:()=>m1,atan2:()=>c1,atanh:()=>d1,avgPool:()=>Km,avgPool3d:()=>Fb,basicLSTMCell:()=>g1,batchNorm:()=>Qu,batchNorm2d:()=>Mb,batchNorm3d:()=>Rb,batchNorm4d:()=>Eb,batchToSpaceND:()=>Vm,bincount:()=>_b,booleanMaskAsync:()=>iZ,broadcastArgs:()=>y1,broadcastTo:()=>Hm,buffer:()=>Te,cast:()=>ne,ceil:()=>T1,clipByValue:()=>Or,clone:()=>cn,complex:()=>Pn,concat:()=>mt,concat1d:()=>Lb,concat2d:()=>$b,concat3d:()=>Bb,concat4d:()=>Ob,conv1d:()=>zb,conv2d:()=>Zo,conv2dTranspose:()=>Gb,conv3d:()=>Ub,conv3dTranspose:()=>Kb,cos:()=>jm,cosh:()=>Vb,cosineWindow:()=>Xd,cumprod:()=>Wd,cumsum:()=>Hb,denseBincount:()=>x1,depthToSpace:()=>I1,depthwiseConv2d:()=>Ju,diag:()=>C1,dilation2d:()=>k1,div:()=>me,divNoNan:()=>S1,dot:()=>v1,dropout:()=>kk,einsum:()=>A1,elu:()=>el,enclosingPowerOfTwo:()=>Sk,equal:()=>Xr,erf:()=>w1,euclideanNorm:()=>P1,exp:()=>hr,expandDims:()=>Er,expm1:()=>F1,eye:()=>Hl,fft:()=>sc,fill:()=>ci,floor:()=>tl,floorDiv:()=>Nb,fused:()=>sl,gather:()=>rl,gatherND:()=>gZ,greater:()=>pr,greaterEqual:()=>Ms,ifft:()=>Zl,imag:()=>Xu,image:()=>al,inTopKAsync:()=>TZ,irfft:()=>py,isFinite:()=>M1,isInf:()=>R1,isNaN:()=>E1,leakyRelu:()=>Xm,less:()=>qb,lessEqual:()=>Rs,linalg:()=>Ak,linspace:()=>_1,localResponseNormalization:()=>L1,log:()=>zr,log1p:()=>Ym,logSigmoid:()=>$1,logSoftmax:()=>Yb,logSumExp:()=>Zb,logicalAnd:()=>Zr,logicalNot:()=>Zm,logicalOr:()=>Qb,logicalXor:()=>B1,losses:()=>TQ,lowerBound:()=>O1,matMul:()=>qe,max:()=>dn,maxPool:()=>Qm,maxPool3d:()=>ey,maxPoolWithArgmax:()=>z1,maximum:()=>Qo,mean:()=>Bt,meshgrid:()=>G1,min:()=>Vd,minimum:()=>nl,mirrorPad:()=>U1,mod:()=>W1,moments:()=>ql,movingAverage:()=>lZ,mul:()=>_,multiRNNCell:()=>K1,multinomial:()=>V1,neg:()=>et,norm:()=>Vl,notEqual:()=>au,oneHot:()=>qu,ones:()=>gr,onesLike:()=>_r,op:()=>A,outerProduct:()=>H1,pad:()=>jn,pad1d:()=>q1,pad2d:()=>j1,pad3d:()=>X1,pad4d:()=>Y1,pool:()=>Z1,pow:()=>qn,prelu:()=>ec,print:()=>gb,prod:()=>Q1,rand:()=>J1,randomGamma:()=>gP,randomNormal:()=>Xl,randomStandardNormal:()=>bP,randomUniform:()=>di,range:()=>ol,real:()=>nu,reciprocal:()=>yP,relu:()=>Qr,relu6:()=>ny,reshape:()=>$,reverse:()=>Dr,reverse1d:()=>TP,reverse2d:()=>xP,reverse3d:()=>IP,reverse4d:()=>CP,rfft:()=>ac,round:()=>oy,rsqrt:()=>sy,scalar:()=>ce,scatterND:()=>mZ,searchSorted:()=>Hd,selu:()=>ay,separableConv2d:()=>iy,setdiff1dAsync:()=>kP,sigmoid:()=>En,sign:()=>SP,signal:()=>yQ,sin:()=>uy,sinh:()=>ly,slice:()=>Ge,slice1d:()=>rc,slice2d:()=>jd,slice3d:()=>nc,slice4d:()=>Yl,softmax:()=>oc,softplus:()=>su,spaceToBatchND:()=>Jm,sparse:()=>xQ,sparseToDense:()=>fZ,spectral:()=>bQ,split:()=>Pr,sqrt:()=>$t,square:()=>Ye,squaredDifference:()=>my,squeeze:()=>Es,stack:()=>br,step:()=>fi,stridedSlice:()=>vP,string:()=>IQ,sub:()=>le,sum:()=>de,tan:()=>AP,tanh:()=>Zu,tensor:()=>wr,tensor1d:()=>jt,tensor2d:()=>La,tensor3d:()=>Cb,tensor4d:()=>wP,tensor5d:()=>NP,tensor6d:()=>DP,tile:()=>Yr,topk:()=>PP,transpose:()=>We,truncatedNormal:()=>ic,unique:()=>FP,unsortedSegmentSum:()=>cy,unstack:()=>Gr,upperBound:()=>MP,variable:()=>dy,where:()=>Wt,whereAsync:()=>hy,zeros:()=>It,zerosLike:()=>De});var _E=(r,e,t,n=ct)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[n.add(S("a",r,e,t),S("b",r,e,t))];case"AddN":return[n.addN(S("tensors",r,e,t))];case"FloorMod":case"Mod":return[n.mod(S("a",r,e,t),S("b",r,e,t))];case"Mul":return[n.mul(S("a",r,e,t),S("b",r,e,t))];case"RealDiv":case"Div":return[n.div(S("a",r,e,t),S("b",r,e,t))];case"DivNoNan":return[n.divNoNan(S("a",r,e,t),S("b",r,e,t))];case"FloorDiv":return[n.floorDiv(S("a",r,e,t),S("b",r,e,t))];case"Sub":return[n.sub(S("a",r,e,t),S("b",r,e,t))];case"Minimum":return[n.minimum(S("a",r,e,t),S("b",r,e,t))];case"Maximum":return[n.maximum(S("a",r,e,t),S("b",r,e,t))];case"Pow":return[n.pow(S("a",r,e,t),S("b",r,e,t))];case"SquaredDifference":return[n.squaredDifference(S("a",r,e,t),S("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var LE=(r,e,t,n=ct)=>{switch(r.op){case"Abs":case"ComplexAbs":return[n.abs(S("x",r,e,t))];case"Acos":return[n.acos(S("x",r,e,t))];case"Acosh":return[n.acosh(S("x",r,e,t))];case"Asin":return[n.asin(S("x",r,e,t))];case"Asinh":return[n.asinh(S("x",r,e,t))];case"Atan":return[n.atan(S("x",r,e,t))];case"Atan2":return[n.atan2(S("x",r,e,t),S("y",r,e,t))];case"Atanh":return[n.atanh(S("x",r,e,t))];case"Ceil":return[n.ceil(S("x",r,e,t))];case"Complex":return[n.complex(S("real",r,e,t),S("imag",r,e,t))];case"Cos":return[n.cos(S("x",r,e,t))];case"Cosh":return[n.cosh(S("x",r,e,t))];case"Elu":return[n.elu(S("x",r,e,t))];case"Erf":return[n.erf(S("x",r,e,t))];case"Exp":return[n.exp(S("x",r,e,t))];case"Expm1":return[n.expm1(S("x",r,e,t))];case"Floor":return[n.floor(S("x",r,e,t))];case"Log":return[n.log(S("x",r,e,t))];case"Log1p":return[n.log1p(S("x",r,e,t))];case"Imag":return[n.imag(S("x",r,e,t))];case"Neg":return[n.neg(S("x",r,e,t))];case"Reciprocal":return[n.reciprocal(S("x",r,e,t))];case"Real":return[n.real(S("x",r,e,t))];case"Relu":return[n.relu(S("x",r,e,t))];case"Round":return[n.round(S("x",r,e,t))];case"Selu":return[n.selu(S("x",r,e,t))];case"Sigmoid":return[n.sigmoid(S("x",r,e,t))];case"Sin":return[n.sin(S("x",r,e,t))];case"Sign":return[n.sign(S("x",r,e,t))];case"Sinh":return[n.sinh(S("x",r,e,t))];case"Softplus":return[n.softplus(S("x",r,e,t))];case"Sqrt":return[n.sqrt(S("x",r,e,t))];case"Square":return[n.square(S("x",r,e,t))];case"Tanh":return[n.tanh(S("x",r,e,t))];case"Tan":return[n.tan(S("x",r,e,t))];case"ClipByValue":return[n.clipByValue(S("x",r,e,t),S("clipValueMin",r,e,t),S("clipValueMax",r,e,t))];case"Relu6":return[n.relu6(S("x",r,e,t))];case"Rsqrt":return[n.rsqrt(Sr(r.inputNames[0],e,t))];case"Prod":return[n.prod(S("x",r,e,t),S("axes",r,e,t))];case"LeakyRelu":return[n.leakyRelu(S("x",r,e,t),S("alpha",r,e,t))];case"Prelu":return[n.prelu(S("x",r,e,t),S("alpha",r,e,t))];case"IsNan":return[n.isNaN(Sr(r.inputNames[0],e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Yn(r,e,t=""){if(!(typeof r=="number"||typeof e=="number")){b.assert(r.length===e.length,()=>t+` Shapes ${r} and ${e} must match`);for(let n=0;n<r.length;n++){let o=r[n],s=e[n];b.assert(o<0||s<0||o===s,()=>t+` Shapes ${r} and ${e} must match`)}}}function $E(r){return!(typeof r=="number"||r.some(e=>e<0))}function Lc(r,e,t){let n=yT(r,t),o=!$E(n);if(o&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(o&&e.forEach(s=>{n=yT(s.shape,n)}),!$E(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function yT(r,e){if(typeof r=="number")return e;if(typeof e=="number")return r;if(r.length!==e.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${e}`);let t=[];for(let n=0;n<r.length;++n){let o=r[n],s=e[n];if(o>=0&&s>=0&&o!==s)throw new Error(`Incompatible shape during merge: ${r} vs. ${e}`);t[n]=o>=0?o:s}return t}var av=class{constructor(e,t,n,o,s,a,i){this.name=e;this.dtype=t;this.maxSize=n;this.elementShape=o;this.identicalElementShapes=s;this.dynamicSize=a;this.clearAfterRead=i;this.tensors=[];this.closed_=!1;this.idTensor=ce(0),Gt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Yn(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Gt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,o)=>this.write(n,t[o]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let o=0;o<this.size();o++)e.push(o)}if(e.length===0)return wr([],[0].concat(this.elementShape));let n=this.readMany(e);return Yn(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),br(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return wr([],[0].concat(this.elementShape));let t=[];for(let o=0;o<this.size();o++)t.push(o);let n=this.readMany(t);return Yn(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),mt(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Gr(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,o=e.map(u=>(n+=u,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:t.size/n,a=[];U(()=>{t=$(t,[1,n,s]);for(let u=0;u<e.length;++u){let l=u===0?0:o[u-1],p=[0,l,0],m=[1,e[u],s];a[u]=$(Ge(t,p,m),this.elementShape)}return a});let i=[];for(let u=0;u<e.length;u++)i[u]=u;this.writeMany(i,a)}};var gl=class{constructor(e,t,n,o=-1){this.tensors=e;this.elementShape=t;this.elementDtype=n;e?.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);Yn(t,s.shape,"TensorList shape mismatch: "),Gt(s)}),this.idTensor=ce(0),this.maxNumElements=o,Gt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new gl([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Yn(e,this.elementShape,"TensorList shape mismatch: ");let o=Lc(this.elementShape,this.tensors,e);return U(()=>{let s=this.tensors.map(a=>$(a,o));return br(s,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=Lc(this.elementShape,this.tensors,e),o=this.tensors.pop();return Yn(o.shape,e,"TensorList shape mismatch: "),$(o,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Yn(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Gt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new gl([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Yn(this.tensors[e].shape,t,"TensorList shape mismatch: ");let o=Lc(this.elementShape,this.tensors,t);return $(this.tensors[e],o)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Yn(this.elementShape,t.shape,"TensorList shape mismatch: "),Gt(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Yn(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let o=Lc(this.elementShape,this.tensors,n);return e.length===0?wr([],[0].concat(o)):U(()=>{let s=e.map(a=>$(this.tensors[a],o));return br(s,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Yn(this.elementShape,t,"TensorList shape mismatch: ");let n=Lc(this.elementShape,this.tensors,t);return this.size()===0?wr([],[0].concat(n)):U(()=>{let o=this.tensors.map(s=>$(s,n));return mt(o,0)})}};function BE(r,e,t){let n=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==t)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${t}`);let o=r.shape.slice(1);Yn(o,e,"TensorList shape mismatch: ");let s=Gr(r);return new gl(s,e,n)}function OE(r,e,t,n){return new gl([],r,e,n)}function zE(r,e,t,n){if(e.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${r.shape[0]}`);let o=Math.max(...e);if(n!=null&&n!==-1&&o>=n)throw new Error(`Max index must be < array size (${o}  vs. ${n})`);let s=new gl([],t,r.dtype,n),a=Gr(r,0);return e.forEach((i,u)=>{s.setItem(i,a[u])}),s}function GE(r,e,t){let n=0,o=e.map(p=>(n+=p,n));if(n!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${r.shape}`);let s=r.shape.slice(1),a=yT(s,t),i=n===0?0:r.size/n,u=U(()=>{let p=[];r=$(r,[1,n,i]);for(let m=0;m<e.length;++m){let c=m===0?0:o[m-1],d=[0,c,0],f=[1,e[m],i];p[m]=$(Ge(r,d,f),a)}return r.dispose(),p}),l=new gl([],t,r.dtype,e.length);for(let p=0;p<u.length;p++)l.setItem(p,u[p]);return l}var UE=async(r,e,t)=>{switch(r.op){case"If":case"StatelessIf":{let n=S("thenBranch",r,e,t),o=S("elseBranch",r,e,t),s=S("cond",r,e,t),a=S("args",r,e,t);return(await s.data())[0]?t.functionMap[n].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[o].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{let n=S("body",r,e,t),o=S("cond",r,e,t),s=S("args",r,e,t),a=await t.functionMap[o].executeFunctionAsync(s,t.tensorArrayMap,t.tensorListMap),i=s.map(p=>p.id),u=await a[0].data();a.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&p.dispose()});let l=s;for(;u[0];){let p=l;l=await t.functionMap[n].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);let m=l.map(d=>d.id);p.forEach(d=>{!d.kept&&i.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()});let c=await t.functionMap[o].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);u=await c[0].data(),c.forEach(d=>{!d.kept&&i.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()})}return l}case"LoopCond":{let n=S("pred",r,e,t);return[Ha(n)]}case"Switch":{let n=S("pred",r,e,t),o=S("data",r,e,t);return o.kept||(o=Ha(o)),(await n.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{let n=r.inputNames.find(o=>Sr(o,e,t)!==void 0);if(n){let o=Sr(n,e,t);return[Ha(o)]}return}case"Enter":{let n=S("frameName",r,e,t),o=S("tensor",r,e,t);return t.enterFrame(n),[Ha(o)]}case"Exit":{let n=S("tensor",r,e,t);return t.exitFrame(),[Ha(n)]}case"NextIteration":{let n=S("tensor",r,e,t);return t.nextIteration(),[Ha(n)]}case"TensorArrayV3":{let n=S("size",r,e,t),o=S("dtype",r,e,t),s=S("elementShape",r,e,t),a=S("dynamicSize",r,e,t),i=S("clearAfterRead",r,e,t),u=S("identicalElementShapes",r,e,t),l=S("name",r,e,t),p=new av(l,o,n,s,u,a,i);return t.addTensorArray(p),[p.idTensor,ce(1)]}case"TensorArrayWriteV3":{let n=S("tensorArrayId",r,e,t),o=S("index",r,e,t),s=S("tensor",r,e,t),a=t.getTensorArray(n.id);return a.write(o,s),[a.idTensor]}case"TensorArrayReadV3":{let n=S("tensorArrayId",r,e,t),o=S("index",r,e,t);return[t.getTensorArray(n.id).read(o)]}case"TensorArrayGatherV3":{let n=S("tensorArrayId",r,e,t),o=S("indices",r,e,t),s=S("dtype",r,e,t);return[t.getTensorArray(n.id).gather(o,s)]}case"TensorArrayScatterV3":{let n=S("tensorArrayId",r,e,t),o=S("indices",r,e,t),s=S("tensor",r,e,t),a=t.getTensorArray(n.id);return a.scatter(o,s),[a.idTensor]}case"TensorArrayConcatV3":{let n=S("tensorArrayId",r,e,t),o=t.getTensorArray(n.id),s=S("dtype",r,e,t);return[o.concat(s)]}case"TensorArraySplitV3":{let n=S("tensorArrayId",r,e,t),o=S("tensor",r,e,t),s=S("lengths",r,e,t),a=t.getTensorArray(n.id);return a.split(s,o),[a.idTensor]}case"TensorArraySizeV3":{let n=S("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return[ce(o.size(),"int32")]}case"TensorArrayCloseV3":{let n=S("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{let n=S("tensorListId",r,e,t),o=S("index",r,e,t),s=S("tensor",r,e,t),a=t.getTensorList(n.id);return a.setItem(o,s),[a.idTensor]}case"TensorListGetItem":{let n=S("tensorListId",r,e,t),o=S("index",r,e,t),s=S("elementShape",r,e,t),a=S("elementDType",r,e,t);return[t.getTensorList(n.id).getItem(o,s,a)]}case"TensorListScatterV2":case"TensorListScatter":{let n=S("indices",r,e,t),o=S("tensor",r,e,t),s=S("elementShape",r,e,t),a=S("numElements",r,e,t),i=zE(o,n,s,a);return t.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=S("elementShape",r,e,t),o=S("elementDType",r,e,t),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let a=S(s,r,e,t),i=r.op==="TensorListReserve"?-1:a,u=OE(n,o,a,i);return t.addTensorList(u),[u.idTensor]}case"TensorListGather":{let n=S("tensorListId",r,e,t),o=S("indices",r,e,t),s=S("elementShape",r,e,t),a=S("elementDType",r,e,t);return[t.getTensorList(n.id).gather(o,a,s)]}case"TensorListStack":{let n=S("tensorListId",r,e,t),o=S("elementShape",r,e,t),s=S("elementDType",r,e,t),a=S("numElements",r,e,t);return[t.getTensorList(n.id).stack(o,s,a)]}case"TensorListFromTensor":{let n=S("tensor",r,e,t),o=S("elementShape",r,e,t),s=S("elementDType",r,e,t),a=BE(n,o,s);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let n=S("tensorListId",r,e,t),o=t.getTensorList(n.id),s=S("dtype",r,e,t),a=S("elementShape",r,e,t);return[o.concat(s,a)]}case"TensorListPushBack":{let n=S("tensorListId",r,e,t),o=S("tensor",r,e,t),s=t.getTensorList(n.id);return s.pushBack(o),[s.idTensor]}case"TensorListPopBack":{let n=S("tensorListId",r,e,t),o=S("elementShape",r,e,t),s=S("elementDType",r,e,t);return[t.getTensorList(n.id).popBack(o,s)]}case"TensorListSplit":{let n=S("tensor",r,e,t),o=S("elementShape",r,e,t),s=S("lengths",r,e,t),a=GE(n,s,o);return t.addTensorList(a),[a.idTensor]}case"TensorListLength":{let n=S("tensorListId",r,e,t),o=t.getTensorList(n.id);return[ce(o.size(),"int32")]}case"TensorListResize":{let n=S("tensorListId",r,e,t),o=S("size",r,e,t),a=t.getTensorList(n.id).resize(o);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};function WE(r,e,t){let[n,o]=S("fusedOps",r,e,t),s=n==="biasadd",a=!s,i=o==="prelu",u=n==="fusedbatchnorm",l=S("numArgs",r,e,t);if(s){if(i&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let p=S("strides",r,e,t),m=Sh(r,e,t),c=S("dataFormat",r,e,t).toUpperCase(),d=S("dilations",r,e,t),[f,h]=S("args",r,e,t);a&&(h=f,f=void 0);let g=S("leakyreluAlpha",r,e,t);return{stride:p,pad:m,dataFormat:c,dilations:d,biasArg:f,preluArg:h,activationFunc:o,leakyreluAlpha:g}}var KE=(r,e,t,n=ct)=>{switch(r.op){case"Conv1D":{let o=S("stride",r,e,t),s=S("pad",r,e,t),a=S("dataFormat",r,e,t).toUpperCase(),i=S("dilation",r,e,t);return[n.conv1d(S("x",r,e,t),S("filter",r,e,t),o,s,a,i)]}case"Conv2D":{let o=S("strides",r,e,t),s=Sh(r,e,t),a=S("dataFormat",r,e,t).toUpperCase(),i=S("dilations",r,e,t);return[n.conv2d(S("x",r,e,t),S("filter",r,e,t),[o[1],o[2]],s,a,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:o,pad:s,dataFormat:a,dilations:i,biasArg:u,preluArg:l,activationFunc:p,leakyreluAlpha:m}=WE(r,e,t);return[n.fused.conv2d({x:S("x",r,e,t),filter:S("filter",r,e,t),strides:[o[1],o[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:p,preluActivationWeights:l,leakyreluAlpha:m})]}case"FusedDepthwiseConv2dNative":{let{stride:o,pad:s,dataFormat:a,dilations:i,biasArg:u,preluArg:l,activationFunc:p,leakyreluAlpha:m}=WE(r,e,t);return[n.fused.depthwiseConv2d({x:S("x",r,e,t),filter:S("filter",r,e,t),strides:[o[1],o[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:p,preluActivationWeights:l,leakyreluAlpha:m})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let o=S("outputShape",r,e,t),s=S("strides",r,e,t),a=Sh(r,e,t);return[n.conv2dTranspose(S("x",r,e,t),S("filter",r,e,t),o,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let o=S("strides",r,e,t),s=Sh(r,e,t),a=S("dilations",r,e,t),i=S("dataFormat",r,e,t).toUpperCase();return[n.depthwiseConv2d(S("input",r,e,t),S("filter",r,e,t),[o[1],o[2]],s,i,[a[1],a[2]])]}case"Conv3D":{let o=S("strides",r,e,t),s=S("pad",r,e,t),a=S("dataFormat",r,e,t).toUpperCase(),i=S("dilations",r,e,t);return[n.conv3d(S("x",r,e,t),S("filter",r,e,t),[o[1],o[2],o[3]],s,a,[i[1],i[2],i[3]])]}case"AvgPool":{let o=S("strides",r,e,t),s=S("pad",r,e,t),a=S("kernelSize",r,e,t);return[n.avgPool(S("x",r,e,t),[a[1],a[2]],[o[1],o[2]],s)]}case"MaxPool":{let o=S("strides",r,e,t),s=S("pad",r,e,t),a=S("kernelSize",r,e,t);return[n.maxPool(S("x",r,e,t),[a[1],a[2]],[o[1],o[2]],s)]}case"MaxPoolWithArgmax":{let o=S("strides",r,e,t),s=S("pad",r,e,t),a=S("kernelSize",r,e,t),i=S("includeBatchInIndex",r,e,t),{result:u,indexes:l}=n.maxPoolWithArgmax(S("x",r,e,t),[a[1],a[2]],[o[1],o[2]],s,i);return[u,l]}case"AvgPool3D":{let o=S("strides",r,e,t),s=S("pad",r,e,t),a=S("kernelSize",r,e,t);return[n.avgPool3d(S("x",r,e,t),[a[1],a[2],a[3]],[o[1],o[2],o[3]],s)]}case"MaxPool3D":{let o=S("strides",r,e,t),s=S("pad",r,e,t),a=S("kernelSize",r,e,t);return[n.maxPool3d(S("x",r,e,t),[a[1],a[2],a[3]],[o[1],o[2],o[3]],s)]}case"Dilation2D":{let o=S("strides",r,e,t),s=S("pad",r,e,t),a=S("dilations",r,e,t),i=o[1],u=o[2],l=a[1],p=a[2];return[n.dilation2d(S("x",r,e,t),S("filter",r,e,t),[i,u],s,[l,p],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var VE=(r,e,t,n=ct)=>{switch(r.op){case"Fill":{let o=S("shape",r,e,t),s=S("dtype",r,e,t),a=S("value",r,e,t);return[n.fill(o,a,s)]}case"LinSpace":{let o=S("start",r,e,t),s=S("stop",r,e,t),a=S("num",r,e,t);return[n.linspace(o,s,a)]}case"Multinomial":{let o=S("logits",r,e,t),s=S("numSamples",r,e,t),a=S("seed",r,e,t);return[n.multinomial(o,s,a)]}case"OneHot":{let o=S("indices",r,e,t),s=S("depth",r,e,t),a=S("onValue",r,e,t),i=S("offValue",r,e,t);return[n.oneHot(o,s,a,i)]}case"Ones":return[n.ones(S("shape",r,e,t),S("dtype",r,e,t))];case"OnesLike":return[n.onesLike(S("x",r,e,t))];case"RandomStandardNormal":return[n.randomStandardNormal(S("shape",r,e,t),S("dtype",r,e,t),S("seed",r,e,t))];case"RandomUniform":return[n.randomUniform(S("shape",r,e,t),S("minval",r,e,t),S("maxval",r,e,t),S("dtype",r,e,t))];case"Range":{let o=S("start",r,e,t),s=S("stop",r,e,t),a=S("step",r,e,t);return[n.range(o,s,a,S("dtype",r,e,t))]}case"TruncatedNormal":{let o=S("shape",r,e,t),s=S("mean",r,e,t),a=S("stdDev",r,e,t),i=S("seed",r,e,t);return[n.truncatedNormal(o,s,a,S("dtype",r,e,t),i)]}case"Zeros":return[n.zeros(S("shape",r,e,t),S("dtype",r,e,t))];case"ZerosLike":return[n.zerosLike(S("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function iv(r,e,t){let n=S("boxes",r,e,t),o=S("scores",r,e,t),s=S("maxOutputSize",r,e,t),a=S("iouThreshold",r,e,t),i=S("scoreThreshold",r,e,t),u=S("softNmsSigma",r,e,t);return{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:u}}var HE=async(r,e,t,n,o=ct)=>{switch(r.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:l,softNmsSigma:p}=iv(r,e,t),m=await o.image.nonMaxSuppressionWithScoreAsync(s,a,i,u,l,p);return[m.selectedIndices,m.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:l}=iv(r,e,t),p=S("padToMaxOutputSize",r,e,t),m=await o.image.nonMaxSuppressionPaddedAsync(s,a,i,u,l,p);return[m.selectedIndices,m.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:l}=iv(r,e,t);return[await o.image.nonMaxSuppressionAsync(s,a,i,u,l)]}case"Where":{let s=o.cast(S("condition",r,e,t),"bool"),a=[await o.whereAsync(s)];return s.dispose(),a}case"ListDiff":return o.setdiff1dAsync(S("x",r,e,t),S("y",r,e,t));default:throw TypeError(`Node type ${r.op} is not implemented`)}};var qE=(r,e,t,n=ct)=>{switch(r.op){case"LowerBound":{let o=S("sortedSequence",r,e,t),s=S("values",r,e,t);return[n.lowerBound(o,s)]}case"TopKV2":{let o=S("x",r,e,t),s=S("k",r,e,t),a=S("sorted",r,e,t),i=n.topk(o,s,a);return[i.values,i.indices]}case"UpperBound":{let o=S("sortedSequence",r,e,t),s=S("values",r,e,t);return[n.upperBound(o,s)]}case"Unique":{let o=S("x",r,e,t),s=n.unique(o);return[s.values,s.indices]}case"UniqueV2":{let o=S("x",r,e,t),s=S("axis",r,e,t),a=n.unique(o,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var jE=(r,e,t,n=ct)=>{switch(r.op){case"Const":return e[r.name];case"PlaceholderWithDefault":let o=S("default",r,e,t);return[Sr(r.name,e,t)||o];case"Placeholder":return[Sr(r.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let p=S("x",r,e,t);return[Ha(p)]}case"IdentityN":return S("x",r,e,t).map(p=>Ha(p));case"Snapshot":let s=S("x",r,e,t);return[Ha(s)];case"Shape":return[n.tensor1d(S("x",r,e,t).shape,"int32")];case"ShapeN":return S("x",r,e,t).map(p=>n.tensor1d(p.shape));case"Size":return[n.scalar(S("x",r,e,t).size,"int32")];case"Rank":return[n.scalar(S("x",r,e,t).rank,"int32")];case"NoOp":return[n.scalar(1)];case"Print":let a=S("x",r,e,t),i=S("data",r,e,t),u=S("message",r,e,t),l=S("summarize",r,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let p=0;p<i.length;p++)console.log(Array.prototype.slice.call(i[p].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var uv=class{constructor(e,t){this.keyDType=e;this.valueDType=t;this.handle=ce(0),this.tensorMap=new Map,Gt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ce(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),U(()=>{let o=Gr(t),s=n.length,a=o.length;b.assert(s===a,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${a} elements.`);for(let i=0;i<s;i++){let u=n[i],l=o[i];Gt(l),this.tensorMap.set(u,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return U(()=>{let o=[];for(let s=0;s<n.length;s++){let a=n[s],i=this.findWithDefault(a,t);o.push(i)}return br(o)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};var XE=async(r,e,t,n)=>{switch(r.op){case"HashTable":case"HashTableV2":{let o=S("keyDType",r,e,t),s=S("valueDType",r,e,t),a=new uv(o,s);return n.addHashTable(r.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{let o=S("tableHandle",r,e,t,n),s=S("keys",r,e,t),a=S("values",r,e,t);return[await n.getHashTableById(o.id).import(s,a)]}case"LookupTableFind":case"LookupTableFindV2":{let o=S("tableHandle",r,e,t,n),s=S("keys",r,e,t),a=S("defaultValue",r,e,t);return[await n.getHashTableById(o.id).find(s,a)]}case"LookupTableSize":case"LookupTableSizeV2":{let o=S("tableHandle",r,e,t,n);return[n.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var YE=(r,e,t,n=ct)=>{switch(r.op){case"ResizeBilinear":{let o=S("images",r,e,t),s=S("size",r,e,t),a=S("alignCorners",r,e,t),i=S("halfPixelCenters",r,e,t);return[n.image.resizeBilinear(o,[s[0],s[1]],a,i)]}case"ResizeNearestNeighbor":{let o=S("images",r,e,t),s=S("size",r,e,t),a=S("alignCorners",r,e,t),i=S("halfPixelCenters",r,e,t);return[n.image.resizeNearestNeighbor(o,[s[0],s[1]],a,i)]}case"CropAndResize":{let o=S("image",r,e,t),s=S("boxes",r,e,t),a=S("boxInd",r,e,t),i=S("cropSize",r,e,t),u=S("method",r,e,t),l=S("extrapolationValue",r,e,t);return[n.image.cropAndResize(o,s,a,i,u,l)]}case"ImageProjectiveTransformV3":{let o=S("images",r,e,t),s=S("transforms",r,e,t),a=S("outputShape",r,e,t),i=S("fillValue",r,e,t),u=S("interpolation",r,e,t),l=S("fillMode",r,e,t);return[n.image.transform(o,s,u.toLowerCase(),l.toLowerCase(),i,a)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var ZE=(r,e,t,n=ct)=>{switch(r.op){case"Equal":return[n.equal(S("a",r,e,t),S("b",r,e,t))];case"NotEqual":return[n.notEqual(S("a",r,e,t),S("b",r,e,t))];case"Greater":return[n.greater(S("a",r,e,t),S("b",r,e,t))];case"GreaterEqual":return[n.greaterEqual(S("a",r,e,t),S("b",r,e,t))];case"Less":return[n.less(S("a",r,e,t),S("b",r,e,t))];case"LessEqual":return[n.lessEqual(S("a",r,e,t),S("b",r,e,t))];case"LogicalAnd":return[n.logicalAnd(S("a",r,e,t),S("b",r,e,t))];case"LogicalNot":return[n.logicalNot(S("a",r,e,t))];case"LogicalOr":return[n.logicalOr(S("a",r,e,t),S("b",r,e,t))];case"Select":case"SelectV2":return[n.where(S("condition",r,e,t),S("a",r,e,t),S("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var QE=(r,e,t,n=ct)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[n.matMul(S("a",r,e,t),S("b",r,e,t),S("transposeA",r,e,t),S("transposeB",r,e,t))];case"Einsum":return[n.einsum(S("equation",r,e,t),...S("tensors",r,e,t))];case"Transpose":return[n.transpose(S("x",r,e,t),S("perm",r,e,t))];case"_FusedMatMul":let[o,s]=S("fusedOps",r,e,t),a=o==="biasadd",i=s==="prelu",u=S("numArgs",r,e,t),l=S("leakyreluAlpha",r,e,t);if(a){if(i&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[p,m]=S("args",r,e,t);return[n.fused.matMul({a:S("a",r,e,t),b:S("b",r,e,t),transposeA:S("transposeA",r,e,t),transposeB:S("transposeB",r,e,t),bias:p,activation:s,preluActivationWeights:m,leakyreluAlpha:l})];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var JE=(r,e,t,n=ct)=>{switch(r.op){case"EuclideanNorm":return[n.euclideanNorm(S("x",r,e,t),S("axis",r,e,t),S("keepDims",r,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[n.batchNorm(S("x",r,e,t),S("mean",r,e,t),S("variance",r,e,t),S("offset",r,e,t),S("scale",r,e,t),S("epsilon",r,e,t))];case"FusedBatchNormV3":return[n.batchNorm(S("x",r,e,t),S("mean",r,e,t),S("variance",r,e,t),S("offset",r,e,t),S("scale",r,e,t),S("epsilon",r,e,t))];case"LRN":return[n.localResponseNormalization(S("x",r,e,t),S("radius",r,e,t),S("bias",r,e,t),S("alpha",r,e,t),S("beta",r,e,t))];case"Softmax":return[n.softmax(S("x",r,e,t))];case"LogSoftmax":return[n.logSoftmax(S("x",r,e,t))];case"SparseToDense":return[n.sparseToDense(S("sparseIndices",r,e,t),S("outputShape",r,e,t),S("sparseValues",r,e,t),S("defaultValue",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var e_=(r,e,t,n=ct)=>{switch(r.op){case"Max":{let i=S("axis",r,e,t),u=S("keepDims",r,e,t);return[n.max(S("x",r,e,t),i,u)]}case"Mean":{let i=S("axis",r,e,t),u=S("keepDims",r,e,t);return[n.mean(S("x",r,e,t),i,u)]}case"Min":{let i=S("axis",r,e,t),u=S("keepDims",r,e,t);return[n.min(S("x",r,e,t),i,u)]}case"Sum":{let i=S("axis",r,e,t),u=S("keepDims",r,e,t);return[n.sum(S("x",r,e,t),i,u)]}case"All":{let i=S("axis",r,e,t),u=S("keepDims",r,e,t);return[n.all(S("x",r,e,t),i,u)]}case"Any":{let i=S("axis",r,e,t),u=S("keepDims",r,e,t);return[n.any(S("x",r,e,t),i,u)]}case"ArgMax":{let i=S("axis",r,e,t);return[n.argMax(S("x",r,e,t),i)]}case"ArgMin":{let i=S("axis",r,e,t);return[n.argMin(S("x",r,e,t),i)]}case"Prod":{let i=S("axis",r,e,t),u=S("keepDims",r,e,t);return[n.prod(S("x",r,e,t),i,u)]}case"Cumprod":{let i=S("axis",r,e,t),u=S("exclusive",r,e,t),l=S("reverse",r,e,t);return[n.cumprod(S("x",r,e,t),i,u,l)]}case"Cumsum":{let i=S("axis",r,e,t),u=S("exclusive",r,e,t),l=S("reverse",r,e,t);return[n.cumsum(S("x",r,e,t),i,u,l)]}case"Bincount":let o=S("x",r,e,t),s=S("weights",r,e,t),a=S("size",r,e,t);return[n.bincount(o,s,a)];case"DenseBincount":{let i=S("x",r,e,t),u=S("weights",r,e,t),l=S("size",r,e,t),p=S("binaryOutput",r,e,t);return[n.denseBincount(i,u,l,p)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var t_=(r,e,t,n=ct)=>{switch(r.op){case"ConcatV2":case"Concat":{let o=S("n",r,e,t),s=S("axis",r,e,t),a=S("tensors",r,e,t);return a=a.slice(0,o),[n.concat(a,s)]}case"Gather":{let o=S("x",r,e,t),s=S("indices",r,e,t);return[n.gather(o,n.cast(s,"int32"),0)]}case"GatherV2":{let o=S("axis",r,e,t),s=S("batchDims",r,e,t),a=S("x",r,e,t),i=S("indices",r,e,t);return[n.gather(a,n.cast(i,"int32"),o,s)]}case"Reverse":{let o=S("dims",r,e,t),s=[];for(let i=0;i<o.length;i++)o[i]&&s.push(i);let a=S("x",r,e,t);return[n.reverse(a,s)]}case"ReverseV2":{let o=S("axis",r,e,t),s=S("x",r,e,t);return[n.reverse(s,o)]}case"Slice":{let o=S("begin",r,e,t),s=S("size",r,e,t);return[n.slice(S("x",r,e,t),o,s)]}case"StridedSlice":{let o=S("begin",r,e,t),s=S("end",r,e,t),a=S("strides",r,e,t),i=S("beginMask",r,e,t),u=S("endMask",r,e,t),l=S("ellipsisMask",r,e,t),p=S("newAxisMask",r,e,t),m=S("shrinkAxisMask",r,e,t),c=S("x",r,e,t);return[n.stridedSlice(c,o,s,a,i,u,l,p,m)]}case"Pack":return U(()=>{let o=S("axis",r,e,t),s=S("tensors",r,e,t),a=s[0].shape,i=n.squeeze(s[0]).shape,u=s.map(l=>{let p=b.arraysEqual(l.shape,a);if(!p&&!b.arraysEqual(n.squeeze(l).shape,i))throw new Error("the input tensors shape does not match");return p?l:n.reshape(l,a)});return[n.stack(u,o)]});case"Unpack":{let o=S("axis",r,e,t),s=S("tensor",r,e,t);return n.unstack(s,o)}case"Tile":{let o=S("reps",r,e,t);return[n.tile(S("x",r,e,t),o)]}case"Split":case"SplitV":{let o=S("axis",r,e,t),s=S("numOrSizeSplits",r,e,t),a=S("x",r,e,t);return n.split(a,s,o)}case"ScatterNd":{let o=S("indices",r,e,t),s=S("values",r,e,t),a=S("shape",r,e,t);return[n.scatterND(o,s,a)]}case"GatherNd":{let o=S("x",r,e,t),s=S("indices",r,e,t);return[n.gatherND(o,s)]}case"SparseToDense":{let o=S("sparseIndices",r,e,t),s=S("outputShape",r,e,t),a=S("sparseValues",r,e,t),i=S("defaultValue",r,e,t);return[n.sparseToDense(o,a,s,a.dtype===i.dtype?i:n.cast(i,a.dtype))]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var r_=(r,e,t,n=ct)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:o,outputValues:s,emptyRowIndicator:a,reverseIndexMap:i}=n.sparse.sparseFillEmptyRows(S("indices",r,e,t),S("values",r,e,t),S("denseShape",r,e,t),S("defaultValue",r,e,t));return[o,s,a,i]}case"SparseReshape":{let{outputIndices:o,outputShape:s}=n.sparse.sparseReshape(S("inputIndices",r,e,t),S("inputShape",r,e,t),S("newShape",r,e,t));return[o,s]}case"SparseSegmentMean":return[n.sparse.sparseSegmentMean(S("data",r,e,t),S("indices",r,e,t),S("segmentIds",r,e,t))];case"SparseSegmentSum":return[n.sparse.sparseSegmentSum(S("data",r,e,t),S("indices",r,e,t),S("segmentIds",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var n_=(r,e,t,n=ct)=>{switch(r.op){case"FFT":return[n.fft(S("x",r,e,t))];case"IFFT":return[n.ifft(S("x",r,e,t))];case"RFFT":return[n.rfft(S("x",r,e,t))];case"IRFFT":return[n.irfft(S("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var o_=(r,e,t,n=ct)=>{switch(r.op){case"StringNGrams":{let{nGrams:o,nGramsSplits:s}=n.string.stringNGrams(S("data",r,e,t),S("dataSplits",r,e,t),S("separator",r,e,t),S("nGramWidths",r,e,t),S("leftPad",r,e,t),S("rightPad",r,e,t),S("padWidth",r,e,t),S("preserveShortSequences",r,e,t));return[o,s]}case"StringSplit":{let{indices:o,values:s,shape:a}=n.string.stringSplit(S("input",r,e,t),S("delimiter",r,e,t),S("skipEmpty",r,e,t));return[o,s,a]}case"StringToHashBucketFast":return[n.string.stringToHashBucketFast(S("input",r,e,t),S("numBuckets",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var s_=(r,e,t,n=ct)=>{switch(r.op){case"Cast":return[n.cast(S("x",r,e,t),S("dtype",r,e,t))];case"ExpandDims":{let o=S("axis",r,e,t);return[n.expandDims(S("x",r,e,t),o)]}case"Squeeze":{let o=S("axis",r,e,t);return[n.squeeze(S("x",r,e,t),o)]}case"Reshape":return[n.reshape(S("x",r,e,t),S("shape",r,e,t))];case"MirrorPad":return[n.mirrorPad(S("x",r,e,t),S("padding",r,e,t),S("mode",r,e,t))];case"PadV2":case"Pad":return[n.pad(S("x",r,e,t),S("padding",r,e,t),S("constantValue",r,e,t))];case"SpaceToBatchND":{let o=S("blockShape",r,e,t),s=S("paddings",r,e,t);return[n.spaceToBatchND(S("x",r,e,t),o,s)]}case"BatchToSpaceND":{let o=S("blockShape",r,e,t),s=S("crops",r,e,t);return[n.batchToSpaceND(S("x",r,e,t),o,s)]}case"DepthToSpace":{let o=S("blockSize",r,e,t),s=S("dataFormat",r,e,t).toUpperCase();return[n.depthToSpace(S("x",r,e,t),o,s)]}case"BroadcastTo":return[n.broadcastTo(S("x",r,e,t),S("shape",r,e,t))];case"BroadcastArgs":return[n.broadcastArgs(S("s0",r,e,t),S("s1",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function lv(r,e,t,n,o=U){let s=((a,i,u)=>{switch(a.category){case"arithmetic":return o(()=>_E(a,i,u));case"basic_math":return o(()=>LE(a,i,u));case"control":return UE(a,i,u);case"convolution":return o(()=>KE(a,i,u));case"creation":return o(()=>VE(a,i,u));case"dynamic":return HE(a,i,u);case"evaluation":return o(()=>qE(a,i,u));case"image":return o(()=>YE(a,i,u));case"graph":return o(()=>jE(a,i,u));case"logical":return o(()=>ZE(a,i,u));case"matrices":return o(()=>QE(a,i,u));case"normalization":return o(()=>JE(a,i,u));case"reduction":return o(()=>e_(a,i,u));case"slice_join":return o(()=>t_(a,i,u));case"sparse":return o(()=>r_(a,i,u));case"spectral":return o(()=>n_(a,i,u));case"string":return o(()=>o_(a,i,u));case"transformation":return o(()=>s_(a,i,u));case"hash_table":return XE(a,i,u,n);case"custom":let l=sT(a.op);if(l&&l.customExecutor)return l.customExecutor(new sv(a,i,u));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,e,t);return b.isPromise(s)?s.then(a=>[].concat(a)):[].concat(s)}var TT=class{constructor(e={},t={},n={},o={}){this.weightMap=e;this.tensorArrayMap=t;this.tensorListMap=n;this.functionMap=o;this.rootContext={id:0,frameName:"",iterationId:0};this.contexts=[this.rootContext];this.lastId=0;this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function pv(r,e,t,n){let o=new Set,s=[],a=null,i=null,u=new Set,l=Object.keys(r).map(c=>Cn(c)[0]),p=[];n!=null&&(p=n.map(c=>Cn(c.name)[0]));let m=[...e];for(;m.length>0;){let c=m.pop();if((mv(c)||Pte(c)||Fte(c))&&a==null&&(a=c,i=a.children.map(d=>d.name).filter(d=>o.has(d))),o.add(c.name),t[c.name]==null&&l.indexOf(c.name)===-1&&p.indexOf(c.name)===-1){if(c.inputs.length===0){s.push(c.name);continue}c.inputs.forEach(d=>{u.has(d.name)||(u.add(d.name),m.push(d))})}}return{inputs:r,outputs:e,usedNodes:o,missingInputs:s,dynamicNode:a,syncInputs:i}}function a_(r,e,t){let{usedNodes:n,inputs:o}=t,s=[],a=Object.keys(o).map(p=>Cn(p)[0]).map(p=>r.nodes[p]),i=r.initNodes;a.forEach(p=>{n.has(p.name)&&s.push(p)}),r.weights.forEach(p=>{n.has(p.name)&&s.push(p)}),i?.forEach(p=>{n.has(p.name)&&s.push(p)});let u=new Set,l=[];for(;s.length>0;){let p=s.pop();u.add(p.name),e[p.name]||l.push(p),p.children.forEach(m=>{!u.has(m.name)&&n.has(m.name)&&m.inputs.every(c=>u.has(c.name))&&s.push(m)})}return l}var wte=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Nte=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Dte=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function mv(r){return wte.indexOf(r.op)>=0}function Pte(r){return Nte.indexOf(r.op)>=0}function Fte(r){return Dte.indexOf(r.op)>=0}var $c=class{constructor(e,t){this.graph=e;this.parent=t;this.compiledMap=new Map;this._weightMap={};this.SEPERATOR=",";this._functions={};this._functionExecutorMap={};this.intermediateTensors={};this.keepTensorForDebug=!1;this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new $c(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(o=>o.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(s=>s.name).sort(),o=t.map(s=>s.name).sort();return n.join(this.SEPERATOR)+"--"+o.join(this.SEPERATOR)}compile(e,t){let n=pv(e,t,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:s,syncInputs:a}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(o.length>0){let i=t.map(l=>l.name),u=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${u}]. Missing the following inputs: [${o}]`)}return a_(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let o=n.map(m=>this.graph.nodes[Cn(m)[0]]),s=t.map(m=>Cn(m)[0]),a=s.map(m=>this.graph.nodes[m]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);let i=this.getCompilationKey(o,a),u=this.compiledMap.get(i);u==null&&(u=this.compile(e,a),this.compiledMap.set(i,u));let l={},p={};return U(()=>{let m=new TT(this.weightMap,l,p,this.functionExecutorMap),c={...this.weightMap};Object.keys(e).forEach(h=>{let[g,y]=Cn(h),T=[];T[y]=e[h],c[g]=T});let d=this.getFrozenTensorIds(c),f={};for(let h=0;h<u.length;h++){let g=u[h];if(!c[g.name]){let y=lv(g,c,m,this._resourceManager);if(b.isPromise(y))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);c[g.name]=y,this.checkTensorForDisposal(g.name,g,c,m,d,s,f)}}return this.parent==null&&m.dispose(d),t.map(h=>Sr(h,c,m))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(o=>o.id)));return new Set(t)}checkTensorForDisposal(e,t,n,o,s,a,i){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(u=>{u!=null&&(i[u.id]=(i[u.id]||0)+t.children.length)}),t.inputs.forEach(u=>{if(u.category!=="control"){let l=FE(u.name,n,o);l?.forEach(p=>{if(p&&!p.kept&&!s.has(p.id)){let m=i[p.id];if(m===1){if(!this.keepTensorForDebug)p.dispose();else{let[c,d]=Ks(t.name,o);this.intermediateTensors[c]?this.intermediateTensors[c][d]=p:(this.intermediateTensors[c]=[],this.intermediateTensors[c][d]=p)}delete i[p.id]}else m!=null&&i[p.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,o={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=B().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){console.warn(p.message)}this.resetIntermediateTensors();let a=new TT(this.weightMap,o,s,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);let i=t.map(p=>Sr(p,this.tensorsMap,a)),u=i.map(p=>p.id),l=Object.keys(e).map(p=>e[p].id);return this.keepIds=new Set([...u,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){let o=e.reduce((s,a,i)=>(s[this.inputs[i].name]=a,s),{});return this._executeAsync(o,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,o){let s=Object.keys(e),a=s.map(x=>this.graph.nodes[Cn(x)[0]]),i=n.map(x=>Cn(x)[0]),u=i.map(x=>this.graph.nodes[x]);u.length===0&&(u=this._outputs);let{usedNodes:l,missingInputs:p,dynamicNode:m,syncInputs:c}=pv(e,u,this.weightMap,this._initNodes),d=[...a,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:t.currentContext})),f={...this.weightMap};Object.keys(e).forEach(x=>{let[I,k]=Cn(x),w=[];w[k]=e[x],f[I]=w});let h={},g=this.getFrozenTensorIds(f),y={};for(;d.length>0;){let x=this.processStack(a,d,t,f,y,g,i,h,l);await Promise.all(x)}m==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let T=u.filter(x=>!mv(x)&&!Sr(x.name,f,t)).map(x=>x.name);if(T.length>0){let x="";throw m!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${T}] from the provided inputs [${s}]. Consider providing the following inputs: [${p}]. ${x}`)}return f}processStack(e,t,n,o,s,a,i,u,l){let p=[];for(;t.length>0;){let m=t.pop();n.currentContext=m.contexts;let c="";if(m.node.op==="Enter"&&S("isConstant",m.node,o,n)&&([c]=Ks(m.node.name,n)),o[m.node.name]==null){let d=lv(m.node,o,n,this._resourceManager);c||([c]=Ks(m.node.name,n));let f=n.currentContext;b.isPromise(d)?p.push(d.then(h=>(o[c]=h,n.currentContext=f,this.checkTensorForDisposal(c,m.node,o,n,a,i,u),this.processChildNodes(m.node,t,n,o,s,l),h))):(o[c]=d,this.checkTensorForDisposal(c,m.node,o,n,a,i,u),this.processChildNodes(m.node,t,n,o,s,l))}else this.processChildNodes(m.node,t,n,o,s,l)}return p}processChildNodes(e,t,n,o,s,a){e.children.forEach(i=>{let[u]=Ks(i.name,n);s[u]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(l=>!!Sr(l,o,n))&&(s[u]=!0,t.push({contexts:n.currentContext,node:i})):i.inputNames.every(l=>!!Sr(l,o,n))&&(s[u]=!0,t.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[o]=Cn(t),s=this.graph.nodes[o];if(s.attrParams.shape&&s.attrParams.shape.value){let a=s.attrParams.shape.value,i=a.length===n.shape.length&&n.shape.every((u,l)=>a[l]===-1||a[l]===u);b.assert(i,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&b.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let o=this._signature.inputs[n];t[o.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[o]=Cn(n);return this.graph.nodes[o]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=Cn(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}};var cv=class{constructor(e={},t={}){this.hashTableNameToHandle=e;this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}};var Mte="?tfjs-format=file",Rte="model.json",xT=class{constructor(e,t={},n=Fn){this.modelUrl=e;this.loadOptions=t;this.version="n/a";this.io=n,t==null&&(this.loadOptions={}),this.resourceManager=new cv}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return b.isPromise(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let s=this.artifacts.userDefinedMetadata;s.signature!=null&&(n=s.signature),s.structuredOutputKeys!=null&&(this.structuredOutputKeys=s.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let o=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new $c(bT.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let s=bT.Instance.transformGraph(e.modelInitializer);this.initializer=new $c(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=this.io.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){let n=this.execute(e,this.outputNodes);if(this.structuredOutputKeys){let o=n instanceof Xe?[n]:n,s={};return o.forEach((a,i)=>s[this.structuredOutputKeys[i]]=a),s}return n}normalizeInputs(e){if(!(e instanceof Xe)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,o)=>(t[n]=e[o],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function Ete(r,e={},t=Fn){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof r=="string"&&(r=Lte(r));let n=new xT(r,e,t);return await n.load(),n}function _te(r){if(r==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide a url or an IOHandler that loads the model");if(!r.load)throw new Error(`modelUrl IO Handler ${r} has no load function`);let e=new xT(r);return e.load(),e}function Lte(r){return r.endsWith("/")||(r=r+"/"),`${r}${Rte}${Mte}`}var $te="0.0.0";var W_={};je(W_,{CSVDataset:()=>Dh,Dataset:()=>Ii,FileDataSource:()=>_h,TextLineDataset:()=>wh,URLDataSource:()=>Lh,array:()=>N_,csv:()=>$_,func:()=>B_,generator:()=>O_,microphone:()=>G_,version_data:()=>U_,webcam:()=>z_,zip:()=>D_});var w_=Ml(qd());var c_=Ml(qd());function i_(r,e){return IT(r,e)}function IT(r,e,t=new Map,n=new Set){if(r==null)return null;if(typeof Blob=="function"&&r instanceof Blob)return r.slice();if(n.has(r))throw new Error("Circular references are not supported.");if(t.has(r))return t.get(r);let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(bl(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let a in r){let i=r[a],u=IT(i,e,t,n);s[a]=u}return n.delete(r),r.__proto__&&(s.__proto__=r.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return t.set(r,o.value),o.value}function u_(r,e=fv){return l_(r,e)}function l_(r,e,t=new Set){let n=r[0];if(t.has(n))throw new Error("Circular references are not supported.");let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(bl(n)){let s=Array.isArray(n)?[]:{};t.add(n);for(let a in n){let i=r.map(l=>l[a]),u=l_(i,e,t);s[a]=u}return t.delete(n),s}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return o.value}function fv(r){return r===null?null:bl(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}async function CT(r,e){let t=new Map;IT(r,e,t);for(let o of Array.from(t.keys())){let s=t.get(o);if(b.isPromise(s)){let a=await s;t.set(o,a)}}return IT(r,e,t)}function bl(r){let e=!1;if(B().get("IS_BROWSER"))e=r instanceof TextDecoder;else{let{StringDecoder:t}=dv();e=r instanceof t}return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof Xe)&&!(r instanceof Promise)&&!e)}function p_(r){return r==null||Bte(r)||Array.isArray(r)||typeof r=="object"&&r instanceof Xe||b.isTypedArray(r)}function Bte(r){return r===null||typeof r!="object"&&typeof r!="function"}function m_(r){return i_(r,Ote)}function Ote(r){return r instanceof Xe?{value:r.clone(),recurse:!1}:bl(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var vh=class{constructor(e){this.capacity=e;this.begin=0;this.end=0;if(e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}};var hv=class extends vh{constructor(){super(hv.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let o=0;o<n;o++)t[o]=this.get(this.wrap(this.begin+o));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},kT=hv;kT.INITIAL_CAPACITY=32;function bv(r){return new h_(r)}function Ah(r){return new g_(r)}function d_(r,e){return new yv(r,e)}function f_(r,e=Tv.FAIL){return new v_(r,e)}var mr=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new k_(this,e)}filter(e){return new I_(this,e)}map(e){return new C_(this,e)}mapAsync(e){return new gv(this,e)}serialMapAsync(e){return new gv(this,e).serial()}flatmap(e){return new S_(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new x_(this,e,t)}columnMajorBatch(e,t=!0,n=fv){return this.rowMajorBatch(e,t).map(s=>u_(s,n))}concatenate(e,t){return new yv(bv([this,e]),t)}take(e){return e<0||e==null?this:new T_(this,e)}skip(e){return e<0||e==null?this:new y_(this,e)}prefetch(e){return new xv(this,e)}shuffle(e,t){return new A_(this,e,t)}serial(){return new b_(this)}},h_=class extends mr{constructor(e){super();this.items=e;this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:m_(e),done:!1}}},g_=class extends mr{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},b_=class extends mr{constructor(e){super();this.upstream=e;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},y_=class extends mr{constructor(e,t){super();this.upstream=e;this.maxCount=t;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Fe(e.value)}return this.upstream.next()}},T_=class extends mr{constructor(e,t){super();this.upstream=e;this.maxCount=t;this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},x_=class extends mr{constructor(e,t,n=!0){super();this.upstream=e;this.batchSize=t;this.enableSmallLastBatch=n;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},I_=class extends mr{constructor(e,t){super();this.upstream=e;this.predicate=t;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Fe(e.value)}}},C_=class extends mr{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ds.getTensorsInContainer(e.value),n=this.transform(e.value),o=Ds.getTensorsInContainer(n);for(let s of t)Ds.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},k_=class extends mr{constructor(e,t){super();this.upstream=e;this.handler=t;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},gv=class extends mr{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ds.getTensorsInContainer(e.value),n=await this.transform(e.value),o=Ds.getTensorsInContainer(n);for(let s of t)Ds.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},Bc=class extends mr{constructor(){super();this.outputQueue=new kT,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},S_=class extends Bc{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Ds.getTensorsInContainer(e.value),n=this.transform(e.value),o=Ds.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let s of t)Ds.isTensorInList(s,o)||s.dispose();return!0}},yv=class extends mr{constructor(e,t){super();this.baseErrorHandler=t;this.lastRead=null;this.iterator=null;this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},Tv=(n=>(n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST",n))(Tv||{}),v_=class extends mr{constructor(e,t=0){super();this.iterators=e;this.mismatchMode=t;this.count=0;this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function o(a){return a instanceof mr?{value:a.next().then(u=>(t++,u.done&&n++,u.value)),recurse:!1}:{value:null,recurse:!0}}let s=await CT(this.iterators,o);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},xv=class extends mr{constructor(e,t){super();this.upstream=e;this.bufferSize=t;this.buffer=new vh(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},A_=class extends xv{constructor(e,t,n){super(e,t);this.upstream=e;this.windowSize=t;this.upstreamExhausted=!1;this.random=c_.alea(n||b.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}};var Ii=class{constructor(){this.size=null}batch(e,t=!0){let n=this;b.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let o;return this.size===1/0||this.size==null?o=this.size:t?o=Math.ceil(this.size/e):o=Math.floor(this.size/e),$n(async()=>(await n.iterator()).columnMajorBatch(e,t,zte),o)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,$n(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,$n(async()=>(await t.iterator()).filter(o=>U(()=>e(o))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return $n(async()=>(await t.iterator()).map(n=>U(()=>e(n))),this.size)}mapAsync(e){let t=this;return $n(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return $n(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,$n(async()=>{let o=Ah(async()=>({value:await t.iterator(),done:!1}));return d_(o.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,$n(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let o=this,s=w_.alea(t||b.now().toString());return $n(async()=>{let a=s.int32();return n&&(a+=s.int32()),(await o.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,$n(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Ii.MAX_BUFFER_SIZE=1e4;function $n(r,e=null){return new class extends Ii{constructor(){super(...arguments);this.size=e}async iterator(){return r()}}}function N_(r){return $n(async()=>bv(r),r.length)}function D_(r){if(!bl(r))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(r))for(let t=0;t<r.length;t++)e=e==null?r[t].size:Math.min(e,r[t].size);else if(r instanceof Object)for(let t in r)e=e==null?r[t].size:Math.min(e,r[t].size);return $n(async()=>{let t=await CT(r,n=>{if(n instanceof Ii)return{value:n.iterator(),recurse:!1};if(bl(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return f_(t,1)},e)}function zte(r){if(r===null)return null;let e=r[0];return p_(e)?{value:Gte(r),recurse:!1}:{value:null,recurse:!0}}function Gte(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof Xe?br(r):wr(r)}var wh=class extends Ii{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(o=>(o.endsWith("\r")&&(o=o.slice(0,-1)),o))}};var ST='"',Nh=Symbol("out"),P_=Symbol("field"),vT=Symbol("quote"),Iv=Symbol("quoteafterquote"),F_=Symbol("quoteinquote"),Dh=class extends Ii{constructor(e,t){super();this.input=e;this.hasHeader=!0;this.fullColumnNames=null;this.columnNamesValidated=!1;this.columnConfigs=null;this.configuredColumnsOnly=!1;this.delimiter=",";this.delimWhitespace=!1;this.base=new wh(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(b.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&b.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((o,s)=>(o[s]=o[s]+1||1,o),{}),n=Object.keys(t).filter(o=>t[o]>1);if(b.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let o of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(o)===-1)throw new Error('The key "'+o+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},o={};for(let s=0;s<this.fullColumnNames.length;s++){let a=this.fullColumnNames[s],i=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!i)){let u=t[s],l=null;if(u==="")if(i&&i.default!==void 0)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{let p=Number(u);if(isNaN(p))i&&i.dtype==="bool"?l=this.getBoolean(u):l=u;else if(!i||!i.dtype)l=p;else switch(i.dtype){case"float32":l=p;break;case"int32":l=Math.floor(p);break;case"bool":l=this.getBoolean(u);break;default:l=p}}i&&i.isLabel?o[a]=l:n[a]=l}}return Object.keys(o).length===0?n:{xs:n,ys:o}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],o=0,s=e.length,a=Nh;for(let i=0;i<s;i++)switch(a){case Nh:switch(e.charAt(i)){case ST:o=i+1,a=vT;break;case this.delimiter:if(o=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=Nh;break;default:a=P_,o=i;break}break;case P_:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(o,i)),a=Nh,o=i+1;break;default:}break;case vT:switch(e.charAt(i)){case ST:a=Iv;break;default:}break;case Iv:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(o,i-1)),a=Nh,o=i+1;break;case ST:a=vT;break;default:a=F_;break}break;case F_:switch(e.charAt(i)){case ST:a=vT;break;default:}break;default:}if(a===Iv?n.push(e.substring(o,s-1)):n.push(e.substring(o)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}};var Ph=class extends mr{constructor(e){super();this.microphoneConfig=e;this.isClosed=!1;this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!B().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new Ph(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let o=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(o,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let o=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(o,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(o=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&o({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),o({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((o,s)=>n.set(o,s*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(b.sizeFromShape(t));return n.set(e,n.length-e.length),wr(n,t)}};var Fh=class extends mr{constructor(e,t){super();this.webcamVideoElement=e;this.webcamConfig=t;this.isClosed=!0;this.resize=!1;if(this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=jt([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,o=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-n)/2,a=(1-o)/2,i=s+n,u=o+a;this.cropBox=La([a,s,u,i],[1,4])}else this.cropBox=La([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!B().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new Fh(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&b.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=kb.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return U(()=>{let t=Er(ne(e,"float32"),0),n;n=al.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let o=n.shape;return $(n,o.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}};var Mh=class{};var AT=class extends mr{split(e){return new M_(this,e)}},M_=class extends AT{constructor(e,t){super();this.upstream=e;this.impl=new R_(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},R_=class extends Bc{constructor(e,t){super();this.upstream=e;this.separator=t;this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}};var Cv=class extends mr{decodeUTF8(){return new E_(this)}},E_=class extends AT{constructor(e){super();this.upstream=e;this.impl=new __(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},__=class extends Bc{constructor(e){super();this.upstream=e;if(B().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=dv();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return B().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}};var Rh=class extends Cv{constructor(e,t={}){super();this.file=e;this.options=t;b.assert(e instanceof Uint8Array||(B().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let o=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,o)));else{let s=new FileReader;s.onload=i=>{let u=s.result;if(u instanceof ArrayBuffer&&(u=new Uint8Array(u)),!(u instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(u)},s.onabort=i=>n(new Error("Aborted")),s.onerror=i=>n(new Error(i.type));let a=this.file.slice(this.offset,o);s.readAsArrayBuffer(a)}this.offset=o}),done:!1}}};async function L_(r,e={},t){let n,o;typeof r=="string"?n=r:(n=r.url,o=Ute(r));let s=await(t||b.fetch)(n,o);if(s.ok){let a=new Uint8Array(await s.arrayBuffer());return new Rh(a,e)}else throw new Error(s.statusText)}var Ute=r=>({method:r.method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:r.referrer,integrity:r.integrity});function wT(r){return typeof r=="string"&&r.slice(0,7)==="file://"}var _h=class extends Mh{constructor(e,t={}){super();this.input=e;this.options=t}async iterator(){if(wT(this.input)&&B().get("IS_NODE")){let e=Eh();this.input=e.readFileSync(this.input.slice(7))}return new Rh(this.input,this.options)}};var Lh=class extends Mh{constructor(e,t={}){super();this.url=e;this.fileOptions=t}async iterator(){return wT(this.url)?new _h(this.url,this.fileOptions).iterator():L_(this.url,this.fileOptions)}};function $_(r,e={}){return new Dh(new Lh(r),e)}function B_(r){let e=Ah(r);return $n(async()=>e)}function O_(r){return $n(async()=>{let e=await r();return Ah(()=>e.next())})}async function z_(r,e){return Fh.create(r,e)}async function G_(r){return Ph.create(r)}var U_="0.0.0";function re(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&b.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}var Wte=yr.whereImpl,kv=class extends as{constructor(){super();this.blockSize=48;this.firstUse=!0;this.data=new ri(this,Mn())}nextDataId(){return kv.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,B().get("IS_NODE")&&C.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let o={id:this.nextDataId()};return this.data.set(o,{values:e,dtype:n,refCount:1}),o}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(a=>b.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return{dataId:o,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,o,s){this.data.set(e,{values:t,dtype:o,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let o=this.readSync(n.real.dataId),s=this.readSync(n.imag.dataId);return C.mergeRealAndImagArrays(o,s)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(o=>b.decodeString(o));return Te(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Te(e.shape,e.dtype,t)}makeOutput(e,t,n){return Mn().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=b.now();return e(),{kernelMs:b.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){re([e],"where");let t=this.readSync(e.dataId);return Wte(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},$h=kv;$h.nextDataId=0;var Kc={};je(Kc,{addImpl:()=>vv,bincountImpl:()=>Gc,bincountReduceImpl:()=>NT,ceilImpl:()=>Av,concatImpl:()=>yp,equalImpl:()=>wv,expImpl:()=>Dv,expm1Impl:()=>Fv,floorImpl:()=>Mv,gatherNdImpl:()=>DT,gatherV2Impl:()=>PT,greaterEqualImpl:()=>Ev,greaterImpl:()=>Rv,lessEqualImpl:()=>Lv,lessImpl:()=>_v,linSpaceImpl:()=>FT,logImpl:()=>$v,maxImpl:()=>MT,maximumImpl:()=>Bv,minimumImpl:()=>Ov,multiplyImpl:()=>Bh,negImpl:()=>zv,notEqualImpl:()=>Gv,prodImpl:()=>Uv,rangeImpl:()=>xp,rsqrtImpl:()=>Wv,scatterImpl:()=>cu,sigmoidImpl:()=>fL,simpleAbsImpl:()=>Sv,sliceImpl:()=>Ip,sparseFillEmptyRowsImpl:()=>RT,sparseReshapeImpl:()=>ET,sparseSegmentReductionImpl:()=>Wc,sqrtImpl:()=>bL,squaredDifferenceImpl:()=>Vv,stridedSliceImpl:()=>_T,stringNGramsImpl:()=>Cp,stringSplitImpl:()=>kp,stringToHashBucketFastImpl:()=>Sp,subImpl:()=>Hv,tileImpl:()=>LT,topKImpl:()=>$T,transposeImpl:()=>Uc,uniqueImpl:()=>BT});function Sv(r){let e=new Float32Array(r.length);for(let t=0;t<r.length;++t)e[t]=Math.abs(r[t]);return e}var Kte=r=>{let{x:e}=r.inputs,t=r.backend;re(e,"abs");let n=new Float32Array(b.sizeFromShape(e.shape)),o=t.data.get(e.dataId).values;return n=Sv(o),t.makeOutput(n,e.shape,e.dtype)},K_={kernelName:is,backendName:"cpu",kernelFunc:Kte};function st(r){return(e,t,n,o,s)=>{let a=C.assertAndGetBroadcastShape(e,t),i=a.length,u=b.computeStrides(a),l=b.sizeFromShape(a),p=b.getTypedArrayFromDType(s,l),m=e.length,c=t.length,d=b.computeStrides(e),f=b.computeStrides(t),h=C.getBroadcastDims(e,a),g=C.getBroadcastDims(t,a);if(h.length+g.length===0)for(let y=0;y<p.length;++y)p[y]=r(n[y%n.length],o[y%o.length]);else for(let y=0;y<p.length;++y){let T=b.indexToLoc(y,i,u),x=T.slice(-m);h.forEach(F=>x[F]=0);let I=b.locToIndex(x,m,d),k=T.slice(-c);g.forEach(F=>k[F]=0);let w=b.locToIndex(k,c,f);p[y]=r(n[I],o[w])}return[p,a]}}function vr(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,i=t.makeTensorInfo(n.shape,"complex64"),u=t.data.get(i.dataId);return u.complexTensorInfos={real:t.makeTensorInfo(n.shape,"float32",s),imag:t.makeTensorInfo(o.shape,"float32",a)},i}var V_={kernelName:Au,backendName:"cpu",kernelFunc:vr};function Oc(r,e,t="float32"){if(t==="complex64"){let o=Oc(r,e,"float32"),s=Oc(r,e,"float32");return vr({inputs:{real:o,imag:s},backend:r})}let n=b.makeZerosTypedArray(b.sizeFromShape(e),t);return r.makeTensorInfo(e,t,n)}function Wr(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var H_={kernelName:Kn,backendName:"cpu",kernelFunc:Wr};function Vs(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.real,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var q_={kernelName:Eu,backendName:"cpu",kernelFunc:Vs};function Hs(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return Wr({inputs:{x:o},backend:t});let a=Oc(t,o.shape,o.dtype),i=Hs({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=vr({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}if(o.dtype==="complex64"){let a=Vs({inputs:{input:o},backend:t}),i=Hs({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),i}if(!b.hasEncodingLoss(o.dtype,s)){let a=Wr({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32"){let a=t.data.get(o.dataId).values,i=Int32Array.from(a);return t.makeTensorInfo(o.shape,"int32",i)}if(s==="bool"){let a=t.data.get(o.dataId).values,i=b.toTypedArray([0],o.dtype),[u,l]=st((p,m)=>p!==m?1:0)(o.shape,[],a,i,"bool");return t.makeTensorInfo(l,"bool",u)}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var j_={kernelName:Un,backendName:"cpu",kernelFunc:Hs};function ut(r,e,t,n){return t==null?({inputs:o,backend:s})=>{let{a,b:i}=o,u=s;re([a,i],r);let l=u.data.get(a.dataId).values,p=u.data.get(i.dataId).values,m=a.dtype==="string"?C.fromUint8ToStringArray(l):l,c=a.dtype==="string"?C.fromUint8ToStringArray(p):p,d=n||a.dtype,[f,h]=e(a.shape,i.shape,m,c,d);return u.makeTensorInfo(h,d,f)}:({inputs:o,backend:s})=>{let{a,b:i}=o,u=s;if(a.dtype==="complex64"||i.dtype==="complex64"){let l=Hs({inputs:{x:a},backend:u,attrs:{dtype:"complex64"}}),p=u.data.get(l.dataId),m=p.complexTensorInfos.real,c=p.complexTensorInfos.imag,d=u.data.get(m.dataId).values,f=u.data.get(c.dataId).values,h=Hs({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(h.dataId),y=g.complexTensorInfos.real,T=g.complexTensorInfos.imag,x=u.data.get(y.dataId).values,I=u.data.get(T.dataId).values,[k,w,F]=t(a.shape,i.shape,d,f,x,I),M=u.makeTensorInfo(F,"float32",k),R=u.makeTensorInfo(F,"float32",w),L=vr({inputs:{real:M,imag:R},backend:u});return u.disposeIntermediateTensorInfo(l),u.disposeIntermediateTensorInfo(h),u.disposeIntermediateTensorInfo(M),u.disposeIntermediateTensorInfo(R),L}else{let l=u.data.get(a.dataId).values,p=u.data.get(i.dataId).values,m=n||a.dtype,[c,d]=e(a.shape,i.shape,l,p,m);return u.makeTensorInfo(d,m,c)}}}function zc(r){return(e,t,n,o,s,a)=>{let i=C.assertAndGetBroadcastShape(e,t),u=b.sizeFromShape(i),l=i.length,p=b.computeStrides(i),m=b.getTypedArrayFromDType("float32",u),c=b.getTypedArrayFromDType("float32",u),d=C.getBroadcastDims(e,i),f=C.getBroadcastDims(t,i),h=C.mergeRealAndImagArrays(n,o),g=C.mergeRealAndImagArrays(s,a),y=e.length,T=b.computeStrides(e),x=t.length,I=b.computeStrides(t);if(d.length+f.length===0)for(let k=0;k<m.length;k++){let w=k%h.length,F=k%g.length,M=r(h[w*2],h[w*2+1],g[F*2],g[F*2+1]);m[k]=M.real,c[k]=M.imag}else for(let k=0;k<m.length;k++){let w=b.indexToLoc(k,l,p),F=w.slice(-y);d.forEach(W=>F[W]=0);let M=b.locToIndex(F,y,T),R=w.slice(-x);f.forEach(W=>R[W]=0);let L=b.locToIndex(R,x,I),O=r(h[M*2],h[M*2+1],g[L*2],g[L*2+1]);m[k]=O.real,c[k]=O.imag}return[m,c,i]}}var vv=st((r,e)=>r+e),Vte=zc((r,e,t,n)=>({real:r+t,imag:e+n})),Ci=ut(wn,vv,Vte),X_={kernelName:wn,backendName:"cpu",kernelFunc:Ci};function Gc(r,e,t,n,o){let s=b.sizeFromShape(n),a=b.makeZerosTypedArray(o,t);for(let i=0;i<r.length;i++){let u=r[i];if(u<0)throw new Error("Input x must be non-negative!");u>=o||(s>0?a[u]+=e[i]:a[u]+=1)}return a}function NT(r,e,t,n=!1){let o=r.shape[0],s=r.shape[1],a=Te([o,t],e.dtype);for(let i=0;i<o;i++)for(let u=0;u<s;u++){let l=r.get(i,u);if(l<0)throw new Error("Input x must be non-negative!");l>=t||(n?a.set(1,i,l):e.size>0?a.set(a.get(i,l)+e.get(i,u),i,l):a.set(a.get(i,l)+1,i,l))}return a}function kn(r){return(e,t,n)=>{let o=b.getTypedArrayFromDType(t,e.length);for(let s=0;s<e.length;++s)o[s]=r(e[s],n);return o}}function Re(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(re(a,r),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,u=i.data.get(a.dataId).values,l=b.sizeFromShape(a.shape),p=t||a.dtype,m=b.getArrayFromDType(p,l);for(let c=0;c<l;++c)m[c]=e(u[c],o);return i.makeTensorInfo(a.shape,p,m)}}function qs(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(re(a,r),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,u=i.data.get(a.dataId).values,l=t||a.dtype,p=e(u,l,o);return i.makeTensorInfo(a.shape,l,p)}}var Av=kn(r=>Math.ceil(r)),Hte=qs(io,Av),Y_={kernelName:io,backendName:"cpu",kernelFunc:Hte};function yp(r,e,t,n){let o=b.getArrayFromDType(t,b.sizeFromShape(e));if(n&&t!=="string"){let s=0;r.forEach(a=>{let i=b.sizeFromShape(a.shape);o.set(a.vals,s),s+=i})}else{let s=0;r.forEach(a=>{let i=t==="string"?C.fromUint8ToStringArray(a.vals):a.vals,u=0;for(let l=0;l<a.shape[0];++l){let p=l*e[1]+s;for(let m=0;m<a.shape[1];++m)o[p+m]=i[u++]}s+=a.shape[1]})}return o}var wv=st((r,e)=>r===e?1:0),Nv=ut(ca,wv,null,"bool"),Z_={kernelName:ca,backendName:"cpu",kernelFunc:Nv};var Dv=kn(r=>Math.exp(r)),Pv=qs(bo,Dv,"float32"),Q_={kernelName:bo,backendName:"cpu",kernelFunc:Pv};var Fv=kn(r=>Math.expm1(r)),qte=qs(da,Fv),J_={kernelName:da,backendName:"cpu",kernelFunc:qte};var Mv=kn(r=>Math.floor(r)),jte=qs(yo,Mv),eL={kernelName:yo,backendName:"cpu",kernelFunc:jte};function DT(r,e,t,n,o,s,a,i,u){let l=Te([n,s],t);for(let p=0;p<n;p++){let m=[],c=0;for(let d=0;d<o;d++){let f=r[p*o+d];c+=f*a[d],m.push(f)}if(c<0||c>=u/s)throw new Error(`Invalid indices: ${m} does not index into ${i}`);for(let d=0;d<s;d++)l.values[p*s+d]=e.get(...e.indexToLoc(c*s+d))}return l}function PT(r,e,t){let n=Te(t,r.dtype);for(let o=0;o<n.size;++o){let a=n.indexToLoc(o).slice(),i=a[0],u=a[2],l=e.locToIndex([i,u]);a[2]=e.values[l];let p=r.locToIndex(a);0<=p&&p<r.values.length&&(n.values[o]=r.values[p])}return n}var Rv=st((r,e)=>r>e?1:0),Xte=ut(ga,Rv,null,"bool"),tL={kernelName:ga,backendName:"cpu",kernelFunc:Xte};var Ev=st((r,e)=>r>=e?1:0),Yte=ut(Io,Ev,null,"bool"),rL={kernelName:Io,backendName:"cpu",kernelFunc:Yte};var _v=st((r,e)=>r<e?1:0),Zte=ut(ba,_v,null,"bool"),nL={kernelName:ba,backendName:"cpu",kernelFunc:Zte};var Lv=st((r,e)=>r<=e?1:0),Qte=ut(ya,Lv,null,"bool"),oL={kernelName:ya,backendName:"cpu",kernelFunc:Qte};function FT(r,e,t){let n=(e-r)/(t-1),o=b.makeZerosTypedArray(t,"float32");o[0]=r;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}var $v=kn(r=>Math.log(r)),Jte=qs(ko,$v),sL={kernelName:ko,backendName:"cpu",kernelFunc:Jte};function MT(r,e,t,n){let o=b.getTypedArrayFromDType(n,b.sizeFromShape(t));for(let s=0;s<o.length;++s){let a=s*e,i=r[a];for(let u=0;u<e;++u){let l=r[a+u];(Number.isNaN(l)||l>i)&&(i=l)}o[s]=i}return o}var Bv=st((r,e)=>Math.max(r,e)),ere=ut(vo,Bv),aL={kernelName:vo,backendName:"cpu",kernelFunc:ere};var Ov=st((r,e)=>Math.min(r,e)),tre=ut(Do,Ov),iL={kernelName:Do,backendName:"cpu",kernelFunc:tre};var Bh=st((r,e)=>r*e),rre=zc((r,e,t,n)=>({real:r*t-e*n,imag:r*n+e*t})),Tp=ut(Fo,Bh,rre),uL={kernelName:Fo,backendName:"cpu",kernelFunc:Tp};function zv(r,e,t){let n=b.createScalarValue(-1,t);return Bh([],e,n,r,t)}function nre(r){let{inputs:e,backend:t}=r,{x:n}=e;re(n,"neg");let o=t.data.get(n.dataId).values,[s,a]=zv(o,n.shape,n.dtype);return t.makeTensorInfo(a,n.dtype,s)}var lL={kernelName:cs,backendName:"cpu",kernelFunc:nre};var Gv=st((r,e)=>r!==e?1:0),ore=ut(Ia,Gv,null,"bool"),pL={kernelName:Ia,backendName:"cpu",kernelFunc:ore};function Uc(r,e,t,n,o){let s=e.length,a=b.sizeFromShape(e),i=b.computeStrides(e),u=b.computeStrides(o),l=b.getTypedArrayFromDType(t,b.sizeFromShape(o));for(let p=0;p<a;++p){let m=b.indexToLoc(p,s,i),c=new Array(m.length);for(let f=0;f<c.length;f++)c[f]=m[n[f]];let d=b.locToIndex(c,s,u);l[d]=r[p]}return l}function Zt(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{perm:s}=t;re(o,"transpose");let a=o.shape.length,i=new Array(a);for(let m=0;m<i.length;m++)i[m]=o.shape[s[m]];let u=n.data.get(o.dataId).values,l=Uc(u,o.shape,o.dtype,s,i);return{dataId:n.write(l,i,o.dtype),shape:i,dtype:o.dtype}}var mL={kernelName:Dn,backendName:"cpu",kernelFunc:Zt};function Uv(r,e,t,n){let[o,s]=C.computeOutAndReduceShapes(r,n),a=Et(e,"int32"),i=b.makeZerosTypedArray(b.sizeFromShape(o),a),u=b.sizeFromShape(s);for(let l=0;l<i.length;++l){let p=l*u,m=1;for(let c=0;c<u;++c)m*=t[p+c];i[l]=m}return{outVals:i,outShape:o,outDtype:a}}function sre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;re(o,"prod");let i=o.shape.length,u=b.parseAxisParam(s,o.shape),l=C.getAxesPermutation(u,i),p=u,m=o,c=[];l!=null&&(m=Zt({inputs:{x:o},backend:t,attrs:{perm:l}}),c.push(m),p=C.getInnerMostAxes(p.length,i));let d=t.data.get(m.dataId).values,{outVals:f,outShape:h,outDtype:g}=Uv(m.shape,m.dtype,d,p),y=h;return a&&(y=C.expandShapeToKeepDim(h,u)),c.forEach(T=>t.disposeIntermediateTensorInfo(T)),t.makeTensorInfo(y,g,f)}var cL={kernelName:_o,backendName:"cpu",kernelFunc:sre};function xp(r,e,t,n){let o=r===e,s=r<e&&t<0,a=e<r&&t>1;if(o||s||a)return b.makeZerosTypedArray(0,n);let i=Math.abs(Math.ceil((e-r)/t)),u=b.makeZerosTypedArray(i,n);e<r&&t===1&&(t=-1),u[0]=r;for(let l=1;l<u.length;l++)u[l]=u[l-1]+t;return u}var Wv=kn(r=>1/Math.sqrt(r)),are=qs(zo,Wv),dL={kernelName:zo,backendName:"cpu",kernelFunc:are};function cu(r,e,t,n,o,s,a,i,u,l){let p=[n/o,o],m=r.values,c=e.values;if(n===0)return Te(t,e.dtype);let d=Te(p,e.dtype);typeof u=="string"||typeof u=="number"?d.values.fill(u):typeof u=="boolean"&&d.values.fill(+u);for(let f=0;f<s;f++){let h=[],g=0;for(let y=0;y<a;y++){let T=m[f*a+y];h.push(T),g+=T*i[y]}if(g<0||g>=n/o)throw new Error(`Invalid indices: ${h} does not index into ${t}`);for(let y=0;y<o;y++)l?d.values[g*o+y]+=c[f*o+y]:d.values[g*o+y]=e.rank===0?c[0]:c[f*o+y]}return d}var fL=kn(r=>1/(1+Math.exp(-r))),Kv=Re(Uo,r=>1/(1+Math.exp(-r))),hL={kernelName:Uo,backendName:"cpu",kernelFunc:Kv};function Ip(r,e,t,n,o){let s=xt.isSliceContinous(n,e,t),a=b.sizeFromShape(t),i=b.computeStrides(n);if(s){let m=xt.computeFlatOffset(e,i);return o==="string"?r.slice(m,m+a):r.subarray(m,m+a)}let u=o==="string"?C.fromUint8ToStringArray(r):r,l=Te(n,o,u),p=Te(t,o);for(let m=0;m<p.size;++m){let c=p.indexToLoc(m),d=c.map((f,h)=>f+e[h]);p.set(l.get(...d),...c)}return o==="string"?C.fromStringArrayToUint8(p.values):p.values}function js(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n;re(o,"slice");let[i,u]=xt.parseSliceParams(o,s,a);xt.assertParamsValid(o,i,u);let l=t.data.get(o.dataId).values,p=Ip(l,i,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,p)}var gL={kernelName:bs,backendName:"cpu",kernelFunc:js};function RT(r,e,t,n,o,s,a){let i=e[0],u=s[0],l=new Array(u),p=new Array(i),m=e[1];if(u===0){if(i!==0)throw new Error(C.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));let g=b.getArrayFromDType(t,0),y=b.getArrayFromDType(o,0);return[g,[0,m],y,l,p]}let c=!0,d=0,f=new Array(u).fill(0);for(let g=0;g<i;++g){let y=r[g*m];if(y<0)throw new Error(C.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=u)throw new Error(C.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,u));++f[y],c=c&&y>=d,d=y}let h=!0;for(let g=0;g<u;++g){let y=f[g]===0;l[g]=y,h=h&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(h&&c){let g=r,y=n;for(let T=0;T<i;++T)p[T]=T;return[g,[i,m],y,l,p]}else{let g=f[u-1],y=b.getArrayFromDType(t,g*m),T=b.getArrayFromDType(o,g),x=new Array(u).fill(0);for(let I=0;I<i;++I){let k=r[I*m],w=x[k],F=(k===0?0:f[k-1])+w;x[k]++;for(let M=0;M<m;++M)y[F*m+M]=r[I*m+M];T[F]=n[I],p[I]=F}for(let I=0;I<u;++I)if(x[I]===0){let w=I===0?0:f[I-1];y[w*m+0]=I;for(let F=1;F<m;++F)y[w*m+F]=0;T[w]=a}return[y,[g,m],T,l,p]}}function ET(r,e,t,n,o){let s=b.sizeFromShape(n),a=e[0],i=o.length,u=[],l=1,p=-1;for(let g=0;g<i;++g){let y=o[g];if(y===-1){if(p!==-1)throw new Error(C.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(p,g));p=g,u.push(1)}else{if(y<0)throw new Error(C.getSparseReshapeNegativeOutputDimErrorMessage(g,y));l*=y,u.push(y)}}if(p!==-1){if(l<=0)throw new Error(C.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(s/l);if(l*g!==s)throw new Error(C.getSparseReshapeInputOutputMultipleErrorMessage(n,u));u[p]=g}if(b.sizeFromShape(u)!==s)throw new Error(C.getSparseReshapeInputOutputMismatchErrorMessage(n,u));let c=n.length,d=[];if(c>0){d[c-1]=1;for(let g=c-2;g>=0;--g)d[g]=d[g+1]*n[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*u[g+1]}let h=b.getArrayFromDType(t,a*i);for(let g=0;g<a;++g){let y=0;for(let T=0;T<c;++T)y+=r[g*c+T]*d[T];for(let T=0;T<i;++T)h[g*i+T]=Math.trunc(y/f[T]),y%=f[T]}return[h,[a,i],u]}function Wc(r,e,t,n,o,s=!1,a=0){let i=n.length,u=[e[0],r.length/e[0]],l=u[1],m=i>0?o[i-1]+1:0;if(m<0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let c=e.slice();c[0]=m;let d=c.reduce((x,I)=>x*I,1),f=b.getArrayFromDType(t,d);if(i===0)return m>0&&f.fill(a),[f,c];if(m<=0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=0,g=1,y=0,T=o[h];for(;;){let x=0;if(g<i){if(x=o[g],T===x){++g;continue}if(T>=x)throw new Error(C.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(T<0||T>=m)throw new Error(C.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(T,m));T>y&&f.fill(a,y*l,T*l);for(let I=h;I<g;++I){let k=n[I];if(k<0||k>=u[0])throw new Error(C.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(I,n[I],u[0]));for(let w=0;w<l;w++)f[T*l+w]+=r[k*l+w]}if(s)for(let I=0;I<l;I++)f[T*l+I]/=g-h;if(h=g,++g,y=T+1,T=x,g>i)break}return y<m&&f.fill(a,y*l,m*l),[f,c]}var bL=kn(r=>Math.sqrt(r)),ire=Re(Wo,r=>Math.sqrt(r)),yL={kernelName:Wo,backendName:"cpu",kernelFunc:ire};var Vv=st((r,e)=>{let t=r-e;return t*t}),ure=ut(Ho,Vv),TL={kernelName:Ho,backendName:"cpu",kernelFunc:ure};function _T(r,e,t,n){let o=Te(r,e.dtype);for(let s=0;s<o.size;s++){let a=o.indexToLoc(s),i=new Array(a.length);for(let u=0;u<i.length;u++)i[u]=a[u]*t[u]+n[u];o.set(e.get(...i),...a)}return o}var xL=class{constructor(e,t,n,o,s,a){this.separator=b.encodeString(e),this.nGramWidths=t,this.leftPad=b.encodeString(n),this.rightPad=b.encodeString(o),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,o,s,a){for(let i=0;i<s;++i){let u=this.getPadWidth(a),l=Math.max(0,u-i),p=Math.max(0,u-(s-(i+1))),m=a-(l+p),c=t+(l>0?0:i-u),d=0;d+=l*this.leftPad.length;for(let T=0;T<m;++T)d+=e[c+T].length;d+=p*this.rightPad.length,d+=(l+p+m-1)*this.separator.length,n[o+i]=new Uint8Array(d);let h=n[o+i],g=0,y=T=>T.forEach(x=>h[g++]=x);for(let T=0;T<l;++T)y(this.leftPad),y(this.separator);for(let T=0;T<m-1;++T)y(e[c+T]),y(this.separator);if(m>0){y(e[c+m-1]);for(let T=0;T<p;++T)y(this.separator),y(this.rightPad)}else{for(let T=0;T<p-1;++T)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(e,t){let n=e.length,o=t.length;if(o>0){let u=t[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let l=1;l<o;++l){let p=t[l]>=u;if(p=p&&t[l]<=n,!p)throw new Error(`Invalid split value ${t[l]}, must be in [${u}, ${n}]`);u=t[l]}if(u!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${u}`)}let s=o-1,a=b.getArrayFromDType("int32",o);if(n===0||o===0){let u=new Array(n);for(let l=0;l<=s;++l)a[l]=0;return[u,a]}a[0]=0;for(let u=1;u<=s;++u){let l=t[u]-t[u-1],p=0;this.nGramWidths.forEach(m=>{p+=this.getNumNGrams(l,m)}),this.preserveShort&&l>0&&p===0&&(p=1),a[u]=a[u-1]+p}let i=new Array(a[s]);for(let u=0;u<s;++u){let l=t[u],p=a[u];if(this.nGramWidths.forEach(m=>{let c=t[u+1]-t[u],d=this.getNumNGrams(c,m);this.createNGrams(e,l,i,p,d,m),p+=d}),this.preserveShort&&p===a[u]){let m=t[u+1]-t[u];if(m===0)continue;let c=m+2*this.padWidth,d=1;this.createNGrams(e,l,i,p,d,c)}}return[i,a]}};function Cp(r,e,t,n,o,s,a,i){return new xL(t,n,o,s,a,i).compute(r,e)}function lre(r,e,t,n){if(!r.length)return;if(e.length===0){for(let s=0;s<r.length;++s)n.push(r.subarray(s,s+1));return}if(e.length===1){let s=e[0],a=r.indexOf(s);for(;a!==-1;){let i=r.subarray(0,a);(!t||i.length!==0)&&n.push(i),r=r.subarray(a+1),a=r.indexOf(s)}(!t||r.length!==0)&&n.push(r);return}let o=0;for(let s=0;s<r.length+1;s++)if(s===r.length||e.indexOf(r[s])!==-1){let a=r.subarray(o,s);(!t||a.length!==0)&&n.push(a),o=s+1}}function kp(r,e,t){let n=r.length,o=[],s=0,a=0,i=new Array(n);for(let c=0;c<n;++c){let d=o.length;lre(r[c],e,t,o);let f=o.length-d;i[c]=f,s+=f,a=Math.max(a,f)}let u=b.getArrayFromDType("int32",s*2),l=new Array(s),p=[n,a],m=0;for(let c=0;c<n;++c)for(let d=0;d<i[c];++d)u[m*2]=c,u[m*2+1]=d,l[m]=o[m],++m;return[u,l,p]}function Sp(r,e){let t=b.getArrayFromDType("int32",r.length);for(let n=0;n<r.length;++n)t[n]=b.fingerPrint64(r[n]).modulo(e).getLowBitsUnsigned();return t}var Hv=st((r,e)=>r-e),pre=zc((r,e,t,n)=>({real:r-t,imag:e-n})),Oh=ut(qo,Hv,pre),IL={kernelName:qo,backendName:"cpu",kernelFunc:Oh};function LT(r,e){let t=new Array(r.rank);for(let o=0;o<t.length;o++)t[o]=r.shape[o]*e[o];let n=Te(t,r.dtype);for(let o=0;o<n.values.length;++o){let s=n.indexToLoc(o),a=new Array(r.rank);for(let u=0;u<a.length;u++)a[u]=s[u]%r.shape[u];let i=r.locToIndex(a);n.values[o]=r.values[i]}return n}var zh=(r,e)=>{let t=e.value-r.value;return t===0?r.index-e.index:t};function CL(r,e,t=0,n=r.length-1){for(;n>t;){if(n-t>600){let i=n-t+1,u=e-t+1,l=Math.log(i),p=.5*Math.exp(2*l/3),m=.5*Math.sqrt(l*p*(i-p)/i)*Math.sign(u-i/2),c=Math.max(t,Math.floor(e-u*p/i+m)),d=Math.min(n,Math.floor(e+(i-u)*p/i+m));CL(r,e,c,d)}let o=r[e],s=t,a=n;for(b.swap(r,t,e),zh(r[n],o)>0&&b.swap(r,t,n);s<a;){for(b.swap(r,s,a),s++,a--;zh(r[s],o)<0;)s=s+1;for(;zh(r[a],o)>0;)a=a-1}zh(r[t],o)===0?b.swap(r,t,a):(a=a+1,b.swap(r,a,n)),a<=e&&(t=a+1),e<=a&&(n=a-1)}}function $T(r,e,t,n,o){let s=e[e.length-1],[a,i]=[r.length/s,s],u=b.getTypedArrayFromDType(t,a*n),l=b.getTypedArrayFromDType("int32",a*n);for(let m=0;m<a;m++){let c=m*i,d=r.subarray(c,c+i),f=new Array(d.length);d.forEach((T,x)=>f[x]={value:T,index:x}),n<f.length&&(CL(f,n),f=f.slice(0,n)),o&&f.sort(zh);let h=m*n,g=u.subarray(h,h+n),y=l.subarray(h,h+n);for(let T=0;T<n;T++)g[T]=f[T].value,y[T]=f[T].index}let p=e.slice();return p[p.length-1]=n,[Te(p,t,u),Te(p,"int32",l)]}function BT(r,e,t,n){let o=b.parseAxisParam(e,t)[0],s=[1,t[0],1];for(let f=0;f<o;f++)s[0]*=t[f];s[1]=t[o];for(let f=o+1;f<t.length;f++)s[2]*=t[f];let a={},i=new Int32Array(t[o]),u=new yt(s,n,r),l=[],p=s[0]===1&&s[2]===1;for(let f=0;f<t[o];f++){let h;if(p)h=r[f].toString();else{let g=[];for(let y=0;y<s[0];y++)for(let T=0;T<s[2];T++)g.push(u.get(y,f,T));h=g.join(",")}if(a[h]!==void 0)i[f]=a[h];else{let g=Object.keys(a).length;a[h]=g,i[f]=g,l.push(f)}}let m=s.slice();m[1]=Object.keys(a).length;let c=new yt(m,n);l.forEach((f,h)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)c.set(u.get(g,f,y),g,h,y)});let d=t.slice();return d[o]=m[1],{outputValues:c.values,outputShape:d,indices:i}}var mre="0.0.0";ju("cpu",()=>new $h,1);var qv=Re(go,r=>r>=0?r:Math.exp(r)-1),kL={kernelName:go,backendName:"cpu",kernelFunc:qv};function jv(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n;re([o],"leakyRelu");let a=b.sizeFromShape(o.shape),i=t.data.get(o.dataId).values,u=b.getTypedArrayFromDType("float32",a);for(let l=0;l<i.length;l++)u[l]=i[l]<0?s*i[l]:i[l];return t.makeTensorInfo(o.shape,"float32",u)}var SL={kernelName:Co,backendName:"cpu",kernelFunc:jv};var cre=st((r,e)=>r<0?e*r:r);function Xv(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e;re([n,o],"prelu");let s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,[i,u]=cre(n.shape,o.shape,s,a,"float32");return t.makeTensorInfo(u,"float32",i)}var vL={kernelName:Eo,backendName:"cpu",kernelFunc:Xv};var Yv=Re(Lo,r=>Math.max(0,r)),AL={kernelName:Lo,backendName:"cpu",kernelFunc:Yv};var Zv=Re(Oo,r=>Math.min(Math.max(0,r),6)),wL={kernelName:Oo,backendName:"cpu",kernelFunc:Zv};function vp(r,e,t,n,o){if(t==="linear")return Wr({inputs:{x:e},backend:r});if(t==="relu")return Yv({inputs:{x:e},backend:r});if(t==="elu")return qv({inputs:{x:e},backend:r});if(t==="relu6")return Zv({inputs:{x:e},backend:r});if(t==="prelu")return Xv({inputs:{x:e,alpha:n},backend:r});if(t==="leakyrelu")return jv({inputs:{x:e},backend:r,attrs:{alpha:o}});if(t==="sigmoid")return Kv({inputs:{x:e},backend:r});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}function tt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,a=b.sizeFromShape(o.shape),i=b.inferFromImplicitShape(s,a),u=b.sizeFromShape(i);b.assert(a===u,()=>`The new shape (${i}) has ${u} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(o.dataId);let l=t.data.get(o.dataId);if(l.complexTensorInfos!=null){let p=l.complexTensorInfos.real,m=l.complexTensorInfos.imag;p.shape=i,m.shape=i}return{dataId:o.dataId,shape:i,dtype:o.dtype}}var NL={kernelName:hs,backendName:"cpu",kernelFunc:tt};function Qv(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;re([o,s],"matMul");let u=o.shape.length,l=s.shape.length,p=a?o.shape[u-2]:o.shape[u-1],m=i?s.shape[l-1]:s.shape[l-2],c=a?o.shape[u-1]:o.shape[u-2],d=i?s.shape[l-2]:s.shape[l-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=b.sizeFromShape(f),y=b.sizeFromShape(h),x=Nr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);b.assert(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let I=a?[g,p,c]:[g,c,p],k=i?[y,d,m]:[y,m,d],w=tt({inputs:{x:o},backend:t,attrs:{shape:I}}),F=tt({inputs:{x:s},backend:t,attrs:{shape:k}}),M=a?w.shape[1]:w.shape[2],R=a?w.shape[2]:w.shape[1],L=i?F.shape[1]:F.shape[2],O=Math.max(g,y),W=t.data.get(w.dataId).values,V=t.data.get(F.dataId).values,j=b.computeStrides(w.shape),q=b.computeStrides(F.shape),[Y,J,H]=a?[j[0],1,j[1]]:[j[0],j[1],1],[oe,se,ae]=i?[1,q[1],q[0]]:[q[1],1,q[0]],pe=R*L,ie=Te([O,R,L],w.dtype),be=ie.values,fe=t.blockSize;for(let Ie=0;Ie<O;Ie++)for(let we=0;we<R;we+=fe)for(let Ee=0;Ee<L;Ee+=fe)for(let Le=0;Le<M;Le+=fe){let Ze=Math.min(we+fe,R),ee=Math.min(Ee+fe,L),gt=Math.min(Le+fe,M);for(let Be=we;Be<Ze;Be++)for(let Rt=Ee;Rt<ee;Rt++){let Dt=0;for(let pt=Le;pt<gt;pt++){let Jt=Math.min(Ie,g-1)*Y,Ot=Math.min(Ie,y-1)*ae,nn=W[Jt+Be*J+pt*H],Ht=V[pt*oe+Rt*se+Ot];Dt+=nn*Ht}be[Ie*pe+(Be*L+Rt)]+=Dt}}return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(F),t.makeTensorInfo(x,ie.dtype,ie.values)}var DL={kernelName:ao,backendName:"cpu",kernelFunc:Qv};function dre(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:m}=n,c,d,f,h=[];c=Qv({inputs:{a:o,b:s},attrs:{transposeA:u,transposeB:l},backend:t}),a&&(d=Ci({inputs:{a:c,b:a},backend:t}),h.push(c),c=d),p&&(f=vp(t,c,p,i,m),h.push(c),c=f);for(let y of h)t.disposeIntermediateTensorInfo(y);return c}var PL={kernelName:ks,backendName:"cpu",kernelFunc:dre};var fre=Re(Di,r=>Math.acos(r)),FL={kernelName:Di,backendName:"cpu",kernelFunc:fre};var hre=Re(Pi,r=>Math.acosh(r)),ML={kernelName:Pi,backendName:"cpu",kernelFunc:hre};function gre(r){let{inputs:e,backend:t}=r,n=e;re(e,"addN");let o=n.map(i=>t.data.get(i.dataId).values),s=Te(n[0].shape,n[0].dtype),a=s.values;for(let i=0;i<n.length;i++){let u=o[i];for(let l=0;l<a.length;l++)a[l]+=u[l]}return t.makeTensorInfo(s.shape,s.dtype,s.values)}var RL={kernelName:no,backendName:"cpu",kernelFunc:gre};function bre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;re(o,"all");let i=b.parseAxisParam(s,o.shape),u=i,l=C.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=Zt({inputs:{x:o},backend:t,attrs:{perm:l}}),u=C.getInnerMostAxes(u.length,o.shape.length)),C.assertAxesAreInnerMostDims("all",u,p.shape.length);let[m,c]=C.computeOutAndReduceShapes(p.shape,u),d=b.sizeFromShape(c),f=b.makeZerosTypedArray(b.sizeFromShape(m),p.dtype),h=t.data.get(p.dataId).values;for(let y=0;y<f.length;++y){let T=y*d,x=h[T];for(let I=0;I<d;++I){let k=h[T+I];x=x&&k}f[y]=x}l!=null&&t.disposeIntermediateTensorInfo(p);let g=t.makeTensorInfo(m,p.dtype,f);if(a){let y=C.expandShapeToKeepDim(m,i),T=tt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),T}return g}var EL={kernelName:Fi,backendName:"cpu",kernelFunc:bre};function yre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;re(o,"any");let i=b.parseAxisParam(s,o.shape),u=i,l=C.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=Zt({inputs:{x:o},backend:t,attrs:{perm:l}}),u=C.getInnerMostAxes(u.length,o.shape.length)),C.assertAxesAreInnerMostDims("any",u,p.shape.length);let[m,c]=C.computeOutAndReduceShapes(p.shape,u),d=b.sizeFromShape(c),f=b.makeZerosTypedArray(b.sizeFromShape(m),p.dtype),h=t.data.get(p.dataId).values;for(let y=0;y<f.length;++y){let T=y*d,x=h[T];for(let I=0;I<d;++I){let k=h[T+I];x=x||k}f[y]=x}l!=null&&t.disposeIntermediateTensorInfo(p);let g=t.makeTensorInfo(m,p.dtype,f);if(a){let y=C.expandShapeToKeepDim(m,i),T=tt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),T}return g}var _L={kernelName:Mi,backendName:"cpu",kernelFunc:yre};function Tre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;re(o,"argMax");let a=b.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Zt({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),a=[a[0]],C.assertAxesAreInnerMostDims("argMax",a,u.shape.length);let[p,m]=C.computeOutAndReduceShapes(u.shape,a),c=b.sizeFromShape(p),d=b.makeZerosTypedArray(c,"int32"),f=b.sizeFromShape(m),h=t.data.get(u.dataId).values;for(let g=0;g<d.length;++g){let y=g*f,T=h[y],x=0;for(let I=0;I<f;++I){let k=h[y+I];k>T&&(T=k,x=I)}d[g]=x}return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(p,"int32",d)}var LL={kernelName:oo,backendName:"cpu",kernelFunc:Tre};function xre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;re(o,"argMin");let a=b.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Zt({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),a=[a[0]],C.assertAxesAreInnerMostDims("argMin",a,u.shape.length);let[p,m]=C.computeOutAndReduceShapes(u.shape,a),c=b.sizeFromShape(p),d=b.makeZerosTypedArray(c,"int32"),f=b.sizeFromShape(m),h=t.data.get(u.dataId).values;for(let g=0;g<d.length;++g){let y=g*f,T=h[y],x=0;for(let I=0;I<f;++I){let k=h[y+I];k<T&&(T=k,x=I)}d[g]=x}return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(p,"int32",d)}var $L={kernelName:si,backendName:"cpu",kernelFunc:xre};var Ire=Re(Ri,r=>Math.asin(r)),BL={kernelName:Ri,backendName:"cpu",kernelFunc:Ire};var Cre=Re(Ei,r=>Math.asinh(r)),OL={kernelName:Ei,backendName:"cpu",kernelFunc:Cre};var kre=Re(_i,r=>Math.atan(r)),zL={kernelName:_i,backendName:"cpu",kernelFunc:kre};var Sre=st((r,e)=>Math.atan2(r,e)),vre=ut($i,Sre),GL={kernelName:$i,backendName:"cpu",kernelFunc:vre};var Are=Re(Li,r=>Math.atanh(r)),UL={kernelName:Li,backendName:"cpu",kernelFunc:Are};function Vc(r,e,t,n,o,s){let a=o.strideHeight,i=o.strideWidth,u=o.dilationHeight,l=o.dilationWidth,p=o.effectiveFilterHeight,m=o.effectiveFilterWidth,c=o.padInfo.top,d=o.padInfo.left,f=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=Te(o.outShape,t),g=h.values,y=o.outShape[1]*o.outShape[2]*o.outShape[3],T=o.outShape[2]*o.outShape[3],x=o.outShape[3];for(let I=0;I<o.batchSize;++I){let k=I*y,w=I*n[0];for(let F=0;F<o.inChannels;++F)for(let M=0;M<o.outHeight;++M){let R=M*a-c,L=Math.max(0,R),O=Math.min(o.inHeight,p+R),W=k+M*T;for(let V=0;V<o.outWidth;++V){let j=V*i-d,q=Math.max(0,j),Y=Math.min(o.inWidth,m+j),J=f,H=0,oe=0;for(let ae=L;ae<O;ae+=u){let pe=w+ae*n[1];for(let ie=q;ie<Y;ie+=l){let be=pe+ie*n[2],fe=r[be+F];s==="max"&&fe>J?J=fe:s==="avg"&&(H+=fe,oe++)}if(isNaN(J))break}let se=W+V*x+F;g[se]=s==="avg"?H/oe:J}}}return h}function OT(r,e,t,n,o=!1,s=!1){let a=Te(n.outShape,"int32"),i=n.strideHeight,u=n.strideWidth,l=n.dilationHeight,p=n.dilationWidth,m=n.effectiveFilterHeight,c=n.effectiveFilterWidth,d=n.padInfo.top,f=n.padInfo.left,h=Te(e,t,r);for(let g=0;g<n.batchSize;++g)for(let y=0;y<n.inChannels;++y)for(let T=0;T<n.outHeight;++T){let x=T*i-d,I=x;for(;I<0;)I+=l;let k=Math.min(n.inHeight,m+x);for(let w=0;w<n.outWidth;++w){let F=w*u-f,M=F;for(;M<0;)M+=p;let R=Math.min(n.inWidth,c+F),L=Number.NEGATIVE_INFINITY,O=-1;for(let W=I;W<k;W+=l){let V=W-x;for(let j=M;j<R;j+=p){let q=j-F,Y=h.get(g,W,j,y);Y>L&&(L=Y,o?O=s?((g*n.inHeight+W)*n.inWidth+j)*n.inChannels+y:(W*n.inWidth+j)*n.inChannels+y:O=V*c+q)}}a.set(O,g,T,w,y)}}return a}function zT(r,e,t,n,o,s){let a=o.strideDepth,i=o.strideHeight,u=o.strideWidth,l=o.dilationDepth,p=o.dilationHeight,m=o.dilationWidth,c=o.effectiveFilterDepth,d=o.effectiveFilterHeight,f=o.effectiveFilterWidth,h=o.padInfo.front,g=o.padInfo.top,y=o.padInfo.left,T=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Te(o.outShape,t),I=x.values,k=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],w=o.outShape[2]*o.outShape[3]*o.outShape[4],F=o.outShape[3]*o.outShape[4],M=o.outShape[4];for(let R=0;R<o.batchSize;++R){let L=R*k,O=R*n[0];for(let W=0;W<o.inChannels;++W)for(let V=0;V<o.outDepth;++V){let j=V*a-h,q=j;for(;q<0;)q+=l;let Y=Math.min(o.inDepth,c+j),J=L+V*w;for(let H=0;H<o.outHeight;++H){let oe=H*i-g,se=oe;for(;se<0;)se+=p;let ae=Math.min(o.inHeight,d+oe),pe=J+H*F;for(let ie=0;ie<o.outWidth;++ie){let be=ie*u-y,fe=be;for(;fe<0;)fe+=m;let Ie=Math.min(o.inWidth,f+be),we=pe+ie*M,Ee=T,Le=0,Ze=0;for(let gt=q;gt<Y;gt+=l){let Be=O+gt*n[1];for(let Rt=se;Rt<ae;Rt+=p){let Dt=Be+Rt*n[2];for(let pt=fe;pt<Ie;pt+=m){let Jt=Dt+pt*n[3],Ot=r[Jt+W];if(s==="max"&&Ot>Ee?Ee=Ot:s==="avg"&&(Le+=Ot,Ze++),isNaN(Ee))break}if(isNaN(Ee))break}if(isNaN(Ee))break}let ee=we+W;I[ee]=s==="avg"?Le/Ze:Ee}}}}return x}function WL(r,e){let t=Te(e.outShape,"int32"),n=e.strideDepth,o=e.strideHeight,s=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,p=e.effectiveFilterHeight,m=e.effectiveFilterWidth,c=e.padInfo.front,d=e.padInfo.top,f=e.padInfo.left;for(let h=0;h<e.batchSize;++h)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){let T=y*n-c,x=T;for(;x<0;)x+=a;let I=Math.min(e.inDepth,l+T);for(let k=0;k<e.outHeight;++k){let w=k*o-d,F=w;for(;F<0;)F+=i;let M=Math.min(e.inHeight,p+w);for(let R=0;R<e.outWidth;++R){let L=R*s-f,O=L;for(;O<0;)O+=u;let W=Math.min(e.inWidth,m+L),V=Number.NEGATIVE_INFINITY,j=-1;for(let q=x;q<I;q+=a){let Y=q-T;for(let J=F;J<M;J+=i){let H=J-w;for(let oe=O;oe<W;oe+=u){let se=oe-L,ae=r.get(h,q,J,oe,g);ae>=V&&(V=ae,j=Y*p*m+H*p+se)}}}t.set(j,h,y,k,R,g)}}}return t}function wre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;re(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;b.assert(C.eitherStridesOrDilationsAreOne(a,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=C.computePool2DInfo(o.shape,s,a,l,i,u),m;if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))m=Wr({inputs:{x:o},backend:t});else{let c=t.data.get(o.dataId).values,d=b.computeStrides(o.shape),f=Vc(c,o.shape,o.dtype,d,p,"avg");m=t.makeTensorInfo(p.outShape,o.dtype,f.values)}return m}var KL={kernelName:so,backendName:"cpu",kernelFunc:wre};function Nre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=n;re(o,"avgPool3d");let p=C.computePool3DInfo(o.shape,s,a,1,i,u,l),m=t.data.get(o.dataId).values,c=zT(m,o.shape,o.dtype,b.computeStrides(o.shape),p,"avg");return t.makeTensorInfo(c.shape,"float32",c.values)}var VL={kernelName:vu,backendName:"cpu",kernelFunc:Nre};function Dre(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=n;re([o,s],"avgPool3DGrad");let p=C.computePool3DInfo(s.shape,a,i,1,u,l),m=p.strideDepth,c=p.strideHeight,d=p.strideWidth,f=p.filterDepth,h=p.filterHeight,g=p.filterWidth,y=p.dilationDepth,T=p.dilationHeight,x=p.dilationWidth,I=p.effectiveFilterDepth,k=p.effectiveFilterHeight,w=p.effectiveFilterWidth,F=I-1-p.padInfo.front,M=w-1-p.padInfo.left,R=k-1-p.padInfo.top,L=Te(s.shape,"float32"),O=1/(f*h*g),W=t.bufferSync(o);for(let V=0;V<p.batchSize;++V)for(let j=0;j<p.inChannels;++j)for(let q=0;q<p.inDepth;++q)for(let Y=0;Y<p.inHeight;++Y)for(let J=0;J<p.inWidth;++J){let H=q-F,oe=Y-R,se=J-M,ae=0;for(let pe=0;pe<I;pe+=y){let ie=(H+pe)/m;if(!(ie<0||ie>=p.outDepth||Math.floor(ie)!==ie))for(let be=0;be<k;be+=T){let fe=(oe+be)/c;if(!(fe<0||fe>=p.outHeight||Math.floor(fe)!==fe))for(let Ie=0;Ie<w;Ie+=x){let we=(se+Ie)/d;if(we<0||we>=p.outWidth||Math.floor(we)!==we)continue;ae+=W.get(V,ie,fe,we,j)}}}L.set(ae*O,V,q,Y,J,j)}return t.makeTensorInfo(L.shape,L.dtype,L.values)}var HL={kernelName:pm,backendName:"cpu",kernelFunc:Dre};function Pre(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s;re([o,s],"avgPoolGrad");let{filterSize:i,strides:u,pad:l}=n,p=C.computePool2DInfo(a.shape,i,u,1,l),m=p.strideHeight,c=p.strideWidth,d=p.filterHeight,f=p.filterWidth,h=p.dilationHeight,g=p.dilationWidth,y=p.effectiveFilterHeight,T=p.effectiveFilterWidth,x=T-1-p.padInfo.left,I=y-1-p.padInfo.top,k=Te(a.shape,"float32"),w=1/(d*f),F=t.data.get(o.dataId).values,M=Te(o.shape,"float32",F);for(let R=0;R<p.batchSize;++R)for(let L=0;L<p.inChannels;++L)for(let O=0;O<p.inHeight;++O)for(let W=0;W<p.inWidth;++W){let V=O-I,j=W-x,q=0;for(let Y=0;Y<y;Y+=h){let J=(V+Y)/m;if(!(J<0||J>=p.outHeight||Math.floor(J)!==J))for(let H=0;H<T;H+=g){let oe=(j+H)/c;if(oe<0||oe>=p.outWidth||Math.floor(oe)!==oe)continue;q+=M.get(R,J,oe,L)}}k.set(q*w,R,O,W,L)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}var qL={kernelName:lm,backendName:"cpu",kernelFunc:Pre};function Fre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,scale:s,offset:a,mean:i,variance:u}=e;b.assert(i.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(s==null||i.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),re([o,i,u,s,a],"batchNorm");let{varianceEpsilon:l}=n;l==null&&(l=.001);let p=t.data.get(o.dataId).values,m=t.data.get(i.dataId).values,c=t.data.get(u.dataId).values,d=s?t.data.get(s.dataId).values:new Float32Array([1]),f=a?t.data.get(a.dataId).values:new Float32Array([0]),h=new Float32Array(p.length),g=f.length,y=d.length,T=c.length,x=m.length,I=0,k=0,w=0,F=0;for(let M=0;M<p.length;++M)h[M]=f[I++]+(p[M]-m[k++])*d[w++]/Math.sqrt(c[F++]+l),I>=g&&(I=0),k>=x&&(k=0),w>=y&&(w=0),F>=T&&(F=0);return t.makeTensorInfo(o.shape,o.dtype,h)}var jL={kernelName:xo,backendName:"cpu",kernelFunc:Fre};function Mre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;re([o],"batchToSpaceND");let i=s.reduce((y,T)=>y*T),u=C.getReshaped(o.shape,s,i),l=C.getPermuted(u.length,s.length),p=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(p,a,s.length),d=tt({inputs:{x:o},backend:t,attrs:{shape:u}}),f=Zt({inputs:{x:d},backend:t,attrs:{perm:l}}),h=tt({inputs:{x:f},backend:t,attrs:{shape:p}}),g=js({inputs:{x:h},backend:t,attrs:{begin:m,size:c}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),g}var XL={kernelName:us,backendName:"cpu",kernelFunc:Mre};function Rre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,l=Gc(i,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,l)}var YL={kernelName:mm,backendName:"cpu",kernelFunc:Rre};function Ere(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,i=C.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var ZL={kernelName:cm,backendName:"cpu",kernelFunc:Ere};var _re=Re(Wn,(r,e)=>{let t=e;return r>t.clipValueMax?t.clipValueMax:r<t.clipValueMin?t.clipValueMin:r}),QL={kernelName:Wn,backendName:"cpu",kernelFunc:_re};var Lre=r=>{let{x:e}=r.inputs,t=r.backend,n=new Float32Array(b.sizeFromShape(e.shape)),o=t.data.get(e.dataId),s=o.complexTensorInfos.real,a=o.complexTensorInfos.imag,i=t.data.get(s.dataId).values,u=t.data.get(a.dataId).values;for(let l=0;l<i.length;l++){let p=i[l],m=u[l];n[l]=Math.hypot(p,m)}return t.makeOutput(n,e.shape,"float32")},JL={kernelName:wu,backendName:"cpu",kernelFunc:Lre};function ki(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.imag,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var e$={kernelName:Fu,backendName:"cpu",kernelFunc:ki};function yl(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],a=C.computeOutShape(e.map(h=>h.shape),s);if(b.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(h=>b.sizeFromShape(h.shape)>0);if(i.length===1)return Wr({inputs:{x:i[0]},backend:t});let u=i.map(h=>h.shape);if(C.assertParamsConsistent(u,s),i[0].dtype==="complex64"){let h=i.map(I=>Vs({inputs:{input:I},backend:t})),g=i.map(I=>ki({inputs:{input:I},backend:t})),y=yl({inputs:h,backend:t,attrs:{axis:s}}),T=yl({inputs:g,backend:t,attrs:{axis:s}}),x=vr({inputs:{real:y,imag:T},backend:t});return h.forEach(I=>t.disposeIntermediateTensorInfo(I)),g.forEach(I=>t.disposeIntermediateTensorInfo(I)),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(T),x}let l=i.map(h=>{let g=b.sizeFromShape(h.shape.slice(s));return tt({inputs:{x:h},backend:t,attrs:{shape:[-1,g]}})}),p=l.map(h=>({vals:t.data.get(h.dataId).values,shape:h.shape}));a=C.computeOutShape(l.map(h=>h.shape),1);let m=l[0].shape[0]===1,c=yp(p,a,e[0].dtype,m),d=C.computeOutShape(i.map(h=>h.shape),s),f=t.makeTensorInfo(d,e[0].dtype,c);return l.forEach(h=>t.disposeIntermediateTensorInfo(h)),f}var t$={kernelName:ls,backendName:"cpu",kernelFunc:yl};function Jv(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=n;re([o,s],"conv2d");let m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,s.shape,a,l,i,p,!1,m),d=c.filterHeight,f=c.filterWidth,h=c.dilationHeight,g=c.dilationWidth,y=c.padInfo.left,T=c.padInfo.top,x=c.dataFormat==="channelsLast",I=new yt(c.outShape,o.dtype),k=b.computeStrides(o.shape),w=b.computeStrides(s.shape),F=k[0],M=x?k[1]:k[2],R=x?k[2]:1,L=x?1:k[1],O=I.strides[0],W=x?I.strides[1]:I.strides[2],V=x?I.strides[2]:1,j=x?1:I.strides[1],q=t.data.get(o.dataId).values,Y=t.data.get(s.dataId).values,J=I.values;for(let H=0;H<c.batchSize;++H){let oe=H*F,se=H*O;for(let ae=0;ae<c.outHeight;++ae){let pe=se+ae*W,ie=ae*c.strideHeight-T;for(let be=0;be<d;++be){let fe=ie+be*h;if(fe<0||fe>=c.inHeight)continue;let Ie=be*w[0],we=oe+fe*M;for(let Ee=0;Ee<c.outWidth;++Ee){let Le=pe+Ee*V,Ze=Ee*c.strideWidth-y;for(let ee=0;ee<f;++ee){let gt=Ze+ee*g;if(gt<0||gt>=c.inWidth)continue;let Be=Ie+ee*w[1],Rt=we+gt*R,Dt=Be;for(let pt=0;pt<c.inChannels;++pt){let Jt=q[Rt+pt*L];for(let Ot=0;Ot<c.outChannels;++Ot)J[Le+Ot*j]+=Jt*Y[Dt+Ot];Dt+=c.outChannels}}}}}}return t.makeTensorInfo(I.shape,I.dtype,J)}var r$={kernelName:uo,backendName:"cpu",kernelFunc:Jv};function $re(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:p}=n;re([o,s],"conv2dBackpropFilter");let m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,p,a,1,i,l,!1,m),{strideHeight:d,strideWidth:f,filterHeight:h,filterWidth:g}=c,y=c.dataFormat==="channelsLast",T=new yt(c.filterShape,"float32"),x=c.padInfo.left,I=c.padInfo.top,k=t.data.get(o.dataId).values,w=t.data.get(s.dataId).values,F=new yt(o.shape,o.dtype,k),M=new yt(s.shape,s.dtype,w);for(let R=0;R<h;++R){let L=Math.max(0,Math.ceil((I-R)/d)),O=Math.min(c.outHeight,(c.inHeight+I-R)/d);for(let W=0;W<g;++W){let V=Math.max(0,Math.ceil((x-W)/f)),j=Math.min(c.outWidth,(c.inWidth+x-W)/f);for(let q=0;q<c.inChannels;++q)for(let Y=0;Y<c.outChannels;++Y){let J=0;for(let H=0;H<c.batchSize;++H)for(let oe=L;oe<O;++oe){let se=R+oe*d-I;for(let ae=V;ae<j;++ae){let pe=W+ae*f-x;y?J+=F.get(H,se,pe,q)*M.get(H,oe,ae,Y):J+=F.get(H,q,se,pe)*M.get(H,Y,oe,ae)}}T.set(J,R,W,q,Y)}}}return t.makeTensorInfo(T.shape,T.dtype,T.values)}var n$={kernelName:dm,backendName:"cpu",kernelFunc:$re};function Bre(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:p}=n;re([o,s],"conv2dBackpropInput");let m=b.computeStrides(s.shape),c=b.computeStrides(o.shape),d=C.convertConv2DDataFormat(l),f=C.computeConv2DInfo(a,s.shape,i,1,u,p,!1,d),h=new yt(f.inShape,"float32"),g=h.values,y=t.data.get(o.dataId).values,T=t.data.get(s.dataId).values,[x,I,k]=m,{batchSize:w,filterHeight:F,filterWidth:M,inChannels:R,inHeight:L,inWidth:O,outChannels:W,outHeight:V,outWidth:j,strideHeight:q,strideWidth:Y}=f;d=f.dataFormat;let J=F-1-f.padInfo.top,H=M-1-f.padInfo.left,oe=d==="channelsLast",se=h.strides[0],ae=oe?h.strides[1]:h.strides[2],pe=oe?h.strides[2]:1,ie=oe?1:h.strides[1],be=c[0],fe=oe?c[1]:c[2],Ie=oe?c[2]:1,we=oe?1:c[1];for(let Ee=0;Ee<w;++Ee)for(let Le=0;Le<R;++Le)for(let Ze=0;Ze<L;++Ze){let ee=Ze-J,gt=Math.max(0,Math.ceil(ee/q)),Be=Math.min(V,(F+ee)/q);for(let Rt=0;Rt<O;++Rt){let Dt=Rt-H,pt=Math.max(0,Math.ceil(Dt/Y)),Jt=Math.min(j,(M+Dt)/Y),Ot=0;for(let Ht=gt;Ht<Be;++Ht){let Js=Ht*q-ee;for(let Lr=pt;Lr<Jt;++Lr){let on=Lr*Y-Dt,sn=be*Ee+fe*Ht+Ie*Lr,jr=x*(F-1-Js)+I*(M-1-on)+k*Le;for(let os=0;os<W;++os){let On=y[sn+we*os],ea=T[jr+os];Ot+=On*ea}}}let nn=se*Ee+ae*Ze+pe*Rt+ie*Le;g[nn]=Ot}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}var o$={kernelName:lo,backendName:"cpu",kernelFunc:Bre};function Ore(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u}=n;re([o,s],"conv3d");let l=C.computeConv3DInfo(o.shape,s.shape,a,u,i),{filterDepth:p,filterHeight:m,filterWidth:c,dilationDepth:d,dilationHeight:f,dilationWidth:h,padInfo:g}=l,y=g.front,T=g.left,x=g.top,I=new yt(l.outShape,o.dtype),k=t.data.get(o.dataId).values,w=t.data.get(s.dataId).values,F=I.values,M=b.computeStrides(o.shape),R=b.computeStrides(s.shape);for(let L=0;L<l.batchSize;++L){let O=L*M[0],W=L*I.strides[0];for(let V=0;V<l.outDepth;++V){let j=W+V*I.strides[1],q=V*l.strideDepth-y;for(let Y=0;Y<p;++Y){let J=q+Y*d;if(J<0||J>=l.inDepth)continue;let H=Y*R[0],oe=O+J*M[1];for(let se=0;se<l.outHeight;++se){let ae=j+se*I.strides[2],pe=se*l.strideHeight-x;for(let ie=0;ie<m;++ie){let be=pe+ie*f;if(be<0||be>=l.inHeight)continue;let fe=H+ie*R[1],Ie=oe+be*M[2];for(let we=0;we<l.outWidth;++we){let Ee=ae+we*l.outChannels,Le=we*l.strideWidth-T;for(let Ze=0;Ze<c;++Ze){let ee=Le+Ze*h;if(ee<0||ee>=l.inWidth)continue;let gt=fe+Ze*R[2],Be=Ie+ee*l.inChannels,Rt=gt;for(let Dt=0;Dt<l.inChannels;++Dt){let pt=k[Be+Dt];for(let Jt=0;Jt<l.outChannels;++Jt)F[Ee+Jt]+=pt*w[Rt+Jt];Rt+=l.outChannels}}}}}}}}return t.makeTensorInfo(I.shape,I.dtype,I.values)}var s$={kernelName:Nu,backendName:"cpu",kernelFunc:Ore};function zre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:u}=n;re([o,s],"conv3dBackpropFilterV2");let l=b.computeStrides(o.shape),p=b.computeStrides(s.shape),m=C.computeConv3DInfo(o.shape,u,a,1,i),c=m.strideDepth,d=m.strideHeight,f=m.strideWidth,h=m.filterDepth,g=m.filterHeight,y=m.filterWidth,T=new yt(m.filterShape,"float32"),x=T.values,[I,k,w,F]=T.strides,M=t.data.get(s.dataId).values,[R,L,O,W]=p,V=t.data.get(o.dataId).values,[j,q,Y,J]=l,H=m.padInfo.front,oe=m.padInfo.left,se=m.padInfo.top;for(let ae=0;ae<h;++ae){let pe=Math.max(0,Math.ceil((H-ae)/c)),ie=Math.min(m.outDepth,(m.inDepth+H-ae)/c),be=ae*I;for(let fe=0;fe<g;++fe){let Ie=Math.max(0,Math.ceil((se-fe)/d)),we=Math.min(m.outHeight,(m.inHeight+se-fe)/d),Ee=fe*k+be;for(let Le=0;Le<y;++Le){let Ze=Math.max(0,Math.ceil((oe-Le)/f)),ee=Math.min(m.outWidth,(m.inWidth+oe-Le)/f),gt=Le*w+Ee;for(let Be=0;Be<m.inChannels;++Be){let Rt=Be*F+gt;for(let Dt=0;Dt<m.outChannels;++Dt){let pt=0;for(let Jt=0;Jt<m.batchSize;++Jt){let Ot=Jt*j,nn=Jt*R;for(let Ht=pe;Ht<ie;++Ht){let Lr=(ae+Ht*c-H)*q+Ot,on=Ht*L+nn;for(let sn=Ie;sn<we;++sn){let os=(fe+sn*d-se)*Y+Lr,On=sn*O+on;for(let ea=Ze;ea<ee;++ea){let Iu=(Le+ea*f-oe)*J+os,vl=ea*W+On;pt+=V[Iu+Be]*M[vl+Dt]}}}}x[Rt+Dt]=pt}}}}}return t.makeTensorInfo(T.shape,T.dtype,T.values)}var a$={kernelName:fm,backendName:"cpu",kernelFunc:zre};function Gre(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:a,strides:i,inputShape:u}=n;re([o],"conv3dBackpropInputV2");let l=b.computeStrides(o.shape),p=b.computeStrides(s.shape),m=C.computeConv3DInfo(u,s.shape,i,1,a),c=new yt(m.inShape,"float32"),d=c.values,[f,h,g,y]=c.strides,T=t.data.get(o.dataId).values,[x,I,k,w]=l,F=t.data.get(s.dataId).values,[M,R,L,O]=p,{batchSize:W,filterDepth:V,filterHeight:j,filterWidth:q,inChannels:Y,inDepth:J,inHeight:H,inWidth:oe,outChannels:se,outDepth:ae,outHeight:pe,outWidth:ie,strideDepth:be,strideHeight:fe,strideWidth:Ie}=m,we=V-1-m.padInfo.front,Ee=j-1-m.padInfo.top,Le=q-1-m.padInfo.left;for(let Ze=0;Ze<W;++Ze)for(let ee=0;ee<Y;++ee)for(let gt=0;gt<J;++gt){let Be=gt-we,Rt=Math.max(0,Math.ceil(Be/be)),Dt=Math.min(ae,(V+Be)/be);for(let pt=0;pt<H;++pt){let Jt=pt-Ee,Ot=Math.max(0,Math.ceil(Jt/fe)),nn=Math.min(pe,(j+Jt)/fe);for(let Ht=0;Ht<oe;++Ht){let Js=Ht-Le,Lr=Math.max(0,Math.ceil(Js/Ie)),on=Math.min(ie,(q+Js)/Ie),sn=0;for(let jr=Rt;jr<Dt;++jr){let os=jr*be-Be;for(let On=Ot;On<nn;++On){let ea=On*fe-Jt;for(let ss=Lr;ss<on;++ss){let Iu=ss*Ie-Js,vl=x*Ze+I*jr+k*On+w*ss,Kp=M*(V-1-os)+R*(j-1-ea)+L*(q-1-Iu)+O*ee;for(let Ir=0;Ir<se;++Ir){let Vp=T[vl+Ir],Hp=F[Kp+Ir];sn+=Vp*Hp}}}}d[f*Ze+h*gt+g*pt+y*Ht+ee]=sn}}}return t.makeTensorInfo(c.shape,c.dtype,c.values)}var i$={kernelName:hm,backendName:"cpu",kernelFunc:Gre};var Ure=Re(po,r=>Math.cos(r)),u$={kernelName:po,backendName:"cpu",kernelFunc:Ure};var Wre=Re(mo,r=>Math.cosh(r)),l$={kernelName:mo,backendName:"cpu",kernelFunc:Wre};function Kre(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:l}=n,[p,m,c,d]=o.shape,f=s.shape[0],[h,g]=i,y=Te([f,h,g,d],"float32"),T=t.data.get(s.dataId).values,x=t.data.get(a.dataId).values,I=t.data.get(o.dataId).values,k=b.computeStrides(o.shape),w=b.computeStrides(y.shape);for(let F=0;F<f;F++){let M=F*4,R=T[M],L=T[M+1],O=T[M+2],W=T[M+3],V=x[F];if(V>=p)continue;let j=h>1?(O-R)*(m-1)/(h-1):0,q=g>1?(W-L)*(c-1)/(g-1):0;for(let Y=0;Y<h;Y++){let J=h>1?R*(m-1)+Y*j:.5*(R+O)*(m-1);if(J<0||J>m-1){for(let H=0;H<g;H++)for(let oe=0;oe<d;oe++){let se=oe+H*w[2]+Y*w[1]+F*w[0];y.values[se]=l}continue}if(u==="bilinear"){let H=Math.floor(J),oe=Math.ceil(J),se=J-H;for(let ae=0;ae<g;ae++){let pe=g>1?L*(c-1)+ae*q:.5*(L+W)*(c-1);if(pe<0||pe>c-1){for(let Ie=0;Ie<d;Ie++){let we=Ie+ae*w[2]+Y*w[1]+F*w[0];y.values[we]=l}continue}let ie=Math.floor(pe),be=Math.ceil(pe),fe=pe-ie;for(let Ie=0;Ie<d;Ie++){let we=Ie+ie*k[2]+H*k[1]+V*k[0],Ee=I[we];we=Ie+be*k[2]+H*k[1]+V*k[0];let Le=I[we];we=Ie+ie*k[2]+oe*k[1]+V*k[0];let Ze=I[we];we=Ie+be*k[2]+oe*k[1]+V*k[0];let ee=I[we],gt=Ee+(Le-Ee)*fe,Be=Ze+(ee-Ze)*fe;we=Ie+ae*w[2]+Y*w[1]+F*w[0],y.values[we]=gt+(Be-gt)*se}}}else for(let H=0;H<g;++H){let oe=g>1?L*(c-1)+H*q:.5*(L+W)*(c-1);if(oe<0||oe>c-1){for(let pe=0;pe<d;pe++){let ie=pe+H*w[2]+Y*w[1]+F*w[0];y.values[ie]=l}continue}let se=Math.round(oe),ae=Math.round(J);for(let pe=0;pe<d;pe++){let ie=pe+se*k[2]+ae*k[1]+V*k[0],be=pe+H*w[2]+Y*w[1]+F*w[0];y.values[be]=I[ie]}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}var p$={kernelName:pa,backendName:"cpu",kernelFunc:Kre};function Vre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;re(o,"cumprod");let u=C.getAxesPermutation([s],o.shape.length),l=o;u!=null&&(l=Zt({inputs:{x:o},backend:t,attrs:{perm:u}}));let p=C.getInnerMostAxes(1,o.shape.length)[0];if(p!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${p}`);let m=Et(l.dtype,"int32"),c=b.makeOnesTypedArray(b.sizeFromShape(l.shape),m),d=t.data.get(l.dataId).values,f=l.shape[l.shape.length-1],h=i?(y,T)=>y+f-T-1:(y,T)=>y+T;for(let y=0;y<d.length;y+=f)for(let T=0;T<f;T++){let x=h(y,T);if(T===0)c[x]=a?1:d[x];else{let I=h(y,T-1);c[x]=a?d[I]*c[I]:d[x]*c[I]}}let g=t.makeTensorInfo(l.shape,m,c);if(u!=null){let y=C.getUndoAxesPermutation(u),T=Zt({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(l),T}return g}var m$={kernelName:la,backendName:"cpu",kernelFunc:Vre};function Hre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;re(o,"cumsum");let u=C.getAxesPermutation([s],o.shape.length),l=o;u!=null&&(l=Zt({inputs:{x:o},backend:t,attrs:{perm:u}}));let p=C.getInnerMostAxes(1,o.shape.length)[0];if(p!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${p}`);let m=Et(l.dtype,"int32"),c=b.makeZerosTypedArray(b.sizeFromShape(l.shape),m),d=t.data.get(l.dataId).values,f=l.shape[l.shape.length-1],h=i?(y,T)=>y+f-T-1:(y,T)=>y+T;for(let y=0;y<d.length;y+=f)for(let T=0;T<f;T++){let x=h(y,T);if(T===0)c[x]=a?0:d[x];else{let I=h(y,T-1);c[x]=a?d[I]+c[I]:d[x]+c[I]}}let g=t.makeTensorInfo(l.shape,m,c);if(u!=null){let y=C.getUndoAxesPermutation(u),T=Zt({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(l),T}return g}var c$={kernelName:co,backendName:"cpu",kernelFunc:Hre};function qre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,p=Gc(u,l,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,p)}else if(o.shape.length===2){let u=t.bufferSync(o),l=t.bufferSync(s),p=NT(u,l,a,i);return t.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var d$={kernelName:gm,backendName:"cpu",kernelFunc:qre};function jre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n;b.assert(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);let i=o.shape[0],u=o.shape[1],l=o.shape[2],p=o.shape[3],m=u*s,c=l*s,d=p/(s*s),f=t.data.get(o.dataId).values,h=new Float32Array(i*m*c*d),g=0;for(let y=0;y<i;++y)for(let T=0;T<m;++T){let x=Math.floor(T/s),I=T%s;for(let k=0;k<c;++k){let w=Math.floor(k/s),F=k%s,M=(I*s+F)*d;for(let R=0;R<d;++R){let O=R+M+p*(w+l*(x+u*y));h[g++]=f[O]}}}return t.makeTensorInfo([i,m,c,d],o.dtype,h)}var f$={kernelName:ma,backendName:"cpu",kernelFunc:jre};function eA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:l}=n;re([o,s],"depthwiseConv2DNative");let p=b.computeStrides(o.shape),m=b.computeStrides(s.shape),c=u;c==null&&(c=[1,1]),b.assert(C.eitherStridesOrDilationsAreOne(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let d=C.computeConv2DInfo(o.shape,s.shape,a,c,i,l,!0),{filterHeight:f,filterWidth:h,dilationHeight:g,dilationWidth:y,padInfo:T}=d,x=T.left,I=T.top,k=d.outChannels/d.inChannels,w=new yt(d.outShape,o.dtype),F=t.data.get(o.dataId).values,M=t.data.get(s.dataId).values,R=w.values;for(let L=0;L<d.batchSize;++L){let O=L*p[0],W=L*w.strides[0];for(let V=0;V<d.outHeight;++V){let j=W+V*w.strides[1],q=V*d.strideHeight-I;for(let Y=0;Y<f;++Y){let J=q+Y*g;if(J<0||J>=d.inHeight)continue;let H=Y*m[0],oe=O+J*p[1];for(let se=0;se<d.outWidth;++se){let ae=j+se*w.strides[2],pe=se*d.strideWidth-x;for(let ie=0;ie<h;++ie){let be=pe+ie*y;if(be<0||be>=d.inWidth)continue;let fe=H+ie*m[1],Ie=oe+be*d.inChannels,we=ae,Ee=fe;for(let Le=0;Le<d.inChannels;++Le){let Ze=F[Ie+Le];for(let ee=0;ee<k;++ee)R[we+ee]+=Ze*M[Ee+ee];we+=k,Ee+=k}}}}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}var h$={kernelName:fo,backendName:"cpu",kernelFunc:eA};function Xre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,filterShape:p}=n;re([o,s],"depthwiseConv2dNativeBackpropFilter");let m=C.computeConv2DInfo(o.shape,p,a,i,u,l,!0),{strideHeight:c,strideWidth:d,filterHeight:f,filterWidth:h}=m,g=new yt(m.filterShape,"float32"),y=m.padInfo.left,T=m.padInfo.top,x=m.outChannels/m.inChannels,I=t.data.get(o.dataId).values,k=new yt(o.shape,o.dtype,I),w=t.data.get(s.dataId).values,F=new yt(s.shape,s.dtype,w);for(let M=0;M<f;++M){let R=Math.max(0,Math.ceil((T-M)/c)),L=Math.min(m.outHeight,(m.inHeight+T-M)/c);for(let O=0;O<h;++O){let W=Math.max(0,Math.ceil((y-O)/d)),V=Math.min(m.outWidth,(m.inWidth+y-O)/d);for(let j=0;j<m.outChannels;++j){let q=Math.trunc(j/x),Y=j%x,J=0;for(let H=0;H<m.batchSize;++H)for(let oe=R;oe<L;++oe){let se=M+oe*c-T;for(let ae=W;ae<V;++ae){let pe=O+ae*d-y;J+=k.get(H,se,pe,q)*F.get(H,oe,ae,j)}}g.set(J,M,O,q,Y)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}var g$={kernelName:bm,backendName:"cpu",kernelFunc:Xre};function Yre(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,inputShape:p}=n;re([o,s],"depthwiseConv2DNativeBackpropInput");let m=b.computeStrides(o.shape),c=b.computeStrides(s.shape),d=C.computeConv2DInfo(p,s.shape,a,i,u,l,!0),f=new yt(d.inShape,"float32"),h=f.values,[g,y,T]=f.strides,x=t.data.get(o.dataId).values,[I,k,w]=m,F=t.data.get(s.dataId).values,[M,R,L]=c,{batchSize:O,filterHeight:W,filterWidth:V,inChannels:j,inHeight:q,inWidth:Y,outChannels:J,outHeight:H,outWidth:oe,strideHeight:se,strideWidth:ae}=d,pe=W-1-d.padInfo.top,ie=V-1-d.padInfo.left,be=J/j;for(let fe=0;fe<O;++fe)for(let Ie=0;Ie<j;++Ie)for(let we=0;we<q;++we){let Ee=we-pe,Le=Math.max(0,Math.ceil(Ee/se)),Ze=Math.min(H,(W+Ee)/se);for(let ee=0;ee<Y;++ee){let gt=ee-ie,Be=Math.max(0,Math.ceil(gt/ae)),Rt=Math.min(oe,(V+gt)/ae),Dt=0;for(let pt=Le;pt<Ze;++pt){let Jt=pt*se-Ee;for(let Ot=Be;Ot<Rt;++Ot){let nn=Ot*ae-gt,Ht=I*fe+k*pt+w*Ot,Js=M*(W-1-Jt)+R*(V-1-nn)+L*Ie;for(let Lr=0;Lr<be;++Lr){let on=Ie*be+Lr,sn=x[Ht+on],jr=F[Js+Lr];Dt+=sn*jr}}}h[g*fe+y*we+T*ee+Ie]=Dt}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}var b$={kernelName:ym,backendName:"cpu",kernelFunc:Yre};function Zre(r){let{inputs:e,backend:t}=r,{x:n}=e,o=b.sizeFromShape(n.shape),s=t.data.get(n.dataId).values,a=Te([o,o],n.dtype),i=a.values;for(let l=0;l<s.length;l++)i[l*o+l]=s[l];let u=[...n.shape,...n.shape];return t.makeTensorInfo(u,a.dtype,a.values)}var y$={kernelName:Tm,backendName:"cpu",kernelFunc:Zre};var T$={kernelName:Du,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o}=r,{strides:s,pad:a,dilations:i}=t,u=e,l=u.data.get(n.dataId).values,p=n.shape.length,m=u.data.get(o.dataId).values,c=o.shape.length,{batchSize:d,inHeight:f,inWidth:h,inChannels:g,outHeight:y,outWidth:T,padInfo:x,strideHeight:I,strideWidth:k,filterHeight:w,filterWidth:F,dilationHeight:M,dilationWidth:R,outShape:L}=C.computeDilation2DInfo(n.shape,o.shape,s,a,"NHWC",i),O=b.sizeFromShape(L),W=L.length,V=b.getArrayFromDType(n.dtype,O);for(let q=0;q<d;++q)for(let Y=0;Y<y;++Y){let J=Y*I-x.top;for(let H=0;H<T;++H){let oe=H*k-x.left;for(let se=0;se<g;++se){let ae=Number.MIN_SAFE_INTEGER;for(let ie=0;ie<w;++ie){let be=J+ie*M;if(be>=0&&be<f)for(let fe=0;fe<F;++fe){let Ie=oe+fe*R;if(Ie>=0&&Ie<h){let we=b.locToIndex([q,be,Ie,se],p,b.computeStrides(n.shape)),Ee=b.locToIndex([ie,fe,se],c,b.computeStrides(o.shape)),Le=l[we]+m[Ee];Le>ae&&(ae=Le)}}}let pe=b.locToIndex([q,Y,H,se],W,b.computeStrides(L));V[pe]=ae}}}return{dataId:u.write(b.toTypedArray(V,n.dtype),L,n.dtype),shape:L,dtype:n.dtype}}};var x$={kernelName:Pd,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:u}=t,l=e,p=b.toNestedArray(n.shape,l.data.get(n.dataId).values),m=b.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:y,padInfo:T,strideHeight:x,strideWidth:I,filterHeight:k,filterWidth:w,dilationHeight:F,dilationWidth:M,outShape:R}=C.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",u);b.assert(s.rank===R.length,()=>`Error in ${Pd}, dy must have the same rank as output ${R.length}, but got ${s.rank}`);let L=b.toNestedArray(R,l.data.get(s.dataId).values),O=b.makeZerosNestedTypedArray(o.shape,o.dtype);for(let V=0;V<c;++V)for(let j=0;j<g;++j){let q=j*x-T.top;for(let Y=0;Y<y;++Y){let J=Y*I-T.left;for(let H=0;H<h;++H){let oe=Number.MIN_SAFE_INTEGER,se=0,ae=0;for(let pe=0;pe<k;++pe){let ie=q+pe*F;if(ie>=0&&ie<d)for(let be=0;be<w;++be){let fe=J+be*M;if(fe>=0&&fe<f){let Ie=p[V][ie][fe][H]+m[pe][be][H];Ie>oe&&(oe=Ie,se=pe,ae=be)}}}O[se][ae][H]+=L[V][j][Y][H]}}}return{dataId:l.write(b.toTypedArray(O,n.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var I$={kernelName:Dd,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:u}=t,l=e,p=b.toNestedArray(n.shape,l.data.get(n.dataId).values),m=b.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:y,padInfo:T,strideHeight:x,strideWidth:I,filterHeight:k,filterWidth:w,dilationHeight:F,dilationWidth:M,outShape:R}=C.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",u);b.assert(s.rank===R.length,()=>`Error in ${Dd}, dy must have the same rank as output ${R.length}, but got ${s.rank}`);let L=b.toNestedArray(R,l.data.get(s.dataId).values),O=b.makeZerosNestedTypedArray(n.shape,n.dtype);for(let V=0;V<c;++V)for(let j=0;j<g;++j){let q=j*x-T.top;for(let Y=0;Y<y;++Y){let J=Y*I-T.left;for(let H=0;H<h;++H){let oe=Number.MIN_SAFE_INTEGER,se=q<0?0:q,ae=J<0?0:J;for(let pe=0;pe<k;++pe){let ie=q+pe*F;if(ie>=0&&ie<d)for(let be=0;be<w;++be){let fe=J+be*M;if(fe>=0&&fe<f){let Ie=p[V][ie][fe][H]+m[pe][be][H];Ie>oe&&(oe=Ie,se=ie,ae=fe)}}}O[V][se][ae][H]+=L[V][j][Y][H]}}}return{dataId:l.write(b.toTypedArray(O,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function du(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;re(o,"sum");let i;o.dtype==="bool"?i=Hs({inputs:{x:o},backend:t,attrs:{dtype:"int32"}}):i=Wr({inputs:{x:o},backend:t});let u=i.shape.length,l=b.parseAxisParam(s,i.shape),p=C.getAxesPermutation(l,u),m=l,c=i;p!=null&&(c=Zt({inputs:{x:i},backend:t,attrs:{perm:p}}),m=C.getInnerMostAxes(m.length,u)),C.assertAxesAreInnerMostDims("sum",m,c.shape.length);let[d,f]=C.computeOutAndReduceShapes(c.shape,m),h=C.upcastType(c.dtype,"int32"),g=Oc(t,d,h),y=b.sizeFromShape(f),T=t.data.get(g.dataId).values,x=t.data.get(c.dataId).values;for(let I=0;I<T.length;++I){let k=I*y,w=0;for(let F=0;F<y;++F)w+=x[k+F];T[I]=w}if(a){let I=C.expandShapeToKeepDim(g.shape,l),k=g;g=tt({inputs:{x:g},backend:t,attrs:{shape:I}}),t.disposeIntermediateTensorInfo(k)}return t.disposeIntermediateTensorInfo(i),p!=null&&t.disposeIntermediateTensorInfo(c),g}var C$={kernelName:Ko,backendName:"cpu",kernelFunc:du};function Qre(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:a,summedDims:i,idDims:u}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(a.length,u,s);let{path:l,steps:p}=C.getEinsumComputePath(i,u),m=p.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of p[h]){let{permutationIndices:y,expandDims:T}=C.getEinsumPermutation(d,u[g]),x;C.isIdentityPermutation(y)?x=s[g]:(x=Zt({inputs:{x:s[g]},backend:t,attrs:{perm:y}}),f.push(x));let I=x.shape.slice();for(let k=0;k<T.length;++k)I.splice(T[k],0,1);b.arraysEqual(x.shape,I)||(x=tt({inputs:{x},backend:t,attrs:{shape:I}}),f.push(x)),c===null?c=x:(c=Tp({inputs:{a:x,b:c},backend:t}),f.push(c))}h<m-1&&(l[h]>=0&&(c=du({inputs:{x:c},backend:t,attrs:{axis:l[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&t.disposeIntermediateTensorInfo(h);return c}var k$={kernelName:Pu,backendName:"cpu",kernelFunc:Qre};function Jre(r){let{inputs:e,backend:t}=r,{dy:n,y:o}=e;re([n,o],"eluGrad");let s=new Float32Array(b.sizeFromShape(o.shape)),a=t.data.get(o.dataId).values,i=t.data.get(n.dataId).values;for(let u=0;u<a.length;++u){let l=a[u];l>=1?s[u]=i[u]:s[u]=i[u]*(l+1)}return t.makeTensorInfo(o.shape,"float32",s)}var S$={kernelName:xm,backendName:"cpu",kernelFunc:Jre};var ene=C.ERF_P,tne=C.ERF_A1,rne=C.ERF_A2,nne=C.ERF_A3,one=C.ERF_A4,sne=C.ERF_A5,ane=Re(Bi,r=>{let e=Math.sign(r),t=Math.abs(r),n=1/(1+ene*t);return e*(1-((((sne*n+one)*n+nne)*n+rne)*n+tne)*n*Math.exp(-t*t))}),v$={kernelName:Bi,backendName:"cpu",kernelFunc:ane};function Hc(r){let{inputs:e,backend:t,attrs:n}=r,{input:o}=e,{dim:s}=n,a=o.shape.length,i=o.shape.slice(),u=s;return s<0&&(b.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),tt({inputs:{x:o},backend:t,attrs:{shape:i}})}var A$={kernelName:ps,backendName:"cpu",kernelFunc:Hc};var ine=st((r,e)=>r/e),Gh=ut(ho,ine),Uh={kernelName:ho,backendName:"cpu",kernelFunc:Gh};function GT(r,e,t){let n=r.shape,o=n[0],s=n[1],a=t.data.get(r.dataId),i=a.complexTensorInfos.real,u=a.complexTensorInfos.imag,l=[o,s],p=b.sizeFromShape(l),m=b.getTypedArrayFromDType("float32",p),c=b.getTypedArrayFromDType("float32",p);for(let g=0;g<o;g++){let y=js({inputs:{x:i},backend:t,attrs:{begin:[g,0],size:[1,s]}}),T=js({inputs:{x:u},backend:t,attrs:{begin:[g,0],size:[1,s]}}),x=vr({inputs:{real:y,imag:T},backend:t}),{real:I,imag:k}=une(x,e,t),w=C.mergeRealAndImagArrays(I,k);for(let F=0;F<s;F++){let M=C.getComplexWithIndex(w,F);m[g*s+F]=M.real,c[g*s+F]=M.imag}t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(T),t.disposeIntermediateTensorInfo(x)}let d=t.makeTensorInfo(l,"float32",m),f=t.makeTensorInfo(l,"float32",c),h=vr({inputs:{real:d,imag:f},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),h}function une(r,e,t){let n=b.sizeFromShape(r.shape),o=t.data.get(r.dataId),s=t.data.get(o.complexTensorInfos.real.dataId).values,a=t.data.get(o.complexTensorInfos.imag.dataId).values;if(lne(n)){let i=tA(s,a,n,e,t),u=[r.shape[0],r.shape[1]];if(e){let l=t.makeTensorInfo(u,"float32",i.real),p=t.makeTensorInfo(u,"float32",i.imag),m=t.makeTensorInfo([],"float32",b.createScalarValue(n,"float32")),c=Wr({inputs:{x:m},backend:t}),d=Uh.kernelFunc({inputs:{a:l,b:m},backend:t}),f=Uh.kernelFunc({inputs:{a:p,b:c},backend:t}),h=t.data.get(d.dataId).values,g=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),{real:h,imag:g}}return i}else{let i=C.mergeRealAndImagArrays(s,a),u=pne(i,n,e);return C.splitRealAndImagArrays(u)}}function lne(r){return(r&r-1)===0}function tA(r,e,t,n,o){if(t===1)return{real:r,imag:e};let s=C.mergeRealAndImagArrays(r,e),a=t/2,i=C.complexWithEvenIndex(s),u=i.real,l=i.imag,p=[u.length],m=o.makeTensorInfo(p,"float32",u),c=o.makeTensorInfo(p,"float32",l),d=vr({inputs:{real:m,imag:c},backend:o}),f=C.complexWithOddIndex(s),h=f.real,g=f.imag,y=[h.length],T=o.makeTensorInfo(y,"float32",h),x=o.makeTensorInfo(y,"float32",g),I=vr({inputs:{real:T,imag:x},backend:o}),k=tA(u,l,a,n,o),w=k.real,F=k.imag,M=[w.length],R=o.makeTensorInfo(M,"float32",w),L=o.makeTensorInfo(M,"float32",F),O=vr({inputs:{real:R,imag:L},backend:o}),W=tA(h,g,a,n,o),V=W.real,j=W.imag,q=[V.length],Y=o.makeTensorInfo(q,"float32",V),J=o.makeTensorInfo(q,"float32",j),H=vr({inputs:{real:Y,imag:J},backend:o}),oe=C.exponents(t,n),se=[oe.real.length],ae=o.makeTensorInfo(se,"float32",oe.real),pe=o.makeTensorInfo(se,"float32",oe.imag),ie=vr({inputs:{real:ae,imag:pe},backend:o}),be=Tp({inputs:{a:ie,b:H},backend:o}),fe=Ci({inputs:{a:O,b:be},backend:o}),Ie=Oh({inputs:{a:O,b:be},backend:o}),we=Vs({inputs:{input:fe},backend:o}),Ee=Vs({inputs:{input:Ie},backend:o}),Le=ki({inputs:{input:fe},backend:o}),Ze=ki({inputs:{input:Ie},backend:o}),ee=yl({inputs:[we,Ee],backend:o,attrs:{axis:0}}),gt=yl({inputs:[Le,Ze],backend:o,attrs:{axis:0}}),Be=o.data.get(ee.dataId).values,Rt=o.data.get(gt.dataId).values;return o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(I),o.disposeIntermediateTensorInfo(R),o.disposeIntermediateTensorInfo(L),o.disposeIntermediateTensorInfo(O),o.disposeIntermediateTensorInfo(Y),o.disposeIntermediateTensorInfo(J),o.disposeIntermediateTensorInfo(H),o.disposeIntermediateTensorInfo(ae),o.disposeIntermediateTensorInfo(pe),o.disposeIntermediateTensorInfo(ie),o.disposeIntermediateTensorInfo(be),o.disposeIntermediateTensorInfo(fe),o.disposeIntermediateTensorInfo(Ie),o.disposeIntermediateTensorInfo(we),o.disposeIntermediateTensorInfo(Le),o.disposeIntermediateTensorInfo(Ee),o.disposeIntermediateTensorInfo(Ze),o.disposeIntermediateTensorInfo(ee),o.disposeIntermediateTensorInfo(gt),{real:Be,imag:Rt}}function pne(r,e,t){let n=new Float32Array(e*2);for(let o=0;o<e;o++){let s=0,a=0;for(let i=0;i<e;i++){let u=C.exponent(o*i,e,t),l=C.getComplexWithIndex(r,i);s+=l.real*u.real-l.imag*u.imag,a+=l.real*u.imag+l.imag*u.real}t&&(s/=e,a/=e),C.assignToTypedArray(n,s,a,o)}return n}function mne(r){let{inputs:e,backend:t}=r,{input:n}=e,o=b.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=tt({inputs:{x:n},backend:t,attrs:{shape:[a,s]}}),u=GT(i,!1,t),l=tt({inputs:{x:u},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),l}var w$={kernelName:Im,backendName:"cpu",kernelFunc:mne};function Wh(r){let{backend:e,attrs:t}=r,{shape:n,value:o,dtype:s}=t,a=s||b.inferDtype(o),i=b.getArrayFromDType(a,b.sizeFromShape(n));return cne(i,o,a),e.makeTensorInfo(n,a,i)}var N$={kernelName:ai,backendName:"cpu",kernelFunc:Wh};function cne(r,e,t){r.fill(e)}var D$={kernelName:fa,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,o=t,s=b.getTypedArrayFromDType(n.dtype,b.sizeFromShape(n.shape)),[a,i,u,l]=n.shape,p=o.data.get(n.dataId).values;for(let c=0;c<a;c++){let d=c*u*i*l;for(let f=0;f<i;f++){let h=f*(u*l);for(let g=0;g<u;g++){let y=g*l;for(let T=0;T<l;T++){let x=Math.round(u-g-1),I=d+h+y+T,k=p[I];if(x>=0&&x<u){let w=x*l,F=d+h+w+T;k=p[F]}s[I]=k}}}}return{dataId:o.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var dne=st((r,e)=>Math.floor(r/e)),fne=ut(To,dne,null,"int32"),P$={kernelName:To,backendName:"cpu",kernelFunc:fne};function hne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=Jv({inputs:{x:o,filter:s},backend:t,attrs:{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c}});if(a){let g=h;if(p==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){let y=tt({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});h=Ci({inputs:{a:h,b:y},backend:t}),t.disposeIntermediateTensorInfo(y)}else h=Ci({inputs:{a:h,b:a},backend:t});t.disposeIntermediateTensorInfo(g)}if(d){let g=h;if(p==="NCHW"&&d==="prelu"&&i.shape.length===1&&i.shape[0]!==1){let y=tt({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});h=vp(t,h,d,y,f),t.disposeIntermediateTensorInfo(y)}else h=vp(t,h,d,i,f);t.disposeIntermediateTensorInfo(g)}return h}var F$={kernelName:Ss,backendName:"cpu",kernelFunc:hne};function gne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=eA({inputs:{x:o,filter:s},backend:t,attrs:{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c}});if(a){let g=h;h=Ci({inputs:{a:h,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(d){let g=h;h=vp(t,h,d,i,f),t.disposeIntermediateTensorInfo(g)}return h}var M$={kernelName:vs,backendName:"cpu",kernelFunc:gne};function bne(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=b.sizeFromShape(n.shape),a=o.shape,i=a[a.length-1],[u,l,p,m]=C.prepareAndValidate(n,o);if(l===0)return t.makeTensorInfo(u,n.dtype,[]);let c=t.data.get(o.dataId).values,d=t.bufferSync(n),f=DT(c,d,n.dtype,l,i,p,m,n.shape,s);return t.makeTensorInfo(u,n.dtype,f.values)}var R$={kernelName:ha,backendName:"cpu",kernelFunc:bne};function yne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n;re([o,s],"gatherV2");let u=b.parseAxisParam(a,o.shape)[0],l=t.data.get(s.dataId).values,p=o.shape[u];for(let I=0;I<l.length;++I){let k=l[I];b.assert(k<=p-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${p-1}]`)}let m=i;i==null&&(m=0);let c=b.sizeFromShape(s.shape),d=C.segment_util.collectGatherOpShapeInfo(o,s,u,m),f=tt({inputs:{x:o},backend:t,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),h=tt({inputs:{x:s},backend:t,attrs:{shape:[d.batchSize,c/d.batchSize]}}),g=[d.batchSize,d.outerSize,c/d.batchSize,d.sliceSize],y=t.bufferSync(h),T=t.bufferSync(f),x=PT(T,y,g);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),t.makeTensorInfo(d.outputShape,x.dtype,x.values)}var E$={kernelName:ms,backendName:"cpu",kernelFunc:yne};function Tne(r){let{inputs:e,backend:t}=r,{input:n}=e,o=b.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=tt({inputs:{x:n},backend:t,attrs:{shape:[a,s]}}),u=GT(i,!0,t),l=tt({inputs:{x:u},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),l}var _$={kernelName:Cm,backendName:"cpu",kernelFunc:Tne};var xne=Re(Oi,r=>Number.isFinite(r)?1:0,"bool"),L$={kernelName:Oi,backendName:"cpu",kernelFunc:xne};var Ine=Re(zi,r=>Math.abs(r)===1/0?1:0,"bool"),$$={kernelName:zi,backendName:"cpu",kernelFunc:Ine};var Cne=Re(Gi,r=>Number.isNaN(r)?1:0,"bool"),B$={kernelName:Gi,backendName:"cpu",kernelFunc:Cne};function kne(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,a=FT(n,o,s);return e.makeTensorInfo([a.length],"float32",a)}var O$={kernelName:km,backendName:"cpu",kernelFunc:kne};var Sne=Re(Ui,r=>Math.log1p(r)),z$={kernelName:Ui,backendName:"cpu",kernelFunc:Sne};var vne=st((r,e)=>r&&e),Ane=ut(Ta,vne,null,"bool"),G$={kernelName:Ta,backendName:"cpu",kernelFunc:Ane};var wne=Re(xa,r=>r?0:1,"bool"),U$={kernelName:xa,backendName:"cpu",kernelFunc:wne};var Nne=st((r,e)=>r||e),Dne=ut(Wi,Nne,null,"bool"),W$={kernelName:Wi,backendName:"cpu",kernelFunc:Dne};function Pne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:u}=n;re(o,"LRN");let l=o.shape[3],p=l-1,m=t.data.get(o.dataId).values,c=b.sizeFromShape(o.shape),d=new Float32Array(c);function f(h){let g=h%l,y=h-g+Math.max(0,g-s),T=h-g+Math.min(g+s,p),x=0;for(;y<=T;y++){let I=m[y];x+=I*I}return x}for(let h=0;h<c;h++){let g=f(h),y=m[h]*Math.pow(a+i*g,-u);d[h]=y}return t.makeTensorInfo(o.shape,o.dtype,d)}var K$={kernelName:Mu,backendName:"cpu",kernelFunc:Pne};function Fne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:u,alpha:l,beta:p}=n;re(a,"LRNGrad");let m=b.sizeFromShape(a.shape),c=a.shape[3],d=t.data.get(a.dataId).values,f=t.data.get(o.dataId).values,h=t.data.get(s.dataId).values,g=new Float32Array(m),y=m;for(let T=0;T<y;T++){let x=T%c,I=T-x+Math.max(0,x-i),k=T-x+Math.min(c,x+i+1),w=0;for(let F=I;F<k;F++)w+=Math.pow(f[F],2);w=l*w+u;for(let F=I;F<k;F++){let M=-2*l*p*f[F]*h[T]/w;T===F&&(M+=Math.pow(w,-p)),M*=d[T],g[F]+=M}}return t.makeTensorInfo(a.shape,o.dtype,g)}var V$={kernelName:Sm,backendName:"cpu",kernelFunc:Fne};function rA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n,i=t,u=o.shape,l=u.length,p=b.parseAxisParam(s,u),m=p,c=C.getAxesPermutation(m,l),d=i.data.get(o.dataId).values;if(c!=null){let I=new Array(l);for(let k=0;k<I.length;k++)I[k]=u[c[k]];d=Uc(d,u,o.dtype,c,I),m=C.getInnerMostAxes(m.length,l),u=I}re(o,"max"),C.assertAxesAreInnerMostDims("max",m,l);let[f,h]=C.computeOutAndReduceShapes(u,m),g=b.sizeFromShape(h),y=MT(d,g,f,o.dtype),T=i.write(y,f,o.dtype),x=f;return a&&(x=C.expandShapeToKeepDim(f,p)),{dataId:T,shape:x,dtype:o.dtype}}var H$={kernelName:So,backendName:"cpu",kernelFunc:rA};function Mne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;re(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;b.assert(C.eitherStridesOrDilationsAreOne(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=C.computePool2DInfo(o.shape,s,a,l,i,u),m;if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))m=Wr({inputs:{x:o},backend:t});else{let c=t.data.get(o.dataId).values,d=b.computeStrides(o.shape),f=Vc(c,o.shape,o.dtype,d,p,"max");m=t.makeTensorInfo(p.outShape,o.dtype,f.values)}return m}var q$={kernelName:Ao,backendName:"cpu",kernelFunc:Mne};function Rne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=n;re(o,"maxPool3d");let p=C.computePool3DInfo(o.shape,s,a,1,i,u,l),m=t.data.get(o.dataId).values,c=zT(m,o.shape,o.dtype,b.computeStrides(o.shape),p,"max");return t.makeTensorInfo(c.shape,"float32",c.values)}var j$={kernelName:Ru,backendName:"cpu",kernelFunc:Rne};function Ene(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=n;re([o,s],"maxPool3DGrad");let p=C.computePool3DInfo(s.shape,a,i,1,u,l),m=t.bufferSync(s),c=WL(m,p),d=p.strideDepth,f=p.strideHeight,h=p.strideWidth,g=p.dilationDepth,y=p.dilationHeight,T=p.dilationWidth,x=p.effectiveFilterDepth,I=p.effectiveFilterHeight,k=p.effectiveFilterWidth,w=x-1-p.padInfo.front,F=k-1-p.padInfo.left,M=I-1-p.padInfo.top,R=Te(s.shape,"float32"),L=t.bufferSync(o);for(let O=0;O<p.batchSize;++O)for(let W=0;W<p.inChannels;++W)for(let V=0;V<p.inDepth;++V)for(let j=0;j<p.inHeight;++j)for(let q=0;q<p.inWidth;++q){let Y=V-w,J=j-M,H=q-F,oe=0;for(let se=0;se<x;se+=g){let ae=(Y+se)/d;if(!(ae<0||ae>=p.outDepth||Math.floor(ae)!==ae))for(let pe=0;pe<I;pe+=y){let ie=(J+pe)/f;if(!(ie<0||ie>=p.outHeight||Math.floor(ie)!==ie))for(let be=0;be<k;be+=T){let fe=(H+be)/h;if(fe<0||fe>=p.outWidth||Math.floor(fe)!==fe)continue;let Ie=x*I*k-1-c.get(O,ae,ie,fe,W),we=se*I*k+pe*k+be,Ee=Ie===we?1:0;if(Ee===0)continue;oe+=L.get(O,ae,ie,fe,W)*Ee}}}R.set(oe,O,V,j,q,W)}return t.makeTensorInfo(R.shape,R.dtype,R.values)}var X$={kernelName:Am,backendName:"cpu",kernelFunc:Ene};function _ne(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:a}=e,i=s;re([s,a],"maxPoolGrad");let{filterSize:u,strides:l,pad:p,dimRoundingMode:m}=n,c=C.computePool2DInfo(i.shape,u,l,1,p,m),d=t.data.get(i.dataId).values,f=Te(c.outShape,i.dtype,OT(d,i.shape,i.dtype,c).values),h=c.strideHeight,g=c.strideWidth,y=c.dilationHeight,T=c.dilationWidth,x=c.effectiveFilterHeight,I=c.effectiveFilterWidth,k=I-1-c.padInfo.left,w=x-1-c.padInfo.top,F=Te(i.shape,"float32"),M=t.data.get(o.dataId).values,R=Te(o.shape,"float32",M);for(let L=0;L<c.batchSize;++L)for(let O=0;O<c.inChannels;++O)for(let W=0;W<c.inHeight;++W)for(let V=0;V<c.inWidth;++V){let j=W-w,q=V-k,Y=0;for(let J=0;J<x;J+=y){let H=(j+J)/h;if(!(H<0||H>=c.outHeight||Math.floor(H)!==H))for(let oe=0;oe<I;oe+=T){let se=(q+oe)/g;if(se<0||se>=c.outWidth||Math.floor(se)!==se)continue;let ae=x*I-1-f.get(L,H,se,O),pe=J*I+oe,ie=ae===pe?1:0;if(ie===0)continue;Y+=R.get(L,H,se,O)*ie}}F.set(Y,L,W,V,O)}return t.makeTensorInfo(F.shape,F.dtype,F.values)}var Y$={kernelName:vm,backendName:"cpu",kernelFunc:_ne};function Z$(r,e,t,n,o){let s=b.computeStrides(e),a=Vc(r,e,t,s,o,"max"),i=OT(r,e,t,o,!0,n);return[a.values,i.values]}var Q$={kernelName:wm,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=e,u=t;re(n,"MaxPoolWithArgmax");let l=u.data.get(n.dataId).values,p=C.computePool2DInfo(n.shape,o,s,[1,1],a),[m,c]=Z$(l,n.shape,n.dtype,i,p),d=u.write(m,p.outShape,n.dtype),f=u.write(c,p.outShape,n.dtype);return[{dataId:d,shape:p.outShape,dtype:n.dtype},{dataId:f,shape:p.outShape,dtype:"int32"}]}};function Lne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=b.parseAxisParam(s,o.shape),l=C.computeOutAndReduceShapes(o.shape,i)[1],p=b.sizeFromShape(l),m=[],c=t.makeTensorInfo([],"float32",new Float32Array([p]));m.push(c);let d=Hs({inputs:{x:o},backend:t,attrs:{dtype:"float32"}});m.push(d);let f=Gh({inputs:{a:d,b:c},backend:t});m.push(f);let h=du({inputs:{x:f},backend:t,attrs:{axis:s,keepDims:a}});return m.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}var J$={kernelName:wo,backendName:"cpu",kernelFunc:Lne};function $ne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;re(o,"min");let i=b.parseAxisParam(s,o.shape),u=i,l=C.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=Zt({inputs:{x:o},backend:t,attrs:{perm:l}}),u=C.getInnerMostAxes(u.length,o.shape.length)),C.assertAxesAreInnerMostDims("min",u,p.shape.length);let[m,c]=C.computeOutAndReduceShapes(p.shape,u),d=b.sizeFromShape(c),f=b.makeZerosTypedArray(b.sizeFromShape(m),p.dtype),h=t.data.get(p.dataId).values;for(let y=0;y<f.length;++y){let T=y*d,x=h[T];for(let I=0;I<d;++I){let k=h[T+I];(Number.isNaN(k)||k<x)&&(x=k)}f[y]=x}l!=null&&t.disposeIntermediateTensorInfo(p);let g=t.makeTensorInfo(m,p.dtype,f);if(a){let y=C.expandShapeToKeepDim(m,i),T=tt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),T}return g}var eB={kernelName:No,backendName:"cpu",kernelFunc:$ne};function Bne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,mode:a}=n;re(o,"mirrorPad");let i=s.map((x,I)=>x[0]+o.shape[I]+x[1]),u=s.map(x=>x[0]),l=s.map((x,I)=>x[0]+o.shape[I]),p=a==="reflect"?0:1,m=t.data.get(o.dataId).values,c=o.shape.length,d=b.computeStrides(o.shape),f=b.sizeFromShape(i),h=i.length,g=b.computeStrides(i),y=b.getTypedArrayFromDType(o.dtype,f);for(let x=0;x<f;x++){let I=b.indexToLoc(x,h,g);for(let w=0;w<h;w++)I[w]<u[w]?I[w]=u[w]*2-I[w]-p:I[w]>=l[w]&&(I[w]=(l[w]-1)*2-I[w]+p);I=I.map((w,F)=>w-u[F]);let k=b.locToIndex(I,c,d);y[x]=m[k]}return{dataId:t.write(y,i,o.dtype),shape:i,dtype:o.dtype}}var tB={kernelName:Po,backendName:"cpu",kernelFunc:Bne};var One=st((r,e)=>{let t=r%e;return r<0&&e<0||r>=0&&e>=0?t:(t+e)%e}),zne=ut(Ki,One),rB={kernelName:Ki,backendName:"cpu",kernelFunc:zne};var oB=Ml(qd());function nA(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=o.shape.length,i=s;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);let u=b.parseAxisParam([i],o.shape),l=rA({inputs:{x:o},backend:t,attrs:{reductionIndices:u,keepDims:!1}}),p=C.expandShapeToKeepDim(l.shape,u),m=tt({inputs:{x:l},backend:t,attrs:{shape:p}}),c=Oh({inputs:{a:o,b:m},backend:t}),d=Pv({inputs:{x:c},backend:t}),f=du({inputs:{x:d},backend:t,attrs:{axis:u,keepDims:!1}}),h=tt({inputs:{x:f},backend:t,attrs:{shape:p}}),g=Gh({inputs:{a:d,b:h},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),g}var nB={kernelName:Vo,backendName:"cpu",kernelFunc:nA};function Gne(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n;re(o,"multinomial");let u=i?o:nA({inputs:{logits:o},backend:t,attrs:{dim:-1}}),l=u.shape[0],p=u.shape[1],m=t.data.get(u.dataId).values,c=[l,s],d=b.makeZerosTypedArray(b.sizeFromShape(c),"int32");for(let f=0;f<l;++f){let h=f*p,g=new Float32Array(p-1);g[0]=m[h];for(let x=1;x<g.length;++x)g[x]=g[x-1]+m[h+x];let y=oB.alea(a.toString()),T=f*s;for(let x=0;x<s;++x){let I=y();d[T+x]=g.length;for(let k=0;k<g.length;k++)if(I<g[k]){d[T+x]=k;break}}}return i||t.disposeIntermediateTensorInfo(u),t.makeTensorInfo(c,"int32",d)}var sB={kernelName:Nm,backendName:"cpu",kernelFunc:Gne};var Une=yr.nonMaxSuppressionV3Impl;function Wne(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=n;re(o,"NonMaxSuppression");let l=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,{selectedIndices:m}=Une(l,p,a,i,u);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}var aB={kernelName:Ca,backendName:"cpu",kernelFunc:Wne};var Kne=yr.nonMaxSuppressionV4Impl;function Vne(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=n;re(o,"NonMaxSuppressionPadded");let p=t.data.get(o.dataId).values,m=t.data.get(s.dataId).values,{selectedIndices:c,validOutputs:d}=Kne(p,m,a,i,u,l);return[t.makeTensorInfo([c.length],"int32",new Int32Array(c)),t.makeTensorInfo([],"int32",new Int32Array([d]))]}var iB={kernelName:Vi,backendName:"cpu",kernelFunc:Vne};var Hne=yr.nonMaxSuppressionV5Impl;function qne(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=n;re(o,"NonMaxSuppressionWithScore");let p=t.data.get(o.dataId).values,m=t.data.get(s.dataId).values,c=a,d=i,f=u,h=l,{selectedIndices:g,selectedScores:y}=Hne(p,m,c,d,f,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var uB={kernelName:ka,backendName:"cpu",kernelFunc:qne};function jne(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n;re(o,"oneHot");let u=b.sizeFromShape(o.shape),l=new Float32Array(u*s);l.fill(i);let p=t.data.get(o.dataId).values;for(let m=0;m<u;++m)p[m]>=0&&p[m]<s&&(l[m*s+p[m]]=a);return t.makeTensorInfo([...o.shape,s],"int32",l)}var lB={kernelName:Sa,backendName:"cpu",kernelFunc:jne};function Kh(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Vs({inputs:{input:n},backend:t}),s=Kh({inputs:{x:o},backend:t}),a=ki({inputs:{input:n},backend:t}),i=Kh({inputs:{x:a},backend:t}),u=vr({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return Wh({backend:t,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var pB={kernelName:Is,backendName:"cpu",kernelFunc:Kh};function mB(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Vs({inputs:{input:n},backend:t}),s=mB({inputs:{x:o},backend:t}),a=ki({inputs:{input:n},backend:t}),i=Kh({inputs:{x:a},backend:t}),u=vr({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return Wh({backend:t,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var cB={kernelName:ds,backendName:"cpu",kernelFunc:mB};function oA(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return Hc({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(p=>{b.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),b.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=e.map(p=>{let m=Hc({inputs:{input:p},backend:t,attrs:{dim:o}});return i.push(m),m}),l=yl({inputs:u,backend:t,attrs:{axis:o}});return i.forEach(p=>t.disposeIntermediateTensorInfo(p)),l}var dB={kernelName:fs,backendName:"cpu",kernelFunc:oA};function Xne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;re(o,"pad");let i=s.map((T,x)=>T[0]+o.shape[x]+T[1]),u=s.map(T=>T[0]),l=t.data.get(o.dataId).values,p=b.sizeFromShape(o.shape),m=o.shape.length,c=b.computeStrides(o.shape),d=b.sizeFromShape(i),f=i.length,h=b.computeStrides(i),g=b.getTypedArrayFromDType(o.dtype,d);a!==0&&g.fill(a);for(let T=0;T<p;T++){let I=b.indexToLoc(T,m,c).map((w,F)=>w+u[F]),k=b.locToIndex(I,f,h);g[k]=l[T]}return{dataId:t.write(g,i,o.dtype),shape:i,dtype:o.dtype}}var UT={kernelName:Mo,backendName:"cpu",kernelFunc:Xne};var Yne=st((r,e)=>Math.pow(r,e)),Zne=ut(Ro,Yne),fB={kernelName:Ro,backendName:"cpu",kernelFunc:Zne};function Qne(r){let{backend:e,attrs:t}=r,{start:n,stop:o,dtype:s,step:a}=t,i=xp(n,o,a,s);return e.makeTensorInfo([i.length],s,i)}var hB={kernelName:ii,backendName:"cpu",kernelFunc:Qne};var Jne=Re(Hi,r=>1/r),gB={kernelName:Hi,backendName:"cpu",kernelFunc:Jne};function eoe(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n;re(o,"resizeBilinear");let u=b.computeStrides(o.shape),[l,p]=i,[m,c,d,f]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(b.sizeFromShape([m,l,p,f])),y=[s&&l>1?c-1:c,s&&p>1?d-1:d],T=[s&&l>1?l-1:l,s&&p>1?p-1:p],x=0,I=y[0]/T[0],k=y[1]/T[1];for(let w=0;w<m;w++)for(let F=0;F<l;F++){let M;a?M=I*(F+.5)-.5:M=I*F;let R=Math.max(0,Math.floor(M)),L=M-R,O=Math.min(c-1,Math.ceil(M)),W=w*u[0]+R*u[1],V=w*u[0]+O*u[1];for(let j=0;j<p;j++){let q;a?q=k*(j+.5)-.5:q=k*j;let Y=Math.max(0,Math.floor(q)),J=q-Y,H=Math.min(d-1,Math.ceil(q)),oe=W+Y*u[2],se=V+Y*u[2],ae=W+H*u[2],pe=V+H*u[2];for(let ie=0;ie<f;ie++){let be=h[oe+ie],fe=h[se+ie],Ie=h[ae+ie],we=h[pe+ie],Ee=be+(Ie-be)*J,Le=fe+(we-fe)*J,Ze=Ee+(Le-Ee)*L;g[x++]=Ze}}}return t.makeTensorInfo([m,l,p,f],"float32",g)}var bB={kernelName:Bo,backendName:"cpu",kernelFunc:eoe};function toe(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n;re([s,o],"resizeBilinearGrad");let i=b.computeStrides(o.shape),[u,l,p,m]=o.shape,[,c,d]=s.shape,f=new Float32Array(u*l*p*m),h=[a&&c>1?l-1:l,a&&d>1?p-1:p],g=[a&&c>1?c-1:c,a&&d>1?d-1:d],y=h[0]/g[0],T=h[1]/g[1],x=t.data.get(s.dataId).values,I=0;for(let k=0;k<u;k++){let w=k*i[0];for(let F=0;F<c;F++){let M=F*y,R=Math.floor(M),L=Math.min(Math.ceil(M),l-1),O=w+R*i[1],W=w+L*i[1],V=M-R,j=1-V;for(let q=0;q<d;q++){let Y=q*T,J=Math.floor(Y),H=Math.min(Math.ceil(Y),p-1),oe=Y-J,se=1-oe,ae=O+J*i[2],pe=O+H*i[2],ie=W+J*i[2],be=W+H*i[2],fe=j*se,Ie=j*oe,we=V*se,Ee=V*oe;for(let Le=0;Le<m;Le++){let Ze=x[I++];f[ae+Le]+=Ze*fe,f[pe+Le]+=Ze*Ie,f[ie+Le]+=Ze*we,f[be+Le]+=Ze*Ee}}}}return t.makeTensorInfo([u,p,l,m],"float32",f)}var yB={kernelName:Pm,backendName:"cpu",kernelFunc:toe};function roe(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n;re(o,"resizeNearestNeighbor");let u=b.computeStrides(o.shape),[l,p]=i,[m,c,d,f]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(m*l*p*f),y=[s&&l>1?c-1:c,s&&p>1?d-1:d],T=[s&&l>1?l-1:l,s&&p>1?p-1:p],x=y[0]/T[0],I=y[1]/T[1],k=0;for(let w=0;w<m;w++){let F=w*u[0];for(let M=0;M<l;M++){let R=a?x*(M+.5):x*M,L=Math.min(c-1,s?Math.round(R):Math.floor(R));a&&(L=Math.max(0,L));let O=F+L*u[1];for(let W=0;W<p;W++){let V=a?I*(W+.5):I*W,j=Math.min(d-1,s?Math.round(V):Math.floor(V));a&&(j=Math.max(0,j));let q=O+j*u[2];for(let Y=0;Y<f;Y++){let J=h[q+Y];g[k++]=J}}}}return t.makeTensorInfo([m,l,p,f],o.dtype,g)}var TB={kernelName:$o,backendName:"cpu",kernelFunc:roe};function noe(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n;re([s,o],"resizeNearestNeighborGrad");let i=b.computeStrides(o.shape),u=b.computeStrides(s.shape),[l,p,m,c]=o.shape,[,d,f]=s.shape,h=new Float32Array(l*p*m*c),g=t.data.get(s.dataId).values,y=[a&&d>1?p-1:p,a&&f>1?m-1:m],T=[a&&d>1?d-1:d,a&&f>1?f-1:f],x=y[0]/T[0],I=y[1]/T[1],k=1/x,w=1/I,F=Math.ceil(k)*2+2,M=Math.ceil(w)*2+2;for(let R=0;R<l;R++){let L=R*i[0];for(let O=0;O<p;O++){let W=L+O*i[1],V=Math.floor(O*k),j=Math.floor(V-F/2);for(let q=0;q<m;q++){let Y=W+q*i[2],J=Math.floor(q*w),H=Math.floor(J-M/2);for(let oe=0;oe<c;oe++){let se=0;for(let ae=0;ae<F;ae++){let pe=ae+j;if(pe<0||pe>=d)continue;let ie=L+pe*u[1],be=pe*x,fe=Math.min(p-1,a?Math.round(be):Math.floor(be));if(O===fe)for(let Ie=0;Ie<M;Ie++){let we=Ie+H;if(we<0||we>=f)continue;let Ee=ie+we*u[2],Le=we*I,Ze=Math.min(m-1,a?Math.round(Le):Math.floor(Le));q===Ze&&(se+=g[Ee+oe])}}h[Y+oe]=se}}}}return t.makeTensorInfo(o.shape,o.dtype,h)}var xB={kernelName:Dm,backendName:"cpu",kernelFunc:noe};function ooe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n;re(o,"reverse");let a=o.shape.length,i=b.parseAxisParam(s,o.shape);if(a===0)return Wr({inputs:{x:o},backend:t});let u=new yt(o.shape,o.dtype),l=t.bufferSync(o);for(let p=0;p<u.size;p++){let m=u.indexToLoc(p),c=m.slice();i.forEach(d=>c[d]=o.shape[d]-1-c[d]),u.set(l.get(...c),...m)}return t.makeTensorInfo(u.shape,u.dtype,u.values)}var IB={kernelName:va,backendName:"cpu",kernelFunc:ooe};var CB={kernelName:Ra,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,u=b.getTypedArrayFromDType(n.dtype,b.sizeFromShape(n.shape)),[l,p,m,c]=n.shape,[d,f]=C.getImageCenter(a,p,m),h=255,g=Math.sin(o),y=Math.cos(o),T=i.data.get(n.dataId).values;for(let I=0;I<l;I++){let k=I*m*p*c;for(let w=0;w<p;w++){let F=w*(m*c);for(let M=0;M<m;M++){let R=M*c;for(let L=0;L<c;L++){let O=[l,w,M,L],W=O[2],V=O[1],j=(W-d)*y-(V-f)*g,q=(W-d)*g+(V-f)*y;j=Math.round(j+d),q=Math.round(q+f);let Y=s;if(typeof s!="number"&&(L===3?Y=h:Y=s[L]),j>=0&&j<m&&q>=0&&q<p){let H=q*(m*c),oe=j*c,se=k+H+oe+L;Y=T[se]}let J=k+F+R+L;u[J]=Y}}}}return{dataId:i.write(u,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var soe=Re(Aa,r=>{let e=Math.floor(r);return r-e<.5?Math.floor(r):r-e>.5?Math.ceil(r):e%2===0?e:e+1}),kB={kernelName:Aa,backendName:"cpu",kernelFunc:soe};function aoe(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:u,sliceSize:l,strides:p,outputSize:m}=C.calculateShapes(s,o,a),c=!0,d=t.bufferSync(o),f=t.bufferSync(s),h=cu(d,f,a,m,l,u,i,p,0,c);return t.makeTensorInfo(a,h.dtype,h.values)}var SB={kernelName:wa,backendName:"cpu",kernelFunc:aoe};function ioe(r,e){let t=0,n=r.length,o=0;for(;t<n;)o=Math.floor((t+n)/2),r[o]<e?t=o+1:n=o;return n}function uoe(r,e){let t=0,n=r.length,o=0;for(;t<n;)o=Math.floor((t+n)/2),r[o]<=e?t=o+1:n=o;return n}function vB(r,e,t,n,o,s){let a=b.getArrayFromDType("int32",t*o);for(let i=0;i<t;++i){let u=r.slice(i*n,(i+1)*n),l=i*o;for(let p=0;p<o;++p)a[l+p]=s==="left"?ioe(u,e[p+l]):uoe(u,e[p+l])}return a}function loe(r){let{inputs:e,backend:t,attrs:n}=r,{sortedSequence:o,values:s}=e,{side:a}=n,i=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,l=vB(i,u,o.shape[0],o.shape[1],s.shape[1],a);return t.makeTensorInfo(s.shape,"int32",l)}var AB={kernelName:Fm,backendName:"cpu",kernelFunc:loe};function poe(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e;re([n,o,s],"select");let a=n.shape.length,i=t.data.get(n.dataId).values,u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,p=Et(o.dtype,s.dtype),m=b.makeZerosTypedArray(b.sizeFromShape(o.shape),p),c=0,d=a===0||a>1||o.shape.length===1?1:b.sizeFromShape(o.shape.slice(1));for(let f=0;f<i.length;f++)for(let h=0;h<d;h++)i[f]===1?m[c++]=u[f]:m[c++]=l[f];return t.makeTensorInfo(o.shape,p,m)}var wB={kernelName:gs,backendName:"cpu",kernelFunc:poe};var moe=C.SELU_SCALEALPHA,coe=C.SELU_SCALE,doe=Re(qi,r=>r>=0?coe*r:moe*(Math.exp(r)-1)),NB={kernelName:qi,backendName:"cpu",kernelFunc:doe};var foe=Re(ji,r=>r<0?-1:r>0?1:0),DB={kernelName:ji,backendName:"cpu",kernelFunc:foe};var hoe=Re(Go,r=>Math.sin(r)),PB={kernelName:Go,backendName:"cpu",kernelFunc:hoe};var goe=Re(Na,r=>Math.sinh(r)),FB={kernelName:Na,backendName:"cpu",kernelFunc:goe};var boe=11920928955078125e-23,MB=Math.log(boe)+2,yoe=Re(Xi,r=>{let e=r>-MB,t=r<MB,n=Math.exp(r),o;return t?o=n:e?o=r:o=Math.log(1+n),o}),RB={kernelName:Xi,backendName:"cpu",kernelFunc:yoe};function Toe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;re([o],"spaceToBatchND");let i=b.sizeFromShape(s),u=[[0,0]];u.push(...a);for(let w=1+s.length;w<o.shape.length;++w)u.push([0,0]);let l=UT.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),p=C.getReshaped(l.shape,s,i,!1),m=C.getPermuted(p.length,s.length,!1),c=C.getReshapedPermuted(l.shape,s,i,!1),h=tt({inputs:{x:l},backend:t,attrs:{shape:p}}),T=Zt({inputs:{x:h},backend:t,attrs:{perm:m}}),k=tt({inputs:{x:T},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(T),k}var EB={kernelName:ys,backendName:"cpu",kernelFunc:Toe};function xoe(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=t.data.get(n.dataId).values,u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,p=t.data.get(a.dataId).values[0],[m,c,d,f,h]=RT(i,n.shape,n.dtype,u,o.dtype,l,p);return[t.makeTensorInfo(c,n.dtype,m),t.makeTensorInfo([c[0]],o.dtype,d),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var _B={kernelName:_u,backendName:"cpu",kernelFunc:xoe};function Ioe(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(t.data.get(o.dataId).values),i=t.data.get(n.dataId).values,u=Array.from(t.data.get(s.dataId).values),[l,p,m]=ET(i,n.shape,n.dtype,a,u);return[t.makeTensorInfo(p,n.dtype,l),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var LB={kernelName:Yi,backendName:"cpu",kernelFunc:Ioe};function Coe(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let a=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,[l,p]=Wc(a,n.shape,n.dtype,i,u,!0);return t.makeTensorInfo(p,n.dtype,l)}var $B={kernelName:Lu,backendName:"cpu",kernelFunc:Coe};function koe(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let a=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,[l,p]=Wc(a,n.shape,n.dtype,i,u);return t.makeTensorInfo(p,n.dtype,l)}var BB={kernelName:$u,backendName:"cpu",kernelFunc:koe};function Soe(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:u,numUpdates:l,sliceSize:p,strides:m,outputSize:c}=C.calculateShapes(s,o,i),d=!1,f=t.bufferSync(o),h;switch(s.dtype){case"bool":{let g=t.bufferSync(s),y=Boolean(t.data.get(a.dataId).values[0]);h=cu(f,g,i,c,p,l,u,m,y,d);break}case"float32":{let g=t.bufferSync(s),y=t.data.get(a.dataId).values[0];h=cu(f,g,i,c,p,l,u,m,y,d);break}case"int32":{let g=t.bufferSync(s),y=t.data.get(a.dataId).values[0];h=cu(f,g,i,c,p,l,u,m,y,d);break}case"string":{let g=t.bufferSync(s),y=b.decodeString(t.data.get(a.dataId).values[0]);h=cu(f,g,i,c,p,l,u,m,y,d);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return t.makeTensorInfo(i,h.dtype,h.values)}var OB={kernelName:Bu,backendName:"cpu",kernelFunc:Soe};function voe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=b.parseAxisParam(a,o.shape)[0],u=C.prepareSplitSize(o,s,i),l=new Array(o.shape.length).fill(0),p=o.shape.slice();return u.map(m=>{let c=[...p];c[i]=m;let d=js({inputs:{x:o},backend:t,attrs:{begin:l,size:c}});return l[i]+=m,d})}var zB={kernelName:Ts,backendName:"cpu",kernelFunc:voe};var GB={kernelName:ui,backendName:"cpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e;re(t,"square");let o=n.data.get(t.dataId).values,s=new Float32Array(o.length);for(let i=0;i<o.length;++i){let u=o[i];s[i]=u*u}return{dataId:n.write(s,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};var Aoe=Re(Cs,(r,e)=>{let t=e;return isNaN(r)?NaN:r>0?1:t.alpha}),UB={kernelName:Cs,backendName:"cpu",kernelFunc:Aoe};function woe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:m,shrinkAxisMask:c}=n;re(o,"stridedSlice");let{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:T,end:x,strides:I}=xt.sliceInfo(o.shape,s,a,i,u,l,p,m,c),k;if(h)k=tt({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let w=xt.computeOutShape(T,x,I),F=js({inputs:{x:o},backend:t,attrs:{begin:T,size:w}});k=tt({inputs:{x:F},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(F)}else{let w=t.bufferSync(o),F=_T(d,w,I,T);k=t.makeTensorInfo(f,F.dtype,F.values)}return k}var WB={kernelName:Da,backendName:"cpu",kernelFunc:woe};function Noe(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:m}=e,c=t.data.get(p.dataId).values,d=t.data.get(m.dataId).values,[f,h]=Cp(c,d,o,s,a,i,u,l);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(m.shape,"int32",h)]}var KB={kernelName:li,backendName:"cpu",kernelFunc:Noe};function Doe(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=t.data.get(s.dataId).values,u=t.data.get(a.dataId).values[0],[l,p,m]=kp(i,u,o),c=p.length;return[t.makeTensorInfo([c,2],"int32",l),t.makeTensorInfo([c],"string",p),t.makeTensorInfo([2],"int32",new Int32Array(m))]}var VB={kernelName:Ou,backendName:"cpu",kernelFunc:Doe};function Poe(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=t.data.get(s.dataId).values,i=Sp(a,o);return t.makeTensorInfo(s.shape,"int32",i)}var HB={kernelName:zu,backendName:"cpu",kernelFunc:Poe};var Foe=Re(Pa,r=>Math.tan(r)),qB={kernelName:Pa,backendName:"cpu",kernelFunc:Foe};var Moe=Re(jo,r=>Math.tanh(r)),jB={kernelName:jo,backendName:"cpu",kernelFunc:Moe};function Roe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;re(o,"tile");let a=LT(t.bufferSync(o),s);return t.makeTensorInfo(a.shape,a.dtype,a.values)}var XB={kernelName:Nn,backendName:"cpu",kernelFunc:Roe};function Eoe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n;re(o,"topk");let i=t.data.get(o.dataId).values,[u,l]=$T(i,o.shape,o.dtype,s,a);return[t.makeTensorInfo(u.shape,u.dtype,u.values),t.makeTensorInfo(l.shape,l.dtype,l.values)]}var YB={kernelName:Fa,backendName:"cpu",kernelFunc:Eoe};function _oe(r){let{inputs:e,attrs:t,backend:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=t,[p,m,c,d]=o.shape,[f,h]=l??[m,c],g=[p,f,h,d],y=b.computeStrides(o.shape),T=y[0],x=y[1],I=y[2],k=b.getTypedArrayFromDType(o.dtype,b.sizeFromShape(g));k.fill(u);let w=n.data.get(o.dataId).values,F=n.data.get(s.dataId).values;for(let R=0;R<p;++R){let L=s.shape[0]===1?F:F.subarray(R*8,R*8+8);for(let O=0;O<f;++O)for(let W=0;W<h;++W)for(let V=0;V<d;++V){let j,q=L[6]*W+L[7]*O+1;if(q===0)continue;let Y=(L[0]*W+L[1]*O+L[2])/q,J=(L[3]*W+L[4]*O+L[5])/q,H=ZB(Y,c,i),oe=ZB(J,m,i);switch(a){case"nearest":j=zoe(w,m,c,T,x,I,R,oe,H,V,u);break;case"bilinear":j=Goe(w,m,c,T,x,I,R,oe,H,V,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}let se=R*T+O*x+W*I+V;k[se]=j}return n.makeTensorInfo(g,o.dtype,k)}return{dataId:n.write(k,g,o.dtype),shape:o.shape,dtype:o.dtype}}var QB={kernelName:Ma,backendName:"cpu",kernelFunc:_oe};function ZB(r,e,t){switch(t){case"reflect":return Loe(r,e);case"wrap":return $oe(r,e);case"nearest":return Ooe(r,e);case"constant":default:return Boe(r,e)}}function Loe(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=2*e;t<n&&(t=n*Math.trunc(-t/n)+t),t=t<-e?t+n:-t-1}else if(t>e-1)if(e<=1)t=0;else{let n=2*e;t-=n*Math.trunc(t/n),t>=e&&(t=n-t-1)}return b.clamp(0,t,e-1)}function $oe(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=e-1;t+=e*(Math.trunc(-t/n)+1)}else if(t>e-1)if(e<=1)t=0;else{let n=e-1;t-=e*Math.trunc(t/n)}return b.clamp(0,t,e-1)}function Boe(r,e){return r}function Ooe(r,e){return b.clamp(0,r,e-1)}function Vh(r,e,t,n,o,s,a,i,u,l,p){let m=a*n+i*o+u*s+l;return 0<=i&&i<e&&0<=u&&u<t?r[m]:p}function zoe(r,e,t,n,o,s,a,i,u,l,p){let m=Math.round(i),c=Math.round(u);return Vh(r,e,t,n,o,s,a,m,c,l,p)}function Goe(r,e,t,n,o,s,a,i,u,l,p){let m=Math.floor(i),c=Math.floor(u),d=m+1,f=c+1,h=(f-u)*Vh(r,e,t,n,o,s,a,m,c,l,p)+(u-c)*Vh(r,e,t,n,o,s,a,m,f,l,p),g=(f-u)*Vh(r,e,t,n,o,s,a,d,c,l,p)+(u-c)*Vh(r,e,t,n,o,s,a,d,f,l,p);return(d-i)*h+(i-m)*g}function Uoe(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;re(s,"unique");let a=n.data.get(s.dataId).values,{outputValues:i,outputShape:u,indices:l}=BT(a,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,i),n.makeTensorInfo([l.length],"int32",l)]}var JB={kernelName:Mm,backendName:"cpu",kernelFunc:Uoe};function Woe(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape.length,i=o.shape[s],u=new Array(a-1),l=0;for(let d=0;d<a;d++)d!==s&&(u[l++]=o.shape[d]);let p=new Array(a).fill(0),m=o.shape.slice();m[s]=1;let c=new Array(i);for(let d=0;d<c.length;d++){p[s]=d;let f=js({inputs:{x:o},backend:t,attrs:{begin:p,size:m}});c[d]=tt({inputs:{x:f},backend:t,attrs:{shape:u}}),t.disposeIntermediateTensorInfo(f)}return c}var eO={kernelName:xs,backendName:"cpu",kernelFunc:Woe};function Koe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:a}=n;re(o,"unsortedSegmentSum");let i=o.shape.length,u=s.shape.length,l=[],p=[],m=i-u,c=s;for(let f=0;f<m;++f){let h=Hc({inputs:{input:c},backend:t,attrs:{dim:f+1}});c=h,p.push(h)}for(let f=0;f<a;++f){let h=b.createScalarValue(f,"int32"),g=t.makeTensorInfo([],"int32",h),y=Nv({inputs:{a:g,b:c},backend:t}),T=Hs({inputs:{x:y},backend:t,attrs:{dtype:"float32"}}),x=Tp({inputs:{a:T,b:o},backend:t}),I=du({inputs:{x},backend:t,attrs:{axis:0,keepDims:!1}});l.push(I),p.push(g),p.push(y),p.push(T),p.push(x),p.push(I)}let d=oA({inputs:l,backend:t,attrs:{axis:0}});return p.forEach(f=>t.disposeIntermediateTensorInfo(f)),d}var tO={kernelName:Gu,backendName:"cpu",kernelFunc:Koe};var Voe=[PL,K_,FL,ML,X_,RL,EL,_L,LL,$L,BL,OL,zL,GL,UL,KL,VL,HL,qL,DL,jL,XL,YL,ZL,j_,Y_,QL,V_,JL,t$,r$,n$,o$,s$,a$,i$,u$,l$,p$,m$,c$,d$,f$,h$,g$,b$,y$,T$,x$,I$,k$,kL,S$,Z_,v$,Q_,A$,J_,w$,N$,D$,eL,P$,F$,M$,R$,E$,tL,rL,H_,_$,e$,L$,$$,B$,SL,nL,oL,O$,sL,z$,G$,U$,W$,K$,V$,H$,aL,q$,j$,X$,Y$,Q$,J$,eB,iL,tB,rB,sB,uL,lL,aB,iB,uB,pL,lB,cB,dB,UT,fB,vL,cL,hB,q_,Uh,gB,AL,wL,NL,bB,yB,TB,xB,IB,CB,kB,dL,SB,AB,wB,NB,hL,DB,PB,FB,gL,nB,RB,EB,_B,LB,$B,BB,OB,zB,yL,GB,TL,UB,WB,KB,VB,HB,IL,C$,qB,jB,XB,YB,QB,mL,JB,eO,tO,pB];for(let r of Voe)Zi(r);var Xc={};je(Xc,{assertNotComplex:()=>qa,bindCanvasToFramebuffer:()=>ese,bindColorTextureToFramebuffer:()=>Xh,bindTextureToProgramUniformSampler:()=>IA,bindTextureUnit:()=>sO,bindVertexBufferToProgramAttribute:()=>qT,callAndCheck:()=>ke,canBeRepresented:()=>lA,createFragmentShader:()=>mA,createFramebuffer:()=>yA,createProgram:()=>cA,createStaticIndexBuffer:()=>hA,createStaticVertexBuffer:()=>fA,createTexture:()=>gA,createVertexShader:()=>pA,getBatchDim:()=>hu,getExtensionOrThrow:()=>qc,getFramebufferErrorMessage:()=>aO,getMaxTexturesInShader:()=>SA,getNumChannels:()=>Qoe,getProgramUniformLocation:()=>xA,getProgramUniformLocationOrThrow:()=>TA,getRowsCols:()=>gu,getShapeAs3D:()=>Yh,getTextureShapeFromLogicalShape:()=>CA,getWebGLDisjointQueryTimerVersion:()=>vA,getWebGLErrorMessage:()=>oO,getWebGLMaxTextureSize:()=>kA,hasExtension:()=>Qn,isCapableOfRenderingToFloatTexture:()=>AA,isDownloadFloatTextureEnabled:()=>wA,isReshapeFree:()=>Tl,isWebGLFenceEnabled:()=>NA,isWebGLVersionEnabled:()=>XT,linkProgram:()=>dA,logShaderSourceAndInfoLog:()=>HT,resetMaxTextureSize:()=>tse,resetMaxTexturesInShader:()=>rse,unbindColorTextureFromFramebuffer:()=>jT,unbindTextureUnit:()=>Joe,validateFramebuffer:()=>jc,validateProgram:()=>jh,validateTextureSize:()=>bA});var Ap={},sA={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function aA(r,e){Ap[r]=e}function Zn(r,e){if(!(r in Ap)||e!=null){let n=qoe(r,e);if(n!==null)Ap[r]=n;else return console.log("Could not get context for WebGL version",r),null}let t=Ap[r];return t==null||t.isContextLost()?(delete Ap[r],Zn(r)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Ap[r])}function Hoe(r){if(typeof OffscreenCanvas<"u"&&r===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function qoe(r,e){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=e??Hoe(r);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete Ap[r]},!1),r===1?t.getContext("webgl",sA)||t.getContext("experimental-webgl",sA):t.getContext("webgl2",sA)}function wp(r,e){return[e,r]}function rO(r,e){return r*e}function Hh(r){let e=b.sizeFromShape(r),t=Math.ceil(e/4);return b.sizeToSquarishShape(t)}function Si(r,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(r/2))]}function nO(r,e){let[t,n]=Si(r,e);return t*n*4}function qh(r,e){let t=r,n,o,s,a,i,u,l,p,m,c;return B().getNumber("WEBGL_VERSION")===2?(n=t.R32F,o=t.R16F,s=t.RGBA16F,a=t.RGBA32F,i=t.RED,l=4,p=1,m=t.HALF_FLOAT,c=t.FLOAT,u=t.RGBA8):(n=r.RGBA,o=r.RGBA,s=r.RGBA,a=t.RGBA,i=r.RGBA,l=4,p=4,m=e!=null?e.HALF_FLOAT_OES:null,c=r.FLOAT,u=r.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:p,textureTypeHalfFloat:m,textureTypeFloat:c}}function ke(r,e){let t=e();return B().getBool("DEBUG")&&joe(r),t}function joe(r){let e=r.getError();if(e!==r.NO_ERROR)throw new Error("WebGL Error: "+oO(r,e))}var Xoe=596e-10,Yoe=65504;function lA(r){return!!(B().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||Xoe<Math.abs(r)&&Math.abs(r)<Yoe)}function oO(r,e){switch(e){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function qc(r,e){return fu(r,()=>r.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function pA(r,e){let t=fu(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ke(r,()=>r.shaderSource(t,e)),ke(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function mA(r,e){let t=fu(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ke(r,()=>r.shaderSource(t,e)),ke(r,()=>r.compileShader(t)),B().get("ENGINE_COMPILE_ONLY"))return t;if(r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw HT(e,r.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}var Zoe=/ERROR: [0-9]+:([0-9]+):/g;function HT(r,e){let t=Zoe.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(r);return}let n=+t[1],o=r.split(`
`),s=o.length.toString().length+2,a=o.map((m,c)=>b.rightPad((c+1).toString(),s)+m),i=0;for(let m=0;m<a.length;m++)i=Math.max(a[m].length,i);let u=a.slice(0,n-1),l=a.slice(n-1,n),p=a.slice(n);console.log(u.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${b.rightPad(l[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join(`
`))}function cA(r){return fu(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function dA(r,e){if(ke(r,()=>r.linkProgram(e)),!B().get("ENGINE_COMPILE_ONLY")&&r.getProgramParameter(e,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function jh(r,e){if(ke(r,()=>r.validateProgram(e)),r.getProgramParameter(e,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function fA(r,e){let t=fu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return ke(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),ke(r,()=>r.bufferData(r.ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function hA(r,e){let t=fu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return ke(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t)),ke(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function Qoe(){return B().getNumber("WEBGL_VERSION")===2?1:4}function gA(r){return fu(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function bA(r,e){let t=B().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||e<=0){let n=`[${r}x${e}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(r>t||e>t){let n=`[${r}x${e}]`,o=`[${t}x${t}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+o+".")}}function yA(r){return fu(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function qT(r,e,t,n,o,s,a){let i=r.getAttribLocation(e,t);return i===-1?!1:(ke(r,()=>r.bindBuffer(r.ARRAY_BUFFER,n)),ke(r,()=>r.vertexAttribPointer(i,o,r.FLOAT,!1,s,a)),ke(r,()=>r.enableVertexAttribArray(i)),!0)}function sO(r,e,t){iO(r,t),ke(r,()=>r.activeTexture(r.TEXTURE0+t)),ke(r,()=>r.bindTexture(r.TEXTURE_2D,e))}function Joe(r,e){iO(r,e),ke(r,()=>r.activeTexture(r.TEXTURE0+e)),ke(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function TA(r,e,t){return fu(r,()=>r.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function xA(r,e,t){return r.getUniformLocation(e,t)}function IA(r,e,t,n){ke(r,()=>sO(r,e,n)),ke(r,()=>r.uniform1i(t,n))}function ese(r){ke(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,null)),ke(r,()=>r.viewport(0,0,r.canvas.width,r.canvas.height)),ke(r,()=>r.scissor(0,0,r.canvas.width,r.canvas.height))}function Xh(r,e,t){ke(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),ke(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0))}function jT(r,e){ke(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),ke(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function jc(r){let e=r.checkFramebufferStatus(r.FRAMEBUFFER);if(e!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+aO(r,e))}function aO(r,e){switch(e){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function fu(r,e,t){let n=ke(r,()=>e());if(n==null)throw new Error(t);return n}function iO(r,e){let t=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=e+r.TEXTURE0;if(n<r.TEXTURE0||n>t){let o=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${o}.`)}}function hu(r,e=2){return b.sizeFromShape(r.slice(0,r.length-e))}function gu(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function Yh(r){let e=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(e=[hu(r),...gu(r)]),e}function CA(r,e=!1){let t=B().getNumber("WEBGL_MAX_TEXTURE_SIZE");e&&(t=t*2,r=r.map((o,s)=>s>=r.length-2?b.nearestLargerEven(r[s]):r[s]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=b.squeezeShape(r).newShape);let n=b.sizeFromShape(r);if(r.length<=1&&n<=t)return[1,n];if(r.length===2&&r[0]<=t&&r[1]<=t)return r;if(r.length===3&&r[0]*r[1]<=t&&r[2]<=t)return[r[0]*r[1],r[2]];if(r.length===3&&r[0]<=t&&r[1]*r[2]<=t)return[r[0],r[1]*r[2]];if(r.length===4&&r[0]*r[1]*r[2]<=t&&r[3]<=t)return[r[0]*r[1]*r[2],r[3]];if(r.length===4&&r[0]<=t&&r[1]*r[2]*r[3]<=t)return[r[0],r[1]*r[2]*r[3]];if(e){let o=hu(r),s=2,a=2;return r.length&&([s,a]=gu(r)),n=o*(s/2)*(a/2),b.sizeToSquarishShape(n).map(i=>i*2)}return b.sizeToSquarishShape(n)}function WT(r){return r%2===0}function Tl(r,e){if(r=r.slice(-2),e=e.slice(-2),b.arraysEqual(r,e)||!r.length||!e.length||r[0]===0||r[1]===0||e[0]===0||e[1]===0)return!0;if(r.length!==e.length){let t=r.slice(-1)[0],n=e.slice(-1)[0];if(t===n||WT(t)&&WT(n)&&(r[0]===1||e[0]===1))return!0}return r[1]===e[1]&&WT(r[0])&&WT(e[0])}var KT,VT;function kA(r){if(KT==null){let e=Zn(r);KT=e.getParameter(e.MAX_TEXTURE_SIZE)}return KT}function tse(){KT=null}function rse(){VT=null}function SA(r){if(VT==null){let e=Zn(r);VT=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,VT)}function vA(r){if(r===0)return 0;let e,t=Zn(r);return Qn(t,"EXT_disjoint_timer_query_webgl2")&&r===2?e=2:Qn(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Qn(r,e){return r.getExtension(e)!=null}function XT(r){try{if(Zn(r)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function AA(r){if(r===0)return!1;let e=Zn(r);if(r===1){if(!Qn(e,"OES_texture_float"))return!1}else if(!Qn(e,"EXT_color_buffer_float"))return!1;return uA(e)}function wA(r){if(r===0)return!1;let e=Zn(r);if(r===1){if(!Qn(e,"OES_texture_float")||!Qn(e,"WEBGL_color_buffer_float"))return!1}else{if(Qn(e,"EXT_color_buffer_float"))return uA(e);let n="EXT_color_buffer_half_float";if(Qn(e,n)){let o=e.getExtension(n);return nse(e,o)}return!1}return uA(e)}function uA(r){let e=qh(r),t=r.createTexture();r.bindTexture(r.TEXTURE_2D,t);let n=1,o=1;r.texImage2D(r.TEXTURE_2D,0,e.internalFormatFloat,n,o,0,e.textureFormatFloat,e.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(t),r.deleteFramebuffer(s),a}function nse(r,e){let t=qh(r,e),n=r.createTexture();r.bindTexture(r.TEXTURE_2D,n);let o=1,s=1;r.texImage2D(r.TEXTURE_2D,0,t.internalFormatHalfFloat,o,s,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);let a=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,a),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,n,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(n),r.deleteFramebuffer(a),i}function NA(r){return r!==2?!1:Zn(r).fenceSync!=null}function qa(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&b.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}var $e=B();$e.registerFlag("HAS_WEBGL",()=>$e.getNumber("WEBGL_VERSION")>0);$e.registerFlag("WEBGL_VERSION",()=>XT(2)?2:XT(1)?1:0);$e.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);$e.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>$e.get("WEBGL_VERSION")===2);$e.registerFlag("WEBGL_CPU_FORWARD",()=>!0);$e.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);$e.registerFlag("WEBGL_PACK",()=>$e.getBool("HAS_WEBGL"));$e.registerFlag("WEBGL_PACK_NORMALIZATION",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_CLIP",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_REDUCE",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_LAZILY_UNPACK",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_CONV_IM2COL",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>kA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>SA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=$e.getNumber("WEBGL_VERSION");return r===0?0:vA(r)});$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>$e.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Vu.isMobile());$e.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>AA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>$e.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:$e.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));$e.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>wA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_FENCE_API_ENABLED",()=>NA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>$e.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);$e.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});$e.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Vu.isMobile()?1:-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});$e.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);$e.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);$e.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);$e.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function Qt(){let r,e,t,n,o,s,a,i,u,l;return B().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",e="in",t="out",n="in",o="texture",s="outputColor",a="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,u="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",e="attribute",t="varying",n="varying",o="texture2D",s="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:e,varyingVs:t,varyingFs:n,texture2D:o,output:s,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:u,defineRound:l}}function ja(r,e,t="index"){let n=b.computeStrides(e);return n.map((o,s)=>{let a=`int ${r[s]} = ${t} / ${o}`,i=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * ${o}`:`index -= ${r[s]} * ${o}`;return`${a}; ${i};`}).join("")}function Np(r,e,t="index"){let n=b.computeStrides(e);return n.map((o,s)=>{let a=`int ${r[s]} = ${t} / outShapeStrides[${s}]`,i=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * outShapeStrides[${s}]`:`index -= ${r[s]} * outShapeStrides[${s}]`;return`${a}; ${i};`}).join("")}function ose(r,e){let t=r.length,n=r.map(s=>`${e}[${s}]`),o=new Array(t-1);o[t-2]=n[t-1];for(let s=t-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function uO(r,e,t="index"){let n=r.map((s,a)=>a),o=ose(n,e);return o.map((s,a)=>{let i=`int ${r[a]} = ${t} / ${o[a]}`,u=a===o.length-1?`int ${r[a+1]} = ${t} - ${r[a]} * ${o[a]}`:`index -= ${r[a]} * ${o[a]}`;return`${i}; ${u};`}).join("")}function Yc(r){let e=b.computeStrides(r).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Zc(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var YT=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:lO}=C;function pO(r,e,t){let n=[];if(r.forEach(d=>{let f=b.sizeFromShape(d.shapeInfo.logicalShape);if(d.shapeInfo.isUniform?n.push(`uniform float ${d.name}${f>1?`[${f}]`:""};`):(n.push(`uniform sampler2D ${d.name};`),n.push(`uniform int offset${d.name};`)),t.enableShapeUniforms){let{uniformShape:h}=ZT(t.packedInputs,d.shapeInfo.logicalShape,d.shapeInfo.texShape);switch(h.length){case 1:n.push(`uniform int ${d.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${d.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${d.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${d.name}Shape;`);break;default:break}n.push(`uniform ivec2 ${d.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break;default:break}n.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(d=>{n.push(`uniform ${d.type} ${d.name}${d.arrayIndex?`[${d.arrayIndex}]`:""};`)});let o=n.join(`
`),s=r.map(d=>sse(d,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,i=Qt(),u=use(i),l,p,m=mse(i);return e.isPacked?(l=ase(e.logicalShape,a,t.enableShapeUniforms),p=pse(i)):(l=ise(e.logicalShape,a,t.enableShapeUniforms),p=lse(i)),t.packedInputs&&(m+=hse),[m,u,p,o,l,s,t.userCode].join(`
`)}function Jc(r,e=!1){let t=r.shapeInfo.logicalShape;switch(t.length){case 0:return wse(r,e);case 1:return Dse(r,e);case 2:return Fse(r,e);case 3:return Rse(r,e);case 4:return _se(r,e);case 5:return Lse(r);case 6:return $se(r);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function mO(r,e){switch(r.shapeInfo.logicalShape.length){case 0:return Ase(r);case 1:return Nse(r,e);case 2:return Pse(r,e);case 3:return Mse(r,e);default:return Ese(r,e)}}function sse(r,e,t=!1,n){let o="";t?o+=mO(r,n):o+=Jc(r,n);let s=r.shapeInfo.logicalShape,a=e.logicalShape;return s.length<=a.length&&(t?o+=Bse(r,e):o+=Ose(r,e)),o}function ase(r,e,t){switch(r.length){case 0:return cO();case 1:return gse(r,e,t);case 2:return Sse(r,e,t);case 3:return yse(r,e,t);default:return xse(r,e,t)}}function ise(r,e,t){switch(r.length){case 0:return cO();case 1:return bse(r,e,t);case 2:return vse(r,e,t);case 3:return Tse(r,e,t);case 4:return Ise(r,e,t);case 5:return Cse(r,e);case 6:return kse(r,e);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function use(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function lse(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function pse(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function mse(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${cse}
    ${dse}
    ${fse}
  `}var cse=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,dse=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,fse=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,hse=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function cO(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function gse(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return n[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function bse(r,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function yse(r,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[2]/2),s=o*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function Tse(r,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Np(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let n=ja(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function xse(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[r.length-1]/2),s=o*Math.ceil(r[r.length-2]/2),a=s,i="",u="b, r, c";for(let l=2;l<r.length-1;l++)a*=r[r.length-l-1],i=`
      int b${l} = index / ${a};
      index -= b${l} * ${a};
    `+i,u=`b${l}, `+u;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${i}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${r.length}(${u});
    }
  `}function Ise(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Np(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let n=ja(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function Cse(r,e){let t=ja(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function kse(r,e){let t=ja(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Sse(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(b.arraysEqual(r,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let o=Math.ceil(r[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function vse(r,e,t){return b.arraysEqual(r,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:r[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function Dp(r){return`offset${r}`}function Ase(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),n=Qt();return`
    vec4 ${t}() {
      return ${n.texture2D}(${e}, halfCR);
    }
  `}function wse(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;let[o,s]=r.shapeInfo.texShape;if(o===1&&s===1)return`
      float ${n}() {
        return sampleTexture(${t}, halfCR);
      }
    `;let a=Dp(t);if(e)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;let[i,u]=r.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${i}, ${u}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function Nse(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=r.shapeInfo.texShape,s=Qt();if(e)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${t}, uv);
    }
  `;let a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${s.texture2D}(${t}, uv);
    }
  `}function Dse(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${ed(r)}
      }
    `;let o=r.shapeInfo.texShape,s=o[0],a=o[1];if(a===1&&s===1)return`
      float ${n}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;let i=Dp(t);return a===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);
        return sampleTexture(${t}, uv);
      }
    `:s===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${i});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});
      return sampleTexture(${t}, uv);
    }
  `}function Pse(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=s[0],i=s[1],u=Qt();if(s!=null&&b.arraysEqual(t,s))return e?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${u.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${u.texture2D}(${n}, uv);
      }
    `;if(e)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `;let l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],p=Math.ceil(t[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${p}, ${l[0]}, ${l[1]}, row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `}function Fse(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape;if(s!=null&&b.arraysEqual(t,s)){if(e)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;let c=s[0],d=s[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${d}.0, ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:a,keptDims:i}=b.squeezeShape(t),u=a;if(u.length<t.length){let c=td(r,u),d=["row","col"];return`
      ${Jc(c,e)}
      float ${o}(int row, int col) {
        return ${o}(${rd(d,i)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${ed(r)}
      }
    `;let l=s[0],p=s[1],m=Dp(n);return p===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${n}, uv);
    }
  `:l===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:e?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${m};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${m};
    vec2 uv = uvFromFlat(${l}, ${p}, index);
    return sampleTexture(${n}, uv);
  }
`}function Mse(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(t[0]===1){let c=t.slice(1),d=[1,2],f=td(r,c),h=["b","row","col"];return`
        ${mO(f,e)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${rd(h,d)});
        }
      `}let i=Qt();if(e)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `;let u=a[0],l=a[1],p=Math.ceil(t[2]/2),m=p*Math.ceil(t[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${l}, ${m}, ${p}, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `}function Rse(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],a=t[2],{newShape:i,keptDims:u}=b.squeezeShape(t),l=i;if(l.length<t.length){let h=td(r,l),g=["row","col","depth"];return`
        ${Jc(h,e)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${rd(g,u)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${a}, 1)));
        ${ed(r)}
      }
    `;let p=r.shapeInfo.texShape,m=p[0],c=p[1],d=r.shapeInfo.flatOffset;if(c===s&&d==null)return e?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${c}.0, ${m}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(c===a&&d==null)return e?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${m}.0);
      return sampleTexture(${n}, uv);
    }
  `;let f=Dp(n);return e?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * ${s} + col * ${a} + depth + ${f};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${a} + depth + ${f};
        vec2 uv = uvFromFlat(${m}, ${c}, index);
        return sampleTexture(${n}, uv);
      }
  `}function Ese(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=Qt();if(e)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${t}, uv);
    }
  `;let s=r.shapeInfo.logicalShape,a=s.length,i=r.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=u[0],p=u[1],m=Math.ceil(s[a-1]/2),c=m*Math.ceil(s[a-2]/2),d="int b, int row, int col",f=`b * ${c} + (row / 2) * ${m} + (col / 2)`;for(let h=2;h<a-1;h++)d=`int b${h}, `+d,c*=s[a-h-1],f=`b${h} * ${c} + `+f;return`
    vec4 ${n}(${d}) {
      int index = ${f};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${l});
      return ${o.texture2D}(${t}, uv);
    }
  `}function _se(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],a=t[2]*s,i=t[1]*a,{newShape:u,keptDims:l}=b.squeezeShape(t);if(u.length<t.length){let T=td(r,u),x=["row","col","depth","depth2"];return`
      ${Jc(T,e)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${rd(x,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${s}, 1)));
        ${ed(r)}
      }
    `;let p=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1],f=`int stride2 = ${n}Shape[3];`,h=`int stride1 = ${n}Shape[2] * stride2;`,g=`int stride0 = ${n}Shape[1] * stride1;`;if(d===i&&p==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${f}
        ${h}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(d===s&&p==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;let y=Dp(n);return e?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${h}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${y});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${c}, ${d}, index + ${y});
      return sampleTexture(${n}, uv);
    }
  `}function Lse(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[4],s=e[3]*o,a=e[2]*s,i=e[1]*a,{newShape:u,keptDims:l}=b.squeezeShape(e);if(u.length<e.length){let h=td(r,u),g=["row","col","depth","depth2","depth3"];return`
      ${Jc(h)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${rd(g,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${s}, ${o})) +
          depth3;
        ${ed(r)}
      }
    `;let p=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1];if(d===i&&p==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(d===o&&p==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${t}, uv);
      }
    `;let f=Dp(t);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${s} +
          depth2 * ${o} + depth3 + ${f};
      vec2 uv = uvFromFlat(${c}, ${d}, index);
      return sampleTexture(${t}, uv);
    }
  `}function $se(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:o,keptDims:s}=b.squeezeShape(e);if(o.length<e.length){let g=td(r,o),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Jc(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${rd(y,s)});
      }
    `}let a=e[5],i=e[4]*a,u=e[3]*i,l=e[2]*u,p=e[1]*l;if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${p}, ${l}, ${u}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${ed(r)}
      }
    `;let m=r.shapeInfo.flatOffset,c=r.shapeInfo.texShape,d=c[0],f=c[1];if(f===p&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${u}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===a&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;let h=Dp(t);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${p} + col * ${l} + depth * ${u} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${h};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function ed(r){let e=r.name,t=b.sizeFromShape(r.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function Bse(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=r.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=lO(r.shapeInfo.logicalShape,e.logicalShape),u=Ve(a),l=a-s,p,m=["x","y","z","w","u","v"];s===0?p="":a<2&&i.length>=1?p="coords = 0;":p=i.map(T=>`coords.${m[T+l]} = 0;`).join(`
`);let c="";a<2&&s>0?c="coords":c=r.shapeInfo.logicalShape.map((T,x)=>`coords.${m[x+l]}`).join(", ");let d="return outputValue;",h=b.sizeFromShape(r.shapeInfo.logicalShape)===1,y=b.sizeFromShape(e.logicalShape)===1;if(s===1&&!h&&!y)d=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(h&&!y)a===1?d=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:d=`
        return vec4(outputValue.x);
      `;else if(i.length){let T=s-2,x=s-1;i.indexOf(T)>-1&&i.indexOf(x)>-1?d="return vec4(outputValue.x);":i.indexOf(T)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(x)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${u} coords = getOutputCoords();
      ${p}
      vec4 outputValue = get${n}(${c});
      ${d}
    }
  `}function Ose(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=e.texShape,a=r.shapeInfo.texShape,i=r.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!r.shapeInfo.isUniform&&i===u&&r.shapeInfo.flatOffset==null&&b.arraysEqual(a,s))return`
      float ${o}() {
        return sampleTexture(${t}, resultUV);
      }
    `;let l=Ve(u),p=lO(r.shapeInfo.logicalShape,e.logicalShape),m=u-i,c,d=["x","y","z","w","u","v"];i===0?c="":u<2&&p.length>=1?c="coords = 0;":c=p.map(h=>`coords.${d[h+m]} = 0;`).join(`
`);let f="";return u<2&&i>0?f="coords":f=r.shapeInfo.logicalShape.map((h,g)=>`coords.${d[g+m]}`).join(", "),`
    float ${o}() {
      ${l} coords = getOutputCoords();
      ${c}
      return get${n}(${f});
    }
  `}function Ve(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function ZT(r,e,t){let{newShape:n,keptDims:o}=b.squeezeShape(e),s=e.length,a=r&&s===3&&e[0]===1,i=a?e.slice(1):n,u=!r&&s>1&&!b.arraysEqual(e,t)&&n.length<s||a;return{useSqueezeShape:u,uniformShape:u?i:e,keptDims:o}}function td(r,e){let t=JSON.parse(JSON.stringify(r));return t.shapeInfo.logicalShape=e,t}function rd(r,e){return e.map(t=>r[t]).join(", ")}function fO(r,e,t,n){let o=t.map((p,m)=>{let c={logicalShape:p.shape,texShape:p.isUniform?null:p.texData.texShape,isUniform:p.isUniform,isPacked:p.isUniform?!1:p.texData.isPacked,flatOffset:null};return p.texData!=null&&p.texData.slice!=null&&p.texData.slice.flatOffset>0&&(c.flatOffset=p.texData.slice.flatOffset),{name:e.variableNames[m],shapeInfo:c}}),s=o.map(p=>p.shapeInfo),a={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},i=pO(o,a,e),u=mA(r.gl,i),l=r.createProgram(u);return B().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:u,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:a,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:{program:e,fragmentShader:u,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:a,...DA(r,e,l)}}function DA(r,e,t){let n={},o={},s={},a=[],i,u,l,p=null,m=null;m=r.getUniformLocation(t,"NAN",!1),B().getNumber("WEBGL_VERSION")===1&&(p=r.getUniformLocation(t,"INFINITY",!1));let c=!1;for(let d=0;d<e.variableNames.length;d++){let f=e.variableNames[d];n[f]=r.getUniformLocation(t,f,c),n[`offset${f}`]=r.getUniformLocation(t,`offset${f}`,c),e.enableShapeUniforms&&(o[`${f}Shape`]=r.getUniformLocation(t,`${f}Shape`,c),s[`${f}TexShape`]=r.getUniformLocation(t,`${f}TexShape`,c))}return e.enableShapeUniforms&&(i=r.getUniformLocation(t,"outShape",c),l=r.getUniformLocation(t,"outShapeStrides",c),u=r.getUniformLocation(t,"outTexShape",c)),e.customUniforms&&e.customUniforms.forEach((d,f)=>{a[f]=r.getUniformLocation(t,d.name,c)}),{uniformLocations:n,customUniformLocations:a,infLoc:p,nanLoc:m,inShapesLocations:o,inTexShapesLocations:s,outShapeLocation:i,outShapeStridesLocation:l,outTexShapeLocation:u}}function dO(r,e){if(r.length!==e.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${e.length} inputs`);r.forEach((t,n)=>{let o=t.logicalShape,s=e[n],a=s.shape;if(!b.arraysEqual(o,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${a} must match`);if(t.isUniform&&s.isUniform)return;let i=t.texShape,u=s.isUniform?null:s.texData.texShape;if(!b.arraysEqual(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)})}function hO(r,e,t,n,o){e.program.enableShapeUniforms||(dO(e.inShapeInfos,t),dO([e.outShapeInfo],[n]));let s=n.texData.texture,a=n.texData.texShape;n.texData.isPacked?r.setOutputPackedMatrixTexture(s.texture,a[0],a[1]):r.setOutputMatrixTexture(s.texture,a[0],a[1]),r.setProgram(e.webGLProgram),B().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&r.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&r.gl.uniform1f(e.nanLoc,NaN),t.forEach((u,l)=>{let p=e.program.variableNames[l],m=e.uniformLocations[p],c=e.uniformLocations[`offset${p}`],d=e.inShapesLocations[`${p}Shape`],f=e.inTexShapesLocations[`${p}TexShape`];if(d){let{uniformShape:h}=ZT(e.program.packedInputs,u.shape,u.texData.texShape);switch(h.length){case 1:r.gl.uniform1iv(d,new Int32Array(h));break;case 2:r.gl.uniform2iv(d,new Int32Array(h));break;case 3:r.gl.uniform3iv(d,new Int32Array(h));break;case 4:r.gl.uniform4iv(d,new Int32Array(h));break;default:break}}if(f&&r.gl.uniform2i(f,u.texData.texShape[0],u.texData.texShape[1]),m!=null){if(u.isUniform){if(b.sizeFromShape(u.shape)<2)r.gl.uniform1f(m,u.uniformValues[0]);else{let h=u.uniformValues;h instanceof Float32Array||(h=new Float32Array(h)),r.gl.uniform1fv(m,h)}return}u.texData.slice!=null&&c!=null&&r.gl.uniform1i(c,u.texData.slice.flatOffset),r.setInputMatrixTexture(u.texData.texture.texture,m,l)}});let i=e.outShapeLocation;if(i)switch(n.shape.length){case 1:r.gl.uniform1iv(i,new Int32Array(n.shape));break;case 2:r.gl.uniform2iv(i,new Int32Array(n.shape));break;case 3:r.gl.uniform3iv(i,new Int32Array(n.shape));break;case 4:r.gl.uniform4iv(i,new Int32Array(n.shape));break;default:break}if(e.outShapeStridesLocation){let u=b.computeStrides(n.shape);switch(n.shape.length){case 2:r.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(u));break;case 3:r.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(u));break;case 4:r.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(u));break;default:break}}e.outTexShapeLocation&&r.gl.uniform2i(e.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),e.program.customUniforms&&o&&e.program.customUniforms.forEach((u,l)=>{let p=e.customUniformLocations[l],m=o[l];if(u.type==="float")r.gl.uniform1fv(p,m);else if(u.type==="vec2")r.gl.uniform2fv(p,m);else if(u.type==="vec3")r.gl.uniform3fv(p,m);else if(u.type==="vec4")r.gl.uniform4fv(p,m);else if(u.type==="int")r.gl.uniform1iv(p,m);else if(u.type==="ivec2")r.gl.uniform2iv(p,m);else if(u.type==="ivec3")r.gl.uniform3iv(p,m);else if(u.type==="ivec4")r.gl.uniform4iv(p,m);else throw Error(`uniform type ${u.type} is not supported yet.`)}),r.executeProgram()}function gO(r,e,t){let n="";e.concat(t).forEach(a=>{let i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!a.isUniform){let u=a.texData.texShape,{useSqueezeShape:l,uniformShape:p,keptDims:m}=ZT(r.packedInputs,a.shape,u),c="",d="",f="";if(p.length===1&&r.packedInputs){let k=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];c=`${k[0]>1}_${k[1]>1}`}else if(p.length===2&&!r.packedInputs)d=`${p[0]>1}_${p[1]>1}`;else if(p.length>2&&!r.packedInputs){let k=b.computeStrides(p);f=`${k[0]===u[1]}_${k[k.length-1]===u[1]}`}let h=a.shape.length,g=p.length===2&&b.arraysEqual(a.shape,u),y=b.sizeFromShape(a.shape)===1,T=C.getBroadcastDims(a.shape,t.shape),x=!r.packedInputs&&h===t.shape.length&&b.arraysEqual(u,t.texData.texShape),I=r.packedInputs||p.length>2?"":`${u[0]>1}_${u[1]>1}`;n+=`${h}_${x}_${l?m:""}_${p.length}_${y}_${T}_${g}_${c}_${d}_${f}_${I}_${i}`}else{let u=a.isUniform?"uniform":a.texData.texShape;n+=`${a.shape}_${u}_${i}`}});let o=r.userCode,s=r.constructor.name;return s+="_"+n+"_"+o+`${B().getNumber("WEBGL_VERSION")}`,s}function Lt(r){return B().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var PA=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.outPackingScheme=0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Qt();this.outputShape=e,this.enableShapeUniforms=Lt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Np(["r","c","d"],e):ja(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}};var FA=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outPackingScheme=0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Qt();this.outputShape=e,this.enableShapeUniforms=Lt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Np(["r","c","d"],e):ja(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}};var MA=class{constructor(e){this.variableNames=["A"];this.outTexUsage=3;let t=Qt();this.outputShape=e,this.userCode=`
      ${YT}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}};var RA=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outTexUsage=3;let t=Qt();this.outputShape=e,this.userCode=`
      ${YT}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}};var EA=class{constructor(e,t=!1){this.variableNames=["A"];this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Qt();this.outputShape=e,this.enableShapeUniforms=Lt(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?Zc():Yc(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${o}, 0., 0., 0.);
      }
    `}};var _A=class{constructor(e,t=!1){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Qt();this.outputShape=e,this.enableShapeUniforms=Lt(this.outputShape.length);let o="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){let u=a*2+i;o+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Zc():Yc(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${n.output} = ${s};
        }
    `}};var QA={};je(QA,{bindVertexProgramAttributeStreams:()=>KA,createBufferFromOutputTexture:()=>qA,createFloat16MatrixTexture:()=>zA,createFloat16PackedMatrixTexture:()=>WA,createFloat32MatrixTexture:()=>OA,createIndexBuffer:()=>BA,createPackedMatrixTexture:()=>UA,createUnsignedBytesMatrixTexture:()=>GA,createVertexBuffer:()=>$A,createVertexShader:()=>LA,downloadByteEncodedFloatMatrixFromOutputTexture:()=>XA,downloadFloat32MatrixFromBuffer:()=>jA,downloadMatrixFromPackedOutputTexture:()=>ZA,downloadPackedMatrixFromBuffer:()=>YA,getInternalFormatForFloat16MatrixTexture:()=>ex,getInternalFormatForFloat16PackedMatrixTexture:()=>nx,getInternalFormatForFloat32MatrixTexture:()=>JT,getInternalFormatForPackedMatrixTexture:()=>rx,getInternalFormatForUnsignedBytesMatrixTexture:()=>tx,uploadDenseMatrixToTexture:()=>VA,uploadPixelDataToTexture:()=>HA});function LA(r){let e=Qt(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return pA(r,t)}function $A(r){let e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return fA(r,e)}function BA(r){let e=new Uint16Array([0,1,2,2,1,3]);return hA(r,e)}function Zh(r,e,t,n,o,s){bA(e,t);let a=gA(r),i=r.TEXTURE_2D;return ke(r,()=>r.bindTexture(i,a)),ke(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),ke(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),ke(r,()=>r.texParameteri(i,r.TEXTURE_MIN_FILTER,r.NEAREST)),ke(r,()=>r.texParameteri(i,r.TEXTURE_MAG_FILTER,r.NEAREST)),B().getNumber("WEBGL_VERSION")===1?ke(r,()=>r.texImage2D(i,0,n,e,t,0,o,s,null)):ke(r,()=>r.texStorage2D(i,1,n,e,t)),ke(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:a,texShape:[t,e]}}function JT(r){return r.internalFormatFloat}function OA(r,e,t,n){let[o,s]=wp(e,t);return Zh(r,o,s,JT(n),n.textureFormatFloat,r.FLOAT)}function ex(r){return r.internalFormatHalfFloat}function zA(r,e,t,n){let[o,s]=wp(e,t);return Zh(r,o,s,ex(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function tx(r){return r.downloadTextureFormat}function GA(r,e,t,n){let[o,s]=wp(e,t);return Zh(r,o,s,tx(n),r.RGBA,r.UNSIGNED_BYTE)}function rx(r){return r.internalFormatPackedFloat}function UA(r,e,t,n){let[o,s]=Si(e,t);return Zh(r,o,s,rx(n),r.RGBA,r.FLOAT)}function nx(r){return r.internalFormatPackedHalfFloat}function WA(r,e,t,n){let[o,s]=Si(e,t);return Zh(r,o,s,nx(n),r.RGBA,n.textureTypeHalfFloat)}function KA(r,e,t){return ke(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),qT(r,e,"clipSpacePos",t,3,20,0)&&qT(r,e,"uv",t,2,20,12)}function VA(r,e,t,n,o,s){ke(r,()=>r.bindTexture(r.TEXTURE_2D,e));let a,i,u;o instanceof Uint8Array?(a=new Uint8Array(t*n*4),i=r.UNSIGNED_BYTE,u=r.RGBA):(a=new Float32Array(t*n*4),i=r.FLOAT,u=s.internalFormatPackedFloat),a.set(o),B().getNumber("WEBGL_VERSION")===2?ke(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t,n,r.RGBA,i,a)):ke(r,()=>r.texImage2D(r.TEXTURE_2D,0,u,t,n,0,r.RGBA,i,a)),ke(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function HA(r,e,t){ke(r,()=>r.bindTexture(r.TEXTURE_2D,e)),t.data instanceof Uint8Array?B().getNumber("WEBGL_VERSION")===2?ke(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t.width,t.height,r.RGBA,r.UNSIGNED_BYTE,t.data)):ke(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t.width,t.height,0,r.RGBA,r.UNSIGNED_BYTE,t.data)):B().getNumber("WEBGL_VERSION")===2?ke(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,t)):ke(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t)),ke(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function qA(r,e,t,n){let o=r.createBuffer();ke(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,o));let i=4*4*e*t;return ke(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,i,r.STREAM_READ)),ke(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,0)),ke(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),o}function jA(r,e,t){let n=r,o=new Float32Array(t);return n.bindBuffer(n.PIXEL_PACK_BUFFER,e),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,o),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),o}function XA(r,e,t,n){let[o,s]=wp(e,t),a=4,i=new Uint8Array(rO(e*t,a));return ke(r,()=>r.readPixels(0,0,o,s,n.downloadTextureFormat,r.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function YA(r,e,t,n,o,s,a,i){let u=r,l=new Float32Array(nO(s,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function ZA(r,e,t){let n=new Float32Array(e*t*4);return ke(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,n)),n}var nd=class{constructor(e){this.outputTexture=null;this.program=null;this.disposed=!1;this.vertexAttrsAreBound=!1;this.itemsToPoll=[];let t=B().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,aA(t,e)):this.gl=Zn(t);let n="WEBGL_color_buffer_float",o="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),B().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=qc(this.gl,s),Qn(this.gl,a))this.textureHalfFloatExtension=qc(this.gl,a);else if(B().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Qn(this.gl,o))this.colorBufferHalfFloatExtension=qc(this.gl,o);else if(B().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Qn(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Qn(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=$A(this.gl),this.indexBuffer=BA(this.gl),this.framebuffer=yA(this.gl),this.textureConfig=qh(this.gl,this.textureHalfFloatExtension)}get debug(){return B().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;ke(e,()=>e.finish()),ke(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ke(e,()=>e.deleteFramebuffer(this.framebuffer)),ke(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ke(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ke(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),OA(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),zA(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),GA(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),HA(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,o){this.throwIfDisposed(),VA(this.gl,e,t,n,o,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),WA(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),UA(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(jT(this.gl,this.framebuffer),this.outputTexture=null),ke(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>XA(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,o,s,a){return YA(this.gl,e,t,n,o,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return jA(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let o=qA(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(B().getBool("WEBGL_FENCE_API_ENABLED")){let o=e,s=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=o.clientWaitSync(s,0,0);return a===o.ALREADY_SIGNALED||a===o.CONDITION_SATISFIED},t=s}else B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>ZA(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=LA(t));let n=cA(t);return ke(t,()=>t.attachShader(n,this.vertexShader)),ke(t,()=>t.attachShader(n,e)),dA(t,n),this.debug&&jh(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=KA(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&ke(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&jh(this.gl,this.program),ke(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?TA(this.gl,e,t):xA(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ke(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),IA(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[o,s]=Si(t,n);this.setOutputMatrixTextureDriver(e,o,s)}setOutputMatrixWriteRegion(e,t,n,o){this.setOutputMatrixWriteRegionDriver(n,e,o,t)}setOutputPackedMatrixWriteRegion(e,t,n,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&jh(this.gl,this.program),jc(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),ke(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ke(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=qc(this.gl,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,s),s}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await b.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),o=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=Use(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&b.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Xh(this.gl,e,this.framebuffer),this.debug&&jc(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Xh(this.gl,this.outputTexture,this.framebuffer),this.debug&&jc(this.gl)):jT(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let o=this.gl;Xh(o,e,this.framebuffer),this.debug&&jc(o),this.outputTexture=e,ke(o,()=>o.viewport(0,0,t,n)),ke(o,()=>o.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,o){this.throwIfDisposed(),ke(this.gl,()=>this.gl.scissor(e,t,n,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function Use(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var{addImpl:yO,bincountImpl:ox,bincountReduceImpl:TO,ceilImpl:xO,concatImpl:IO,equalImpl:CO,expImpl:kO,expm1Impl:SO,floorImpl:vO,gatherNdImpl:AO,gatherV2Impl:wO,greaterImpl:NO,greaterEqualImpl:DO,lessImpl:PO,lessEqualImpl:FO,linSpaceImpl:MO,logImpl:RO,maxImpl:EO,maximumImpl:_O,minimumImpl:LO,multiplyImpl:$O,negImpl:BO,notEqualImpl:OO,prodImpl:zO,rangeImpl:GO,rsqrtImpl:UO,scatterImpl:WO,sigmoidImpl:KO,simpleAbsImpl:sx,sliceImpl:VO,sparseFillEmptyRowsImpl:HO,sparseReshapeImpl:qO,sparseSegmentReductionImpl:ax,sqrtImpl:jO,stridedSliceImpl:XO,stringNGramsImpl:YO,stringSplitImpl:ZO,stringToHashBucketFastImpl:QO,subImpl:JO,tileImpl:ez,topKImpl:tz,transposeImpl:Pp,uniqueImpl:rz}=Kc;function JA(r,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${r}.${t}`)}function or(r,e){return e===1?[r]:JA(r,e)}function nz(r,e){if(r===1)return"rc";let t="";for(let n=0;n<r;n++)t+=e[n],n<r-1&&(t+=",");return t}var ew=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;if(this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Lt(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=or("rc",this.rank),n=Ve(this.rank),o=this.getOutOfBoundsCondition(t),s=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let o=0;o<=1;o++){let s=`${n===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)s=`${e[e.length-1-a]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${o};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}};var Qh=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec3"}];this.outputShape=e,this.enableShapeUniforms=Lt(this.outputShape.length);let n="";for(let o=0;o<4;o++){let s="thisRC = rc;";o%2===1&&(s+="thisRC.z += 1;"),o>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${Wse(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Zc():Yc(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function Wse(r,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?uO(["r","c","d"],"inputShape"):ja(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var tw=class{constructor(e){this.gpgpu=e;this.numUsedTextures=0;this.numFreeTextures=0;this._numBytesAllocated=0;this._numBytesFree=0;this.freeTextures={};this.logEnabled=!1;this.usedTextures={}}acquireTexture(e,t,n){let o=sz(t,n),s=az(e,o,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let a=oz(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let u=this.freeTextures[s].shift();return this.usedTextures[s].push(u),u}let i;return o===3?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===4?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===1?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===0?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===2&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,o){if(this.freeTextures==null)return;let s=sz(n,o),a=az(t,s,o);a in this.freeTextures||(this.freeTextures[a]=[]);let i=oz(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,o),u=B().get("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[a],p=l.indexOf(e);if(p<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(p,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function Kse(r,e){let t=r;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===r.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function oz(r,e,t,n,o){let s=Vse(e,n),a;if(o){let[u,l]=Si(r[0],r[1]);a=u*l}else{let[u,l]=wp(r[0],r[1]);a=u*l}let i=Kse(t,s);return a*i}function Vse(r,e){switch(r){case 3:return rx(e);case 4:return nx(e);case 1:return JT(e);case 0:return ex(e);case 2:return tx(e);default:throw new Error(`Unknown physical texture type ${r}`)}}function Hse(r){return B().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?3:1:r?4:0}function sz(r,e){if(r===1)return 3;if(r===0||r==null)return Hse(e);if(r===3||r===2)return 2;throw new Error(`Unknown logical texture type ${r}`)}function az(r,e,t){return`${r[0]}_${r[1]}_${e}_${t}`}var Sn=class{constructor(e,t){this.variableNames=["A"];this.outputShape=e,this.enableShapeUniforms=Lt(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Tr="if (isnan(x)) return x;",iz="return x;",rw="return abs(x);";var uz="return (x >= 0.0) ? x : (exp(x) - 1.0);",lz=Tr+`
  return (x < 0.0) ? 0.0 : x;
`,pz=Tr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Fp="return x;",mz="return 1.0 / (1.0 + exp(-1.0 * x));";var dz="return x;",fz=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,hz=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,gz=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,bz="return 1.0 / (1.0 + exp(-1.0 * x));",Xs=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.enableShapeUniforms=Lt(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var nw=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outputShape=e,this.enableShapeUniforms=Lt(this.outputShape.length);let t=e.length,n=or("rc",t),o=Ve(t),s=nz(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}};var jse=yr.whereImpl,Xse=1e-7,Yse=1e-4,ix={};function Zse(r){return r in ix||(ix[r]={}),ix[r]}var Qse=B().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Jse=600;function eae(){return B().global.screen==null?1024:B().global.screen.height*B().global.screen.width*window.devicePixelRatio*Jse/1024/1024}var ow=class extends as{constructor(e){super();this.pendingRead=new WeakMap;this.pendingDisposal=new WeakSet;this.dataRefCount=new WeakMap;this.numBytesInGPU=0;this.uploadWaitMs=0;this.downloadWaitMs=0;this.lastGlFlushTime=0;this.warnedAboutMemory=!1;this.pendingDeletes=0;this.disposed=!1;if(!B().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof nd)t=e;else{let n=Zn(B().getNumber("WEBGL_VERSION"),e);t=new nd(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=Zn(B().getNumber("WEBGL_VERSION"));t=new nd(n),this.binaryCache=Zse(B().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new tw(this.gpgpu),this.numMBBeforeWarning=eae(),this.texData=new ri(this,Mn())}nextDataId(){return ow.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((B().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||B().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()};return this.texData.set(o,{shape:t,dtype:n,values:e,usage:1,refCount:1}),o}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,o,s){if(B().getBool("DEBUG")&&this.checkNumericalProblems(t),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:o,values:t,usage:1,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:o,complexTensorInfos:s,slice:a,shape:i,isPacked:u}=t;if(a!=null){let c;u?c=new Xs(i,Fp):c=new Sn(i,Fp);let d=this.runWebGLProgram(c,[{dataId:e,shape:i,dtype:o}],o),f=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),f}if(n!=null)return this.convertAndCacheOnCPU(e);if(o==="string")return n;let l=this.activeTimers!=null,p;l&&(p=b.now());let m;if(o==="complex64"){let c=this.readSync(s.real.dataId),d=this.readSync(s.imag.dataId);m=C.mergeRealAndImagArrays(c,d)}else m=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=b.now()-p),this.convertAndCacheOnCPU(e,m)}async read(e){if(this.pendingRead.has(e)){let f=this.pendingRead.get(e);return new Promise(h=>f.push(h))}let t=this.texData.get(e),{values:n,shape:o,slice:s,dtype:a,complexTensorInfos:i,isPacked:u}=t;if(s!=null){let f;u?f=new Xs(o,Fp):f=new Sn(o,Fp);let h=this.runWebGLProgram(f,[{dataId:e,shape:o,dtype:a}],a),g=this.read(h.dataId);return this.disposeIntermediateTensorInfo(h),g}if(n!=null)return this.convertAndCacheOnCPU(e);if(B().getBool("DEBUG")&&!B().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&B().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,p;if(a!=="complex64"&&B().get("WEBGL_BUFFER_SUPPORTED")){p=this.decode(e);let f=this.texData.get(p.dataId);l=this.gpgpu.createBufferFromTexture(f.texture.texture,...Hh(o))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let m;if(a==="complex64"){let f=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),h=f[0],g=f[1];m=C.mergeRealAndImagArrays(h,g)}else if(l==null)m=this.getValuesFromTexture(e);else{let f=b.sizeFromShape(o);m=this.gpgpu.downloadFloat32MatrixFromBuffer(l,f)}if(p!=null&&this.disposeIntermediateTensorInfo(p),l!=null){let f=this.gpgpu.gl;ke(f,()=>f.deleteBuffer(l))}let c=this.convertAndCacheOnCPU(e,m),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(f=>f(c)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Mn().removeDataId(e,this),this.pendingDeletes--),c}readToGPU(e,t={}){let n=this.texData.get(e),{values:o,shape:s,slice:a,dtype:i,isPacked:u,texture:l}=n;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let d;u?d=new Xs(s,Fp):d=new Sn(s,Fp);let f=this.runWebGLProgram(d,[{dataId:e,shape:s,dtype:i}],i),h=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),h}if(l==null)throw o!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let p=this.decode(e,t.customTexShape),m=Mn().makeTensorFromTensorInfo(p),c=this.texData.get(p.dataId);return{tensorRef:m,...c.texture}}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(o=>b.decodeString(o));return Te(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Te(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!lA(n))throw B().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:o}=this.texData.get(e),s=b.sizeFromShape(t);if(B().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let c=this.decode(e),d=this.texData.get(c.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...Hh(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(c),f}let a=B().getBool("WEBGL_PACK")&&o===!0,i=a?Yh(t):t,u=a?new RA(i):new MA(i),l=this.runWebGLProgram(u,[{shape:i,dtype:n,dataId:e}],"float32"),p=this.texData.get(l.dataId),m=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture.texture,p.texShape[0],p.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),m}timerAvailable(){return B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=b.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=b.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let u=await Promise.all(s);i.kernelMs=b.sum(u),i.getExtraProfileInfo=()=>u.map((l,p)=>({name:a[p],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:b.now(),endMs:null}}endTimer(e){return B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=b.now(),e)}async getQueryTime(e){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:o,usage:s,isPacked:a,slice:i}=this.texData.get(e),u=i&&i.origDataId||e,l=this.dataRefCount.get(u);l>1?this.dataRefCount.set(u,l-1):(this.dataRefCount.delete(u),t!=null&&(this.numBytesInGPU-=this.computeBytes(o,n),this.textureManager.releaseTexture(t,o,s,a)));let p=this.texData.get(e);p.texture=null,p.texShape=null,p.isPacked=!1,p.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Qse){return B().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&b.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){C.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return jse(e.shape,t)}packedUnaryOp(e,t,n){let o=new Xs(e.shape,t),s=this.compileAndRun(o,[e],n);return Mn().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let o=sx(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,o)}if(B().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,rw,e.dtype);let t=new Sn(e.shape,rw),n=this.compileAndRun(t,[e]);return Mn().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(a=>b.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:t}}makeOutput(e,t,n){return Mn().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new nw(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new ew(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[hu(e.shape),...gu(e.shape)],o={dtype:e.dtype,shape:n,dataId:e.dataId},s=[hu(t),...gu(t)],a=new Qh(s,n),i=!0,u=[n],l=this.runWebGLProgram(a,[o],e.dtype,u,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:o,shape:s,dtype:a}=n;if(t!=null){let c=b.sizeFromShape(s),d=t[0]*t[1]*4;b.assert(c<=d,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let i=Yh(s),u;o?u=new FA(i):u=new PA(i);let l=!0,p=[t??Hh(i)],m=this.runWebGLProgram(u,[{shape:i,dtype:a,dataId:e}],a,p,l,t);return{dtype:a,shape:s,dataId:m.dataId}}runWebGLProgram(e,t,n,o,s=!1,a){let i=this.makeTensorInfo(e.outputShape,n),u=this.texData.get(i.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===0){let y=a??Hh(e.outputShape);u.texShape=y.map(T=>T*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),b.sizeFromShape(i.shape)===0)return u.values=b.getTypedArrayFromDType(i.dtype,0),i;let l=[],p=t.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let T=this.texData.get(y.dataId);if(T.texture==null){if(!e.packedInputs&&b.sizeFromShape(y.shape)<=B().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:T.values};e.packedInputs&&(T.isPacked=!0,T.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!T.isPacked!=!!e.packedInputs)y=T.isPacked?this.unpackTensor(y):this.packTensor(y),l.push(y),T=this.texData.get(y.dataId);else if(T.isPacked&&!Tl(T.shape,y.shape)){let x=y,I=y.shape;y.shape=T.shape,y=this.packedReshape(y,I),l.push(y),T=this.texData.get(y.dataId),x.shape=I}return{shape:y.shape,texData:T,isUniform:!1}});this.uploadToGPU(i.dataId);let m={shape:i.shape,texData:u,isUniform:!1},c=gO(e,p,m),d=this.getAndSaveBinary(c,()=>fO(this.gpgpu,e,p,m)),f=this.activeTimers!=null,h;f&&(h=this.startTimer()),B().get("ENGINE_COMPILE_ONLY")||hO(this.gpgpu,d,p,m,o),l.forEach(y=>this.disposeIntermediateTensorInfo(y)),f&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));let g=B().get("WEBGL_FLUSH_THRESHOLD");if(g>0){let y=b.now();y-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!B().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&s===!1){let y=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),y}return i}compileAndRun(e,t,n,o,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,o,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(B().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=U(()=>{if(!B().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=B().getBool("DEBUG");B().set("DEBUG",!1);let t=this.abs(ce(1e-8)).dataSync()[0];if(B().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Xse:Yse}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:o,values:s,texture:a,usage:i,isPacked:u}=t;if(a!=null)return;let l=this.activeTimers!=null,p;l&&(p=b.now());let m=t.texShape;if(m==null&&(m=CA(n,u),t.texShape=m),s!=null){let c=Yh(n),d,f=m[1],h=m[0],g=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(u||!g)&&([f,h]=Si(m[0],m[1])),u?d=new _A(c,g):d=new EA(c,g);let y=g?[h,f]:m,T=this.makeTensorInfo(y,o),x=this.texData.get(T.dataId);g?x.usage=2:x.usage=1,x.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(T.dataId),f,h,s);let I=[[h,f]],k=!0,w=this.runWebGLProgram(d,[T],o,I,k),F=this.texData.get(w.dataId);t.texShape=F.texShape,t.isPacked=F.isPacked,t.usage=F.usage,B().get("ENGINE_COMPILE_ONLY")?this.disposeData(w.dataId):(t.texture=F.texture,t.values=null,this.texData.delete(w.dataId)),this.disposeIntermediateTensorInfo(T),l&&(this.uploadWaitMs+=b.now()-p)}else{let c=this.acquireTexture(m,i,o,u);t.texture=c}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:o}=n;return this.releaseGPUData(e),t!=null&&(n.values=tae(t,o)),n.values}acquireTexture(e,t,n,o){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,o)}computeBytes(e,t){return e[0]*e[1]*b.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise(o=>{try{this.checkCompletion_(t),o(!0)}catch(s){throw s}});e.push(n)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Yd(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(HT(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:o,nanLoc:s,inShapesLocations:a,inTexShapesLocations:i,outShapeLocation:u,outShapeStridesLocation:l,outTexShapeLocation:p}=DA(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=o,e.nanLoc=s,e.inShapesLocations=a,e.inTexShapesLocations=i,e.outShapeLocation=u,e.outShapeStridesLocation=l,e.outTexShapeLocation=p}}},Jh=ow;Jh.nextDataId=0;function tae(r,e){if(e==="float32"||e==="complex64")return r;if(e==="int32"||e==="bool"){let t=e==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let n=0;n<t.length;++n)t[n]=Math.round(r[n]);return t}else throw new Error(`Unknown dtype ${e}`)}var rae="0.0.0";function yz(){B().set("WEBGL_FORCE_F16_TEXTURES",!0)}Vu.isBrowser()&&ju("webgl",()=>new Jh,2);var z5t={forceHalfFloat:yz};var ux=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var Ys=class{constructor(e,t,n){this.variableNames=["A","B"];this.outputShape=C.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=Lt(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var xl=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;var Xa=class{constructor(e,t,n,o=!1){this.variableNames=["A","B"];this.supportsBroadcasting=!0;this.packedInputs=!0;this.packedOutput=!0;this.outputShape=C.assertAndGetBroadcastShape(t,n);let s=this.outputShape.length;this.enableShapeUniforms=Lt(s);let a="";if(o)if(s===0||b.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Ve(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let u=or("coords",s);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function sr(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var Tz={kernelName:Kn,backendName:"webgl",kernelFunc:sr};function Bn(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),a=t.texData.get(s.dataId),i=sr({inputs:{x:n},backend:t}),u=sr({inputs:{x:o},backend:t});return a.complexTensorInfos={real:i,imag:u},s}var xz={kernelName:Au,backendName:"webgl",kernelFunc:Bn};var sw="return (a < 0.) ? b * a : a;",aw=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function nae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n,a=t.makeTensorInfo([],"float32",b.createScalarValue(s,"float32")),i=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Xa(aw,o.shape,a.shape):new Ys(sw,o.shape,a.shape),u=t.runWebGLProgram(i,[o,a],"float32");return t.disposeIntermediateTensorInfo(a),u}var Iz={kernelName:Co,backendName:"webgl",kernelFunc:nae};var iw="return (a < 0.) ? b * a : a;",uw=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function oae(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Xa(uw,n.shape,o.shape):new Ys(iw,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],"float32")}var Cz={kernelName:Eo,backendName:"webgl",kernelFunc:oae};var Zs="if (isnan(x)) return x;",kz=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,Sz=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Ae({opSnippet:r,packedOpSnippet:e,cpuKernelImpl:t,dtype:n}){return({inputs:o,backend:s})=>{let{x:a}=o,i=s,u=n||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){let m=i.texData.get(a.dataId),c=t(m.values,u);return i.makeTensorInfo(a.shape,u,c)}let l=B().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null,p;return l?p=new Xs(a.shape,e):p=new Sn(a.shape,r),i.runWebGLProgram(p,[a],u)}}function dt({opSnippet:r,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:n=!1,cpuKernelImpl:o,dtype:s}){return({inputs:a,backend:i})=>{let{a:u,b:l}=a,p=i;if(n&&u.dtype==="complex64"){let f=p.texData.get(u.dataId),h=p.texData.get(l.dataId),[g,y]=[[f.complexTensorInfos.real,h.complexTensorInfos.real],[f.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(x=>{let[I,k]=x,w={dataId:I.dataId,dtype:I.dtype,shape:u.shape},F={dataId:k.dataId,dtype:k.dtype,shape:l.shape},M=new Ys(r,u.shape,l.shape);return p.runWebGLProgram(M,[w,F],Et(I.dtype,k.dtype))}),T=Bn({inputs:{real:g,imag:y},backend:p});return p.disposeIntermediateTensorInfo(g),p.disposeIntermediateTensorInfo(y),T}let m=s||Et(u.dtype,l.dtype);if((u.dtype==="string"||l.dtype==="string"||p.shouldExecuteOnCPU([u,l]))&&o!=null){let f=p.texData.get(u.dataId).values,h=p.texData.get(l.dataId).values,g=u.dtype==="string"?C.fromUint8ToStringArray(f):f,y=u.dtype==="string"?C.fromUint8ToStringArray(h):h,[T,x]=o(u.shape,l.shape,g,y,m),I=p.makeTensorInfo(x,m),k=p.texData.get(I.dataId);return k.values=T,I}let c=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null,d;return c?d=new Xa(e,u.shape,l.shape,t):d=new Ys(r,u.shape,l.shape),p.runWebGLProgram(d,[u,l],m)}}function Il(r,e=!1){if(r==="linear")return e?dz:iz;if(r==="relu")return e?hz:lz;if(r==="elu")return e?fz:uz;if(r==="relu6")return e?gz:pz;if(r==="prelu")return e?uw:iw;if(r==="leakyrelu")return e?aw:sw;if(r==="sigmoid")return e?bz:mz;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var eg=class{constructor(e,t,n,o=!1,s=!1,a=!1,i=null,u=!1,l=!1){this.variableNames=["matrixA","matrixB"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=n,this.enableShapeUniforms=Lt(this.outputShape.length);let p=o?e[1]:e[2],m=Math.ceil(p/2),c=o?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",f=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",y="";i&&(u?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,y="result = activation(result);");let T=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",I="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(I=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${m}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${m}; i++) {
          int batchA = ${x};
          int batchB = ${I};
          vec4 a = getMatrixA(batchA, ${c});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${h[0]});
          result += (${f[1]} * ${h[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${T}

        ${y}

        setOutput(result);
      }
    `}};var lw={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},lx=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.outputShape=C.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var vz="return a * b;";function tg(r){let{inputs:e,backend:t}=r,{a:n,b:o}=e,s=C.upcastType(n.dtype,o.dtype);if(n.dtype==="complex64"){let i=t.texData.get(n.dataId),u=t.texData.get(o.dataId),l=new lx(lw.REAL,n.shape,o.shape),p=new lx(lw.IMAG,n.shape,o.shape),m=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:n.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:o.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:o.shape}],c=t.runWebGLProgram(l,m,"float32"),d=t.runWebGLProgram(p,m,"float32"),f=Bn({inputs:{real:c,imag:d},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),f}if(t.shouldExecuteOnCPU([n,o])){let i=t.texData.get(n.dataId),u=t.texData.get(o.dataId),[l,p]=$O(n.shape,o.shape,i.values,u.values,s),m=t.makeTensorInfo(p,s),c=t.texData.get(m.dataId);return c.values=l,m}let a;return B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new Xa(vz,n.shape,o.shape):a=new Ys(vz,n.shape,o.shape),t.runWebGLProgram(a,[n,o],s)}var Az={kernelName:Fo,backendName:"webgl",kernelFunc:tg};function wz(r,e,t){let n=[hu(r.shape),...gu(r.shape)],o={dtype:r.dtype,shape:n,dataId:r.dataId},s=[hu(e),...gu(e)],a=new Qh(s,n),i=!0,u=[n],l=t.runWebGLProgram(a,[o],r.dtype,u,i);return{dataId:l.dataId,shape:e,dtype:l.dtype}}function ue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,a=t,i=b.sizeFromShape(o.shape),u=b.inferFromImplicitShape(s,i),l=b.sizeFromShape(u);b.assert(i===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let p=a.texData.get(o.dataId);return p.isPacked&&!Tl(o.shape,u)&&!(p.texture!==null&&Tl(p.shape,u))?wz(o,u,a):(a.incRef(o.dataId),{dataId:o.dataId,shape:u,dtype:o.dtype})}var Nz={kernelName:hs,backendName:"webgl",kernelFunc:ue};var px=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=e;this.outputShape=[o,a];let i=Math.floor(n/4)*4,u=n%4,l="sumValue += dot(values, ones);";if(t!=null){let m=1/t;l=`sumValue += dot(values * ${b.isInt(m)?m.toPrecision(2):m}, ones);`}let p="";s%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}};var pw=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=e;this.outputShape=[o,a];let i="0.0",u="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",u="min"):t==="max"&&(i="-1.0 / 1e-20",u="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let p=Math.floor(n/4)*4,m=n%4,c=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";t==="all"?(i="1.0",c=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):t==="any"&&(i="0.0",c=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${p};
        if (${m===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${c}
        }
        setOutput(${l});
      }
    `}};function aae(r){let e=[];for(;e.length===0||e[e.length-1].outSize!==1;){let t=e.length?e[e.length-1].outSize:r[1],n=C.computeOptimalWindowSize(t);e.push({inSize:t,windowSize:n,outSize:Math.ceil(t/n)})}return e}function Jn(r,e,t,n){let o=aae(r.shape),s=r;for(let a=0;a<o.length;a++){let{inSize:i,windowSize:u,outSize:l}=o[a],p,m;t==="mean"?p=a===0?new px({windowSize:u,inSize:i,batchSize:r.shape[0],outSize:l},i):new px({windowSize:u,inSize:i,batchSize:r.shape[0],outSize:l}):p=new pw({windowSize:u,inSize:i,batchSize:r.shape[0],outSize:l},t),m=s,s=n.runWebGLProgram(p,[s],e),m.dataId!==r.dataId&&n.disposeIntermediateTensorInfo(m)}return s}var mw=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let o=Ve(this.rank),s=iae(t);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function iae(r){let e=r.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(e);for(let o=0;o<r.length;o++)n[r[o]]=t[o];return n.join()}var cw=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;let n=new Array(e.length);for(let p=0;p<n.length;p++)n[p]=e[t[p]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let o=Ve(this.rank),s=JA("rc",this.rank),a=new Array(this.rank);for(let p=0;p<t.length;p++)a[t[p]]=s[p];let i=`vec2(${a.slice(-2).join()})`,u=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${u}) {
        result[1] = ${l};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${u}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function Cl(r,e,t){let n=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new cw(r.shape,e):new mw(r.shape,e);return t.runWebGLProgram(n,[r],r.dtype)}function Dz(r,e,t,n){let o=e,s=r.shape.length,a=b.parseAxisParam(o,r.shape),i=a,u=C.getAxesPermutation(i,s),l=u!=null,p=r;l&&(p=Cl(r,u,n),i=C.getInnerMostAxes(i.length,s)),C.assertAxesAreInnerMostDims("sum",i,s);let[m,c]=C.computeOutAndReduceShapes(p.shape,i),d=m;t&&(d=C.expandShapeToKeepDim(m,a));let f=b.sizeFromShape(c),g=b.sizeFromShape(r.shape)/f,y=ue({inputs:{x:p},attrs:{shape:[g,f]},backend:n}),T=Qi(r.dtype),x=Jn(y,T,"sum",n),I=ue({inputs:{x},attrs:{shape:d},backend:n});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),l&&n.disposeIntermediateTensorInfo(p),I}function Mp(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return Dz(o,s,a,t)}var Pz={kernelName:Ko,backendName:"webgl",kernelFunc:Mp};function Vt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,a=t,i=o.shape.length,u=new Array(i);for(let p=0;p<u.length;p++)u[p]=o.shape[s[p]];let l;if(a.shouldExecuteOnCPU([o])){let m=a.texData.get(o.dataId).values,c=Pp(m,o.shape,o.dtype,s,u);l=a.makeTensorInfo(u,o.dtype);let d=a.texData.get(l.dataId);d.values=c}else l=Cl(o,s,a);return l}var Fz={kernelName:Dn,backendName:"webgl",kernelFunc:Vt};var dw=1e3;function Rp({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){let l=r.shape.length,p=e.shape.length,m=t?r.shape[l-2]:r.shape[l-1],c=n?e.shape[p-1]:e.shape[p-2],d=t?r.shape[l-1]:r.shape[l-2],f=n?e.shape[p-2]:e.shape[p-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),y=b.sizeFromShape(h),T=b.sizeFromShape(g),I=Nr.assertAndGetBroadcastShape(r.shape.slice(0,-2),e.shape.slice(0,-2)).concat([d,f]);b.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let k=t?[y,m,d]:[y,d,m],w=n?[T,f,c]:[T,c,f],F=ue({inputs:{x:r},backend:o,attrs:{shape:k}}),M=ue({inputs:{x:e},backend:o,attrs:{shape:w}}),R=[F,M],L=Math.max(y,T),O=t?F.shape[1]:F.shape[2],W=s!=null,V=a!=null,j=u==="leakyrelu",q=u!=null?Il(u,!0):null,Y=W||V||j||q!=null,J;if((d===1||f===1)&&O>dw&&Y===!1){let oe=F,se=M;t&&(oe=Vt({inputs:{x:F},backend:o,attrs:{perm:[0,2,1]}}),R.push(oe)),n&&(se=Vt({inputs:{x:M},backend:o,attrs:{perm:[0,2,1]}}),R.push(se));let ae=f!==1,pe=f===1,ie=oe;ae&&(ie=ue({inputs:{x:oe},backend:o,attrs:{shape:[L,O,1]}}),R.push(ie));let be=f===1?2:1,fe=se;pe&&(fe=ue({inputs:{x:se},backend:o,attrs:{shape:[L,1,O]}}),R.push(fe));let Ie=tg({inputs:{a:ie,b:fe},backend:o});J=Mp({inputs:{x:Ie},backend:o,attrs:{axis:be,keepDims:!0}}),R.push(Ie)}else{let oe=Et(r.dtype,e.dtype),se=new eg(k,w,[L,d,f],t,n,W,q,V,j),ae=[F,M];if(s!=null&&ae.push(s),V&&ae.push(a),j){let pe=o.makeTensorInfo([],"float32",b.createScalarValue(i,"float32"));ae.push(pe),R.push(pe)}J=o.runWebGLProgram(se,ae,oe)}let H=ue({inputs:{x:J},backend:o,attrs:{shape:I}});R.push(J);for(let oe of R)o.disposeIntermediateTensorInfo(oe);return H}function uae(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:m}=n;return Rp({a:o,b:s,transposeA:u,transposeB:l,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:m,activation:p})}var Mz={kernelName:ks,backendName:"webgl",kernelFunc:uae};var Rz="return abs(x);";function lae(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=t.texData.get(n.dataId),a=sx(s.values);return t.makeTensorInfo(n.shape,n.dtype,a)}let o;return B().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Xs(n.shape,Rz):o=new Sn(n.shape,Rz),t.runWebGLProgram(o,[n],n.dtype)}var Ez={kernelName:is,backendName:"webgl",kernelFunc:lae};var pae=Tr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,mae=Ae({opSnippet:pae}),_z={kernelName:Di,backendName:"webgl",kernelFunc:mae};var cae=Tr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,dae=Ae({opSnippet:cae}),Lz={kernelName:Pi,backendName:"webgl",kernelFunc:dae};var $z="return a + b;",fae=dt({opSnippet:$z,packedOpSnippet:$z,supportsComplex:!0,cpuKernelImpl:yO}),Bz={kernelName:wn,backendName:"webgl",kernelFunc:fae};var fw=class{constructor(e,t){this.outputShape=[];this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}};var hw=class{constructor(e,t){this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}};function mx(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return sr({inputs:{x:n[0]},backend:t});if(n.length>B().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(n.length/2),l=mx({inputs:n.slice(0,u),backend:t}),p=mx({inputs:n.slice(u),backend:t});return mx({inputs:[l,p],backend:t})}let o=n.map(u=>u.dtype).reduce((u,l)=>Et(u,l)),s=n.map(u=>u.shape),i=B().getBool("WEBGL_PACK")?new hw(n[0].shape,s):new fw(n[0].shape,s);return t.runWebGLProgram(i,n,o)}var Oz={kernelName:no,backendName:"webgl",kernelFunc:mx};function hae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,p=C.getAxesPermutation(l,i),m=o;p!=null&&(m=Vt({inputs:{x:o},backend:t,attrs:{perm:p}}),l=C.getInnerMostAxes(l.length,i)),C.assertAxesAreInnerMostDims("all",l,i);let[c,d]=C.computeOutAndReduceShapes(m.shape,l),f=b.sizeFromShape(d),h=ue({inputs:{x:m},backend:t,attrs:{shape:[-1,f]}}),g=Jn(h,h.dtype,"all",t),y;if(a){let T=C.expandShapeToKeepDim(c,u);y=ue({inputs:{x:g},backend:t,attrs:{shape:T}})}else y=ue({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),p!=null&&t.disposeIntermediateTensorInfo(m),y}var zz={kernelName:Fi,backendName:"webgl",kernelFunc:hae};function gae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,p=C.getAxesPermutation(l,i),m=o;p!=null&&(m=Vt({inputs:{x:o},backend:t,attrs:{perm:p}}),l=C.getInnerMostAxes(l.length,i)),C.assertAxesAreInnerMostDims("any",l,i);let[c,d]=C.computeOutAndReduceShapes(m.shape,l),f=b.sizeFromShape(d),h=ue({inputs:{x:m},backend:t,attrs:{shape:[-1,f]}}),g=Jn(h,h.dtype,"any",t),y;if(a){let T=C.expandShapeToKeepDim(c,u);y=ue({inputs:{x:g},backend:t,attrs:{shape:T}})}else y=ue({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),p!=null&&t.disposeIntermediateTensorInfo(m),y}var Gz={kernelName:Mi,backendName:"webgl",kernelFunc:gae};var gw=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:o,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];let i=t==="max"?">":"<",u=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var bw=class{constructor(e,t,n,o){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;b.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),o||this.variableNames.push("bestIndicesA");let i=this.outputShape,u=i.length,l=Ve(u),p=or("coords",u),m,c;if(a===1){c=u+1;let M=Ve(c);m=`
        ${M} sourceLocR = ${M}(${p.join()}, 0);
        ++${p[u-1]};
        ${M} sourceLocG = ${M}(${p.join()}, 0);
        ++${p[u-2]};
        ${M} sourceLocA = ${M}(${p.join()}, 0);
        --${p[u-1]};
        ${M} sourceLocB = ${M}(${p.join()}, 0);
        --${p[u-2]};`}else c=u,m=`
        ${l} sourceLocR = coords;
        ++${p[u-1]};
        ${l} sourceLocG = coords;
        ++${p[u-2]};
        ${l} sourceLocA = coords;
        --${p[u-1]};
        ${l} sourceLocB = coords;
        --${p[u-2]};`;let d=["x","y","z","w","u","v"].slice(0,c),f="."+d[c-1],h=d.map(M=>"int "+M),g=or("sourceLocR",c-1).concat("inIdx.r"),y=or("sourceLocG",c-1).concat("inIdx.g"),T=or("sourceLocB",c-1).concat("inIdx.b"),x=or("sourceLocA",c-1).concat("inIdx.a"),I=n==="max"?"greaterThan":"lessThan",k=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${T.join()}),
                             getBestIndicesAChannel(${x.join()})));`,w=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${T.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,F=o?"":`
      float getBestIndicesAChannel(${h.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${h.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${F}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${p[u-1]} < ${i[u-1]-1};
        bool hasNextRow = ${p[u-2]} < ${i[u-2]-1};
        ${m}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${w};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${k}
          vec4 candidate = ${w};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${I}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function Uz(r,e,t,n=null){let o=e.shape[0],s=e.shape[1];n!=null&&(o=n.shape[0],s=n.shape[1]);let a=C.computeOptimalWindowSize(s),i={windowSize:a,inSize:s,batchSize:o,outSize:Math.ceil(s/a)},u=new gw(i,t,n==null),l=[e];n!=null&&l.push(n);let p=r.runWebGLProgram(u,l,"int32");if(p.shape[1]===1)return p;let m=Uz(r,e,t,p);return r.disposeIntermediateTensorInfo(p),m}function Wz(r,e,t,n=null){let o=n!=null?n.shape:e.shape,s=o[o.length-1],a=C.computeOptimalWindowSize(s),i=new bw(o,a,t,n==null),u=n==null?[e]:[e,n],l=r.runWebGLProgram(i,u,"int32");if(l.shape.length===e.shape.length){let p=Wz(r,e,t,l);return r.disposeIntermediateTensorInfo(l),p}return l}function cx(r,e,t,n){let o=[t];if(C.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.shape.length),!B().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){let s=[],a=r.texData.get(e.dataId),i=a!==null&&a.isPacked,u=e;i&&(u=r.unpackTensor(e),s.push(u));let[l,p]=C.computeOutAndReduceShapes(u.shape,o),m=b.sizeFromShape(p),c=ue({inputs:{x:u},backend:r,attrs:{shape:[-1,m]}});s.push(c);let d=Uz(r,c,n);s.push(d);let f=ue({inputs:{x:d},backend:r,attrs:{shape:l}});return s.forEach(h=>r.disposeIntermediateTensorInfo(h)),f}return Wz(r,e,n)}function bae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=b.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Vt({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMax",[a[0]],u.shape.length);let p=cx(t,u,a[0],"max");return l.forEach(m=>t.disposeIntermediateTensorInfo(m)),p}var Kz={kernelName:oo,backendName:"webgl",kernelFunc:bae};function yae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=b.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Vt({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMin",[a[0]],u.shape.length);let p=cx(t,u,a[0],"min");return l.forEach(m=>t.disposeIntermediateTensorInfo(m)),p}var Vz={kernelName:si,backendName:"webgl",kernelFunc:yae};var Tae=Tr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,xae=Ae({opSnippet:Tae}),Hz={kernelName:Ri,backendName:"webgl",kernelFunc:xae};var Iae=Tr+"return log(x + sqrt(x * x + 1.0));",Cae=Ae({opSnippet:Iae}),qz={kernelName:Ei,backendName:"webgl",kernelFunc:Cae};var kae=Tr+`
  return atan(x);
`,Sae=Ae({opSnippet:kae}),jz={kernelName:_i,backendName:"webgl",kernelFunc:Sae};var vae=kz+`
  return atan(a, b);
`,Aae=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Sz+`
  return result;
`,wae=dt({opSnippet:vae,packedOpSnippet:Aae}),Xz={kernelName:$i,backendName:"webgl",kernelFunc:wae};var Nae=Tr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Dae=Ae({opSnippet:Nae}),Yz={kernelName:Li,backendName:"webgl",kernelFunc:Dae};var vi=class{constructor(e,t,n,o=!1,s=!1){this.variableNames=["x"];if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,p=e.dilationWidth,m=e.effectiveFilterHeight,c=e.effectiveFilterWidth,d=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;let h=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,y=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,T="0.0";if(h||(T="-1.0 / 1e-20"),n){let M=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${u});
        const ivec2 pads = ivec2(${d}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${m};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${c};
                wC += ${p}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${M} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?s?g:y:`wR * ${c} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",I=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(I="avgValue / count");let k=Math.floor(a/4)*4,w=a%4,F=`
      if (${h}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${u});
      const ivec2 pads = ivec2(${d}, ${f});
      const float initializationValue = ${T};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${T});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${m};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${k}; wC += 4) {
            int xC = xCCorner + wC * ${p};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              getValue(batch, xR, xC + 3 * ${p}, d)
            );

            ${F}
          }

          int xC = xCCorner + ${k};
          if (${w===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${F}
          } else if (${w===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              initializationValue,
              initializationValue
            );

            ${F}
          } else if (${w===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              initializationValue
            );

            ${F}
          }
        }
        setOutput(${I});
      }
    `}},Ep=class{constructor(e,t,n,o=!1,s=!1){this.variableNames=["x"];if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideDepth,u=e.strideHeight,l=e.strideWidth,p=e.dilationDepth,m=e.dilationHeight,c=e.dilationWidth,d=e.effectiveFilterDepth,f=e.effectiveFilterHeight,h=e.effectiveFilterWidth,g=e.padInfo.front,y=e.padInfo.top,T=e.padInfo.left;this.outputShape=e.outShape;let x=t==="avg",I="0.0";if(x||(I="-1.0 / 1e-20"),n){let L=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${u}, ${l});
        const ivec3 pads = ivec3(${g}, ${y}, ${T});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${p}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${m}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${h};
                  wC += ${c}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${L} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${h} +
                      wR * ${h} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let k="max",w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / count");let F=Math.floor(a/4)*4,M=a%4,R=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${k}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${u}, ${l});
      const ivec3 pads = ivec3(${g}, ${y}, ${T});
      const float initializationValue = ${I};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${I});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${p}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${m}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${F}; wC += 4) {
              int xC = xCCorner + wC * ${c};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                getValue(batch, xD, xR, xC + 3 * ${c}, ch)
              );

              ${R}
            }

            int xC = xCCorner + ${F};
            if (${M===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${M===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${M===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                initializationValue
              );

              ${R}
            }
          }
          setOutput(${w});
        }
      }
    `}};function Pae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;qa(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;b.assert(C.eitherStridesOrDilationsAreOne(a,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=C.computePool2DInfo(o.shape,s,a,l,i,u);if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))return sr({inputs:{x:o},backend:t});let m=new vi(p,"avg",!1);return t.runWebGLProgram(m,[o],"float32")}var Zz={kernelName:so,backendName:"webgl",kernelFunc:Pae};function Fae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=n,p=[1,1,1],m=C.computePool3DInfo(o.shape,s,a,p,i,u,l),c=new Ep(m,"avg",!1);return t.runWebGLProgram(c,[o],"float32")}var Qz={kernelName:vu,backendName:"webgl",kernelFunc:Fae};var yw=class{constructor(e){this.variableNames=["dy"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,p=u-1-e.padInfo.top,m=l-1-e.padInfo.left,c=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${p}, ${m});
      const float avgMultiplier = float(${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},Tw=class{constructor(e){this.variableNames=["dy"];this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,p=e.dilationWidth,m=e.effectiveFilterDepth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,f=m-1-e.padInfo.front,h=c-1-e.padInfo.top,g=d-1-e.padInfo.left,y=1/(t*n*o);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${h}, ${g});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${m};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${p}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Mae(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:u,pad:l,dimRoundingMode:p}=n,m=[1,1,1],c=C.computePool3DInfo(a.shape,i,u,m,l,p),d=new Tw(c);return t.runWebGLProgram(d,[o],a.dtype)}var Jz={kernelName:pm,backendName:"webgl",kernelFunc:Mae};function Rae(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s;qa([o,s],"avgPoolGrad");let{filterSize:i,strides:u,pad:l}=n,p=C.computePool2DInfo(a.shape,i,u,1,l),m=new yw(p);return t.runWebGLProgram(m,[o],a.dtype)}var e3={kernelName:lm,backendName:"webgl",kernelFunc:Rae};function Eae(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;return Rp({a:o,b:s,transposeA:a,transposeB:i,backend:t})}var t3={kernelName:ao,backendName:"webgl",kernelFunc:Eae};var xw=class{constructor(e,t,n,o,s,a){this.outputShape=[];this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(e,t),C.assertAndGetBroadcastShape(e,n);let i="0.0";o!=null&&(C.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";s!=null&&(C.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var Iw=class{constructor(e,t,n,o,s,a){this.packedInputs=!0;this.packedOutput=!0;this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(e,t),C.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";o!=null&&(C.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";s!=null&&(C.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var _ae=({inputs:r,backend:e,attrs:t})=>{let{x:n,mean:o,variance:s,offset:a,scale:i}=r;b.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=t;u==null&&(u=.001);let l=[n,o,s],p=null;a!=null&&(p=a.shape,l.push(a));let m=null;i!=null&&(m=i.shape,l.push(i));let c=B().getBool("WEBGL_PACK_NORMALIZATION")?new Iw(n.shape,o.shape,s.shape,p,m,u):new xw(n.shape,o.shape,s.shape,p,m,u);return e.runWebGLProgram(c,l,l[0].dtype)},r3={kernelName:xo,backendName:"webgl",kernelFunc:_ae};var kw=class{constructor(e){this.variableNames=["source"];this.outputShape=e,this.rank=e.length;let t=Ve(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=Lae(this.rank),o,s=e.map((a,i)=>`sourceLoc.${Cw[i]} = start[${i}] + coords.${Cw[i]};`);o=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${n}));
      }
    `}},Cw=["x","y","z","w","u","v"];function Lae(r){if(r===1)return"sourceLoc";if(r<=6)return Cw.slice(0,r).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var Sw=class{constructor(e){this.variableNames=["source"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=Ve(this.rank),n=or("coords",this.rank),o=or("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,a=`getChannel(getSource(${o.join()}), ${s})`,i=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${a};
        --${o[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((p,m)=>`start[${m}]`).join()});`:e.map((p,m)=>`${o[m]} = ${n[m]} + start[${m}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${u}
        setOutput(result);
      }
    `}};function $ae(r,e,t,n){let o=n.texData.get(r.dataId),s=n.makeTensorInfo(t,r.dtype),a=n.texData.get(s.dataId);Object.assign(a,o),a.refCount=1,a.shape=t,a.dtype=r.dtype;let i=xt.computeFlatOffset(e,b.computeStrides(r.shape));o.slice&&(i+=o.slice.flatOffset),a.slice={flatOffset:i,origDataId:o.slice&&o.slice.origDataId||r.dataId};let u=n.dataRefCount.get(a.slice.origDataId)||1;return n.dataRefCount.set(a.slice.origDataId,u+1),s}function Ya(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n,[i,u]=xt.parseSliceParams(o,s,a);if(xt.assertParamsValid(o,i,u),b.sizeFromShape(u)===0)return t.makeTensorInfo(u,o.dtype,[]);if(t.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=t.texData.get(o.dataId),c=VO(m.values,i,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,c)}let{isPacked:l}=t.texData.get(o.dataId),p=xt.isSliceContinous(o.shape,i,u);if(l||!p){let m=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Sw(u):new kw(u),c=[i];return t.runWebGLProgram(m,[o],o.dtype,c)}return t.uploadToGPU(o.dataId),$ae(o,i,u,t)}var n3={kernelName:bs,backendName:"webgl",kernelFunc:Ya};var Bae=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;b.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((T,x)=>T*x),u=C.getReshaped(o.shape,s,i),l=C.getPermuted(u.length,s.length),p=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(p,a,s.length),d=[],f=ue({inputs:{x:o},backend:t,attrs:{shape:u}}),h=Vt({inputs:{x:f},backend:t,attrs:{perm:l}}),g=ue({inputs:{x:h},backend:t,attrs:{shape:p}}),y=Ya({inputs:{x:g},backend:t,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(T=>t.disposeIntermediateTensorInfo(T)),y},o3={kernelName:us,backendName:"webgl",kernelFunc:Bae};function Oae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=t.readSync(o.dataId),u=t.readSync(s.dataId),l=ox(i,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,l)}var s3={kernelName:mm,backendName:"webgl",kernelFunc:Oae};function zae(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.readSync(n.dataId),a=t.readSync(o.dataId),i=C.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var a3={kernelName:cm,backendName:"webgl",kernelFunc:zae};var Gae="return float(a != b);",vw=dt({opSnippet:Gae,cpuKernelImpl:OO,dtype:"bool"}),i3={kernelName:Ia,backendName:"webgl",kernelFunc:vw};function bu(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return sr({inputs:{x:o.complexTensorInfos.real},backend:t})}var u3={kernelName:Eu,backendName:"webgl",kernelFunc:bu};var Uae="return float(int(x));";function l3(r,e){let t=new Sn(r.shape,Uae),n=e.runWebGLProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function Aw(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return sr({inputs:{x:o},backend:t});let a=It(o.shape),i=Aw({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=Bn({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(i),u}if(o.dtype==="complex64"){let a=bu({inputs:{input:o},backend:t}),i=Aw({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),i}if(!b.hasEncodingLoss(o.dtype,s)){let a=sr({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32")return l3(o,t);if(s==="bool"){let a=t.makeTensorInfo([],"bool",b.getTypedArrayFromDType("bool",1)),u=vw({inputs:{a:o,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var p3={kernelName:Un,backendName:"webgl",kernelFunc:Aw};var m3="return ceil(x);",Wae=Ae({opSnippet:m3,packedOpSnippet:m3,cpuKernelImpl:xO}),c3={kernelName:io,backendName:"webgl",kernelFunc:Wae};var ww=class{constructor(e){this.variableNames=["A"];this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var Nw=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function Kae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i;B().getBool("WEBGL_PACK_CLIP")?i=new Nw(o.shape):i=new ww(o.shape);let u=[[s],[a]];return t.runWebGLProgram(i,[o],o.dtype,u)}var d3={kernelName:Wn,backendName:"webgl",kernelFunc:Kae};var Dw=class{constructor(e){this.variableNames=["real","imag"];this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function f3(r,e){return{dataId:e.dataId,dtype:e.dtype,shape:r.shape}}function Vae(r){let{inputs:e,backend:t}=r,{x:n}=e,o=t.texData.get(n.dataId),s=new Dw(n.shape),a=[f3(n,o.complexTensorInfos.real),f3(n,o.complexTensorInfos.imag)];return t.runWebGLProgram(s,a,a[0].dtype)}var h3={kernelName:wu,backendName:"webgl",kernelFunc:Vae};var Pw=class{constructor(e){this.outputShape=[];this.outputShape=C.computeOutShape(e,1),this.variableNames=e.map((a,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let i=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}let o=t.length,s=t[t.length-1];n.push(`else setOutput(getT${o}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}};var Fw=class{constructor(e,t){this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];this.outputShape=C.computeOutShape(e,t);let n=this.outputShape,o=n.length,s=Ve(o),a=or("coords",o),i=["x","y","z","w","u","v"].slice(0,o);this.variableNames=e.map((h,g)=>`T${g}`);let u=new Array(e.length-1);u[0]=e[0][t];for(let h=1;h<u.length;h++)u[h]=u[h-1]+e[h][t];let l=i[t],p=i.slice(-2),m=i.join(),c=`if (${l} < ${u[0]}) {
        return getChannel(
            getT0(${m}), vec2(${p.join()}));
        }`;for(let h=1;h<u.length;h++){let g=u[h-1];c+=`
        if (${l} < ${u[h]}  && ${l} >= ${u[h-1]}) {
          return getChannel(
            getT${h}(${dx(i,l,g)}),
            vec2(${dx(p,l,g)}));
        }`}let d=u.length,f=u[u.length-1];c+=`
        return getChannel(
          getT${d}(${dx(i,l,f)}),
          vec2(${dx(p,l,f)}));`,this.userCode=`
      float getValue(${i.map(h=>"int "+h)}) {
        ${c}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[o-1]} = ${a[o-1]} + 1;
        if (${a[o-1]} < ${n[o-1]}) {
          result.g = getValue(${a});
        }

        ${a[o-2]} = ${a[o-2]} + 1;
        if (${a[o-2]} < ${n[o-2]}) {
          result.a = getValue(${a});
        }

        ${a[o-1]} = ${a[o-1]} - 1;
        if (${a[o-2]} < ${n[o-2]} &&
            ${a[o-1]} < ${n[o-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function dx(r,e,t){let n=r.indexOf(e);return r.map((s,a)=>a===n?`${s} - ${t}`:s).join()}function _p(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return sr({inputs:{x:o.complexTensorInfos.imag},backend:t})}var g3={kernelName:Fu,backendName:"webgl",kernelFunc:_p};function od(r,e,t){let n=r[0].dtype;if(n==="complex64"){let m=r.map(g=>bu({inputs:{input:g},backend:t})),c=r.map(g=>_p({inputs:{input:g},backend:t})),d=od(m,e,t),f=od(c,e,t),h=Bn({inputs:{real:d,imag:f},backend:t});return m.forEach(g=>t.disposeIntermediateTensorInfo(g)),c.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),h}let o=t.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let m=r.map(T=>{let x=b.sizeFromShape(T.shape.slice(e));return ue({inputs:{x:T},backend:t,attrs:{shape:[-1,x]}})}),c=m.map(T=>({vals:t.readSync(T.dataId),shape:T.shape})),d=C.computeOutShape(m.map(T=>T.shape),1),f=m[0].shape[0]===1,h=IO(c,d,n,f),g=C.computeOutShape(r.map(T=>T.shape),e),y=t.makeTensorInfo(g,n,h);return m.forEach(T=>t.disposeIntermediateTensorInfo(T)),y}let s=B().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>s){let m=[];for(let d=0;d<r.length;d+=s){let f=r.slice(d,d+s);m.push(od(f,e,t))}let c=od(m,e,t);for(let d of m)t.disposeIntermediateTensorInfo(d);return c}if(B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1){let m=new Fw(r.map(c=>c.shape),e);return t.runWebGLProgram(m,r,n)}let{tensors2D:a,outShape:i}=Hae(r,e,t),u=new Pw(a.map(m=>m.shape)),l=t.runWebGLProgram(u,a,n);a.forEach(m=>t.disposeIntermediateTensorInfo(m));let p=ue({inputs:{x:l},attrs:{shape:i},backend:t});return t.disposeIntermediateTensorInfo(l),p}function Hae(r,e,t){let n=C.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>ue({inputs:{x:s},attrs:{shape:[-1,b.sizeFromShape(s.shape.slice(e))]},backend:t})),outShape:n}}function Mw(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],a=C.computeOutShape(e.map(l=>l.shape),s);if(b.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(l=>b.sizeFromShape(l.shape)>0);if(i.length===1)return sr({inputs:{x:i[0]},backend:t});let u=i.map(l=>l.shape);return C.assertParamsConsistent(u,s),od(i,s,t)}var b3={kernelName:ls,backendName:"webgl",kernelFunc:Mw};var rg=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.outputShape=e.outShape;let a=e.padInfo.top,i=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,p=e.dilationHeight,m=e.dilationWidth,c=e.filterHeight,d=e.filterWidth,f=Math.floor(e.inChannels/4)*4,h=e.inChannels%4,g=e.dataFormat==="channelsLast",y=g?1:2,T=g?2:3,x=g?3:1,I="",k="";n&&(o?I=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?I=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:I=`
          float activation(float x) {
            ${n}
          }
        `,k="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${I}

      const ivec2 strides = ivec2(${u}, ${l});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${T}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c}; wR++) {
          int xR = xRCorner + wR * ${p};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${m};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${h===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${h===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${h===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${w}
        ${k}
        setOutput(result);
      }
    `}},Rw=class{constructor(e){this.variableNames=["x","W"];this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,o=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,p=e.dilationWidth,m=e.filterDepth,c=e.filterHeight,d=e.filterWidth,f=Math.floor(e.inChannels/4)*4,h=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${m}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${p};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${h===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${h===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${h===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var Ew=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}];this.outputShape=e,this.enableShapeUniforms=Lt(this.outputShape.length);let{dataFormat:n}=t,o=Qt(),s=n==="channelsLast",a=s?1:2,i=s?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let p=0;p<=1;p++)for(let m=0;m<=1;m++)l+=`
          blockIndex = rc.z + ${m};
          pos = rc.y + ${p};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${p*2+m}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${p*2+m}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${o.output} = result;
      }
    `}};function fx(r,e){let t=r.length;return t>=3?e?[...r.slice(0,-3),r[t-3]*r[t-2],r[t-1]]:[...r.slice(0,-3),r[t-3],r[t-2]*r[t-1]]:!e&&t===1&&r[0]>1?[r[0],1]:null}function hx({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let u=r.shape,l=n.texData.get(r.dataId),p=t.inChannels,m=u[0]*u[1]*u[2],c=t.outChannels,d=t.dataFormat==="channelsLast",f=!1,h=!1,g,y=[];if(s!=null){let I=fx(s.shape,d);I!=null&&(s=ue({inputs:{x:s},backend:n,attrs:{shape:I}}),y.push(s))}if(o!=null){let I=fx(o.shape,d);I!=null&&(o=ue({inputs:{x:o},backend:n,attrs:{shape:I}}),y.push(o))}if(!((m===1||c===1)&&p>dw)&&l.isPacked&&d&&l.texture!=null&&u[2]%2!==0&&b.arraysEqual(l.shape.slice(-3),u.slice(-3))){let I=u[0]*u[1]*(u[2]+1),k={dataId:r.dataId,shape:[1,I,t.inChannels],dtype:r.dtype},w=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,b.assert(Tl(l.shape,k.shape),()=>`packed reshape ${l.shape} to ${k.shape} isn't free`);let F=ue({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});y.push(F);let M=Rp({a:k,b:F,backend:n,transposeA:f,transposeB:h,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),R=n.texData.get(M.dataId);b.assert(R.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=w,R.shape=t.outShape,g=sr({inputs:{x:M},backend:n}),g.shape=t.outShape,y.push(M)}else{let I=t.outHeight*t.outWidth,k=ue({inputs:{x:r},backend:n,attrs:{shape:d?[t.batchSize,I,t.inChannels]:[t.batchSize,t.inChannels,I]}}),w=ue({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),F=Rp({a:d?k:w,b:d?w:k,transposeA:!d,transposeB:h,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});g=ue({inputs:{x:F},backend:n,attrs:{shape:t.outShape}}),y.push(k),y.push(w),y.push(F)}for(let I of y)n.disposeIntermediateTensorInfo(I);return g}function gx({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let{filterWidth:u,filterHeight:l,inChannels:p,outWidth:m,outHeight:c,dataFormat:d}=t,f=d==="channelsLast",h=u*l*p,g=c*m,y=[t.batchSize,h,g],T=!0,x=!1,I=[];if(s!=null){let H=fx(s.shape,f);H!=null&&(s=ue({inputs:{x:s},backend:n,attrs:{shape:H}}),I.push(s))}if(o!=null){let H=fx(o.shape,f);H!=null&&(o=ue({inputs:{x:o},backend:n,attrs:{shape:H}}),I.push(o))}let k=ue({inputs:{x:e},backend:n,attrs:{shape:[1,h,b.sizeFromShape(e.shape)/h]}});I.push(k);let w=new Ew(y,t),F=[r.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],M=n.runWebGLProgram(w,[r],"float32",F),R=ue({inputs:{x:M},backend:n,attrs:{shape:y}});I.push(M),I.push(R);let L=o!=null,O=s!=null,W=i==="leakyrelu",V=i?Il(i,!0):null,j=new eg(f?R.shape:k.shape,f?k.shape:R.shape,f?[t.batchSize,g,t.outChannels]:[t.batchSize,t.outChannels,g],T,x,L,V,O,W),q=f?[R,k]:[k,R];if(o&&q.push(o),O&&q.push(s),W){let H=n.makeTensorInfo([],"float32",b.createScalarValue(a,"float32"));q.push(H),I.push(H)}let Y=n.runWebGLProgram(j,q,"float32"),J=ue({inputs:{x:Y},backend:n,attrs:{shape:t.outShape}});I.push(Y);for(let H of I)n.disposeIntermediateTensorInfo(H);return J}function qae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=n,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,s.shape,a,l,i,p,!1,m),d;if(c.filterHeight===1&&c.filterWidth===1&&c.dilationHeight===1&&c.dilationWidth===1&&c.strideHeight===1&&c.strideWidth===1&&(c.padInfo.type==="SAME"||c.padInfo.type==="VALID"))d=hx({x:o,filter:s,convInfo:c,backend:t});else if(B().getBool("WEBGL_CONV_IM2COL"))d=gx({x:o,filter:s,convInfo:c,backend:t});else{let h=new rg(c);d=t.runWebGLProgram(h,[o,s],"float32")}let f=ue({inputs:{x:d},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(d),f}var y3={kernelName:uo,backendName:"webgl",kernelFunc:qae};var _w=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Lw=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,u=n-1-e.padInfo.left,l=a?1:2,p=a?2:3,m=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${m}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${p}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},$w=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${s};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Bw=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=t-1-e.padInfo.front,l=n-1-e.padInfo.top,p=o-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${l}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function jae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:p}=n,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,p,a,1,i,l,!1,m),d=new _w(c);return t.runWebGLProgram(d,[o,s],"float32")}var T3={kernelName:dm,backendName:"webgl",kernelFunc:jae};function Xae(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:p}=n,m=C.convertConv2DDataFormat(l),c=C.computeConv2DInfo(a,s.shape,i,1,u,p,!1,m),d=new Lw(c);return t.runWebGLProgram(d,[o,s],"float32")}var x3={kernelName:lo,backendName:"webgl",kernelFunc:Xae};function Yae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u}=n,l=C.computeConv3DInfo(o.shape,s.shape,a,u,i),p=new Rw(l);return t.runWebGLProgram(p,[o,s],"float32")}var I3={kernelName:Nu,backendName:"webgl",kernelFunc:Yae};function Zae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:u}=n,l=C.computeConv3DInfo(o.shape,u,a,1,i),p=new $w(l);return t.runWebGLProgram(p,[o,s],"float32")}var C3={kernelName:fm,backendName:"webgl",kernelFunc:Zae};function Qae(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:a,strides:i,inputShape:u}=n,l=C.computeConv3DInfo(u,s.shape,i,1,a),p=new Bw(l);return t.runWebGLProgram(p,[o,s],"float32")}var k3={kernelName:hm,backendName:"webgl",kernelFunc:Qae};var Jae=Zs+`
  return cos(x);
`,eie=Ae({opSnippet:Jae}),S3={kernelName:po,backendName:"webgl",kernelFunc:eie};var tie=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,rie=Ae({opSnippet:tie}),v3={kernelName:mo,backendName:"webgl",kernelFunc:rie};var Ow=class{constructor(e,t,n,o,s){this.variableNames=["Image","Boxes","BoxInd"];this.outputShape=[];let[a,i,u,l]=e,[p]=t,[m,c]=n;this.outputShape=[p,m,c,l];let d=o==="bilinear"?1:0,[f,h]=[`${i-1}.0`,`${u-1}.0`],[g,y,T]=m>1?[`${(i-1)/(m-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[x,I,k]=c>1?[`${(u-1)/(c-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${I};

        float in_y = ${T};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${k};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var nie=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:l}=n,p=new Ow(o.shape,s.shape,i,u,l);return t.runWebGLProgram(p,[o,s,a],"float32")},A3={kernelName:pa,backendName:"webgl",kernelFunc:nie};var bx=class{constructor(e,t,n,o){this.op=e;this.outputShape=t;this.variableNames=["x"];this.customUniforms=[{name:"index",type:"float"}];let s=this.outputShape.length,a=this.op==="*"?"1.0":"0.0",i=n?a:`getX(${w3(s,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1],l="",p="";n?(l=o?`end != ${u-1}`:"end != 0",p=o?"end + 1":"end - 1"):(l=o?`end + pow2 < ${u}`:"end >= pow2",p=o?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Ve(s)} coords = getOutputCoords();
        int end = ${N3(s,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${p};
          ${N3(s,"coords",this.op)} = idx;
          val ${this.op}= getX(${w3(s,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function w3(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.x, ${e}.y`;if(r===3)return`${e}.x, ${e}.y, ${e}.z`;if(r===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function N3(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.y`;if(r===3)return`${e}.z`;if(r===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function yx(r,e,t,n,o,s){let a=e.shape.length,i=C.getAxesPermutation([n],a),u=e;i!=null&&(u=Vt({inputs:{x:e},backend:t,attrs:{perm:i}}));let l=C.getInnerMostAxes(1,a)[0];if(l!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${n}`);let p=u.shape[l],m=sr({inputs:{x:u},backend:t});for(let c=0;c<=Math.ceil(Math.log2(p))-1;c++){let d=new bx(r,u.shape,!1,s),f=[[c]],h=m;m=t.runWebGLProgram(d,[m],m.dtype,f),t.disposeIntermediateTensorInfo(h)}if(o){let c=new bx(r,u.shape,o,s),d=m;m=t.runWebGLProgram(c,[m],m.dtype),t.disposeIntermediateTensorInfo(d)}if(i!=null){let c=C.getUndoAxesPermutation(i),d=Vt({inputs:{x:m},backend:t,attrs:{perm:c}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(u),d}return m}function sie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;return yx("*",o,t,s,a,i)}var D3={kernelName:la,backendName:"webgl",kernelFunc:sie};function aie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;return yx("+",o,t,s,a,i)}var P3={kernelName:co,backendName:"webgl",kernelFunc:aie};function iie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let u=t.readSync(o.dataId),l=t.readSync(s.dataId),p=ox(u,l,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,p)}else if(o.shape.length===2){let u=t.bufferSync(o),l=t.bufferSync(s),p=TO(u,l,a,i);return t.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var F3={kernelName:gm,backendName:"webgl",kernelFunc:iie};var zw=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=[];this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function uie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n,i=o.shape[0],u=a==="NHWC"?o.shape[1]:o.shape[2],l=a==="NHWC"?o.shape[2]:o.shape[3],p=a==="NHWC"?o.shape[3]:o.shape[1],m=u*s,c=l*s,d=p/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=new zw(f,s,a);return t.runWebGLProgram(h,[o],o.dtype)}var M3={kernelName:ma,backendName:"webgl",kernelFunc:uie};var ng=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=e.outShape,this.enableShapeUniforms=Lt(this.outputShape.length);let a=e.filterHeight,i=e.filterWidth,u=e.outChannels/e.inChannels,l="",p="";n&&(o?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,p="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${m}
        ${p}
        setOutput(result);
      }
    `}};var og=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=e.outShape,this.enableShapeUniforms=Lt(this.outputShape.length);let a=e.outChannels/e.inChannels,i=e.padInfo.left,u=e.strideWidth,l=e.dilationWidth,p=e.filterHeight,m=e.filterWidth,c=m,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<m;y++)d+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;d+=`
    for (int r = 0; r < ${p}; r++) {
      `;for(let y=0;y<m;y++)d+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(c+1)/2;y++){let T=y*2;if(d+=`
          xC = xCCorner + ${T*l};
          `,u===1){if(T<m&&(i%2===1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }
              `,l===1&&T>0?d+=`
                xC${T} = vec4(xTexelC${T-2}.zw, xTexelC${T}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${T} = vec4(previous.zw, xTexelC${T}.xy);
                  } else {
                    xC${T} = vec4(0.0, 0.0, xTexelC${T}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                xC${T} = xTexelC${T};
                `,T+1<m)){let x=i%2===0?b.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                    xTexelC${T+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${T+1}.zw = vec2(0.0);
                    }
                    xTexelC${T+1}Ready = 1;
                  }
                  `,l>1&&(d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                      xTexelC${T} = getX(batch, xR, xCOffset, d1);
                      xTexelC${T}Ready = 1;
                    }
                    `),d+=`
                  xC${T+1} = vec4(xTexelC${T}.zw, xTexelC${T+1}.xy);
                  `):x===1?d+=`
                    xC${T+1} = xTexelC${T};
                    `:d+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                      xTexelC${T+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${T+1}.zw = vec2(0.0);
                      }
                      xTexelC${T+1}Ready = 1;
                    }

                    xC${T+1} = xTexelC${T+1};
                    `}}else T<m&&(i%2===1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${T+1}Ready == 0) {
                  xTexelC${T+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${T+1}.zw = vec2(0.0);
                  }
                  xTexelC${T+1}Ready = 1;
                }

                xC${T} = vec4(xTexelC${T}.zw, xTexelC${T+1}.zw);
              `,T+1<m&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${T+1} = vec4(xTexelC${T+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                  xTexelC${T+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T+1}.zw = vec2(0.);
                  }
                  xTexelC${T+1}Ready = 1;
                }

                xC${T} = vec4(
                  xTexelC${T}.xy, xTexelC${T+1}.xy);
              `,T+1<m&&(d+=`
                  xC${T+1} = vec4(xTexelC${T}.zw, xTexelC${T+1}.zw);
                `)));T<m&&(d+=`
            wTexel = getW(r, ${T}, d1, q);
            dotProd += xC${T} * vec4(wTexel.xz, wTexel.xz);
          `,T+1<m&&(d+=`
              wTexel = getW(r, ${T+1}, d1, q);
              dotProd += xC${T+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let f="",h="";n&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:f=`vec4 activation(vec4 x) {
          ${n}
        }`,h="result = activation(result);");let g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${h}
        setOutput(result);
      }
    `}};function lie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:l}=n,p=u;p==null&&(p=[1,1]),b.assert(C.eitherStridesOrDilationsAreOne(a,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${p}'`);let m=C.computeConv2DInfo(o.shape,s.shape,a,p,i,l,!0),c;B().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1?c=new og(m):c=new ng(m);let d=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];return t.runWebGLProgram(c,[o,s],"float32",d)}var R3={kernelName:fo,backendName:"webgl",kernelFunc:lie};var Gw=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Uw=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function pie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,filterShape:p}=n,m=C.computeConv2DInfo(o.shape,p,a,i,u,l,!0),c=new Gw(m);return t.runWebGLProgram(c,[o,s],"float32")}var E3={kernelName:bm,backendName:"webgl",kernelFunc:pie};function mie(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,inputShape:p}=n,m=C.computeConv2DInfo(p,s.shape,a,i,u,l,!0),c=new Uw(m);return t.runWebGLProgram(c,[o,s],"float32")}var _3={kernelName:ym,backendName:"webgl",kernelFunc:mie};var Ww=class{constructor(e){this.variableNames=["X"];this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function cie(r){let{inputs:e,backend:t}=r,{x:n}=e,o=[...n.shape,...n.shape],s=b.sizeFromShape(n.shape),a=ue({inputs:{x:n},backend:t,attrs:{shape:[s]}}),i=new Ww(s),u=t.runWebGLProgram(i,[a],a.dtype),l=ue({inputs:{x:u},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),l}var L3={kernelName:Tm,backendName:"webgl",kernelFunc:cie};var Kw=class{constructor(e){this.variableNames=["x","W"];this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:o,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:u,dilationHeight:l,dilationWidth:p}=e,{top:m,left:c}=o;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${a});
      const ivec2 pads = ivec2(${m}, ${c});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${p};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function die(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:u}=n,l=C.computeDilation2DInfo(o.shape,s.shape,a,i,"NHWC",u),p,m=new Kw(l);p=t.runWebGLProgram(m,[o,s],"float32");let c=ue({inputs:{x:p},backend:t,attrs:{shape:l.outShape}});return t.disposeIntermediateTensorInfo(p),c}var $3={kernelName:Du,backendName:"webgl",kernelFunc:die};function fie(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:a,summedDims:i,idDims:u}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(a.length,u,s);let{path:l,steps:p}=C.getEinsumComputePath(i,u),m=p.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of p[h]){let{permutationIndices:y,expandDims:T}=C.getEinsumPermutation(d,u[g]),x;C.isIdentityPermutation(y)?x=s[g]:(x=Vt({inputs:{x:s[g]},backend:t,attrs:{perm:y}}),f.push(x));let I=x.shape.slice();for(let k=0;k<T.length;++k)I.splice(T[k],0,1);b.arraysEqual(x.shape,I)||(x=ue({inputs:{x},backend:t,attrs:{shape:I}}),f.push(x)),c===null?c=x:(c=tg({inputs:{a:x,b:c},backend:t}),f.push(c))}h<m-1&&(l[h]>=0&&(c=Mp({inputs:{x:c},backend:t,attrs:{axis:l[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&t.disposeIntermediateTensorInfo(h);return c}var B3={kernelName:Pu,backendName:"webgl",kernelFunc:fie};var hie="return (x >= 0.0) ? x : (exp(x) - 1.0);",gie=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,bie=Ae({opSnippet:hie,packedOpSnippet:gie}),O3={kernelName:go,backendName:"webgl",kernelFunc:bie};var yie="return (b >= 1.0) ? a : a * (b + 1.0);",Tie=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,xie=r=>{let{inputs:e,backend:t}=r,{dy:n,y:o}=e,s=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Xa(Tie,n.shape,o.shape):new Ys(yie,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],n.dtype)},z3={kernelName:xm,backendName:"webgl",kernelFunc:xie};var Iie=`
  return vec4(equal(a, b));
`,Cie="return float(a == b);",kie=dt({opSnippet:Cie,packedOpSnippet:Iie,dtype:"bool",cpuKernelImpl:CO}),G3={kernelName:ca,backendName:"webgl",kernelFunc:kie};var Sie=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${C.ERF_P};
  float a1 = ${C.ERF_A1};
  float a2 = ${C.ERF_A2};
  float a3 = ${C.ERF_A3};
  float a4 = ${C.ERF_A4};
  float a5 = ${C.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,vie=Ae({opSnippet:Sie}),U3={kernelName:Bi,backendName:"webgl",kernelFunc:vie};var Aie=Zs+`
  return exp(x);
`,wie=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Vw=Ae({opSnippet:Aie,packedOpSnippet:wie,cpuKernelImpl:kO,dtype:"float32"}),W3={kernelName:bo,backendName:"webgl",kernelFunc:Vw};function Tx(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,a=s.shape.length,i=s.shape.slice(),u=o;return o<0&&(b.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+o+1),i.splice(u,0,1),ue({inputs:{x:s},backend:n,attrs:{shape:i}})}var K3={kernelName:ps,backendName:"webgl",kernelFunc:Tx};var V3="return exp(x) - 1.0;",Nie=Ae({opSnippet:V3,packedOpSnippet:V3,cpuKernelImpl:SO}),H3={kernelName:da,backendName:"webgl",kernelFunc:Nie};var xx=class{constructor(e,t,n){this.variableNames=["real","imag"];let o=t[1];this.outputShape=t;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${o}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function Ix(r,e,t){let n=t.texData.get(r.dataId),o=b.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],a=o/s,i=ue({inputs:{x:r},backend:t,attrs:{shape:[a,s]}}),u=i.shape,l=new xx("real",u,e),p=new xx("imag",u,e),m=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:u},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:u}],c=t.runWebGLProgram(l,m,"float32"),d=t.runWebGLProgram(p,m,"float32"),f=Bn({inputs:{real:c,imag:d},backend:t});t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d);let h=ue({inputs:{x:f},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(f),h}function Die(r){let{inputs:e,backend:t}=r,{input:n}=e;return Ix(n,!1,t)}var q3={kernelName:Im,backendName:"webgl",kernelFunc:Die};var Hw=class{constructor(e,t){this.outputShape=[];this.customUniforms=[{name:"value",type:"float"}];this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function yu(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||b.inferDtype(o),s==="string"){let a=b.getArrayFromDType(s,b.sizeFromShape(n));return a.fill(o),e.makeTensorInfo(n,s,a)}else{let a=new Hw(n,o),i=[[o]];return e.runWebGLProgram(a,[],s,i)}}var j3={kernelName:ai,backendName:"webgl",kernelFunc:yu};var qw=class{constructor(e){this.variableNames=["Image"];this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var X3={kernelName:fa,backendName:"webgl",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new qw(t.shape);return n.runWebGLProgram(o,[t],t.dtype)}};var Y3="return floor(x);",Pie=Ae({opSnippet:Y3,packedOpSnippet:Y3,cpuKernelImpl:vO}),Z3={kernelName:yo,backendName:"webgl",kernelFunc:Pie};var Fie=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Mie=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Rie=dt({opSnippet:Fie,packedOpSnippet:Mie,dtype:"int32"}),Q3={kernelName:To,backendName:"webgl",kernelFunc:Rie};var jw=class{constructor(e){this.variableNames=["A"];let t=Qt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var Xw=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;let t=Qt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}};var J3={kernelName:_l,backendName:"webgl",kernelFunc:Eie},sd;function Eie(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n,a=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,[u,l]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],p=[l,u],m=[l,u,s];(i||a)&&(sd==null&&(sd=document.createElement("canvas").getContext("2d")),sd.canvas.width=u,sd.canvas.height=l,sd.drawImage(o,0,0,u,l),o=sd.canvas);let c=t.makeTensorInfo(p,"int32");t.texData.get(c.dataId).usage=2,t.gpgpu.uploadPixelDataToTexture(t.getTexture(c.dataId),o);let d=B().getBool("WEBGL_PACK")?new Xw(m):new jw(m),f=t.runWebGLProgram(d,[c],"int32");return t.disposeData(c.dataId),f}function _ie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=C.convertConv2DDataFormat(p),g=C.computeConv2DInfo(o.shape,s.shape,u,m,l,c,!1,h),y,T=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=hx({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else if(B().getBool("WEBGL_CONV_IM2COL"))y=gx({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else{let I=a!=null,k=i!=null,w=d==="leakyrelu",F=d?Il(d,!1):null,M=new rg(g,I,F,k,w),R=[o,s],L=(O,W)=>{if(W==="NCHW"&&O.shape.length===1&&O.shape[0]!==1){let V=ue({inputs:{x:O},backend:t,attrs:{shape:[O.shape[0],1,1]}});return T.push(V),V}return O};if(I&&R.push(L(a,p)),k&&R.push(L(i,p)),w){let O=t.makeTensorInfo([],"float32",b.createScalarValue(f,"float32"));R.push(O),T.push(O)}y=t.runWebGLProgram(M,R,"float32")}let x=ue({inputs:{x:y},backend:t,attrs:{shape:g.outShape}});return T.push(y),T.forEach(I=>t.disposeIntermediateTensorInfo(I)),x}var eG={kernelName:Ss,backendName:"webgl",kernelFunc:_ie};function Lie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dilations:p,dimRoundingMode:m,activation:c,leakyreluAlpha:d}=n,f=[],h=p;h==null&&(h=[1,1]),b.assert(C.eitherStridesOrDilationsAreOne(u,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${h}'`);let g=C.computeConv2DInfo(o.shape,s.shape,u,h,l,m,!0),y=B().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,T=c?Il(c,y):null,x=[o,s],I=a!=null,k=i!=null,w=c==="leakyrelu";if(I&&x.push(a),k&&x.push(i),w){let L=t.makeTensorInfo([],"float32",b.createScalarValue(d,"float32"));x.push(L),f.push(L)}let F;y?F=new og(g,I,T,k,w):F=new ng(g,I,T,k,w);let M=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=t.runWebGLProgram(F,x,"float32",M);return f.forEach(L=>t.disposeIntermediateTensorInfo(L)),R}var tG={kernelName:vs,backendName:"webgl",kernelFunc:Lie};var Yw=class{constructor(e,t,n,o){this.sliceDim=e;this.strides=t;this.paramsShape=o;this.variableNames=["x","indices"];this.outputShape=n;let s=Ve(t.length),a=Ve(n.length),i=this.sliceDim>1?"strides[j]":"strides",u=Ve(o.length),l=o.length>1?"paramsShape[j]":"paramsShape";this.userCode=`
        ${s} strides = ${s}(${this.strides});
        ${u} paramsShape = ${u}(${this.paramsShape});
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            out_of_bounds = out_of_bounds || index < 0;
            out_of_bounds = out_of_bounds || index >= ${l};
            flattenIndex += index * ${i};
          }
          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function $ie(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,a=s[s.length-1],i=b.sizeFromShape(n.shape),[u,l,p,m]=C.prepareAndValidate(n,o),c=ue({inputs:{x:o},backend:t,attrs:{shape:[l,a]}}),d=ue({inputs:{x:n},backend:t,attrs:{shape:[b.sizeFromShape(n.shape)/p,p]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let y=t.readSync(o.dataId),T=t.bufferSync(n),x=AO(y,T,n.dtype,l,a,p,m,n.shape,i);return t.makeTensorInfo(u,n.dtype,x.values)}let f=new Yw(a,m,[l,p],n.shape),h=t.runWebGLProgram(f,[d,c],d.dtype),g=ue({inputs:{x:h},backend:t,attrs:{shape:u}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var rG={kernelName:ha,backendName:"webgl",kernelFunc:$ie};var Zw=class{constructor(e,t){this.variableNames=["A","indices"];this.outputShape=t,this.rank=t.length;let n=Ve(this.rank),o=Bie(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}};function Bie(r,e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push("index"):n.push(`${t[o]}`);return n.join()}function Qw(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n,u=b.parseAxisParam(a,o.shape)[0];if(B().get("DEBUG")){let T=t.readSync(s.dataId),x=o.shape[u];for(let I=0;I<T.length;++I){let k=T[I];b.assert(k<=x-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${x-1}]`)}}let l=C.segment_util.collectGatherOpShapeInfo(o,s,u,i),p=b.sizeFromShape(s.shape),m=[],c=ue({inputs:{x:o},backend:t,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=ue({inputs:{x:s},backend:t,attrs:{shape:[l.batchSize,p/l.batchSize]}});m.push(c),m.push(d);let f=[l.batchSize,l.outerSize,p/l.batchSize,l.sliceSize];if(t.shouldExecuteOnCPU([o,s])||o.dtype==="string"){let T=t.bufferSync(d),x=t.bufferSync(c),I=wO(x,T,f);return m.forEach(k=>t.disposeIntermediateTensorInfo(k)),t.makeTensorInfo(l.outputShape,I.dtype,I.values)}let h=new Zw(c.shape,f),g=t.runWebGLProgram(h,[c,d],c.dtype);m.push(g);let y=ue({inputs:{x:g},backend:t,attrs:{shape:l.outputShape}});return m.forEach(T=>t.disposeIntermediateTensorInfo(T)),y}var nG={kernelName:ms,backendName:"webgl",kernelFunc:Qw};var Oie="return float(a > b);",zie=`
  return vec4(greaterThan(a, b));
`,Gie=dt({opSnippet:Oie,packedOpSnippet:zie,cpuKernelImpl:NO,dtype:"bool"}),oG={kernelName:ga,backendName:"webgl",kernelFunc:Gie};var Uie="return float(a >= b);",Wie=`
  return vec4(greaterThanEqual(a, b));
`,Kie=dt({opSnippet:Uie,packedOpSnippet:Wie,dtype:"bool",cpuKernelImpl:DO}),sG={kernelName:Io,backendName:"webgl",kernelFunc:Kie};function Vie(r){let{inputs:e,backend:t}=r,{input:n}=e;return Ix(n,!0,t)}var aG={kernelName:Cm,backendName:"webgl",kernelFunc:Vie};var Hie="return float(!isnan(x) && !isinf(x));",qie=Ae({opSnippet:Hie,dtype:"bool"}),iG={kernelName:Oi,backendName:"webgl",kernelFunc:qie};var jie="return float(isinf(x));",Xie=Ae({opSnippet:jie,dtype:"bool"}),uG={kernelName:zi,backendName:"webgl",kernelFunc:Xie};var Yie="return float(isnan(x));",Zie=Ae({opSnippet:Yie,dtype:"bool"}),lG={kernelName:Gi,backendName:"webgl",kernelFunc:Zie};var Qie="return float(a < b);",Jie=`
  return vec4(lessThan(a, b));
`,eue=dt({opSnippet:Qie,packedOpSnippet:Jie,cpuKernelImpl:PO,dtype:"bool"}),pG={kernelName:ba,backendName:"webgl",kernelFunc:eue};var tue="return float(a <= b);",rue=`
  return vec4(lessThanEqual(a, b));
`,nue=dt({opSnippet:tue,packedOpSnippet:rue,cpuKernelImpl:FO,dtype:"bool"}),mG={kernelName:ya,backendName:"webgl",kernelFunc:nue};function oue(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,a=MO(n,o,s);return e.makeTensorInfo([a.length],"float32",a)}var cG={kernelName:km,backendName:"webgl",kernelFunc:oue};var sue=Zs+`
  return x < 0.0 ? 0./0. : log(x);
`,aue=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,iue=Ae({opSnippet:sue,packedOpSnippet:aue,cpuKernelImpl:RO}),dG={kernelName:ko,backendName:"webgl",kernelFunc:iue};var uue=Zs+`
  return log(1.0 + x);
`,lue=Ae({opSnippet:uue}),fG={kernelName:Ui,backendName:"webgl",kernelFunc:lue};var pue="return float(a >= 1.0 && b >= 1.0);",mue=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,cue=dt({opSnippet:pue,packedOpSnippet:mue,dtype:"bool"}),hG={kernelName:Ta,backendName:"webgl",kernelFunc:cue};var due="return float(!(x >= 1.0));",fue=Ae({opSnippet:due}),gG={kernelName:xa,backendName:"webgl",kernelFunc:fue};var hue="return float(a >= 1.0 || b >= 1.0);",gue=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,bue=dt({opSnippet:hue,packedOpSnippet:gue,dtype:"bool"}),bG={kernelName:Wi,backendName:"webgl",kernelFunc:bue};var Jw=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.outputShape=[];let a=t,i=e[3]-1;this.outputShape=e;let u,l=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${l})`:s===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}};var eN=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;let a=t,i=e[3]-1;this.outputShape=e;let u,l=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${l})`:s===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}};var yue=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:u}=n,l=B().getBool("WEBGL_PACK_NORMALIZATION")?new eN(o.shape,s,a,i,u):new Jw(o.shape,s,a,i,u);return t.runWebGLProgram(l,[o],o.dtype)},yG={kernelName:Mu,backendName:"webgl",kernelFunc:yue};var tN=class{constructor(e,t,n,o,s){this.variableNames=["inputImage","outputImage","dy"];this.outputShape=[];this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=o,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${s})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var Tue=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:u,alpha:l,beta:p}=n,m=new tN(o.shape,i,u,l,p);return t.runWebGLProgram(m,[o,s,a],o.dtype)},TG={kernelName:Sm,backendName:"webgl",kernelFunc:Tue};function xG(r,e,t,n){let o=b.sizeFromShape(e),a=b.sizeFromShape(r.shape)/o,i=ue({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),u=Jn(i,r.dtype,"max",n),l=ue({inputs:{x:u},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}function rN(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n,i=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,p=C.getAxesPermutation(l,i),m=p!=null,c=t.shouldExecuteOnCPU([o]),d=o;if(m){if(c){let x=t.texData.get(d.dataId).values,I=new Array(i);for(let F=0;F<I.length;F++)I[F]=o.shape[p[F]];let k=Pp(x,o.shape,o.dtype,p,I);d=t.makeTensorInfo(I,o.dtype);let w=t.texData.get(d.dataId);w.values=k}else d=Cl(o,p,t);l=C.getInnerMostAxes(l.length,i)}C.assertAxesAreInnerMostDims("max",l,i);let[f,h]=C.computeOutAndReduceShapes(d.shape,l),g=f;a&&(g=C.expandShapeToKeepDim(f,u));let y;if(c){let x=t.texData.get(d.dataId).values,I=EO(x,b.sizeFromShape(h),g,o.dtype);y=t.makeTensorInfo(g,o.dtype);let k=t.texData.get(y.dataId);k.values=I}else y=xG(d,h,g,t);return m&&t.disposeIntermediateTensorInfo(d),y}var IG={kernelName:So,backendName:"webgl",kernelFunc:rN};var xue=ux+`
  return max(a, b);
`,Iue=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+xl+`
  return result;
`,Cue=dt({opSnippet:xue,packedOpSnippet:Iue,cpuKernelImpl:_O}),CG={kernelName:vo,backendName:"webgl",kernelFunc:Cue};function kue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;qa(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;b.assert(C.eitherStridesOrDilationsAreOne(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=C.computePool2DInfo(o.shape,s,a,l,i,u);if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))return sr({inputs:{x:o},backend:t});let m=new vi(p,"max",!1);return t.runWebGLProgram(m,[o],o.dtype)}var kG={kernelName:Ao,backendName:"webgl",kernelFunc:kue};function Sue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dataFormat:u,dimRoundingMode:l}=n,p=[1,1,1],m=C.computePool3DInfo(o.shape,s,a,p,i,l,u),c=new Ep(m,"max",!1);return t.runWebGLProgram(c,[o],o.dtype)}var SG={kernelName:Ru,backendName:"webgl",kernelFunc:Sue};var nN=class{constructor(e){this.variableNames=["dy","maxPos"];this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,o=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,u=a-1-e.padInfo.left,l=s*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},oN=class{constructor(e){this.variableNames=["dy","maxPos"];this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterDepth,l=e.effectiveFilterHeight,p=e.effectiveFilterWidth,m=u-1-e.padInfo.front,c=l-1-e.padInfo.top,d=p-1-e.padInfo.left,f=u*l*p-1;this.userCode=`
      const ivec3 pads = ivec3(${m}, ${c}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${p} +
                  wR * ${p} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function vue(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:u,pad:l,dimRoundingMode:p}=n,m=[1,1,1],c=C.computePool3DInfo(a.shape,i,u,m,l,p),d=new Ep(c,"max",!0),f=t.runWebGLProgram(d,[a],a.dtype),h=new oN(c),g=t.runWebGLProgram(h,[o,f],a.dtype);return t.disposeIntermediateTensorInfo(f),g}var vG={kernelName:Am,backendName:"webgl",kernelFunc:vue};function Aue(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:a}=e,i=s;qa([s,a],"maxPoolGrad");let{filterSize:u,strides:l,pad:p,dimRoundingMode:m}=n,c=C.computePool2DInfo(i.shape,u,l,1,p,m),d=!0,f=new vi(c,"max",d),h=t.runWebGLProgram(f,[i],i.dtype),g=new nN(c),y=t.runWebGLProgram(g,[o,h],i.dtype);return t.disposeIntermediateTensorInfo(h),y}var AG={kernelName:vm,backendName:"webgl",kernelFunc:Aue};function wG(r,e,t,n){let o=new vi(t,"max",!1),s=n.runWebGLProgram(o,[r],"float32");o=new vi(t,"max",!0,!0,e);let a=n.runWebGLProgram(o,[r],"float32");return[s,a]}var NG={kernelName:wm,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=e,u=t;b.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let l=[1,1];b.assert(C.eitherStridesOrDilationsAreOne(s,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`);let p=C.computePool2DInfo(n.shape,o,s,l,a),[m,c]=wG(n,i,p,u);return[m,c]}};function DG(r,e,t,n){let o=b.sizeFromShape(e),a=b.sizeFromShape(r.shape)/o,i=ue({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),u=Jn(i,"float32","mean",n),l=ue({inputs:{x:u},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}var PG={kernelName:wo,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{keepDims:o,axis:s}=e,a=t,i=n.shape.length,u=b.parseAxisParam(s,n.shape),l=u,p=C.getAxesPermutation(l,i),m=p!=null,c=a.shouldExecuteOnCPU([n]),d=[],f=n;if(m){if(c){let I=a.texData.get(f.dataId).values,k=new Array(i);for(let M=0;M<k.length;M++)k[M]=n.shape[p[M]];let w=Pp(I,n.shape,n.dtype,p,k);f=a.makeTensorInfo(k,n.dtype);let F=a.texData.get(f.dataId);F.values=w}else f=Cl(n,p,a);d.push(f),l=C.getInnerMostAxes(l.length,i)}C.assertAxesAreInnerMostDims("sum",l,i);let[h,g]=C.computeOutAndReduceShapes(f.shape,l),y=h;o&&(y=C.expandShapeToKeepDim(h,u));let T=DG(f,g,y,a);for(let x of d)a.disposeIntermediateTensorInfo(x);return T}};function wue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,p=C.getAxesPermutation(l,i),m=o;p!=null&&(m=Vt({inputs:{x:o},backend:t,attrs:{perm:p}}),l=C.getInnerMostAxes(l.length,o.shape.length)),C.assertAxesAreInnerMostDims("min",l,i);let[c,d]=C.computeOutAndReduceShapes(m.shape,l),f=b.sizeFromShape(d),h=ue({inputs:{x:m},backend:t,attrs:{shape:[-1,f]}}),g=Jn(h,h.dtype,"min",t),y;if(a){let T=C.expandShapeToKeepDim(c,u);y=ue({inputs:{x:g},backend:t,attrs:{shape:T}})}else y=ue({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),p!=null&&t.disposeIntermediateTensorInfo(m),y}var FG={kernelName:No,backendName:"webgl",kernelFunc:wue};var Nue=ux+`
  return min(a, b);
`,Due=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+xl+`
  return result;
`,Pue=dt({opSnippet:Nue,packedOpSnippet:Due,cpuKernelImpl:LO}),MG={kernelName:Do,backendName:"webgl",kernelFunc:Pue};var sN=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=t.map((p,m)=>p[0]+e[m]+p[1]);let o=e.length,s=Ve(o),a=t.map(p=>p[0]).join(","),i=t.map((p,m)=>p[0]+e[m]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),l=n==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}};var aN=class{constructor(e,t,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=t.map((f,h)=>f[0]+e[h]+f[1]);let o=e.length,s=Ve(o),a=t.map(f=>f[0]).join(","),i=t.map((f,h)=>f[0]+e[h]).join(","),u=or("rc",o),l=or("source",o),p=`${u[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${l.slice(-2).join()})`,c=n==="reflect"?0:1,d="";if(o===1){let f=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${c};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${c};
        }
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${m});
        ${u[o-1]} += 1;
        if(${p}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${m});
        }
      `}else{let f=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${c}) +
                gte * ((end - 1) * 2 - source + ${c});
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${m});
        ${u[o-1]} += 1;
        if(${p}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${m});
        }
        rc = outputLoc;
        ${u[o-2]} += 1;
        if(${u[o-2]} < ${this.outputShape[o-2]}) {
          ${f}
          result[2] = getChannel(getX(${l.join()}), ${m});
          ${u[o-1]} += 1;
          if(${p}) {
            ${f}
            result[3] = getChannel(getX(${l.join()}), ${m});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}};var Fue=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{paddings:o,mode:s}=t,a=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new aN(n.shape,o,s):new sN(n.shape,o,s);return e.runWebGLProgram(a,[n],n.dtype)},RG={kernelName:Po,backendName:"webgl",kernelFunc:Fue};var Mue=`if (b == 0.0) return NAN;
  return mod(a, b);`,Rue=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+xl+`
  return result;
`,Eue=dt({opSnippet:Mue,packedOpSnippet:Rue}),EG={kernelName:Ki,backendName:"webgl",kernelFunc:Eue};var iN=class{constructor(e,t,n){this.variableNames=["probs"];this.customUniforms=[{name:"seed",type:"float"}];this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}};var _ue=`
if (a == b) {
  return 1.0;
};
return a / b;`,Lue=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,uN=dt({opSnippet:_ue,packedOpSnippet:Lue,checkOutOfBounds:!0}),_G={kernelName:ho,backendName:"webgl",kernelFunc:uN};var LG="return a - b;",lN=dt({opSnippet:LG,packedOpSnippet:LG,supportsComplex:!0,cpuKernelImpl:JO}),$G={kernelName:qo,backendName:"webgl",kernelFunc:lN};function pN(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=b.parseAxisParam([s],o.shape),i=rN({inputs:{x:o},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),u=C.expandShapeToKeepDim(i.shape,a),l=ue({inputs:{x:i},backend:t,attrs:{shape:u}}),p=lN({inputs:{a:o,b:l},backend:t}),m=Vw({inputs:{x:p},backend:t}),c=Mp({inputs:{x:m},backend:t,attrs:{axis:a,keepDims:!1}}),d=ue({inputs:{x:c},backend:t,attrs:{shape:u}}),f=uN({inputs:{a:m,b:d},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),f}var BG={kernelName:Vo,backendName:"webgl",kernelFunc:pN};function $ue(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n,u=i?o:pN({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),l=u.shape[0],p=u.shape[1],m=new iN(l,p,s),c=[[a]],d=t.runWebGLProgram(m,[u],"int32",c);return i||t.disposeIntermediateTensorInfo(u),d}var OG={kernelName:Nm,backendName:"webgl",kernelFunc:$ue};var Bue=Tr+`
  return -x;
`,Oue=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function zue(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.texData.get(n.dataId),[a,i]=BO(s.values,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,a)}let o;return B().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Xs(n.shape,Oue):o=new Sn(n.shape,Bue),t.runWebGLProgram(o,[n],n.dtype)}var zG={kernelName:cs,backendName:"webgl",kernelFunc:zue};var Gue=yr.nonMaxSuppressionV3Impl;function Uue(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=n,l=t.readSync(o.dataId),p=t.readSync(s.dataId),{selectedIndices:m}=Gue(l,p,a,i,u);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}var GG={kernelName:Ca,backendName:"webgl",kernelFunc:Uue};var Wue=yr.nonMaxSuppressionV4Impl;function Kue(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=n,p=t.readSync(o.dataId),m=t.readSync(s.dataId),{selectedIndices:c,validOutputs:d}=Wue(p,m,a,i,u,l);return[t.makeTensorInfo([c.length],"int32",new Int32Array(c)),t.makeTensorInfo([],"int32",new Int32Array([d]))]}var UG={kernelName:Vi,backendName:"webgl",kernelFunc:Kue};var Vue=yr.nonMaxSuppressionV5Impl;function Hue(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=n,p=t.readSync(o.dataId),m=t.readSync(s.dataId),c=a,d=i,f=u,h=l,{selectedIndices:g,selectedScores:y}=Vue(p,m,c,d,f,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var WG={kernelName:ka,backendName:"webgl",kernelFunc:Hue};var mN=class{constructor(e,t,n,o){this.variableNames=["indices"];this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${n}),
                      float(index == coords.y)));
      }
    `}};var que=r=>{let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n,u=b.sizeFromShape(o.shape),l=new mN(u,s,a,i),p=ue({inputs:{x:o},backend:t,attrs:{shape:[u]}}),m=t.runWebGLProgram(l,[p],o.dtype);t.disposeIntermediateTensorInfo(p);let c=[...o.shape,s],d=ue({inputs:{x:m},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(m),d},KG={kernelName:Sa,backendName:"webgl",kernelFunc:que};function sg(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=bu({inputs:{input:n},backend:t}),s=sg({inputs:{x:o},backend:t}),a=_p({inputs:{input:n},backend:t}),i=sg({inputs:{x:a},backend:t}),u=Bn({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return yu({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var VG={kernelName:Is,backendName:"webgl",kernelFunc:sg};function HG(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=bu({inputs:{input:n},backend:t}),s=HG({inputs:{x:o},backend:t}),a=_p({inputs:{input:n},backend:t}),i=sg({inputs:{x:a},backend:t}),u=Bn({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return yu({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var qG={kernelName:ds,backendName:"webgl",kernelFunc:HG};function jue(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return Tx({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(p=>{b.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),b.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=e.map(p=>{let m=Tx({inputs:{input:p},backend:t,attrs:{dim:o}});return i.push(m),m}),l=Mw({inputs:u,backend:t,attrs:{axis:o}});return i.forEach(p=>t.disposeIntermediateTensorInfo(p)),l}var jG={kernelName:fs,backendName:"webgl",kernelFunc:jue};var cN=class{constructor(e,t,n){this.variableNames=["x"];this.customUniforms=[{name:"value",type:"float"}];this.outputShape=t.map((l,p)=>l[0]+e[p]+l[1]);let o=e.length,s=Ve(o),a=t.map(l=>l[0]).join(","),i=t.map((l,p)=>l[0]+e[p]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}};var dN=class{constructor(e,t,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"value",type:"float"}];this.outputShape=t.map((h,g)=>h[0]+e[g]+h[1]);let o=e.length,s=Ve(o),a=t.map(h=>h[0]).join(","),i=t.map((h,g)=>h[0]+e[g]).join(","),u=or("rc",o),l=or("source",o),p=`${u[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${l.slice(-2).join()})`,c=[`${s} rc = outputLoc;`,`${u[o-1]} += 1;
       if(${p}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${u[o-2]} += 1;
       if(${u[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${u[o-1]} += 1;
         if(${p}) {`],d=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",f="";for(let h=0,g=o===1?2:4;h<g;h++)f+=`
        ${c[h]}
        if (${d}) {
          result[${h}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${h}] = getChannel(getX(${l.join()}), ${m});
        }
      `;f+=o===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var fN=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;if(b.sizeFromShape(o.shape)===0){let l=s.map((p,m)=>p[0]+o.shape[m]+p[1]);return yu({backend:t,attrs:{shape:l,value:a,dtype:o.dtype}})}let i=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new dN(o.shape,s,a):new cN(o.shape,s,a),u=[[a]];return t.runWebGLProgram(i,[o],o.dtype,u)},XG={kernelName:Mo,backendName:"webgl",kernelFunc:fN};var Xue=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Yue=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+xl+`
  return result;
`,Zue=dt({opSnippet:Xue,packedOpSnippet:Yue}),YG={kernelName:Ro,backendName:"webgl",kernelFunc:Zue};function Que(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,u=[],l=b.parseAxisParam(s,o.shape),p=l,m=C.getAxesPermutation(p,i),c=o;m!=null&&(c=Vt({inputs:{x:o},backend:t,attrs:{perm:m}}),p=C.getInnerMostAxes(p.length,i),u.push(c)),C.assertAxesAreInnerMostDims("prod",p,i);let d;if(t.shouldExecuteOnCPU([c])){let f=t.texData.get(c.dataId).values,{outVals:h,outShape:g,outDtype:y}=zO(c.shape,c.dtype,f,p);d=t.makeTensorInfo(g,y,h)}else{let[f,h]=C.computeOutAndReduceShapes(c.shape,p),g=b.sizeFromShape(h),y=ue({inputs:{x:c},backend:t,attrs:{shape:[-1,g]}}),T=Qi(o.dtype),x=Jn(y,T,"prod",t);d=ue({inputs:{x},backend:t,attrs:{shape:f}}),u.push(y),u.push(x)}if(a){u.push(d);let f=C.expandShapeToKeepDim(d.shape,l);d=ue({inputs:{x:d},backend:t,attrs:{shape:f}})}return u.forEach(f=>t.disposeIntermediateTensorInfo(f)),d}var ZG={kernelName:_o,backendName:"webgl",kernelFunc:Que};var hN=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=GO(n,o,s,a);return e.makeTensorInfo([i.length],a,i)},QG={kernelName:ii,backendName:"webgl",kernelFunc:hN};var Jue="return 1.0 / x;",ele=Ae({opSnippet:Jue}),JG={kernelName:Hi,backendName:"webgl",kernelFunc:ele};var tle=Tr+`
  return (x < 0.0) ? 0.0 : x;
`,rle=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,nle=Ae({opSnippet:tle,packedOpSnippet:rle}),eU={kernelName:Lo,backendName:"webgl",kernelFunc:nle};var ole=Tr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,sle=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ale=Ae({opSnippet:ole,packedOpSnippet:sle}),tU={kernelName:Oo,backendName:"webgl",kernelFunc:ale};var gN=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.outputShape=[];let[a,i,u,l]=e;this.outputShape=[a,t,n,l];let p=[o&&t>1?i-1:i,o&&n>1?u-1:u],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c;s?c="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":c="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/m[0]},
          ${p[1]/m[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var bN=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[a,i,u,l]=e;this.outputShape=[a,t,n,l];let p=[o&&t>1?i-1:i,o&&n>1?u-1:u],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c;s?c="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":c="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/m[0]},
          ${p[1]/m[1]},
          ${p[1]/m[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function ile(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,p=B().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new bN(o.shape,u,l,s,a):new gN(o.shape,u,l,s,a);return t.runWebGLProgram(p,[o],"float32")}var rU={kernelName:Bo,backendName:"webgl",kernelFunc:ile};var yN=class{constructor(e,t,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=t;let[,o,s]=t,[,a,i]=e,u=[n&&a>1?o-1:o,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],p=u[0]/l[0],m=u[1]/l[1],c=1/p,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function ule(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=new yN(s.shape,o.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var nU={kernelName:Pm,backendName:"webgl",kernelFunc:ule};var TN=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.outputShape=[];let[a,i,u,l]=e;this.outputShape=[a,t,n,l];let p=[o&&t>1?i-1:i,o&&n>1?u-1:u],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/m[0]},
          ${p[1]/m[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var xN=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[a,i,u,l]=e;this.outputShape=[a,t,n,l];let p=[o&&t>1?i-1:i,o&&n>1?u-1:u],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/m[0]},
          ${p[1]/m[1]},
          ${p[1]/m[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function lle(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,p=B().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new xN(o.shape,u,l,s,a):new TN(o.shape,u,l,s,a);return t.runWebGLProgram(p,[o],o.dtype)}var oU={kernelName:$o,backendName:"webgl",kernelFunc:lle};var IN=class{constructor(e,t,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=t;let[,o,s]=t,[,a,i]=e,u=[n&&a>1?o-1:o,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],p=u[0]/l[0],m=u[1]/l[1],c=1/p,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function ple(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=new IN(s.shape,o.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var sU={kernelName:Dm,backendName:"webgl",kernelFunc:ple};var CN=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let o=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,s=e.map((i,u)=>o(u)).join(","),a=Ve(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var kN=class{constructor(e,t){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let o=or("rc",n),s=`${o[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${o[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Ve(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(o.slice())};
          if(${s}){
            result.g = ${l(o.slice())};
          }
          if(${a}) {
            result.b = ${p(o.slice())};
            if(${s}) {
              result.a = ${m(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(f){return c(f)}function l(f){return f[n-1]="("+f[n-1]+" + 1)",c(f)}function p(f){return f[n-2]="("+f[n-2]+" + 1)",c(f)}function m(f){return f[n-1]="("+f[n-1]+" + 1)",f[n-2]="("+f[n-2]+" + 1)",c(f)}function c(f){let h=e.map((T,x)=>d(x,f)),g=h.join(","),y=h.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${y}))`}function d(f,h){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${h[f]} - 1`:`${h[f]}`}}};function mle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,a=o.shape.length,i=b.parseAxisParam(s,o.shape);if(a===0)return sr({inputs:{x:o},backend:t});let u=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kN(o.shape,i):new CN(o.shape,i);return t.runWebGLProgram(u,[o],o.dtype)}var aU={kernelName:va,backendName:"webgl",kernelFunc:mle};var SN=class{constructor(e,t){this.variableNames=["Image"];this.outputShape=[];this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],o=e[2];this.outputShape=e;let s="";typeof t=="number"?s=`float outputValue = ${t.toFixed(2)};`:s=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var iU={kernelName:Ra,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,u=new SN(n.shape,s),[l,p]=C.getImageCenter(a,n.shape[1],n.shape[2]),m=[[l,p,Math.sin(o),Math.cos(o)]];return i.runWebGLProgram(u,[n],n.dtype,m)}};var cle=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,dle=Ae({opSnippet:cle}),uU={kernelName:Aa,backendName:"webgl",kernelFunc:dle};var fle="return inversesqrt(x);",hle=Ae({opSnippet:fle,cpuKernelImpl:UO}),lU={kernelName:zo,backendName:"webgl",kernelFunc:hle};var ag=class{constructor(e,t,n,o,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"];this.outputShape=a;let u=Ve(s.length),l=Ve(a.length),p="";n===1?p="i":n===2&&(p="i, j");let m=`getIndices(${p})`,c="";o===1?c="i":o===2&&(c="i, coords[1]");let d=`getUpdates(${c})`,f=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${s});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${m});
              flattenedIndex += index * ${f};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function gle(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:u,sliceSize:l,strides:p,outputSize:m}=C.calculateShapes(s,o,a),c=[m/l,l];if(m===0)return t.makeTensorInfo(a,o.dtype);let d=ue({inputs:{x:o},backend:t,attrs:{shape:[u,i]}}),f=ue({inputs:{x:s},backend:t,attrs:{shape:[u,l]}}),h=t.makeTensorInfo([],"float32",new Float32Array([0])),g=new ag(u,i,d.shape.length,f.shape.length,p,c),y=t.runWebGLProgram(g,[f,d,h],f.dtype),T=ue({inputs:{x:y},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(h),T}var pU={kernelName:wa,backendName:"webgl",kernelFunc:gle};var vN=class{constructor(e,t,n,o){this.variableNames=["sortedSequence","values"];this.customUniforms=[{name:"numInputs",type:"int"}];this.outputShape=[e,n];let s="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=B().getNumber("WEBGL_VERSION")===2?s:a,u=o==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function ble(r){let{inputs:e,backend:t,attrs:n}=r,{sortedSequence:o,values:s}=e,{side:a}=n,i=new vN(o.shape[0],o.shape[1],s.shape[1],a),u=[[o.shape[1]]];return t.runWebGLProgram(i,[o,s],"int32",u)}var mU={kernelName:Fm,backendName:"webgl",kernelFunc:ble};var AN=class{constructor(e,t,n){this.variableNames=["c","a","b"];this.outputShape=t;let o,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",o="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],l=[];for(let p=0;p<t.length;p++)l.push(`${i[p]}`),p<e&&u.push(`${i[p]}`);o=u.join(),s=l.join()}let a=Ve(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function yle(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=new AN(n.shape.length,o.shape,o.shape.length);return t.runWebGLProgram(a,[n,o,s],Et(o.dtype,s.dtype))}var cU={kernelName:gs,backendName:"webgl",kernelFunc:yle};var Tle=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${C.SELU_SCALEALPHA};
  float scale = ${C.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,xle=Ae({opSnippet:Tle}),dU={kernelName:qi,backendName:"webgl",kernelFunc:xle};var Ile=Zs+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Cle=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,kle=Ae({opSnippet:Ile,packedOpSnippet:Cle,cpuKernelImpl:KO}),fU={kernelName:Uo,backendName:"webgl",kernelFunc:kle};var Sle=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,vle=Ae({opSnippet:Sle}),hU={kernelName:ji,backendName:"webgl",kernelFunc:vle};var Ale=Zs+`
  return sin(x);
`,wle=Ae({opSnippet:Ale}),gU={kernelName:Go,backendName:"webgl",kernelFunc:wle};var Nle=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Dle=Ae({opSnippet:Nle}),bU={kernelName:Na,backendName:"webgl",kernelFunc:Dle};var Ple=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Fle=Ae({opSnippet:Ple}),yU={kernelName:Xi,backendName:"webgl",kernelFunc:Fle};var Mle=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;b.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((y,T)=>y*T),u=[[0,0]];u.push(...a);for(let y=1+s.length;y<o.shape.length;++y)u.push([0,0]);let l=[],p=fN({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),m=C.getReshaped(p.shape,s,i,!1),c=C.getPermuted(m.length,s.length,!1),d=C.getReshapedPermuted(p.shape,s,i,!1),f=ue({inputs:{x:p},backend:t,attrs:{shape:m}}),h=Vt({inputs:{x:f},backend:t,attrs:{perm:c}}),g=ue({inputs:{x:h},backend:t,attrs:{shape:d}});return l.push(p),l.push(f),l.push(h),l.forEach(y=>t.disposeIntermediateTensorInfo(y)),g},TU={kernelName:ys,backendName:"webgl",kernelFunc:Mle};function Rle(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=t.readSync(n.dataId),u=t.readSync(o.dataId),l=t.readSync(s.dataId),p=t.readSync(a.dataId)[0],[m,c,d,f,h]=HO(i,n.shape,n.dtype,u,o.dtype,l,p);return[t.makeTensorInfo(c,n.dtype,m),t.makeTensorInfo([c[0]],o.dtype,d),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var xU={kernelName:_u,backendName:"webgl",kernelFunc:Rle};function Ele(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(t.readSync(o.dataId)),i=t.readSync(n.dataId),u=Array.from(t.readSync(s.dataId)),[l,p,m]=qO(i,n.shape,n.dtype,a,u);return[t.makeTensorInfo(p,n.dtype,l),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var IU={kernelName:Yi,backendName:"webgl",kernelFunc:Ele};function _le(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let a=t.readSync(n.dataId),i=t.readSync(o.dataId),u=t.readSync(s.dataId),[l,p]=ax(a,n.shape,n.dtype,i,u,!0);return t.makeTensorInfo(p,n.dtype,l)}var CU={kernelName:Lu,backendName:"webgl",kernelFunc:_le};function Lle(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let a=t.readSync(n.dataId),i=t.readSync(o.dataId),u=t.readSync(s.dataId),[l,p]=ax(a,n.shape,n.dtype,i,u);return t.makeTensorInfo(p,n.dtype,l)}var kU={kernelName:$u,backendName:"webgl",kernelFunc:Lle};function $le(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:u,numUpdates:l,sliceSize:p,strides:m,outputSize:c}=C.calculateShapes(s,o,i),d=!1;if(s.dtype==="string"){let y=t.bufferSync(o),T=t.bufferSync(s),x=b.decodeString(t.readSync(a.dataId)[0]),I=WO(y,T,i,c,p,l,u,m,x,d);return t.makeTensorInfo(i,I.dtype,I.values)}let f=new ag(l,u,o.shape.length,s.shape.length,m,[c,1],d),h=t.runWebGLProgram(f,[s,o,a],s.dtype),g=ue({inputs:{x:h},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(h),g}var SU={kernelName:Bu,backendName:"webgl",kernelFunc:$le};function Ble(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=b.parseAxisParam(a,o.shape)[0],u=C.prepareSplitSize(o,s,i),l=o.shape.length,p=new Array(l).fill(0),m=o.shape.slice();return u.map(c=>{let d=[...m];d[i]=c;let f=Ya({inputs:{x:o},backend:t,attrs:{begin:p,size:d}});return p[i]+=c,f})}var vU={kernelName:Ts,backendName:"webgl",kernelFunc:Ble};var AU="return sqrt(x);",Ole=Ae({opSnippet:AU,packedOpSnippet:AU,cpuKernelImpl:jO}),wU={kernelName:Wo,backendName:"webgl",kernelFunc:Ole};var zle="return x * x;",Gle=Ae({opSnippet:zle}),NU={kernelName:ui,backendName:"webgl",kernelFunc:Gle};var DU="return (a - b) * (a - b);",Ule=dt({opSnippet:DU,packedOpSnippet:DU}),PU={kernelName:Ho,backendName:"webgl",kernelFunc:Ule};function Wle({inputs:r,attrs:e,backend:t}){let{x:n}=r,o=Tr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,s=new Sn(n.shape,o);return t.runWebGLProgram(s,[n],n.dtype)}var FU={kernelName:Cs,backendName:"webgl",kernelFunc:Wle};var wN=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=n;let o=n.length,s=Ve(n.length),a=Ve(n.length),i="";if(o===1)i="coords * strides + begin";else{let u=0;i=n.map((l,p)=>(u++,n.length===1?`coords * strides[${p}] + begin[${p}]`:`coords[${u-1}] * strides[${p}] + begin[${p}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${e});
      ${s} strides = ${s}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function Kle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:T,end:x,strides:I}=xt.sliceInfo(o.shape,s,a,i,u,l,p,m,c),k;if(h)k=ue({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let F=xt.computeOutShape(T,x,I),M=Ya({inputs:{x:o},backend:t,attrs:{begin:T,size:F}});k=ue({inputs:{x:M},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(M)}else if(t.shouldExecuteOnCPU([o])){let M=t.readSync(o.dataId),R=Te(o.shape,o.dtype,M),L=XO(d,R,I,T);k=t.makeTensorInfo(f,o.dtype,L.values)}else{let M=new wN(T,I,d);k=t.runWebGLProgram(M,[o],o.dtype)}let w=ue({inputs:{x:k},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(k),w}var MU={kernelName:Da,backendName:"webgl",kernelFunc:Kle};function Vle(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:m}=e,c=t.readSync(p.dataId),d=t.readSync(m.dataId),[f,h]=YO(c,d,o,s,a,i,u,l);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(m.shape,"int32",h)]}var RU={kernelName:li,backendName:"webgl",kernelFunc:Vle};function Hle(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=t.readSync(s.dataId),u=t.readSync(a.dataId)[0],[l,p,m]=ZO(i,u,o),c=p.length;return[t.makeTensorInfo([c,2],"int32",l),t.makeTensorInfo([c],"string",p),t.makeTensorInfo([2],"int32",new Int32Array(m))]}var EU={kernelName:Ou,backendName:"webgl",kernelFunc:Hle};function qle(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=t.readSync(s.dataId),i=QO(a,o);return t.makeTensorInfo(s.shape,"int32",i)}var _U={kernelName:zu,backendName:"webgl",kernelFunc:qle};var jle="return tan(x);",Xle=Ae({opSnippet:jle}),LU={kernelName:Pa,backendName:"webgl",kernelFunc:Xle};var Yle=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Zle=Ae({opSnippet:Yle}),$U={kernelName:jo,backendName:"webgl",kernelFunc:Zle};var NN=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let o=Ve(this.rank),s=Qle(e);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function Qle(r){let e=r.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${r[0]})`;let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let o=0;o<r.length;o++)n.push(`imod(${t[o]}, ${r[o]})`);return n.join()}function DN(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(o.dtype==="string"||o.shape.length>5){let u=t.readSync(o.dataId),l=o.dtype==="string"?u.map(c=>b.decodeString(c)):u,p=Te(o.shape,o.dtype,l),m=ez(p,s);return t.makeTensorInfo(m.shape,m.dtype,m.values)}let a=new NN(o.shape,s);return t.runWebGLProgram(a,[o],o.dtype)}var BU={kernelName:Nn,backendName:"webgl",kernelFunc:DN};var PN=class{constructor(e){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}];this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},FN=class{constructor(e){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}];this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Lp(r,e){e!==null&&r.disposeIntermediateTensorInfo(e)}function OU(r){let e=1;for(;e<r;)e*=2;return e}function Jle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n,i=B().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=B().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=o.shape,p=l[l.length-1];if(t.shouldExecuteOnCPU([o])||p<i||s>u){let L=t.readSync(o.dataId),[O,W]=tz(L,l,o.dtype,s,a);return[t.makeTensorInfo(O.shape,O.dtype,O.values),t.makeTensorInfo(W.shape,W.dtype,W.values)]}if(s===0)return l[l.length-1]=0,[t.makeTensorInfo(l,o.dtype,[]),t.makeTensorInfo(l,"int32",[])];if(p===1)return[o,yu({attrs:{shape:l,dtype:"int32",value:0},backend:t})];let m=t.texData.get(o.dataId),c=m!==null&&m.isPacked,d=c?t.unpackTensor(o):o,h=b.sizeFromShape(l)/p,g=ue({inputs:{x:d},attrs:{shape:[h,p]},backend:t});c&&Lp(t,d);let y=OU(s),T=OU(p),x=null,I=()=>x===null?[g,g]:[g,x],k=(L,O,W)=>{let V=I(),j=new PN(W),Y=[[p],[x===null?1:0],[Number.NEGATIVE_INFINITY],[L],[O]],J=x;x=t.runWebGLProgram(j,V,"int32",Y),Lp(t,J)};for(let L=1;L<y;L*=2){let O=L*2;for(let W=L;W>=1;W/=2)k(O,W,[h,T])}for(let L=T;L>y;L/=2){let O=I(),W=new FN([h,L/2]),j=[[p],[x===null?1:0],[y]],q=x;x=t.runWebGLProgram(W,O,"int32",j),Lp(t,q);let Y=y/2,J=Y*2;for(let H=Y;H>=1;H/=2)k(J,H,x.shape)}let w=x;x=Ya({inputs:{x},backend:t,attrs:{begin:0,size:[h,s]}}),Lp(t,w);let F=Qw({inputs:{x:g,indices:x},backend:t,attrs:{axis:1,batchDims:1}});Lp(t,g);let M=l.slice(0,-1);M.push(s),w=x,x=ue({inputs:{x},attrs:{shape:M},backend:t}),Lp(t,w);let R=F;return F=ue({inputs:{x:F},attrs:{shape:M},backend:t}),Lp(t,R),[F,x]}var zU={kernelName:Fa,backendName:"webgl",kernelFunc:Jle};var MN=class{constructor(e,t,n,o,s,a){this.variableNames=["Image","Transforms"];this.outputShape=a;let i=n==="nearest"?1:2,u;switch(o){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function epe(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=n,[p,m,c,d]=o.shape,[f,h]=l??[m,c],g=[p,f,h,d],y=new MN(m,c,a,i,u,g);return t.runWebGLProgram(y,[o,s],"float32")}var GU={kernelName:Ma,backendName:"webgl",kernelFunc:epe};function tpe(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;qa(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let a=n.readSync(s.dataId),{outputValues:i,outputShape:u,indices:l}=rz(a,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,i),n.makeTensorInfo([l.length],"int32",l)]}var UU={kernelName:Mm,backendName:"webgl",kernelFunc:tpe};function rpe(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,u=o.shape[s],l=new Array(i-1),p=0;for(let h=0;h<i;h++)h!==s&&(l[p++]=a.shape[h]);let m=[],c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let f=new Array(u);for(let h=0;h<f.length;h++){c[s]=h;let g=Ya({inputs:{x:a},backend:t,attrs:{begin:c,size:d}}),y=ue({inputs:{x:g},backend:t,attrs:{shape:l}});f[h]=y,m.push(g)}return m.forEach(h=>t.disposeIntermediateTensorInfo(h)),f}var WU={kernelName:xs,backendName:"webgl",kernelFunc:rpe};var RN=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,o=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[o,i];let u="0.0",l="sumValue",p=Math.floor(n/4)*4,m=n%4,c=`
        sumValue += dot(values, segFilter);
    `,d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${c}
        }

        int inIdx = inOffset + ${p};
        if (${m===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${c}
        } else if (${m===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${c}
        } else if (${m===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${c}
        }
        setOutput(${l});
      }
    `}};function npe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:a}=n,i=o.shape.length,u=[],l=0,p=C.getAxesPermutation([l],i),m=o;p!=null&&(m=Vt({inputs:{x:o},backend:t,attrs:{perm:p}}),u.push(m),l=C.getInnerMostAxes(1,i)[0]);let c=C.segment_util.computeOutShape(m.shape,l,a),d=b.sizeFromShape([m.shape[l]]),f=ue({inputs:{x:m},backend:t,attrs:{shape:[-1,d]}});u.push(f);let h=Qi(o.dtype),g=(I,k,w,F,M)=>{let R=I.shape[0],L=I.shape[1],O=C.segment_util.segOpComputeOptimalWindowSize(L,M),W={windowSize:O,inSize:L,batchSize:R,numSegments:M},V=new RN(W,k),j=t.compileAndRun(V,[I,w],F);if(u.push(j),j.shape[1]===M)return j;let q=hN({backend:t,attrs:{start:0,stop:M,step:1,dtype:"float32"}}),Y=DN({inputs:{x:q},backend:t,attrs:{reps:[L/O]}});return u.push(q),u.push(Y),g(j,k,Y,F,M)},y=g(f,"unsortedSegmentSum",s,h,a),T=ue({inputs:{x:y},backend:t,attrs:{shape:c}}),x=T;if(p!=null){u.push(T);let I=C.getUndoAxesPermutation(p);x=Vt({inputs:{x},backend:t,attrs:{perm:I}})}return u.forEach(I=>t.disposeIntermediateTensorInfo(I)),x}var KU={kernelName:Gu,backendName:"webgl",kernelFunc:npe};var ope=[Mz,Ez,_z,Lz,Bz,Oz,zz,Gz,Kz,Vz,Hz,qz,jz,Xz,Yz,Zz,Qz,Jz,e3,t3,r3,o3,s3,a3,p3,c3,d3,xz,h3,b3,y3,T3,x3,I3,C3,k3,S3,v3,A3,D3,P3,F3,M3,R3,E3,_3,L3,$3,B3,O3,z3,G3,U3,W3,K3,H3,q3,j3,X3,Z3,Q3,J3,eG,tG,rG,nG,oG,sG,Tz,aG,g3,iG,uG,lG,Iz,pG,mG,cG,dG,fG,hG,gG,bG,yG,TG,IG,CG,kG,SG,vG,AG,NG,PG,FG,MG,RG,EG,OG,Az,zG,GG,UG,WG,i3,KG,qG,jG,XG,YG,Cz,ZG,QG,u3,_G,JG,eU,tU,Nz,rU,nU,oU,sU,aU,iU,uU,lU,pU,mU,cU,dU,fU,hU,gU,bU,n3,BG,yU,TU,xU,IU,CU,kU,SU,vU,wU,NU,PU,FU,MU,RU,EU,_U,$G,Pz,LU,$U,BU,zU,GU,Fz,UU,WU,KU,VG];for(let r of ope)Zi(r);var kl=B();kl.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);kl.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);kl.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);kl.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);kl.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);kl.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);kl.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);kl.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!1);var spe="return a + b;",ape="return areal * breal - aimag * bimag;",ipe="return areal * bimag + aimag * breal;",upe="return a / b;",lpe="return a * b;",ppe="return (a - b) * (a - b);",mpe="return a - b;",cpe="return f32(a == b);",dpe="return vec4<f32>(a == b);",fpe="return f32(a > b);",hpe="return vec4<f32>(a > b);",gpe="return f32(a >= b);",bpe="return vec4<f32>(a >= b);",ype="return f32(a < b);",Tpe="return vec4<f32>(a < b);",xpe="return f32(a <= b);",Ipe="return vec4<f32>(a <= b);",Cpe="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",kpe=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Spe=`
  if (isnan(a)) { return a; }
  if (isnan(b)) { return b; }
  `,HU=`
  if (isNaN.r) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a) {
    resultTemp.a = uniforms.NAN;
  }
  `,vpe=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,Ape=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,wpe="return f32(a != b);",Npe="return vec4<f32>(a != b);",Dpe=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,Ppe=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  ${HU}
  return resultTemp;
  `,Fpe="if (a < 0.0) { return b * a; }  return a;",Mpe=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function VU(r,e){let t=e?HU:Spe;return e?`
    var resultTemp = vec4<f32>(${r}(a, b));
    let isNaN = isnanVec4(a) | isnanVec4(b);
    `+t+`
    return resultTemp;
  `:t+`
    return ${r}(a, b);
  `}function $p(r,e){switch(r){case 0:return lpe;case 1:return spe;case 2:return mpe;case 3:return upe;case 4:return e?dpe:cpe;case 5:return e?hpe:fpe;case 6:return e?bpe:gpe;case 7:return e?Tpe:ype;case 8:return e?Ipe:xpe;case 9:return e?kpe:Cpe;case 10:return e?Npe:wpe;case 11:return ppe;case 12:return e?Ape:vpe;case 14:return e?Mpe:Fpe;case 15:return VU("max",e);case 16:return VU("min",e);case 13:return e?Ppe:Dpe;case 17:return ape;case 18:return ipe;default:throw new Error(`BinaryType ${r} is not implemented!`)}}var Rpe="return abs(a);",Epe="return ceil(a);",_pe="return cos(a);",Lpe=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,$pe="return exp(a) - 1.0;",Bpe="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Ope=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,zpe="return exp(a);",Gpe="return floor(a);",Upe="return a;",Wpe=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,Kpe="return f32(!(a >= 1.0));",Vpe="return -a;",Hpe="if (a < 0.0) { return uniforms.alpha * a; } return a;",qpe=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,jpe="return select(a, 0.0, a < 0.0);",Xpe="return clamp(a, 0.0, 6.0);",Ype="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Zpe=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,Qpe="return 1.0/sqrt(a);",Jpe="return 1.0 / (1.0 + exp(-1.0 * a));",eme="return sin(a);",tme=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,rme="return sqrt(a);",nme="return a * a;",ome=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,sme="return f32(i32((a)));";function Tu(r,e){switch(r){case 0:return Rpe;case 2:return _pe;case 3:return Lpe;case 1:return Epe;case 4:return e?Ope:Bpe;case 5:return zpe;case 6:return $pe;case 7:return Gpe;case 8:return Upe;case 9:return Wpe;case 10:return Kpe;case 11:return Vpe;case 14:return e?qpe:Hpe;case 12:return e?Zpe:jpe;case 13:return e?Ype:Xpe;case 15:return Qpe;case 18:return Jpe;case 16:return eme;case 17:return tme;case 19:return rme;case 20:return nme;case 21:return ome;case 22:return sme;default:throw new Error(`BinaryType ${r} is not implemented!`)}}var Vr=r=>{switch(r){case 1:return"f32";case 2:return"vec2<f32>";case 3:return"vec3<f32>";case 4:return"vec4<f32>";default:throw new Error(`${r}-component is not supported.`)}};function Hr(r,e=!1,t=!1,n=3){if(r===null)return"";let o="";if(r==="linear")o=Tu(8);else if(r==="relu")o=Tu(12,t);else if(r==="elu")o=Tu(4,t);else if(r==="relu6")o=Tu(13,t);else if(r==="prelu")o=$p(14,t);else if(r==="sigmoid")o=Tu(18,t);else if(r==="leakyrelu")o=Tu(14,t);else throw new Error(`Activation ${r} has not been implemented for the WebGPU backend.`);let a=Vr(t?4:1),i="";return e?i=`
      fn activation(a : ${a}, coords : vec${n}<i32>) -> ${a} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${o}
      }`:i=`
      fn activation(a : ${a}, coords : vec${n}<i32>) -> ${a} {
        ${o}
      }`,i}function qr(r,e){return`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      ${e?"value = activation(value, coords);":""}
      `}var Cx={};je(Cx,{ArrayBufferToTypedArray:()=>LN,GPUBytesPerElement:()=>_N,computeDispatch:()=>he,computeWorkGroupSizeForConv2d:()=>ig,computeWorkGroupSizeForMatMul:()=>EN,computeWorkPerThreadForConv2d:()=>ug,flatDispatchLayout:()=>Se,isWebGPUSupported:()=>lg,tilesFitEvenlyIntoShape:()=>ame});var Bp=r=>{let e=1;for(let t=0;t<r.length;t++)e*=r[t];return e};function ame(r,e){if(r.length!==e.length)throw new Error(`Cannot compute whether rank ${r.length} tiles fit evenly into rank ${e.length} shape - ranks must match.`);return e.every((t,n)=>t%r[n]===0)}function he(r,e,t=[1,1,1],n=[1,1,1]){let[o,s,a]=[Math.ceil(Bp(r.x.map(i=>e[i]))/(t[0]*n[0])),r.y?Math.ceil(Bp(r.y.map(i=>e[i]))/(t[1]*n[1])):1,r.z?Math.ceil(Bp(r.z.map(i=>e[i]))/(t[2]*n[2])):1];return[o,s,a]}function ig(r,e,t=!1){if(t)return[8,8,1];let n=Bp(r.x.map(s=>e[s])),o=Bp(r.y.map(s=>e[s]));return n<=4?[4,16,1]:o<=4?[16,4,1]:[16,16,1]}function EN(r,e,t){return r===1?[32,1,1]:t===1?[1,32,1]:[8,8,1]}function ug(r,e,t=!1){if(t)return[4,4,1];let n=Bp(r.x.map(s=>e[s])),o=Bp(r.y.map(s=>e[s]));return n<=4?[1,2,1]:o<=4?[2,1,1]:[2,2,1]}function Se(r){return{x:r.map((e,t)=>t)}}function _N(r){if(r==="float32"||r==="int32"||r==="bool"||r==="string")return 4;if(r==="complex64")return 8;throw new Error(`Unknown dtype ${r}`)}function LN(r,e){if(e==="float32")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${e}`)}function lg(){return(typeof window<"u"||typeof WorkerGlobalScope<"u")&&!!navigator.gpu}var ime=(r,e)=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(
          t * TileInner + inputRow,
          globalRowStart / ${e} + inputCol, globalId);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(
          globalRow + innerRow,
          t * TileInner / ${e} + inputCol, globalId);
        `,ume=(r,e)=>r?`
        let ACached0 = mm_Asub[k * InnerElementSize][localRow];
        let ACached1 = mm_Asub[k * InnerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * InnerElementSize + 2][localRow];
        ${e===3?"":"let ACached3 = mm_Asub[k * InnerElementSize + 3][localRow];"}
        for (var i = 0; i < RowPerThread; i = i + 1) {
          acc[i] = BCached[0] * ACached0[i] + acc[i];
          acc[i] = BCached[1] * ACached1[i] + acc[i];
          acc[i] = BCached[2] * ACached2[i] + acc[i];
          ${e===3?"":"acc[i] = BCached[3] * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < RowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached[0] * ACached.x + acc[i];
          acc[i] = BCached[1] * ACached.y + acc[i];
          acc[i] = BCached[2] * ACached.z + acc[i];
          ${e===3?"":"acc[i] = BCached[3] * ACached.w + acc[i];"}
        }`;function pg(r,e,t,n,o=4,s=!1){let a=s?e:n,i=s?n:e,u=s?r[1]:o;return b.assert((s&&e===t||n%4===0||n%3===0)&&r[0]===4&&(o===3||o===4),()=>`tileInner ${n} must be divisible by 4|3. ColPerThread ${r[0]} must be 4.
           innerElementSize ${o} must be 3|4.`),`
  var<workgroup> mm_Asub : array<array<vec${u}<f32>, ${a/u}>, ${i}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${t/r[0]}>, ${n}>;

  const RowPerThread = ${r[1]};
  const ColPerThread = ${r[0]};
  const InnerElementSize = ${o};
  const TileInner = ${n};

  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
          @builtin(workgroup_id) workgroupId: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;

    let localRow = i32(localId.y);
    let tileRow = ${e===1?"0":"localRow * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${e===1?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let globalRowStart = i32(workgroupId.y) * ${e};

    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, RowPerThread>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    let RowPerThreadB = TileInner / i32(workGroupSizeY);
    let tileRowB = localRow * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${ime(s,u)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / InnerElementSize; k = k + 1) {
            BCached[0] = mm_Bsub[k * InnerElementSize][tileCol];
            BCached[1] = mm_Bsub[k * InnerElementSize + 1][tileCol];
            BCached[2] = mm_Bsub[k * InnerElementSize + 2][tileCol];
            ${o===3?"":"BCached[3] = mm_Bsub[k * InnerElementSize + 3][tileCol];"}

            ${ume(s,o)}
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
  }`}var $N=class{constructor(e,t,n,o,s=!1,a=null,i=null,u=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[8,8,1];this.isVec4=!0;this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1&&!s?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let l=a!=null,p=u!=null;l&&this.variableNames.push("bias"),p&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=t[1]===1&&!s?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=l,this.activation=i,this.hasPreluActivationWeights=p,this.batchAEqualOne=n,this.batchBEqualOne=o,this.transposeA=s;let m=s?e[1]:e[2];this.fitAOuter=t[1]%this.tileAOuter===0,this.fitBOuter=t[2]%this.tileBOuter===0,this.fitInner=m%this.tileInner===0,this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.elementsPerThread}_${this.batchAEqualOne}_${this.batchBEqualOne}_${this.transposeA}`}getUserCode(){let e=this.fitAOuter&&this.fitInner?"return A[batch * batchASize + row * uniforms.aShape[2] / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.aShape[1], uniforms.aShape[2]))) {
            return A[batch * batchASize + row * uniforms.aShape[2] / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitInner&&this.fitBOuter?"return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`;return`
      ${Hr(this.activation,this.hasPreluActivationWeights,!0)}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        ${this.batchAEqualOne?`
          let batchASize = 0;
          let batch = 0;
        `:`
          let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / 4;
          let batch = i32(globalId.z);
        `}

        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        ${this.batchBEqualOne?`
          let batchBSize = 0;
          let batch = 0;
          `:`
          let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / 4;
          let batch = i32(globalId.z);
       `}
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let coords = vec3<i32>(batch, row, col * 4);
          ${qr(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], value);
        }
      }
      ${pg(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,4,this.transposeA)}
    `}};function qU(r,e){if(Math.max(...r)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let t=r.length,n=r.map(s=>`${e}[${s}]`),o=new Array(t-1);o[t-2]=n[t-1];for(let s=t-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}var YU=(r,e,t,n)=>{let o={dtype:n.dtype,shape:n.shape},s=lme(t,o,e),a=r.createShaderModule({code:s,label:e.constructor.name});return r.createComputePipeline({compute:{module:a,entryPoint:"main"},label:e.constructor.name,layout:"auto"})};function ar(r){if(r<=1)return"i32";if(r===2)return"vec2<i32>";if(r===3)return"vec3<i32>";if(r===4)return"vec4<i32>";if(r===5)return"vec5";if(r===6)return"vec6";throw Error(`GPU for rank ${r} is not yet supported`)}function Ai(r){if(r===0)return"x";if(r===1)return"y";if(r===2)return"z";if(r===3)return"w";if(r===4)return"u";if(r===5)return"v";throw Error(`Index ${r} is not yet supported`)}function ve(){return`
    ${Za()}
      let index = getGlobalIndex();
`}function Za(){return`
  ${Op()}
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;
`}function Op(){return`
  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function lme(r,e,t){let n=[];if(n.push(`
      const workGroupSizeX = ${t.workGroupSize[0]}u;
      const workGroupSizeY = ${t.workGroupSize[1]}u;
      const workGroupSizeZ = ${t.workGroupSize[2]}u;

      var<private> localId: vec3<u32>;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${QU(t)?"  return i32(globalId.x);":`  let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
                   localId.y * workGroupSizeX + localId.x;
               let workGroupID = (globalId - localId)/vec3<u32>(
                   workGroupSizeX, workGroupSizeY, workGroupSizeZ);

               return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
                   workGroupID.y * numWorkgroups.x + workGroupID.x) *
                   (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
                   localInvocationIndex);
        `}
      }
    `),t.isFromPixels)return n.push(`
        struct Uniform {
          size            : i32,
          numChannels     : i32,
          outShapeStrides : vec2<i32>,
        };

        @group(0) @binding(0) var<storage, read_write> result: array<${ad(e.dtype,t.isVec4)}>;
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `),[jU,n.join(`
`),XU(e.shape),t.getUserCode()].join(`
`);let o=!1,s=!1,a="struct Uniforms { NAN : f32, ";t.variableNames.forEach((f,h)=>{let g=ar(r[h].shape.length);(g==="vec5"||g==="vec6")&&(s=!0),(o||s)&&(a+="@align(16) "),o=s,a+=`${f.charAt(0).toLowerCase()+f.slice(1)}Shape : ${g}, `});let i=ar(e.shape.length);s=i==="vec5"||i==="vec6",(o||s)&&(a+="@align(16) "),o=s,a+=`outShape : ${i}, `;let u=e.shape.length-1,l=ar(u);s=l==="vec5"||l==="vec6",(o||s)&&(a+="@align(16) "),o=s,a+=`
         outShapeStrides: ${l}, `,t.size&&(o&&(a+="@align(16) "),o=!1,a+="size : i32, "),t.uniforms&&(o&&(a+="@align(16) "),a+=t.uniforms),a+="};",n.push(a),t.atomic?n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${ad(e.dtype,t.isVec4)}>;
    `),t.variableNames.forEach((f,h)=>{n.push(`
      @group(0) @binding(${1+h}) var<storage, read> ${f}: array<${t.variableTypes?t.variableTypes[h]:ad(r[h].dtype,t.isVec4)}>;
        `)}),a!==""&&n.push(`
      @group(0) @binding(${1+t.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);let p=dme(e.shape,t.dispatchLayout),m=[jU,n.join(`
`),XU(e.shape),p,fme(e.shape.length)];t.atomic||m.push(hme(e.shape,e.dtype,t.isVec4));let c=r.map((f,h)=>cme(f,e.shape,t.variableTypes?t.variableTypes[h]==="vec4<f32>":t.isVec4,t.dispatchLayout.x.length===e.shape.length)).join(`
`);return m.push(c),m.push(t.getUserCode()),m.join(`
`)}function ZU(r,e,t,n){let o=r.shaderKey;if(r.isFromPixels)return o;let s=t.map(p=>p.dtype).concat(n.dtype),a=t.map(p=>C.getBroadcastDims(p.shape,n.shape)),i=t.map(p=>b.arraysEqual(p.shape,n.shape)).join("_"),u=a.map(p=>p.join("_")).join(";"),l=QU(r)?"flatDispatch":"";return o+="_"+(r.workGroupSize?r.workGroupSize.join(","):"")+e.map(p=>p.length).join(",")+s.join(",")+r.variableNames.join(",")+u+i+l,o}var jU=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));
  }
`;function XU(r){let e=r.length;if(e<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let t=b.computeStrides(r),n=ar(e),o=[];for(let a=0;a<e;a++)o.push(`d${a}`);if(t.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let s;return s="var index2 = index;"+t.map((a,i)=>{let u=`let ${o[i]} = index2 / uniforms.outShapeStrides.${Ai(i)}`,l=i===t.length-1?`let ${o[i+1]} = index2 - ${o[i]} * uniforms.outShapeStrides.${Ai(i)}`:`index2 = index2 - ${o[i]} * uniforms.outShapeStrides.${Ai(i)}`;return`${u}; ${l};`}).join(""),`
    fn getCoordsFromIndex(index : i32) -> ${n} {
      ${s}
      return ${n}(${o.join(",")});
    }
  `}function pme(r,e){let t=r.name,n=r.shape.length,o=ar(n),s="get"+t.charAt(0).toUpperCase()+t.slice(1),a=["d0","d1","d2","d3","d4","d5"].slice(0,n),i=a.map(p=>`${p} : i32`).join(", ");if(n<1)return e?`
        fn ${s}() -> vec4<f32> {
          return vec4<f32>(${t}[0]);
        }
      `:`
      fn ${s}() ->f32 {
        return f32(${t}[0]);
      }
    `;let u=`uniforms.${t.charAt(0).toLowerCase()+t.slice(1)}Shape`,l=`${n}D`;return n===0&&(l="1D"),e?`
      fn ${s}(${i}) -> vec4<f32> {
        return vec4<f32>(${t}[getIndexFromCoords${l}(${o}(${a.join(",")}),
          ${u}) / 4]);
      }
      `:`
    fn ${s}(${i}) -> f32 {
      return f32(${t}[getIndexFromCoords${l}(${o}(${a.join(",")}),
        ${u})]);
    }
   `}function mme(r,e,t,n){let o=r.name,s=o.charAt(0).toUpperCase()+o.slice(1),a="get"+s+"ByOutput",i=r.shape.length,u=e.length,l=ar(u);if(b.arraysEqual(r.shape,e)&&n)return t?`
      fn ${a}Index(globalIndex : i32) -> vec4<f32> {
        return vec4<f32>(${o}[globalIndex]);
      }

      fn ${a}Coords(coords : ${l}) -> vec4<f32> {
        return vec4<f32>(${o}[${u>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
      }
      `:`
    fn ${a}Index(globalIndex : i32) -> f32 {
      return f32(${o}[globalIndex]);
    }

    fn ${a}Coords(coords : ${l}) -> f32 {
      return f32(${o}[${u>1?"getOutputIndexFromCoords(coords)":"coords"}]);
    }
    `;let p=C.getBroadcastDims(r.shape,e),m=u-i,c="";if(i===0)return t?`
    fn ${a}Index(globalIndex : i32) -> vec4<f32> {
      return get${s}();
    }

    fn ${a}Coords(coords : ${l}) -> vec4<f32> {
      return get${s}();
    }
  `:`
    fn ${a}Index(globalIndex : i32) -> f32{
      return get${s}();
    }

    fn ${a}Coords(coords : ${l}) -> f32{
      return get${s}();
    }
  `;u<2&&p.length>=1?c="coords = 0;":c=p.map(g=>`coords.${Ai(g+m)} = 0;`).join(`
`);let d="";if(u<2&&i>0)d="coords";else if(u>1){let g=ar(i),y=r.shape.map((T,x)=>`coords.${Ai(x+m)}`).join(", ");d=`${g}(${y})`}else d="coords";let f=`uniforms.${o.charAt(0).toLowerCase()+o.slice(1)}Shape`,h=`${i}D`;return t?`
    fn ${a}Index(globalIndex : i32) -> vec4<f32> {
      var coords = getCoordsFromIndex(globalIndex);
      ${c}
      return ${o}[getIndexFromCoords${h}(${d}, ${f}) / 4];
    }

    fn ${a}Coords(coordsIn : ${l}) -> vec4<f32> {
      var coords = coordsIn;
      ${c}
      return ${o}[getIndexFromCoords${h}(${d}, ${f}) / 4];
    }
  `:`
  fn ${a}Index(globalIndex : i32) -> f32 {
    var coords = getCoordsFromIndex(globalIndex);
    ${c}
    return f32(${o}[getIndexFromCoords${h}(${d}, ${f})]);
  }

  fn ${a}Coords(coordsIn : ${l}) -> f32 {
    var coords = coordsIn;
    ${c}
    return f32(${o}[getIndexFromCoords${h}(${d}, ${f})]);
  }
`}function cme(r,e,t,n){let o=pme(r,t);return r.shape.length<=e.length&&(o+=mme(r,e,t,n)),o}function dme(r,e){let{x:t,y:n=[],z:o=[]}=e,s=r.length;if(t.length===s)return`fn getOutputCoords() -> ${ar(s)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let a="",i=[t,n,o],u=0;for(let c=0;c<i.length;c++){let d=i[c];if(d.length!==0)if(u+=d.length,d.length===1)a+=`let d${d[0]} = i32(globalId[${c}]);`;else{let f=qU(d,"uniforms.outShape");a+=`var index${c} = i32(globalId[${c}]);`;for(let h=0;h<f.length;h++)a+=`let d${d[h]} = index${c} / ${f[h]};`,h===f.length-1?a+=`let d${d[h+1]} = index${c} - d${d[h]} * ${f[h]};`:a+=`index${c} = index${c} - d${d[h]} * ${f[h]};`}}let l=[];for(let c=0;c<u;c++)l.push(`d${c}`);let p=ar(u),m=`fn getOutputCoords() -> ${p} {
  ${a}
`;return l.length===0?m+=`return ${p}(0); }`:m+=`return ${p}(${l.join(",")}); }`,m}function fme(r){let e="";switch(r){case 0:case 1:e+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:e+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:e+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:e+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:e+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:b.assert(!1,()=>`Unsupported ${r}D shape`);break}return e}function QU(r){return r.dispatch[1]===1&&r.dispatch[2]===1}function ad(r,e){return r==="float32"?e?"vec4<f32>":"f32":r==="int32"||r==="bool"?e?"vec4<i32>":"i32":r}function hme(r,e,t){let n=r.length,o=ad(e,t),s;if(t?s=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result[flatIndex] = ${o}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result[flatIndex] = ${o}(value);
    }`:s=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result[flatIndex] = ${o}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result[flatIndex] = ${o}(value);
    }`,n>=2){let a=["d0","d1","d2","d3","d4","d5"].slice(0,n),i=ar(n);t?s+=`
      fn setOutputAtCoords(${a.map(u=>`${u} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${a.map(u=>`${u} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:s+=`
      fn setOutputAtCoords(${a.map(u=>`${u} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${a.map(u=>`${u} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return s}var bme=r=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(
          t * TileInner + inputRow,
          globalRowStart + inputCol, globalId);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(
          globalRowStart + inputRow,
          t * TileInner + inputCol, globalId);
        `,yme=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function mg(r,e,t=!1,n=32){let o=r[1]*e[1],s=r[0]*e[0],a=t?o:n,i=t?n:o;b.assert(i%e[1]===0&&a%e[0]===0&&n%e[1]===0,()=>`tileAHight ${i} must be divisible by workGroupSize[1]${e[1]}, tileAWidth ${a} must be divisible by workGroupSize[0]${e[0]}, tileInner ${n} must be divisible by workGroupSize[1]${e[1]}`);let u=i/e[1],l=a/e[0],p=n/e[1];return`
    var<workgroup> mm_Asub : array<array<f32, ${a}>, ${i}>;
    var<workgroup> mm_Bsub : array<array<f32, ${s}>, ${n}>;
    const RowPerThread = ${r[1]};
    const ColPerThread = ${r[0]};
    const TileInner = ${n};

    @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
    fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
            @builtin(global_invocation_id) GlobalId : vec3<u32>,
            @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
            @builtin(workgroup_id) workgroupId: vec3<u32>) {
      localId = LocalId;
      globalId = GlobalId;
      numWorkgroups = NumWorkgroups;

      let tileRow = i32(localId.y) * RowPerThread;
      let tileCol = i32(localId.x) * ColPerThread;

      let globalRow = i32(globalId.y) * RowPerThread;
      let globalCol = i32(globalId.x) * ColPerThread;

      let globalRowStart = i32(workgroupId.y) * ${o};

      let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

      var acc : array<array<f32, ColPerThread>, RowPerThread>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let tileRowA = i32(localId.y) * ${u};
      let tileColA = i32(localId.x) * ${l};
      let tileRowB = i32(localId.y) * ${p};
      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${u}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${l}; innerCol = innerCol + 1) {
            let inputRow = tileRowA + innerRow;
            let inputCol = tileColA + innerCol;
            ${bme(t)}
          }
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${p}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${n} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ColPerThread>;
        for (var k = 0; k < TileInner; k = k + 1) {
          for (var inner = 0; inner < ColPerThread; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            ${yme(t)}
            for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          mm_write(globalRow + innerRow,
                   globalCol + innerCol,
                   acc[innerRow][innerCol], globalId);
        }
      }
    }
  `}var Tme=r=>r?`
      mm_readA(colA, globalRow, globalId),
      mm_readA(colA + 1, globalRow, globalId),
      mm_readA(colA + 2, globalRow, globalId),
      mm_readA(colA + 3, globalRow, globalId)
  `:`
      mm_readA(globalRow, colA, globalId),
      mm_readA(globalRow, colA + 1, globalId),
      mm_readA(globalRow, colA + 2, globalId),
      mm_readA(globalRow, colA + 3, globalId)
  `;function xme(r,e=!1){return b.assert(r[1]===1&&r[2]===1,()=>`A linear work group size is required. But got ${r}.`),`
    const TileSize = ${r[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;

    ${Za()}
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${Tme(e)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(globalRow, globalCol, acc, globalId);
    }
  `}var BN=class{constructor(e,t,n,o,s,a=!1,i=!1,u=null,l=null,p=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[16,16,1];this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let m=a?e[1]:e[2];this.workGroupSize=EN(t[1],m,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),b.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let c=u!=null,d=p!=null;c&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.transposeA=a,this.transposeB=i,this.addBias=c,this.activation=l,this.hasPreluActivationWeights=d,this.batchAEqualOne=o,this.batchBEqualOne=s,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],m),this.shaderKey=`matMulPacked_${this.workPerThread}_${a}_${i}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.outputShape[1]>1}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getShapeFit(e,t,n){let o=this.workGroupSize[1]*this.workPerThread,s=this.workGroupSize[0]*this.workPerThread;this.tileInner=32,this.outputShape[1]===1&&(this.tileInner=this.workGroupSize[0]*4);let a=e%o===0,i=t%s===0,u=n%this.tileInner===0;return[a,i,u]}getUserCode(){let e=this.fitAOuter&&this.fitInner?"return A[batch * batchASize + row * uniforms.aShape[2] + col];":`
        if(row < uniforms.aShape[1] && col < uniforms.aShape[2]) {
          return A[batch * batchASize + row * uniforms.aShape[2] + col];
        }
        return 0.0;
         `,t;return this.transposeB===!1?t="return B[batch * batchBSize + row * uniforms.dimBOuter + col];":t="return B[batch * batchBSize + col * uniforms.dimInner + row];",`
      ${Hr(this.activation,this.hasPreluActivationWeights)}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchAEqualOne?`
        let batch = 0;
        let batchASize = 0;
        `:`
        let batch = i32(globalId.z);
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        `}
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchBEqualOne?`
        let batch = 0;
        let batchBSize = 0;
        `:`
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        `}
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        ${this.fitAOuter&&this.fitBOuter?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
        {
        var value = valueIn;
        let batch = i32(globalId.z);
        let coords = vec3<i32>(batch, row, col);
        ${qr(this.addBias,this.activation)}
        setOutputAtCoords(batch, row, col, value);
        }
      }
      ${this.outputShape[1]>1?mg([this.workPerThread,this.workPerThread,1],this.workGroupSize,this.transposeA,this.tileInner):xme(this.workGroupSize,this.transposeA)}
    `}};function Ime(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${Za()}
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var ON=class{constructor(e,t,n,o=!1,s=!1,a=null,i=null,u=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[256,1,1];this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize);let l=a!=null,p=u!=null;l&&this.variableNames.push("bias"),p&&this.variableNames.push("preluActivationWeights"),this.transposeA=o,this.transposeB=s,this.addBias=l,this.activation=i,this.hasPreluActivationWeights=p,this.batchAEqualOne=t,this.batchBEqualOne=n,this.shaderKey=`matMulReduce_${this.activation}_${o}_${s}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){let e;this.transposeA===!1?e="return f32(A[batch * batchASize + row * uniforms.dimInner + col]);":e="return f32(A[batch * batchASize + col * uniforms.dimAOuter + row]);";let t;return this.transposeB===!1?t="return f32(B[batch * batchBSize + row * uniforms.dimBOuter + col]);":t="return f32(B[batch * batchBSize + col * uniforms.dimInner + row]);",`
      ${Hr(this.activation,this.hasPreluActivationWeights)}

      fn mm_readA(batchIn: i32, row : i32, col : i32) -> f32 {
        ${this.batchAEqualOne?`
          let batchASize = 0;
          let batch = 0;
          `:`
          let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
          let batch = batchIn;
          `}
        ${e}
      }

      fn mm_readB(batchIn: i32, row : i32, col : i32) -> f32 {
        ${this.batchBEqualOne?`
          let batch = 0;
          let batchBSize = 0;
          `:`
          let batch = batchIn;
          let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
          `}
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, col);
        ${qr(this.addBias,this.activation)}
        setOutputAtCoords(batch, row, col, value);
      }
      ${Ime()}
    `}};function Cme(r){let e=r[1],t=r[0],n=e>t?e:t;return`
  var<workgroup> mm_Asub : array<array<f32, ${n}>, ${e}>;
  var<workgroup> mm_Bsub : array<array<f32, ${t}>, ${n}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${Za()}
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(globalRow, globalColA, globalId);
    var regB0 = mm_readB(globalRowB + 2 * tileRow, globalCol, globalId);
    var regB1 = mm_readB(globalRowB + 2 * tileRow + 1, globalCol, globalId);
    globalColA = globalColA + ${n};
    globalRowB = globalRowB + ${n};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(globalRow, globalColA, globalId);
      regB0 = mm_readB(globalRowB + 2 * tileRow, globalCol, globalId);
      regB1 = mm_readB(globalRowB + 2 * tileRow + 1, globalCol, globalId);
      globalColA = globalColA + ${n};
      globalRowB = globalRowB + ${n};

      for (var k = 0; k < ${n}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(globalRow, globalCol, acc, globalId);
  }
  `}var zN=class{constructor(e,t,n,o=null,s=null,a=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[16,8,1];b.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]/this.workGroupSize[1]),n[0]];let i=o!=null;i&&this.variableNames.push("bias");let u=a!=null;u&&this.variableNames.push("preluActivationWeights"),this.addBias=i,this.activation=s,this.hasPreluActivationWeights=u,this.batchAEqualOne=e[0]===1,this.batchBEqualOne=t[0]===1,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){let e=`var result: f32;
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          result =  A[batch * batchASize + row * uniforms.dimInner + col];
        } else {
          result = 0.0;
        }
        return result;`,t=`var result: f32;
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           result = B[batch * batchBSize + row * uniforms.dimBOuter + col];
         } else {
           result = 0.0;
         }
         return result;`;return`
      ${Hr(this.activation,this.hasPreluActivationWeights)}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchAEqualOne?`
          let batch = 0;
          let batchASize = 0;
          `:`
          let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
          let batch = i32(globalId.z);
          `}
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchBEqualOne?`
          let batch = 0;
          let batchBSize = 0;
          `:`
          let batch = i32(globalId.z);
          let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
          `}
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let coords = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${qr(this.addBias,this.activation)}
          setOutputAtCoords(batch, row, col, value);
        }
      }
      ${Cme(this.workGroupSize)}
    `}};var GN=class{constructor(e,t,n,o,s=!1,a=!1){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[8,8,1];this.atomic=!0;this.tileInner=32;b.assert(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]},this.elementsPerThread=[4,4,this.tileInner],this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1),this.dispatch=he(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workGroupSize,this.elementsPerThread),this.transposeA=s,this.transposeB=a,this.batchAEqualOne=n,this.batchBEqualOne=o,this.shaderKey=`matMulSplitK_${s}_${a}_${n}_${o}_${this.elementsPerThread}`}getUserCode(){let e;this.transposeA===!1?e=`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            value = A[batch * batchASize + row * uniforms.dimInner + col];
          }
          return value;`:e=`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            value = A[batch* batchASize + col * uniforms.dimAOuter + row];
          }
          return value;`;let t;return this.transposeB===!1?t=`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
            value = B[batch * batchBSize + row * uniforms.dimBOuter + col];
          }
          return value;`:t=`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
            value = B[batch * batchBSize + col * uniforms.dimInner + row];
          }
          return value;`,`
      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        var value = 0.0;
        ${e}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        var value = 0.0;
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          var value = valueIn;
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          
     var oldValue = atomicLoad(&(result[flatIndex]));
     var exchanged = false;
     for (; !exchanged;) {
       let newValueF32 = bitcast<f32>(oldValue) + value;
       let newValue = bitcast<i32>(newValueF32);
       let res = atomicCompareExchangeWeak(&(result[flatIndex]), oldValue, newValue);
       oldValue = res.old_value;
       exchanged = res.exchanged;
     }
     
        }
      }

      ${this.makeMatMulSplitKSource()}
    `}makeMatMulSplitKSource(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=this.elementsPerThread[1],o=this.elementsPerThread[0],s=this.tileInner/this.workGroupSize[0],a=this.tileInner/this.workGroupSize[1];return b.assert(this.tileInner%this.workGroupSize[0]===0&&this.tileInner%this.workGroupSize[1]===0,()=>`tileInner ${this.tileInner} must be divisible by workGroupSize[0]${this.workGroupSize[0]} and workGroupSize[1]${this.workGroupSize[1]}`),`
      var<workgroup> mm_Asub : array<array<f32, ${this.tileInner}>, ${e}>;
      var<workgroup> mm_Bsub : array<array<f32, ${t}>, ${this.tileInner}>;
      ${Za()}
        let tileRow = i32(localId.y) * ${n};
        let tileCol = i32(localId.x) * ${o};

        let globalRow = i32(globalId.y) * ${n};
        let globalCol = i32(globalId.x) * ${o};
        let batch = 0;
        let kStart = i32(globalId.z) * ${this.tileInner};

        // Load one tile of A into local memory.
        let tileColA = i32(localId.x) * ${s};
        for (var innerRow = 0; innerRow < ${n}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${s}; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;
            mm_Asub[inputRow][inputCol] = mm_readA(${this.batchAEqualOne?0:"batch"},
                globalRow + innerRow,
                kStart + inputCol);
          }
        }
        // Load one tile of B into local memory.
        let tileRowB = i32(localId.y) * ${a};
        for (var innerRow = 0; innerRow < ${a}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${o}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(${this.batchBEqualOne?0:"batch"},
                kStart + inputRow,
                globalCol + innerCol);
          }
        }

        workgroupBarrier();

        var acc : array<array<f32, ${o}>, ${n}>;
        // Loop over shared dimension. Compute acc values for a single thread.
        for (var k = 0; k < ${this.tileInner}; k = k + 1) {
          var BCached : array<f32, ${o}>;
          for (var inner = 0; inner < ${o}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${n}; innerRow = innerRow + 1) {
            let ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${o}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        for (var innerRow = 0; innerRow < ${n}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${o}; innerCol = innerCol + 1) {
            mm_write(batch, globalRow + innerRow, globalCol + innerCol, acc[innerRow][innerCol]);
          }
        }
      }
    `}},UN=class{constructor(e,t=null,n=null,o=null){this.uniforms="";this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.addBias=t!=null,this.hasPreluActivationWeights=o!=null,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${n}`}getUserCode(){return`
    ${Hr(this.activation,this.hasPreluActivationWeights)}
    ${ve()}
      if (index < uniforms.size) {
        let outCoord = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${qr(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}};var WN=class{constructor(e){this.variableNames=[];this.outputShape=[];this.uniforms="value : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${ve()}
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function rs(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||b.inferDtype(o),s==="string"){let a=b.getArrayFromDType(s,b.sizeFromShape(n));return a.fill(o),e.makeTensorInfo(n,s,a)}else{let a=new WN(n),i=[{type:"float32",data:[o]}];return e.runWebGPUProgram(a,[],s,i)}}var JU={kernelName:ai,backendName:"webgpu",kernelFunc:rs};function Me(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=b.sizeFromShape(n.shape),a=b.inferFromImplicitShape(o,s),i=b.sizeFromShape(a);return b.assert(s===i,()=>`The new shape (${a}) has ${i} elements and the old shape (${n.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var eW={kernelName:hs,backendName:"webgpu",kernelFunc:Me};function id({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){let l=r.shape.length,p=e.shape.length,m=t?r.shape[l-2]:r.shape[l-1],c=n?e.shape[p-1]:e.shape[p-2],d=t?r.shape[l-1]:r.shape[l-2],f=n?e.shape[p-2]:e.shape[p-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),y=b.sizeFromShape(h),T=b.sizeFromShape(g),I=Nr.assertAndGetBroadcastShape(r.shape.slice(0,-2),e.shape.slice(0,-2)).concat([d,f]);b.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let k=t?[y,m,d]:[y,d,m],w=n?[T,f,c]:[T,c,f],F=Me({inputs:{x:r},backend:o,attrs:{shape:k}}),M=Me({inputs:{x:e},backend:o,attrs:{shape:w}}),R=[F,M],L=Math.max(y,T),O=y===1,W=T===1,V=(m%4===0&&!t||d%4===0&&t)&&f%4===0&&!n,j=[F,M],q=[{type:"int32",data:[d]},{type:"int32",data:[f]},{type:"int32",data:[m]}],Y,J,H=[L,d,f];if(d*f<=128)Y=new ON(H,O,W,t,n,s,u,a);else if(L===1&&d<=128&&f<=48&&c>=2e3){if(J=rs({backend:o,attrs:{shape:H,value:0,dtype:r.dtype}}),Y=new GN(H,c,O,W,t,n),s||u){J=o.runWebGPUProgram(Y,j,r.dtype,q,J);let se=new UN(J.shape,s,u,a),ae=null,pe=[J];s&&pe.push(s),a&&pe.push(a),u==="leakyrelu"&&(ae=[{type:"float32",data:[i]}],se.uniforms+=" alpha : f32,");let ie=o.runWebGPUProgram(se,pe,J.dtype,ae);R.push(J);let be=Me({inputs:{x:ie},backend:o,attrs:{shape:I}});R.push(ie);for(let fe of R)o.disposeData(fe.dataId);return be}}else!t&&!n&&(d<=16&&(f<=512||c>=2*f)||f<=16&&(d<=512||m>=2*d))?Y=new zN(k,w,H,s,u,a):V?Y=new $N(k,H,O,W,t,s,u,a):Y=new BN(k,H,B().get("WEBGPU_MATMUL_WORK_PER_THREAD"),O,W,t,n,s,u,a);s&&j.push(s),a&&j.push(a),u==="leakyrelu"&&(q.push({type:"float32",data:[i]}),Y.uniforms+=" alpha : f32,"),J=o.runWebGPUProgram(Y,j,r.dtype,q,J);let oe=Me({inputs:{x:J},backend:o,attrs:{shape:I}});R.push(J);for(let se of R)o.disposeData(se.dataId);return oe}function kme(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:m}=n;return id({a:o,b:s,transposeA:u,transposeB:l,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:m,activation:p})}var tW={kernelName:ks,backendName:"webgpu",kernelFunc:kme};var kx=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.workGroupSize=[128,1,1];this.size=!0;this.outputShape=C.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${$p(this.op,!1)}
      }

      ${ve()}
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};var ud=class{constructor(e,t,n){this.size=!0;this.variableNames=["A","B"];this.outputShape=C.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Se(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length===1&&n.length>1&&t[0]<1024,this.useSharedMemoryWithB=n.length===1&&t.length>1&&n[0]<1024,this.useSharedMemoryWithA||this.useSharedMemoryWithB?(this.isVec4=!1,this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:t[0],this.shaderKey=`binary_${this.type}_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`,this.type="shared",this.workGroupSize=[256,1,1],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4):(b.arraysEqual(t,n)&&b.sizeFromShape(t)%4===0?(this.isVec4=!0,this.type="vec4",this.workPerThread=4):(this.isVec4=!1,this.type="plain",this.workPerThread=1),this.shaderKey=`binary_${this.type}_${e}`,this.workGroupSize=[128,1,1]),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1])}getUserCode(){let e;if(this.type==="shared"){let t=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",n=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);
          let b = sharedBuf[${t}];`:`let a = sharedBuf[${t}];
          let b = getBByOutputCoords(coords);`;e=`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${$p(this.op,this.isVec4)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${ve()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromIndex(flatIndex);

              ${n}
              setOutputAtIndex(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}else{let t=this.type==="vec4"?"vec4<f32>":"f32",n=$p(this.op,this.isVec4);e=`
       fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {
         ${n}
       }
       ${ve()}
         if (index < uniforms.size) {
           let a = getAByOutputIndex(index);
           let b = getBByOutputIndex(index);
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `}return e}};function ir(r){let{inputs:e}=r,{x:t}=e;return r.backend.incRef(t.dataId),{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}var rW={kernelName:Kn,backendName:"webgpu",kernelFunc:ir};function Qa(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),a=t.tensorMap.get(s.dataId),i=ir({inputs:{x:n},backend:t}),u=ir({inputs:{x:o},backend:t});return a.complexTensorInfos={real:i,imag:u},s}var nW={kernelName:Au,backendName:"webgpu",kernelFunc:Qa};var Ja=class{constructor(e,t){this.variableNames=["A"];this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Tu(this.op,!1)}
      }
      ${ve()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function ft({opType:r,cpuKernelImpl:e,dtype:t}){return({inputs:n,backend:o})=>{let{x:s}=n,a=o,i=t||s.dtype;if(a.shouldExecuteOnCPU([s])&&e!=null){let l=a.tensorMap.get(s.dataId),p=e(l.values,i);return a.makeTensorInfo(s.shape,i,p)}let u=new Ja(s.shape,r);return a.runWebGPUProgram(u,[s],i)}}function wt({opType:r,cpuKernelImpl:e,supportsComplex:t=!1,dtype:n}){return({inputs:o,backend:s})=>{let{a,b:i}=o,u=s;if(t&&a.dtype==="complex64"){let m=u.tensorMap.get(a.dataId),c=u.tensorMap.get(i.dataId),d,f;if(r!==0)[d,f]=[[m.complexTensorInfos.real,c.complexTensorInfos.real],[m.complexTensorInfos.imag,c.complexTensorInfos.imag]].map(g=>{let[y,T]=g,x={dataId:y.dataId,dtype:y.dtype,shape:a.shape},I={dataId:T.dataId,dtype:T.dtype,shape:i.shape},k=new ud(r,a.shape,i.shape);return u.runWebGPUProgram(k,[x,I],Et(y.dtype,T.dtype))});else{let g=new kx(17,a.shape,i.shape),y=new kx(18,a.shape,i.shape),T=[{dataId:m.complexTensorInfos.real.dataId,dtype:m.complexTensorInfos.real.dtype,shape:a.shape},{dataId:m.complexTensorInfos.imag.dataId,dtype:m.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:i.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:i.shape}];d=u.runWebGPUProgram(g,T,"float32"),f=u.runWebGPUProgram(y,T,"float32")}let h=Qa({inputs:{real:d,imag:f},backend:u});return u.disposeData(d.dataId),u.disposeData(f.dataId),h}let l=n||Et(a.dtype,i.dtype);if((a.dtype==="string"||i.dtype==="string"||u.shouldExecuteOnCPU([a,i]))&&e!=null){let m=u.tensorMap.get(a.dataId).values,c=u.tensorMap.get(i.dataId).values,d=a.dtype==="string"?C.fromUint8ToStringArray(m):m,f=a.dtype==="string"?C.fromUint8ToStringArray(c):c,[h,g]=e(a.shape,i.shape,d,f,l);return u.makeTensorInfo(g,l,h)}let p=new ud(r,a.shape,i.shape);return u.runWebGPUProgram(p,[a,i],l)}}var{addImpl:oW,ceilImpl:sW,concatImpl:aW,equalImpl:iW,expImpl:uW,expm1Impl:lW,floorImpl:pW,gatherNdImpl:mW,gatherV2Impl:cW,greaterEqualImpl:dW,greaterImpl:fW,lessEqualImpl:hW,lessImpl:gW,logImpl:bW,maxImpl:yW,maximumImpl:TW,minimumImpl:xW,multiplyImpl:IW,negImpl:CW,notEqualImpl:kW,prodImpl:SW,rangeImpl:vW,rsqrtImpl:AW,scatterImpl:wW,simpleAbsImpl:NW,sliceImpl:DW,stridedSliceImpl:PW,stringNGramsImpl:FW,subImpl:MW,tileImpl:RW,topKImpl:EW,transposeImpl:_W,uniqueImpl:MSr}=Kc;var Sme=ft({opType:0,cpuKernelImpl:NW}),LW={kernelName:is,backendName:"webgpu",kernelFunc:Sme};var vme=wt({opType:1,cpuKernelImpl:oW,supportsComplex:!0}),$W={kernelName:wn,backendName:"webgpu",kernelFunc:vme};var KN=class{constructor(e){this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(o=>{e.push(`let v${o} = get${o}ByOutputCoords(coords);`)});let t=this.variableNames.map(o=>`v${o}`).join(" + ");return`
      ${ve()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function Ame(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return ir({inputs:{x:n[0]},backend:t});let o=n.map(i=>i.dtype).reduce((i,u)=>Et(i,u)),s=n.map(i=>i.shape),a=new KN(s);return t.runWebGPUProgram(a,n,o)}var BW={kernelName:no,backendName:"webgpu",kernelFunc:Ame};var cg=class{constructor(e,t,n){this.workGroupSize=[64,1,1];this.variableNames=["x"];this.uniforms="infinityValue : f32,";this.size=!0;let o=[t];C.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.length),this.op=n==="min"?"<":">";let[s]=C.computeOutAndReduceShapes(e,o);this.outputShape=s.length===0?[1]:s,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${Ai(this.inputShape.length-1)}`,n=()=>{let s="";if(this.outputShape.length===1)this.inputShape.length!==1&&(s+="outputCoords,");else for(let a=0;a<this.outputShape.length;a++)s+=`outputCoords.${Ai(a)},`;return s};return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      ${ve()}
        let outputIndex = index / i32(workGroupSizeX);
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = getX(${n()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}};var VN=class{constructor(e,t){this.variableNames=["A"];this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      const TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${Op()}
      fn main(@builtin(local_invocation_id) localId : vec3<u32>,
              @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = A[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}};var HN=class{constructor(e,t){this.variableNames=["A"];this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=ar(this.outputShape.length),t=wme(this.newDim);return`
      ${ve()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function wme(r){let e=r.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);let t=new Array(e);for(let n=0;n<r.length;n++)t[r[n]]=`resRC.${Ai(n)}`;return t.join()}function vn(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,a=t,i=o.shape.length,u=new Array(i);for(let p=0;p<u.length;p++)u[p]=o.shape[s[p]];if(t.shouldExecuteOnCPU([o])){let m=a.tensorMap.get(o.dataId).values,c=_W(m,o.shape,o.dtype,s,u);return t.makeTensorInfo(u,o.dtype,c)}if(o.shape.length===2&&b.arraysEqual(s,[1,0])){let p=new VN(o.shape,s);return a.runWebGPUProgram(p,[o],o.dtype)}let l=new HN(o.shape,s);return a.runWebGPUProgram(l,[o],o.dtype)}var OW={kernelName:Dn,backendName:"webgpu",kernelFunc:vn};function Nme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=b.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=vn({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMax",[a[0]],u.shape.length);let p=new cg(u.shape,a[0],"max"),m=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],c=t.runWebGPUProgram(p,[u],"int32",m);return l.forEach(d=>t.disposeData(d.dataId)),c}var zW={kernelName:oo,backendName:"webgpu",kernelFunc:Nme};function Dme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=b.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=vn({inputs:{x:o},backend:t,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMin",[a[0]],u.shape.length);let p=new cg(u.shape,a[0],"min"),m=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],c=t.runWebGPUProgram(p,[u],"int32",m);return l.forEach(d=>t.disposeData(d.dataId)),c}var GW={kernelName:si,backendName:"webgpu",kernelFunc:Dme};var dg=class{constructor(e,t){this.variableNames=["x"];this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,";this.workGroupSize=[128,1,1];this.size=!0;this.outputShape=e.outShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${ve()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}};var fg=class{constructor(e){this.variableNames=["x"];this.uniforms="stride : vec2<i32>,";this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=e.outShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${ve()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};function Pme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1,p=C.computePool2DInfo(o.shape,s,a,l,i,u);if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))return ir({inputs:{x:o},backend:t});let m,c=[{type:"int32",data:[p.strideHeight,p.strideWidth]}];return p.filterHeight===1&&p.filterWidth===1?m=new fg(p):(m=new dg(p,"avg"),c.push({type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]})),t.runWebGPUProgram(m,[o],o.dtype,c)}var UW={kernelName:so,backendName:"webgpu",kernelFunc:Pme};function Fme(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;return id({a:o,b:s,transposeA:a,transposeB:i,backend:t})}var WW={kernelName:ao,backendName:"webgpu",kernelFunc:Fme};var jN=class{constructor(e,t){this.variableNames=["source"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.rank=t.length,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${ar(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e=ar(this.rank),t=Mme(this.rank),n;return this.start.length===1?n=this.outputShape.map((s,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((s,a)=>`sourceLoc.${qN[a]} = uniforms.start[${a}] + coords.${qN[a]};`),`
      ${ve()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},qN=["x","y","z","w","u","v"];function Mme(r){if(r===1)return"sourceLoc";if(r<=6)return qN.slice(0,r).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}function ei(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n,[i,u]=xt.parseSliceParams(o,s,a);if(xt.assertParamsValid(o,i,u),t.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=t.tensorMap.get(o.dataId),c=DW(m.values,i,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,c)}if(b.sizeFromShape(u)===0)return t.makeTensorInfo(u,o.dtype,[]);let l=new jN(i,u),p=[{type:"int32",data:i}];return t.runWebGPUProgram(l,[o],o.dtype,p)}var KW={kernelName:bs,backendName:"webgpu",kernelFunc:ei};var Rme=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;b.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((T,x)=>T*x),u=C.getReshaped(o.shape,s,i),l=C.getPermuted(u.length,s.length),p=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(p,a,s.length),d=[],f=Me({inputs:{x:o},backend:t,attrs:{shape:u}}),h=vn({inputs:{x:f},backend:t,attrs:{perm:l}}),g=Me({inputs:{x:h},backend:t,attrs:{shape:p}}),y=ei({inputs:{x:g},backend:t,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(T=>t.disposeData(T.dataId)),y},VW={kernelName:us,backendName:"webgpu",kernelFunc:Rme};var XN=wt({opType:10,dtype:"bool",cpuKernelImpl:kW}),HW={kernelName:Ia,backendName:"webgpu",kernelFunc:XN};function xu(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.tensorMap.get(n.dataId);return ir({inputs:{x:o.complexTensorInfos.real},backend:t})}var qW={kernelName:Eu,backendName:"webgpu",kernelFunc:xu};function jW(r,e){let t=new Ja(r.shape,22),n=e.runWebGPUProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function YN(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return ir({inputs:{x:o},backend:t});let a=It(o.shape),i=YN({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=Qa({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeData(i.dataId),u}if(o.dtype==="complex64"){let a=xu({inputs:{input:o},backend:t}),i=YN({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeData(a.dataId),i}if(!b.hasEncodingLoss(o.dtype,s)){let a=ir({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32")return jW(o,t);if(s==="bool"){let a=t.makeTensorInfo([],"bool",b.getTypedArrayFromDType("bool",1)),u=XN({inputs:{a:o,b:a},backend:t});return t.disposeData(a.dataId),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var XW={kernelName:Un,backendName:"webgpu",kernelFunc:YN};var Eme=ft({opType:1,cpuKernelImpl:sW}),YW={kernelName:io,backendName:"webgpu",kernelFunc:Eme};var ZN=class{constructor(e){this.variableNames=["A"];this.uniforms="minVal : f32, maxVal : f32,";this.workPerThread=4;this.workGroupSize=[64,1,1];this.isVec4=!0;this.size=!0;this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${ve()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isnan(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}};var QN=class{constructor(e){this.variableNames=["A"];this.uniforms="minVal : f32, maxVal : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${ve()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function _me(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i,u=[{type:"float32",data:[s]},{type:"float32",data:[a]}];return b.sizeFromShape(o.shape)%4===0?i=new ZN(o.shape):i=new QN(o.shape),t.runWebGPUProgram(i,[o],o.dtype,u)}var ZW={kernelName:Wn,backendName:"webgpu",kernelFunc:_me};var JN=class{constructor(e){this.uniforms="";this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=C.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let s=1;s<this.offsetLength;s++)e.push(`else if (yC < uniforms.offset${[s]}){ setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${s-1})); }`);let n=this.offsetLength,o=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${o})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${ve()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function zp(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.tensorMap.get(n.dataId);return ir({inputs:{x:o.complexTensorInfos.imag},backend:t})}var QW={kernelName:Fu,backendName:"webgpu",kernelFunc:zp};function ld(r,e,t){let n=r[0].dtype;if(n==="complex64"){let f=r.map(x=>xu({inputs:{input:x},backend:t})),h=r.map(x=>zp({inputs:{input:x},backend:t})),g=ld(f,e,t),y=ld(h,e,t),T=Qa({inputs:{real:g,imag:y},backend:t});return f.forEach(x=>t.disposeData(x.dataId)),h.forEach(x=>t.disposeData(x.dataId)),t.disposeData(g.dataId),t.disposeData(y.dataId),T}let o=t.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let f=r.map(k=>{let w=b.sizeFromShape(k.shape.slice(e));return Me({inputs:{x:k},backend:t,attrs:{shape:[-1,w]}})}),h=f.map(k=>({vals:t.readSync(k.dataId),shape:k.shape})),g=C.computeOutShape(f.map(k=>k.shape),1),y=f[0].shape[0]===1,T=aW(h,g,n,y),x=C.computeOutShape(r.map(k=>k.shape),e),I=t.makeTensorInfo(x,n,T);return f.forEach(k=>t.disposeData(k.dataId)),I}let s=t.device.limits.maxStorageBuffersPerShaderStage-1;if(r.length>s){let f=[];for(let g=0;g<r.length;g+=s){let y=r.slice(g,g+s);f.push(ld(y,e,t))}let h=ld(f,e,t);for(let g of f)t.disposeData(g.dataId);return h}let{tensors2D:a,outShape:i}=Lme(r,e,t),u=a.map(f=>f.shape),l=new JN(u),p=[],m=new Array(u.length-1);if(m.length>0){m[0]=u[0][1],p.push({type:"int32",data:[m[0]]});for(let f=1;f<m.length;f++)m[f]=m[f-1]+u[f][1],p.push({type:"int32",data:[m[f]]})}let c=t.runWebGPUProgram(l,a,a[0].dtype,p);a.forEach(f=>t.disposeData(f.dataId));let d=Me({inputs:{x:c},backend:t,attrs:{shape:i}});return t.disposeData(c.dataId),d}function Lme(r,e,t){let n=C.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>Me({inputs:{x:s},backend:t,attrs:{shape:[b.sizeFromShape(s.shape.slice(0,e)),b.sizeFromShape(s.shape.slice(e))]}})),outShape:n}}function eD(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],a=C.computeOutShape(e.map(l=>l.shape),s);if(b.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(l=>b.sizeFromShape(l.shape)>0);if(i.length===1)return ir({inputs:{x:i[0]},backend:t});let u=i.map(l=>l.shape);return C.assertParamsConsistent(u,s),ld(i,s,t)}var JW={kernelName:ls,backendName:"webgpu",kernelFunc:eD};function $me(r,e,t,n,o=!1,s=null,a=!1,i=4,u=4,l=4){let p=R=>{switch(R){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${R} is not supported.`)}},m=R=>{switch(R){case 1:return"return W[row * uniforms.wShape[3] + colIn];";case 4:return"return W[row * uniforms.wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${R} is not supported.`)}},c=r?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,d=r?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=r?"uniforms.xShape[1]":"uniforms.xShape[2]",h=r?"uniforms.xShape[2]":"uniforms.xShape[3]",g=r?"row":"col",y=r?"col":"row",T=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${g} / outWidth;
      let outCol = ${g} % outWidth;

      let WRow = ${y} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${y} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
      let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
      let xCh = ${y} % inChannels;
      var resData = ${Vr(i)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${h}) {
        ${c}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${p(i)}
      }
      return resData;`,x=r?e&&n?`
      let col = colIn * ${i};
      ${T}`:`
      let col = colIn * ${i};
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${T}
      }
      return ${Vr(i)}(0.0);`:n&&t?`
      let col = colIn * ${i};
      ${T}`:`
      let col = colIn * ${i};
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${T}
      }
      return ${Vr(i)}(0.0);`,I=`${m(u)}`,k=Vr(l),w=r?Vr(i):Vr(u),F=r?Vr(u):Vr(i);return`
      ${Hr(s,a,l===4,4)}
      fn mm_readA(row : i32, colIn : i32, globalId : vec3<u32>) -> ${w} {
        let batch = i32(globalId.z);
        ${r?x:I}
      }

      fn mm_readB(row : i32, colIn : i32, globalId : vec3<u32>) -> ${F} {
        let batch = i32(globalId.z);
        ${r?I:x}
      }

      fn mm_write(row : i32, colIn : i32, valueIn : ${k}, globalId : vec3<u32>) {
        let col = colIn * ${l};
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        let batch = i32(globalId.z);
        var value = valueIn;
        let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${d}
        ${qr(o,s)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}var tD=class{constructor(e,t,n,o,s=!1,a=null,i=!1){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workGroupSize=ig(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=ug(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4?(this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableTypes=["f32","vec4<f32>"]):(this.innerElementSize=4,this.variableTypes=["vec4<f32>","vec4<f32>"]),s&&(this.variableNames.push("bias"),this.variableTypes.push("vec4<f32>")),i&&(this.variableNames.push("preluActivationWeights"),this.variableTypes.push("vec4<f32>"))):(this.innerElementSize=this.elementsPerThread[0],s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights")),this.addBias=s,this.activation=a,this.hasPreluActivationWeights=i,this.tileAOuter=this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workGroupSize[0]*this.innerElementSize,this.workGroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=n%this.tileBOuter===0,this.fitInner=o%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}`}getUserCode(){let e=this.isVec4?pg(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,this.innerElementSize,!this.isChannelsLast):mg(this.elementsPerThread,this.workGroupSize,!this.isChannelsLast,this.tileInner),t=this.isVec4?[this.isChannelsLast?this.innerElementSize:4,4,4]:[1,1,1];return`
    ${$me(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}
    ${e}
  `}};function eK(r,e){let t=r.length;return t>=3?e?[...r.slice(0,-3),r[t-3]*r[t-2],r[t-1]]:[...r.slice(0,-3),r[t-3],r[t-2]*r[t-1]]:!e&&t===1&&r[0]>1?[r[0],1]:null}function Bme({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let u=t.dataFormat==="channelsLast",l=!u,p=!1,m=u&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",c=[],d,f;if(m){let y=t.inHeight*t.inWidth*t.inChannels;d=Me({inputs:{x:r},backend:n,attrs:{shape:[1,t.batchSize,y]}}),f=Me({inputs:{x:e},backend:n,attrs:{shape:[1,y,t.outChannels]}})}else d=Me({inputs:{x:r},backend:n,attrs:{shape:u?[t.batchSize,t.inHeight*t.inWidth,t.inChannels]:[t.batchSize,t.inChannels,t.inHeight*t.inWidth]}}),f=Me({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});if(c.push(d),c.push(f),s!=null){let y=eK(s.shape,u);y!=null&&(s=Me({inputs:{x:s},backend:n,attrs:{shape:y}}),c.push(s))}if(o!=null){let y=eK(o.shape,u);y!=null&&(o=Me({inputs:{x:o},backend:n,attrs:{shape:y}}),c.push(o))}let h=id({a:u?d:f,b:u?f:d,transposeA:l,transposeB:p,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),g=Me({inputs:{x:h},backend:n,attrs:{shape:t.outShape}});c.push(h);for(let y of c)n.disposeData(y.dataId);return g}function Sx({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let u=o!=null,l=s!=null,p=t.dataFormat==="channelsLast";if(p&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID"||t.filterHeight===1&&t.filterWidth===1&&t.dilationHeight===1&&t.dilationWidth===1&&t.strideHeight===1&&t.strideWidth===1&&(t.padInfo.type==="SAME"||t.padInfo.type==="VALID"))return Bme({x:r,filter:e,convInfo:t,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});let c=p?t.outHeight*t.outWidth:t.outChannels,d=p?t.outChannels:t.outHeight*t.outWidth,f=t.filterHeight*t.filterWidth*t.inChannels,h=[t.padInfo.top,t.padInfo.left],g=[{type:"int32",data:[t.filterHeight,t.filterWidth]},{type:"int32",data:[...h]},{type:"int32",data:[t.strideHeight,t.strideWidth]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[c]},{type:"int32",data:[d]},{type:"int32",data:[f]}],y=new tD(t,c,d,f,u,i,l),T=[],x=[r,e];u&&(!p&&o.shape.length===1&&(o=Me({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}}),T.push(o)),x.push(o)),l&&(!p&&s.shape.length===1&&(s=Me({inputs:{x:s},backend:n,attrs:{shape:[s.shape[0],1,1]}}),T.push(s)),x.push(s)),i==="leakyrelu"&&(g.push({type:"float32",data:[a]}),y.uniforms+=" alpha : f32,");let I=n.runWebGPUProgram(y,x,r.dtype,g);for(let k of T)n.disposeData(k.dataId);return I}function Ome(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=t,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,s.shape,a,l,i,p,!1,m);return Sx({x:o,filter:s,convInfo:c,backend:n})}var tK={kernelName:uo,backendName:"webgpu",kernelFunc:Ome};function zme(r=4){let e=s=>{switch(s){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${s} is not supported.`)}},n=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${Vr(r)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${Vr(r)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${r}];`}
      }
      return ${Vr(r)}(0.0);`;return`
  fn mm_readA(row : i32, colIn : i32, globalId : vec3<u32>) -> ${Vr(r)} {
    let col = colIn * ${r};
    var batch = i32(globalId.z);
    ${n}
  }

  fn mm_readB(row : i32, colIn : i32, globalId : vec3<u32>) -> ${Vr(r)} {
    let col = colIn * ${r};
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${e(r)}
    }
    return ${Vr(r)}(0.0);
  }

  fn mm_write(row : i32, colIn : i32, valueInput : ${Vr(r)}, globalId : vec3<u32>) {
    let col = colIn * ${r};
    if (row < uniforms.dimAOuter && (col + ${r-1}) < uniforms.dimBOuter) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${r}] = value;
    }
  }`}var rD=class{constructor(e){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.outputShape=e.inShape,b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=ig(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=ug(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4?(this.innerElementSize=4,this.variableTypes=["vec4<f32>","f32"]):this.innerElementSize=this.elementsPerThread[0],this.tileAOuter=this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workGroupSize[0]*this.innerElementSize,this.workGroupSize[1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}_${this.innerElementSize}`}getUserCode(){let e=this.isVec4?pg(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,this.innerElementSize):mg(this.elementsPerThread,this.workGroupSize);return`
    ${zme(this.isVec4?4:1)}
    ${e}
    `}};var nD=class{constructor(e){this.variableNames=["dy","W"];this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e.inShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${ve()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function Gme(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:p}=n,m=C.convertConv2DDataFormat(l),c=C.computeConv2DInfo(a,s.shape,i,1,u,p,!1,m),d=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.filterHeight-1-c.padInfo.top,c.filterWidth-1-c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize,c.outHeight,c.outWidth,c.outChannels]}],f;if(B().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new nD(c);else{f=new rD(c);let h=c.inShape[1]*c.inShape[2],g=c.inShape[3],y=c.filterHeight*c.filterWidth*c.outChannels;d.push({type:"uint32",data:[h]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return t.runWebGPUProgram(f,[o,s],"float32",d)}var rK={kernelName:lo,backendName:"webgpu",kernelFunc:Gme};var Ume=ft({opType:2}),nK={kernelName:po,backendName:"webgpu",kernelFunc:Ume};var Wme=ft({opType:3}),oK={kernelName:mo,backendName:"webgpu",kernelFunc:Wme};var oD=class{constructor(e,t,n,o){this.variableNames=["Image","Boxes","BoxInd"];this.uniforms="extrapolationValue : f32,";this.workGroupSize=[64,1,1];this.size=!0;let[s]=t;this.outputShape=[s,n[0],n[1],e],this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=o==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,o,s]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,i,u]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${ve()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${o};
        let width_scale = ${i};
        let in_y = ${s};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${u};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}};var Kme=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:l}=n,p=new oD(o.shape[3],s.shape,i,u),m=[{type:"float32",data:[l]}];return t.runWebGPUProgram(p,[o,s,a],"float32",m)},sK={kernelName:pa,backendName:"webgpu",kernelFunc:Kme};var vx=class{constructor(e,t,n,o){this.variableNames=["x"];this.uniforms="index : f32,";this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.exclusive=n,this.reverse=o,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let e=this.outputShape.length,t=this.op==="*"?"1.0":"0.0",n=this.exclusive?t:`getX(${aK(e,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],s="",a="";return this.exclusive?(s=this.reverse?`end != ${o-1}`:"end != 0",a=this.reverse?"end + 1":"end - 1"):(s=this.reverse?`end + pow2 < ${o}`:"end >= pow2",a=this.reverse?"end + pow2":"end - pow2"),`
      ${ve()}
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${iK(e,"coords",this.op)};
         var val = ${n};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${s}) {
           let idx = ${a};
           ${iK(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${aK(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function aK(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.x, ${e}.y`;if(r===3)return`${e}.x, ${e}.y, ${e}.z`;if(r===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function iK(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.y`;if(r===3)return`${e}.z`;if(r===4)return`${e}.w`;throw Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function Ax(r,e,t,n,o,s){let a=e.shape.length,i=C.getAxesPermutation([n],a),u=e;i!=null&&(u=vn({inputs:{x:e},backend:t,attrs:{perm:i}}));let l=C.getInnerMostAxes(1,a)[0];if(l!==a-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${n}`);let p=u.shape[l],m=ir({inputs:{x:u},backend:t});for(let c=0;c<=Math.ceil(Math.log2(p))-1;c++){let d=new vx(r,u.shape,!1,s),f=m,h=[{type:"float32",data:[c]}];m=t.runWebGPUProgram(d,[m],m.dtype,h),t.disposeData(f.dataId)}if(o){let c=new vx(r,u.shape,o,s),d=m,f=[{type:"float32",data:[0]}];m=t.runWebGPUProgram(c,[m],m.dtype,f),t.disposeData(d.dataId)}if(i!=null){let c=C.getUndoAxesPermutation(i),d=vn({inputs:{x:m},backend:t,attrs:{perm:c}});return t.disposeData(m.dataId),t.disposeData(u.dataId),d}return m}function Hme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;return Ax("*",o,t,s,a,i)}var uK={kernelName:la,backendName:"webgpu",kernelFunc:Hme};function qme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;return Ax("+",o,t,s,a,i)}var lK={kernelName:co,backendName:"webgpu",kernelFunc:qme};var sD=class{constructor(e,t){this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.uniforms="blockSize : i32,";this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${ve()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function jme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n,i=o.shape[0],u=a==="NHWC"?o.shape[1]:o.shape[2],l=a==="NHWC"?o.shape[2]:o.shape[3],p=a==="NHWC"?o.shape[3]:o.shape[1],m=u*s,c=l*s,d=p/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=[{type:"int32",data:[s]}],g=new sD(f,a);return t.runWebGPUProgram(g,[o],o.dtype,h)}var pK={kernelName:ma,backendName:"webgpu",kernelFunc:jme};var aD=class{constructor(e,t,n,o=!1,s=null,a=!1){this.variableNames=["x","W"];this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,";this.workGroupSize=[16,16,1];this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),o&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.addBias=o,this.activation=s,this.hasPreluActivation=a,this.filterHeight=t,this.filterWidth=n,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let e=this.filterWidth*this.filterHeight,t=this.workGroupSize[0]*this.workGroupSize[1]*this.workGroupSize[2],n=this.workGroupSize[1]+this.filterHeight-1,o=this.workGroupSize[0]+this.filterWidth-1;return`
      ${Hr(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${o}>, ${n}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${Op()}
      fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
              @builtin(global_invocation_id) GlobalId : vec3<u32>,
              @builtin(local_invocation_index) LocalIndex: u32,
              @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
        localId = LocalId;
        globalId = GlobalId;
        let localIndex = i32(LocalIndex);
        numWorkgroups = NumWorkgroups;
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pad;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${this.workGroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${o}; inputCol = inputCol + ${this.workGroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = localIndex;
        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${qr(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};var hg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,";this.workGroupSize=[4,4,4];this.isVec4=!0;this.outputShape=e.outShape,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[4,4,1]),b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwiseVec4_${n}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}`}getUserCode(){let e=4+this.convInfo.filterWidth-1;return`
      ${Hr(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, row, col, channel);
        }
        return value;
      }
      ${Op()}
      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = i32(globalId.z) / uniforms.outShape[1];
        let r = i32(globalId.z) % uniforms.outShape[1];
        let c = i32(globalId.y) * 4;
        let d1 = i32(globalId.x) * 4;
        let xRCCorner = vec2<i32>(r, c) - uniforms.pad;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          for (var i = 0; i < ${e}; i++)
          {
            xVals[i] = readX(batch, xR, xCCorner + i, d1);
          }
          for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
            let wValue = getW(wR, wC, d1, 0);
            dotProd[0] = dotProd[0] + xVals[0 + wC] * wValue;
            dotProd[1] = dotProd[1] + xVals[1 + wC] * wValue;
            dotProd[2] = dotProd[2] + xVals[2 + wC] * wValue;
            dotProd[3] = dotProd[3] + xVals[3 + wC] * wValue;
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${qr(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}};var gg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms=`pad : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, stride : vec2<i32>, dilation : vec2<i32>,`;this.workGroupSize=[256,1,1];this.outputShape=e.outShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${Hr(this.activation,this.hasPreluActivation,!1,4)}

      ${Za()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.stride - uniforms.pad;
        let d2 = coords[${this.isChannelsLast?3:1}];
        let channelMul = uniforms.wShape[3];
        let d1 = d2 / channelMul;
        let q = d2 % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
        // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
        // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
        // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
        var value = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = ${e};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = ${e};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          }
          ${qr(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};function Xme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=n,m=C.convertConv2DDataFormat(u),c=l;c==null&&(c=[1,1]);let d=C.computeConv2DInfo(o.shape,s.shape,a,c,i,p,!0,m),f=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inHeight,d.inWidth]}],h=d.dataFormat==="channelsLast",g;return!h&&d.inHeight>16&&d.inWidth>16&&d.strideHeight===1&&d.strideWidth===1&&d.dilationWidth===1&&d.dilationHeight===1&&d.inChannels===d.outChannels?g=new aD(d.outShape,d.filterHeight,d.filterWidth):h&&d.inHeight>4&&d.inWidth>4&&d.strideHeight===1&&d.strideWidth===1&&d.inChannels===d.outChannels&&d.dilationHeight===1&&d.dilationWidth===1&&d.inChannels%4===0?g=new hg(d):(g=new gg(d),f.push({type:"int32",data:[d.filterHeight]},{type:"int32",data:[d.filterWidth]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]})),t.runWebGPUProgram(g,[o,s],o.dtype,f)}var mK={kernelName:fo,backendName:"webgpu",kernelFunc:Xme};var iD=wt({opType:0,cpuKernelImpl:IW,supportsComplex:!0}),cK={kernelName:Fo,backendName:"webgpu",kernelFunc:iD};var uD=class{constructor(e,t){this.workGroupSize=[64,1,1];this.variableNames=["x"];this.uniforms="reduceSize : i32,";this.size=!0;this.inputShape=[e.batchSize,e.inSize];let[n]=C.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${ve()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function wi(r,e,t,n,o){let s=r.shape.length,a=[],i=b.parseAxisParam(e,r.shape),u=i,l=C.getAxesPermutation(u,s),p=r;l!=null&&(p=vn({inputs:{x:r},attrs:{perm:l},backend:o}),u=C.getInnerMostAxes(u.length,s),a.push(p)),C.assertAxesAreInnerMostDims(n,u,s);let[m,c]=C.computeOutAndReduceShapes(p.shape,u),d=m;t&&(d=C.expandShapeToKeepDim(m,i));let f;if((n==="max"||n==="prod")&&o.shouldExecuteOnCPU([p])){let h=o.tensorMap.get(p.dataId).values;switch(n){case"max":let g=yW(h,b.sizeFromShape(c),d,r.dtype);f=o.makeTensorInfo(d,r.dtype,g);break;case"prod":let{outVals:y,outShape:T,outDtype:x}=SW(p.shape,p.dtype,h,u);f=o.makeTensorInfo(T,x,y);break;default:throw new Error(`${n} CPU implementation is not yet supported.`)}}else{let h=b.sizeFromShape(c),y=b.sizeFromShape(p.shape)/h,T={windowSize:h,inSize:h,batchSize:y,outSize:1},x=n==="mean"?"float32":Qi(r.dtype),I=[{type:"int32",data:[h]}],k=new uD(T,n),w=o.runWebGPUProgram(k,[p],x,I);a.push(w),f=Me({inputs:{x:w},attrs:{shape:d},backend:o})}return a.forEach(h=>o.disposeData(h.dataId)),f}function bg(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return wi(o,s,a,"sum",t)}var dK={kernelName:Ko,backendName:"webgpu",kernelFunc:bg};function Yme(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:a,summedDims:i,idDims:u}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(a.length,u,s);let{path:l,steps:p}=C.getEinsumComputePath(i,u),m=p.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of p[h]){let{permutationIndices:y,expandDims:T}=C.getEinsumPermutation(d,u[g]),x;C.isIdentityPermutation(y)?x=s[g]:(x=vn({inputs:{x:s[g]},backend:t,attrs:{perm:y}}),f.push(x));let I=x.shape.slice();for(let k=0;k<T.length;++k)I.splice(T[k],0,1);b.arraysEqual(x.shape,I)||(x=Me({inputs:{x},backend:t,attrs:{shape:I}}),f.push(x)),c===null?c=x:(c=iD({inputs:{a:x,b:c},backend:t}),f.push(c))}h<m-1&&(l[h]>=0&&(c=bg({inputs:{x:c},backend:t,attrs:{axis:l[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&t.disposeData(h.dataId);return c}var fK={kernelName:Pu,backendName:"webgpu",kernelFunc:Yme};var Zme=ft({opType:4}),hK={kernelName:go,backendName:"webgpu",kernelFunc:Zme};var Qme=wt({opType:4,dtype:"bool",cpuKernelImpl:iW}),gK={kernelName:ca,backendName:"webgpu",kernelFunc:Qme};var lD=ft({opType:5,cpuKernelImpl:uW,dtype:"float32"}),bK={kernelName:bo,backendName:"webgpu",kernelFunc:lD};function wx(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,a=s.shape.length,i=s.shape.slice(),u=o;return o<0&&(b.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+o+1),i.splice(u,0,1),Me({inputs:{x:s},backend:n,attrs:{shape:i}})}var yK={kernelName:ps,backendName:"webgpu",kernelFunc:wx};var Jme=ft({opType:6,cpuKernelImpl:lW}),TK={kernelName:da,backendName:"webgpu",kernelFunc:Jme};var pD=class{constructor(e){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${ve()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}};var xK={kernelName:fa,backendName:"webgpu",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new pD(t.shape);return n.runWebGPUProgram(o,[t],t.dtype)}};var ece=ft({opType:7,cpuKernelImpl:pW}),IK={kernelName:yo,backendName:"webgpu",kernelFunc:ece};var tce=wt({opType:12,dtype:"int32"}),CK={kernelName:To,backendName:"webgpu",kernelFunc:tce};var mD=class{constructor(e,t,n=!1){this.isFromPixels=!0;this.outputShape=[0];this.variableNames=[];this.workGroupSize=[256,1,1];this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[t,1,1]),this.importVideo=n,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${ve()}
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}};var kK={kernelName:_l,backendName:"webgpu",kernelFunc:rce},pd,Nx=new Map;function rce(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n;if(o==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let a=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,u=typeof HTMLCanvasElement<"u"&&o instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&o instanceof OffscreenCanvas,l=typeof ImageBitmap<"u"&&o instanceof ImageBitmap,[p,m]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],c=[m,p,s],d=B().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&a,f=a||i;if(l||u||f){let T;if(d){let L=o;if(!Nx.has(L)||Nx.get(L).expired){let O={source:L};Nx.set(L,t.device.importExternalTexture(O))}T={width:p,height:m,format:null,usage:null,texture:Nx.get(L)}}else{f&&(pd==null&&(pd=document.createElement("canvas").getContext("2d")),pd.canvas.width=p,pd.canvas.height=m,pd.drawImage(o,0,0,p,m),o=pd.canvas);let L=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,O="rgba8unorm",W=t.textureManager.acquireTexture(c[1],c[0],O,L);t.queue.copyExternalImageToTexture({source:o},{texture:W},[c[1],c[0]]),T={width:p,height:m,format:O,usage:L,texture:W}}let x=b.sizeFromShape(c),I=b.computeStrides(c),k=new mD(c,s,d),w=[{type:"uint32",data:[x]},{type:"uint32",data:[s]},{type:"uint32",data:[...I]}],F=t.makeTensorInfo([m,p],"int32"),M=t.tensorMap.get(F.dataId);M.resourceInfo=T;let R=t.runWebGPUProgram(k,[F],"int32",w);return t.disposeData(F.dataId),R}let h=o.data,g=h;if(s!=null&&s!==4){g=new Uint8Array(o.width*o.height*s);let T=h.length,x=0;for(let I=0;I<T;I++)I%4<s&&(g[x++]=h[I])}let y=t.makeTensorInfo(c,"int32",new Int32Array(g));return t.uploadToGPU(y.dataId),y}var cD=class{constructor(e,t,n,o,s){this.uniforms="varianceEpsilon : f32,";this.workGroupSize=[128,1,1];this.size=!0;this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(e,t),C.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),o!=null&&(C.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset")),s!=null&&(C.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale")),this.offsetShape=o,this.scaleShape=s,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${ve()}
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}};var SK={kernelName:xo,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n,scale:o,offset:s,mean:a,variance:i}=r,{varianceEpsilon:u}=e,l=t,p=[n,a,i],m=null;s!=null&&(m=s.shape,p.push(s));let c=null;o!=null&&(c=o.shape,p.push(o));let d=new cD(n.shape,a.shape,i.shape,m,c),f=[{type:"float32",data:[u]}];return l.runWebGPUProgram(d,p,n.dtype,f)}};function nce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=C.convertConv2DDataFormat(p),g=C.computeConv2DInfo(o.shape,s.shape,u,m,l,c,!1,h);return Sx({x:o,filter:s,convInfo:g,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:f,activation:d})}var vK={kernelName:Ss,backendName:"webgpu",kernelFunc:nce};function oce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dilations:p,dimRoundingMode:m,activation:c,leakyreluAlpha:d}=n,f=p;f==null&&(f=[1,1]),b.assert(C.eitherStridesOrDilationsAreOne(u,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`);let h=C.computeConv2DInfo(o.shape,s.shape,u,f,l,m,!0),g=[o,s],y=a!=null,T=i!=null;y&&g.push(a),T&&g.push(i);let x=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inHeight,h.inWidth]}],I;return h.inHeight>4&&h.inWidth>4&&h.strideHeight===1&&h.strideWidth===1&&h.inChannels===h.outChannels&&h.dilationHeight===1&&h.dilationWidth===1&&h.inChannels%4===0?I=new hg(h,y,c,T):(I=new gg(h,y,c,T),x.push({type:"int32",data:[h.filterHeight]},{type:"int32",data:[h.filterWidth]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]})),c==="leakyrelu"&&(x.push({type:"float32",data:[d]}),I.uniforms+=" alpha : f32,"),t.runWebGPUProgram(I,g,"float32",x)}var AK={kernelName:vs,backendName:"webgpu",kernelFunc:oce};var dD=class{constructor(e,t){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${ar(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${ve()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function sce(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,a=s[s.length-1],i=b.sizeFromShape(n.shape),[u,l,p,m]=C.prepareAndValidate(n,o),c=Me({inputs:{x:o},backend:t,attrs:{shape:[l,a]}}),d=Me({inputs:{x:n},backend:t,attrs:{shape:[b.sizeFromShape(n.shape)/p,p]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let T=t.readSync(o.dataId),x=t.bufferSync(n),I=mW(T,x,n.dtype,l,a,p,m,n.shape,i);return t.makeTensorInfo(u,n.dtype,I.values)}let f=new dD(a,[l,p]),h=[{type:"int32",data:[a]},{type:"int32",data:m}],g=t.runWebGPUProgram(f,[d,c],d.dtype,h),y=Me({inputs:{x:g},backend:t,attrs:{shape:u}});return t.disposeData(c.dataId),t.disposeData(d.dataId),t.disposeData(g.dataId),y}var wK={kernelName:ha,backendName:"webgpu",kernelFunc:sce};var fD=class{constructor(e,t){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=ace(this.aShape);return`
      ${ve()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function ace(r){let e=["resRC.x","resRC.y","resRC.z","resRC.w"],t=[];for(let n=0;n<r.length;n++)n===2?t.push("indexZ"):t.push(`${e[n]}`);return t.join()}function hD(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n,u=b.parseAxisParam(a,o.shape)[0],l=C.segment_util.collectGatherOpShapeInfo(o,s,u,i),p=b.sizeFromShape(s.shape),m=[],c=Me({inputs:{x:o},backend:t,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=Me({inputs:{x:s},backend:t,attrs:{shape:[l.batchSize,p/l.batchSize]}});m.push(c),m.push(d);let f=[l.batchSize,l.outerSize,p/l.batchSize,l.sliceSize];if(t.shouldExecuteOnCPU([o,s])){let x=t.tensorMap.get(d.dataId).values,I=Te(d.shape,d.dtype,x),w=t.tensorMap.get(c.dataId).values,F=Te(c.shape,c.dtype,w),M=cW(F,I,f);return m.forEach(R=>t.disposeData(R.dataId)),t.makeTensorInfo(l.outputShape,M.dtype,M.values)}let h=new fD(c.shape,f),g=t.runWebGPUProgram(h,[c,d],c.dtype);m.push(g);let y=Me({inputs:{x:g},backend:t,attrs:{shape:l.outputShape}});return m.forEach(T=>t.disposeData(T.dataId)),y}var NK={kernelName:ms,backendName:"webgpu",kernelFunc:hD};var ice=wt({opType:5,cpuKernelImpl:fW,dtype:"bool"}),DK={kernelName:ga,backendName:"webgpu",kernelFunc:ice};var uce=wt({opType:6,dtype:"bool",cpuKernelImpl:dW}),PK={kernelName:Io,backendName:"webgpu",kernelFunc:uce};function lce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n,a=[{type:"float32",data:[s]}],i=new Ja(o.shape,14);return i.uniforms="alpha : f32,",t.runWebGPUProgram(i,[o],"float32",a)}var FK={kernelName:Co,backendName:"webgpu",kernelFunc:lce};var pce=wt({opType:7,dtype:"bool",cpuKernelImpl:gW}),MK={kernelName:ba,backendName:"webgpu",kernelFunc:pce};var mce=wt({opType:8,dtype:"bool",cpuKernelImpl:hW}),RK={kernelName:ya,backendName:"webgpu",kernelFunc:mce};var cce=ft({opType:9,cpuKernelImpl:bW}),EK={kernelName:ko,backendName:"webgpu",kernelFunc:cce};var dce=wt({opType:9,dtype:"bool"}),_K={kernelName:Ta,backendName:"webgpu",kernelFunc:dce};var fce=ft({opType:10}),LK={kernelName:xa,backendName:"webgpu",kernelFunc:fce};function gD(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n;return wi(o,s,a,"max",t)}var $K={kernelName:So,backendName:"webgpu",kernelFunc:gD};var hce=wt({opType:15,cpuKernelImpl:TW}),BK={kernelName:vo,backendName:"webgpu",kernelFunc:hce};function gce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1,p=C.computePool2DInfo(o.shape,s,a,l,i,u),m,c=[];if(p.filterHeight===1&&p.filterWidth===1){if(b.arraysEqual(p.inShape,p.outShape))return ir({inputs:{x:o},backend:t});m=new fg(p),c.push({type:"int32",data:[p.strideHeight,p.strideWidth]})}else m=new dg(p,"max"),c.push({type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]});return t.runWebGPUProgram(m,[o],o.dtype,c)}var OK={kernelName:Ao,backendName:"webgpu",kernelFunc:gce};function bce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{keepDims:s,axis:a}=n;return wi(o,a,s,"mean",t)}var zK={kernelName:wo,backendName:"webgpu",kernelFunc:bce};function yce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return wi(o,s,a,"min",t)}var GK={kernelName:No,backendName:"webgpu",kernelFunc:yce};var Tce=wt({opType:16,cpuKernelImpl:xW}),UK={kernelName:Do,backendName:"webgpu",kernelFunc:Tce};var bD=class{constructor(e,t,n){this.uniforms="";this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t.map((o,s)=>o[0]+e[s]+o[1]),this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((o,s)=>{this.uniforms+=` pad${s} : vec2<i32>,`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((l,p)=>`uniforms.pad${p}[0]`).join(","),n=this.xShape.map((l,p)=>`uniforms.pad${p}[0] + uniforms.xShape${e>1?`[${p}]`:""}`).join(","),o=e===1?"start":"start[i]",s=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",i=ar(e),u=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${ve()}
        if (index < uniforms.size) {
          let start = ${i}(${t});
          let end = ${i}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${o}) {
              ${a} = ${o} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${s}) {
              ${a} = (${s} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${u}));
        }
      }
    `}};var WK={kernelName:Po,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{paddings:o,mode:s}=e,a=t,i=o.map(p=>({type:"int32",data:[p[0],p[1]]})),u=new bD(n.shape,o,s);return a.runWebGPUProgram(u,[n],n.dtype,i)}};function xce(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.tensorMap.get(n.dataId),[a,i]=CW(s.values,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,a)}let o=new Ja(n.shape,11);return t.runWebGPUProgram(o,[n],n.dtype)}var KK={kernelName:cs,backendName:"webgpu",kernelFunc:xce};function Ice(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=n,l=t.readSync(o.dataId),p=t.readSync(s.dataId),{selectedIndices:m}=yr.nonMaxSuppressionV3Impl(l,p,a,i,u);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}var VK={kernelName:Ca,backendName:"webgpu",kernelFunc:Ice};function Cce(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=n,p=t.readSync(o.dataId),m=t.readSync(s.dataId),c=a,d=i,f=u,h=l,{selectedIndices:g,selectedScores:y}=yr.nonMaxSuppressionV5Impl(p,m,c,d,f,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var HK={kernelName:ka,backendName:"webgpu",kernelFunc:Cce};function yg(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=xu({inputs:{input:n},backend:t}),s=yg({inputs:{x:o},backend:t}),a=zp({inputs:{input:n},backend:t}),i=yg({inputs:{x:a},backend:t}),u=Qa({inputs:{real:s,imag:i},backend:t});return t.disposeData(o.dataId),t.disposeData(s.dataId),t.disposeData(a.dataId),t.disposeData(i.dataId),u}else return rs({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var qK={kernelName:Is,backendName:"webgpu",kernelFunc:yg};function jK(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=xu({inputs:{input:n},backend:t}),s=jK({inputs:{x:o},backend:t}),a=zp({inputs:{input:n},backend:t}),i=yg({inputs:{x:a},backend:t}),u=Qa({inputs:{real:s,imag:i},backend:t});return t.disposeData(o.dataId),t.disposeData(s.dataId),t.disposeData(a.dataId),t.disposeData(i.dataId),u}else return rs({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var XK={kernelName:ds,backendName:"webgpu",kernelFunc:jK};function kce(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return wx({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(p=>{b.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),b.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=e.map(p=>{let m=wx({inputs:{input:p},backend:t,attrs:{dim:o}});return i.push(m),m}),l=eD({inputs:u,backend:t,attrs:{axis:o}});return i.forEach(p=>t.disposeData(p.dataId)),l}var YK={kernelName:fs,backendName:"webgpu",kernelFunc:kce};var yD=class{constructor(e,t){this.variableNames=["x"];this.uniforms="constantValue : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t.map((n,o)=>n[0]+e[o]+n[1]),this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,o)=>{this.uniforms+=` pad${o} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=ar(e),n=this.xShape.map((m,c)=>`uniforms.pad${c}[0]`).join(","),o=this.xShape.map((m,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),s=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${o})`:`${o}`,i=e>1?"any(outC < start)":"outC < start",u=e>1?"any(outC >= end)":"outC >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${ve()}
        if (index < uniforms.size) {
          let start = ${s};
          let end = ${a};
          let outC = getCoordsFromIndex(index);

          if (${i} || ${u}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${l}));
          }
        }
      }
    `}};var TD=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;if(s.every(l=>b.arraysEqual(l,[0,0])))return ir({inputs:{x:o},backend:t});if(b.sizeFromShape(o.shape)===0){let l=s.map((p,m)=>p[0]+o.shape[m]+p[1]);return rs({backend:t,attrs:{shape:l,value:a,dtype:o.dtype}})}let i=[{type:"float32",data:[a]}];s.map(l=>i.push({type:"int32",data:[l[0],l[1]]}));let u=new yD(o.shape,s);return t.runWebGPUProgram(u,[o],o.dtype,i)},ZK={kernelName:Mo,backendName:"webgpu",kernelFunc:TD};var Sce=wt({opType:13}),QK={kernelName:Ro,backendName:"webgpu",kernelFunc:Sce};function vce(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=new ud(14,n.shape,o.shape);return t.runWebGPUProgram(s,[n,o],"float32")}var JK={kernelName:Eo,backendName:"webgpu",kernelFunc:vce};function Ace(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return wi(o,s,a,"prod",t)}var eV={kernelName:_o,backendName:"webgpu",kernelFunc:Ace};var wce=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=vW(n,o,s,a);return e.makeTensorInfo([i.length],a,i)},tV={kernelName:ii,backendName:"webgpu",kernelFunc:wce};var xD=wt({opType:3}),rV={kernelName:ho,backendName:"webgpu",kernelFunc:xD};var Nce=ft({opType:12}),nV={kernelName:Lo,backendName:"webgpu",kernelFunc:Nce};var Dce=ft({opType:13}),oV={kernelName:Oo,backendName:"webgpu",kernelFunc:Dce};var ID=class{constructor(e,t,n){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${ve()}
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Pce(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,size:a,halfPixelCenters:i}=n,[u,l]=a,p=s&&u>1?1:0,m=s&&l>1?1:0,d=[{type:"float32",data:[p,m]},{type:"float32",data:[i?.5:0]}],f=new ID(o.shape,u,l);return t.runWebGPUProgram(f,[o],"float32",d)}var sV={kernelName:Bo,backendName:"webgpu",kernelFunc:Pce};var CD=class{constructor(e,t,n,o){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=o,this.shaderKey=`resizeNearest_${o}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${ve()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Fce(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,p=s&&u>1?1:0,m=s&&l>1?1:0,d=[{type:"float32",data:[p,m]},{type:"float32",data:[s?.5:0]}],f=new CD(o.shape,u,l,a);return t.runWebGPUProgram(f,[o],o.dtype,d)}var aV={kernelName:$o,backendName:"webgpu",kernelFunc:Fce};var kD=class{constructor(e,t){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${ve()}

          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}};var iV={kernelName:Ra,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,u=new kD(n.shape,s),[l,p]=C.getImageCenter(a,n.shape[1],n.shape[2]),m=[{type:"float32",data:[l]},{type:"float32",data:[p]},{type:"float32",data:[Math.sin(o)]},{type:"float32",data:[Math.cos(o)]}];return typeof s=="number"?m.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):m.push({type:"float32",data:s}),i.runWebGPUProgram(u,[n],n.dtype,m)}};var Mce=ft({opType:15,cpuKernelImpl:AW}),uV={kernelName:zo,backendName:"webgpu",kernelFunc:Mce};var Gp=class{constructor(e,t,n,o,s,a,i,u=!0){this.variableNames=["updates","indices"];this.workGroupSize=[64,1,1];this.atomic=!0;this.outputShape=a,this.type=i,this.sumDupeIndices=u,this.dispatchLayout=Se(e),this.dispatch=he(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${o}_${this.sliceDimGreaterThanOne}_${i}_${u}`;let l=ar(s.length);this.uniforms=`sliceDim : i32, strides: ${l}, size: i32,`,this.updatesRank=o,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",o="",s="";this.dispatchLayout.x.length===1?(o="flattenedIndex",s=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(o="vec2<i32>(flattenedIndex, coords[1])",s=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);let i=`getUpdates(${Array.from({length:this.updatesRank},(p,m)=>`coords[${m}]`).join(", ")})`,u=(p,m)=>{let c=`atomicAdd(${p}, bitcast<i32>(${m}))`;this.type==="float32"&&(c=`
          {
            var oldBits = 0;
            var newBits = bitcast<i32>(${m});
            loop {
              let info = atomicCompareExchangeWeak(${p}, oldBits, newBits);
              if (info.exchanged) {
                break;
              }
              oldBits = info.old_value;
              let oldValue = bitcast<f32>(oldBits);
              let newValue = oldValue + (${m});
              newBits = bitcast<i32>(newValue);
            }
          }
        `);let d=`atomicStore(${p}, bitcast<i32>(${m}));`;return this.sumDupeIndices?c:d};return`
    ${s}

      ${ve()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue =
              ${ad(this.type,!1)}(${i});
          let flatIndex = getOutputIndexFromCoords(${o});

          ${u("&result[flatIndex]","updateValue")};
        }
      }`}};function Rce(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:u,sliceSize:l,strides:p,outputSize:m}=C.calculateShapes(s,o,a),c=[m/l,l];if(m===0)return t.makeTensorInfo(a,o.dtype);let d=Me({inputs:{x:o},backend:t,attrs:{shape:[u,i]}}),f=Me({inputs:{x:s},backend:t,attrs:{shape:[u,l]}}),h=f.dtype,g=rs({backend:t,attrs:{shape:c,value:0,dtype:h}}),y=b.sizeFromShape(f.shape),T=[{type:"int32",data:[i]},{type:"int32",data:p},{type:"int32",data:[y]}],x=new Gp(f.shape,i,d.shape.length,f.shape.length,p,c,h),I=t.runWebGPUProgram(x,[f,d],h,T,g),k=Me({inputs:{x:I},backend:t,attrs:{shape:a}});return t.disposeData(d.dataId),t.disposeData(f.dataId),t.disposeData(I.dataId),k}var lV={kernelName:wa,backendName:"webgpu",kernelFunc:Rce};var SD=class{constructor(e,t,n){this.variableNames=["c","a","b"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],a=[];for(let i=0;i<this.outputShape.length;i++)a.push(`${o[i]}`),i<this.cRank&&s.push(`${o[i]}`);e=s.join(),t=a.join()}return`
      ${ve()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function Ece(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=new SD(n.shape.length,o.shape,o.shape.length);return t.runWebGPUProgram(a,[n,o,s],Et(o.dtype,s.dtype))}var pV={kernelName:gs,backendName:"webgpu",kernelFunc:Ece};var _ce=ft({opType:18}),mV={kernelName:Uo,backendName:"webgpu",kernelFunc:_ce};var Lce=ft({opType:16}),cV={kernelName:Go,backendName:"webgpu",kernelFunc:Lce};var $ce=ft({opType:17}),dV={kernelName:Na,backendName:"webgpu",kernelFunc:$ce};var vD=wt({opType:2,cpuKernelImpl:MW,supportsComplex:!0}),fV={kernelName:qo,backendName:"webgpu",kernelFunc:vD};function Bce(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=b.parseAxisParam([s],o.shape),i=gD({inputs:{x:o},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),u=C.expandShapeToKeepDim(i.shape,a),l=Me({inputs:{x:i},backend:t,attrs:{shape:u}}),p=vD({inputs:{a:o,b:l},backend:t}),m=lD({inputs:{x:p},backend:t}),c=bg({inputs:{x:m},backend:t,attrs:{axis:a,keepDims:!1}}),d=Me({inputs:{x:c},backend:t,attrs:{shape:u}}),f=xD({inputs:{a:m,b:d},backend:t});return t.disposeData(i.dataId),t.disposeData(l.dataId),t.disposeData(p.dataId),t.disposeData(m.dataId),t.disposeData(c.dataId),t.disposeData(d.dataId),f}var hV={kernelName:Vo,backendName:"webgpu",kernelFunc:Bce};var Oce=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;b.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((y,T)=>y*T),u=[[0,0]];u.push(...a);for(let y=1+s.length;y<o.shape.length;++y)u.push([0,0]);let l=[],p=TD({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),m=C.getReshaped(p.shape,s,i,!1),c=C.getPermuted(m.length,s.length,!1),d=C.getReshapedPermuted(p.shape,s,i,!1),f=Me({inputs:{x:p},backend:t,attrs:{shape:m}}),h=vn({inputs:{x:f},backend:t,attrs:{perm:c}}),g=Me({inputs:{x:h},backend:t,attrs:{shape:d}});return l.push(p),l.push(f),l.push(h),l.forEach(y=>t.disposeData(y.dataId)),g},gV={kernelName:ys,backendName:"webgpu",kernelFunc:Oce};var AD=class{constructor(e,t){this.variableNames=["A"];this.workGroupSize=[64,1,1];this.size=!0;let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[o]*t[o];this.outputShape=n,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=zce(this.rank,"uniforms.");return`
      ${ve()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function zce(r,e=""){if(r>=5)throw Error(`Tile for rank ${r} is not yet supported`);if(r===1)return`(resRC % ${e}aShape)`;let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r;o++)n.push(`(${t[o]} % ${e}aShape[${o}])`);return n.join()}function wD(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(t.shouldExecuteOnCPU([o])||o.dtype==="string"||o.shape.length>=5){let u=t.readSync(o.dataId),l=o.dtype==="string"?u.map(c=>b.decodeString(c)):u,p=Te(o.shape,o.dtype,l),m=RW(p,s);return t.makeTensorInfo(m.shape,m.dtype,m.values)}let a=new AD(o.shape,s);return t.runWebGPUProgram(a,[o],o.dtype)}var bV={kernelName:Nn,backendName:"webgpu",kernelFunc:wD};function Gce(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:u,numUpdates:l,sliceSize:p,strides:m,outputSize:c}=C.calculateShapes(s,o,i),d=!1;if(s.dtype==="string"){let M=t.bufferSync(o),R=t.bufferSync(s),L=b.decodeString(t.readSync(a.dataId)[0]),O=wW(M,R,i,c,p,l,u,m,L,d);return t.makeTensorInfo(i,O.dtype,O.values)}let f=[c/p,p],h=Me({inputs:{x:o},backend:t,attrs:{shape:[l,u]}}),g=s.shape.length?Me({inputs:{x:s},backend:t,attrs:{shape:[l,p]}}):ir({inputs:{x:s},backend:t}),y=g.dtype,T=t.makeTensorInfo([],y,b.makeZerosTypedArray(1,y)),x=Me({inputs:{x:a},backend:t,attrs:{shape:Array(f.length).fill(1)}}),I=wD({inputs:{x},backend:t,attrs:{reps:f}}),k=b.sizeFromShape([l,p]),w=[{type:"int32",data:[u]},{type:"int32",data:m},{type:"int32",data:[k]}];switch(l){case 0:break;case 1:{let M=new Gp([l,p],u,h.shape.length,g.shape.length,m,f,y,d);t.runWebGPUProgram(M,[g,h],y,w,I)}break;default:{let M=new Gp([l,p],u,h.shape.length,T.shape.length,m,f,y,d);t.runWebGPUProgram(M,[T,h],y,w,I)}{let M=new Gp([l,p],u,h.shape.length,g.shape.length,m,f,y);t.runWebGPUProgram(M,[g,h],y,w,I)}}let F=Me({inputs:{x:I},backend:t,attrs:{shape:i}});return t.disposeData(h.dataId),t.disposeData(g.dataId),t.disposeData(x.dataId),t.disposeData(T.dataId),t.disposeData(I.dataId),F}var yV={kernelName:Bu,backendName:"webgpu",kernelFunc:Gce};function Uce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=b.parseAxisParam(a,o.shape)[0],u=C.prepareSplitSize(o,s,i),l=o.shape.length,p=new Array(l).fill(0),m=o.shape.slice();return u.map(c=>{let d=[...m];d[i]=c;let f=ei({inputs:{x:o},backend:t,attrs:{begin:p,size:d}});return p[i]+=c,f})}var TV={kernelName:Ts,backendName:"webgpu",kernelFunc:Uce};var Wce=ft({opType:19}),xV={kernelName:Wo,backendName:"webgpu",kernelFunc:Wce};var IV={kernelName:ui,backendName:"webgpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e,o=new Ja(t.shape,20);return n.runWebGPUProgram(o,[t],t.dtype)}};var Kce=wt({opType:11}),CV={kernelName:Ho,backendName:"webgpu",kernelFunc:Kce};var ND=class{constructor(e){this.variableNames=["x"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=ar(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let o=0;t=this.outputShape.map((s,a)=>(o++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${o-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${ve()}
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function Vce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:T,end:x,strides:I}=xt.sliceInfo(o.shape,s,a,i,u,l,p,m,c),k;if(h)k=Me({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let w=xt.computeOutShape(T,x,I),F=ei({inputs:{x:o},backend:t,attrs:{begin:T,size:w}});k=Me({inputs:{x:F},backend:t,attrs:{shape:f}}),t.disposeData(F.dataId)}else if(t.shouldExecuteOnCPU([o])){let F=t.readSync(o.dataId),M=Te(o.shape,o.dtype,F),R=PW(d,M,I,T);k=t.makeTensorInfo(f,o.dtype,R.values)}else{let F=new ND(d),M=[{type:"int32",data:T},{type:"int32",data:I}],R=t.runWebGPUProgram(F,[o],o.dtype,M);k=Me({inputs:{x:R},backend:t,attrs:{shape:f}}),t.disposeData(R.dataId)}return k}var kV={kernelName:Da,backendName:"webgpu",kernelFunc:Vce};function Hce(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:m}=e,c=t.readSync(p.dataId),d=t.readSync(m.dataId),[f,h]=FW(c,d,o,s,a,i,u,l);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(m.shape,"int32",h)]}var SV={kernelName:li,backendName:"webgpu",kernelFunc:Hce};var qce=ft({opType:21}),vV={kernelName:jo,backendName:"webgpu",kernelFunc:qce};var DD=class{constructor(e){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${ve()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},PD=class{constructor(e){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${ve()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function md(r,e){e!==null&&r.disposeData(e.dataId)}function AV(r){let e=1;for(;e<r;)e*=2;return e}function jce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n,i=o.shape,u=i[i.length-1];if(t.shouldExecuteOnCPU([o])){let k=t.readSync(o.dataId),[w,F]=EW(k,i,o.dtype,s,a);return[t.makeTensorInfo(w.shape,w.dtype,w.values),t.makeTensorInfo(F.shape,F.dtype,F.values)]}if(s===0)return i[i.length-1]=0,[t.makeTensorInfo(i,o.dtype,[]),t.makeTensorInfo(i,"int32",[])];if(u===1)return[o,rs({attrs:{shape:i,dtype:"int32",value:0},backend:t})];let p=b.sizeFromShape(i)/u,m=Me({inputs:{x:o},attrs:{shape:[p,u]},backend:t}),c=AV(s),d=AV(u),f=null,h=()=>f===null?[m,m]:[m,f],g=(k,w,F)=>{let M=h(),R=new DD(F),O=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[k]},{type:"int32",data:[w]}],W=f;f=t.runWebGPUProgram(R,M,"int32",O),md(t,W)};for(let k=1;k<c;k*=2){let w=k*2;for(let F=k;F>=1;F/=2)g(w,F,[p,d])}for(let k=d;k>c;k/=2){let w=h(),F=new PD([p,k/2]),R=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[c]}],L=f;f=t.runWebGPUProgram(F,w,"int32",R),md(t,L);let O=c/2,W=O*2;for(let V=O;V>=1;V/=2)g(W,V,f.shape)}let y=f;f=ei({inputs:{x:f},backend:t,attrs:{begin:0,size:[p,s]}}),md(t,y);let T=hD({inputs:{x:m,indices:f},backend:t,attrs:{axis:1,batchDims:1}});md(t,m);let x=i.slice(0,-1);x.push(s),y=f,f=Me({inputs:{x:f},attrs:{shape:x},backend:t}),md(t,y);let I=T;return T=Me({inputs:{x:T},attrs:{shape:x},backend:t}),md(t,I),[T,f]}var wV={kernelName:Fa,backendName:"webgpu",kernelFunc:jce};var FD=class{constructor(e){this.variableNames=["Image","Transforms"];this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=he(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${ve()}
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function Xce(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=n,[p,m,c,d]=o.shape,[f,h]=l??[m,c],g=[p,f,h,d],y=new FD(g),T=a==="nearest"?1:2,x;switch(i){case"constant":x=1;break;case"reflect":x=2;break;case"wrap":x=3;break;case"nearest":x=4;break;default:x=1;break}let I=[{type:"int32",data:[T]},{type:"int32",data:[x]},{type:"float32",data:[u]}];return t.runWebGPUProgram(y,[o,s],"float32",I)}var NV={kernelName:Ma,backendName:"webgpu",kernelFunc:Xce};function Yce(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,u=o.shape[s],l=new Array(i-1),p=0;for(let h=0;h<i;h++)h!==s&&(l[p++]=a.shape[h]);let m=[],c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let f=new Array(u);for(let h=0;h<f.length;h++){c[s]=h;let g=ei({inputs:{x:a},backend:t,attrs:{begin:c,size:d}}),y=Me({inputs:{x:g},backend:t,attrs:{shape:l}});f[h]=y,m.push(g)}return m.forEach(h=>t.disposeData(h.dataId)),f}var DV={kernelName:xs,backendName:"webgpu",kernelFunc:Yce};var Zce=[tW,LW,$W,BW,zW,GW,UW,WW,VW,XW,YW,ZW,nW,JW,tK,rK,nK,oK,sK,uK,lK,pK,mK,fK,hK,gK,bK,yK,TK,JU,xK,kK,IK,CK,SK,vK,AK,wK,NK,DK,PK,rW,QW,FK,MK,RK,EK,_K,LK,$K,BK,OK,zK,GK,UK,WK,cK,KK,VK,HK,HW,XK,YK,ZK,QK,JK,eV,tV,qW,rV,nV,oV,eW,sV,aV,iV,uV,lV,pV,mV,cV,dV,KW,kV,SV,hV,gV,yV,TV,xV,IV,CV,fV,dK,vV,bV,wV,NV,OW,DV,qK];for(let r of Zce)Zi(r);var MD=class{constructor(e){this.device=e;this.numUsedBuffers=0;this.numFreeBuffers=0;this.freeBuffers=new Map;this.usedBuffers=new Map;this.numBytesUsed=0;this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){let o=PV(e,t);if(this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.usedBuffers.has(o)||this.usedBuffers.set(o,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(o).length>0){this.numFreeBuffers--;let a=this.freeBuffers.get(o).shift();return this.usedBuffers.get(o).push(a),a}this.numBytesAllocated+=e;let s=this.device.createBuffer({size:e,usage:t,mappedAtCreation:n});return this.usedBuffers.get(o).push(s),s}releaseBuffer(e,t,n){if(this.freeBuffers.size===0)return;let o=PV(t,n);this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.freeBuffers.get(o).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let s=this.usedBuffers.get(o),a=s.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");s.splice(a,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,n)},o=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function PV(r,e){return`${r}_${e}`}var RD=class{constructor(e){this.device=e;this.numUsedTextures=0;this.numFreeTextures=0;this.freeTextures=new Map;this.usedTextures=new Map;this.numBytesUsed=0;this.numBytesAllocated=0}acquireTexture(e,t,n,o){let s=MV(n),a=e*t*s,i=FV(e,t,n,o);if(this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.usedTextures.has(i)||this.usedTextures.set(i,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(i).length>0){this.numFreeTextures--;let l=this.freeTextures.get(i).shift();return this.usedTextures.get(i).push(l),l}this.numBytesAllocated+=a;let u=this.device.createTexture({size:[e,t],format:n,usage:o});return this.usedTextures.get(i).push(u),u}releaseTexture(e,t,n,o,s){if(this.freeTextures.size===0)return;let a=FV(t,n,o,s);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(e),this.numFreeTextures++,this.numUsedTextures--;let i=this.usedTextures.get(a),u=i.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(u,1);let l=MV(o),p=t*n*l;this.numBytesUsed-=p}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function FV(r,e,t,n){return`${r}_${e}_${t}_${n}`}function MV(r){if(r==="rgba8unorm")return 16;throw new Error(`${r} is not supported!`)}var Qce=B().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),Jce=(r,e)=>{let t=r.limits.maxComputeWorkgroupsPerDimension,n=e.dispatchLayout,o=e.dispatch;if(o.every(a=>a<=t))return o;b.assert(o[0]>t&&n.y===void 0&&n.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let s=Math.ceil(Math.sqrt(o[0]));return s>t?(s=Math.ceil(Math.cbrt(o[0])),b.assert(s<=t,()=>"Total dispatch size exceeds WebGPU maximum."),[s,s,s]):[s,s,1]},ED=class extends as{constructor(e,t=!1){super();this.commandQueueOwnedIds=new WeakSet;this.dispatchNumberInEncoder=0;this.disposed=!1;this.downloadWaitMs=0;this.tensorDataPendingDisposal=[];this.stagingPendingDisposal=[];this.uniformPendingDisposal=[];this.uploadWaitMs=0;if(!lg())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new MD(this.device),this.textureManager=new RD(this.device),this.tensorMap=new ri(this,Mn()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),B().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return ED.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}disposeData(e,t=!1){if(this.tensorDataPendingDisposal.indexOf(e)>=0)return!1;if(!this.tensorMap.has(e))return!0;let n=this.tensorMap.get(e);if(this.decRef(e),!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDataPendingDisposal.push(e),!1;let{complexTensorInfos:o}=this.tensorMap.get(e);return o!=null&&(this.disposeData(o.real.dataId,t),this.disposeData(o.imag.dataId,t)),this.releaseResource(e),this.tensorMap.delete(e),!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let t=this.tensorMap.get(e);if(!(!t||!t.resourceInfo)){if("texture"in t.resourceInfo){let n=t.resourceInfo;n.texture instanceof GPUTexture&&this.textureManager.releaseTexture(n.texture,n.width,n.height,n.format,n.usage),n.texture=null}else{let n=t.resourceInfo;this.bufferManager.releaseBuffer(n.buffer,n.size,n.usage),n.buffer=null}t.resourceInfo=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()};return this.tensorMap.set(o,{dtype:n,shape:t,values:e,refCount:1}),o}move(e,t,n,o,s){if(o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:o,shape:n,values:t,refCount:s})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.size,e.usage)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.size,e.usage)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.end(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e,t){let n=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let o=n.getMappedRange().slice(0);return n.unmap(),n!=null&&this.bufferManager.releaseBuffer(n,t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),B().getBool("WEBGPU_USE_PROFILE_TOOL")&&(b.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),o}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.releaseResource(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let o;if(t.dtype==="complex64"){let s=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=s[0],i=s[1];o=C.mergeRealAndImagArrays(a,i)}else{let s=t.resourceInfo,a=await this.getBufferData(s.buffer,s.size);o=LN(a,t.dtype)}return this.convertAndCacheOnCPU(e,o),o}readToGPU(e){let t=this.tensorMap.get(e),{values:n,dtype:o,shape:s,resourceInfo:a}=t;if(o==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(a==null)throw n!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let i=a.size,u=this.bufferManager.acquireBuffer(i,a.usage);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(a.buffer,0,u,0,i),this.submitQueue();let l=this.makeTensorInfo(s,o),p=Mn().makeTensorFromTensorInfo(l),m=this.tensorMap.get(l.dataId);return m.resourceInfo={size:i,usage:this.defaultGpuBufferUsage(),buffer:u},{tensorRef:p,buffer:u,bufSize:i}}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(o=>b.decodeString(o));return Te(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Te(e.shape,e.dtype,t)}async time(e){let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=b.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=b.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},u=await Promise.all(s);return i.kernelMs=b.sum(u),i.getExtraProfileInfo=()=>u.map((l,p)=>({name:a[p],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}makeTensorInfo(e,t,n){return t==="string"&&n!=null&&n.length>0&&b.isString(n[0])&&(n=n.map(s=>b.encodeString(s))),{dataId:this.write(n,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);if("texture"in t.resourceInfo){let o=t.resourceInfo;return o.texture instanceof GPUExternalTexture?o.texture:o.texture.createView()}let n=t.resourceInfo;return{offset:0,size:n.size,buffer:n.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.resourceInfo)return;let n=_N(t.dtype)*b.sizeFromShape(t.shape),o=this.bufferManager.acquireBuffer(n,this.defaultGpuBufferUsage());if(t.resourceInfo={size:n,usage:this.defaultGpuBufferUsage(),buffer:o},t.values){let s=this.bufferManager.acquireUploadBuffer(n,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),a=s.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(a).set(t.values):new Float32Array(a).set(t.values),s.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(s,0,o,0,n);let i={size:n,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:s};this.stagingPendingDisposal.push(i)}}makeUniforms(e){let t=0,n=0,o=[];e.forEach(u=>{u.data.length===0&&(u.data=[1]);let l;switch(u.data.length){case 1:l=4;break;case 2:l=8;break;case 3:l=16;break;case 4:l=16;break;case 5:l=16;break;case 6:l=16;break;default:b.assert(!1,()=>`Unsupported ${u.data.length}D shape`)}(n===5||n===6)&&(l=16),t=Math.ceil(t/l)*l,n=u.data.length,o.push(t),t+=u.data.length*4});let s=new ArrayBuffer(t);e.forEach((u,l)=>{let p=o[l];u.type==="int32"?new Int32Array(s,p,u.data.length).set(u.data):u.type==="uint32"?new Uint32Array(s,p,u.data.length).set(u.data):new Float32Array(s,p,u.data.length).set(u.data)});let a=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.queue.writeBuffer(a,0,s,0,t);let i={size:t,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:a};return this.uniformPendingDisposal.push(i),{offset:0,size:t,buffer:a}}runWebGPUProgram(e,t,n,o,s){if(s||(s=this.makeTensorInfo(e.outputShape,n)),b.sizeFromShape(s.shape)===0)return this.tensorMap.get(s.dataId).values=b.getTypedArrayFromDType(s.dtype,0),s;this.uploadToGPU(s.dataId),e.dispatch=Jce(this.device,e);let a=[],i=[];if(!e.isFromPixels){a.push({type:"float32",data:[NaN]}),i=t.concat(s).map(y=>y.shape);let h="int32";i.map(y=>{a.push({type:h,data:y})});let g=b.computeStrides(s.shape);if(a.push({type:h,data:g}),e.size){let y=b.sizeFromShape(e.outputShape);a.push({type:h,data:[e.isVec4?y/4:y]})}}let u=t.map((h,g)=>{if(h.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(h.dataId),{dtype:this.tensorMap.get(h.dataId).dtype,shape:h.shape,name:e.variableNames[g]}}),l=ZU(e,i,u,s),p;l in this.pipelineCache?p=this.pipelineCache[l]:(p=YU(this.device,e,u,s),this.pipelineCache[l]=p),o&&(a=[...a,...o]);let m=[this.tensorToBinding(s),...t.map(h=>this.tensorToBinding(h)),this.makeUniforms(a)],c=this.device.createBindGroup({layout:p.getBindGroupLayout(0),entries:m.map((h,g)=>({binding:g,resource:h}))});this.ensureCommandEncoderReady();let d=this.getComputePass(),f=this.activeTimers!=null;return f&&this.supportTimeQuery&&d.writeTimestamp(this.querySet,0),d.setPipeline(p),d.setBindGroup(0,c),d.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),f&&this.supportTimeQuery&&d.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(h=>{this.commandQueueOwnedIds.add(h.dataId)}),this.commandQueueOwnedIds.add(s.dataId),B().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),f&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),s}async getTimeFromQuerySet(e){let t=this.bufferManager.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.bufferManager.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let o=new BigUint64Array(n.getMappedRange()),s=Number(o[1]-o[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),s/1e6}shouldExecuteOnCPU(e,t=Qce){return B().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).resourceInfo==null&&b.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}},cd=ED;cd.nextDataId=0;var RV={};je(RV,{WebGPUBackend:()=>cd,webgpu_util:()=>Cx});lg()&&ju("webgpu",async()=>{B().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let r={powerPreference:B().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(r),t=e.limits,n={},o=e.features.has("timestamp-query");n.requiredLimits={maxComputeWorkgroupStorageSize:t.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.maxStorageBufferBindingSize},o?n.requiredFeatures=["timestamp-query"]:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let s=await e.requestDevice(n);return new cd(s,o)},3);var Je=(s=>(s[s.float32=0]="float32",s[s.int32=1]="int32",s[s.bool=2]="bool",s[s.string=3]="string",s[s.complex64=4]="complex64",s))(Je||{}),Up=(i=>(i[i.linear=0]="linear",i[i.relu=1]="relu",i[i.relu6=2]="relu6",i[i.prelu=3]="prelu",i[i.leakyrelu=4]="leakyrelu",i[i.sigmoid=5]="sigmoid",i[i.elu=6]="elu",i))(Up||{});var EV;function ede(r){EV=r.wasm.cwrap(ks,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function tde(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:m}=n,c=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(s.dataId).id,f=0;if(a!=null){let M=t.dataIdMap.get(a.dataId);if(M.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${M.shape.length}.`);f=M.id}let h=i==null?0:t.dataIdMap.get(i.dataId).id,g=Up[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);let y=u?o.shape[2]:o.shape[1],T=l?s.shape[1]:s.shape[2],x=Nr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)),I=t.makeOutput([...x,y,T],o.dtype),k=t.dataIdMap.get(I.dataId).id,w=new Uint8Array(new Int32Array(o.shape).buffer),F=new Uint8Array(new Int32Array(s.shape).buffer);return EV(c,w,o.shape.length,d,F,s.shape.length,u,l,g,f,h,m||0,k),I}var _V={kernelName:ks,backendName:"wasm",setupFunc:ede,kernelFunc:tde};function lt(r,e){let t;function n(s){t=s.wasm.cwrap(r,null,["number","number","number"])}function o(s){let{backend:a,inputs:{x:i}}=s,u=a.dataIdMap.get(i.dataId).id,l=a.makeOutput(i.shape,e||i.dtype),p=a.dataIdMap.get(l.dataId).id;return b.sizeFromShape(l.shape)===0||t(u,Je[i.dtype],p),l}return{kernelName:r,backendName:"wasm",setupFunc:n,kernelFunc:o}}var LV=lt(is);function ht(r,e,t){let n;function o(a){n=a.wasm.cwrap(r,null,["number","array","number","number","array","number","number","number"])}function s(a){let{backend:i,inputs:u}=a,{a:l,b:p}=u,m=i.dataIdMap.get(l.dataId).id,c=i.dataIdMap.get(p.dataId).id,d=t??l.dtype,f=C.assertAndGetBroadcastShape(l.shape,p.shape),h=i.makeOutput(f,d);if(b.sizeFromShape(f)===0)return h;let g=new Uint8Array(new Int32Array(l.shape).buffer),y=new Uint8Array(new Int32Array(p.shape).buffer),T=i.dataIdMap.get(h.dataId).id;return(()=>n(m,g,l.shape.length,c,y,p.shape.length,Je[l.dtype],T))(),h}return{kernelName:r,backendName:"wasm",setupFunc:o,kernelFunc:s}}var rde=!0,$V=ht(wn,rde);var BV;function nde(r){BV=r.wasm.cwrap(no,null,["array","number","number","number"])}function ode(r){let{inputs:e,backend:t}=r,n=t.makeOutput(e[0].shape,e[0].dtype);if(b.sizeFromShape(n.shape)===0)return n;let o=e.map(i=>t.dataIdMap.get(i.dataId).id),s=new Uint8Array(new Int32Array(o).buffer),a=t.dataIdMap.get(n.dataId).id;return BV(s,o.length,Je[n.dtype],a),n}var OV={kernelName:no,backendName:"wasm",setupFunc:nde,kernelFunc:ode};function Wp(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype),o=t.typedArrayFromHeap(e);return t.typedArrayFromHeap(n).set(o),n}var zV={kernelName:Kn,backendName:"wasm",kernelFunc:Wp};var GV;function sde(r){GV=r.wasm.cwrap(Dn,null,["number","array","number","number","number","array","number"])}function ns(r){let{inputs:e,backend:t,attrs:n}=r,[o,s]=ide(e.x.shape,n.perm),a=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(a=!1);let i=ade(e.x.shape,n.perm),u={dataId:e.x.dataId,shape:o,dtype:e.x.dtype};if(a){let f=Wp({inputs:e,backend:t});return f.shape=i,f}let l=t.makeOutput(i,u.dtype),p=t.dataIdMap.get(u.dataId).id,m=t.dataIdMap.get(l.dataId).id,c=new Uint8Array(new Int32Array(s).buffer),d=new Uint8Array(new Int32Array(u.shape).buffer);return GV(p,d,u.shape.length,Je[u.dtype],m,c,s.length),l}function ade(r,e){let t=new Array(r.length);for(let n=0;n<t.length;n++)t[n]=r[e[n]];return t}function ide(r,e){let t=[],n=[];for(let o=0;o<r.length;++o)r[o]!==1&&t.push(r[o]),r[e[o]]!==1&&n.push(e[o]);for(let o=0;o<n.length;++o){let s=-1;for(let a=0;a<n.length;++a)n[a]>=o&&(s===-1||n[s]>n[a])&&(s=a);n[s]=o}return[t,n]}var UV={kernelName:Dn,backendName:"wasm",kernelFunc:ns,setupFunc:sde};function An(r,e,t){let n=r.shape,o=r.shape.length,s=b.parseAxisParam(e,n),a=s,i=C.getAxesPermutation(a,o),u=null,l=!1;if(i!=null){let p=new Array(o);for(let d=0;d<p.length;d++)p[d]=n[i[d]];a=C.getInnerMostAxes(a.length,o),u=ns({inputs:{x:r},attrs:{perm:i},backend:t});let m=t.dataIdMap.get(r.dataId).id;t.dataIdMap.get(u.dataId).id!==m&&(l=!0)}return{transposed:u,originalAxes:s,axes:a,inputWasTransposed:l}}var WV;function ude(r){WV=r.wasm.cwrap(Fi,null,["number, number, number"])}function lde(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,u=e.dataIdMap.get(a.dataId).id,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=An(a,o,e);if(d){let x=e.dataIdMap.get(p.dataId).id;l=p,u=x}let f=l.shape.length;C.assertAxesAreInnerMostDims("all",m,f);let[h,g]=C.computeOutAndReduceShapes(l.shape,m),y=b.sizeFromShape(g),T=e.makeOutput(h,a.dtype);if(b.sizeFromShape(l.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;WV(u,y,x)}if(d&&e.disposeData(p.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var KV={kernelName:Fi,backendName:"wasm",setupFunc:ude,kernelFunc:lde};var VV;function pde(r){VV=r.wasm.cwrap(Mi,null,["number, number, number"])}function mde(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,u=e.dataIdMap.get(a.dataId).id,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=An(a,o,e);if(d){let x=e.dataIdMap.get(p.dataId).id;l=p,u=x}let f=l.shape.length;C.assertAxesAreInnerMostDims("any",m,f);let[h,g]=C.computeOutAndReduceShapes(l.shape,m),y=b.sizeFromShape(g),T=e.makeOutput(h,a.dtype);if(b.sizeFromShape(l.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;VV(u,y,x)}if(d&&e.disposeData(p.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var HV={kernelName:Mi,backendName:"wasm",setupFunc:pde,kernelFunc:mde};var qV;function cde(r){qV=r.wasm.cwrap(oo,null,["number","number","number","number","number"])}function dde(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o}=n,{x:s}=t,a=e.dataIdMap.get(s.dataId).id,i=a,u=s,{transposed:l,axes:p,inputWasTransposed:m}=An(s,o,e);if(m){let y=e.dataIdMap.get(l.dataId).id;y!==a&&(u=l,i=y)}let c=u.shape.slice(0,-1),d=e.makeOutput(c,"int32"),f=e.dataIdMap.get(d.dataId).id,h=b.sizeFromShape(d.shape),g=u.shape[p[0]];return qV(i,Je[u.dtype],h,g,f),m&&e.disposeData(l.dataId),d}var jV={kernelName:oo,backendName:"wasm",kernelFunc:dde,setupFunc:cde};var XV;function fde(r){XV=r.wasm.cwrap(so,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function hde(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=t,p=C.computePool2DInfo(o.shape,a,i,1,u,l),m=p.filterHeight,c=p.filterWidth,d=p.padInfo.top,f=p.padInfo.right,h=p.padInfo.bottom,g=p.padInfo.left,y=p.strideHeight,T=p.strideWidth,x=p.inChannels;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);if(p.dilationWidth!==1||p.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${p.dilationHeight}, ${p.dilationWidth}].`);let I=n.makeOutput(p.outShape,"float32"),k=n.dataIdMap.get(I.dataId).id;return XV(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,y,T,x,k),I}var YV={kernelName:so,backendName:"wasm",setupFunc:fde,kernelFunc:hde};function dr(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=b.sizeFromShape(n.shape),a=b.inferFromImplicitShape(o,s);return b.assert(s===b.sizeFromShape(a),()=>`new shape: ${a}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var ZV={kernelName:hs,backendName:"wasm",kernelFunc:dr};var QV;function gde(r){QV=r.wasm.cwrap(ao,null,["number","array","number","number","array","number","number","number","number"])}function bde(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let u=o.shape.length,l=s.shape.length,p=a?o.shape[u-2]:o.shape[u-1],m=i?s.shape[l-1]:s.shape[l-2],c=a?o.shape[u-1]:o.shape[u-2],d=i?s.shape[l-2]:s.shape[l-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=b.sizeFromShape(f),y=b.sizeFromShape(h),x=Nr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);b.assert(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let I=a?[g,p,c]:[g,c,p],k=i?[y,d,m]:[y,m,d],w=dr({inputs:{x:o},backend:t,attrs:{shape:I}}),F=dr({inputs:{x:s},backend:t,attrs:{shape:k}}),M=t.dataIdMap.get(w.dataId).id,R=t.dataIdMap.get(F.dataId).id,L=a?w.shape[2]:w.shape[1],O=i?F.shape[1]:F.shape[2],W=Math.max(g,y),V=t.makeOutput([W,L,O],w.dtype),j=t.dataIdMap.get(V.dataId).id,q=new Uint8Array(new Int32Array(w.shape).buffer),Y=new Uint8Array(new Int32Array(F.shape).buffer);return QV(M,q,w.shape.length,R,Y,F.shape.length,a,i,j),t.disposeData(w.dataId),t.disposeData(F.dataId),V.shape=x,V}var JV={kernelName:ao,backendName:"wasm",setupFunc:gde,kernelFunc:bde};function Qs(r){let{inputs:{x:e},attrs:{begin:t,size:n},backend:o}=r,[s,a]=xt.parseSliceParams(e,t,n),i=xt.isSliceContinous(e.shape,s,a),u=o.readSync(e.dataId),l=o.makeOutput(a,e.dtype),p=b.computeStrides(e.shape),m=o.dataIdMap.get(l.dataId);if(i){let f=xt.computeFlatOffset(s,p);return e.dtype==="string"?m.stringBytes=u.slice(f,f+b.sizeFromShape(a)):o.typedArrayFromHeap(l).set(u.subarray(f,f+b.sizeFromShape(a))),l}if(e.dtype==="string"){let f=Ip(u,s,a,e.shape,e.dtype);return m.stringBytes=f,l}let c=o.typedArrayFromHeap(l),d=e.shape.length;if(d===2)yde(u,p[0],c,s,a);else if(d===3)Tde(u,p[0],p[1],c,s,a);else if(d===4)xde(u,p[0],p[1],p[2],c,s,a);else{let f=Ip(u,s,a,e.shape,e.dtype);c.set(f)}return l}function yde(r,e,t,n,o){let s=0,a=n[0],i=n[1],u=a+o[0];for(let l=a;l<u;l++){let p=l*e+i;t.set(r.subarray(p,p+o[1]),s),s+=o[1]}}function Tde(r,e,t,n,o,s){let a=0,i=o[0],u=o[1],l=o[2],p=i+s[0],m=u+s[1];for(let c=i;c<p;c++)for(let d=u;d<m;d++){let f=c*e+d*t+l;n.set(r.subarray(f,f+s[2]),a),a+=s[2]}}function xde(r,e,t,n,o,s,a){let i=0,u=s[0],l=s[1],p=s[2],m=u+a[0],c=l+a[1],d=p+a[2],f=s[3];for(let h=u;h<m;h++)for(let g=l;g<c;g++)for(let y=p;y<d;y++){let T=h*e+g*t+y*n+f;o.set(r.subarray(T,T+a[3]),i),i+=a[3]}}var e4={kernelName:bs,backendName:"wasm",kernelFunc:Qs};function Ide(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n,i=s.reduce((y,T)=>y*T),u=C.getReshaped(o.shape,s,i),l=C.getPermuted(u.length,s.length),p=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(p,a,s.length),d=dr({inputs:{x:o},backend:t,attrs:{shape:u}}),f=ns({inputs:{x:d},backend:t,attrs:{perm:l}}),h=dr({inputs:{x:f},backend:t,attrs:{shape:p}}),g=Qs({inputs:{x:h},backend:t,attrs:{begin:m,size:c}});return t.disposeData(d.dataId),t.disposeData(f.dataId),t.disposeData(d.dataId),g}var t4={kernelName:us,backendName:"wasm",kernelFunc:Ide};function ti(r){let{inputs:{x:e},attrs:{dtype:t},backend:n}=r,o=n.makeOutput(e.shape,t),s=n.typedArrayFromHeap(e);return n.typedArrayFromHeap(o).set(s),o}var r4={kernelName:Un,backendName:"wasm",kernelFunc:ti};var n4=lt(io);var o4;function Cde(r){o4=r.wasm.cwrap(Wn,null,["number","number","number","number"])}function kde(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i=t.dataIdMap.get(o.dataId).id,u=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(u.dataId).id;return o4(i,s,a,l),u}var s4={kernelName:Wn,backendName:"wasm",setupFunc:Cde,kernelFunc:kde};function _D(r){let{inputs:e,backend:t}=r,n=b.parseAxisParam(r.attrs.axis,e[0].shape)[0],o=C.computeOutShape(e.map(d=>d.shape),n),s=e.filter(d=>b.sizeFromShape(d.shape)>0);if(s.length===1)return Wp({inputs:{x:s[0]},backend:t});let a=t.makeOutput(o,e[0].dtype);if(b.sizeFromShape(o)===0)return a;let i=s.map(d=>d.shape);if(C.assertParamsConsistent(i,n),s[0].dtype==="string"){let d=s.map(x=>{let I=b.sizeFromShape(x.shape.slice(n));return dr({inputs:{x},backend:t,attrs:{shape:[-1,I]}})}),f=d.map(x=>({vals:t.readSync(x.dataId),shape:x.shape}));o=C.computeOutShape(d.map(x=>x.shape),1);let h=d[0].shape[0]===1,g=yp(f,o,e[0].dtype,h),y=C.computeOutShape(s.map(x=>x.shape),n);a.shape=y;let T=t.dataIdMap.get(a.dataId);return T.stringBytes=C.fromStringArrayToUint8(g),d.forEach(x=>t.disposeData(x.dataId)),a}let u=b.sizeFromShape(s[0].shape.slice(0,n)),l=0,p=s.map(d=>{let f=b.sizeFromShape(d.shape.slice(n));return l+=f,f}),m=s.map(d=>t.typedArrayFromHeap(d)),c=t.typedArrayFromHeap(a);for(let d=0;d<u;d++){let f=d*l;for(let h=0;h<m.length;h++){let g=p[h],y=d*g,T=m[h].subarray(y,y+g);c.set(T,f),f+=g}}return a}var a4={kernelName:ls,backendName:"wasm",kernelFunc:_D};var i4;function Sde(r){i4=r.wasm.cwrap(uo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function vde(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:p,dimRoundingMode:m,dataFormat:c}=t,d=C.convertConv2DDataFormat(c),f=C.computeConv2DInfo(o.shape,s.shape,u,l,p,m,!1,d),h=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,T=f.padInfo.right,x=f.padInfo.bottom,I=f.padInfo.left,k=f.dilationHeight,w=f.dilationWidth,F=f.strideHeight,M=f.strideWidth,R=f.inChannels,L=f.outChannels,O=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let W=n.makeOutput(f.outShape,"float32"),V=n.dataIdMap.get(W.dataId).id;return i4(a,o.shape[0],o.shape[1],o.shape[2],i,h,g,y,T,x,I,O,k,w,F,M,R,L,V),W}var u4={kernelName:uo,backendName:"wasm",setupFunc:Sde,kernelFunc:vde};var l4;function Ade(r){l4=r.wasm.cwrap(lo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function wde(r){let{backend:e,inputs:t,attrs:n}=r,{dy:o,filter:s}=t,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,inputShape:p}=n,m=1,c=C.convertConv2DDataFormat(u),d=C.computeConv2DInfo(p,s.shape,a,m,i,l,!1,c),{batchSize:f,filterHeight:h,filterWidth:g,inChannels:y,inHeight:T,inWidth:x,outChannels:I,outHeight:k,outWidth:w,strideHeight:F,strideWidth:M}=d,R=h-1-d.padInfo.top,L=g-1-d.padInfo.left,O=d.dataFormat==="channelsLast",W=b.computeStrides(d.inShape),V=b.computeStrides(o.shape),[j,q,Y]=b.computeStrides(s.shape),J=W[0],H=O?W[1]:W[2],oe=O?W[2]:1,se=O?1:W[1],ae=V[0],pe=O?V[1]:V[2],ie=O?V[2]:1,be=O?1:V[1],fe=e.makeOutput(d.inShape,"float32"),Ie=e.dataIdMap.get(fe.dataId).id,we=e.dataIdMap.get(o.dataId).id,Ee=e.dataIdMap.get(s.dataId).id;return l4(we,Ee,f,h,g,T,x,y,k,w,I,F,M,R,L,j,q,Y,J,H,oe,se,ae,pe,ie,be,Ie),fe}var p4={kernelName:lo,backendName:"wasm",setupFunc:Ade,kernelFunc:wde};var m4=lt(po);var c4=lt(mo);var d4=(t=>(t[t.bilinear=0]="bilinear",t[t.nearest=1]="nearest",t))(d4||{}),f4;function Nde(r){f4=r.wasm.cwrap(pa,null,["number","number","number","number","array","number","number","number","number","number"])}function Dde(r){let{backend:e,inputs:t,attrs:n}=r,{method:o,extrapolationValue:s,cropSize:a}=n,{image:i,boxes:u,boxInd:l}=t,p=u.shape[0],[m,c]=a,d=[p,m,c,i.shape[3]],f=e.dataIdMap.get(i.dataId),h;i.dtype!=="float32"&&(h=ti({backend:e,inputs:{x:i},attrs:{dtype:"float32"}}),f=e.dataIdMap.get(h.dataId));let g=f.id,y=e.dataIdMap.get(u.dataId).id,T=e.dataIdMap.get(l.dataId).id,x=e.makeOutput(d,"float32"),I=e.dataIdMap.get(x.dataId).id,k=new Uint8Array(new Int32Array(i.shape).buffer);return f4(g,y,T,p,k,m,c,d4[o],s,I),h!=null&&e.disposeData(h.dataId),x}var h4={kernelName:pa,backendName:"wasm",setupFunc:Nde,kernelFunc:Dde};var g4;function Pde(r){g4=r.wasm.cwrap(la,null,["number","number","number","number","number","number"])}function Fde(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n,u=o.shape.length;b.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumprod does not support ${o.dtype} tensors in the WASM backend`);let l=C.getAxesPermutation([s],u),p=o;l!==null&&(p=ns({inputs:{x:o},attrs:{perm:l},backend:t}));let m=C.getInnerMostAxes(1,u)[0];C.assertAxesAreInnerMostDims("cumprod",[m],u);let c=t.makeOutput(p.shape,p.dtype),d=p.shape[m],f=t.dataIdMap.get(p.dataId).id,h=t.dataIdMap.get(c.dataId).id;g4(f,a?1:0,i?1:0,d,h,Je[o.dtype]);let g=c;if(l!==null){let y=C.getUndoAxesPermutation(l);g=ns({inputs:{x:c},attrs:{perm:y},backend:t}),t.disposeData(p.dataId),t.disposeData(c.dataId)}return g}var b4={kernelName:la,backendName:"wasm",setupFunc:Pde,kernelFunc:Fde};var y4;function Mde(r){y4=r.wasm.cwrap(co,null,["number","number","number","number","number","number"])}function Rde(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n,u=o.shape.length;b.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumsum does not support ${o.dtype} tensors in the WASM backend`);let l=C.getAxesPermutation([s],u),p=o;l!==null&&(p=ns({inputs:{x:o},attrs:{perm:l},backend:t}));let m=C.getInnerMostAxes(1,u)[0];C.assertAxesAreInnerMostDims("cumsum",[m],u);let c=t.makeOutput(p.shape,p.dtype),d=p.shape[m],f=t.dataIdMap.get(p.dataId).id,h=t.dataIdMap.get(c.dataId).id;y4(f,a?1:0,i?1:0,d,h,Je[o.dtype]);let g=c;if(l!==null){let y=C.getUndoAxesPermutation(l);g=ns({inputs:{x:c},attrs:{perm:y},backend:t}),t.disposeData(p.dataId),t.disposeData(c.dataId)}return g}var T4={kernelName:co,backendName:"wasm",setupFunc:Mde,kernelFunc:Rde};var x4;function Ede(r){x4=r.wasm.cwrap(ma,null,["number","number","number","array","number","array","array","number","number"])}function _de(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n,i=o.shape[0],u=a==="NHWC"?o.shape[1]:o.shape[2],l=a==="NHWC"?o.shape[2]:o.shape[3],p=a==="NHWC"?o.shape[3]:o.shape[1],m=u*s,c=l*s,d=p/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=e.makeOutput(f,"float32"),y=e.dataIdMap.get(o.dataId).id,T=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),x=new Uint8Array(new Int32Array(f).buffer),I=new Uint8Array(new Int32Array(b.computeStrides(f)).buffer),k=e.dataIdMap.get(h.dataId).id;return x4(y,s,a==="NHWC"?1:0,T,o.shape.length-1,x,I,f.length,k),h}var I4={kernelName:ma,backendName:"wasm",setupFunc:Ede,kernelFunc:_de};var C4;function Lde(r){C4=r.wasm.cwrap(fo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function $de(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:p,dimRoundingMode:m}=t,c=l??[1,1],d=C.computeConv2DInfo(o.shape,s.shape,u,c,p,m,!0),f=d.filterHeight,h=d.filterWidth,g=d.padInfo.top,y=d.padInfo.right,T=d.padInfo.bottom,x=d.padInfo.left,I=d.dilationHeight,k=d.dilationWidth,w=d.strideHeight,F=d.strideWidth,M=d.inChannels,R=d.outChannels,L=d.padInfo.type==="SAME"?1:0;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let O=n.makeOutput(d.outShape,"float32"),W=n.dataIdMap.get(O.dataId).id;return C4(a,o.shape[0],o.shape[1],o.shape[2],i,f,h,g,y,T,x,L,I,k,w,F,M,R,W),O}var k4={kernelName:fo,backendName:"wasm",setupFunc:Lde,kernelFunc:$de};var S4=lt(go);var Bde=!1,v4=ht(ca,Bde,"bool");var A4=lt(bo,"float32");function Dx(r){let{inputs:e,attrs:t,backend:n}=r,{input:o}=e,{dim:s}=t,a=o.shape.length,i=o.shape.slice(),u=s;return s<0&&(b.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),dr({inputs:{x:o},backend:n,attrs:{shape:i}})}var w4={kernelName:ps,backendName:"wasm",kernelFunc:Dx};function LD(r){let{attrs:{shape:e,value:t,dtype:n},backend:o}=r,s=o.makeOutput(e,n);return o.typedArrayFromHeap(s).fill(t),s}var N4={kernelName:ai,backendName:"wasm",kernelFunc:LD};var D4;function Ode(r){D4=r.wasm.cwrap(fa,null,["number","number","number","number","number","number"])}function zde(r){let{inputs:e,backend:t}=r,{image:n}=e,o=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,[i,u,l,p]=n.shape;return D4(s,i,u,l,p,a),o}var P4={kernelName:fa,backendName:"wasm",kernelFunc:zde,setupFunc:Ode};var F4=lt(yo);var Gde=!1,M4=ht(To,Gde);var R4;function Ude(r){R4=r.wasm.cwrap(xo,null,["number","number","number","number","number","number","number"])}function Wde(r){let{backend:e,inputs:t,attrs:n}=r,{varianceEpsilon:o}=n,{x:s,mean:a,variance:i,offset:u,scale:l}=t,p=e.dataIdMap.get(s.dataId).id,m=e.dataIdMap.get(a.dataId).id,c=e.dataIdMap.get(i.dataId).id,d=u!=null?e.dataIdMap.get(u.dataId).id:0,f=l!=null?e.dataIdMap.get(l.dataId).id:0,h=e.makeOutput(s.shape,s.dtype);if(b.sizeFromShape(s.shape)===0)return h;let g=e.dataIdMap.get(h.dataId).id;return R4(p,m,c,d,f,o,g),h}var E4={kernelName:xo,backendName:"wasm",setupFunc:Ude,kernelFunc:Wde};var _4;function Kde(r){_4=r.wasm.cwrap(Ss,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Vde(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dilations:p,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=t,h=C.computeConv2DInfo(o.shape,s.shape,u,p,l,c),g=Up[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let y=n.dataIdMap.get(o.dataId).id,T=n.dataIdMap.get(s.dataId).id,x=h.outChannels,I=0;if(a!=null){let ie=n.dataIdMap.get(a.dataId);if(ie.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${ie.shape.length}.`);if(ie.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${ie.shape}) does not match the number of output channels (${x})`);I=ie.id}let k=h.filterHeight,w=h.filterWidth,F=h.padInfo.top,M=h.padInfo.right,R=h.padInfo.bottom,L=h.padInfo.left,O=h.dilationHeight,W=h.dilationWidth,V=h.strideHeight,j=h.strideWidth,q=h.inChannels,Y=h.padInfo.type==="SAME"?1:0,J=h.batchSize,H=h.inHeight,oe=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let se=n.makeOutput(h.outShape,"float32"),ae=n.dataIdMap.get(se.dataId).id,pe=i==null?0:n.dataIdMap.get(i.dataId).id;return _4(y,J,H,oe,T,k,w,I,F,M,R,L,Y,O,W,V,j,q,x,g,pe,f||0,ae),se}var L4={kernelName:Ss,backendName:"wasm",setupFunc:Kde,kernelFunc:Vde};var $4;function Hde(r){$4=r.wasm.cwrap(vs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function qde(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dilations:p,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=t,h=C.computeConv2DInfo(o.shape,s.shape,u,p,l,c,!0),g=Up[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=n.dataIdMap.get(o.dataId).id,T=n.dataIdMap.get(s.dataId).id,x=h.outChannels,I=0;if(a!=null){let ie=n.dataIdMap.get(a.dataId);if(ie.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${ie.shape.length}.`);if(ie.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${ie.shape}) does not match the number of output channels (${x})`);I=ie.id}let k=h.filterHeight,w=h.filterWidth,F=h.padInfo.top,M=h.padInfo.right,R=h.padInfo.bottom,L=h.padInfo.left,O=h.dilationHeight,W=h.dilationWidth,V=h.strideHeight,j=h.strideWidth,q=h.inChannels,Y=h.padInfo.type==="SAME"?1:0,J=h.batchSize,H=h.inHeight,oe=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let se=n.makeOutput(h.outShape,"float32"),ae=n.dataIdMap.get(se.dataId).id,pe=i==null?0:n.dataIdMap.get(i.dataId).id;return $4(y,J,H,oe,T,k,w,I,F,M,R,L,Y,O,W,V,j,q,x,g,pe,f||0,ae),se}var B4={kernelName:vs,backendName:"wasm",setupFunc:Hde,kernelFunc:qde};var O4;function jde(r){O4=r.wasm.cwrap(ha,null,["number","number","number","number","number","number","array","number"])}function Xde(r){let{backend:e,inputs:t}=r,{params:n,indices:o}=t,[s,a,i,u]=Sb.prepareAndValidate(n,o),l=e.makeOutput(s,n.dtype);if(a===0)return l;let p=o.shape,m=p[p.length-1],d=e.dataIdMap.get(n.dataId).id,h=e.dataIdMap.get(o.dataId).id,g=new Uint8Array(new Int32Array(u).buffer),y=e.dataIdMap.get(l.dataId).id;return O4(d,Je[n.dtype],h,a,m,i,g,y),l}var z4={kernelName:ha,backendName:"wasm",setupFunc:jde,kernelFunc:Xde};var G4;function Yde(r){G4=r.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Zde(r){let{backend:e,inputs:t,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n,u=b.parseAxisParam(a,o.shape)[0],l=e.readSync(s.dataId),p=o.shape[u];for(let R=0;R<l.length;++R){let L=l[R];b.assert(L<=p-1&&L>=0,()=>`GatherV2: the index value ${L} is not in [0, ${p-1}]`)}let m=C.segment_util.collectGatherOpShapeInfo(o,s,u,i),c=dr({inputs:{x:o},attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]},backend:e}),d=b.sizeFromShape(s.shape),f=dr({inputs:{x:s},attrs:{shape:[m.batchSize,d/m.batchSize]},backend:e}),h=[m.batchSize,m.outerSize,d/m.batchSize,m.sliceSize],g=e.makeOutput(h,o.dtype);if(b.sizeFromShape(o.shape)===0)return g;let y=c.shape.length-1,x=e.dataIdMap.get(c.dataId).id,k=e.dataIdMap.get(f.dataId).id,w=e.dataIdMap.get(g.dataId).id,F=new Uint8Array(new Int32Array(b.computeStrides(c.shape)).buffer),M=new Uint8Array(new Int32Array(b.computeStrides(h)).buffer);return G4(x,Je[o.dtype],F,y,k,m.batchSize,M,w),e.disposeData(c.dataId),e.disposeData(f.dataId),g.shape=m.outputShape,g}var U4={kernelName:ms,backendName:"wasm",setupFunc:Yde,kernelFunc:Zde};var Qde=!1,W4=ht(ga,Qde,"bool");var Jde=!1,K4=ht(Io,Jde,"bool");var V4;function efe(r){V4=r.wasm.cwrap(Co,null,["number","number","number","number"])}function tfe(r){let{inputs:{x:e},attrs:{alpha:t},backend:n}=r,o=n.dataIdMap.get(e.dataId).id,s=n.makeOutput(e.shape,"float32");if(b.sizeFromShape(e.shape)!==0){let a=n.dataIdMap.get(s.dataId).id;V4(o,Je[e.dtype],t,a)}return s}var H4={kernelName:Co,backendName:"wasm",setupFunc:efe,kernelFunc:tfe};var rfe=!1,q4=ht(ba,rfe,"bool");var nfe=!1,j4=ht(ya,nfe,"bool");var X4=lt(ko);var ofe=!1,Y4=ht(Ta,ofe,"bool");var Z4=lt(xa);var sfe=!1,Q4=ht(Wi,sfe,"bool");var afe=!1,J4=ht(v0,afe,"bool");var eH;function ife(r){eH=r.wasm.cwrap(So,null,["number","number","number","number"])}function ufe(r){let{backend:e,inputs:t,attrs:n}=r,{reductionIndices:o,keepDims:s}=n,{x:a}=t,u=e.dataIdMap.get(a.dataId).id,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=An(a,o,e);if(d){let x=e.dataIdMap.get(p.dataId).id;l=p,u=x}let f=l.shape.length;C.assertAxesAreInnerMostDims("max",m,f);let[h,g]=C.computeOutAndReduceShapes(l.shape,m),y=b.sizeFromShape(g),T=e.makeOutput(h,a.dtype);if(b.sizeFromShape(l.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;eH(u,Je[a.dtype],y,x)}if(d&&e.disposeData(p.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var tH={kernelName:So,backendName:"wasm",setupFunc:ife,kernelFunc:ufe};var lfe=!1,rH=ht(vo,lfe);var nH;function pfe(r){nH=r.wasm.cwrap(Ao,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function mfe(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id;b.assert(o.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${o.dtype}.`);let{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=t,p=C.computePool2DInfo(o.shape,a,i,1,u,l),m=p.filterHeight,c=p.filterWidth,d=p.padInfo.top,f=p.padInfo.right,h=p.padInfo.bottom,g=p.padInfo.left,y=p.dilationHeight,T=p.dilationWidth,x=p.strideHeight,I=p.strideWidth,k=p.inChannels,w=p.outChannels;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);let F=n.makeOutput(p.outShape,"float32"),M=n.dataIdMap.get(F.dataId).id;return nH(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,y,T,x,I,k,w,M),F}var oH={kernelName:Ao,backendName:"wasm",setupFunc:pfe,kernelFunc:mfe};var sH;function cfe(r){sH=r.wasm.cwrap(wo,null,["number, number, number"])}function dfe(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=An(a,o,e),f=m;if(d){let I=e.dataIdMap.get(p.dataId).id;I!==i&&(l=p,u=I,f=C.getInnerMostAxes(f.length,l.shape.length))}C.assertAxesAreInnerMostDims("mean",f,l.shape.length);let[h,g]=C.computeOutAndReduceShapes(l.shape,f),y=b.sizeFromShape(g),T=l;l.dtype!=="float32"&&(T=ti({backend:e,inputs:{x:l},attrs:{dtype:"float32"}}),u=e.dataIdMap.get(T.dataId).id);let x=e.makeOutput(h,"float32");if(b.sizeFromShape(l.shape)!==0){let I=e.dataIdMap.get(x.dataId).id;sH(u,y,I)}if(d&&e.disposeData(p.dataId),s){let I=C.expandShapeToKeepDim(x.shape,c);x.shape=I}return l.dtype!=="float32"&&e.disposeData(T.dataId),x}var aH={kernelName:wo,backendName:"wasm",setupFunc:cfe,kernelFunc:dfe};var iH;function ffe(r){iH=r.wasm.cwrap(No,null,["number","number","number","number"])}function hfe(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=An(a,o,e);if(d){let x=e.dataIdMap.get(p.dataId).id;x!==i&&(l=p,u=x)}let f=l.shape.length;C.assertAxesAreInnerMostDims("min",m,f);let[h,g]=C.computeOutAndReduceShapes(l.shape,m),y=b.sizeFromShape(g),T=e.makeOutput(h,l.dtype);if(b.sizeFromShape(l.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;iH(u,Je[a.dtype],y,x)}if(d&&e.disposeData(p.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var uH={kernelName:No,backendName:"wasm",setupFunc:ffe,kernelFunc:hfe};var gfe=!1,lH=ht(Do,gfe);var pH=(t=>(t[t.reflect=0]="reflect",t[t.symmetric=1]="symmetric",t))(pH||{}),mH;function bfe(r){mH=r.wasm.cwrap(Po,null,["number","array","number","number","array","array","number","number"])}function yfe(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,mode:o}}=r,s=n.map((f,h)=>f[0]+e.shape[h]+f[1]),a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(s,e.dtype),u=t.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(e.shape).buffer),p=n.map(f=>f[0]),m=n.map(f=>f[1]),c=new Uint8Array(new Int32Array(p).buffer),d=new Uint8Array(new Int32Array(m).buffer);return mH(a,l,e.shape.length,Je[e.dtype],c,d,pH[o],u),i}var cH={kernelName:Po,backendName:"wasm",kernelFunc:yfe,setupFunc:bfe};var Tfe=!0,dH=ht(Fo,Tfe);var fH=lt(cs);function dd(r,e){let t=new Int32Array(r.wasm.HEAPU8.buffer,e,4),n=t[0],o=t[1],s=t[2],a=t[3];return r.wasm._free(e),{pSelectedIndices:n,selectedSize:o,pSelectedScores:s,pValidOutputs:a}}var hH;function xfe(r){hH=r.wasm.cwrap(Ca,"number",["number","number","number","number","number"])}function Ife(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a}=n,{boxes:i,scores:u}=t,l=e.dataIdMap.get(i.dataId).id,p=e.dataIdMap.get(u.dataId).id,m=hH(l,p,s,o,a),{pSelectedIndices:c,selectedSize:d,pSelectedScores:f,pValidOutputs:h}=dd(e,m);return e.wasm._free(f),e.wasm._free(h),e.makeOutput([d],"int32",c)}var gH={kernelName:Ca,backendName:"wasm",setupFunc:xfe,kernelFunc:Ife};var bH;function Cfe(r){bH=r.wasm.cwrap(Vi,"number",["number","number","number","number","number","bool"])}function kfe(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,padToMaxOutputSize:i}=n,{boxes:u,scores:l}=t,p=e.dataIdMap.get(u.dataId).id,m=e.dataIdMap.get(l.dataId).id,c=bH(p,m,s,o,a,i),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=dd(e,c);e.wasm._free(h);let y=e.makeOutput([f],"int32",d),T=e.makeOutput([],"int32",g);return[y,T]}var yH={kernelName:Vi,backendName:"wasm",setupFunc:Cfe,kernelFunc:kfe};var TH;function Sfe(r){TH=r.wasm.cwrap(ka,"number",["number","number","number","number","number","number"])}function vfe(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,softNmsSigma:i}=n,{boxes:u,scores:l}=t,p=e.dataIdMap.get(u.dataId).id,m=e.dataIdMap.get(l.dataId).id,c=TH(p,m,s,o,a,i),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=dd(e,c);e.wasm._free(g);let y=e.makeOutput([f],"int32",d),T=e.makeOutput([f],"float32",h);return[y,T]}var xH={kernelName:ka,backendName:"wasm",setupFunc:Sfe,kernelFunc:vfe};var Afe=!1,IH=ht(Ia,Afe,"bool");var CH;function wfe(r){CH=r.wasm.cwrap(Sa,null,["number","number","number","number","number"])}function Nfe(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n,u=t.makeOutput([...o.shape,s],"int32"),l=t.dataIdMap.get(u.dataId).id,m=t.dataIdMap.get(o.dataId).id;return CH(m,s,a,i,l),u}var kH={kernelName:Sa,backendName:"wasm",setupFunc:wfe,kernelFunc:Nfe};function Dfe(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(1),n}var SH={kernelName:ds,backendName:"wasm",kernelFunc:Dfe};function Pfe(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return Dx({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(p=>{b.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),b.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=e.map(p=>{let m=Dx({inputs:{input:p},backend:t,attrs:{dim:o}});return i.push(m),m}),l=_D({inputs:u,backend:t,attrs:{axis:o}});return i.forEach(p=>t.disposeData(p.dataId)),l}var vH={kernelName:fs,backendName:"wasm",kernelFunc:Pfe};var AH;function Ffe(r){AH=r.wasm.cwrap(Mo,null,["number","array","number","number","array","array","number","number"])}function Mfe(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,constantValue:o}}=r,s=n.map((h,g)=>h[0]+e.shape[g]+h[1]);if(b.sizeFromShape(e.shape)===0)return LD({backend:t,attrs:{shape:s,value:o,dtype:e.dtype}});let a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(s,e.dtype),l=t.dataIdMap.get(i.dataId).id,p=new Uint8Array(new Int32Array(e.shape).buffer),m=n.map(h=>h[0]),c=n.map(h=>h[1]),d=new Uint8Array(new Int32Array(m).buffer),f=new Uint8Array(new Int32Array(c).buffer);return AH(a,p,e.shape.length,Je[e.dtype],d,f,o,l),i}var Px={kernelName:Mo,backendName:"wasm",kernelFunc:Mfe,setupFunc:Ffe};var Rfe=!1,wH=ht(Ro,Rfe);var NH;function Efe(r){NH=r.wasm.cwrap(Eo,null,["number","number","number"])}function _fe(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,i=s,u=n,l=u;u.dtype!=="float32"&&(l=ti({backend:t,inputs:{x:n},attrs:{dtype:"float32"}}),i=t.dataIdMap.get(l.dataId).id);let p=t.makeOutput(n.shape,"float32"),m=t.dataIdMap.get(p.dataId).id;return NH(i,a,m),u.dtype!=="float32"&&t.disposeData(l.dataId),p}var DH={kernelName:Eo,backendName:"wasm",setupFunc:Efe,kernelFunc:_fe};var PH;function Lfe(r){PH=r.wasm.cwrap(_o,null,["number","number","number","number"])}function $fe(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=An(a,o,e),f=m;if(d){let x=e.dataIdMap.get(p.dataId).id;x!==i&&(l=p,u=x,f=C.getInnerMostAxes(f.length,l.shape.length))}C.assertAxesAreInnerMostDims("prod",f,l.shape.length);let[h,g]=C.computeOutAndReduceShapes(l.shape,f),y=b.sizeFromShape(g),T=e.makeOutput(h,l.dtype);if(b.sizeFromShape(l.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;PH(u,y,Je[T.dtype],x)}if(d&&e.disposeData(p.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var FH={kernelName:_o,backendName:"wasm",setupFunc:Lfe,kernelFunc:$fe};var Bfe=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=xp(n,o,s,a),u=e.makeOutput([i.length],a);return e.typedArrayFromHeap(u).set(i),u},MH={kernelName:ii,backendName:"wasm",kernelFunc:Bfe};var Ofe=!0,RH=ht(ho,Ofe);var EH=lt(Lo);var _H=lt(Oo);var LH;function zfe(r){LH=r.wasm.cwrap(Bo,null,["number","number","number","number","number","number","number","number","number","number"])}function Gfe(r){let{backend:e,inputs:t,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,[p,m,c,d]=o.shape,f=[p,u,l,d],h=e.dataIdMap.get(o.dataId),g;h.dtype!=="float32"&&(g=ti({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),h=e.dataIdMap.get(g.dataId));let y=h.id,T=e.makeOutput(f,"float32");if(b.sizeFromShape(o.shape)===0)return T;let x=e.dataIdMap.get(T.dataId).id;return LH(y,p,m,c,d,u,l,s?1:0,a?1:0,x),g!=null&&e.disposeData(g.dataId),T}var $H={kernelName:Bo,backendName:"wasm",setupFunc:zfe,kernelFunc:Gfe};var BH;function Ufe(r){BH=r.wasm.cwrap($o,null,["number","number","number","number","number","number","number","number","number","number"])}function Wfe(r){let{backend:e,inputs:t,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,[p,m,c,d]=o.shape,f=[p,u,l,d],h=e.makeOutput(f,"float32");if(b.sizeFromShape(o.shape)===0)return h;let g=e.dataIdMap.get(o.dataId),y;g.dtype!=="float32"&&(y=ti({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),g=e.dataIdMap.get(y.dataId));let T=g.id,x=e.dataIdMap.get(h.dataId).id;return BH(T,p,m,c,d,u,l,s?1:0,a?1:0,x),y!=null&&e.disposeData(y.dataId),h}var OH={kernelName:$o,backendName:"wasm",setupFunc:Ufe,kernelFunc:Wfe};var zH;function Kfe(r){zH=r.wasm.cwrap(va,null,["number","array","number","array","number","number"])}function Vfe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,a=b.parseAxisParam(s,o.shape);if(o.shape.length===0)return Wp({inputs:{x:o},backend:t});let i=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(o.dataId).id,l=t.dataIdMap.get(i.dataId).id,p=new Uint8Array(new Int32Array(a).buffer),m=new Uint8Array(new Int32Array(o.shape).buffer);zH(u,p,a.length,m,o.shape.length,l);let c=dr({inputs:{x:i},attrs:{shape:o.shape},backend:t});return t.disposeData(i.dataId),c}var GH={kernelName:va,backendName:"wasm",kernelFunc:Vfe,setupFunc:Kfe};var UH;function Hfe(r){UH=r.wasm.cwrap(Ra,null,["number","number","number","number","number","number","number","number","array","number","number"])}function qfe(r){let{inputs:e,backend:t,attrs:n}=r,{image:o}=e,{radians:s,fillValue:a,center:i}=n,u=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(u.dataId).id,[m,c,d,f]=o.shape,[h,g]=C.getImageCenter(i,c,d),y=a===0,T=255,x=typeof a=="number"?[a,a,a,y?0:T]:[...a,T],I=new Uint8Array(new Int32Array(x).buffer);return UH(l,m,c,d,f,s,h,g,I,x.length,p),u}var WH={kernelName:Ra,backendName:"wasm",kernelFunc:qfe,setupFunc:Hfe};var KH=lt(Aa);var VH=lt(zo);var HH;function jfe(r){HH=r.wasm.cwrap(wa,null,["number","number","number","number","number","number","array","number","number"])}function Xfe(r){let{backend:e,inputs:t,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,i=e.makeOutput(a,s.dtype);if(b.sizeFromShape(a)===0)return i;let{sliceRank:u,numUpdates:l,sliceSize:p,strides:m,outputSize:c}=Gd.calculateShapes(s,o,a),f=e.dataIdMap.get(o.dataId).id,g=e.dataIdMap.get(s.dataId).id,y=new Uint8Array(new Int32Array(m).buffer),T=e.dataIdMap.get(i.dataId).id;return HH(f,g,Je[s.dtype],u,l,p,y,c,T),i}var qH={kernelName:wa,backendName:"wasm",setupFunc:jfe,kernelFunc:Xfe};var jH;function Yfe(r){jH=r.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Zfe(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(s.dataId).id,l=t.makeOutput(o.shape,o.dtype),p=t.dataIdMap.get(l.dataId).id,m=n.shape.length,c=o.shape.length,d=m===0||m>1||c===1?1:b.sizeFromShape(o.shape.slice(1));return jH(a,i,u,d,p),l}var XH={kernelName:gs,backendName:"wasm",kernelFunc:Zfe,setupFunc:Yfe};var YH;function Qfe(r){YH=r.wasm.cwrap(Uo,null,["number","number"])}function Jfe(r){let{backend:e,inputs:{x:t}}=r,n=e.dataIdMap.get(t.dataId).id,o=e.makeOutput(t.shape,t.dtype),s=e.dataIdMap.get(o.dataId).id;return b.sizeFromShape(o.shape)===0||YH(n,s),o}var ZH={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Qfe,kernelFunc:Jfe};var QH=lt(Go);var JH;function ehe(r){JH=r.wasm.cwrap(Vo,null,["number","number","number","number"])}function the(r){let{backend:e,inputs:{logits:t},attrs:{dim:n}}=r,o=e.dataIdMap.get(t.dataId).id,s=e.makeOutput(t.shape,t.dtype),a=e.dataIdMap.get(s.dataId).id,i=t.shape[n],u=b.sizeFromShape(t.shape)/i;return b.sizeFromShape(s.shape)===0||JH(o,a,i,u),s}var eq={kernelName:Vo,backendName:"wasm",setupFunc:ehe,kernelFunc:the};function rhe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n,i=b.sizeFromShape(s),u=[[0,0]];u.push(...a);for(let w=1+s.length;w<o.shape.length;++w)u.push([0,0]);let l=Px.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),p=C.getReshaped(l.shape,s,i,!1),m=C.getPermuted(p.length,s.length,!1),c=C.getReshapedPermuted(l.shape,s,i,!1),h=dr({inputs:{x:l},backend:t,attrs:{shape:p}}),T=ns({inputs:{x:h},backend:t,attrs:{perm:m}}),k=dr({inputs:{x:T},backend:t,attrs:{shape:c}});return t.disposeData(l.dataId),t.disposeData(h.dataId),t.disposeData(T.dataId),k}var tq={kernelName:ys,backendName:"wasm",kernelFunc:rhe};var rq;function nhe(r){rq=r.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function ohe(r){let{backend:e,inputs:t}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=t,i=n.shape[0],u=n.shape[1],l=e.readSync(s.dataId)[0],p=[i+l,u],m=e.dataIdMap.get(n.dataId).id,c=e.dataIdMap.get(o.dataId).id,d=e.dataIdMap.get(a.dataId).id,f=e.makeOutput(p,n.dtype),h=e.dataIdMap.get(f.dataId).id,g=e.makeOutput(p.slice(0,1),o.dtype),y=e.dataIdMap.get(g.dataId).id,T=e.makeOutput([l],"bool"),x=e.dataIdMap.get(T.dataId).id,I=e.makeOutput([i],n.dtype),k=e.dataIdMap.get(I.dataId).id,w=e.makeOutput([4],"int32"),F=e.dataIdMap.get(w.dataId).id,M=rq(m,c,Je[o.dtype],i,l,u,d,h,y,x,k,F),R=e.readSync(w.dataId),L;switch(R[0]){case 1:{L=C.getSparseFillEmptyRowsIndicesDenseShapeMismatch(R[1]);break}case 2:{L=C.getSparseFillEmptyRowsNegativeIndexErrorMessage(R[1],R[2]);break}case 3:L=C.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(R[1],R[2],R[3]);break;default:L=""}if(e.disposeData(w.dataId),L)throw e.disposeData(f.dataId),e.disposeData(g.dataId),e.disposeData(T.dataId),e.disposeData(I.dataId),new Error(L);let O=f,W=g;return M!==p[0]&&(O=Qs({inputs:{x:f},attrs:{begin:0,size:[M,u]},backend:e}),W=Qs({inputs:{x:g},attrs:{begin:0,size:M},backend:e}),e.disposeData(f.dataId),e.disposeData(g.dataId)),[O,W,T,I]}var nq={kernelName:_u,backendName:"wasm",setupFunc:nhe,kernelFunc:ohe};var oq;function she(r){oq=r.wasm.cwrap(Yi,null,["number","number","number","number","number","number","number"])}function ahe(r){let{backend:e,inputs:t}=r,{inputIndices:n,inputShape:o,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=e.dataIdMap.get(n.dataId).id,i=e.dataIdMap.get(o.dataId).id,u=e.dataIdMap.get(s.dataId).id,l=n.shape[0],p=b.sizeFromShape(s.shape),m=e.makeOutput([l,p],n.dtype),c=e.dataIdMap.get(m.dataId).id,d=e.makeOutput([p],s.dtype),f=e.dataIdMap.get(d.dataId).id,h=e.makeOutput([3],"int32"),g=e.dataIdMap.get(h.dataId).id;oq(a,i,u,l,c,f,g);let y=e.readSync(h.dataId),T;switch(y[0]){case 0:{T=C.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{T=C.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:T=C.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let x=Array.from(e.readSync(o.dataId)),I=Array.from(e.readSync(d.dataId));T=C.getSparseReshapeInputOutputMultipleErrorMessage(x,I);break}case 4:{let x=Array.from(e.readSync(o.dataId)),I=Array.from(e.readSync(d.dataId));T=C.getSparseReshapeInputOutputMismatchErrorMessage(x,I);break}default:T=""}if(e.disposeData(h.dataId),T)throw e.disposeData(m.dataId),e.disposeData(d.dataId),new Error(T);return[m,d]}var sq={kernelName:Yi,backendName:"wasm",setupFunc:she,kernelFunc:ahe};var aq;function Fx(r){aq=r.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function Mx(r,e){let{backend:t,inputs:n}=r,{data:o,indices:s,segmentIds:a}=n,i=s.shape[0],u=t.readSync(a.dataId,i-1,i)[0],p=i>0?u+1:0;if(p<0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=o.shape.slice();m[0]=p;let c=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(s.dataId).id,f=t.dataIdMap.get(a.dataId).id,h=t.makeOutput(m,o.dtype),g=t.dataIdMap.get(h.dataId).id,y=t.makeOutput([4],"int32"),T=t.dataIdMap.get(y.dataId).id;aq(c,Je[o.dtype],o.shape[0],d,f,g,T,e,0);let x=t.readSync(y.dataId),I;switch(x[0]){case 0:{I=C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{I=C.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:I=C.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:I=C.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:I=""}if(t.disposeData(y.dataId),I)throw t.disposeData(h.dataId),new Error(I);return h}function ihe(r){return Mx(r,!0)}var iq={kernelName:Lu,backendName:"wasm",setupFunc:Fx,kernelFunc:ihe};function uhe(r){return Mx(r,!1)}var uq={kernelName:$u,backendName:"wasm",setupFunc:Fx,kernelFunc:uhe};function lhe(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=t,i=b.parseAxisParam(a,o.shape)[0],u=C.prepareSplitSize(o,s,i),l=new Array(o.shape.length).fill(0),p=o.shape.slice();return u.map(m=>{let c=[...p];c[i]=m;let d=Qs({inputs:{x:o},attrs:{begin:l,size:c},backend:n});return l[i]+=m,d})}var lq={kernelName:Ts,backendName:"wasm",kernelFunc:lhe};var pq=lt(Wo);var mq=lt(ui);var phe=!0,cq=ht(Ho,phe);var dq;function mhe(r){dq=r.wasm.cwrap(Cs,null,["number","number","number","number"])}function che(r){let{backend:e,inputs:t,attrs:n}=r,{alpha:o}=n,{x:s}=t,a=e.dataIdMap.get(s.dataId).id,i=e.makeOutput(s.shape,s.dtype),u=e.dataIdMap.get(i.dataId).id;return dq(a,o,Je[s.dtype],u),i}var fq={kernelName:Cs,backendName:"wasm",setupFunc:mhe,kernelFunc:che};var hq;function dhe(r){hq=r.wasm.cwrap(Da,null,["number","array","number","array","array","array","array","array","number","number"])}function fhe(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:T,end:x,strides:I}=xt.sliceInfo(o.shape,s,a,i,u,l,p,m,c),k;if(h)k=dr({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let w=xt.computeOutShape(T,x,I),F=Qs({inputs:{x:o},backend:e,attrs:{begin:T,size:w}});k=dr({inputs:{x:F},backend:e,attrs:{shape:f}}),e.disposeData(F.dataId)}else{let w=e.makeOutput(d,"float32"),F=e.dataIdMap.get(o.dataId).id,M=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),R=new Uint8Array(new Int32Array(T).buffer),L=new Uint8Array(new Int32Array(x).buffer),O=new Uint8Array(new Int32Array(I).buffer),W=new Uint8Array(new Int32Array(d).buffer),V=new Uint8Array(new Int32Array(b.computeStrides(d)).buffer),j=e.dataIdMap.get(w.dataId).id;hq(F,M,o.shape.length,R,L,O,W,V,d.length,j),k=dr({inputs:{x:w},backend:e,attrs:{shape:f}}),e.disposeData(w.dataId)}return k}var gq={kernelName:Da,backendName:"wasm",setupFunc:dhe,kernelFunc:fhe};function hhe(r){let{backend:e,inputs:t,attrs:n}=r,{data:o,dataSplits:s}=t,{separator:a,nGramWidths:i,leftPad:u,rightPad:l,padWidth:p,preserveShortSequences:m}=n,c=e.readSync(o.dataId),d=e.readSync(s.dataId),[f,h]=Cp(c,d,a,i,u,l,p,m),g=e.makeOutput([f.length],"string"),y=e.dataIdMap.get(g.dataId);y.stringBytes=f;let T=e.makeOutput(s.shape,"int32");return e.typedArrayFromHeap(T).set(h),[g,T]}var bq={kernelName:li,backendName:"wasm",kernelFunc:hhe};function ghe(r){let{backend:e,inputs:t,attrs:n}=r,{input:o,delimiter:s}=t,{skipEmpty:a}=n,i=e.readSync(o.dataId),u=e.readSync(s.dataId),[l,p,m]=kp(i,u[0],a),c=p.length,d=e.makeOutput([c,2],"int32");e.typedArrayFromHeap(d).set(l);let h=e.makeOutput([c],"string"),g=e.dataIdMap.get(h.dataId);g.stringBytes=p;let y=e.makeOutput([2],"int32");return e.typedArrayFromHeap(y).set(m),[d,h,y]}var yq={kernelName:Ou,backendName:"wasm",kernelFunc:ghe};function bhe(r){let{backend:e,inputs:t,attrs:n}=r,{input:o}=t,{numBuckets:s}=n,a=e.readSync(o.dataId),i=Sp(a,s),u=e.makeOutput(o.shape,"int32");return e.typedArrayFromHeap(u).set(i),u}var Tq={kernelName:zu,backendName:"wasm",kernelFunc:bhe};var yhe=!0,xq=ht(qo,yhe);var Iq;function The(r){Iq=r.wasm.cwrap(Ko,null,["number","number","number","number"])}function xhe(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=An(a,o,e),f=m;if(d){let x=e.dataIdMap.get(p.dataId).id;x!==i&&(l=p,u=x,f=C.getInnerMostAxes(f.length,l.shape.length))}C.assertAxesAreInnerMostDims("sum",f,l.shape.length);let[h,g]=C.computeOutAndReduceShapes(l.shape,f),y=b.sizeFromShape(g),T=e.makeOutput(h,l.dtype);if(b.sizeFromShape(l.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;Iq(u,y,Je[T.dtype],x)}if(d&&e.disposeData(p.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var Cq={kernelName:Ko,backendName:"wasm",setupFunc:The,kernelFunc:xhe};var kq=lt(Pa);var Sq=lt(jo);var vq;function Ihe(r){vq=r.wasm.cwrap(Nn,null,["number","array","number","array","number","number"])}function Che(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,s=t.dataIdMap.get(o.dataId).id,{reps:a}=n,i=new Array(o.shape.length);for(let c=0;c<i.length;c++)i[c]=o.shape[c]*a[c];let u=new Uint8Array(new Int32Array(o.shape).buffer),l=new Uint8Array(new Int32Array(i).buffer),p=t.makeOutput(i,o.dtype),m=t.dataIdMap.get(p.dataId).id;return vq(s,u,o.shape.length,l,i.length,Je[p.dtype],m),p}var Aq={kernelName:Nn,backendName:"wasm",setupFunc:Ihe,kernelFunc:Che};var wq;function khe(r){wq=r.wasm.cwrap(Fa,null,["number","array","number","number","number","bool","number","number"])}var She=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{k:o,sorted:s}=t,a=e.dataIdMap.get(n.dataId).id,i=new Uint8Array(new Int32Array(n.shape).buffer),u=n.shape.slice();u[u.length-1]=o;let l=e.makeOutput(u,n.dtype),p=e.dataIdMap.get(l.dataId).id,m=e.makeOutput(u,"int32"),c=e.dataIdMap.get(m.dataId).id;return wq(a,i,n.shape.length,Je[n.dtype],o,s,p,c),[l,m]},Nq={kernelName:Fa,backendName:"wasm",setupFunc:khe,kernelFunc:She};var Dq;function vhe(r){Dq=r.wasm.cwrap(Ma,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function Ahe(r){let{backend:e,inputs:t,attrs:n}=r,{image:o,transforms:s}=t,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=n,[p,m,c,d]=o.shape,[f,h]=l??[m,c],g=[p,f,h,d],y=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),T=e.makeOutput(g,o.dtype),x=e.dataIdMap.get(T.dataId).id,k=e.dataIdMap.get(o.dataId).id,F=e.dataIdMap.get(s.dataId).id,M=a==="nearest"?1:2,R;switch(i){case"constant":R=1;break;case"reflect":R=2;break;case"wrap":R=3;break;case"nearest":R=4;break;default:R=1;break}return Dq(k,F,s.shape[0]>1,p,f,h,d,c,m,y,o.shape.length-1,M,R,u,x),T}var Pq={kernelName:Ma,backendName:"wasm",setupFunc:vhe,kernelFunc:Ahe};function whe(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape[s],i=o.shape.length,u=new Array(i-1),l=0;for(let d=0;d<i;d++)d!==s&&(u[l++]=o.shape[d]);let p=new Array(a),m=new Array(i).fill(0),c=o.shape.slice();c[s]=1;for(let d=0;d<p.length;d++)m[s]=d,p[d]=Qs({inputs:{x:o},attrs:{begin:m,size:c},backend:t});return p.map(({dataId:d,dtype:f})=>({dataId:d,dtype:f,shape:u}))}var Fq={kernelName:xs,backendName:"wasm",kernelFunc:whe};function Nhe(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(0),n}var Mq={kernelName:Is,backendName:"wasm",kernelFunc:Nhe};var Dhe=[_V,LV,$V,OV,KV,HV,jV,YV,JV,t4,r4,n4,s4,a4,u4,p4,m4,c4,h4,b4,T4,I4,k4,S4,v4,A4,w4,N4,P4,F4,M4,E4,L4,B4,z4,U4,W4,K4,zV,H4,q4,j4,X4,Y4,Z4,Q4,J4,tH,rH,oH,aH,uH,lH,cH,dH,fH,gH,yH,xH,IH,kH,SH,vH,Px,wH,DH,FH,MH,RH,EH,_H,ZV,$H,OH,GH,WH,KH,VH,qH,XH,ZH,QH,e4,eq,tq,nq,sq,iq,uq,lq,pq,mq,cq,fq,gq,bq,yq,Tq,xq,Cq,kq,Sq,Aq,Nq,Pq,UV,Fq,Mq];for(let r of Dhe)Zi(r);var $D=B();$D.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));$D.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if($D.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var qD=Ml(_q());var Nt={},Lq=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";Lq&&(GD=BD(),UD=GD.parentPort,UD.on("message",function(r){onmessage({data:r})}),WD=Eh(),Object.assign(global,{self:global,require:b0,Module:Nt,location:{href:__filename},Worker:GD.Worker,importScripts:function(r){(0,eval)(WD.readFileSync(r,"utf8"))},postMessage:function(r){UD.postMessage(r)},performance:global.performance||{now:function(){return Date.now()}}}));var GD,UD,WD;function Phe(){var r=Array.prototype.slice.call(arguments).join(" ");if(Lq){WD.writeSync(2,r+`
`);return}console.error(r)}function Fhe(){var r=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:r,threadId:Nt._pthread_self()})}var Ex=Phe;self.alert=Fhe;Nt.instantiateWasm=(r,e)=>{var t=new WebAssembly.Instance(Nt.wasmModule,r);return e(t),Nt.wasmModule=null,t.exports};self.onmessage=r=>{try{if(r.data.cmd==="load"){if(Nt.wasmModule=r.data.wasmModule,Nt.wasmMemory=r.data.wasmMemory,Nt.buffer=Nt.wasmMemory.buffer,Nt.ENVIRONMENT_IS_PTHREAD=!0,typeof r.data.urlOrBlob=="string")importScripts(r.data.urlOrBlob);else{var e=URL.createObjectURL(r.data.urlOrBlob);importScripts(e),URL.revokeObjectURL(e)}WasmBackendModuleThreadedSimd(Nt).then(function(n){Nt=n})}else if(r.data.cmd==="run"){Nt.__performance_now_clock_drift=performance.now()-r.data.time,Nt.__emscripten_thread_init(r.data.threadInfoStruct,0,0,1),Nt.establishStackSpace(),Nt.PThread.receiveObjectTransfer(r.data),Nt.PThread.threadInit();try{var t=Nt.invokeEntryPoint(r.data.start_routine,r.data.arg);Nt.keepRuntimeAlive()?Nt.PThread.setExitStatus(t):Nt.__emscripten_thread_exit(t)}catch(n){if(n!="unwind")if(n instanceof Nt.ExitStatus)Nt.keepRuntimeAlive()||Nt.__emscripten_thread_exit(n.status);else throw n}}else r.data.cmd==="cancel"?Nt._pthread_self()&&Nt.__emscripten_thread_exit(-1):r.data.target==="setimmediate"||(r.data.cmd==="processThreadQueue"?Nt._pthread_self()&&Nt._emscripten_current_thread_process_queued_calls():r.data.cmd==="processProxyingQueue"?Nt._pthread_self()&&Nt._emscripten_proxy_execute_queue(r.data.queue):(Ex("worker.js received unknown command "+r.data.cmd),Ex(r.data)))}catch(n){throw Ex("worker.js onmessage() captured an uncaught exception: "+n),n&&n.stack&&Ex(n.stack),Nt.__emscripten_thread_crashed&&Nt.__emscripten_thread_crashed(),n}};var jD=Ml($q());var Bq=qD.default||qD,Mhe=jD.default||jD,$x=class extends as{constructor(e){super();this.wasm=e;this.dataIdNextNumber=1;this.wasm.tfjs.initWithThreadsCount(Uq),HD=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new ri(this,Mn())}write(e,t,n){let o={id:this.dataIdNextNumber++};return this.move(o,e,t,n,1),o}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=b.now();return e(),{kernelMs:b.now()-t}}move(e,t,n,o,s){let a=this.dataIdNextNumber++;if(o==="string"){let p=t;this.dataIdMap.set(e,{id:a,stringBytes:p,shape:n,dtype:o,memoryOffset:null,refCount:s});return}let i=b.sizeFromShape(n),u=i*b.bytesPerElement(o),l=this.wasm._malloc(u);this.dataIdMap.set(e,{id:a,memoryOffset:l,shape:n,dtype:o,refCount:s}),this.wasm.tfjs.registerTensor(a,i,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,u),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:o,dtype:s,shape:a,stringBytes:i}=this.dataIdMap.get(e);if(s==="string")return(t==null||t===0)&&(n==null||n>=i.length)?i:i.slice(t,n);t=t||0,n=n||b.sizeFromShape(a);let u=b.bytesPerElement(s),l=this.wasm.HEAPU8.slice(o+t*u,o+n*u);return Ehe(l.buffer,s)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let o;if(n==null)o=this.write(null,e,t);else{let s=this.dataIdNextNumber++;o={id:s},this.dataIdMap.set(o,{id:s,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=b.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,a,n)}return{dataId:o,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let o=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(n),a=b.sizeFromShape(e);switch(t){case"float32":return new Float32Array(o,s,a);case"int32":return new Int32Array(o,s,a);case"bool":return new Uint8Array(o,s,a);default:throw new Error(`Unknown dtype ${t}`)}}};function Rhe(r){return(e,t)=>(b.fetch(r,{credentials:"same-origin"}).then(n=>{n.ok||e.env.a(`failed to load wasm binary file at '${r}'`),n.arrayBuffer().then(o=>{WebAssembly.instantiate(o,e).then(s=>{t(s.instance,s.module)})})}),{})}function Oq(r,e,t){if(Lx!=null)return Lx;let n="tfjs-backend-wasm.wasm";return r&&e?n="tfjs-backend-wasm-threaded-simd.wasm":r&&(n="tfjs-backend-wasm-simd.wasm"),Ig!=null&&Ig[n]!=null?Ig[n]:t+n}async function Gq(){let[r,e]=await Promise.all([B().getAsync("WASM_HAS_SIMD_SUPPORT"),B().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((t,n)=>{let o={};o.locateFile=(i,u)=>{if(i.endsWith(".worker.js")){let l=(void 0).replace(/\n/g,"\\n"),p=new Blob([l],{type:"application/javascript"});return URL.createObjectURL(p)}return i.endsWith(".wasm")?Oq(r,e,xg??u):u+i},XD&&(o.instantiateWasm=Rhe(Oq(r,e,xg??"")));let s=!1;o.onAbort=()=>{if(s||Cg)return;Cg=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let a;e&&r&&Lx==null?(o.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+Bq.toString()],{type:"text/javascript"}),a=Bq(o)):a=Mhe(o),a.then(i=>{s=!0,Cg=!1;let u=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",u,["number"]),dispose:i.cwrap("dispose",u,[])},t({wasm:i})}).catch(n)})}function Ehe(r,e){switch(e){case"float32":return new Float32Array(r);case"int32":return new Int32Array(r);case"bool":return new Uint8Array(r);default:throw new Error(`Unknown dtype ${e}`)}}var _he=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Lx=null,xg=null,Ig={},Cg=!1,XD=!1;function Lhe(r,e=!1){if(rk("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Cg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Lx=r,XD=e}function $he(r,e=!1){if(Cg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof r=="string")xg=r;else{Ig=r;let t=_he.filter(n=>Ig[n]==null);if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}XD=e}var Uq=-1,HD=-1;function Bhe(r){Uq=r}function Ohe(){if(HD===-1)throw new Error("WASM backend not initialized.");return HD}var zhe="0.0.0";var Ghe=2;ju("wasm",async()=>{let{wasm:r}=await Gq();return new $x(r)},Ghe);var Sl="3.18.0-20220713",sQr={tfjs:Sl,"tfjs-core":Sl,"tfjs-data":Sl,"tfjs-layers":Sl,"tfjs-converter":Sl,"tfjs-backend-cpu":Sl,"tfjs-backend-webgl":Sl,"tfjs-backend-wasm":Sl};export{is as Abs,Di as Acos,Pi as Acosh,rp as AdadeltaOptimizer,np as AdagradOptimizer,op as AdamOptimizer,sp as AdamaxOptimizer,wn as Add,no as AddN,Fi as All,Mi as Any,oo as ArgMax,si as ArgMin,Ri as Asin,Ei as Asinh,_i as Atan,$i as Atan2,Li as Atanh,so as AvgPool,vu as AvgPool3D,pm as AvgPool3DGrad,lm as AvgPoolGrad,$x as BackendWasm,ao as BatchMatMul,us as BatchToSpaceND,mm as Bincount,cm as BroadcastArgs,S0 as BroadcastTo,_S as Callback,Kk as CallbackList,Un as Cast,io as Ceil,Wn as ClipByValue,Au as Complex,wu as ComplexAbs,ls as Concat,uo as Conv2D,dm as Conv2DBackpropFilter,lo as Conv2DBackpropInput,Nu as Conv3D,fm as Conv3DBackpropFilterV2,hm as Conv3DBackpropInputV2,po as Cos,mo as Cosh,pa as CropAndResize,la as Cumprod,co as Cumsum,Hk as CustomCallback,ri as DataStorage,gm as DenseBincount,ma as DepthToSpace,fo as DepthwiseConv2dNative,bm as DepthwiseConv2dNativeBackpropFilter,ym as DepthwiseConv2dNativeBackpropInput,Tm as Diag,Du as Dilation2D,Pd as Dilation2DBackpropFilter,Dd as Dilation2DBackpropInput,vC as ENV,LS as EarlyStopping,Pu as Einsum,go as Elu,xm as EluGrad,sb as Environment,ca as Equal,Bi as Erf,bo as Exp,ps as ExpandDims,da as Expm1,Im as FFT,ai as Fill,fa as FlipLeftRight,yo as Floor,To as FloorDiv,_l as FromPixels,xo as FusedBatchNorm,Ss as FusedConv2D,vs as FusedDepthwiseConv2D,nd as GPGPUContext,ha as GatherNd,ms as GatherV2,xT as GraphModel,ga as Greater,Io as GreaterEqual,Vk as History,Cm as IFFT,Kn as Identity,Fu as Imag,Mt as InputSpec,Oi as IsFinite,zi as IsInf,Gi as IsNan,as as KernelBackend,Mu as LRN,Sm as LRNGrad,Ly as LayerVariable,ts as LayersModel,Co as LeakyRelu,ba as Less,ya as LessEqual,km as LinSpace,ko as Log,Ui as Log1p,A0 as LogSoftmax,Ta as LogicalAnd,xa as LogicalNot,Wi as LogicalOr,v0 as LogicalXor,qhe as LowerBound,$h as MathBackendCPU,Jh as MathBackendWebGL,So as Max,Ao as MaxPool,Ru as MaxPool3D,Am as MaxPool3DGrad,vm as MaxPoolGrad,wm as MaxPoolWithArgmax,vo as Maximum,wo as Mean,No as Min,Do as Minimum,Po as MirrorPad,Ki as Mod,ap as MomentumOptimizer,Nm as Multinomial,Fo as Multiply,cs as Neg,Ca as NonMaxSuppressionV3,Vi as NonMaxSuppressionV4,ka as NonMaxSuppressionV5,Ia as NotEqual,UC as OP_SCOPE_SUFFIX,Sa as OneHot,ds as OnesLike,Jr as Optimizer,hi as OptimizerConstructors,fs as Pack,Mo as PadV2,jhe as Pool,Ro as Pow,Eo as Prelu,_o as Prod,ip as RMSPropOptimizer,Ws as RNN,ii as Range,Q0 as Rank,Eu as Real,ho as RealDiv,Hi as Reciprocal,$a as Reduction,Lo as Relu,Oo as Relu6,hs as Reshape,Bo as ResizeBilinear,Pm as ResizeBilinearGrad,$o as ResizeNearestNeighbor,Dm as ResizeNearestNeighborGrad,va as Reverse,Ra as RotateWithOffset,Aa as Round,zo as Rsqrt,iu as SGDOptimizer,wa as ScatterNd,Fm as SearchSorted,gs as Select,qi as Selu,wc as Sequential,Uo as Sigmoid,ji as Sign,Go as Sin,Na as Sinh,bs as Slice,Vo as Softmax,Xi as Softplus,ys as SpaceToBatchND,_u as SparseFillEmptyRows,Yi as SparseReshape,Lu as SparseSegmentMean,$u as SparseSegmentSum,Bu as SparseToDense,Ts as SplitV,Wo as Sqrt,ui as Square,Ho as SquaredDifference,Cs as Step,Da as StridedSlice,li as StringNGrams,Ou as StringSplit,zu as StringToHashBucketFast,qo as Sub,Ko as Sum,Tn as SymbolicTensor,Pa as Tan,jo as Tanh,Xe as Tensor,yt as TensorBuffer,Nn as Tile,Fa as TopK,Ma as Transform,Dn as Transpose,Mm as Unique,xs as Unpack,Gu as UnsortedSegmentSum,Xhe as UpperBound,Ku as Variable,Is as ZerosLike,ks as _FusedMatMul,Ut as abs,s1 as acos,a1 as acosh,Z as add,i1 as addN,Db as all,Ud as any,Yu as argMax,u1 as argMin,l1 as asin,p1 as asinh,m1 as atan,c1 as atan2,d1 as atanh,Km as avgPool,Fb as avgPool3d,O2 as backend,C as backend_util,g1 as basicLSTMCell,Qu as batchNorm,Mb as batchNorm2d,Rb as batchNorm3d,Eb as batchNorm4d,Vm as batchToSpaceND,_b as bincount,iZ as booleanMaskAsync,y1 as broadcastArgs,Hm as broadcastTo,Nr as broadcast_util,kb as browser,Te as buffer,Lee as callbacks,ne as cast,T1 as ceil,Or as clipByValue,cn as clone,Pn as complex,mt as concat,Lb as concat1d,$b as concat2d,Bb as concat3d,Ob as concat4d,qR as constraints,zb as conv1d,Zo as conv2d,Gb as conv2dTranspose,Ub as conv3d,Kb as conv3dTranspose,rge as copyRegisteredKernels,jm as cos,Vb as cosh,Xd as cosineWindow,Wd as cumprod,Hb as cumsum,fn as customGrad,W_ as data,x1 as denseBincount,rk as deprecationWarn,I1 as depthToSpace,Ju as depthwiseConv2d,Gee as deregisterOp,Vu as device_util,C1 as diag,k1 as dilation2d,XTe as disableDeprecationWarnings,Fe as dispose,YTe as disposeVariables,me as div,S1 as divNoNan,v1 as dot,kk as dropout,A1 as einsum,el as elu,jTe as enableDebugMode,qTe as enableProdMode,Sk as enclosingPowerOfTwo,Mn as engine,B as env,Xr as equal,w1 as erf,P1 as euclideanNorm,hr as exp,Er as expandDims,F1 as expm1,Hl as eye,sc as fft,ci as fill,rxe as findBackend,nxe as findBackendFactory,tl as floor,Nb as floorDiv,yz as forceHalfFloat,sl as fused,rl as gather,gZ as gatherND,Sb as gather_util,exe as getBackend,NC as getGradient,Md as getKernel,ab as getKernelsForBackend,Ohe as getThreadsCount,QA as gpgpu_util,AX as grad,wX as grads,pr as greater,Ms as greaterEqual,Zl as ifft,Xu as imag,al as image,TZ as inTopKAsync,jR as initializers,eS as input,Fn as io,py as irfft,M1 as isFinite,R1 as isInf,E1 as isNaN,Gt as keep,yr as kernel_impls,AE as layers,Xm as leakyRelu,qb as less,Rs as lessEqual,Ak as linalg,_1 as linspace,Ete as loadGraphModel,_te as loadGraphModelSync,jJ as loadLayersModel,L1 as localResponseNormalization,zr as log,Ym as log1p,$1 as logSigmoid,Yb as logSoftmax,Zb as logSumExp,Zr as logicalAnd,Zm as logicalNot,Qb as logicalOr,B1 as logicalXor,TQ as losses,O1 as lowerBound,qe as matMul,G2 as math,dn as max,Qm as maxPool,ey as maxPool3d,z1 as maxPoolWithArgmax,Qo as maximum,Bt as mean,zd as memory,G1 as meshgrid,wE as metrics,Vd as min,nl as minimum,U1 as mirrorPad,W1 as mod,HJ as model,NE as models,ql as moments,lZ as movingAverage,_ as mul,K1 as multiRNNCell,V1 as multinomial,et as neg,Yd as nextFrame,Vl as norm,au as notEqual,qu as oneHot,gr as ones,_r as onesLike,A as op,H1 as outerProduct,jn as pad,q1 as pad1d,j1 as pad2d,X1 as pad3d,Y1 as pad4d,Z1 as pool,qn as pow,ec as prelu,gb as print,Q1 as prod,ZTe as profile,J1 as rand,gP as randomGamma,Xl as randomNormal,bP as randomStandardNormal,di as randomUniform,ol as range,JTe as ready,nu as real,yP as reciprocal,ju as registerBackend,XJ as registerCallbackConstructor,N0 as registerGradient,Zi as registerKernel,zee as registerOp,DE as regularizers,Qr as relu,ny as relu6,txe as removeBackend,$ as reshape,Dr as reverse,TP as reverse1d,xP as reverse2d,IP as reverse3d,CP as reverse4d,ac as rfft,oy as round,sy as rsqrt,ce as scalar,mZ as scatterND,Gd as scatter_util,Hd as searchSorted,ay as selu,iy as separableConv2d,qJ as sequential,te as serialization,u5 as setBackend,oxe as setPlatform,Bhe as setThreadsCount,Lhe as setWasmPath,$he as setWasmPaths,aA as setWebGLContext,kP as setdiff1dAsync,Kc as shared,En as sigmoid,SP as sign,yQ as signal,uy as sin,ly as sinh,Ge as slice,rc as slice1d,jd as slice2d,nc as slice3d,Yl as slice4d,xt as slice_util,oc as softmax,su as softplus,Jm as spaceToBatchND,xQ as sparse,fZ as sparseToDense,bQ as spectral,Pr as split,$t as sqrt,Ye as square,my as squaredDifference,Es as squeeze,br as stack,fi as step,vP as stridedSlice,IQ as string,le as sub,de as sum,Qi as sumOutType,AP as tan,Zu as tanh,wr as tensor,jt as tensor1d,La as tensor2d,Cb as tensor3d,wP as tensor4d,NP as tensor5d,DP as tensor6d,Ds as tensor_util,o1 as test_util,U as tidy,Yr as tile,QTe as time,PP as topk,up as train,We as transpose,ic as truncatedNormal,FP as unique,tge as unregisterGradient,ege as unregisterKernel,cy as unsortedSegmentSum,Gr as unstack,Et as upcastType,MP as upperBound,b as util,NX as valueAndGrad,DX as valueAndGrads,dy as variable,jb as variableGrads,sQr as version,$te as version_converter,L5 as version_core,mre as version_cpu,Cf as version_layers,zhe as version_wasm,rae as version_webgl,z5t as webgl,Xc as webgl_util,RV as webgpu,Wt as where,hy as whereAsync,It as zeros,De as zerosLike};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/** @license See the LICENSE file. */
//# sourceMappingURL=tfjs.min.esm.js.map
