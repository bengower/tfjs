var MX=Object.create;var Ab=Object.defineProperty;var PX=Object.getOwnPropertyDescriptor;var FX=Object.getOwnPropertyNames;var EX=Object.getPrototypeOf,LX=Object.prototype.hasOwnProperty;var BX=(r,e,t)=>e in r?Ab(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var _r=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),Ye=(r,e)=>{for(var t in e)Ab(r,t,{get:e[t],enumerable:!0})},$X=(r,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of FX(e))!LX.call(r,o)&&o!==t&&Ab(r,o,{get:()=>e[o],enumerable:!(n=PX(e,o))||n.enumerable});return r};var hl=(r,e,t)=>(t=r!=null?MX(EX(r)):{},$X(e||!r||!r.__esModule?Ab(t,"default",{value:r,enumerable:!0}):t,r));var q=(r,e,t)=>(BX(r,typeof e!="symbol"?e+"":e,t),t);var P_=_r((cke,M_)=>{M_.exports=Zt;var pa=null;try{pa=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Zt(r,e,t){this.low=r|0,this.high=e|0,this.unsigned=!!t}Zt.prototype.__isLong__;Object.defineProperty(Zt.prototype,"__isLong__",{value:!0});function Zn(r){return(r&&r.__isLong__)===!0}Zt.isLong=Zn;var k_={},v_={};function Il(r,e){var t,n,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(n=v_[r],n)?n:(t=Qt(r,(r|0)<0?-1:0,!0),o&&(v_[r]=t),t)):(r|=0,(o=-128<=r&&r<128)&&(n=k_[r],n)?n:(t=Qt(r,r<0?-1:0,!1),o&&(k_[r]=t),t))}Zt.fromInt=Il;function la(r,e){if(isNaN(r))return e?Cl:ma;if(e){if(r<0)return Cl;if(r>=N_)return R_}else{if(r<=-w_)return Yn;if(r+1>=w_)return __}return r<0?la(-r,e).neg():Qt(r%pc|0,r/pc|0,e)}Zt.fromNumber=la;function Qt(r,e,t){return new Zt(r,e,t)}Zt.fromBits=Qt;var Rb=Math.pow;function tA(r,e,t){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return ma;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var n;if((n=r.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return tA(r.substring(1),e,t).neg();for(var o=la(Rb(t,8)),s=ma,a=0;a<r.length;a+=8){var i=Math.min(8,r.length-a),p=parseInt(r.substring(a,a+i),t);if(i<8){var u=la(Rb(t,i));s=s.mul(u).add(la(p))}else s=s.mul(o),s=s.add(la(p))}return s.unsigned=e,s}Zt.fromString=tA;function Ii(r,e){return typeof r=="number"?la(r,e):typeof r=="string"?tA(r,e):Qt(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}Zt.fromValue=Ii;var S_=1<<16,pY=1<<24,pc=S_*S_,N_=pc*pc,w_=N_/2,A_=Il(pY),ma=Il(0);Zt.ZERO=ma;var Cl=Il(0,!0);Zt.UZERO=Cl;var uc=Il(1);Zt.ONE=uc;var D_=Il(1,!0);Zt.UONE=D_;var eA=Il(-1);Zt.NEG_ONE=eA;var __=Qt(-1,2147483647,!1);Zt.MAX_VALUE=__;var R_=Qt(-1,-1,!0);Zt.MAX_UNSIGNED_VALUE=R_;var Yn=Qt(0,-2147483648,!1);Zt.MIN_VALUE=Yn;var ke=Zt.prototype;ke.toInt=function(){return this.unsigned?this.low>>>0:this.low};ke.toNumber=function(){return this.unsigned?(this.high>>>0)*pc+(this.low>>>0):this.high*pc+(this.low>>>0)};ke.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Yn)){var t=la(e),n=this.div(t),o=n.mul(t).sub(this);return n.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var s=la(Rb(e,6),this.unsigned),a=this,i="";;){var p=a.div(s),u=a.sub(p.mul(s)).toInt()>>>0,l=u.toString(e);if(a=p,a.isZero())return l+i;for(;l.length<6;)l="0"+l;i=""+l+i}};ke.getHighBits=function(){return this.high};ke.getHighBitsUnsigned=function(){return this.high>>>0};ke.getLowBits=function(){return this.low};ke.getLowBitsUnsigned=function(){return this.low>>>0};ke.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Yn)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return this.high!=0?t+33:t+1};ke.isZero=function(){return this.high===0&&this.low===0};ke.eqz=ke.isZero;ke.isNegative=function(){return!this.unsigned&&this.high<0};ke.isPositive=function(){return this.unsigned||this.high>=0};ke.isOdd=function(){return(this.low&1)===1};ke.isEven=function(){return(this.low&1)===0};ke.equals=function(e){return Zn(e)||(e=Ii(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};ke.eq=ke.equals;ke.notEquals=function(e){return!this.eq(e)};ke.neq=ke.notEquals;ke.ne=ke.notEquals;ke.lessThan=function(e){return this.comp(e)<0};ke.lt=ke.lessThan;ke.lessThanOrEqual=function(e){return this.comp(e)<=0};ke.lte=ke.lessThanOrEqual;ke.le=ke.lessThanOrEqual;ke.greaterThan=function(e){return this.comp(e)>0};ke.gt=ke.greaterThan;ke.greaterThanOrEqual=function(e){return this.comp(e)>=0};ke.gte=ke.greaterThanOrEqual;ke.ge=ke.greaterThanOrEqual;ke.compare=function(e){if(Zn(e)||(e=Ii(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};ke.comp=ke.compare;ke.negate=function(){return!this.unsigned&&this.eq(Yn)?Yn:this.not().add(uc)};ke.neg=ke.negate;ke.add=function(e){Zn(e)||(e=Ii(e));var t=this.high>>>16,n=this.high&65535,o=this.low>>>16,s=this.low&65535,a=e.high>>>16,i=e.high&65535,p=e.low>>>16,u=e.low&65535,l=0,m=0,c=0,d=0;return d+=s+u,c+=d>>>16,d&=65535,c+=o+p,m+=c>>>16,c&=65535,m+=n+i,l+=m>>>16,m&=65535,l+=t+a,l&=65535,Qt(c<<16|d,l<<16|m,this.unsigned)};ke.subtract=function(e){return Zn(e)||(e=Ii(e)),this.add(e.neg())};ke.sub=ke.subtract;ke.multiply=function(e){if(this.isZero())return ma;if(Zn(e)||(e=Ii(e)),pa){var t=pa.mul(this.low,this.high,e.low,e.high);return Qt(t,pa.get_high(),this.unsigned)}if(e.isZero())return ma;if(this.eq(Yn))return e.isOdd()?Yn:ma;if(e.eq(Yn))return this.isOdd()?Yn:ma;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(A_)&&e.lt(A_))return la(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,o=this.high&65535,s=this.low>>>16,a=this.low&65535,i=e.high>>>16,p=e.high&65535,u=e.low>>>16,l=e.low&65535,m=0,c=0,d=0,f=0;return f+=a*l,d+=f>>>16,f&=65535,d+=s*l,c+=d>>>16,d&=65535,d+=a*u,c+=d>>>16,d&=65535,c+=o*l,m+=c>>>16,c&=65535,c+=s*u,m+=c>>>16,c&=65535,c+=a*p,m+=c>>>16,c&=65535,m+=n*l+o*u+s*p+a*i,m&=65535,Qt(d<<16|f,m<<16|c,this.unsigned)};ke.mul=ke.multiply;ke.divide=function(e){if(Zn(e)||(e=Ii(e)),e.isZero())throw Error("division by zero");if(pa){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?pa.div_u:pa.div_s)(this.low,this.high,e.low,e.high);return Qt(t,pa.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Cl:ma;var n,o,s;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Cl;if(e.gt(this.shru(1)))return D_;s=Cl}else{if(this.eq(Yn)){if(e.eq(uc)||e.eq(eA))return Yn;if(e.eq(Yn))return uc;var a=this.shr(1);return n=a.div(e).shl(1),n.eq(ma)?e.isNegative()?uc:eA:(o=this.sub(e.mul(n)),s=n.add(o.div(e)),s)}else if(e.eq(Yn))return this.unsigned?Cl:ma;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=ma}for(o=this;o.gte(e);){n=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),p=i<=48?1:Rb(2,i-48),u=la(n),l=u.mul(e);l.isNegative()||l.gt(o);)n-=p,u=la(n,this.unsigned),l=u.mul(e);u.isZero()&&(u=uc),s=s.add(u),o=o.sub(l)}return s};ke.div=ke.divide;ke.modulo=function(e){if(Zn(e)||(e=Ii(e)),pa){var t=(this.unsigned?pa.rem_u:pa.rem_s)(this.low,this.high,e.low,e.high);return Qt(t,pa.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};ke.mod=ke.modulo;ke.rem=ke.modulo;ke.not=function(){return Qt(~this.low,~this.high,this.unsigned)};ke.and=function(e){return Zn(e)||(e=Ii(e)),Qt(this.low&e.low,this.high&e.high,this.unsigned)};ke.or=function(e){return Zn(e)||(e=Ii(e)),Qt(this.low|e.low,this.high|e.high,this.unsigned)};ke.xor=function(e){return Zn(e)||(e=Ii(e)),Qt(this.low^e.low,this.high^e.high,this.unsigned)};ke.shiftLeft=function(e){return Zn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Qt(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Qt(0,this.low<<e-32,this.unsigned)};ke.shl=ke.shiftLeft;ke.shiftRight=function(e){return Zn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Qt(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Qt(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};ke.shr=ke.shiftRight;ke.shiftRightUnsigned=function(e){if(Zn(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var n=this.low;return Qt(n>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?Qt(t,0,this.unsigned):Qt(t>>>e-32,0,this.unsigned)};ke.shru=ke.shiftRightUnsigned;ke.shr_u=ke.shiftRightUnsigned;ke.toSigned=function(){return this.unsigned?Qt(this.low,this.high,!1):this};ke.toUnsigned=function(){return this.unsigned?this:Qt(this.low,this.high,!0)};ke.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};ke.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};ke.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};Zt.fromBytes=function(e,t,n){return n?Zt.fromBytesLE(e,t):Zt.fromBytesBE(e,t)};Zt.fromBytesLE=function(e,t){return new Zt(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};Zt.fromBytesBE=function(e,t){return new Zt(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}});var y1=_r(()=>{});var x1=_r(()=>{});var TR=_r((xR,DA)=>{(function(r,e,t){function n(i){var p=this,u=a();p.next=function(){var l=2091639*p.s0+p.c*23283064365386963e-26;return p.s0=p.s1,p.s1=p.s2,p.s2=l-(p.c=l|0)},p.c=1,p.s0=u(" "),p.s1=u(" "),p.s2=u(" "),p.s0-=u(i),p.s0<0&&(p.s0+=1),p.s1-=u(i),p.s1<0&&(p.s1+=1),p.s2-=u(i),p.s2<0&&(p.s2+=1),u=null}function o(i,p){return p.c=i.c,p.s0=i.s0,p.s1=i.s1,p.s2=i.s2,p}function s(i,p){var u=new n(i),l=p&&p.state,m=u.next;return m.int32=function(){return u.next()*4294967296|0},m.double=function(){return m()+(m()*2097152|0)*11102230246251565e-32},m.quick=m,l&&(typeof l=="object"&&o(l,u),m.state=function(){return o(u,{})}),m}function a(){var i=4022871197,p=function(u){u=String(u);for(var l=0;l<u.length;l++){i+=u.charCodeAt(l);var m=.02519603282416938*i;i=m>>>0,m-=i,m*=i,i=m>>>0,m-=i,i+=m*4294967296}return(i>>>0)*23283064365386963e-26};return p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(xR,typeof DA=="object"&&DA,typeof define=="function"&&define)});var IR=_r((CR,_A)=>{(function(r,e,t){function n(a){var i=this,p="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var l=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^l^l>>>8},a===(a|0)?i.x=a:p+=a;for(var u=0;u<p.length+64;u++)i.x^=p.charCodeAt(u)|0,i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i}function s(a,i){var p=new n(a),u=i&&i.state,l=function(){return(p.next()>>>0)/4294967296};return l.double=function(){do var m=p.next()>>>11,c=(p.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=p.next,l.quick=l,u&&(typeof u=="object"&&o(u,p),l.state=function(){return o(p,{})}),l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(CR,typeof _A=="object"&&_A,typeof define=="function"&&define)});var vR=_r((kR,RA)=>{(function(r,e,t){function n(a){var i=this,p="";i.next=function(){var l=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(l^l<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,a===(a|0)?i.x=a:p+=a;for(var u=0;u<p.length+64;u++)i.x^=p.charCodeAt(u)|0,u==p.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i.v=a.v,i.d=a.d,i}function s(a,i){var p=new n(a),u=i&&i.state,l=function(){return(p.next()>>>0)/4294967296};return l.double=function(){do var m=p.next()>>>11,c=(p.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=p.next,l.quick=l,u&&(typeof u=="object"&&o(u,p),l.state=function(){return o(p,{})}),l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(kR,typeof RA=="object"&&RA,typeof define=="function"&&define)});var wR=_r((SR,MA)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.x,l=i.i,m,c,d;return m=u[l],m^=m>>>7,c=m^m<<24,m=u[l+1&7],c^=m^m>>>10,m=u[l+3&7],c^=m^m>>>3,m=u[l+4&7],c^=m^m<<7,m=u[l+7&7],m=m^m<<13,c^=m^m<<9,u[l]=c,i.i=l+1&7,c};function p(u,l){var m,c,d=[];if(l===(l|0))c=d[0]=l;else for(l=""+l,m=0;m<l.length;++m)d[m&7]=d[m&7]<<15^l.charCodeAt(m)+d[m+1&7]<<13;for(;d.length<8;)d.push(0);for(m=0;m<8&&d[m]===0;++m);for(m==8?c=d[7]=-1:c=d[m],u.x=d,u.i=0,m=256;m>0;--m)u.next()}p(i,a)}function o(a,i){return i.x=a.x.slice(),i.i=a.i,i}function s(a,i){a==null&&(a=+new Date);var p=new n(a),u=i&&i.state,l=function(){return(p.next()>>>0)/4294967296};return l.double=function(){do var m=p.next()>>>11,c=(p.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=p.next,l.quick=l,u&&(u.x&&o(u,p),l.state=function(){return o(p,{})}),l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(SR,typeof MA=="object"&&MA,typeof define=="function"&&define)});var NR=_r((AR,PA)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.w,l=i.X,m=i.i,c,d;return i.w=u=u+1640531527|0,d=l[m+34&127],c=l[m=m+1&127],d^=d<<13,c^=c<<17,d^=d>>>15,c^=c>>>12,d=l[m]=d^c,i.i=m,d+(u^u>>>16)|0};function p(u,l){var m,c,d,f,h,g=[],b=128;for(l===(l|0)?(c=l,l=null):(l=l+"\0",c=0,b=Math.max(b,l.length)),d=0,f=-32;f<b;++f)l&&(c^=l.charCodeAt((f+32)%l.length)),f===0&&(h=c),c^=c<<10,c^=c>>>15,c^=c<<4,c^=c>>>13,f>=0&&(h=h+1640531527|0,m=g[f&127]^=c+h,d=m==0?d+1:0);for(d>=128&&(g[(l&&l.length||0)&127]=-1),d=127,f=4*128;f>0;--f)c=g[d+34&127],m=g[d=d+1&127],c^=c<<13,m^=m<<17,c^=c>>>15,m^=m>>>12,g[d]=c^m;u.w=h,u.X=g,u.i=d}p(i,a)}function o(a,i){return i.i=a.i,i.w=a.w,i.X=a.X.slice(),i}function s(a,i){a==null&&(a=+new Date);var p=new n(a),u=i&&i.state,l=function(){return(p.next()>>>0)/4294967296};return l.double=function(){do var m=p.next()>>>11,c=(p.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=p.next,l.quick=l,u&&(u.X&&o(u,p),l.state=function(){return o(p,{})}),l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(AR,typeof PA=="object"&&PA,typeof define=="function"&&define)});var _R=_r((DR,FA)=>{(function(r,e,t){function n(a){var i=this,p="";i.next=function(){var l=i.b,m=i.c,c=i.d,d=i.a;return l=l<<25^l>>>7^m,m=m-c|0,c=c<<24^c>>>8^d,d=d-l|0,i.b=l=l<<20^l>>>12^m,i.c=m=m-c|0,i.d=c<<16^m>>>16^d,i.a=d-l|0},i.a=0,i.b=0,i.c=-1640531527,i.d=1367130551,a===Math.floor(a)?(i.a=a/4294967296|0,i.b=a|0):p+=a;for(var u=0;u<p.length+20;u++)i.b^=p.charCodeAt(u)|0,i.next()}function o(a,i){return i.a=a.a,i.b=a.b,i.c=a.c,i.d=a.d,i}function s(a,i){var p=new n(a),u=i&&i.state,l=function(){return(p.next()>>>0)/4294967296};return l.double=function(){do var m=p.next()>>>11,c=(p.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=p.next,l.quick=l,u&&(typeof u=="object"&&o(u,p),l.state=function(){return o(p,{})}),l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(DR,typeof FA=="object"&&FA,typeof define=="function"&&define)});var RR=_r(()=>{});var PR=_r((MR,yy)=>{(function(r,e,t){var n=256,o=6,s=52,a="random",i=t.pow(n,o),p=t.pow(2,s),u=p*2,l=n-1,m;function c(T,C,v){var A=[];C=C==!0?{entropy:!0}:C||{};var _=g(h(C.entropy?[T,x(e)]:T??b(),3),A),R=new d(A),M=function(){for(var F=R.g(o),O=i,G=0;F<p;)F=(F+G)*n,O*=n,G=R.g(1);for(;F>=u;)F/=2,O/=2,G>>>=1;return(F+G)/O};return M.int32=function(){return R.g(4)|0},M.quick=function(){return R.g(4)/4294967296},M.double=M,g(x(R.S),e),(C.pass||v||function(F,O,G,W){return W&&(W.S&&f(W,R),F.state=function(){return f(R,{})}),G?(t[a]=F,O):F})(M,_,"global"in C?C.global:this==t,C.state)}function d(T){var C,v=T.length,A=this,_=0,R=A.i=A.j=0,M=A.S=[];for(v||(T=[v++]);_<n;)M[_]=_++;for(_=0;_<n;_++)M[_]=M[R=l&R+T[_%v]+(C=M[_])],M[R]=C;(A.g=function(F){for(var O,G=0,W=A.i,U=A.j,K=A.S;F--;)O=K[W=l&W+1],G=G*n+K[l&(K[W]=K[U=l&U+O])+(K[U]=O)];return A.i=W,A.j=U,G})(n)}function f(T,C){return C.i=T.i,C.j=T.j,C.S=T.S.slice(),C}function h(T,C){var v=[],A=typeof T,_;if(C&&A=="object")for(_ in T)try{v.push(h(T[_],C-1))}catch{}return v.length?v:A=="string"?T:T+"\0"}function g(T,C){for(var v=T+"",A,_=0;_<v.length;)C[l&_]=l&(A^=C[l&_]*19)+v.charCodeAt(_++);return x(C)}function b(){try{var T;return m&&(T=m.randomBytes)?T=T(n):(T=new Uint8Array(n),(r.crypto||r.msCrypto).getRandomValues(T)),x(T)}catch{var C=r.navigator,v=C&&C.plugins;return[+new Date,r,v,r.screen,x(e)]}}function x(T){return String.fromCharCode.apply(0,T)}if(g(t.random(),e),typeof yy=="object"&&yy.exports){yy.exports=c;try{m=RR()}catch{}}else typeof define=="function"&&define.amd?define(function(){return c}):t["seed"+a]=c})(typeof self<"u"?self:MR,[],Math)});var $h=_r((yOe,FR)=>{var M7=TR(),P7=IR(),F7=vR(),E7=wR(),L7=NR(),B7=_R(),Pl=PR();Pl.alea=M7;Pl.xor128=P7;Pl.xorwow=F7;Pl.xorshift7=E7;Pl.xor4096=L7;Pl.tychei=B7;FR.exports=Pl});var aD=_r(()=>{});var _T=_r(()=>{});var H2=_r(()=>{});var W5=_r(()=>{});var U5=_r(()=>{});var K5=_r(()=>{});var V5=_r((gv,j2)=>{"use strict";var q2=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e){e=e||{};function t(){return le.buffer!=it&&nr(le.buffer),At}function n(){return le.buffer!=it&&nr(le.buffer),Ct}function o(){return le.buffer!=it&&nr(le.buffer),Lt}function s(){return le.buffer!=it&&nr(le.buffer),Wn}function a(){return le.buffer!=it&&nr(le.buffer),fr}function i(){return le.buffer!=it&&nr(le.buffer),mo}function p(){return le.buffer!=it&&nr(le.buffer),Kr}var u=typeof e<"u"?e:{},l,m;u.ready=new Promise(function(B,V){l=B,m=V});var c;typeof process<"u"&&process.listeners&&(c={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var d=Object.assign({},u),f=[],h="./this.program",g=(B,V)=>{throw V},b=typeof window=="object",x=typeof importScripts=="function",T=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",C=u.ENVIRONMENT_IS_PTHREAD||!1,v="";function A(B){return u.locateFile?u.locateFile(B,v):v+B}var _,R,M,F;function O(B){if(B instanceof dl)return;X("exiting due to exception: "+B)}if(T){var G=_T(),W=H2();x?v=W.dirname(v)+"/":v=__dirname+"/",_=(V,ye)=>(V=cl(V)?new URL(V):W.normalize(V),G.readFileSync(V,ye?void 0:"utf8")),M=V=>{var ye=_(V,!0);return ye.buffer||(ye=new Uint8Array(ye)),ye},R=(V,ye,We)=>{V=cl(V)?new URL(V):W.normalize(V),G.readFile(V,function(nt,rt){nt?We(nt):ye(rt.buffer)})},process.argv.length>1&&(h=process.argv[1].replace(/\\/g,"/")),f=process.argv.slice(2),process.on("uncaughtException",function(V){if(!(V instanceof dl))throw V}),process.on("unhandledRejection",function(V){throw V}),g=(V,ye)=>{if(Ba())throw process.exitCode=V,ye;O(ye),process.exit(V)},u.inspect=function(){return"[Emscripten Module object]"};let B;try{B=W5()}catch(V){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),V}global.Worker=B.Worker}else(b||x)&&(x?v=self.location.href:typeof document<"u"&&document.currentScript&&(v=document.currentScript.src),r&&(v=r),v.indexOf("blob:")!==0?v=v.substr(0,v.replace(/[?#].*/,"").lastIndexOf("/")+1):v="",T||(_=B=>{var V=new XMLHttpRequest;return V.open("GET",B,!1),V.send(null),V.responseText},x&&(M=B=>{var V=new XMLHttpRequest;return V.open("GET",B,!1),V.responseType="arraybuffer",V.send(null),new Uint8Array(V.response)}),R=(B,V,ye)=>{var We=new XMLHttpRequest;We.open("GET",B,!0),We.responseType="arraybuffer",We.onload=()=>{if(We.status==200||We.status==0&&We.response){V(We.response);return}ye()},We.onerror=ye,We.send(null)}),F=B=>document.title=B);T&&typeof performance>"u"&&(global.performance=U5().performance);var U=console.log.bind(console),K=console.warn.bind(console);T&&(U=B=>G.writeSync(1,B+`
`),K=B=>G.writeSync(2,B+`
`));var H=u.print||U,X=u.printErr||K;Object.assign(u,d),d=null,u.arguments&&(f=u.arguments),u.thisProgram&&(h=u.thisProgram),u.quit&&(g=u.quit);var j=4,re=Atomics.load,ae=Atomics.store,ie=Atomics.compareExchange,me;u.wasmBinary&&(me=u.wasmBinary);var ue=u.noExitRuntime||!0;typeof WebAssembly!="object"&&ml("no native wasm support detected");var le,he,Te=!1,Ae;function Oe(B,V){B||ml(V)}var Be=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function Qe(B,V,ye){for(var We=V+ye,nt=V;B[nt]&&!(nt>=We);)++nt;if(nt-V>16&&B.buffer&&Be)return Be.decode(B.buffer instanceof SharedArrayBuffer?B.slice(V,nt):B.subarray(V,nt));for(var rt="";V<nt;){var ve=B[V++];if(!(ve&128)){rt+=String.fromCharCode(ve);continue}var $e=B[V++]&63;if((ve&224)==192){rt+=String.fromCharCode((ve&31)<<6|$e);continue}var mr=B[V++]&63;if((ve&240)==224?ve=(ve&15)<<12|$e<<6|mr:ve=(ve&7)<<18|$e<<12|mr<<6|B[V++]&63,ve<65536)rt+=String.fromCharCode(ve);else{var go=ve-65536;rt+=String.fromCharCode(55296|go>>10,56320|go&1023)}}return rt}function te(B,V){return B?Qe(n(),B,V):""}function yt(B,V,ye,We){if(!(We>0))return 0;for(var nt=ye,rt=ye+We-1,ve=0;ve<B.length;++ve){var $e=B.charCodeAt(ve);if($e>=55296&&$e<=57343){var mr=B.charCodeAt(++ve);$e=65536+(($e&1023)<<10)|mr&1023}if($e<=127){if(ye>=rt)break;V[ye++]=$e}else if($e<=2047){if(ye+1>=rt)break;V[ye++]=192|$e>>6,V[ye++]=128|$e&63}else if($e<=65535){if(ye+2>=rt)break;V[ye++]=224|$e>>12,V[ye++]=128|$e>>6&63,V[ye++]=128|$e&63}else{if(ye+3>=rt)break;V[ye++]=240|$e>>18,V[ye++]=128|$e>>12&63,V[ye++]=128|$e>>6&63,V[ye++]=128|$e&63}}return V[ye]=0,ye-nt}function wt(B,V,ye){return yt(B,n(),V,ye)}var it,At,Ct,Lt,Bt,Wn,fr,mo,Kr;C&&(it=u.buffer);function nr(B){it=B,u.HEAP8=At=new Int8Array(B),u.HEAP16=Lt=new Int16Array(B),u.HEAP32=Wn=new Int32Array(B),u.HEAPU8=Ct=new Uint8Array(B),u.HEAPU16=Bt=new Uint16Array(B),u.HEAPU32=fr=new Uint32Array(B),u.HEAPF32=mo=new Float32Array(B),u.HEAPF64=Kr=new Float64Array(B)}var Vr=u.INITIAL_MEMORY||16777216;if(C)le=u.wasmMemory,it=u.buffer;else if(u.wasmMemory)le=u.wasmMemory;else if(le=new WebAssembly.Memory({initial:Vr/65536,maximum:32768,shared:!0}),!(le.buffer instanceof SharedArrayBuffer))throw X("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),T&&X("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");le&&(it=le.buffer),Vr=it.byteLength,nr(it);var Hr,co=[],fo=[],on=[],Iu=!1;function Ba(){return ue}function Hi(){if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)lh(u.preRun.shift());ch(co)}function $r(){Iu=!0,!C&&ch(fo)}function ku(){if(!C){if(u.postRun)for(typeof u.postRun=="function"&&(u.postRun=[u.postRun]);u.postRun.length;)t_(u.postRun.shift());ch(on)}}function lh(B){co.unshift(B)}function mh(B){fo.unshift(B)}function t_(B){on.unshift(B)}var up=0,jm=null,vu=null;function xv(B){up++,u.monitorRunDependencies&&u.monitorRunDependencies(up)}function Tv(B){if(up--,u.monitorRunDependencies&&u.monitorRunDependencies(up),up==0&&(jm!==null&&(clearInterval(jm),jm=null),vu)){var V=vu;vu=null,V()}}function ml(B){u.onAbort&&u.onAbort(B),B="Aborted("+B+")",X(B),Te=!0,Ae=1,B+=". Build with -sASSERTIONS for more info.";var V=new WebAssembly.RuntimeError(B);throw m(V),V}var Cv="data:application/octet-stream;base64,";function eb(B){return B.startsWith(Cv)}function cl(B){return B.startsWith("file://")}var dn;dn="tfjs-backend-wasm-threaded-simd.wasm",eb(dn)||(dn=A(dn));function tb(B){try{if(B==dn&&me)return new Uint8Array(me);if(M)return M(B);throw"both async and sync fetching of the wasm failed"}catch(V){ml(V)}}function Iv(){if(!me&&(b||x)){if(typeof fetch=="function"&&!cl(dn))return fetch(dn,{credentials:"same-origin"}).then(function(B){if(!B.ok)throw"failed to load wasm binary file at '"+dn+"'";return B.arrayBuffer()}).catch(function(){return tb(dn)});if(R)return new Promise(function(B,V){R(dn,function(ye){B(new Uint8Array(ye))},V)})}return Promise.resolve().then(function(){return tb(dn)})}function kv(){var B={env:hb,wasi_snapshot_preview1:hb};function V(ve,$e){var mr=ve.exports;if(u.asm=mr,Pv(u.asm._emscripten_tls_init),Hr=u.asm.__indirect_function_table,mh(u.asm.__wasm_call_ctors),he=$e,!C){var go=tt.unusedWorkers.length;tt.unusedWorkers.forEach(function(wu){tt.loadWasmModuleToWorker(wu,function(){--go||Tv("wasm-instantiate")})})}}C||xv("wasm-instantiate");function ye(ve){V(ve.instance,ve.module)}function We(ve){return Iv().then(function($e){return WebAssembly.instantiate($e,B)}).then(function($e){return $e}).then(ve,function($e){X("failed to asynchronously prepare wasm: "+$e),ml($e)})}function nt(){return!me&&typeof WebAssembly.instantiateStreaming=="function"&&!eb(dn)&&!cl(dn)&&!T&&typeof fetch=="function"?fetch(dn,{credentials:"same-origin"}).then(function(ve){var $e=WebAssembly.instantiateStreaming(ve,B);return $e.then(ye,function(mr){return X("wasm streaming compile failed: "+mr),X("falling back to ArrayBuffer instantiation"),We(ye)})}):We(ye)}if(u.instantiateWasm)try{var rt=u.instantiateWasm(B,V);return rt}catch(ve){X("Module.instantiateWasm callback failed with error: "+ve),m(ve)}return nt().catch(m),{}}var r_,vv,Sv={};function dl(B){this.name="ExitStatus",this.message="Program terminated with exit("+B+")",this.status=B}function wv(B){var V=tt.pthreads[B];delete tt.pthreads[B],V.terminate(),Gw(B),tt.runningWorkers.splice(tt.runningWorkers.indexOf(V),1),V.pthread_ptr=0}function rb(B){var V=tt.pthreads[B];V.postMessage({cmd:"cancel"})}function Av(B){var V=tt.pthreads[B];Oe(V),tt.returnWorkerToPool(V)}function nb(B){var V=tt.getNewWorker();if(!V)return 6;tt.runningWorkers.push(V),tt.pthreads[B.pthread_ptr]=V,V.pthread_ptr=B.pthread_ptr;var ye={cmd:"run",start_routine:B.startRoutine,arg:B.arg,pthread_ptr:B.pthread_ptr};return V.runPthread=()=>{T&&V.ref(),V.postMessage(ye,B.transferList),delete V.runPthread},V.loaded&&V.runPthread(),0}var ob={varargs:void 0,get:function(){ob.varargs+=4;var B=s()[ob.varargs-4>>2];return B},getStr:function(B){var V=te(B);return V}};function sb(B){if(C)return pp(1,1,B);Ae=B,Ba()||(tt.terminateAllThreads(),u.onExit&&u.onExit(B),Te=!0),g(B,new dl(B))}function Nv(B,V){if(Ae=B,!V&&C)throw ib(B),"unwind";sb(B)}var ab=Nv;function Dv(B){if(B instanceof dl||B=="unwind")return Ae;g(1,B)}var tt={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){C?tt.initWorker():tt.initMainThread()},initMainThread:function(){for(var B=8;B--;)tt.allocateUnusedWorker()},initWorker:function(){ue=!1},setExitStatus:function(B){Ae=B},terminateAllThreads:function(){for(var B of Object.values(tt.pthreads))tt.returnWorkerToPool(B);for(var B of tt.unusedWorkers)B.terminate();tt.unusedWorkers=[]},returnWorkerToPool:function(B){var V=B.pthread_ptr;delete tt.pthreads[V],tt.unusedWorkers.push(B),tt.runningWorkers.splice(tt.runningWorkers.indexOf(B),1),B.pthread_ptr=0,T&&B.unref(),Gw(V)},receiveObjectTransfer:function(B){},threadInitTLS:function(){tt.tlsInitFunctions.forEach(B=>B())},loadWasmModuleToWorker:function(B,V){B.onmessage=rt=>{var ve=rt.data,$e=ve.cmd;if(B.pthread_ptr&&(tt.currentProxiedOperationCallerThread=B.pthread_ptr),ve.targetThread&&ve.targetThread!=Cb()){var mr=tt.pthreads[ve.targetThread];mr?mr.postMessage(ve,ve.transferList):X('Internal error! Worker sent a message "'+$e+'" to target pthread '+ve.targetThread+", but that thread no longer exists!"),tt.currentProxiedOperationCallerThread=void 0;return}$e==="processProxyingQueue"?dh(ve.queue):$e==="spawnThread"?nb(ve):$e==="cleanupThread"?Av(ve.thread):$e==="killThread"?wv(ve.thread):$e==="cancelThread"?rb(ve.thread):$e==="loaded"?(B.loaded=!0,T&&B.unref(),V&&V(B),B.runPthread&&B.runPthread()):$e==="print"?H("Thread "+ve.threadId+": "+ve.text):$e==="printErr"?X("Thread "+ve.threadId+": "+ve.text):$e==="alert"?alert("Thread "+ve.threadId+": "+ve.text):ve.target==="setimmediate"?B.postMessage(ve):$e==="callHandler"?u[ve.handler](...ve.args):$e&&X("worker sent an unknown command "+$e),tt.currentProxiedOperationCallerThread=void 0},B.onerror=rt=>{var ve="worker sent an error!";throw X(ve+" "+rt.filename+":"+rt.lineno+": "+rt.message),rt},T&&(B.on("message",function(rt){B.onmessage({data:rt})}),B.on("error",function(rt){B.onerror(rt)}),B.on("detachedExit",function(){}));var ye=[],We=["onExit","onAbort","print","printErr"];for(var nt of We)u.hasOwnProperty(nt)&&ye.push(nt);B.postMessage({cmd:"load",handlers:ye,urlOrBlob:u.mainScriptUrlOrBlob||r,wasmMemory:le,wasmModule:he})},allocateUnusedWorker:function(){var B,V=A("tfjs-backend-wasm-threaded-simd.worker.js");B=new Worker(V),tt.unusedWorkers.push(B)},getNewWorker:function(){return tt.unusedWorkers.length==0&&(tt.allocateUnusedWorker(),tt.loadWasmModuleToWorker(tt.unusedWorkers[0])),tt.unusedWorkers.pop()}};u.PThread=tt;function ch(B){for(;B.length>0;)B.shift()(u)}function _v(){var B=Cb(),V=s()[B+52>>2],ye=s()[B+56>>2],We=V-ye;u_(V,We),Ib(V)}u.establishStackSpace=_v;function ib(B){if(C)return pp(2,0,B);try{ab(B)}catch(V){Dv(V)}}var Xm=[];function Rv(B){var V=Xm[B];return V||(B>=Xm.length&&(Xm.length=B+1),Xm[B]=V=Hr.get(B)),V}function Mv(B,V){var ye=Rv(B)(V);Ba()?tt.setExitStatus(ye):i_(ye)}u.invokeEntryPoint=Mv;function Pv(B){tt.tlsInitFunctions.push(B)}function Fv(B){o_(B,!x,1,!b),tt.threadInitTLS()}function Ev(B){C?postMessage({cmd:"cleanupThread",thread:B}):Av(B)}function ub(B,V,ye,We){return C?pp(3,1,B,V,ye,We):pb(B,V,ye,We)}function pb(B,V,ye,We){if(typeof SharedArrayBuffer>"u")return X("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var nt=[],rt=0;if(C&&(nt.length===0||rt))return ub(B,V,ye,We);if(rt)return rt;var ve={startRoutine:ye,pthread_ptr:B,arg:We,transferList:nt};return C?(ve.cmd="spawnThread",postMessage(ve,nt),0):nb(ve)}function Lv(){return 65536}var Bv=!0;function $v(){return Bv}function dh(B){Atomics.store(s(),B>>2,1),Cb()&&a_(B),Atomics.compareExchange(s(),B>>2,1,0)}u.executeNotifiedProxyingQueue=dh;function Ov(B,V,ye,We){if(B==V)setTimeout(()=>dh(We));else if(C)postMessage({targetThread:B,cmd:"processProxyingQueue",queue:We});else{var nt=tt.pthreads[B];if(!nt)return;nt.postMessage({cmd:"processProxyingQueue",queue:We})}return 1}function zv(B,V,ye){return-1}function Gv(){ml("")}function fl(B){fl.shown||(fl.shown={}),fl.shown[B]||(fl.shown[B]=1,T&&(B="warning: "+B),X(B))}function Wv(){T||x||fl("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Uv(){return Date.now()}function lb(){return 2147483648}function Kv(){return lb()}var fh;T?fh=()=>{var B=process.hrtime();return B[0]*1e3+B[1]/1e6}:fh=()=>performance.timeOrigin+performance.now();function Vv(B,V,ye){n().copyWithin(B,V,V+ye)}function Hv(){return T?K5().cpus().length:navigator.hardwareConcurrency}function qv(B){var V=Ww(),ye=B();return Ib(V),ye}function pp(B,V){var ye=arguments.length-2,We=arguments;return qv(()=>{for(var nt=ye,rt=kb(nt*8),ve=rt>>3,$e=0;$e<ye;$e++){var mr=We[2+$e];p()[ve+$e]=mr}return s_(B,nt,rt,V)})}var hh=[];function jv(B,V,ye){hh.length=V;for(var We=ye>>3,nt=0;nt<V;nt++)hh[nt]=p()[We+nt];var rt=B<0,ve=rt?Sv[-B-1]:nS[B];return ve.apply(null,hh)}function Xv(B){try{return le.grow(B-it.byteLength+65535>>>16),nr(le.buffer),1}catch{}}function Yv(B){var V=n().length;if(B=B>>>0,B<=V)return!1;var ye=lb();if(B>ye)return!1;let We=(mr,go)=>mr+(go-mr%go)%go;for(var nt=1;nt<=4;nt*=2){var rt=V*(1+.2/nt);rt=Math.min(rt,B+100663296);var ve=Math.min(ye,We(Math.max(B,rt),65536)),$e=Xv(ve);if($e)return!0}return!1}function Zv(){throw"unwind"}function mb(B){return C?pp(4,1,B):52}function cb(B,V,ye,We,nt){return C?pp(5,1,B,V,ye,We,nt):70}var Qv=[null,[],[]];function Jv(B,V){var ye=Qv[B];V===0||V===10?((B===1?H:X)(Qe(ye,0)),ye.length=0):ye.push(V)}function db(B,V,ye,We){if(C)return pp(6,1,B,V,ye,We);for(var nt=0,rt=0;rt<ye;rt++){var ve=a()[V>>2],$e=a()[V+4>>2];V+=8;for(var mr=0;mr<$e;mr++)Jv(B,n()[ve+mr]);nt+=$e}return a()[We>>2]=nt,0}function fb(B){var V=u["_"+B];return V}function eS(B,V){t().set(B,V)}function tS(B,V,ye,We,nt){var rt={string:Un=>{var Jm=0;if(Un!=null&&Un!==0){var m_=(Un.length<<2)+1;Jm=kb(m_),wt(Un,Jm,m_)}return Jm},array:Un=>{var Jm=kb(Un.length);return eS(Un,Jm),Jm}};function ve(Un){return V==="string"?te(Un):V==="boolean"?Boolean(Un):Un}var $e=fb(B),mr=[],go=0;if(We)for(var wu=0;wu<We.length;wu++){var l_=rt[ye[wu]];l_?(go===0&&(go=Ww()),mr[wu]=l_(We[wu])):mr[wu]=We[wu]}var Uw=$e.apply(null,mr);function RX(Un){return go!==0&&Ib(go),ve(Un)}return Uw=RX(Uw),Uw}function rS(B,V,ye,We){ye=ye||[];var nt=ye.every(ve=>ve==="number"||ve==="boolean"),rt=V!=="string";return rt&&nt&&!We?fb(B):function(){return tS(B,V,ye,arguments,We)}}tt.init();var nS=[null,sb,ib,ub,mb,cb,db],hb={__emscripten_init_main_thread_js:Fv,__emscripten_thread_cleanup:Ev,__pthread_create_js:pb,_emscripten_default_pthread_stack_size:Lv,_emscripten_get_now_is_monotonic:$v,_emscripten_notify_task_queue:Ov,_emscripten_set_offscreencanvas_size:zv,abort:Gv,emscripten_check_blocking_allowed:Wv,emscripten_date_now:Uv,emscripten_get_heap_max:Kv,emscripten_get_now:fh,emscripten_memcpy_big:Vv,emscripten_num_logical_cores:Hv,emscripten_receive_on_main_thread_js:jv,emscripten_resize_heap:Yv,emscripten_unwind_to_js_event_loop:Zv,exit:ab,fd_close:mb,fd_seek:cb,fd_write:db,memory:le||u.wasmMemory},n_=kv(),oS=u.___wasm_call_ctors=function(){return(oS=u.___wasm_call_ctors=u.asm.__wasm_call_ctors).apply(null,arguments)},sS=u._init=function(){return(sS=u._init=u.asm.init).apply(null,arguments)},aS=u._init_with_threads_count=function(){return(aS=u._init_with_threads_count=u.asm.init_with_threads_count).apply(null,arguments)},iS=u._get_threads_count=function(){return(iS=u._get_threads_count=u.asm.get_threads_count).apply(null,arguments)},uS=u._register_tensor=function(){return(uS=u._register_tensor=u.asm.register_tensor).apply(null,arguments)},pS=u._dispose_data=function(){return(pS=u._dispose_data=u.asm.dispose_data).apply(null,arguments)},lS=u._dispose=function(){return(lS=u._dispose=u.asm.dispose).apply(null,arguments)},mS=u._Abs=function(){return(mS=u._Abs=u.asm.Abs).apply(null,arguments)},cS=u._Acos=function(){return(cS=u._Acos=u.asm.Acos).apply(null,arguments)},dS=u._Acosh=function(){return(dS=u._Acosh=u.asm.Acosh).apply(null,arguments)},fS=u._Add=function(){return(fS=u._Add=u.asm.Add).apply(null,arguments)},hS=u._AddN=function(){return(hS=u._AddN=u.asm.AddN).apply(null,arguments)},gS=u._All=function(){return(gS=u._All=u.asm.All).apply(null,arguments)},bS=u._Any=function(){return(bS=u._Any=u.asm.Any).apply(null,arguments)},yS=u._ArgMax=function(){return(yS=u._ArgMax=u.asm.ArgMax).apply(null,arguments)},xS=u._ArgMin=function(){return(xS=u._ArgMin=u.asm.ArgMin).apply(null,arguments)},TS=u._Asin=function(){return(TS=u._Asin=u.asm.Asin).apply(null,arguments)},CS=u._Asinh=function(){return(CS=u._Asinh=u.asm.Asinh).apply(null,arguments)},IS=u._Atan=function(){return(IS=u._Atan=u.asm.Atan).apply(null,arguments)},kS=u._Atan2=function(){return(kS=u._Atan2=u.asm.Atan2).apply(null,arguments)},vS=u._Atanh=function(){return(vS=u._Atanh=u.asm.Atanh).apply(null,arguments)},SS=u._AvgPool=function(){return(SS=u._AvgPool=u.asm.AvgPool).apply(null,arguments)},wS=u._AvgPool3D=function(){return(wS=u._AvgPool3D=u.asm.AvgPool3D).apply(null,arguments)},AS=u._AvgPool3DGrad=function(){return(AS=u._AvgPool3DGrad=u.asm.AvgPool3DGrad).apply(null,arguments)},NS=u._BatchMatMul=function(){return(NS=u._BatchMatMul=u.asm.BatchMatMul).apply(null,arguments)},DS=u._Bincount=function(){return(DS=u._Bincount=u.asm.Bincount).apply(null,arguments)},_S=u._Ceil=function(){return(_S=u._Ceil=u.asm.Ceil).apply(null,arguments)},RS=u._ClipByValue=function(){return(RS=u._ClipByValue=u.asm.ClipByValue).apply(null,arguments)},MS=u._Conv2D=function(){return(MS=u._Conv2D=u.asm.Conv2D).apply(null,arguments)},PS=u._Conv2DBackpropInput=function(){return(PS=u._Conv2DBackpropInput=u.asm.Conv2DBackpropInput).apply(null,arguments)},FS=u._Conv3D=function(){return(FS=u._Conv3D=u.asm.Conv3D).apply(null,arguments)},ES=u._Conv3DBackpropFilterV2=function(){return(ES=u._Conv3DBackpropFilterV2=u.asm.Conv3DBackpropFilterV2).apply(null,arguments)},LS=u._Conv3DBackpropInputV2=function(){return(LS=u._Conv3DBackpropInputV2=u.asm.Conv3DBackpropInputV2).apply(null,arguments)},BS=u._Cos=function(){return(BS=u._Cos=u.asm.Cos).apply(null,arguments)},$S=u._Cosh=function(){return($S=u._Cosh=u.asm.Cosh).apply(null,arguments)},OS=u._CropAndResize=function(){return(OS=u._CropAndResize=u.asm.CropAndResize).apply(null,arguments)},zS=u._Cumprod=function(){return(zS=u._Cumprod=u.asm.Cumprod).apply(null,arguments)},GS=u._Cumsum=function(){return(GS=u._Cumsum=u.asm.Cumsum).apply(null,arguments)},WS=u._DenseBincount=function(){return(WS=u._DenseBincount=u.asm.DenseBincount).apply(null,arguments)},US=u._DepthToSpace=function(){return(US=u._DepthToSpace=u.asm.DepthToSpace).apply(null,arguments)},KS=u._DepthwiseConv2dNative=function(){return(KS=u._DepthwiseConv2dNative=u.asm.DepthwiseConv2dNative).apply(null,arguments)},VS=u._Diag=function(){return(VS=u._Diag=u.asm.Diag).apply(null,arguments)},HS=u._Dilation2D=function(){return(HS=u._Dilation2D=u.asm.Dilation2D).apply(null,arguments)},qS=u._Dilation2DBackpropFilter=function(){return(qS=u._Dilation2DBackpropFilter=u.asm.Dilation2DBackpropFilter).apply(null,arguments)},jS=u._Dilation2DBackpropInput=function(){return(jS=u._Dilation2DBackpropInput=u.asm.Dilation2DBackpropInput).apply(null,arguments)},XS=u._Elu=function(){return(XS=u._Elu=u.asm.Elu).apply(null,arguments)},YS=u._EluGrad=function(){return(YS=u._EluGrad=u.asm.EluGrad).apply(null,arguments)},ZS=u._Equal=function(){return(ZS=u._Equal=u.asm.Equal).apply(null,arguments)},QS=u._Exp=function(){return(QS=u._Exp=u.asm.Exp).apply(null,arguments)},JS=u._Expm1=function(){return(JS=u._Expm1=u.asm.Expm1).apply(null,arguments)},ew=u._FlipLeftRight=function(){return(ew=u._FlipLeftRight=u.asm.FlipLeftRight).apply(null,arguments)},tw=u._Floor=function(){return(tw=u._Floor=u.asm.Floor).apply(null,arguments)},rw=u._FloorDiv=function(){return(rw=u._FloorDiv=u.asm.FloorDiv).apply(null,arguments)},nw=u._FusedBatchNorm=function(){return(nw=u._FusedBatchNorm=u.asm.FusedBatchNorm).apply(null,arguments)},ow=u._FusedConv2D=function(){return(ow=u._FusedConv2D=u.asm.FusedConv2D).apply(null,arguments)},sw=u._FusedDepthwiseConv2D=function(){return(sw=u._FusedDepthwiseConv2D=u.asm.FusedDepthwiseConv2D).apply(null,arguments)},aw=u._Gather=function(){return(aw=u._Gather=u.asm.Gather).apply(null,arguments)},iw=u._GatherNd=function(){return(iw=u._GatherNd=u.asm.GatherNd).apply(null,arguments)},uw=u._Greater=function(){return(uw=u._Greater=u.asm.Greater).apply(null,arguments)},pw=u._GreaterEqual=function(){return(pw=u._GreaterEqual=u.asm.GreaterEqual).apply(null,arguments)},lw=u._IsFinite=function(){return(lw=u._IsFinite=u.asm.IsFinite).apply(null,arguments)},mw=u._IsInf=function(){return(mw=u._IsInf=u.asm.IsInf).apply(null,arguments)},cw=u._IsNan=function(){return(cw=u._IsNan=u.asm.IsNan).apply(null,arguments)},dw=u._LRN=function(){return(dw=u._LRN=u.asm.LRN).apply(null,arguments)},fw=u._LRNGrad=function(){return(fw=u._LRNGrad=u.asm.LRNGrad).apply(null,arguments)},hw=u._LeakyRelu=function(){return(hw=u._LeakyRelu=u.asm.LeakyRelu).apply(null,arguments)},gw=u._Less=function(){return(gw=u._Less=u.asm.Less).apply(null,arguments)},bw=u._LessEqual=function(){return(bw=u._LessEqual=u.asm.LessEqual).apply(null,arguments)},yw=u._LinSpace=function(){return(yw=u._LinSpace=u.asm.LinSpace).apply(null,arguments)},xw=u._Log=function(){return(xw=u._Log=u.asm.Log).apply(null,arguments)},Tw=u._Log1p=function(){return(Tw=u._Log1p=u.asm.Log1p).apply(null,arguments)},Cw=u._LogicalAnd=function(){return(Cw=u._LogicalAnd=u.asm.LogicalAnd).apply(null,arguments)},Iw=u._LogicalNot=function(){return(Iw=u._LogicalNot=u.asm.LogicalNot).apply(null,arguments)},kw=u._LogicalOr=function(){return(kw=u._LogicalOr=u.asm.LogicalOr).apply(null,arguments)},vw=u._LogicalXor=function(){return(vw=u._LogicalXor=u.asm.LogicalXor).apply(null,arguments)},Sw=u._Max=function(){return(Sw=u._Max=u.asm.Max).apply(null,arguments)},ww=u._MaxPool=function(){return(ww=u._MaxPool=u.asm.MaxPool).apply(null,arguments)},Aw=u._MaxPool3D=function(){return(Aw=u._MaxPool3D=u.asm.MaxPool3D).apply(null,arguments)},Nw=u._MaxPool3DGrad=function(){return(Nw=u._MaxPool3DGrad=u.asm.MaxPool3DGrad).apply(null,arguments)},Dw=u._Maximum=function(){return(Dw=u._Maximum=u.asm.Maximum).apply(null,arguments)},_w=u._Mean=function(){return(_w=u._Mean=u.asm.Mean).apply(null,arguments)},Rw=u._Min=function(){return(Rw=u._Min=u.asm.Min).apply(null,arguments)},Mw=u._Minimum=function(){return(Mw=u._Minimum=u.asm.Minimum).apply(null,arguments)},Pw=u._MirrorPad=function(){return(Pw=u._MirrorPad=u.asm.MirrorPad).apply(null,arguments)},Fw=u._Multinomial=function(){return(Fw=u._Multinomial=u.asm.Multinomial).apply(null,arguments)},Ew=u._Multiply=function(){return(Ew=u._Multiply=u.asm.Multiply).apply(null,arguments)},Lw=u._Neg=function(){return(Lw=u._Neg=u.asm.Neg).apply(null,arguments)},gb=u._NonMaxSuppressionV3=function(){return(gb=u._NonMaxSuppressionV3=u.asm.NonMaxSuppressionV3).apply(null,arguments)},bb=u._NonMaxSuppressionV4=function(){return(bb=u._NonMaxSuppressionV4=u.asm.NonMaxSuppressionV4).apply(null,arguments)},gh=u._NonMaxSuppressionV5=function(){return(gh=u._NonMaxSuppressionV5=u.asm.NonMaxSuppressionV5).apply(null,arguments)},Bw=u._NotEqual=function(){return(Bw=u._NotEqual=u.asm.NotEqual).apply(null,arguments)},$w=u._OneHot=function(){return($w=u._OneHot=u.asm.OneHot).apply(null,arguments)},Ym=u._PadV2=function(){return(Ym=u._PadV2=u.asm.PadV2).apply(null,arguments)},yb=u._Pow=function(){return(yb=u._Pow=u.asm.Pow).apply(null,arguments)},Zm=u._Prelu=function(){return(Zm=u._Prelu=u.asm.Prelu).apply(null,arguments)},Qm=u._Prod=function(){return(Qm=u._Prod=u.asm.Prod).apply(null,arguments)},Ow=u._RealDiv=function(){return(Ow=u._RealDiv=u.asm.RealDiv).apply(null,arguments)},Y=u._Reciprocal=function(){return(Y=u._Reciprocal=u.asm.Reciprocal).apply(null,arguments)},de=u._Relu=function(){return(de=u._Relu=u.asm.Relu).apply(null,arguments)},ze=u._Relu6=function(){return(ze=u._Relu6=u.asm.Relu6).apply(null,arguments)},xt=u._ResizeBilinear=function(){return(xt=u._ResizeBilinear=u.asm.ResizeBilinear).apply(null,arguments)},or=u._ResizeBilinearGrad=function(){return(or=u._ResizeBilinearGrad=u.asm.ResizeBilinearGrad).apply(null,arguments)},sr=u._ResizeNearestNeighbor=function(){return(sr=u._ResizeNearestNeighbor=u.asm.ResizeNearestNeighbor).apply(null,arguments)},lt=u._ResizeNearestNeighborGrad=function(){return(lt=u._ResizeNearestNeighborGrad=u.asm.ResizeNearestNeighborGrad).apply(null,arguments)},ut=u._Reverse=function(){return(ut=u._Reverse=u.asm.Reverse).apply(null,arguments)},wr=u._RotateWithOffset=function(){return(wr=u._RotateWithOffset=u.asm.RotateWithOffset).apply(null,arguments)},ho=u._Round=function(){return(ho=u._Round=u.asm.Round).apply(null,arguments)},Su=u._Rsqrt=function(){return(Su=u._Rsqrt=u.asm.Rsqrt).apply(null,arguments)},xb=u._ScatterNd=function(){return(xb=u._ScatterNd=u.asm.ScatterNd).apply(null,arguments)},bh=u._SearchSorted=function(){return(bh=u._SearchSorted=u.asm.SearchSorted).apply(null,arguments)},zw=u._SelectV2=function(){return(zw=u._SelectV2=u.asm.SelectV2).apply(null,arguments)},fn=u._Selu=function(){return(fn=u._Selu=u.asm.Selu).apply(null,arguments)},lp=u._Sigmoid=function(){return(lp=u._Sigmoid=u.asm.Sigmoid).apply(null,arguments)},Tb=u._Sign=function(){return(Tb=u._Sign=u.asm.Sign).apply(null,arguments)},Q5=u._Sin=function(){return(Q5=u._Sin=u.asm.Sin).apply(null,arguments)},J5=u._Softmax=function(){return(J5=u._Softmax=u.asm.Softmax).apply(null,arguments)},eX=u._Softplus=function(){return(eX=u._Softplus=u.asm.Softplus).apply(null,arguments)},tX=u._SparseFillEmptyRows=function(){return(tX=u._SparseFillEmptyRows=u.asm.SparseFillEmptyRows).apply(null,arguments)},rX=u._SparseReshape=function(){return(rX=u._SparseReshape=u.asm.SparseReshape).apply(null,arguments)},nX=u._SparseSegmentReduction=function(){return(nX=u._SparseSegmentReduction=u.asm.SparseSegmentReduction).apply(null,arguments)},oX=u._SparseToDense=function(){return(oX=u._SparseToDense=u.asm.SparseToDense).apply(null,arguments)},sX=u._Sqrt=function(){return(sX=u._Sqrt=u.asm.Sqrt).apply(null,arguments)},aX=u._Square=function(){return(aX=u._Square=u.asm.Square).apply(null,arguments)},iX=u._SquaredDifference=function(){return(iX=u._SquaredDifference=u.asm.SquaredDifference).apply(null,arguments)},uX=u._Step=function(){return(uX=u._Step=u.asm.Step).apply(null,arguments)},pX=u._StridedSlice=function(){return(pX=u._StridedSlice=u.asm.StridedSlice).apply(null,arguments)},lX=u._Sub=function(){return(lX=u._Sub=u.asm.Sub).apply(null,arguments)},mX=u._Sum=function(){return(mX=u._Sum=u.asm.Sum).apply(null,arguments)},cX=u._Tan=function(){return(cX=u._Tan=u.asm.Tan).apply(null,arguments)},dX=u._Tanh=function(){return(dX=u._Tanh=u.asm.Tanh).apply(null,arguments)},fX=u._TensorScatterUpdate=function(){return(fX=u._TensorScatterUpdate=u.asm.TensorScatterUpdate).apply(null,arguments)},hX=u._Tile=function(){return(hX=u._Tile=u.asm.Tile).apply(null,arguments)},gX=u._TopK=function(){return(gX=u._TopK=u.asm.TopK).apply(null,arguments)},bX=u._Transform=function(){return(bX=u._Transform=u.asm.Transform).apply(null,arguments)},yX=u._Transpose=function(){return(yX=u._Transpose=u.asm.Transpose).apply(null,arguments)},xX=u.__FusedMatMul=function(){return(xX=u.__FusedMatMul=u.asm._FusedMatMul).apply(null,arguments)},TX=u._malloc=function(){return(TX=u._malloc=u.asm.malloc).apply(null,arguments)},CX=u._free=function(){return(CX=u._free=u.asm.free).apply(null,arguments)},IX=u.__emscripten_tls_init=function(){return(IX=u.__emscripten_tls_init=u.asm._emscripten_tls_init).apply(null,arguments)},Cb=u._pthread_self=function(){return(Cb=u._pthread_self=u.asm.pthread_self).apply(null,arguments)},kX=u.___errno_location=function(){return(kX=u.___errno_location=u.asm.__errno_location).apply(null,arguments)},o_=u.__emscripten_thread_init=function(){return(o_=u.__emscripten_thread_init=u.asm._emscripten_thread_init).apply(null,arguments)},vX=u.__emscripten_thread_crashed=function(){return(vX=u.__emscripten_thread_crashed=u.asm._emscripten_thread_crashed).apply(null,arguments)},SX=u._emscripten_main_thread_process_queued_calls=function(){return(SX=u._emscripten_main_thread_process_queued_calls=u.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},wX=u._emscripten_main_browser_thread_id=function(){return(wX=u._emscripten_main_browser_thread_id=u.asm.emscripten_main_browser_thread_id).apply(null,arguments)},s_=u._emscripten_run_in_main_runtime_thread_js=function(){return(s_=u._emscripten_run_in_main_runtime_thread_js=u.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},AX=u._emscripten_dispatch_to_thread_=function(){return(AX=u._emscripten_dispatch_to_thread_=u.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},a_=u.__emscripten_proxy_execute_task_queue=function(){return(a_=u.__emscripten_proxy_execute_task_queue=u.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)},Gw=u.__emscripten_thread_free_data=function(){return(Gw=u.__emscripten_thread_free_data=u.asm._emscripten_thread_free_data).apply(null,arguments)},i_=u.__emscripten_thread_exit=function(){return(i_=u.__emscripten_thread_exit=u.asm._emscripten_thread_exit).apply(null,arguments)},u_=u._emscripten_stack_set_limits=function(){return(u_=u._emscripten_stack_set_limits=u.asm.emscripten_stack_set_limits).apply(null,arguments)},Ww=u.stackSave=function(){return(Ww=u.stackSave=u.asm.stackSave).apply(null,arguments)},Ib=u.stackRestore=function(){return(Ib=u.stackRestore=u.asm.stackRestore).apply(null,arguments)},kb=u.stackAlloc=function(){return(kb=u.stackAlloc=u.asm.stackAlloc).apply(null,arguments)},NX=u.dynCall_iijjiiii=function(){return(NX=u.dynCall_iijjiiii=u.asm.dynCall_iijjiiii).apply(null,arguments)},DX=u.dynCall_jiji=function(){return(DX=u.dynCall_jiji=u.asm.dynCall_jiji).apply(null,arguments)};u.keepRuntimeAlive=Ba,u.wasmMemory=le,u.cwrap=rS,u.ExitStatus=dl,u.PThread=tt;var vb;vu=function B(){vb||p_(),vb||(vu=B)};function p_(B){if(B=B||f,up>0)return;if(C){l(u),$r(),startWorker(u);return}if(Hi(),up>0)return;function V(){vb||(vb=!0,u.calledRun=!0,!Te&&($r(),l(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),ku()))}u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),V()},1)):V()}if(u.preInit)for(typeof u.preInit=="function"&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();p_();var Sb;c&&(Sb={uncaughtException:process.listeners("uncaughtException").filter(function(B){return!c.uncaughtException.indexOf(B)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(B){return!c.unhandledRejection.indexOf(B)>-1})});var wb;if(typeof WasmBackendModule<"u")wb=WasmBackendModule;else if(typeof e<"u")wb=e;else throw new Error("Could not find wasm module in post.js");if(Sb){var _X=wb._dispose;wb._dispose=function(){_X(),Sb.uncaughtException.forEach(function(B){process.removeListener("uncaughtException",B)}),Sb.unhandledRejection.forEach(function(B){process.removeListener("unhandledRejection",B)})}}return e.ready}})();typeof gv=="object"&&typeof j2=="object"?j2.exports=q2:typeof define=="function"&&define.amd?define([],function(){return q2}):typeof gv=="object"&&(gv.WasmBackendModuleThreadedSimd=q2)});var q5=_r((bv,Y2)=>{"use strict";var X2=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e){e=e||{};var t=typeof e<"u"?e:{},n,o;t.ready=new Promise(function(Y,de){n=Y,o=de});var s;typeof process<"u"&&process.listeners&&(s={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var a=Object.assign({},t),i=[],p="./this.program",u=(Y,de)=>{throw de},l=typeof window=="object",m=typeof importScripts=="function",c=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",d="";function f(Y){return t.locateFile?t.locateFile(Y,d):d+Y}var h,g,b,x;function T(Y){if(Y instanceof jm)return;_("exiting due to exception: "+Y)}if(c){var C=_T(),v=H2();m?d=v.dirname(d)+"/":d=__dirname+"/",h=(Y,de)=>(Y=Hi(Y)?new URL(Y):v.normalize(Y),C.readFileSync(Y,de?void 0:"utf8")),b=Y=>{var de=h(Y,!0);return de.buffer||(de=new Uint8Array(de)),de},g=(Y,de,ze)=>{Y=Hi(Y)?new URL(Y):v.normalize(Y),C.readFile(Y,function(xt,or){xt?ze(xt):de(or.buffer)})},process.argv.length>1&&(p=process.argv[1].replace(/\\/g,"/")),i=process.argv.slice(2),process.on("uncaughtException",function(Y){if(!(Y instanceof jm))throw Y}),process.on("unhandledRejection",function(Y){throw Y}),u=(Y,de)=>{if(Ct())throw process.exitCode=Y,de;T(de),process.exit(Y)},t.inspect=function(){return"[Emscripten Module object]"}}else(l||m)&&(m?d=self.location.href:typeof document<"u"&&document.currentScript&&(d=document.currentScript.src),r&&(d=r),d.indexOf("blob:")!==0?d=d.substr(0,d.replace(/[?#].*/,"").lastIndexOf("/")+1):d="",h=Y=>{var de=new XMLHttpRequest;return de.open("GET",Y,!1),de.send(null),de.responseText},m&&(b=Y=>{var de=new XMLHttpRequest;return de.open("GET",Y,!1),de.responseType="arraybuffer",de.send(null),new Uint8Array(de.response)}),g=(Y,de,ze)=>{var xt=new XMLHttpRequest;xt.open("GET",Y,!0),xt.responseType="arraybuffer",xt.onload=()=>{if(xt.status==200||xt.status==0&&xt.response){de(xt.response);return}ze()},xt.onerror=ze,xt.send(null)},x=Y=>document.title=Y);var A=t.print||console.log.bind(console),_=t.printErr||console.warn.bind(console);Object.assign(t,a),a=null,t.arguments&&(i=t.arguments),t.thisProgram&&(p=t.thisProgram),t.quit&&(u=t.quit);var R=4,M;t.wasmBinary&&(M=t.wasmBinary);var F=t.noExitRuntime||!0;typeof WebAssembly!="object"&&on("no native wasm support detected");var O,G=!1,W;function U(Y,de){Y||on(de)}var K=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function H(Y,de,ze){for(var xt=de+ze,or=de;Y[or]&&!(or>=xt);)++or;if(or-de>16&&Y.buffer&&K)return K.decode(Y.subarray(de,or));for(var sr="";de<or;){var lt=Y[de++];if(!(lt&128)){sr+=String.fromCharCode(lt);continue}var ut=Y[de++]&63;if((lt&224)==192){sr+=String.fromCharCode((lt&31)<<6|ut);continue}var wr=Y[de++]&63;if((lt&240)==224?lt=(lt&15)<<12|ut<<6|wr:lt=(lt&7)<<18|ut<<12|wr<<6|Y[de++]&63,lt<65536)sr+=String.fromCharCode(lt);else{var ho=lt-65536;sr+=String.fromCharCode(55296|ho>>10,56320|ho&1023)}}return sr}function X(Y,de){return Y?H(me,Y,de):""}function j(Y,de,ze,xt){if(!(xt>0))return 0;for(var or=ze,sr=ze+xt-1,lt=0;lt<Y.length;++lt){var ut=Y.charCodeAt(lt);if(ut>=55296&&ut<=57343){var wr=Y.charCodeAt(++lt);ut=65536+((ut&1023)<<10)|wr&1023}if(ut<=127){if(ze>=sr)break;de[ze++]=ut}else if(ut<=2047){if(ze+1>=sr)break;de[ze++]=192|ut>>6,de[ze++]=128|ut&63}else if(ut<=65535){if(ze+2>=sr)break;de[ze++]=224|ut>>12,de[ze++]=128|ut>>6&63,de[ze++]=128|ut&63}else{if(ze+3>=sr)break;de[ze++]=240|ut>>18,de[ze++]=128|ut>>12&63,de[ze++]=128|ut>>6&63,de[ze++]=128|ut&63}}return de[ze]=0,ze-or}function re(Y,de,ze){return j(Y,me,de,ze)}var ae,ie,me,ue,le,he,Te,Ae,Oe;function Be(Y){ae=Y,t.HEAP8=ie=new Int8Array(Y),t.HEAP16=ue=new Int16Array(Y),t.HEAP32=he=new Int32Array(Y),t.HEAPU8=me=new Uint8Array(Y),t.HEAPU16=le=new Uint16Array(Y),t.HEAPU32=Te=new Uint32Array(Y),t.HEAPF32=Ae=new Float32Array(Y),t.HEAPF64=Oe=new Float64Array(Y)}var Qe=t.INITIAL_MEMORY||16777216,te,yt=[],wt=[],it=[],At=!1;function Ct(){return F}function Lt(){if(t.preRun)for(typeof t.preRun=="function"&&(t.preRun=[t.preRun]);t.preRun.length;)fr(t.preRun.shift());vu(yt)}function Bt(){At=!0,vu(wt)}function Wn(){if(t.postRun)for(typeof t.postRun=="function"&&(t.postRun=[t.postRun]);t.postRun.length;)Kr(t.postRun.shift());vu(it)}function fr(Y){yt.unshift(Y)}function mo(Y){wt.unshift(Y)}function Kr(Y){it.unshift(Y)}var nr=0,Vr=null,Hr=null;function co(Y){nr++,t.monitorRunDependencies&&t.monitorRunDependencies(nr)}function fo(Y){if(nr--,t.monitorRunDependencies&&t.monitorRunDependencies(nr),nr==0&&(Vr!==null&&(clearInterval(Vr),Vr=null),Hr)){var de=Hr;Hr=null,de()}}function on(Y){t.onAbort&&t.onAbort(Y),Y="Aborted("+Y+")",_(Y),G=!0,W=1,Y+=". Build with -sASSERTIONS for more info.";var de=new WebAssembly.RuntimeError(Y);throw o(de),de}var Iu="data:application/octet-stream;base64,";function Ba(Y){return Y.startsWith(Iu)}function Hi(Y){return Y.startsWith("file://")}var $r;$r="tfjs-backend-wasm.wasm",Ba($r)||($r=f($r));function ku(Y){try{if(Y==$r&&M)return new Uint8Array(M);if(b)return b(Y);throw"both async and sync fetching of the wasm failed"}catch(de){on(de)}}function lh(){if(!M&&(l||m)){if(typeof fetch=="function"&&!Hi($r))return fetch($r,{credentials:"same-origin"}).then(function(Y){if(!Y.ok)throw"failed to load wasm binary file at '"+$r+"'";return Y.arrayBuffer()}).catch(function(){return ku($r)});if(g)return new Promise(function(Y,de){g($r,function(ze){Y(new Uint8Array(ze))},de)})}return Promise.resolve().then(function(){return ku($r)})}function mh(){var Y={env:rb,wasi_snapshot_preview1:rb};function de(lt,ut){var wr=lt.exports;t.asm=wr,O=t.asm.memory,Be(O.buffer),te=t.asm.__indirect_function_table,mo(t.asm.__wasm_call_ctors),fo("wasm-instantiate")}co("wasm-instantiate");function ze(lt){de(lt.instance)}function xt(lt){return lh().then(function(ut){return WebAssembly.instantiate(ut,Y)}).then(function(ut){return ut}).then(lt,function(ut){_("failed to asynchronously prepare wasm: "+ut),on(ut)})}function or(){return!M&&typeof WebAssembly.instantiateStreaming=="function"&&!Ba($r)&&!Hi($r)&&!c&&typeof fetch=="function"?fetch($r,{credentials:"same-origin"}).then(function(lt){var ut=WebAssembly.instantiateStreaming(lt,Y);return ut.then(ze,function(wr){return _("wasm streaming compile failed: "+wr),_("falling back to ArrayBuffer instantiation"),xt(ze)})}):xt(ze)}if(t.instantiateWasm)try{var sr=t.instantiateWasm(Y,de);return sr}catch(lt){_("Module.instantiateWasm callback failed with error: "+lt),o(lt)}return or().catch(o),{}}var t_,up;function jm(Y){this.name="ExitStatus",this.message="Program terminated with exit("+Y+")",this.status=Y}function vu(Y){for(;Y.length>0;)Y.shift()(t)}function xv(){on("")}function Tv(Y,de,ze){me.copyWithin(Y,de,de+ze)}function ml(){return 2147483648}function Cv(Y){try{return O.grow(Y-ae.byteLength+65535>>>16),Be(O.buffer),1}catch{}}function eb(Y){var de=me.length;Y=Y>>>0;var ze=ml();if(Y>ze)return!1;let xt=(wr,ho)=>wr+(ho-wr%ho)%ho;for(var or=1;or<=4;or*=2){var sr=de*(1+.2/or);sr=Math.min(sr,Y+100663296);var lt=Math.min(ze,xt(Math.max(Y,sr),65536)),ut=Cv(lt);if(ut)return!0}return!1}var cl={varargs:void 0,get:function(){cl.varargs+=4;var Y=he[cl.varargs-4>>2];return Y},getStr:function(Y){var de=X(Y);return de}};function dn(Y){return 52}function tb(Y,de,ze,xt,or){return 70}var Iv=[null,[],[]];function kv(Y,de){var ze=Iv[Y];de===0||de===10?((Y===1?A:_)(H(ze,0)),ze.length=0):ze.push(de)}function r_(Y,de,ze,xt){for(var or=0,sr=0;sr<ze;sr++){var lt=Te[de>>2],ut=Te[de+4>>2];de+=8;for(var wr=0;wr<ut;wr++)kv(Y,me[lt+wr]);or+=ut}return Te[xt>>2]=or,0}function vv(Y){var de=t["_"+Y];return de}function Sv(Y,de){ie.set(Y,de)}function dl(Y,de,ze,xt,or){var sr={string:fn=>{var lp=0;if(fn!=null&&fn!==0){var Tb=(fn.length<<2)+1;lp=gh(Tb),re(fn,lp,Tb)}return lp},array:fn=>{var lp=gh(fn.length);return Sv(fn,lp),lp}};function lt(fn){return de==="string"?X(fn):de==="boolean"?Boolean(fn):fn}var ut=vv(Y),wr=[],ho=0;if(xt)for(var Su=0;Su<xt.length;Su++){var xb=sr[ze[Su]];xb?(ho===0&&(ho=gb()),wr[Su]=xb(xt[Su])):wr[Su]=xt[Su]}var bh=ut.apply(null,wr);function zw(fn){return ho!==0&&bb(ho),lt(fn)}return bh=zw(bh),bh}function wv(Y,de,ze,xt){ze=ze||[];var or=ze.every(lt=>lt==="number"||lt==="boolean"),sr=de!=="string";return sr&&or&&!xt?vv(Y):function(){return dl(Y,de,ze,arguments,xt)}}var rb={abort:xv,emscripten_memcpy_big:Tv,emscripten_resize_heap:eb,fd_close:dn,fd_seek:tb,fd_write:r_},Av=mh(),nb=t.___wasm_call_ctors=function(){return(nb=t.___wasm_call_ctors=t.asm.__wasm_call_ctors).apply(null,arguments)},ob=t._init=function(){return(ob=t._init=t.asm.init).apply(null,arguments)},sb=t._init_with_threads_count=function(){return(sb=t._init_with_threads_count=t.asm.init_with_threads_count).apply(null,arguments)},Nv=t._get_threads_count=function(){return(Nv=t._get_threads_count=t.asm.get_threads_count).apply(null,arguments)},ab=t._register_tensor=function(){return(ab=t._register_tensor=t.asm.register_tensor).apply(null,arguments)},Dv=t._dispose_data=function(){return(Dv=t._dispose_data=t.asm.dispose_data).apply(null,arguments)},tt=t._dispose=function(){return(tt=t._dispose=t.asm.dispose).apply(null,arguments)},ch=t._Abs=function(){return(ch=t._Abs=t.asm.Abs).apply(null,arguments)},_v=t._Acos=function(){return(_v=t._Acos=t.asm.Acos).apply(null,arguments)},ib=t._Acosh=function(){return(ib=t._Acosh=t.asm.Acosh).apply(null,arguments)},Xm=t._Add=function(){return(Xm=t._Add=t.asm.Add).apply(null,arguments)},Rv=t._AddN=function(){return(Rv=t._AddN=t.asm.AddN).apply(null,arguments)},Mv=t._All=function(){return(Mv=t._All=t.asm.All).apply(null,arguments)},Pv=t._Any=function(){return(Pv=t._Any=t.asm.Any).apply(null,arguments)},Fv=t._ArgMax=function(){return(Fv=t._ArgMax=t.asm.ArgMax).apply(null,arguments)},Ev=t._ArgMin=function(){return(Ev=t._ArgMin=t.asm.ArgMin).apply(null,arguments)},ub=t._Asin=function(){return(ub=t._Asin=t.asm.Asin).apply(null,arguments)},pb=t._Asinh=function(){return(pb=t._Asinh=t.asm.Asinh).apply(null,arguments)},Lv=t._Atan=function(){return(Lv=t._Atan=t.asm.Atan).apply(null,arguments)},Bv=t._Atan2=function(){return(Bv=t._Atan2=t.asm.Atan2).apply(null,arguments)},$v=t._Atanh=function(){return($v=t._Atanh=t.asm.Atanh).apply(null,arguments)},dh=t._AvgPool=function(){return(dh=t._AvgPool=t.asm.AvgPool).apply(null,arguments)},Ov=t._AvgPool3D=function(){return(Ov=t._AvgPool3D=t.asm.AvgPool3D).apply(null,arguments)},zv=t._AvgPool3DGrad=function(){return(zv=t._AvgPool3DGrad=t.asm.AvgPool3DGrad).apply(null,arguments)},Gv=t._BatchMatMul=function(){return(Gv=t._BatchMatMul=t.asm.BatchMatMul).apply(null,arguments)},fl=t._Bincount=function(){return(fl=t._Bincount=t.asm.Bincount).apply(null,arguments)},Wv=t._Ceil=function(){return(Wv=t._Ceil=t.asm.Ceil).apply(null,arguments)},Uv=t._ClipByValue=function(){return(Uv=t._ClipByValue=t.asm.ClipByValue).apply(null,arguments)},lb=t._Conv2D=function(){return(lb=t._Conv2D=t.asm.Conv2D).apply(null,arguments)},Kv=t._Conv2DBackpropInput=function(){return(Kv=t._Conv2DBackpropInput=t.asm.Conv2DBackpropInput).apply(null,arguments)},fh=t._Conv3D=function(){return(fh=t._Conv3D=t.asm.Conv3D).apply(null,arguments)},Vv=t._Conv3DBackpropFilterV2=function(){return(Vv=t._Conv3DBackpropFilterV2=t.asm.Conv3DBackpropFilterV2).apply(null,arguments)},Hv=t._Conv3DBackpropInputV2=function(){return(Hv=t._Conv3DBackpropInputV2=t.asm.Conv3DBackpropInputV2).apply(null,arguments)},qv=t._Cos=function(){return(qv=t._Cos=t.asm.Cos).apply(null,arguments)},pp=t._Cosh=function(){return(pp=t._Cosh=t.asm.Cosh).apply(null,arguments)},hh=t._CropAndResize=function(){return(hh=t._CropAndResize=t.asm.CropAndResize).apply(null,arguments)},jv=t._Cumprod=function(){return(jv=t._Cumprod=t.asm.Cumprod).apply(null,arguments)},Xv=t._Cumsum=function(){return(Xv=t._Cumsum=t.asm.Cumsum).apply(null,arguments)},Yv=t._DenseBincount=function(){return(Yv=t._DenseBincount=t.asm.DenseBincount).apply(null,arguments)},Zv=t._DepthToSpace=function(){return(Zv=t._DepthToSpace=t.asm.DepthToSpace).apply(null,arguments)},mb=t._DepthwiseConv2dNative=function(){return(mb=t._DepthwiseConv2dNative=t.asm.DepthwiseConv2dNative).apply(null,arguments)},cb=t._Diag=function(){return(cb=t._Diag=t.asm.Diag).apply(null,arguments)},Qv=t._Dilation2D=function(){return(Qv=t._Dilation2D=t.asm.Dilation2D).apply(null,arguments)},Jv=t._Dilation2DBackpropFilter=function(){return(Jv=t._Dilation2DBackpropFilter=t.asm.Dilation2DBackpropFilter).apply(null,arguments)},db=t._Dilation2DBackpropInput=function(){return(db=t._Dilation2DBackpropInput=t.asm.Dilation2DBackpropInput).apply(null,arguments)},fb=t._Elu=function(){return(fb=t._Elu=t.asm.Elu).apply(null,arguments)},eS=t._EluGrad=function(){return(eS=t._EluGrad=t.asm.EluGrad).apply(null,arguments)},tS=t._Equal=function(){return(tS=t._Equal=t.asm.Equal).apply(null,arguments)},rS=t._Exp=function(){return(rS=t._Exp=t.asm.Exp).apply(null,arguments)},nS=t._Expm1=function(){return(nS=t._Expm1=t.asm.Expm1).apply(null,arguments)},hb=t._FlipLeftRight=function(){return(hb=t._FlipLeftRight=t.asm.FlipLeftRight).apply(null,arguments)},n_=t._Floor=function(){return(n_=t._Floor=t.asm.Floor).apply(null,arguments)},oS=t._FloorDiv=function(){return(oS=t._FloorDiv=t.asm.FloorDiv).apply(null,arguments)},sS=t._FusedBatchNorm=function(){return(sS=t._FusedBatchNorm=t.asm.FusedBatchNorm).apply(null,arguments)},aS=t._FusedConv2D=function(){return(aS=t._FusedConv2D=t.asm.FusedConv2D).apply(null,arguments)},iS=t._FusedDepthwiseConv2D=function(){return(iS=t._FusedDepthwiseConv2D=t.asm.FusedDepthwiseConv2D).apply(null,arguments)},uS=t._Gather=function(){return(uS=t._Gather=t.asm.Gather).apply(null,arguments)},pS=t._GatherNd=function(){return(pS=t._GatherNd=t.asm.GatherNd).apply(null,arguments)},lS=t._Greater=function(){return(lS=t._Greater=t.asm.Greater).apply(null,arguments)},mS=t._GreaterEqual=function(){return(mS=t._GreaterEqual=t.asm.GreaterEqual).apply(null,arguments)},cS=t._IsFinite=function(){return(cS=t._IsFinite=t.asm.IsFinite).apply(null,arguments)},dS=t._IsInf=function(){return(dS=t._IsInf=t.asm.IsInf).apply(null,arguments)},fS=t._IsNan=function(){return(fS=t._IsNan=t.asm.IsNan).apply(null,arguments)},hS=t._LRN=function(){return(hS=t._LRN=t.asm.LRN).apply(null,arguments)},gS=t._LRNGrad=function(){return(gS=t._LRNGrad=t.asm.LRNGrad).apply(null,arguments)},bS=t._LeakyRelu=function(){return(bS=t._LeakyRelu=t.asm.LeakyRelu).apply(null,arguments)},yS=t._Less=function(){return(yS=t._Less=t.asm.Less).apply(null,arguments)},xS=t._LessEqual=function(){return(xS=t._LessEqual=t.asm.LessEqual).apply(null,arguments)},TS=t._LinSpace=function(){return(TS=t._LinSpace=t.asm.LinSpace).apply(null,arguments)},CS=t._Log=function(){return(CS=t._Log=t.asm.Log).apply(null,arguments)},IS=t._Log1p=function(){return(IS=t._Log1p=t.asm.Log1p).apply(null,arguments)},kS=t._LogicalAnd=function(){return(kS=t._LogicalAnd=t.asm.LogicalAnd).apply(null,arguments)},vS=t._LogicalNot=function(){return(vS=t._LogicalNot=t.asm.LogicalNot).apply(null,arguments)},SS=t._LogicalOr=function(){return(SS=t._LogicalOr=t.asm.LogicalOr).apply(null,arguments)},wS=t._LogicalXor=function(){return(wS=t._LogicalXor=t.asm.LogicalXor).apply(null,arguments)},AS=t._Max=function(){return(AS=t._Max=t.asm.Max).apply(null,arguments)},NS=t._MaxPool=function(){return(NS=t._MaxPool=t.asm.MaxPool).apply(null,arguments)},DS=t._MaxPool3D=function(){return(DS=t._MaxPool3D=t.asm.MaxPool3D).apply(null,arguments)},_S=t._MaxPool3DGrad=function(){return(_S=t._MaxPool3DGrad=t.asm.MaxPool3DGrad).apply(null,arguments)},RS=t._Maximum=function(){return(RS=t._Maximum=t.asm.Maximum).apply(null,arguments)},MS=t._Mean=function(){return(MS=t._Mean=t.asm.Mean).apply(null,arguments)},PS=t._Min=function(){return(PS=t._Min=t.asm.Min).apply(null,arguments)},FS=t._Minimum=function(){return(FS=t._Minimum=t.asm.Minimum).apply(null,arguments)},ES=t._MirrorPad=function(){return(ES=t._MirrorPad=t.asm.MirrorPad).apply(null,arguments)},LS=t._Multinomial=function(){return(LS=t._Multinomial=t.asm.Multinomial).apply(null,arguments)},BS=t._Multiply=function(){return(BS=t._Multiply=t.asm.Multiply).apply(null,arguments)},$S=t._Neg=function(){return($S=t._Neg=t.asm.Neg).apply(null,arguments)},OS=t._NonMaxSuppressionV3=function(){return(OS=t._NonMaxSuppressionV3=t.asm.NonMaxSuppressionV3).apply(null,arguments)},zS=t._NonMaxSuppressionV4=function(){return(zS=t._NonMaxSuppressionV4=t.asm.NonMaxSuppressionV4).apply(null,arguments)},GS=t._NonMaxSuppressionV5=function(){return(GS=t._NonMaxSuppressionV5=t.asm.NonMaxSuppressionV5).apply(null,arguments)},WS=t._NotEqual=function(){return(WS=t._NotEqual=t.asm.NotEqual).apply(null,arguments)},US=t._OneHot=function(){return(US=t._OneHot=t.asm.OneHot).apply(null,arguments)},KS=t._PadV2=function(){return(KS=t._PadV2=t.asm.PadV2).apply(null,arguments)},VS=t._Pow=function(){return(VS=t._Pow=t.asm.Pow).apply(null,arguments)},HS=t._Prelu=function(){return(HS=t._Prelu=t.asm.Prelu).apply(null,arguments)},qS=t._Prod=function(){return(qS=t._Prod=t.asm.Prod).apply(null,arguments)},jS=t._RealDiv=function(){return(jS=t._RealDiv=t.asm.RealDiv).apply(null,arguments)},XS=t._Reciprocal=function(){return(XS=t._Reciprocal=t.asm.Reciprocal).apply(null,arguments)},YS=t._Relu=function(){return(YS=t._Relu=t.asm.Relu).apply(null,arguments)},ZS=t._Relu6=function(){return(ZS=t._Relu6=t.asm.Relu6).apply(null,arguments)},QS=t._ResizeBilinear=function(){return(QS=t._ResizeBilinear=t.asm.ResizeBilinear).apply(null,arguments)},JS=t._ResizeBilinearGrad=function(){return(JS=t._ResizeBilinearGrad=t.asm.ResizeBilinearGrad).apply(null,arguments)},ew=t._ResizeNearestNeighbor=function(){return(ew=t._ResizeNearestNeighbor=t.asm.ResizeNearestNeighbor).apply(null,arguments)},tw=t._ResizeNearestNeighborGrad=function(){return(tw=t._ResizeNearestNeighborGrad=t.asm.ResizeNearestNeighborGrad).apply(null,arguments)},rw=t._Reverse=function(){return(rw=t._Reverse=t.asm.Reverse).apply(null,arguments)},nw=t._RotateWithOffset=function(){return(nw=t._RotateWithOffset=t.asm.RotateWithOffset).apply(null,arguments)},ow=t._Round=function(){return(ow=t._Round=t.asm.Round).apply(null,arguments)},sw=t._Rsqrt=function(){return(sw=t._Rsqrt=t.asm.Rsqrt).apply(null,arguments)},aw=t._ScatterNd=function(){return(aw=t._ScatterNd=t.asm.ScatterNd).apply(null,arguments)},iw=t._SearchSorted=function(){return(iw=t._SearchSorted=t.asm.SearchSorted).apply(null,arguments)},uw=t._SelectV2=function(){return(uw=t._SelectV2=t.asm.SelectV2).apply(null,arguments)},pw=t._Selu=function(){return(pw=t._Selu=t.asm.Selu).apply(null,arguments)},lw=t._Sigmoid=function(){return(lw=t._Sigmoid=t.asm.Sigmoid).apply(null,arguments)},mw=t._Sign=function(){return(mw=t._Sign=t.asm.Sign).apply(null,arguments)},cw=t._Sin=function(){return(cw=t._Sin=t.asm.Sin).apply(null,arguments)},dw=t._Softmax=function(){return(dw=t._Softmax=t.asm.Softmax).apply(null,arguments)},fw=t._Softplus=function(){return(fw=t._Softplus=t.asm.Softplus).apply(null,arguments)},hw=t._SparseFillEmptyRows=function(){return(hw=t._SparseFillEmptyRows=t.asm.SparseFillEmptyRows).apply(null,arguments)},gw=t._SparseReshape=function(){return(gw=t._SparseReshape=t.asm.SparseReshape).apply(null,arguments)},bw=t._SparseSegmentReduction=function(){return(bw=t._SparseSegmentReduction=t.asm.SparseSegmentReduction).apply(null,arguments)},yw=t._SparseToDense=function(){return(yw=t._SparseToDense=t.asm.SparseToDense).apply(null,arguments)},xw=t._Sqrt=function(){return(xw=t._Sqrt=t.asm.Sqrt).apply(null,arguments)},Tw=t._Square=function(){return(Tw=t._Square=t.asm.Square).apply(null,arguments)},Cw=t._SquaredDifference=function(){return(Cw=t._SquaredDifference=t.asm.SquaredDifference).apply(null,arguments)},Iw=t._Step=function(){return(Iw=t._Step=t.asm.Step).apply(null,arguments)},kw=t._StridedSlice=function(){return(kw=t._StridedSlice=t.asm.StridedSlice).apply(null,arguments)},vw=t._Sub=function(){return(vw=t._Sub=t.asm.Sub).apply(null,arguments)},Sw=t._Sum=function(){return(Sw=t._Sum=t.asm.Sum).apply(null,arguments)},ww=t._Tan=function(){return(ww=t._Tan=t.asm.Tan).apply(null,arguments)},Aw=t._Tanh=function(){return(Aw=t._Tanh=t.asm.Tanh).apply(null,arguments)},Nw=t._TensorScatterUpdate=function(){return(Nw=t._TensorScatterUpdate=t.asm.TensorScatterUpdate).apply(null,arguments)},Dw=t._Tile=function(){return(Dw=t._Tile=t.asm.Tile).apply(null,arguments)},_w=t._TopK=function(){return(_w=t._TopK=t.asm.TopK).apply(null,arguments)},Rw=t._Transform=function(){return(Rw=t._Transform=t.asm.Transform).apply(null,arguments)},Mw=t._Transpose=function(){return(Mw=t._Transpose=t.asm.Transpose).apply(null,arguments)},Pw=t.__FusedMatMul=function(){return(Pw=t.__FusedMatMul=t.asm._FusedMatMul).apply(null,arguments)},Fw=t._malloc=function(){return(Fw=t._malloc=t.asm.malloc).apply(null,arguments)},Ew=t._free=function(){return(Ew=t._free=t.asm.free).apply(null,arguments)},Lw=t.___errno_location=function(){return(Lw=t.___errno_location=t.asm.__errno_location).apply(null,arguments)},gb=t.stackSave=function(){return(gb=t.stackSave=t.asm.stackSave).apply(null,arguments)},bb=t.stackRestore=function(){return(bb=t.stackRestore=t.asm.stackRestore).apply(null,arguments)},gh=t.stackAlloc=function(){return(gh=t.stackAlloc=t.asm.stackAlloc).apply(null,arguments)},Bw=t.dynCall_iijjiiii=function(){return(Bw=t.dynCall_iijjiiii=t.asm.dynCall_iijjiiii).apply(null,arguments)},$w=t.dynCall_jiji=function(){return($w=t.dynCall_jiji=t.asm.dynCall_jiji).apply(null,arguments)};t.cwrap=wv;var Ym;Hr=function Y(){Ym||yb(),Ym||(Hr=Y)};function yb(Y){if(Y=Y||i,nr>0||(Lt(),nr>0))return;function de(){Ym||(Ym=!0,t.calledRun=!0,!G&&(Bt(),n(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),Wn()))}t.setStatus?(t.setStatus("Running..."),setTimeout(function(){setTimeout(function(){t.setStatus("")},1),de()},1)):de()}if(t.preInit)for(typeof t.preInit=="function"&&(t.preInit=[t.preInit]);t.preInit.length>0;)t.preInit.pop()();yb();var Zm;s&&(Zm={uncaughtException:process.listeners("uncaughtException").filter(function(Y){return!s.uncaughtException.indexOf(Y)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(Y){return!s.unhandledRejection.indexOf(Y)>-1})});var Qm;if(typeof e<"u")Qm=e;else if(typeof WasmBackendModuleThreadedSimd<"u")Qm=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(Zm){var Ow=Qm._dispose;Qm._dispose=function(){Ow(),Zm.uncaughtException.forEach(function(Y){process.removeListener("uncaughtException",Y)}),Zm.unhandledRejection.forEach(function(Y){process.removeListener("unhandledRejection",Y)})}}return e.ready}})();typeof bv=="object"&&typeof Y2=="object"?Y2.exports=X2:typeof define=="function"&&define.amd?define([],function(){return X2}):typeof bv=="object"&&(bv.WasmBackendModule=X2)});var OX=1e-7,zX=1e-4,$a=class{constructor(e,t){this.backend=e;this.dataMover=t}data=new WeakMap;dataIdsCount=0;get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},bo=class{refCount(e){return Kn("refCount")}incRef(e){return Kn("incRef")}timerAvailable(){return!0}time(e){return Kn("time")}read(e){return Kn("read")}readSync(e){return Kn("readSync")}readToGPU(e,t){return Kn("readToGPU")}numDataIds(){return Kn("numDataIds")}disposeData(e,t){return Kn("disposeData")}write(e,t,n){return Kn("write")}move(e,t,n,o,s){return Kn("move")}createTensorFromGPUData(e,t,n){return Kn("createTensorFromGPUData")}memory(){return Kn("memory")}floatPrecision(){return Kn("floatPrecision")}epsilon(){return this.floatPrecision()===32?OX:zX}dispose(){return Kn("dispose")}};function Kn(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function c_(r){let e=r.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,Nb(r,e,t)}function GX(r,e){if(r.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${e.length}`);let t=r.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Nb(r,t,n),Nb(e,t,n)}function ec(r,e,t){return Math.max(r,Math.min(e,t))}function WX(r){return r%2===0?r:r+1}function Nb(r,e,t){let n=r[e];r[e]=r[t],r[t]=n}function UX(r){let e=0;for(let t=0;t<r.length;t++)e+=r[t];return e}function KX(r,e){let t=Math.random();return e*t+(1-t)*r}function VX(r,e){let t=0;for(let n=0;n<r.length;n++){let o=Number(r[n])-Number(e[n]);t+=o*o}return t}function D(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function Gt(r,e,t=""){D(Vn(r,e),()=>t+` Shapes ${r} and ${e} must match`)}function yo(r){D(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function st(r){if(r.length===0)return 1;let e=r[0];for(let t=1;t<r.length;t++)e*=r[t];return e}function HX(r){return r.length===0}function Vn(r,e){if(r===e)return!0;if(r==null||e==null||r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==e[t])return!1;return!0}function Au(r){return r%1===0}function qX(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let e=Math.exp(2*r);return(e-1)/(e+1)}}function jX(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}function XX(r){let e=new Uint32Array(r);for(let t=0;t<r;++t)e[t]=t;return c_(e),e}function bl(r,e){return e<=r.length?r:r+" ".repeat(e-r.length)}function YX(r,e=o=>0,t,n){return new Promise((o,s)=>{let a=0,i=()=>{if(r()){o();return}a++;let p=e(a);if(t!=null&&a>=t){s();return}n!=null?n(i,p):setTimeout(i,p)};i()})}function ZX(r,e){let t=1,n=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)t*=r[s];else if(r[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(n===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${r}`);return r}if(t===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);let o=r.slice();return o[n]=e/t,o}function yr(r,e){let t=e.length;return r=r==null?e.map((n,o)=>o):[].concat(r),D(r.every(n=>n>=-t&&n<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${r}`),D(r.every(n=>Au(n)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(n=>n<0?t+n:n)}function Kw(r,e){let t=[],n=[],o=e!=null&&Array.isArray(e)&&e.length===0,s=e==null||o?null:yr(e,r).sort(),a=0;for(let i=0;i<r.length;++i){if(s!=null){if(s[a]===i&&r[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${r[i]}' is not 1`);(s[a]==null||s[a]>i)&&r[i]===1&&(t.push(r[i]),n.push(i)),s[a]<=i&&a++}r[i]!==1&&(t.push(r[i]),n.push(i))}return{newShape:t,keptDims:n}}function Vw(r,e){return Db(r,e)}function Db(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else if(r==="string")t=new Array(e);else throw new Error(`Unknown data type ${r}`);return t}function Hw(r,e){for(let t=0;t<r.length;t++){let n=r[t];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${e} being uploaded contains ${n}.`)}}function qw(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function QX(r,e){return!(e==="complex64"||e==="float32"&&r!=="complex64"||e==="int32"&&r!=="float32"&&r!=="complex64"||e==="bool"&&r==="bool")}function tc(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function jw(r){if(r==null)return 0;let e=0;return r.forEach(t=>e+=t.length),e}function Oa(r){return typeof r=="string"||r instanceof String}function d_(r){return typeof r=="boolean"}function f_(r){return typeof r=="number"}function mp(r){return Array.isArray(r)?mp(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":f_(r)?"float32":Oa(r)?"string":d_(r)?"bool":"float32"}function qi(r){return!!(r&&r.constructor&&r.call&&r.apply)}function rc(r,e){for(let t=e;t<r;++t)if(r%t===0)return t;return r}function ji(r){let e=r.length;if(e<2)return[];let t=new Array(e-1);t[e-2]=r[e-1];for(let n=e-3;n>=0;--n)t[n]=t[n+1]*r[n+1];return t}function h_(r,e,t,n=!1){let o=new Array;if(e.length===1){let s=e[0]*(n?2:1);for(let a=0;a<s;a++)o[a]=t[r+a]}else{let s=e[0],a=e.slice(1),i=a.reduce((p,u)=>p*u)*(n?2:1);for(let p=0;p<s;p++)o[p]=h_(r+p*i,a,t,n)}return o}function gl(r,e,t=!1){if(r.length===0)return e[0];let n=r.reduce((o,s)=>o*s)*(t?2:1);if(n===0)return[];if(n!==e.length)throw new Error(`[${r}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return h_(0,r,e,t)}function JX(r,e){if(Array.isArray(r))return r;if(e==="float32")return r instanceof Float32Array?r:new Float32Array(r);if(e==="int32")return r instanceof Int32Array?r:new Int32Array(r);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${e}`)}function yh(r,e){let t=nc(r,e);for(let n=0;n<t.length;n++)t[n]=1;return t}function nc(r,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${e}`)}function eY(r,e){let t=r.reduce((n,o)=>n*o,1);if(e==null||e==="float32")return gl(r,new Float32Array(t));if(e==="int32")return gl(r,new Int32Array(t));if(e==="bool")return gl(r,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function Vt(r){r.forEach(e=>{D(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function tY(r,e,t){if(e===0)return 0;if(e===1)return r[0];let n=r[r.length-1];for(let o=0;o<r.length-1;++o)n+=t[o]*r[o];return n}function rY(r,e,t){if(e===0)return[];if(e===1)return[r];let n=new Array(e);for(let o=0;o<n.length-1;++o)n[o]=Math.floor(r/t[o]),r-=n[o]*t[o];return n[n.length-1]=r,n}function yl(r){return r&&r.then&&typeof r.then=="function"}var g_="tfjsflags",xh=class{constructor(e){this.global=e;this.populateURLFlags()}flags={};flagRegistry={};urlFlags={};platformName;platform;getQueryParams=oY;setPlatform(e,t){this.platform!=null&&(L().getBool("IS_TEST")||L().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let o=this.urlFlags[e];L().getBool("IS_TEST")||L().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${o}.`),this.set(e,o)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(yl(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);g_ in e&&e[g_].split(",").forEach(n=>{let[o,s]=n.split(":");this.urlFlags[o]=aY(o,s)})}};function oY(r){let e={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(sY(e,n[0],n[1]),n.join("="))),e}function sY(r,e,t){r[decodeURIComponent(e)]=decodeURIComponent(t||"")}function aY(r,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${r}.`)}function L(){return Xw}var Xw=null;function b_(r){Xw=r}var Yw;function Zw(){if(Yw==null){let r;if(typeof window<"u")r=window;else if(typeof global<"u")r=global;else if(typeof process<"u")r=process;else if(typeof self<"u")r=self;else throw new Error("Could not find a global object");Yw=r}return Yw}function iY(){let r=Zw();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function Th(r,e){let t=iY();if(t.has(r))return t.get(r);{let n=e();return t.set(r,n),t.get(r)}}var Gs="Abs",xo="Acos",To="Acosh",Dn="Add",Co="AddN",za="All",Ga="Any",Ws="ArgMax",Us="ArgMin",Io="Asin",ko="Asinh",vo="Atan",So="Atanh",wo="Atan2",Ao="AvgPool",cp="AvgPoolGrad",Ks="AvgPool3D",Xi="AvgPool3DGrad",No="BatchMatMul",Vs="BatchToSpaceND",Wa="Bincount",y_="BroadcastTo",Yi="BroadcastArgs",Hn="Cast",Do="Ceil",qn="ClipByValue",dp="Complex",fp="ComplexAbs",Hs="Concat",_o="Conv2D",hp="Conv2DBackpropFilter",Ro="Conv2DBackpropInput",Mo="Conv3D",Ua="Conv3DBackpropFilterV2",Ka="Conv3DBackpropInputV2",Po="Cos",Fo="Cosh",Va="Cumprod",Eo="Cumsum",Ha="CropAndResize",Zi="DenseBincount",qa="DepthToSpace",Lo="DepthwiseConv2dNative",gp="DepthwiseConv2dNativeBackpropFilter",bp="DepthwiseConv2dNativeBackpropInput",Qi="Diag",Bo="Dilation2D",Ji="Dilation2DBackpropInput",eu="Dilation2DBackpropFilter",$o="RealDiv",yp="Einsum",Oo="Elu",ja="EluGrad",Xa="Erf",Ya="Equal",zo="Exp",qs="ExpandDims",Go="Expm1",xp="FFT",tu="Fill",Za="FlipLeftRight",Wo="Floor",Uo="FloorDiv",Ko="FusedBatchNorm",js="GatherV2",Qa="GatherNd",Ja="Greater",Vo="GreaterEqual",jn="Identity",Tp="IFFT",Cp="Imag",Ho="IsFinite",qo="IsInf",jo="IsNan",Xo="LeakyRelu",ei="Less",ti="LessEqual",ri="LinSpace",Yo="Log",Zo="Log1p",ni="LogicalAnd",oi="LogicalNot",si="LogicalOr",x_="LogicalXor",T_="LogSoftmax",eke="LowerBound",Qo="LRN",ai="LRNGrad",tke="MatrixBandPart",Jo="Max",es="Maximum",ts="MaxPool",Ip="MaxPoolGrad",Xs="MaxPool3D",ru="MaxPool3DGrad",kp="MaxPoolWithArgmax",rs="Mean",ns="Min",os="Minimum",ss="MirrorPad",ii="Mod",ui="Multinomial",as="Multiply",Ys="Neg",pi="NotEqual",li="NonMaxSuppressionV3",Nu="NonMaxSuppressionV4",mi="NonMaxSuppressionV5",Zs="OnesLike",is="OneHot",Qs="Pack",us="PadV2",rke="Pool",ps="Pow",ls="Prelu",ms="Prod",oc="RaggedGather",sc="RaggedRange",ac="RaggedTensorToTensor",nu="Range",vp="Real",cs="Reciprocal",ds="Relu",Js="Reshape",fs="ResizeNearestNeighbor",ci="ResizeNearestNeighborGrad",hs="ResizeBilinear",di="ResizeBilinearGrad",gs="Relu6",bs="Reverse",ys="Round",xs="Rsqrt",fi="ScatterNd",Du="TensorScatterUpdate",hi="SearchSorted",ea="Select",Ts="Selu",ta="Slice",Cs="Sin",gi="Sinh",Is="Sign",ks="Sigmoid",vs="Softplus",Ss="Sqrt",ws="Sum",ra="SpaceToBatchND",na="SplitV",As="Softmax",Sp="SparseFillEmptyRows",_u="SparseReshape",wp="SparseSegmentMean",Ap="SparseSegmentSum",bi="SparseToDense",Ns="SquaredDifference",ou="Square",xl="StaticRegexReplace",yi="StridedSlice",su="StringNGrams",Np="StringSplit",Dp="StringToHashBucketFast",Ds="Sub",_s="Tan",Rs="Tanh",_n="Tile",xi="TopK",Ti="Transform",Rn="Transpose",_p="Unique",oa="Unpack",Rp="UnsortedSegmentSum",nke="UpperBound",sa="ZerosLike",Xn="Step",Tl="FromPixels",Ci="RotateWithOffset",aa="_FusedMatMul",ia="FusedConv2D",ua="FusedDepthwiseConv2D";function au(...r){L().getBool("IS_TEST")||L().getBool("PROD")||console.warn(...r)}function uY(...r){L().getBool("IS_TEST")||L().getBool("PROD")||console.log(...r)}var ic=Th("kernelRegistry",()=>new Map),Ch=Th("gradRegistry",()=>new Map);function Ih(r,e){let t=Jw(r,e);return ic.get(t)}function Qw(r){return Ch.get(r)}function _b(r){let e=ic.entries(),t=[];for(;;){let{done:n,value:o}=e.next();if(n)break;let[s,a]=o,[i]=s.split("_");i===r&&t.push(a)}return t}function Ru(r){let{kernelName:e,backendName:t}=r,n=Jw(e,t);ic.has(n)&&au(`The kernel '${e}' for backend '${t}' is already registered`),ic.set(n,r)}function I_(r){let{kernelName:e}=r;Ch.has(e)&&L().getBool("DEBUG")&&au(`Overriding the gradient for '${e}'`),Ch.set(e,r)}function uke(r,e){let t=Jw(r,e);if(!ic.has(t))throw new Error(`The kernel '${r}' for backend '${e}' is not registered`);ic.delete(t)}function pke(r){if(!Ch.has(r))throw new Error(`The gradient '${r}' for backend is not registered`);Ch.delete(r)}function lke(r,e){_b(r).forEach(n=>{let o=Object.assign({},n,{backendName:e});Ru(o)})}function Jw(r,e){return`${e}_${r}`}var y={};Ye(y,{arraysEqual:()=>Vn,assert:()=>D,assertNonNegativeIntegerDimensions:()=>Vt,assertNonNull:()=>yo,assertShapesMatch:()=>Gt,bytesFromStringArray:()=>jw,bytesPerElement:()=>tc,checkConversionForErrors:()=>Hw,clamp:()=>ec,computeStrides:()=>ji,convertBackendValuesAndArrayBuffer:()=>JX,createScalarValue:()=>hY,createShuffledIndices:()=>XX,decodeString:()=>mc,distSquared:()=>VX,encodeString:()=>Pp,fetch:()=>bY,fingerPrint64:()=>fY,flatten:()=>ki,getArrayFromDType:()=>Db,getTypedArrayFromDType:()=>Vw,hasEncodingLoss:()=>QX,hexToLong:()=>kh,indexToLoc:()=>rY,inferDtype:()=>mp,inferFromImplicitShape:()=>ZX,isBoolean:()=>d_,isFunction:()=>qi,isInt:()=>Au,isNumber:()=>f_,isPromise:()=>yl,isScalarShape:()=>HX,isString:()=>Oa,isTypedArray:()=>xr,isValidDtype:()=>qw,locToIndex:()=>tY,makeOnesTypedArray:()=>yh,makeZerosNestedTypedArray:()=>eY,makeZerosTypedArray:()=>nc,nearestDivisor:()=>rc,nearestLargerEven:()=>WX,now:()=>Sl,parseAxisParam:()=>yr,randUniform:()=>KX,repeatedTry:()=>YX,rightPad:()=>bl,shuffle:()=>c_,shuffleCombo:()=>GX,sizeFromShape:()=>st,sizeToSquarishShape:()=>jX,squeezeShape:()=>Kw,sum:()=>UX,swap:()=>Nb,tanh:()=>qX,toNestedArray:()=>gl,toTypedArray:()=>lc});var nA=hl(P_());var vl=nA.default||nA;function kh(r){return vl.fromString(r,!0,16)}var E_=kh("c3a5c85c97cb3127"),kl=kh("b492b66fbe98f273"),hn=kh("9ae16a3b2f90404f");function rA(r){return r.xor(r.shru(47))}function L_(r,e,t){let n=r.slice(e,e+t);return vl.fromBytes(Array.from(n),!0,!0)}function Ht(r,e){return L_(r,e,8)}function F_(r,e){return L_(r,e,4)}function Or(r,e){return e===0?r:r.shru(e).or(r.shl(64-e))}function Mp(r,e,t=kh("9ddfea08eb382d69")){let n=r.xor(e).mul(t);n=n.xor(n.shru(47));let o=e.xor(n).mul(t);return o=o.xor(o.shru(47)),o=o.mul(t),o}function lY(r,e,t,n,o,s){o=o.add(r),s=Or(s.add(o).add(n),21);let a=o;return o=o.add(e),o=o.add(t),s=s.add(Or(o,44)),[o.add(n),s.add(a)]}function Mb(r,e,t,n){return lY(Ht(r,e),Ht(r,e+8),Ht(r,e+16),Ht(r,e+24),t,n)}function mY(r,e=r.length){if(e>=8){let t=hn.add(e*2),n=Ht(r,0).add(hn),o=Ht(r,e-8),s=Or(o,37).mul(t).add(n),a=Or(n,25).add(o).mul(t);return Mp(s,a,t)}if(e>=4){let t=hn.add(e*2),n=F_(r,0);return Mp(n.shl(3).add(e),F_(r,e-4),t)}if(e>0){let t=r[0],n=r[e>>1],o=r[e-1],s=t+(n<<8),a=e+(o<<2);return rA(hn.mul(s).xor(E_.mul(a))).mul(hn)}return hn}function cY(r,e=r.length){let t=hn.add(e*2),n=Ht(r,0).mul(kl),o=Ht(r,8),s=Ht(r,e-8).mul(t),a=Ht(r,e-16).mul(hn);return Mp(Or(n.add(o),43).add(Or(s,30)).add(a),n.add(Or(o.add(hn),18)).add(s),t)}function dY(r,e=r.length){let t=hn.add(e*2),n=Ht(r,0).mul(hn),o=Ht(r,8),s=Ht(r,e-8).mul(t),a=Ht(r,e-16).mul(hn),i=Or(n.add(o),43).add(Or(s,30)).add(a),p=Mp(i,n.add(Or(o.add(hn),18)).add(s),t),u=Ht(r,16).mul(t),l=Ht(r,24),m=i.add(Ht(r,e-32)).mul(t),c=p.add(Ht(r,e-24)).mul(t);return Mp(Or(u.add(l),43).add(Or(m,30)).add(c),u.add(Or(l.add(n),18)).add(m),t)}function fY(r,e=r.length){let t=vl.fromNumber(81,!0);if(e<=32)return e<=16?mY(r,e):cY(r,e);if(e<=64)return dY(r,e);let n=t,o=t.mul(kl).add(113),s=rA(o.mul(hn).add(113)).mul(hn),a=[vl.UZERO,vl.UZERO],i=[vl.UZERO,vl.UZERO];n=n.mul(hn).add(Ht(r,0));let p=0,u=(e-1>>6)*64,l=u+(e-1&63)-63;do n=Or(n.add(o).add(a[0]).add(Ht(r,p+8)),37).mul(kl),o=Or(o.add(a[1]).add(Ht(r,p+48)),42).mul(kl),n=n.xor(i[1]),o=o.add(a[0]).add(Ht(r,p+40)),s=Or(s.add(i[0]),33).mul(kl),a=Mb(r,p,a[1].mul(kl),n.add(i[0])),i=Mb(r,p+32,s.add(i[1]),o.add(Ht(r,p+16))),[s,n]=[n,s],p+=64;while(p!==u);let m=kl.add(s.and(255).shl(1));return p=l,i[0]=i[0].add(e-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),n=Or(n.add(o).add(a[0]).add(Ht(r,p+8)),37).mul(m),o=Or(o.add(a[1]).add(Ht(r,p+48)),42).mul(m),n=n.xor(i[1].mul(9)),o=o.add(a[0].mul(9).add(Ht(r,p+40))),s=Or(s.add(i[0]),33).mul(m),a=Mb(r,p,a[1].mul(m),n.add(i[0])),i=Mb(r,p+32,s.add(i[1]),o.add(Ht(r,p+16))),[s,n]=[n,s],Mp(Mp(a[0],i[0],m).add(rA(o).mul(E_)).add(s),Mp(a[1],i[1],m).add(n),m)}function hY(r,e){return e==="string"?Pp(r):lc([r],e)}function gY(r,e){return r instanceof Float32Array&&e==="float32"||r instanceof Int32Array&&e==="int32"||r instanceof Uint8Array&&e==="bool"}function lc(r,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=ki(r)),L().getBool("DEBUG")&&Hw(r,e),gY(r,e))return r;if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"){let t=new Uint8Array(r.length);for(let n=0;n<t.length;++n)Math.round(r[n])!==0&&(t[n]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Sl(){return L().platform.now()}function bY(r,e){return L().platform.fetch(r,e)}function Pp(r,e="utf-8"){return e=e||"utf-8",L().platform.encode(r,e)}function mc(r,e="utf-8"){return e=e||"utf-8",L().platform.decode(r,e)}function xr(r){return L().platform.isTypedArray(r)}function ki(r,e=[],t=!1){if(e==null&&(e=[]),typeof r=="boolean"||typeof r=="number"||typeof r=="string"||yl(r)||r==null||xr(r)&&t)e.push(r);else if(Array.isArray(r)||xr(r))for(let n=0;n<r.length;++n)ki(r[n],e,t);else{let n=-1;for(let o of Object.keys(r))/^([1-9]+[0-9]*|0)$/.test(o)&&(n=Math.max(n,Number(o)));for(let o=0;o<=n;o++)ki(r[o],e,t)}return e}var Pb=class{constructor(e,t){this.backendTimer=e;this.logger=t;t==null&&(this.logger=new oA)}profileKernel(e,t,n){let o,s=()=>{o=n()},a,i=Sl();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let u of o)u.dataSync();a=Promise.resolve({kernelMs:Sl()-i})}if(L().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<o.length;u++){let l=o[u];l.data().then(m=>{yY(m,l.dtype,e)})}return{kernelName:e,outputs:o,inputs:t,timeMs:a.then(u=>u.kernelMs),extraInfo:a.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:o,inputs:s,extraInfo:a}=e;n.forEach(i=>{Promise.all([i.data(),o,a]).then(p=>{this.logger.logKernelProfile(t,i,p[0],p[1],s,p[2])})})}};function yY(r,e,t){if(e!=="float32")return!1;for(let n=0;n<r.length;n++){let o=r[n];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${t}'`),!0}return!1}var oA=class{logKernelProfile(e,t,n,o,s,a){let i=typeof o=="number"?bl(`${o}ms`,9):o.error,p=bl(e,25),u=t.rank,l=t.size,m=bl(t.shape.toString(),14),c="";for(let d in s){let f=s[d];if(f!=null){let h=f.shape||t.shape,g=h.length;c+=`${d}: ${g}D ${g>0?h:""} `}}console.log(`%c${p}	%c${i}	%c${u}D ${m}	%c${l}	%c${c}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function B_(r,e,t){let n={},o={};for(let p=0;p<e.length;p++)n[e[p].id]=!0;for(let p=0;p<r.length;p++){let u=r[p],l=u.inputs;for(let m in l){let c=l[m],d=!1;for(let f=0;f<e.length;f++)if(n[c.id]){u.outputs.forEach(h=>n[h.id]=!0),d=!0,o[u.id]=!0;break}if(d)break}}let s={};s[t.id]=!0;let a={};for(let p=r.length-1;p>=0;p--){let u=r[p],l=u.inputs;for(let m=0;m<u.outputs.length;m++)if(s[u.outputs[m].id]){for(let c in l)s[l[c].id]=!0,a[u.id]=!0;break}}let i=[];for(let p=0;p<r.length;p++){let u=r[p];if(o[u.id]&&a[u.id]){let l={};for(let c in u.inputs){let d=u.inputs[c];n[d.id]&&(l[c]=d)}let m=Object.assign({},u);m.inputs=l,m.outputs=u.outputs,i.push(m)}}return i}function $_(r,e,t,n){for(let o=e.length-1;o>=0;o--){let s=e[o],a=[];if(s.outputs.forEach(p=>{let u=r[p.id];u!=null?a.push(u):a.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let i=s.gradient(a);for(let p in s.inputs){if(!(p in i))throw new Error(`Cannot backprop through input ${p}. Available gradients found: ${Object.keys(i)}.`);let u=t(()=>i[p]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${p} must have 'float32' dtype, but has '${u.dtype}'`);let l=s.inputs[p];if(!Vn(u.shape,l.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${p}' has shape '${u.shape}', which does not match the shape of the input '${l.shape}'`);if(r[l.id]==null)r[l.id]=u;else{let m=r[l.id];r[l.id]=n(m,u),m.dispose()}}}}var O_=20,vh=3,sA=7;function z_(r,e,t,n){let o=ji(e),s=xY(r,e,t,o),a=e.length,i=Fb(r,e,t,o,s),p=["Tensor"];return n&&(p.push(`  dtype: ${t}`),p.push(`  rank: ${a}`),p.push(`  shape: [${e}]`),p.push("  values:")),p.push(i.map(u=>"    "+u).join(`
`)),p.join(`
`)}function xY(r,e,t,n){let o=st(e),s=n[n.length-1],a=new Array(s).fill(0),i=e.length,p=t==="complex64"?wh(r):r;if(i>1)for(let u=0;u<o/s;u++){let l=u*s;for(let m=0;m<s;m++)a[m]=Math.max(a[m],Sh(p[l+m],0,t).length)}return a}function Sh(r,e,t){let n;return Array.isArray(r)?n=`${parseFloat(r[0].toFixed(sA))} + ${parseFloat(r[1].toFixed(sA))}j`:Oa(r)?n=`'${r}'`:t==="bool"?n=G_(r):n=parseFloat(r.toFixed(sA)).toString(),bl(n,e)}function G_(r){return r===0?"false":"true"}function Fb(r,e,t,n,o,s=!0){let a=t==="complex64"?2:1,i=e[0],p=e.length;if(p===0){if(t==="complex64"){let h=wh(r);return[Sh(h[0],0,t)]}return t==="bool"?[G_(r[0])]:[r[0].toString()]}if(p===1){if(i>O_){let g=vh*a,b=Array.from(r.slice(0,g)),x=Array.from(r.slice((i-vh)*a,i*a));return t==="complex64"&&(b=wh(b),x=wh(x)),["["+b.map((T,C)=>Sh(T,o[C],t)).join(", ")+", ..., "+x.map((T,C)=>Sh(T,o[i-vh+C],t)).join(", ")+"]"]}return["["+(t==="complex64"?wh(r):Array.from(r)).map((g,b)=>Sh(g,o[b],t)).join(", ")+"]"]}let u=e.slice(1),l=n.slice(1),m=n[0]*a,c=[];if(i>O_){for(let h=0;h<vh;h++){let g=h*m,b=g+m;c.push(...Fb(r.slice(g,b),u,t,l,o,!1))}c.push("...");for(let h=i-vh;h<i;h++){let g=h*m,b=g+m;c.push(...Fb(r.slice(g,b),u,t,l,o,h===i-1))}}else for(let h=0;h<i;h++){let g=h*m,b=g+m;c.push(...Fb(r.slice(g,b),u,t,l,o,h===i-1))}let d=p===2?",":"";c[0]="["+(i>0?c[0]+d:"");for(let h=1;h<c.length-1;h++)c[h]=" "+c[h]+d;let f=`,
`;for(let h=2;h<p;h++)f+=`
`;return c[c.length-1]=" "+c[c.length-1]+"]"+(s?"":f),c}function wh(r){let e=[];for(let t=0;t<r.length;t+=2)e.push([r[t],r[t+1]]);return e}var ht=class{constructor(e,t,n){this.dtype=t;if(this.shape=e.slice(),this.size=st(e),n!=null){let o=n.length;D(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Db(t,this.size),this.strides=ji(e)}size;shape;strides;values;set(e,...t){t.length===0&&(t=[0]),D(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let o of e){if(o<0||o>=this.shape[t]){let s=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(s)}t++}let n=e[e.length-1];for(let o=0;o<e.length-1;++o)n+=this.strides[o]*e[o];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return vi().makeTensor(this.values,this.shape,this.dtype)}},vi=null,cc=null,TY=null;function W_(r){vi=r}function U_(r){cc=r}function K_(r){TY=r}var He=class{id;dataId;shape;size;dtype;rankType;kept=!1;scopeId;strides;constructor(e,t,n,o){this.shape=e.slice(),this.dtype=t||"float32",this.size=st(e),this.strides=ji(e),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return cc.buffer(this.shape,this.dtype,e)}bufferSync(){return cc.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return gl(this.shape,e,this.dtype==="complex64")}arraySync(){return gl(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=vi().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>mc(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),vi().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=vi().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>mc(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await vi().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(vi().disposeTensor(this),this.isDisposedInternal=!0)}isDisposedInternal=!1;get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return cc.print(this,e)}clone(){return this.throwIfDisposed(),cc.clone(this)}toString(e=!1){let t=this.dataSync();return z_(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),cc.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),vi().makeVariable(this,e,t,n)}};Object.defineProperty(He,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function CY(){return Th("Tensor",()=>He)}CY();var Mu=class extends He{constructor(t,n,o,s){super(t.shape,t.dtype,t.dataId,s);this.trainable=n;this.name=o}name;assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Vn(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);vi().disposeTensor(this),this.dataId=t.dataId,vi().incRef(this,null)}dispose(){vi().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Mu,Symbol.hasInstance,{value:r=>r instanceof He&&r.assign!=null&&r.assign instanceof Function});var ca={};Ye(ca,{assertTypesMatch:()=>aA,getTensorsInContainer:()=>Ah,isTensorInList:()=>kY,makeTypesMatch:()=>Je});var V_=(i=>(i.R0="R0",i.R1="R1",i.R2="R2",i.R3="R3",i.R4="R4",i.R5="R5",i.R6="R6",i))(V_||{}),H_=(o=>(o.float32="float32",o.int32="int32",o.bool="int32",o.complex64="complex64",o))(H_||{}),q_=(o=>(o.float32="float32",o.int32="int32",o.bool="bool",o.complex64="complex64",o))(q_||{}),j_=(o=>(o.float32="float32",o.int32="float32",o.bool="float32",o.complex64="complex64",o))(j_||{}),X_=(o=>(o.float32="complex64",o.int32="complex64",o.bool="complex64",o.complex64="complex64",o))(X_||{}),IY={float32:j_,int32:H_,bool:q_,complex64:X_};function Nt(r,e){if(r==="string"||e==="string"){if(r==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${r} with ${e}`)}return IY[r][e]}function Pu(r){return Nt(r,"int32")}function Eb(r){return r!=null&&typeof r=="object"&&"texture"in r&&r.texture instanceof WebGLTexture}function Lb(r){return typeof GPUBuffer<"u"&&r!=null&&typeof r=="object"&&"buffer"in r&&r.buffer instanceof GPUBuffer}function Je(r,e){if(r.dtype===e.dtype)return[r,e];let t=Nt(r.dtype,e.dtype);return[r.cast(t),e.cast(t)]}function aA(r,e){D(r.dtype===e.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${e.dtype}) input must match`)}function kY(r,e){return e.some(t=>t.id===r.id)}function Ah(r){let e=[];return Y_(r,e,new Set),e}function Y_(r,e,t){if(r==null)return;if(r instanceof He){e.push(r);return}if(!vY(r))return;let n=r;for(let o in n){let s=n[o];t.has(s)||(t.add(s),Y_(s,e,t))}}function vY(r){return Array.isArray(r)||typeof r=="object"}function iA(r){return r.kernelName!=null}var Bb=class{registeredVariables={};nextTapeNodeId=0;numBytes=0;numTensors=0;numStringTensors=0;numDataBuffers=0;activeTape;gradientDepth=0;kernelDepth=0;activeScope;scopeStack=[];numDataMovesStack=[];nextScopeId=0;tensorInfo=new WeakMap;profiling=!1;activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}};dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},$b=class{constructor(e){this.ENV=e;this.state=new Bb}state;backendName;registry={};registryFactory={};profiler;backendInstance;pendingBackendInit;pendingBackendInitId=0;async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(au(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Pb(this.backendInstance),!0}setupRegisteredKernels(){_b(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){_b(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof bo)&&typeof n.then=="function"){let o=++this.pendingBackendInitId,s=n.then(a=>o<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,au(`Initialization of backend ${e} failed`),au(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return au(`Initialization of backend ${e} failed`),au(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:o,asyncInit:s}=this.initializeBackend(n);if(s||o)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),o=n.backend,s=this.readSync(t),a=o.refCount(t);o.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let o;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(o),()=>(o=t(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(e,t,n){e();try{let o=n();return t(),o}catch(o){throw t(),o}}nextTensorId(){return $b.nextTensorId++}nextVariableId(){return $b.nextVariableId++}clone(e){let t=N.runKernel(jn,{x:e}),n={x:e},o=a=>({x:()=>{let i="float32",p={x:a},u={dtype:i};return N.runKernel(Hn,p,u)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[t],o,s,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(Ih(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let o=this.backend.numDataIds(),s=0;n.forEach(p=>{s+=p.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=o-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],o=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let p,u=iA(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(iA(e)){let{kernelName:f,inputs:h,attrs:g}=e;this.backendName==null&&this.backend;let b=Ih(f,this.backendName);D(b!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{let x=this.backend.numDataIds();p=b.kernelFunc({inputs:h,attrs:g,backend:this.backend});let T=Array.isArray(p)?p:[p];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,x,T);let C=T.map(v=>v.rank!=null?v:this.makeTensorFromTensorInfo(v));if(o){let v=this.getTensorsForGradient(f,h,C);n=this.saveTensorsForBackwardMode(v)}return C}}else{let{forwardFunc:f}=e,h=g=>{o&&(n=g.map(b=>this.keep(this.clone(b))))};i=()=>{let g=this.backend.numDataIds();p=this.tidy(()=>f(this.backend,h));let b=Array.isArray(p)?p:[p];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,g,b),b}}let{inputs:l,attrs:m}=e,c=iA(e)?null:e.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(d=this.profiler.profileKernel(u,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs)}),o&&this.addTapeNode(u,l,t,c,n,m),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(f=>l[f]!=null?l[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(p)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let o=Qw(e);if(o!=null){let s=o.inputsToSave||[],a=o.outputsToSave||[],i;o.saveAllInputs?(D(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(u=>t[u])):i=s.map(u=>t[u]);let p=n.filter((u,l)=>a[l]);return i.concat(p)}return[]}makeTensor(e,t,n,o){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",o=o||this.backend;let s=e;n==="string"&&Oa(e[0])&&(s=e.map(p=>Pp(p)));let a=o.write(s,t,n),i=new He(t,n,a,this.nextTensorId());if(this.trackTensor(i,o),n==="string"){let p=this.state.tensorInfo.get(a),u=jw(s);this.state.numBytes+=u-p.bytes,p.bytes=u}return i}makeTensorFromDataId(e,t,n,o){n=n||"float32";let s={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(s,o)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:o,dtype:s}=e,a=new He(o,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,o){n=n||this.nextVariableId().toString(),o!=null&&o!==e.dtype&&(e=e.cast(o));let s=new Mu(e,t,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*tc(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Mu||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*tc(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,o,s,a){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},p=Qw(e);p!=null&&(o=p.gradFunc),o!=null&&(i.gradient=u=>(u=u.map((l,m)=>{if(l==null){let c=n[m],d=nc(c.size,c.dtype);return this.makeTensor(d,c.shape,c.dtype)}return l}),o(u.length>1?u:u[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=Ah(e),n=new Set(t.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!n.has(a.id)&&a.dispose()}let o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(s=>{!s.kept&&s.scopeId===o.id&&this.track(s)})}gradients(e,t,n,o=!1){if(D(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));D(s instanceof He,()=>"The result y returned by f() must be a tensor.");let a=B_(this.state.activeTape,t,s);if(!o&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[s.id]=n??SY(s.shape),$_(i,a,u=>this.tidy(u),wY);let p=t.map(u=>i[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(let l of u.saved)l.dispose()}),this.state.activeTape=null),{value:s,grads:p}})}customGrad(e){return D(qi(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{D(t.every(i=>i instanceof He),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,o={};t.forEach((i,p)=>{o[p]=i});let s=(i,p)=>(n=e(...t,p),D(n.value instanceof He,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),D(qi(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(i,p)=>{let u=n.gradFunc(i,p),l=Array.isArray(u)?u:[u];D(l.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),D(l.every(c=>c instanceof He),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let m={};return l.forEach((c,d)=>{m[d]=()=>c}),m};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Sl(),n=await this.backend.time(e);return n.wallMs=Sl()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Bb;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},Nh=$b;q(Nh,"nextTensorId",0),q(Nh,"nextVariableId",0);function SY(r){let e=yh(st(r),"float32");return N.makeTensor(e,r,"float32")}function uA(){let r=Zw();if(r._tfengine==null){let e=new xh(r);r._tfengine=new Nh(e)}return b_(r._tfengine.ENV),W_(()=>r._tfengine),r._tfengine}var N=uA();function wY(r,e){let t={a:r,b:e};return N.runKernel(Dn,t)}var Fp={};Ye(Fp,{isBrowser:()=>lA,isMobile:()=>DY,mockIsMobile:()=>NY});function AY(){return typeof navigator<"u"&&navigator!=null}var pA;function NY(r){pA=r}function DY(r){if(pA!==void 0)return pA;if(r||AY()){if(r||(r=navigator),r.product==="ReactNative")return!0;let e=r.userAgent||r.vendor||(typeof window<"u"?window.opera:"");if(!e){let t=r;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function lA(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Mn=L();Mn.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Mn.registerFlag("IS_BROWSER",()=>lA());Mn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Mn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Mn.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Mn.registerFlag("PROD",()=>!1);Mn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Mn.getBool("DEBUG"));Mn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Mn.registerFlag("IS_TEST",()=>!1);Mn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Mn.getBool("DEBUG"));Mn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Mn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Mn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function qr(r,e){let t=r;if(xr(r))return e==="string"?[]:[r.length];if(Eb(r)){let o=r.channels||"RGBA";return[r.height,r.width*o.length]}else if(Lb(r))return[r.buffer.size/(e==null?4:tc(e))];if(!Array.isArray(r))return[];let n=[];for(;Array.isArray(t)||xr(t)&&e!=="string";)n.push(t.length),t=t[0];return Array.isArray(r)&&L().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Q_(r,n,[]),n}function Q_(r,e,t){if(t=t||[],!Array.isArray(r)&&!xr(r)){D(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}D(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${r.length} elements`),D(r.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${r.length} elements`);let n=e.slice(1);for(let o=0;o<r.length;++o)Q_(r[o],n,t.concat(o))}function Z_(r,e,t,n){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==e||r==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${n}' must be ${r} tensor, but got ${e} tensor`)}}function S(r,e,t,n="numeric"){if(r instanceof He)return Z_(n,r.dtype,e,t),r;let o=mp(r);if(o!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(o=n),Z_(n,o,e,t),r==null||!xr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let p=r==null?"null":r.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${p}'`)}let s=qr(r,o);!xr(r)&&!Array.isArray(r)&&(r=[r]);let i=o!=="string"?lc(r,o):ki(r,[],!0);return N.makeTensor(i,s,o)}function Fu(r,e,t,n="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,a)=>S(s,`${e}[${a}]`,t,n))}var mA="__op";function w(r){let e=Object.keys(r);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0],n=r[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+mA;let o=(...s)=>{N.startScope(t);try{let a=n(...s);return yl(a)&&console.error("Cannot return a Promise inside of tidy."),N.endScope(a),a}catch(a){throw N.endScope(null),a}};return Object.defineProperty(o,"name",{value:t,configurable:!0}),o}function _Y(r,e){let t=S(r,"real","complex"),n=S(e,"imag","complex");Gt(t.shape,n.shape,`real and imag shapes, ${t.shape} and ${n.shape}, must match in call to tf.complex().`);let o={real:t,imag:n};return N.runKernel(dp,o)}var Pn=w({complex_:_Y});function gn(r,e,t,n){if(n==null)n=mp(r);else if(n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Lb(r)||Eb(r)){if(n!=="float32"&&n!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${n}.`);return N.backend.createTensorFromGPUData(r,e||t,n)}if(!xr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Vt(e);let o=st(e),s=st(t);D(o===s,()=>`Based on the provided shape, [${e}], the tensor should have ${o} values but has ${s}`);for(let a=0;a<t.length;++a){let i=t[a],p=a===t.length-1?i!==st(e.slice(a)):!0;D(t[a]===e[a]||!p,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!xr(r)&&!Array.isArray(r)&&(r=[r]),e=e||t,r=n!=="string"?lc(r,n):ki(r,[],!0),N.makeTensor(r,e,n)}function cr(r,e,t){let n=qr(r,t);return gn(r,e,n,t)}var Dh={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var Ob=4;async function e1(r,e){let t=[],n=[],o=Array.isArray(r)?r.map(a=>a.name):Object.keys(r);for(let a=0;a<o.length;++a){let i=o[a],p=Array.isArray(r)?r[a].tensor:r[i];if(p.dtype!=="float32"&&p.dtype!=="int32"&&p.dtype!=="bool"&&p.dtype!=="string"&&p.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${p.dtype}`);let u={name:i,shape:p.shape,dtype:p.dtype};if(p.dtype==="string"){let l=new Promise(async m=>{let c=await p.bytes(),d=c.reduce((g,b)=>g+b.length,0)+Ob*c.length,f=new Uint8Array(d),h=0;for(let g=0;g<c.length;g++){let b=c[g],x=new Uint8Array(new Uint32Array([b.length]).buffer);f.set(x,h),h+=Ob,f.set(b,h),h+=b.length}m(f)});n.push(l)}else n.push(p.data());e!=null&&(u.group=e),t.push(u)}let s=await Promise.all(n);return{data:RY(s),specs:t}}function zb(r,e){let t={},n,o=0;for(let s of e){let a=s.name,i=s.dtype,p=s.shape,u=st(p),l;if("quantization"in s){let m=s.quantization;if(m.dtype==="uint8"||m.dtype==="uint16"){if(!("min"in m&&"scale"in m))throw new Error(`Weight ${s.name} with quantization ${m.dtype} doesn't have corresponding metadata min and scale.`)}else if(m.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${s.name} is quantized with ${m.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${m.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let c=Dh[m.dtype],d=r.slice(o,o+u*c),f=m.dtype==="uint8"?new Uint8Array(d):new Uint16Array(d);if(i==="float32")if(m.dtype==="uint8"||m.dtype==="uint16"){l=new Float32Array(f.length);for(let h=0;h<f.length;h++){let g=f[h];l[h]=g*m.scale+m.min}}else if(m.dtype==="float16")n===void 0&&(n=EY()),l=n(f);else throw new Error(`Unsupported quantization type ${m.dtype} for weight type float32.`);else if(i==="int32"){if(m.dtype!=="uint8"&&m.dtype!=="uint16")throw new Error(`Unsupported quantization type ${m.dtype} for weight type int32.`);l=new Int32Array(f.length);for(let h=0;h<f.length;h++){let g=f[h];l[h]=Math.round(g*m.scale+m.min)}}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=u*c}else if(i==="string"){let m=st(s.shape);l=[];for(let c=0;c<m;c++){let d=new Uint32Array(r.slice(o,o+Ob))[0];o+=Ob;let f=new Uint8Array(r.slice(o,o+d));l.push(f),o+=d}}else{let m=Dh[i],c=r.slice(o,o+u*m);if(i==="float32")l=new Float32Array(c);else if(i==="int32")l=new Int32Array(c);else if(i==="bool")l=new Uint8Array(c);else if(i==="complex64"){l=new Float32Array(c);let d=new Float32Array(l.length/2),f=new Float32Array(l.length/2);for(let b=0;b<d.length;b++)d[b]=l[b*2],f[b]=l[b*2+1];let h=cr(d,p,"float32"),g=cr(f,p,"float32");t[a]=Pn(h,g),h.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=u*m}i!=="complex64"&&(t[a]=cr(l,p,i))}return t}function RY(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let e=0,t=[];r.forEach(s=>{if(e+=s.byteLength,t.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(e),o=0;return t.forEach(s=>{n.set(new Uint8Array(s.buffer),o),o+=s.byteLength}),n.buffer}var cA=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function J_(r){return cA?Buffer.byteLength(r):new Blob([r]).size}function t1(r){if(cA)return Buffer.from(r).toString("base64");let e=new Uint8Array(r),t="";for(let n=0,o=e.length;n<o;n++)t+=String.fromCharCode(e[n]);return btoa(t)}function r1(r){if(cA){let n=Buffer.from(r,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let e=atob(r),t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)t.set([e.charCodeAt(n)],n);return t.buffer}function dc(r){if(r.length===1)return r[0];let e=0;r.forEach(o=>{e+=o.byteLength});let t=new Uint8Array(e),n=0;return r.forEach(o=>{t.set(new Uint8Array(o),n),n+=o.byteLength}),t.buffer}function dA(r){let e="/";for(r=r.trim();r.endsWith(e);)r=r.slice(0,r.length-1);let t=r.split(e);return t[t.length-1]}function Gb(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:e};return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(t.initializerSignature=r.initializerSignature),r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),t}function fA(r,e,t){let n={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(n.trainingConfig=r.trainingConfig),r.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");n.weightSpecs=e,n.weightData=t}return r.signature!=null&&(n.signature=r.signature),r.userDefinedMetadata!=null&&(n.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(n.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(n.initializerSignature=r.initializerSignature),n}async function fc(r,e){let t,n;return r.weightsManifest!=null&&([t,n]=await e(r.weightsManifest)),fA(r,t,n)}function iu(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:J_(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:J_(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:r.weightData.byteLength}}function Wb(r){let e=[];for(let t of r)e.push(...t.weights);return e}function MY(){let r=t=>{let n=t<<13,o=0;for(;!(n&8388608);)o-=8388608,n<<=1;return n&=-8388609,o+=947912704,n|o},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=r(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function PY(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let e=1;e<31;e++)r[e]=e<<23;for(let e=33;e<63;e++)r[e]=2147483648+(e-32<<23);return r}function FY(){let r=new Uint32Array(64);for(let e=0;e<64;e++)r[e]=1024;return r[0]=r[32]=0,r}function EY(){let r=MY(),e=PY(),t=FY();return n=>{let o=new ArrayBuffer(4*n.length),s=new Uint32Array(o);for(let a=0;a<n.length;a++){let i=n[a],p=r[t[i>>10]+(i&1023)]+e[i>>10];s[a]=p}return new Float32Array(o)}}var da=class{saveRouters;loadRouters;constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return da.instance==null&&(da.instance=new da),da.instance}static registerSaveRouter(e){da.getInstance().saveRouters.push(e)}static registerLoadRouter(e){da.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return da.getHandlers(e,"save")}static getLoadHandlers(e,t){return da.getHandlers(e,"load",t)}static getHandlers(e,t,n){let o=[];return(t==="load"?da.getInstance().loadRouters:da.getInstance().saveRouters).forEach(a=>{let i=a(e,n);i!==null&&o.push(i)}),o}},Ar=da;q(Ar,"instance");var n1=r=>Ar.registerSaveRouter(r),o1=r=>Ar.registerLoadRouter(r),s1=r=>Ar.getSaveHandlers(r),a1=(r,e)=>Ar.getLoadHandlers(r,e);var hA="tensorflowjs",gA=1,wl="models_store",Ep="model_info_store";function i1(){if(!L().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,e=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function bA(r){let e=r.result;e.createObjectStore(wl,{keyPath:"modelPath"}),e.createObjectStore(Ep,{keyPath:"modelPath"})}var uu=class{indexedDB;modelPath;constructor(e){if(this.indexedDB=i1(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,o)=>{let s=this.indexedDB.open(hA,gA);s.onupgradeneeded=()=>bA(s),s.onsuccess=()=>{let a=s.result;if(t==null){let i=a.transaction(wl,"readonly"),u=i.objectStore(wl).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return a.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(u.result.modelArtifacts)},u.onerror=l=>(a.close(),o(u.error)),i.oncomplete=()=>a.close()}else{let i=iu(t),p=a.transaction(Ep,"readwrite"),u=p.objectStore(Ep),l;try{l=u.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(c){return o(c)}let m;l.onsuccess=()=>{m=a.transaction(wl,"readwrite");let c=m.objectStore(wl),d;try{d=c.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i})}catch(f){return o(f)}d.onsuccess=()=>n({modelArtifactsInfo:i}),d.onerror=f=>{u=p.objectStore(Ep);let h=u.delete(this.modelPath);h.onsuccess=()=>(a.close(),o(d.error)),h.onerror=g=>(a.close(),o(d.error))}},l.onerror=c=>(a.close(),o(l.error)),p.oncomplete=()=>{m==null?a.close():m.oncomplete=()=>a.close()}}},s.onerror=a=>o(s.error)})}};q(uu,"URL_SCHEME","indexeddb://");var u1=r=>L().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(uu.URL_SCHEME)?LY(r.slice(uu.URL_SCHEME.length)):null;Ar.registerSaveRouter(u1);Ar.registerLoadRouter(u1);function LY(r){return new uu(r)}function BY(r){return r.startsWith(uu.URL_SCHEME)?r.slice(uu.URL_SCHEME.length):r}var Ub=class{indexedDB;constructor(){this.indexedDB=i1()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(hA,gA);n.onupgradeneeded=()=>bA(n),n.onsuccess=()=>{let o=n.result,s=o.transaction(Ep,"readonly"),i=s.objectStore(Ep).getAll();i.onsuccess=()=>{let p={};for(let u of i.result)p[u.modelPath]=u.modelArtifactsInfo;e(p)},i.onerror=p=>(o.close(),t(i.error)),s.oncomplete=()=>o.close()},n.onerror=o=>t(n.error)})}async removeModel(e){return e=BY(e),new Promise((t,n)=>{let o=this.indexedDB.open(hA,gA);o.onupgradeneeded=()=>bA(o),o.onsuccess=()=>{let s=o.result,a=s.transaction(Ep,"readwrite"),i=a.objectStore(Ep),p=i.get(e),u;p.onsuccess=()=>{if(p.result==null)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let l=i.delete(e),m=()=>{u=s.transaction(wl,"readwrite");let d=u.objectStore(wl).delete(e);d.onsuccess=()=>t(p.result.modelArtifactsInfo),d.onerror=f=>n(p.error)};l.onsuccess=m,l.onerror=c=>(m(),s.close(),n(p.error))}},p.onerror=l=>(s.close(),n(p.error)),a.oncomplete=()=>{u==null?s.close():u.oncomplete=()=>s.close()}},o.onerror=s=>n(o.error)})}};var Eu="/",hc="tensorflowjs_models",p1="info",$Y="model_topology",OY="weight_specs",zY="weight_data",GY="model_metadata";function l1(r){return{info:[hc,r,p1].join(Eu),topology:[hc,r,$Y].join(Eu),weightSpecs:[hc,r,OY].join(Eu),weightData:[hc,r,zY].join(Eu),modelMetadata:[hc,r,GY].join(Eu)}}function m1(r){for(let e of Object.values(r))window.localStorage.removeItem(e)}function WY(r){let e=r.split(Eu);if(e.length<3)throw new Error(`Invalid key format: ${r}`);return e.slice(1,e.length-1).join(Eu)}function UY(r){return r.startsWith(pu.URL_SCHEME)?r.slice(pu.URL_SCHEME.length):r}var pu=class{LS;modelPath;keys;constructor(e){if(!L().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=l1(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),o=iu(e);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,t1(e.weightData));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:o}}catch{throw m1(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=o;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let i=JSON.parse(s);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(t.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=r1(a),t}};q(pu,"URL_SCHEME","localstorage://");var c1=r=>L().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(pu.URL_SCHEME)?KY(r.slice(pu.URL_SCHEME.length)):null;Ar.registerSaveRouter(c1);Ar.registerLoadRouter(c1);function KY(r){return new pu(r)}var Kb=class{LS;constructor(){D(L().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),D(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=hc+Eu,n=Eu+p1;for(let o=0;o<this.LS.length;++o){let s=this.LS.key(o);if(s.startsWith(t)&&s.endsWith(n)){let a=WY(s);e[a]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=UY(e);let t=l1(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return m1(t),n}};var gc="://",Lu=class{managers;constructor(){this.managers={}}static getInstance(){return Lu.instance==null&&(Lu.instance=new Lu),Lu.instance}static registerManager(e,t){D(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(gc)&&(e=e.slice(0,e.indexOf(gc))),D(e.length>0,()=>"scheme must not be an empty string.");let n=Lu.getInstance();D(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=Lu.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Lu.getInstance().managers)}},fa=Lu;q(fa,"instance");function Vb(r){if(r.indexOf(gc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${fa.getSchemes().join(",")}`);return{scheme:r.split(gc)[0],path:r.split(gc)[1]}}async function d1(r,e,t=!1){D(r!==e,()=>`Old path and new path are the same: '${r}'`);let n=Ar.getLoadHandlers(r);D(n.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),D(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${r}.`);let o=n[0],s=Ar.getSaveHandlers(e);D(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),D(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${e}.`);let a=s[0],i=Vb(r).scheme,p=Vb(r).path,u=i===Vb(r).scheme,l=await o.load();t&&u&&await fa.getManager(i).removeModel(p);let m=await a.save(l);return t&&!u&&await fa.getManager(i).removeModel(p),m.modelArtifactsInfo}async function f1(){let r=fa.getSchemes(),e={};for(let t of r){let n=await fa.getManager(t).listModels();for(let o in n){let s=t+gc+o;e[s]=n[o]}}return e}async function h1(r){let e=Vb(r);return fa.getManager(e.scheme).removeModel(e.path)}async function g1(r,e){return d1(r,e,!1)}async function b1(r,e){return d1(r,e,!0)}var yA=class{textEncoder;messageName="setTimeoutCustom";functionRefs=[];handledMessageCount=0;hasEventListener=!1;fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!L().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",n=>{if(n.source===window&&n.data.name===this.messageName){n.stopPropagation();let o=this.functionRefs[n.data.index];o(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}};if(L().get("IS_BROWSER")){L().setPlatform("browser",new yA);try{fa.registerManager(pu.URL_SCHEME,new Kb)}catch{}try{fa.registerManager(uu.URL_SCHEME,new Ub)}catch{}}var VY={importFetch:()=>y1()},xA;var TA=class{textEncoder;util;constructor(){this.util=x1(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return L().global.fetch!=null?L().global.fetch(e,t):(xA==null&&(xA=VY.importFetch()),xA(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}};L().get("IS_NODE")&&!L().get("IS_BROWSER")&&L().setPlatform("node",new TA);function Ce(r,e="float32",t){return e=e||"float32",Vt(r),new ht(r,e,t)}function HY(r,e){let t=S(r,"x","cast");if(!qw(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:t},o={dtype:e};return N.runKernel(Hn,n,o)}var ne=w({cast_:HY});function qY(r){let t={x:S(r,"x","clone","string_or_numeric")};return N.runKernel(jn,t)}var bn=w({clone_:qY});function Hb(r,e=!1){console.log(r.toString(e))}uA();var jY={buffer:Ce,cast:ne,clone:bn,print:Hb};U_(jY);function nwe(){L().set("PROD",!0)}function owe(){L().set("DEBUG",!0)}function swe(){L().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function CA(r){L().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}K_(CA);function awe(){N.disposeVariables()}function jr(){return N}function _h(){return N.memory()}function iwe(r){return N.profile(r)}function z(r,e){return N.tidy(r,e)}function Me(r){Ah(r).forEach(t=>t.dispose())}function $t(r){return N.keep(r)}function uwe(r){return N.time(r)}function XY(r){return N.setBackend(r)}function pwe(){return N.ready()}function lwe(){return N.backendName}function mwe(r){N.removeBackend(r)}function cwe(r){return N.findBackend(r)}function dwe(r){return N.findBackendFactory(r)}function Lp(r,e,t=1){return N.registerBackend(r,e,t)}function T1(){return N.backend}function fwe(r,e){L().setPlatform(r,e)}function YY(r,e){let t=S(r,"a","add"),n=S(e,"b","add");[t,n]=Je(t,n);let o={a:t,b:n};return N.runKernel(Dn,o)}var Z=w({add_:YY});function ZY(r,e){let t=S(r,"a","floorDiv"),n=S(e,"b","floorDiv");[t,n]=Je(t,n);let o={a:t,b:n};return N.runKernel(Uo,o)}var qb=w({floorDiv_:ZY});function QY(r,e){let t=S(r,"a","div"),n=S(e,"b","div");if([t,n]=Je(t,n),t.dtype==="int32"&&n.dtype==="int32")return qb(t,n);let o={a:t,b:n},s={};return N.runKernel($o,o,s)}var fe=w({div_:QY});function JY(r,e){let t=S(r,"a","mul"),n=S(e,"b","mul");[t,n]=Je(t,n);let o={a:t,b:n};return N.runKernel(as,o)}var P=w({mul_:JY});function eZ(r){let e=S(r,"x","abs");if(e.dtype==="complex64"){let t={x:e};return N.runKernel(fp,t)}else{let t={x:e};return N.runKernel(Gs,t)}}var Wt=w({abs_:eZ});function tZ(r){let t={x:S(r,"x","acos")};return N.runKernel(xo,t)}var C1=w({acos_:tZ});function rZ(r){let t={x:S(r,"x","acosh")};return N.runKernel(To,t)}var I1=w({acosh_:rZ});function nZ(r){D(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),D(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let e=r.map((o,s)=>S(o,`tensors${s}`,"addN")),t=e[0];e.forEach(o=>{if(o.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(o=>{if(!Vn(o.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=e;return N.runKernel(Co,n)}var k1=w({addN_:nZ});function oZ(r,e=null,t=!1){let o={x:S(r,"x","all","bool")},s={axis:e,keepDims:t};return N.runKernel(za,o,s)}var jb=w({all_:oZ});function sZ(r,e=null,t=!1){let o={x:S(r,"x","any","bool")},s={axis:e,keepDims:t};return N.runKernel(Ga,o,s)}var Rh=w({any_:sZ});function aZ(r,e=0){let n={x:S(r,"x","argMax")},o={axis:e};return N.runKernel(Ws,n,o)}var Bp=w({argMax_:aZ});function iZ(r,e=0){let n={x:S(r,"x","argMin")},o={axis:e};return N.runKernel(Us,n,o)}var v1=w({argMin_:iZ});function uZ(r){let t={x:S(r,"x","asin")};return N.runKernel(Io,t)}var S1=w({asin_:uZ});function pZ(r){let t={x:S(r,"x","asinh")};return N.runKernel(ko,t)}var w1=w({asinh_:pZ});function lZ(r){let t={x:S(r,"x","atan")};return N.runKernel(vo,t)}var A1=w({atan_:lZ});function mZ(r,e){let t=S(r,"a","atan2"),n=S(e,"b","atan2");[t,n]=Je(t,n);let o={a:t,b:n};return N.runKernel(wo,o)}var N1=w({atan2_:mZ});function cZ(r){let t={x:S(r,"x","atanh")};return N.runKernel(So,t)}var D1=w({atanh_:cZ});function dZ(r,e,t,n,o="NHWC",s){let a=r[3],i=[...e,a],p=R1(o);return Al(r,i,t,s,n,null,null,p)}function kA(r,e,t,n,o,s,a="channelsLast"){let[i,p]=Mh(e),u;if(a==="channelsLast")u=[i,p,r[3],r[3]];else if(a==="channelsFirst")u=[i,p,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return Al(r,u,t,n,o,s,!1,a)}function fZ(r,e,t,n,o,s,a="NDHWC"){let[i,p,u]=IA(e),l,m;if(a==="NDHWC")m="channelsLast",l=[i,p,u,r[4],r[4]];else if(a==="NCDHW")m="channelsFirst",l=[i,p,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return _1(r,l,t,n,o,!1,m,s)}function Al(r,e,t,n,o,s,a=!1,i="channelsLast"){let[p,u,l,m]=[-1,-1,-1,-1];if(i==="channelsLast")[p,u,l,m]=r;else if(i==="channelsFirst")[p,m,u,l]=r;else throw new Error(`Unknown dataFormat ${i}`);let[c,d,,f]=e,[h,g]=Mh(t),[b,x]=Mh(n),T=bc(c,b),C=bc(d,x),{padInfo:v,outHeight:A,outWidth:_}=bZ(o,u,l,h,g,T,C,s,i),R=a?f*m:f,M;return i==="channelsFirst"?M=[p,R,A,_]:i==="channelsLast"&&(M=[p,A,_,R]),{batchSize:p,dataFormat:i,inHeight:u,inWidth:l,inChannels:m,outHeight:A,outWidth:_,outChannels:R,padInfo:v,strideHeight:h,strideWidth:g,filterHeight:c,filterWidth:d,effectiveFilterHeight:T,effectiveFilterWidth:C,dilationHeight:b,dilationWidth:x,inShape:r,outShape:M,filterShape:e}}function _1(r,e,t,n,o,s=!1,a="channelsLast",i){let[p,u,l,m,c]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[p,u,l,m,c]=r;else if(a==="channelsFirst")[p,c,u,l,m]=r;else throw new Error(`Unknown dataFormat ${a}`);let[d,f,h,,g]=e,[b,x,T]=IA(t),[C,v,A]=IA(n),_=bc(d,C),R=bc(f,v),M=bc(h,A),{padInfo:F,outDepth:O,outHeight:G,outWidth:W}=yZ(o,u,l,m,b,x,T,_,R,M,i),U=s?g*c:g,K;return a==="channelsFirst"?K=[p,U,O,G,W]:a==="channelsLast"&&(K=[p,O,G,W,U]),{batchSize:p,dataFormat:a,inDepth:u,inHeight:l,inWidth:m,inChannels:c,outDepth:O,outHeight:G,outWidth:W,outChannels:U,padInfo:F,strideDepth:b,strideHeight:x,strideWidth:T,filterDepth:d,filterHeight:f,filterWidth:h,effectiveFilterDepth:_,effectiveFilterHeight:R,effectiveFilterWidth:M,dilationDepth:C,dilationHeight:v,dilationWidth:A,inShape:r,outShape:K,filterShape:e}}function hZ(r,e,t,n,o){n==null&&(n=vA(r,e,t));let s=r[0],a=r[1],i=Ph((s-e+2*n)/t+1,o),p=Ph((a-e+2*n)/t+1,o);return[i,p]}function gZ(r,e,t,n,o,s){o==null&&(o=vA(r,e[0],n[0]));let a=[0,0,0,t];for(let i=0;i<3;i++)r[i]+2*o>=e[i]&&(a[i]=Ph((r[i]-e[i]+2*o)/n[i]+1,s));return a}function vA(r,e,t,n=1){let o=bc(e,n);return Math.floor((r[0]*(t-1)-t+o)/2)}function Mh(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function IA(r){return typeof r=="number"?[r,r,r]:r}function bc(r,e){return e<=1?r:r+(r-1)*(e-1)}function bZ(r,e,t,n,o,s,a,i,p){let u,l,m;if(typeof r=="number"){u={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let d=hZ([e,t],s,n,r,i);l=d[0],m=d[1]}else if(r==="same"){l=Math.ceil(e/n),m=Math.ceil(t/o);let c=Math.max(0,(l-1)*n+s-e),d=Math.max(0,(m-1)*o+a-t),f=Math.floor(c/2),h=c-f,g=Math.floor(d/2),b=d-g;u={top:f,bottom:h,left:g,right:b,type:"SAME"}}else if(r==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((e-s+1)/n),m=Math.ceil((t-a+1)/o);else if(typeof r=="object"){let c=p==="channelsLast"?r[1][0]:r[2][0],d=p==="channelsLast"?r[1][1]:r[2][1],f=p==="channelsLast"?r[2][0]:r[3][0],h=p==="channelsLast"?r[2][1]:r[3][1];u={top:c,bottom:d,left:f,right:h,type:c===0&&d===0&&f===0&&h===0?"VALID":"EXPLICIT"},l=Ph((e-s+c+d)/n+1,i),m=Ph((t-a+f+h)/o+1,i)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:u,outHeight:l,outWidth:m}}function yZ(r,e,t,n,o,s,a,i,p,u,l){let m,c,d,f;if(r==="valid"&&(r=0),typeof r=="number"){m={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=gZ([e,t,n,1],[i,p,u],1,[o,s,a],r,l);c=g[0],d=g[1],f=g[2]}else if(r==="same"){c=Math.ceil(e/o),d=Math.ceil(t/s),f=Math.ceil(n/a);let h=(c-1)*o+i-e,g=(d-1)*s+p-t,b=(f-1)*a+u-n,x=Math.floor(h/2),T=h-x,C=Math.floor(g/2),v=g-C,A=Math.floor(b/2),_=b-A;m={top:C,bottom:v,left:A,right:_,front:x,back:T,type:"SAME"}}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:m,outDepth:c,outHeight:d,outWidth:f}}function Ph(r,e){if(!e)return Math.trunc(r);switch(e){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${e}`)}}function Ms(r){let[e,t,n]=Mh(r);return e===1&&t===1&&n===1}function zr(r,e){return Ms(r)||Ms(e)}function lu(r){return Mh(r).every(e=>e>0)}function R1(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function Pt(r,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")D(Au(e),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(n=>{n.forEach(o=>{D(Au(o),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${o}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${e}`)}}function xZ(r,e){let n={x:S(r,"x","reshape","string_or_numeric")},o={shape:e};return N.runKernel(Js,n,o)}var E=w({reshape_:xZ});function TZ(r,e,t,n,o){let s=S(r,"x","avgPool","float32"),a=1;D(zr(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let i=s,p=!1;s.rank===3&&(p=!0,i=E(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Pt("avgPool",n,o);let u={x:i},l={filterSize:e,strides:t,pad:n,dimRoundingMode:o},m=N.runKernel(Ao,u,l);return m=ne(m,s.dtype),p?E(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var yc=w({avgPool_:TZ});function CZ(r,e,t,n,o,s="NDHWC"){let a=S(r,"x","avgPool3d","float32"),i=a,p=!1;a.rank===4&&(p=!0,i=E(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),D(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),D(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),Pt("avgPool3d",n,o);let u={x:i},l={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},m=N.runKernel(Ks,u,l);return m=ne(m,i.dtype),p?E(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Xb=w({avgPool3d_:CZ});function IZ(r,e=0){D(r.length>=1,()=>"Pass at least one tensor to concat");let t=Fu(r,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),t.length===1)return bn(t[0]);let n=t,o={axis:e};return N.runKernel(Hs,n,o)}var gt=w({concat_:IZ});function kZ(r,e,t=!1,n=!1){let o=S(r,"a","matMul"),s=S(e,"b","matMul");[o,s]=Je(o,s);let a={a:o,b:s},i={transposeA:t,transposeB:n};return N.runKernel(No,a,i)}var qe=w({matMul_:kZ});function vZ(r){let t={x:S(r,"x","sigmoid","float32")};return N.runKernel(ks,t)}var Fn=w({sigmoid_:vZ});function SZ(r,e,t){let n=S(r,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let o={x:n},s={begin:e,size:t};return N.runKernel(ta,o,s)}var Ue=w({slice_:SZ});function wZ(r){let t={x:S(r,"x","tanh","float32")};return N.runKernel(Rs,t)}var $p=w({tanh_:wZ});function AZ(r,e,t,n,o,s){let a=S(r,"forgetBias","basicLSTMCell"),i=S(e,"lstmKernel","basicLSTMCell"),p=S(t,"lstmBias","basicLSTMCell"),u=S(n,"data","basicLSTMCell"),l=S(o,"c","basicLSTMCell"),m=S(s,"h","basicLSTMCell"),c=gt([u,m],1),d=qe(c,i),f=Z(d,p),h=f.shape[0],g=f.shape[1]/4,b=[h,g],x=Ue(f,[0,0],b),T=Ue(f,[0,g],b),C=Ue(f,[0,g*2],b),v=Ue(f,[0,g*3],b),A=Z(P(Fn(x),$p(T)),P(l,Fn(Z(a,C)))),_=P($p(A),Fn(v));return[A,_]}var M1=w({basicLSTMCell_:AZ});function NZ(r,e,t){let n=S(r,"x","batchToSpaceND"),o=e.reduce((i,p)=>i*p);D(n.rank>=1+e.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${e.length}`),D(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),D(n.shape[0]%o===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${o}`);let s={x:n},a={blockShape:e,crops:t};return N.runKernel(Vs,s,a)}var xc=w({batchToSpaceND_:NZ});function P1(r){let e;return r.rank===0||r.rank===1?e=E(r,[1,1,1,r.size]):r.rank===2?e=E(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?e=E(r,[1,r.shape[0],r.shape[1],r.shape[2]]):e=r,e}function DZ(r,e,t,n,o,s){s==null&&(s=.001);let a=S(r,"x","batchNorm"),i=S(e,"mean","batchNorm"),p=S(t,"variance","batchNorm"),u;o!=null&&(u=S(o,"scale","batchNorm"));let l;n!=null&&(l=S(n,"offset","batchNorm")),D(i.rank===p.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let c={x:P1(a),scale:u,offset:l,mean:i,variance:p},d={varianceEpsilon:s},f=N.runKernel(Ko,c,d);return E(f,a.shape)}var Op=w({batchNorm_:DZ});function _Z(r,e,t,n,o,s){let a=S(r,"x","batchNorm"),i=S(e,"mean","batchNorm"),p=S(t,"variance","batchNorm"),u;o!=null&&(u=S(o,"scale","batchNorm"));let l;return n!=null&&(l=S(n,"offset","batchNorm")),D(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),D(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),D(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${p.rank}.`),u!=null&&D(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&D(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),Op(a,i,p,l,u,s)}var Yb=w({batchNorm2d_:_Z});function RZ(r,e,t,n,o,s){let a=S(r,"x","batchNorm"),i=S(e,"mean","batchNorm"),p=S(t,"variance","batchNorm"),u;o!=null&&(u=S(o,"scale","batchNorm"));let l;return n!=null&&(l=S(n,"offset","batchNorm")),D(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),D(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),D(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${p.rank}.`),u!=null&&D(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&D(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),Op(a,i,p,l,u,s)}var Zb=w({batchNorm3d_:RZ});function MZ(r,e,t,n,o,s){let a=S(r,"x","batchNorm"),i=S(e,"mean","batchNorm"),p=S(t,"variance","batchNorm"),u;o!=null&&(u=S(o,"scale","batchNorm"));let l;return n!=null&&(l=S(n,"offset","batchNorm")),D(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),D(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),D(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${p.rank}.`),u!=null&&D(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&D(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),Op(a,i,p,l,u,s)}var Qb=w({batchNorm4d_:MZ});function PZ(r,e,t){let n=S(r,"x","bincount"),o=S(e,"weights","bincount");D(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),D(t>=0,()=>`size must be non-negative, but got ${t}.`),D(o.size===n.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${o.shape}.`);let s={x:n,weights:o},a={size:t};return N.runKernel(Wa,s,a)}var Jb=w({bincount_:PZ});function FZ(r,e){let t=S(r,"s0","broadcastArgs","int32"),n=S(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);let o={s0:t,s1:n};return N.runKernel(Yi,o)}var F1=w({broadcastArgs_:FZ});function EZ(r,e){let t=S(r,"broadcastTo","x"),n=t.shape;if(Vt(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){let u=t.shape.slice();for(;u.length<e.length;)u.unshift(1);t=E(t,u)}let o=t.shape,s=Array.from(e);for(let u=e.length-1;u>=0;u--)if(o[u]===e[u])s[u]=1;else if(t.shape[u]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${e}].`);if(s.map((u,l)=>u>1?l:-1).filter(u=>u>=0).length===0)return bn(t);let i={x:t},p={reps:s};return N.runKernel(_n,i,p)}var zp=w({broadcastTo_:EZ});function LZ(r){let t={x:S(r,"x","ceil","float32")};return N.runKernel(Do,t)}var E1=w({ceil_:LZ});function ha(r,e,t){Vt(r),t=t||mp(e);let n={shape:r,value:e,dtype:t};return N.runKernel(tu,{},n)}function BZ(r,e,t){let n=S(r,"x","clipByValue");if(D(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return ha(n.shape,e,n.dtype);let o={x:n},s={clipValueMin:e,clipValueMax:t};return N.runKernel(qn,o,s)}var Xr=w({clipByValue_:BZ});function $Z(r){return gt(r,0)}var ey=w({concat1d_:$Z});function OZ(r,e){return gt(r,e)}var ty=w({concat2d_:OZ});function zZ(r,e){return gt(r,e)}var ry=w({concat3d_:zZ});function GZ(r,e){return gt(r,e)}var ny=w({concat4d_:GZ});function WZ(r,e,t,n,o="NHWC",s=[1,1],a){let i=S(r,"x","conv2d","float32"),p=S(e,"filter","conv2d","float32"),u=i,l=!1;i.rank===3&&(l=!0,u=E(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),D(p.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${p.rank}.`),Pt("conv2d",n,a);let m=o==="NHWC"?u.shape[3]:u.shape[1];D(m===p.shape[2],()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${p.shape[2]}.`),D(zr(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),D(lu(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),D(lu(t),()=>"Error in conv2D: Strides should be larger than 0.");let c={x:u,filter:p},d={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},f=N.runKernel(_o,c,d);return l?E(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Fs=w({conv2d_:WZ});function UZ(r,e,t,n,o="NWC",s=1,a){let i=S(r,"x","conv1d"),p=S(e,"filter","conv1d"),u=i,l=!1;i.rank===2&&(l=!0,u=E(i,[1,i.shape[0],i.shape[1]])),D(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),D(p.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${p.rank}.`),Pt("conv1d",n,a),D(u.shape[2]===p.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${p.shape[1]}.`),D(zr(t,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${s}'`),D(lu(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),D(lu(t),()=>"Error in conv1D: Stride should be larger than 0."),D(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);let m=E(p,[1,p.shape[0],p.shape[1],p.shape[2]]),c=E(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=Fs(c,m,[1,t],n,"NHWC",[1,s],a);return l?E(g,[g.shape[2],g.shape[3]]):E(g,[g.shape[0],g.shape[2],g.shape[3]])}var oy=w({conv1d_:UZ});function KZ(r,e,t,n,o,s="NHWC",a){D(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let i=r,p=e,u=!1;e.rank===3&&(u=!0,p=E(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,r[0],r[1],r[2]]),D(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),D(p.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${p.rank}`),D(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);let l=s==="NHWC"?i[3]:i[1],m=s==="NHWC"?p.shape[3]:p.shape[1];D(l===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[2]}.`),D(m===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${t.shape[3]}.`),Pt("conv2dDerInput",o,a);let c={dy:p,filter:t},d={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,inputShape:i},f=N.runKernel(Ro,c,d);return u?E(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Tc=w({conv2DBackpropInput_:KZ});function VZ(r,e,t,n,o,s){let a=S(r,"x","conv2dTranspose"),i=S(e,"filter","conv2dTranspose");return Tc(t,a,i,n,o,"NHWC",s)}var sy=w({conv2dTranspose_:VZ});function HZ(r,e,t,n,o="NDHWC",s=[1,1,1]){let a=S(r,"x","conv3d"),i=S(e,"filter","conv3d"),p=a,u=!1;a.rank===4&&(u=!0,p=E(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(p.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${p.rank}.`),D(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),D(p.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${p.shape[4]}) must match input depth for filter ${i.shape[3]}.`),D(zr(t,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),D(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`),D(lu(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),D(lu(t),()=>"Error in conv3D: Strides should be larger than 0.");let l={x:p,filter:i},m={strides:t,pad:n,dataFormat:o,dilations:s},c=N.runKernel(Mo,l,m);return u?E(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var ay=w({conv3d_:HZ});function qZ(r,e,t,n,o){D(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let s=r,a=e,i=!1;e.rank===4&&(i=!0,a=E(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let p=s[4],u=a.shape[4];D(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),D(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),D(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),D(p===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${p}) must match input depth for filter ${t.shape[3]}.`),D(u===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[4]}.`);let l={dy:a,filter:t},m={pad:o,strides:n,inputShape:s},c=N.runKernel(Ka,l,m);return i?E(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var iy=w({conv3DBackpropInput_:qZ});function jZ(r,e,t,n,o){let s=S(r,"x","conv3dTranspose"),a=S(e,"filter","conv3dTranspose");return iy(t,s,a,n,o)}var uy=w({conv3dTranspose_:jZ});function XZ(r){let t={x:S(r,"x","cos","float32")};return N.runKernel(Po,t)}var Cc=w({cos_:XZ});function YZ(r){let t={x:S(r,"x","cosh","float32")};return N.runKernel(Fo,t)}var py=w({cosh_:YZ});function ZZ(r,e=0,t=!1,n=!1){let s={x:S(r,"x","cumprod")},a={axis:e,exclusive:t,reverse:n};return N.runKernel(Va,s,a)}var Fh=w({cumprod_:ZZ});function QZ(r,e=0,t=!1,n=!1){let s={x:S(r,"x","cumsum")},a={axis:e,exclusive:t,reverse:n};return N.runKernel(Eo,s,a)}var ly=w({cumsum_:QZ});function JZ(r,e,t,n=!1){let o=S(r,"x","denseBincount"),s=S(e,"weights","denseBincount");D(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),D(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),D(t>=0,()=>`size must be non-negative, but got ${t}.`),D(s.size===o.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${s.shape}.`);let a={x:o,weights:s},i={size:t,binaryOutput:n};return N.runKernel(Zi,a,i)}var Eh=w({denseBincount_:JZ});function eQ(r,e,t="NHWC"){let n=S(r,"x","depthToSpace","float32"),o=t==="NHWC"?n.shape[1]:n.shape[2],s=t==="NHWC"?n.shape[2]:n.shape[3],a=t==="NHWC"?n.shape[3]:n.shape[1];D(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),D(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e}  for depthToSpace with input shape
    ${n.shape}`),D(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e} for depthToSpace with input shape
        ${n.shape}`),D(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${n.shape}`);let i={x:n},p={blockSize:e,dataFormat:t};return N.runKernel(qa,i,p)}var L1=w({depthToSpace_:eQ});function tQ(r,e,t,n,o="NHWC",s=[1,1],a){let i=S(r,"x","depthwiseConv2d","float32"),p=S(e,"filter","depthwiseConv2d","float32"),u=i,l=!1;i.rank===3&&(l=!0,u=E(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),D(p.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`);let m=o==="NHWC"?u.shape[3]:u.shape[1];D(m===p.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${m}) must match the inChannels dimension in filter ${p.shape[2]}.`),Pt("depthwiseConv2d",n,a);let c={x:u,filter:p},d={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},f=N.runKernel(Lo,c,d);return l?E(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Gp=w({depthwiseConv2d_:tQ});function rQ(r){let t={x:S(r,"x","diag")};return N.runKernel(Qi,t)}var B1=w({diag_:rQ});function nQ(r,e,t,n,o=[1,1],s="NHWC"){let a=S(r,"x","dilation2d"),i=S(e,"filter","dilation2d");D(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),D(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),D(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let p=a,u=!1;a.rank===3&&(p=E(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0),D(p.shape[3]===i.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${p.shape[3]} vs ${i.shape[2]}`);let l={x:p,filter:i},m={strides:t,pad:n,dilations:o},c=N.runKernel(Bo,l,m);return u?E(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var $1=w({dilation2d_:nQ});var Rr={};Ye(Rr,{assertAndGetBroadcastShape:()=>Ge,getBroadcastDims:()=>O1,getReductionAxes:()=>Dt});function O1(r,e){let t=r.length,n=[];for(let o=0;o<t;o++){let s=t-1-o,a=r[s]||1;(e[e.length-1-o]||1)>1&&a===1&&n.unshift(s)}return n}function Dt(r,e){let t=[];for(let n=0;n<e.length;n++){let o=r[r.length-n-1],s=e.length-n-1,a=e[s];(o==null||o===1&&a>1)&&t.unshift(s)}return t}function Ge(r,e){let t=Math.max(r.length,e.length),n=new Array(t);for(let o=0;o<t;o++){let s=r[r.length-o-1];s==null&&(s=1);let a=e[e.length-o-1];if(a==null&&(a=1),s===1)n[t-o-1]=a;else if(a===1)n[t-o-1]=s;else if(s!==a){let i=`Operands could not be broadcast together with shapes ${r} and ${e}.`;throw Error(i)}else n[t-o-1]=s}return n}function oQ(r,e){let t=S(r,"a","equal","string_or_numeric"),n=S(e,"b","equal","string_or_numeric");[t,n]=Je(t,n),Ge(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(Ya,o)}var sn=w({equal_:oQ});function sQ(r,e,t){let n=S(e,"a","where"),o=S(t,"b","where"),s=S(r,"condition","where","bool"),a=Ge(Ge(s.shape,n.shape),o.shape),i=zp(s,a),p=zp(n,a),u=zp(o,a),l={condition:i,t:p,e:u};return N.runKernel(ea,l)}var Et=w({where_:sQ});function aQ(r){let t={x:S(r,"x","zerosLike")};return N.runKernel(sa,t)}var _e=w({zerosLike_:aQ});function iQ(r,e){let t=S(r,"a","div"),n=S(e,"b","div");[t,n]=Je(t,n);let o=fe(t,n),s=_e(o),a=sn(n,s);return Et(a,s,o)}var z1=w({divNoNan_:iQ});function uQ(r,e){let t=S(r,"t1","dot"),n=S(e,"t2","dot");D((t.rank===1||t.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${n.rank}.`);let o=t.rank===1?t.size:t.shape[1],s=n.rank===1?n.size:n.shape[0];if(D(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),t.rank===1&&n.rank===1){let a=E(t,[1,-1]),i=E(n,[-1,1]),p=qe(a,i);return E(p,[])}else if(t.rank===1&&n.rank===2){let a=E(t,[1,-1]),i=E(n,[n.shape[0],n.shape[1]]),p=qe(a,i);return E(p,[p.size])}else if(t.rank===2&&n.rank===1){let a=E(n,[-1,1]),i=qe(t,a);return E(i,[i.size])}else{let a=E(n,[n.shape[0],n.shape[1]]);return qe(t,a)}}var G1=w({dot_:uQ});function pQ(r,...e){let t=e.map((o,s)=>S(o,`tensors${s}`,"einsum")),n={equation:r};return N.runKernel(yp,t,n)}var W1=w({einsum_:pQ});function lQ(r){let t={x:S(r,"x","elu","float32")};return N.runKernel(Oo,t)}var Wp=w({elu_:lQ});function mQ(r){let e=S(r,"x","erf");D(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=ne(e,"float32"));let t={x:e};return N.runKernel(Xa,t)}var U1=w({erf_:mQ});function SA(r,e){for(let t=0;t<r.length;++t)if(r[r.length-t-1]!==e-1-t)return!1;return!0}function K1(r,e,t){let n=r.length+e.length,o=[],s=0,a=0;for(let i=0;i<n;i++)t.indexOf(i)===-1?o.push(r[s++]):o.push(e[a++]);return o}function wA(r,e){let t=[],n=r.length;for(let s=0;s<n;s++)e.indexOf(s)===-1&&t.push(r[s]);let o=e.map(s=>r[s]);return[t,o]}function ga(r,e){let t=e.map(n=>1);return K1(r,t,e)}function cQ(r,e,t){D(SA(e,t),()=>`${r} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function AA(r,e){if(SA(r,e))return null;let t=[];for(let n=0;n<e;++n)r.indexOf(n)===-1&&t.push(n);return r.forEach(n=>t.push(n)),t}function Lh(r){return r.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function dQ(r,e){let t=[];for(let n=e-r;n<e;++n)t.push(n);return t}function fQ(r,e=null,t=!1){let o={x:S(r,"x","max")},s={reductionIndices:e,keepDims:t};return N.runKernel(Jo,o,s)}var Yr=w({max_:fQ});function hQ(r,e=null,t=!1){let o={x:S(r,"x","min")},s={axis:e,keepDims:t};return N.runKernel(ns,o,s)}var Nl=w({min_:hQ});function gQ(r,e){let t=S(r,"base","pow"),n=S(e,"exp","pow");[t,n]=Je(t,n);let o={a:t,b:n};return N.runKernel(ps,o)}var Qn=w({pow_:gQ});function ge(r,e){if((xr(r)&&e!=="string"||Array.isArray(r))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&xr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return gn(r,[],[],e)}function bQ(r){let t={x:S(r,"x","sqrt","float32")};return N.runKernel(Ss,t)}var Ot=w({sqrt_:bQ});function yQ(r){let e=S(r,"x","square"),t={};return N.runKernel("Square",{x:e},t)}var Xe=w({square_:yQ});function xQ(r,e=null,t=!1){let n=S(r,"x","sum");n.dtype==="bool"&&(n=ne(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return N.runKernel(ws,o,s)}var be=w({sum_:xQ});function TQ(r,e="euclidean",t=null,n=!1){r=S(r,"x","norm");let o=V1(r,e,t),s=o.shape;if(n){let a=yr(t,r.shape);s=ga(o.shape,a)}return E(o,s)}function V1(r,e,t=null){if(r.rank===0)return Wt(r);if(r.rank!==1&&t===null)return V1(E(r,[-1]),e,t);if(r.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return be(Wt(r),t);if(e===1/0)return Yr(Wt(r),t);if(e===-1/0)return Nl(Wt(r),t);if(e==="euclidean"||e===2)return Ot(be(Qn(Wt(r),ge(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return Yr(be(Wt(r),t[0]),t[1]-1);if(e===1/0)return Yr(be(Wt(r),t[1]),t[0]);if(e===-1/0)return Nl(be(Wt(r),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Ot(be(Xe(r),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}var Dl=w({norm_:TQ});function CQ(r,e=null,t=!1){return Dl(r,"euclidean",e,t)}var H1=w({euclideanNorm_:CQ});function IQ(r){let t={x:S(r,"x","exp")};return N.runKernel(zo,t)}var Tr=w({exp_:IQ});function kQ(r,e=0){let t=S(r,"x","expandDims","string_or_numeric");D(e<=t.rank,()=>"Axis must be <= rank of the tensor");let n={input:t},o={dim:e};return N.runKernel(qs,n,o)}var Cr=w({expandDims_:kQ});function vQ(r){let t={x:S(r,"x","expm1")};return N.runKernel(Go,t)}var q1=w({expm1_:vQ});function SQ(r,e){let t=S(r,"x","tile","string_or_numeric");D(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);let n={x:t},o={reps:e};return N.runKernel(_n,n,o)}var an=w({tile_:SQ});function wQ(r,e,t,n="float32"){e==null&&(e=r);let o=Ce([r,e],n),s=r<=e?r:e;for(let i=0;i<s;++i)o.set(1,i,i);let a=E(o.toTensor(),[r,e]);if(t==null)return a;if(t.length===1)return an(Cr(a,0),[t[0],1,1]);if(t.length===2)return an(Cr(Cr(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return an(Cr(Cr(Cr(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}var _l=w({eye_:wQ});function AQ(r){let t={x:S(r,"x","floor","float32")};return N.runKernel(Wo,t)}var Up=w({floor_:AQ});function NQ(r,e,t=0,n=0){let o=S(r,"x","gather"),s=S(e,"indices","gather","int32"),a={x:o,indices:s},i={axis:t,batchDims:n};return N.runKernel(js,a,i)}var Kp=w({gather_:NQ});function DQ(r,e){let t=S(r,"a","greater","string_or_numeric"),n=S(e,"b","greater","string_or_numeric");[t,n]=Je(t,n),Ge(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(Ja,o)}var Jt=w({greater_:DQ});function _Q(r,e){let t=S(r,"a","greaterEqual","string_or_numeric"),n=S(e,"b","greaterEqual","string_or_numeric");[t,n]=Je(t,n),Ge(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(Vo,o)}var Jn=w({greaterEqual_:_Q});function RQ(r){let t={input:S(r,"input","imag")};return N.runKernel(Cp,t)}var Vp=w({imag_:RQ});function MQ(r){let t={x:S(r,"x","isFinite")};return N.runKernel(Ho,t)}var j1=w({isFinite_:MQ});function PQ(r){let t={x:S(r,"x","isInf")};return N.runKernel(qo,t)}var X1=w({isInf_:PQ});function FQ(r){let t={x:S(r,"x","isNaN")};return N.runKernel(jo,t)}var Y1=w({isNaN_:FQ});function EQ(r,e=.2){let n={x:S(r,"x","leakyRelu")},o={alpha:e};return N.runKernel(Xo,n,o)}var Ic=w({leakyRelu_:EQ});function LQ(r,e){let t=S(r,"a","less","string_or_numeric"),n=S(e,"b","less","string_or_numeric");[t,n]=Je(t,n),Ge(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(ei,o)}var Rl=w({less_:LQ});function BQ(r,e){let t=S(r,"a","lessEqual","string_or_numeric"),n=S(e,"b","lessEqual","string_or_numeric");[t,n]=Je(t,n),Ge(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(ti,o)}var ba=w({lessEqual_:BQ});function Z1(r,e,t){if(t<=0)throw new Error("The number of values should be positive.");let n={start:r,stop:e,num:t};return N.runKernel(ri,{},n)}function $Q(r,e=5,t=1,n=1,o=.5){let s=S(r,"x","localResponseNormalization");D(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),D(Au(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=s,i=!1;s.rank===3&&(i=!0,a=E(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let p={x:a},u={depthRadius:e,bias:t,alpha:n,beta:o},l=N.runKernel(Qo,p,u);return i?E(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var Q1=w({localResponseNormalization_:$Q});function OQ(r){let t={x:S(r,"x","log","float32")};return N.runKernel(Yo,t)}var Zr=w({log_:OQ});function zQ(r){let t={x:S(r,"x","log1p")};return N.runKernel(Zo,t)}var kc=w({log1p_:zQ});function GQ(r){return D(qi(r),()=>"The f passed in grad(f) must be a function"),(e,t)=>{let n=S(e,"x","tf.grad","string_or_numeric"),o=t!=null?S(t,"dy","tf.grad"):null;return N.tidy(()=>{let{value:s,grads:a}=N.gradients(()=>r(n),[n],o);return o!=null&&Gt(s.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),cy(a),a[0]})}}function WQ(r){return D(qi(r),()=>"The f passed in grads(f) must be a function"),(e,t)=>{D(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=Fu(e,"args","tf.grads","string_or_numeric"),o=t!=null?S(t,"dy","tf.grads"):null;return N.tidy(()=>{let{value:s,grads:a}=N.gradients(()=>r(...n),n,o);return o!=null&&Gt(s.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),cy(a),a})}}function UQ(r){return D(qi(r),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{D(e instanceof He,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),D(t==null||t instanceof He,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:o}=N.gradients(()=>r(e),[e],t);return cy(n),{grad:n[0],value:o}}}function KQ(r){return D(qi(r),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{D(Array.isArray(e)&&e.every(o=>o instanceof He),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),D(t==null||t instanceof He,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=N.gradients(()=>r(...e),e,t);return t!=null&&Gt(n.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),cy(n.grads),n}}function my(r,e){D(qi(r),()=>"The f passed in variableGrads(f) must be a function"),D(e==null||Array.isArray(e)&&e.every(u=>u instanceof Mu),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let t=e!=null;if(!t){e=[];for(let u in N.registeredVariables)e.push(N.registeredVariables[u])}let n=t?e.filter(u=>!u.trainable):null,o=e.length;e=e.filter(u=>u.trainable),D(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let s=!0,{value:a,grads:i}=N.gradients(r,e,null,s);D(i.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),D(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);let p={};return e.forEach((u,l)=>{i[l]!=null&&(p[u.name]=i[l])}),n?.forEach(u=>p[u.name]=null),{value:a,grads:p}}function yn(r){return N.customGrad(r)}function cy(r){if(r.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function VQ(r){let t={x:S(r,"x","neg")};return N.runKernel(Ys,t)}var et=w({neg_:VQ});function HQ(r){let t={x:S(r,"x","softplus")};return N.runKernel(vs,t)}var Bu=w({softplus_:HQ});function qQ(r){let e=S(r,"x","logSigmoid");return yn(n=>({value:et(Bu(et(n))),gradFunc:a=>P(a,Fn(et(n)))}))(e)}var J1=w({logSigmoid_:qQ});function jQ(r,e){let t=S(r,"a","sub"),n=S(e,"b","sub");[t,n]=Je(t,n);let o={a:t,b:n};return N.runKernel(Ds,o)}var ce=w({sub_:jQ});function XQ(r,e=-1){let t=S(r,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return yn((o,s)=>{let i=Yr(o,e,!0),p=ce(o,i),u=ce(ne(p,"float32"),Zr(be(Tr(p),e,!0)));return s([u]),{value:u,gradFunc:(m,c)=>{let[d]=c,f=!0,h=Tr(d);return ce(m,P(be(m,e,f),h))}}})(t)}var dy=w({logSoftmax_:XQ});function YQ(r,e=null,t=!1){let n=S(r,"x","logSumExp"),o=yr(e,n.shape),s=Yr(n,o,!0),a=ce(n,s),i=Tr(a),p=be(i,o),u=Zr(p),l=Z(E(s,u.shape),u);if(t){let m=ga(l.shape,o);return E(l,m)}return l}var fy=w({logSumExp_:YQ});function ZQ(r,e){let t=S(r,"a","logicalAnd","bool"),n=S(e,"b","logicalAnd","bool");Ge(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(ni,o)}var un=w({logicalAnd_:ZQ});function QQ(r){let t={x:S(r,"x","logicalNot","bool")};return N.runKernel(oi,t)}var vc=w({logicalNot_:QQ});function JQ(r,e){let t=S(r,"a","logicalOr","bool"),n=S(e,"b","logicalOr","bool");Ge(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(si,o)}var hy=w({logicalOr_:JQ});function e7(r,e){let t=S(r,"a","logicalXor","bool"),n=S(e,"b","logicalXor","bool");return Ge(t.shape,n.shape),un(hy(r,e),vc(un(r,e)))}var eR=w({logicalXor_:e7});var gy=2147483648;function t7(r,e,t="left"){let n=S(r,"sortedSequence","searchSorted"),o=S(e,"values","searchSorted"),s=n.shape[n.shape.length-1],a=o.shape[o.shape.length-1],i=E(n,[-1,s]),p=E(o,[-1,a]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==p.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(st(p.shape)>=gy)throw new Error(`values tensor size must less than ${gy}`);if(i.shape[1]>=gy)throw new Error(`trailing dim_size must less than ${gy} for int32 output type, was ${i.shape[1]}`);let u={sortedSequence:i,values:p},l={side:t};return N.runKernel(hi,u,l)}var Bh=w({searchSorted_:t7});function tR(r,e){return Bh(r,e,"left")}function r7(r,e,t,n,o){let s=S(r,"x","maxPool"),a=1,i=s,p=!1;s.rank===3&&(p=!0,i=E(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),D(zr(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),Pt("maxPool",n,o);let u={x:i},l={filterSize:e,strides:t,pad:n,dimRoundingMode:o},m=N.runKernel(ts,u,l);return p?E(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Sc=w({maxPool_:r7});function n7(r,e=[1,1,1],t,n,o,s="NDHWC"){let a=S(r,"x","maxPool3d"),i=a,p=!1;a.rank===4&&(p=!0,i=E(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),D(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Pt("maxPool3d",n,o);let u={x:i},l={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},m=N.runKernel(Xs,u,l);return p?E(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var by=w({maxPool3d_:n7});function o7(r,e,t,n,o=!1){let a={x:S(r,"x","maxPoolWithArgmax")},i={filterSize:e,strides:t,pad:n,includeBatchInIndex:o},p=N.runKernel(kp,a,i);return{result:p[0],indexes:p[1]}}var rR=w({maxPoolWithArgmax_:o7});function s7(r,e){let t=S(r,"a","maximum"),n=S(e,"b","maximum");[t,n]=Je(t,n),t.dtype==="bool"&&(t=ne(t,"int32"),n=ne(n,"int32")),Ge(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(es,o)}var Es=w({maximum_:s7});function a7(r,e=null,t=!1){let o={x:S(r,"x","mean")},s={axis:e,keepDims:t};return N.runKernel(rs,o,s)}var zt=w({mean_:a7});function kt(r,e="float32"){if(Vt(r),e==="complex64"){let n=kt(r,"float32"),o=kt(r,"float32");return Pn(n,o)}let t=nc(st(r),e);return N.makeTensor(t,r,e)}function Ir(r,e="float32"){if(Vt(r),e==="complex64"){let n=Ir(r,"float32"),o=kt(r,"float32");return Pn(n,o)}let t=yh(st(r),e);return N.makeTensor(t,r,e)}function nR(r,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(r===void 0)return[];let n=S(r,"x","meshgrid",r instanceof He?r.dtype:"float32");if(e===void 0)return[n];let o=S(e,"y","meshgrid",e instanceof He?e.dtype:"float32"),s=st(n.shape),a=st(o.shape);return t==="xy"?(n=E(n,[1,-1]),o=E(o,[-1,1]),[qe(Ir([a,1],n.dtype),n),qe(o,Ir([1,s],o.dtype))]):(n=E(n,[-1,1]),o=E(o,[1,-1]),[qe(n,Ir([1,a],n.dtype)),qe(Ir([s,1],o.dtype),o)])}function i7(r,e){let t=S(r,"a","minimum"),n=S(e,"b","minimum");[t,n]=Je(t,n),t.dtype==="bool"&&(t=ne(t,"int32"),n=ne(n,"int32")),Ge(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(os,o)}var Si=w({minimum_:i7});function u7(r,e,t){D(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);let n=S(r,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");D(e.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${e.length}.`);let o=t==="reflect"?1:0;for(let i=0;i<n.rank;i++)D(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),D(e[i][0]>=0&&e[i][0]<=n.shape[i]-o&&e[i][1]>=0&&e[i][1]<=n.shape[i]-o,()=>`Padding in dimension ${i} cannot be greater than or equal to ${n.shape[i]-o} or less than 0 for input of shape ${n.shape}`);let s={paddings:e,mode:t},a={x:n};return N.runKernel(ss,a,s)}var oR=w({mirrorPad_:u7});function p7(r,e){let t=S(r,"a","mod"),n=S(e,"b","mod");[t,n]=Je(t,n);let o={a:t,b:n};return N.runKernel(ii,o)}var sR=w({mod_:p7});function l7(r,e=null,t=!1){r=S(r,"x","moments");let n=yr(e,r.shape),o=zt(r,n,t),s=o.shape;t||(s=ga(o.shape,n));let a=Xe(ce(ne(r,"float32"),E(o,s))),i=zt(a,n,t);return{mean:o,variance:i}}var Ml=w({moments_:l7});function m7(r,e,t,n){let o=S(e,"data","multiRNNCell"),s=Fu(t,"c","multiRNNCell"),a=Fu(n,"h","multiRNNCell"),i=o,p=[];for(let m=0;m<r.length;m++){let c=r[m](i,s[m],a[m]);p.push(c[0]),p.push(c[1]),i=c[1]}let u=[],l=[];for(let m=0;m<p.length;m+=2)u.push(p[m]),l.push(p[m+1]);return[u,l]}var aR=w({multiRNNCell_:m7});function c7(r,e,t,n=!1){let o=S(r,"logits","multinomial"),s=o.size,a=o.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();let p={logits:a===1?E(o,[1,-1]):o},u={numSamples:e,seed:t,normalized:n},l=N.runKernel(ui,p,u);return a===1?E(l,[l.size]):l}var iR=w({multinomial_:c7});function d7(r,e){let t=S(r,"a","notEqual","string_or_numeric"),n=S(e,"b","notEqual","string_or_numeric");[t,n]=Je(t,n),Ge(t.shape,n.shape);let o={a:t,b:n};return N.runKernel(pi,o)}var $u=w({notEqual_:d7});function f7(r,e,t=1,n=0,o="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);let a={indices:S(r,"indices","oneHot","int32")},i={dtype:o,depth:e,onValue:t,offValue:n};return N.runKernel(is,a,i)}var Hp=w({oneHot_:f7});function h7(r){let t={x:S(r,"x","onesLike")};return N.runKernel(Zs,t)}var Gr=w({onesLike_:h7});function g7(r,e){let t=S(r,"v1","outerProduct"),n=S(e,"v2","outerProduct");D(t.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${n.rank}.`);let o=E(t,[-1,1]),s=E(n,[1,-1]);return qe(o,s)}var uR=w({outerProduct_:g7});function b7(r,e,t=0){let n=S(r,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let o={paddings:e,constantValue:t},s={x:n};return N.runKernel(us,s,o)}var eo=w({pad_:b7});function y7(r,e,t=0){return D(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),eo(r,[e],t)}var pR=w({pad1d_:y7});function x7(r,e,t=0){return D(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),eo(r,e,t)}var lR=w({pad2d_:x7});function T7(r,e,t=0){return D(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),eo(r,e,t)}var mR=w({pad3d_:T7});function C7(r,e,t=0){return D(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),eo(r,e,t)}var cR=w({pad4d_:C7});function I7(r,e,t){let n=S(r,"x","spaceToBatchND");D(n.rank>=1+e.length,()=>`input rank ${n.rank} should be > than [blockShape] ${e.length}`),D(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),D(n.shape.reduce((a,i,p)=>p>0&&p<=e.length?a&&(i+t[p-1][0]+t[p-1][1])%e[p-1]===0:a,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);let o={x:n},s={blockShape:e,paddings:t};return N.runKernel(ra,o,s)}var wc=w({spaceToBatchND_:I7});function k7(r,e,t,n,o,s,a){o==null&&(o=[1,1]),s==null&&(s=1),n===0&&(n="valid");let i=S(r,"x","maxPool"),p=i,u=!1;i.rank===3&&(u=!0,p=E(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(zr(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);let l=kA(p.shape,e,s,o,n),m=[l.dilationHeight,l.dilationWidth],c;n==="same"?c=S7([l.filterHeight,l.filterWidth],m):c=[[0,0],[0,0]];let d=m[0]===1&&m[1]===1,[f,h]=v7([l.inHeight,l.inWidth],m,c),g=d?n:"valid",b=d?p:wc(p,m,f),T=(t==="avg"?()=>yc(b,e,s,g,a):()=>Sc(b,e,s,g,a))(),C=d?T:xc(T,m,h);return u?E(C,[C.shape[1],C.shape[2],C.shape[3]]):C}function v7(r,e,t){let n=t.map(l=>l[0]),o=t.map(l=>l[1]),s=r.concat(n,o),a=e.map((l,m)=>(l-s[m]%l)%l),i=o.map((l,m)=>l+a[m]),p=e.map((l,m)=>[n[m],i[m]]),u=e.map((l,m)=>[0,a[m]]);return[p,u]}function S7(r,e){let n=r.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),o=n.map(a=>Math.floor(a/2)),s=n.map((a,i)=>a-o[i]);return n.map((a,i)=>[o[i],s[i]])}var dR=w({pool_:k7});function w7(r,e){let t=S(r,"x","prelu"),n=S(e,"alpha","prelu"),o={x:t,alpha:n};return N.runKernel(ls,o)}var Ac=w({prelu_:w7});function A7(r,e=null,t=!1){let n=S(r,"x","prod");n.dtype==="bool"&&(n=ne(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return N.runKernel(ms,o,s)}var fR=w({prod_:A7});function N7(r,e,t,n){let o=r.map((l,m)=>S(l,`tensors${m}`,"raggedGather","int32")),s=S(e,"paramsDenseValues","raggedGather"),a=S(t,"indices","raggedGather","int32"),i={paramsNestedSplits:o,paramsDenseValues:s,indices:a},p={outputRaggedRank:n},u=N.runKernel(oc,i,p);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}var hR=w({raggedGather_:N7});function D7(r,e,t){let n=S(r,"starts","raggedRange"),o=S(e,"limits","raggedRange",n.dtype),s=S(t,"deltas","raggedRange",n.dtype),a={starts:n,limits:o,deltas:s},i=N.runKernel(sc,a);return{rtNestedSplits:i[0],rtDenseValues:i[1]}}var gR=w({raggedRange_:D7});function _7(r,e,t,n,o){let s=S(r,"shape","raggedTensorToTensor","int32"),a=S(e,"values","raggedTensorToTensor"),i=S(t,"defaultValue","raggedTensorToTensor",a.dtype),p=n.map((m,c)=>S(m,`tensors${c}`,"raggedTensorToTensor","int32")),u={shape:s,values:a,defaultValue:i,rowPartitionTensors:p},l={rowPartitionTypes:o};return N.runKernel(ac,u,l)}var bR=w({raggedTensorToTensor_:_7});function R7(r,e,t){Vt(r);let n=st(r),o=null;if(t==null||t==="float32")o=new Float32Array(n);else if(t==="int32")o=new Int32Array(n);else if(t==="bool")o=new Uint8Array(n);else throw new Error(`Unknown data type ${t}`);for(let s=0;s<n;s++)o[s]=e();return N.makeTensor(o,r,t)}var yR=w({rand_:R7});var Iy=hl($h());var $R={};Ye($R,{TEST_EPSILON_FLOAT16:()=>ER,createVideoElement:()=>K7,encodeStrings:()=>BR,expectArrayBuffersEqual:()=>U7,expectArraysClose:()=>O7,expectArraysEqual:()=>G7,expectNumbersClose:()=>LR,expectPromiseToFail:()=>z7,expectValuesInRange:()=>W7,play:()=>V7,testEpsilon:()=>xy});var $7=.001,ER=.1;function O7(r,e,t){return t==null&&(t=xy()),EA(r,e,(n,o)=>LA(n,o,t))}function xy(){return N.backend.floatPrecision()===32?$7:ER}function EA(r,e,t){let n=!0;if((xr(r)||xr(e))&&(n=!1),xr(r)&&xr(e)&&(n=!0),n){let a=r.constructor.name,i=e.constructor.name;if(a!==i)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${i}`)}if(Array.isArray(r)&&Array.isArray(e)){let a=qr(r),i=qr(e);if(!Vn(a,i))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${i}]`)}let o=xr(r)?r:ki(r),s=xr(e)?e:ki(e);if(o.length!==s.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${s.length}.
Actual:   ${o}.
Expected: ${s}.`);for(let a=0;a<s.length;++a){let i=o[a],p=s[a];if(!t(i,p))throw new Error(`Arrays differ: actual[${a}] = ${i}, expected[${a}] = ${p}.
Actual:   ${o}.
Expected: ${s}.`)}typeof expect<"u"&&expect().nothing()}function z7(r,e){r().then(()=>e.fail(),()=>e()),typeof expect<"u"&&expect().nothing()}function G7(r,e){let t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return Oa(r)||Oa(r[0])||Oa(e)||Oa(e[0])?EA(r,t,(n,o)=>n==o):EA(r,e,(n,o)=>LA(n,o,0))}function LR(r,e,t){if(t==null&&(t=xy()),!LA(r,e,t))throw new Error(`Numbers differ: actual === ${r}, expected === ${e}`);typeof expect<"u"&&expect().nothing()}function LA(r,e,t){return!isFinite(r)&&!isFinite(e)?!0:!(isNaN(r)||isNaN(e)||Math.abs(r-e)>t)}function W7(r,e,t){for(let n=0;n<r.length;n++)if(r[n]<e||r[n]>t)throw new Error(`Value out of range:${r[n]} low: ${e}, high: ${t}`)}function U7(r,e){let t=new Float32Array(r),n=new Float32Array(e);if(t.length!==n.length)throw new Error(`Expected ArrayBuffer to be of length ${n.length}, but it was ${t.length}`);for(let o=0;o<n.length;o++)if(t[o]!==n[o])throw new Error(`Expected ArrayBuffer value at ${o} to be ${n[o]} but got ${t[o]} instead`)}function BR(r){for(let e=0;e<r.length;e++){let t=r[e];Array.isArray(t)?BR(t):r[e]=Pp(t)}return r}function K7(r){let e=document.createElement("video");return"playsInline"in e&&(e.playsInline=!0),e.muted=!0,e.loop=!0,e.style.position="fixed",e.style.left="0px",e.style.top="0px",e.preload="auto",e.appendChild(r),new Promise(t=>{e.addEventListener("loadeddata",n=>t(e)),e.load()})}async function V7(r){await r.play(),"requestVideoFrameCallback"in r&&await new Promise(e=>{r.requestVideoFrameCallback(e)})}var Fl=class{mean;stdDev;nextVal;dtype;truncated;upper;lower;random;constructor(e,t,n,o,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=s||Math.random();this.random=Iy.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let o=this.nextVal;return this.nextVal=NaN,o}let e,t,n=!1;for(;!n;){let o,s,a;do o=2*this.random()-1,s=2*this.random()-1,a=o*o+s*s;while(a>=1||a===0);let i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*o*i,t=this.mean+this.stdDev*s*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},Ty=class{alpha;beta;d;c;dtype;randu;randn;constructor(e,t,n,o){this.alpha=e,this.beta=1/t,this.dtype=n;let s=o||Math.random();this.randu=Iy.alea(s.toString()),this.randn=new Fl(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,o,s,a;for(;;){do o=this.randn.nextValue(),a=1+this.c*o;while(a<=0);if(a*=a*a,e=o*o,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},Cy=class{min;range;random;dtype;constructor(e=0,t=1,n,o){if(this.min=e,this.range=t-e,this.dtype=n,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Iy.alea(o)}canReturnFloat=()=>this.dtype==null||this.dtype==="float32";convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function H7(r,e,t=1,n="float32",o){if(Vt(r),t==null&&(t=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new Ty(e,t,n,o),a=Ce(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var OR=w({randomGamma_:H7});function q7(r,e=0,t=1,n,o){if(Vt(r),n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new Fl(e,t,n,!1,o),a=Ce(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var El=w({randomNormal_:q7});function j7(r,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return El(r,0,1,e,t)}var zR=w({randomStandardNormal_:j7});function X7(r,e=0,t=1,n="float32",o){Vt(r);let s=Ce(r,n),a=new Cy(e,t,null,o);for(let i=0;i<s.values.length;i++)s.values[i]=a.nextValue();return s.toTensor()}var ya=w({randomUniform_:X7});function mu(r,e,t=1,n="float32"){if(t===0)throw new Error("Cannot have a step of zero");let o={start:r,stop:e,step:t,dtype:n};return N.runKernel(nu,{},o)}function Y7(r){let t={input:S(r,"input","real")};return N.runKernel(vp,t)}var Ou=w({real_:Y7});function Z7(r){let t={x:S(r,"x","reciprocal")};return N.runKernel(cs,t)}var GR=w({reciprocal_:Z7});function Q7(r){let t={x:S(r,"x","relu")};return N.runKernel(ds,t)}var pn=w({relu_:Q7});function J7(r){let t={x:S(r,"x","relu6")};return N.runKernel(gs,t)}var ky=w({relu6_:J7});function eJ(r,e){let n={x:S(r,"x","reverse")},o={dims:e};return N.runKernel(bs,n,o)}var Mr=w({reverse_:eJ});function tJ(r){let e=S(r,"x","reverse");return D(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Mr(e,0)}var WR=w({reverse1d_:tJ});function rJ(r,e){let t=S(r,"x","reverse");return D(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),Mr(t,e)}var UR=w({reverse2d_:rJ});function nJ(r,e){let t=S(r,"x","reverse");return D(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),Mr(t,e)}var KR=w({reverse3d_:nJ});function oJ(r,e){let t=S(r,"x","reverse");return D(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),Mr(t,e)}var VR=w({reverse4d_:oJ});function sJ(r){let t={x:S(r,"x","round")};return N.runKernel(ys,t)}var vy=w({round_:sJ});function aJ(r){let t={x:S(r,"x","rsqrt","float32")};return N.runKernel(xs,t)}var Sy=w({rsqrt_:aJ});function iJ(r){let t={x:S(r,"x","selu")};return N.runKernel(Ts,t)}var wy=w({selu_:iJ});function uJ(r,e,t,n,o,s=[1,1],a="NHWC"){let i=S(r,"x","separableConv2d"),p=S(e,"depthwiseFilter","separableConv2d"),u=S(t,"pointwiseFilter","separableConv2d"),l=i,m=!1;if(i.rank===3&&(m=!0,l=E(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");D(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),D(p.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${p.rank}.`),D(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${p.rank}.`),D(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),D(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let c=p.shape[2],d=p.shape[3];D(u.shape[2]===c*d,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${c*d}, but got ${u.shape[2]}.`);let f=Gp(l,p,n,o,a,s),g=Fs(f,u,1,"valid",a);return m?E(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var Ay=w({separableConv2d_:uJ});async function pJ(r,e){let t=S(r,"x","setdiff1d"),n=S(e,"y","setdiff1d");D(t.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${n.dtype}).`),D(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),D(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let o=await t.data(),s=await n.data(),a=new Set(s),i=0;for(let l=0;l<o.length;l++)a.has(o[l])||i++;let p=new ht([i],t.dtype),u=new ht([i],"int32");for(let l=0,m=0;l<o.length;l++)a.has(o[l])||(p.values[m]=o[l],u.values[m]=l,m++);return[p.toTensor(),u.toTensor()]}var HR=pJ;function lJ(r){let t={x:S(r,"x","sign")};return N.runKernel(Is,t)}var qR=w({sign_:lJ});function mJ(r){let t={x:S(r,"x","sin","float32")};return N.runKernel(Cs,t)}var Ny=w({sin_:mJ});function cJ(r){let t={x:S(r,"x","sinh")};return N.runKernel(gi,t)}var Dy=w({sinh_:cJ});function dJ(r,e,t){let n=S(r,"x","slice1d");return D(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),Ue(n,[e],[t])}var Nc=w({slice1d_:dJ});function fJ(r,e,t){let n=S(r,"x","slice2d");return D(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),Ue(n,e,t)}var Oh=w({slice2d_:fJ});function hJ(r,e,t){let n=S(r,"x","slice3d");return D(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),Ue(n,e,t)}var Dc=w({slice3d_:hJ});function gJ(r,e,t){let n=S(r,"x","slice4d");return D(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),Ue(n,e,t)}var Ll=w({slice4d_:gJ});function bJ(r,e=-1){let t=S(r,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);let n={logits:t},o={dim:e};return N.runKernel(As,n,o)}var _c=w({softmax_:bJ});function yJ(r){D(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let e={input:r};return N.runKernel(xp,e)}var Rc=w({fft_:yJ});function xJ(r){D(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let e={input:r};return N.runKernel(Tp,e)}var Bl=w({ifft_:xJ});function TJ(r){let e=r.shape[r.shape.length-1],t=r.size/e,n;if(e<=2){let o=E(r,[t,e]);n=Bl(o)}else{let o=[t,2*(e-1)],s=E(Ou(r),[t,e]),a=E(Vp(r),[t,e]),i=Mr(Ue(s,[0,1],[t,e-2]),1),p=P(Mr(Ue(a,[0,1],[t,e-2]),1),ge(-1)),u=gt([s,i],1),l=gt([a,p],1),m=E(Pn(u,l),[o[0],o[1]]);n=Bl(m)}if(n=Ou(n),r.rank===3&&r.shape[0]!==0){let o=n,s=r.shape[0];n=E(n,[s,n.shape[0]/s,n.shape[1]]),o.dispose()}return n}var _y=w({irfft_:TJ});function CJ(r,e,t=0){let o={x:S(r,"x","split")},s={numOrSizeSplits:e,axis:t};return N.runKernel(na,o,s)}var Pr=w({split_:CJ});function IJ(r,e){D(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let t=r.shape[r.shape.length-1],n=r.size/t,o;if(e!=null&&e<t){let f=r.shape.map(g=>0),h=r.shape.map(g=>g);h[r.shape.length-1]=e,o=Ue(r,f,h),t=e}else if(e!=null&&e>t){let f=r.shape.map(h=>h);f[r.shape.length-1]=e-t,o=gt([r,kt(f)],r.shape.length-1),t=e}else o=r;let s=_e(o),a=E(Pn(o,s),[n,t]),i=Rc(a),p=Math.floor(t/2)+1,u=Ou(i),l=Vp(i),m=Pr(u,[p,t-p],u.shape.length-1),c=Pr(l,[p,t-p],l.shape.length-1),d=o.shape.slice();return d[o.shape.length-1]=p,E(Pn(m[0],c[0]),d)}var Mc=w({rfft_:IJ});function kJ(r,e){let t=S(r,"a","squaredDifference"),n=S(e,"b","squaredDifference");[t,n]=Je(t,n),Ge(t.shape,n.shape);let o={a:t,b:n},s={};return N.runKernel(Ns,o,s)}var Ry=w({squaredDifference_:kJ});function vJ(r,e){let t=S(r,"x","squeeze","string_or_numeric");return E(t,Kw(t.shape,e).newShape)}var xa=w({squeeze_:vJ});function SJ(r,e=0){let t=Fu(r,"tensors","stack","string_or_numeric");D(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&D(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");let n=t,o={axis:e};return N.runKernel(Qs,n,o)}var dr=w({stack_:SJ});function wJ(r,e=0){let n={x:S(r,"x","step")},o={alpha:e};return N.runKernel(Xn,n,o)}var cu=w({step_:wJ});function AJ(r,e,t,n,o=0,s=0,a=0,i=0,p=0){let l={x:S(r,"x","stridedSlice","string_or_numeric")},m={begin:e,end:t,strides:n,beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:p};return N.runKernel(yi,l,m)}var jR=w({stridedSlice_:AJ});function NJ(r){let t={x:S(r,"x","tan","float32")};return N.runKernel(_s,t)}var XR=w({tan_:NJ});function er(r,e){yo(r);let t=qr(r,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return gn(r,null,t,e)}function wi(r,e,t){if(yo(r),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=qr(r,t);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return gn(r,e,n,t)}function My(r,e,t){if(yo(r),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=qr(r,t);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return gn(r,e,n,t)}function YR(r,e,t){if(yo(r),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=qr(r,t);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return gn(r,e,n,t)}function ZR(r,e,t){if(yo(r),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=qr(r,t);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return gn(r,e,n,t)}function QR(r,e,t){if(yo(r),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=qr(r,t);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||n,gn(r,e,n,t)}var qp={};Ye(qp,{calculateShapes:()=>JR,validateInput:()=>Pc,validateUpdateShape:()=>BA});function BA(r,e,t){let n=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${r}, sliceDim: ${n}, and batchDim: ${o}.`;if(t.rank<o)throw new Error(s+` update.rank < ${o}. `);if(r.length<n+(t.rank-o))throw new Error(s+` Output shape length < ${n+(t.rank-o)}`);if(t.rank!==o+r.length-n)throw new Error(s+` update.rank != ${o+r.length-n}`);for(let a=0;a<o;++a)if(t.shape[a]!==e.shape[a])throw new Error(s+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-o;++a)if(t.shape[a+o]!==r[a+n])throw new Error(s+` updates.shape[${a+o}] (${t.shape[a+o]}) != shape[${a+o}] (${r[a+o]})`)}function Pc(r,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}BA(t,e,r)}function JR(r,e,t){let n=e.shape.length,o=n>1?e.shape[n-1]:1,s=t.length,a=1;for(let m=o;m<s;++m)a*=t[m];let i=o<1?1:o,p=st(e.shape)/i,u=[...ji(t.slice(0,o)),1],l=st(t);return{sliceRank:o,numUpdates:p,sliceSize:a,strides:u,outputSize:l}}function DJ(r,e,t){let n=S(r,"tensor","tensorScatterupdate"),o=S(e,"indices","tensorScatterupdate","int32"),s=S(t,"updates","tensorScatterupdate");if(Pc(s,o,n.shape),n.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${n.dtype} and ${s.dtype}.`);let a={tensor:n,indices:o,updates:s},i={};return N.runKernel(Du,a,i)}var eM=w({tensorScatterUpdate_:DJ});function _J(r,e=1,t=!0){let n=S(r,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let o=n.shape[n.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${e}`);let s={x:n},a={k:e,sorted:t},[i,p]=N.runKernel(xi,s,a);return{values:i,indices:p}}var tM=w({topk_:_J});function RJ(r,e=0,t=1,n,o){if(Vt(r),n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new Fl(e,t,n,!0,o),a=Ce(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var Fc=w({truncatedNormal_:RJ});function MJ(r,e=0){let t=S(r,"x","unique","string_or_numeric");D(t.rank>0,()=>"The input tensor must be at least 1D");let n={x:t},o={axis:e},[s,a]=N.runKernel(_p,n,o);return{values:s,indices:a}}var rM=w({unique_:MJ});function PJ(r,e,t){let n=S(r,"x","unsortedSegmentSum"),o=S(e,"segmentIds","unsortedSegmentSum","int32");D(Au(t),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:o},a={numSegments:t};return N.runKernel(Rp,s,a)}var Py=w({unsortedSegmentSum_:PJ});function FJ(r,e=0){let t=S(r,"x","unstack","string_or_numeric");D(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);let n={value:t},o={axis:e};return N.runKernel(oa,n,o)}var Fr=w({unstack_:FJ});function nM(r,e){return Bh(r,e,"right")}function Fy(r,e=!0,t,n){return N.makeVariable(r,e,t,n)}function Ey(r,e){let t=[];for(let s=0;s<e.length;s++)e[s]&&t.push(s);let n=Ce(r,"int32"),o=Ce([t.length,r.length],"int32");for(let s=0;s<t.length;s++){let a=n.indexToLoc(t[s]),i=s*r.length;o.values.set(a,i)}return o.toTensor()}async function EJ(r){let e=S(r,"condition","whereAsync","bool"),t=await e.data(),n=Ey(e.shape,t);return r!==e&&e.dispose(),n}var Ly=EJ;async function LJ(r,e,t){let n=S(r,"tensor","boolMask"),o=S(e,"mask","boolMask","bool"),s=t??0,a=o.rank,i=n.shape;D(a>0,()=>"mask cannot be scalar"),Gt(i.slice(s,s+a),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let p=1;for(let h=s;h<s+a;h++)p*=i[h];let u=i.slice(0,s).concat([p],i.slice(s+a)),l=E(n,u),m=E(o,[-1]),c=await Ly(m),d=xa(c,[1]),f=Kp(l,d,s);return r!==n&&n.dispose(),e!==o&&o.dispose(),d.dispose(),l.dispose(),m.dispose(),c.dispose(),f}var BJ=LJ;function $J(r,e,t){let n=S(r,"x","transpose");if(e==null&&(e=n.shape.map((a,i)=>i).reverse()),D(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`),e.forEach(a=>{D(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${e}`)}),n.rank<=1)return n.clone();let o={x:n},s={perm:e};return n.dtype==="complex64"?z(()=>{let a=Ou(n),i=Vp(n);return a=N.runKernel(Rn,{x:a},s),i=N.runKernel(Rn,{x:i},s),t&&(i=et(i)),Pn(a,i)}):N.runKernel(Rn,o,s)}var je=w({transpose_:$J});function OJ(r,e,t,n,o=!0){let s=S(r,"v","movingAverage"),a=S(e,"x","movingAverage"),i=S(t,"decay","movingAverage");aA(s,a),D(Vn(s.shape,a.shape),()=>"Shape mismatch in v and x");let p=ge(1),u=ce(p,i),l=P(ce(a,s),u);if(o){D(n!=null,()=>"When using zeroDebias: true, step is required.");let m=S(n,"step","movingAverage");l=fe(l,ce(p,Qn(i,m)))}return Z(s,l)}var zJ=w({movingAverage_:OJ});function GJ(r,e,t){Vt(t);let n=S(r,"indices","scatterND","int32"),o=S(e,"updates","scatterND");Pc(o,n,t);let s={indices:n,updates:o},a={shape:t};return N.runKernel(fi,s,a)}var WJ=w({scatterND_:GJ});function oM(r,e,t,n){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let o=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(t.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${s}.`);let a=e.size;if(!(e.rank===0||e.rank===1&&a===o))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${o}]`);if(e.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function KJ(r,e,t,n=0){Vt(t);let o=S(r,"sparseIndices","sparseToDense","int32"),s=S(e,"sparseValues","sparseToDense","string_or_numeric"),a=S(n,"defaultValue","sparseToDense",s.dtype);oM(o,s,t,a);let i={sparseIndices:o,sparseValues:s,defaultValue:a},p={outputShape:t};return N.runKernel(bi,i,p)}var VJ=w({sparseToDense_:KJ});function HJ(r,e){let t=S(e,"indices","gatherND","int32"),o={params:S(r,"x","gatherND","string_or_numeric"),indices:t};return N.runKernel(Qa,o)}var qJ=w({gatherND_:HJ});function sM(r,e){if(e==null)return r.shape.slice();if(Vn(r.shape,e))return e;if(r.shape.length===e.length){let t=[];for(let n=0;n<r.shape.length;n++)e[n]==null&&r.shape[n]!=null?t.push(r.shape[n]):t.push(e[n]);return t}return e}function jJ(r,e,t,n){let o=S(r,"x","dropout");if(D(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),D(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return r instanceof He?o.clone():o;let s=sM(o,t),a=1-e,i=fe(Up(Z(ya(s,0,1,"float32",n),a)),a);return P(o,i)}var $A=w({dropout_:jJ});function OA(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function zh(r,e,t){let n=1-r%2,o=new Float32Array(r);for(let s=0;s<r;++s){let a=2*Math.PI*s/(r+n-1);o[s]=e-t*Math.cos(a)}return er(o,"float32")}async function XJ(r,e,t=1){let n=S(r,"predictions","inTopK"),o=S(e,"targets","inTopK");D(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),D(n.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${o.rank}`),Gt(n.shape.slice(0,n.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];D(t>0&&t<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${t}`);let a=await n.data(),i=await o.data(),[p,u]=[a.length/s,s],l=Vw("bool",p);for(let m=0;m<p;m++){let c=m*u,d=a.subarray(c,c+u),f=[];for(let h=0;h<d.length;h++)f.push({value:d[h],index:h});f.sort((h,g)=>g.value-h.value),l[m]=0;for(let h=0;h<t;h++)if(f[h].index===i[m]){l[m]=1;break}}return r!==n&&n.dispose(),e!==o&&o.dispose(),cr(l,o.shape,"bool")}var YJ=XJ;var jp={};Ye(jp,{conv2d:()=>aM,depthwiseConv2d:()=>iM,matMul:()=>uM});function ZJ(r,e,t,n,o,s="NHWC",a){let i=r;r.rank===3&&(i=E(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let p=e;p.rank===3&&(p=E(e,[1,e.shape[0],e.shape[1],e.shape[2]])),D(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),D(p.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${p.shape}.`),D(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);let u=s==="NHWC"?i.shape[3]:i.shape[1],l=s==="NHWC"?p.shape[3]:p.shape[1];D(u===t[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${t[2]}.`),D(l===t[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${t[3]}).`),Pt("conv2dDerFilter",o,a);let m={x:i,dy:p},c={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,filterShape:t};return N.runKernel(hp,m,c)}var Ec=w({conv2DBackpropFilter_:ZJ});function $l(r,e,t){if(t==null||t==="linear")return r;if(t==="relu")return P(r,cu(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Ol(r,e){let t=e,n=Dt(r.shape,e.shape);return n.length>0&&(t=be(t,n)),E(t,r.shape)}function zl(r,e,t,n){if(e==="linear")return r;if(e==="relu")return pn(r);if(e==="elu")return Wp(r);if(e==="relu6")return ky(r);if(e==="prelu")return Ac(r,t);if(e==="leakyrelu")return Ic(r,n);if(e==="sigmoid")return Fn(r);throw new Error(`Unknown fused activation ${e}.`)}var Gl=(r,e)=>!(r>0)||e==="linear";function QJ({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:p="linear",preluActivationWeights:u,leakyreluAlpha:l}){if(p=p||"linear",Gl(N.state.gradientDepth,p)===!1){D(o==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${o} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let A=Fs(r,e,t,n,o,s,a);return i!=null&&(A=Z(A,i)),zl(A,p,u,l)}let m=S(r,"x","conv2d","float32"),c=S(e,"filter","conv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=E(m,[1,m.shape[0],m.shape[1],m.shape[2]])),D(d.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`),D(c.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`),Pt("fused conv2d",n,a);let h=o==="NHWC"?d.shape[3]:d.shape[1];D(c.shape[2]===h,()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${c.shape[2]}.`),D(zr(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);let g=Al(d.shape,c.shape,t,s,n,a),b;i!=null&&(b=S(i,"bias","fused conv2d"),[b]=Je(b,m),o==="NHWC"?Ge(g.outShape,b.shape):(D(b.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`),D(b.shape.length===0||b.shape[0]===g.outChannels||b.shape[0]===1,()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let x;if(u!=null){let A=u.shape;if(D(A.length<=1||A.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${A.length}.`),A.length===1)D(A[0]===1||A[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${A}) is not compatible with the number of output channels (${g.outChannels}).`);else if(A.length===3)try{Ge(A,g.outShape)}catch{let R=`Error in fused conv2d: PReLU activation weights (${A}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(R)}x=S(u,"prelu weights","fused conv2d")}let T=(A,_)=>{D(o==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${o} but only NHWC is currently supported.`);let[R,M,F,O]=_,G=$l(A,F,p);D(Ms(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let W=Tc(M.shape,G,R,t,n),U=Ec(M,G,R.shape,t,n),K=[W,U];if(O!=null){let H=Ol(O,G);K.push(H)}return K},C={x:d,filter:c,bias:b,preluActivationWeights:x},v={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:p,leakyreluAlpha:l};return i==null?yn((_,R,M)=>{let F=N.runKernel(ia,C,v);return M([R,_,F]),f&&(F=E(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:T}})(d,c):yn((_,R,M,F)=>{let O=N.runKernel(ia,C,v);return F([R,_,O,M]),f&&(O=E(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:T}})(d,c,b)}var aM=w({fusedConv2d_:QJ});function JJ(r,e,t,n,o,s=[1,1],a){let i=r;r.rank===3&&(i=E(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let p=e;p.rank===3&&(p=E(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u={x:i,dy:p},l={strides:n,pad:o,dimRoundingMode:a,dilations:s,filterShape:t};return N.runKernel(gp,u,l)}var By=w({depthwiseConv2dNativeBackpropFilter_:JJ});function e9(r,e,t,n,o,s=[1,1],a){let i=e,p=!1;e.rank===3&&(p=!0,i=E(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u={dy:i,filter:t},l={strides:n,pad:o,dimRoundingMode:a,dilations:s,inputShape:r},m=N.runKernel(bp,u,l);return p?E(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var $y=w({depthwiseConv2dNativeBackpropInput_:e9});function t9({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:p="linear",preluActivationWeights:u,leakyreluAlpha:l}){if(Gl(N.state.gradientDepth,p)===!1){let v=Gp(r,e,t,n,o,s,a);return i!=null&&(v=Z(v,i)),zl(v,p,u,l)}let m=S(r,"x","depthwiseConv2d","float32"),c=S(e,"filter","depthwiseConv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=E(m,[1,m.shape[0],m.shape[1],m.shape[2]])),D(d.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),D(c.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`),D(d.shape[3]===c.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),s==null&&(s=[1,1]),D(zr(t,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),Pt("fused depthwiseConv2d",n,a);let h=Al(d.shape,c.shape,t,s,n,a,!0),g;i!=null&&(g=S(i,"bias","fused conv2d"),[g]=Je(g,m),Ge(h.outShape,g.shape));let b;u!=null&&(b=S(u,"prelu weights","fused depthwiseConv2d"));let x=(v,A)=>{D(Ms(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[_,R,M,F]=A,O=$l(v,M,p),G=$y(R.shape,O,_,t,n,s,a),W=By(R,O,_.shape,t,n,s,a);if(F!=null){let U=Ol(g,O);return[G,W,U]}return[G,W]},T={x:d,filter:c,bias:g,preluActivationWeights:b},C={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:p,leakyreluAlpha:l};return i==null?yn((A,_,R)=>{let M=N.runKernel(ua,T,C);return R([_,A,M]),f&&(M=E(M,[M.shape[1],M.shape[2],M.shape[3]])),{value:M,gradFunc:x}})(d,c):yn((A,_,R,M)=>{let F=N.runKernel(ua,T,C);return M([_,A,F,R]),f&&(F=E(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:x}})(d,c,g)}var iM=w({fusedDepthwiseConv2d_:t9});function r9({a:r,b:e,transposeA:t=!1,transposeB:n=!1,bias:o,activation:s="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(Gl(N.state.gradientDepth,s)===!1){let O=qe(r,e,t,n);return o!=null&&(O=Z(O,o)),zl(O,s,a,i)}let p=S(r,"a","fused matMul"),u=S(e,"b","fused matMul");[p,u]=Je(p,u);let l=t?p.shape[p.rank-2]:p.shape[p.rank-1],m=n?u.shape[u.rank-1]:u.shape[u.rank-2],c=t?p.shape[p.rank-1]:p.shape[p.rank-2],d=n?u.shape[u.rank-2]:u.shape[u.rank-1],f=p.shape.slice(0,-2),h=u.shape.slice(0,-2),g=st(f),b=st(h);D(l===m,()=>`Error in fused matMul: inner shapes (${l}) and (${m}) of Tensors with shapes ${p.shape} and ${u.shape} and transposeA=${t} and transposeB=${n} must match.`);let T=Ge(p.shape.slice(0,-2),u.shape.slice(0,-2)).concat([c,d]),C=t?E(p,[g,l,c]):E(p,[g,c,l]),v=n?E(u,[b,d,m]):E(u,[b,m,d]),A;o!=null&&(A=S(o,"bias","fused matMul"),[A]=Je(A,p),Ge(T,A.shape));let _;a!=null&&(_=S(a,"prelu weights","fused matMul"));let R=(O,G)=>{let[W,U,K,H]=G,X=$l(E(O,K.shape),K,s),j,re;if(!t&&!n?(j=qe(X,U,!1,!0),re=qe(W,X,!0,!1)):!t&&n?(j=qe(X,U,!1,!1),re=qe(X,W,!0,!1)):t&&!n?(j=qe(U,X,!1,!0),re=qe(W,X,!1,!1)):(j=qe(U,X,!0,!0),re=qe(X,W,!0,!0)),o!=null){let ae=Ol(H,X);return[j,re,ae]}else return[j,re]},M={a:C,b:v,bias:A,preluActivationWeights:_},F={transposeA:t,transposeB:n,activation:s,leakyreluAlpha:i};return o==null?yn((G,W,U)=>{let K=N.runKernel(aa,M,F);return U([G,W,K]),{value:E(K,T),gradFunc:R}})(C,v):yn((G,W,U,K)=>{let H=N.runKernel(aa,M,F);return K([G,W,H,U]),{value:E(H,T),gradFunc:R}})(C,v,A)}var uM=w({fusedMatMul_:r9});function n9(r){return zh(r,.54,.46)}var pM=w({hammingWindow_:n9});function o9(r){return zh(r,.5,.5)}var Oy=w({hannWindow_:o9});function s9(r,e,t,n=!1,o=0){let s=0,a=[];for(;s+e<=r.size;)a.push(Ue(r,s,e)),s+=t;if(n)for(;s<r.size;){let i=s+e-r.size,p=gt([Ue(r,s,e-i),ha([i],o)]);a.push(p),s+=t}return a.length===0?wi([],[0,e]):E(gt(a),[a.length,e])}var zy=w({frame_:s9});function a9(r,e,t,n,o=Oy){n==null&&(n=OA(e));let s=zy(r,e,t),a=P(s,o(e));return Mc(a,n)}var lM=w({stft_:a9});function i9(r,e,t,n,o="bilinear",s=0){let a=S(r,"image","cropAndResize"),i=S(e,"boxes","cropAndResize","float32"),p=S(t,"boxInd","cropAndResize","int32"),u=i.shape[0];D(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),D(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`),D(p.rank===1&&p.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`),D(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),D(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),D(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);let l={image:a,boxes:i,boxInd:p},m={method:o,extrapolationValue:s,cropSize:n};return N.runKernel(Ha,l,m)}var mM=w({cropAndResize_:i9});function u9(r){let e=S(r,"image","flipLeftRight","float32");D(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);let t={image:e};return N.runKernel(Za,t,{})}var cM=w({flipLeftRight_:u9});function p9(r){let e=S(r,"image","grayscaleToRGB"),t=e.rank-1,n=e.shape[t];D(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),D(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let o=new Array(e.rank);return o.fill(1,0,t),o[t]=3,an(e,o)}var dM=w({grayscaleToRGB_:p9});function l9(r,e,t=0,n=.5){let o=S(r,"image","rotateWithOffset","float32");D(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);let s={image:o},a={radians:e,fillValue:t,center:n};return N.runKernel(Ci,s,a)}var fM=w({rotateWithOffset_:l9});function Ta(r,e,t,n,o,s){n==null&&(n=.5),o==null&&(o=Number.NEGATIVE_INFINITY),s==null&&(s=0);let a=r.shape[0];return t=Math.min(t,a),D(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),D(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),D(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),D(e.rank===1,()=>"scores must be a 1D tensor"),D(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),D(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s}}function m9(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=S(r,"boxes","nonMaxSuppression","float32"),a=S(e,"scores","nonMaxSuppression","float32"),i=Ta(s,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let p={maxOutputSize:t,iouThreshold:n,scoreThreshold:o};return N.runKernel(li,{boxes:s,scores:a},p)}var hM=w({nonMaxSuppression_:m9});function gM(r,e,t){let n=c9(r,e,t),o=n<0?-(n+1):n;r.splice(o,0,e)}function c9(r,e,t){return f9(r,e,t||d9)}function d9(r,e){return r>e?1:r<e?-1:0}function f9(r,e,t){let n=0,o=r.length,s=0,a=!1;for(;n<o;){s=n+(o-n>>>1);let i=t(e,r[s]);i>0?n=s+1:(o=s,a=!i)}return a?n:-n-1}function Gy(r,e,t,n,o){return zA(r,e,t,n,o,0)}function Wy(r,e,t,n,o,s){return zA(r,e,t,n,o,0,!1,s,!0)}function Uy(r,e,t,n,o,s){return zA(r,e,t,n,o,s,!0)}function zA(r,e,t,n,o,s,a=!1,i=!1,p=!1){let u=[];for(let g=0;g<e.length;g++)e[g]>o&&u.push({score:e[g],boxIndex:g,suppressBeginIndex:0});u.sort(bM);let l=s>0?-.5/s:0,m=[],c=[];for(;m.length<t&&u.length>0;){let g=u.pop(),{score:b,boxIndex:x,suppressBeginIndex:T}=g;if(b<o)break;let C=!1;for(let v=m.length-1;v>=T;--v){let A=h9(r,x,m[v]);if(A>=n){C=!0;break}if(g.score=g.score*g9(n,l,A),g.score<=o)break}g.suppressBeginIndex=m.length,C||(g.score===b?(m.push(x),c.push(g.score)):g.score>o&&gM(u,g,bM))}let d=m.length,f=t-d;i&&f>0&&(m.push(...new Array(f).fill(0)),c.push(...new Array(f).fill(0)));let h={selectedIndices:m};return a&&(h.selectedScores=c),p&&(h.validOutputs=d),h}function h9(r,e,t){let n=r.subarray(e*4,e*4+4),o=r.subarray(t*4,t*4+4),s=Math.min(n[0],n[2]),a=Math.min(n[1],n[3]),i=Math.max(n[0],n[2]),p=Math.max(n[1],n[3]),u=Math.min(o[0],o[2]),l=Math.min(o[1],o[3]),m=Math.max(o[0],o[2]),c=Math.max(o[1],o[3]),d=(i-s)*(p-a),f=(m-u)*(c-l);if(d<=0||f<=0)return 0;let h=Math.max(s,u),g=Math.max(a,l),b=Math.min(i,m),x=Math.min(p,c),T=Math.max(b-h,0)*Math.max(x-g,0);return T/(d+f-T)}function g9(r,e,t){let n=Math.exp(e*t*t);return t<=r?n:0}function bM(r,e){return r.score-e.score||r.score===e.score&&e.boxIndex-r.boxIndex}async function b9(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=S(r,"boxes","nonMaxSuppressionAsync"),a=S(e,"scores","nonMaxSuppressionAsync"),i=Ta(s,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let p=await Promise.all([s.data(),a.data()]),u=p[0],l=p[1],{selectedIndices:m}=Gy(u,l,t,n,o);return s!==r&&s.dispose(),a!==e&&a.dispose(),er(m,"int32")}var yM=b9;function y9(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=S(r,"boxes","nonMaxSuppression"),i=S(e,"scores","nonMaxSuppression"),p=Ta(a,i,t,n,o,s);t=p.maxOutputSize,n=p.iouThreshold,o=p.scoreThreshold,s=p.softNmsSigma;let u={boxes:a,scores:i},l={maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s},m=N.runKernel(mi,u,l);return{selectedIndices:m[0],selectedScores:m[1]}}var xM=w({nonMaxSuppressionWithScore_:y9});async function x9(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=S(r,"boxes","nonMaxSuppressionAsync"),i=S(e,"scores","nonMaxSuppressionAsync"),p=Ta(a,i,t,n,o,s);t=p.maxOutputSize,n=p.iouThreshold,o=p.scoreThreshold,s=p.softNmsSigma;let u=await Promise.all([a.data(),i.data()]),l=u[0],m=u[1],{selectedIndices:c,selectedScores:d}=Uy(l,m,t,n,o,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:er(c,"int32"),selectedScores:er(d)}}var TM=x9;function T9(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=S(r,"boxes","nonMaxSuppression"),i=S(e,"scores","nonMaxSuppression"),p=Ta(a,i,t,n,o,null),u=p.maxOutputSize,l=p.iouThreshold,m=p.scoreThreshold,c={boxes:a,scores:i},d={maxOutputSize:u,iouThreshold:l,scoreThreshold:m,padToMaxOutputSize:s},f=N.runKernel(Nu,c,d);return{selectedIndices:f[0],validOutputs:f[1]}}var CM=w({nonMaxSuppressionPadded_:T9});async function C9(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=S(r,"boxes","nonMaxSuppressionAsync"),i=S(e,"scores","nonMaxSuppressionAsync"),p=Ta(a,i,t,n,o,null),u=p.maxOutputSize,l=p.iouThreshold,m=p.scoreThreshold,[c,d]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:h}=Wy(c,d,u,l,m,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:er(f,"int32"),validOutputs:ge(h,"int32")}}var IM=C9;function I9(r,e,t=!1,n=!1){let o=S(r,"images","resizeBilinear");D(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),D(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),D(n===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=E(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,i={images:s},p={alignCorners:t,halfPixelCenters:n,size:e},u=N.runKernel(hs,i,p);return a?E(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var kM=w({resizeBilinear_:I9});function k9(r,e,t=!1,n=!1){let o=S(r,"images","resizeNearestNeighbor");D(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),D(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),D(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),D(n===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=E(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,i={images:s},p={alignCorners:t,halfPixelCenters:n,size:e},u=N.runKernel(fs,i,p);return a?E(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var vM=w({resizeNearestNeighbor_:k9});function v9(r,e="binary",t=!1,n=.5){let o=S(r,"image","threshold"),s=.2989,a=.587,i=.114,p=o.shape[0]*o.shape[1],u=P(er([n]),255),l,m,c,d;if(D(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),D(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),D(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),D(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),o.shape[2]===3){[l,m,c]=Pr(o,[1,1,1],-1);let g=P(l,s),b=P(m,a),x=P(c,i);d=Z(Z(g,b),x)}else d=r;if(e==="otsu"){let g=Jb(ne(vy(d),"int32"),cr([]),256);u=S9(g,p)}let f=t?ba(d,u):Jt(d,u);return ne(P(f,255),"int32")}function S9(r,e){let t=er([-1]),n=er([0]),o=er([0]),s,a,i,p,u,l;for(let m=0;m<r.size-1;m++){s=Ue(r,0,m+1),a=Ue(r,m+1),u=fe(be(s),e),l=fe(be(a),e);let c=be(P(s,mu(0,s.size)));i=fe(c,be(s));let d=ha(a.shape,s.size),f=Z(mu(0,a.size),d),h=P(a,f);p=fe(be(h),be(a));let g=ce(i,p),b=ce(i,p),x=P(u,l);o=P(P(x,g),b);let T=Jt(o,n);n=Et(T,o,n),t=Et(T,er([m]),t)}return t}var SM=w({threshold_:v9});function w9(r,e,t="nearest",n="constant",o=0,s){let a=S(r,"image","transform","float32"),i=S(e,"transforms","transform","float32");D(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),D(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),D(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let p={image:a,transforms:i},u={interpolation:t,fillMode:n,fillValue:o,outputShape:s};return N.runKernel(Ti,p,u)}var wM=w({transform_:w9});function A9(r,e,t){let n=S(r,"a","bandPart");D(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let o=n.shape,[s,a]=n.shape.slice(-2),i,p;typeof e=="number"?(D(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),D(e<=s,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`),i=S(e<0?s:e,"numLower","bandPart")):(D(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),i=Et(Rl(e,0),s,Si(e,s))),typeof t=="number"?(D(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),D(t<=a,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`),p=S(t<0?a:t,"numUpper","bandPart")):(D(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),p=Et(Rl(t,0),a,Si(t,a)));let u=E(mu(0,s,1,"int32"),[-1,1]),l=mu(0,a,1,"int32"),m=ce(u,l),c=un(ba(m,i),Jn(m,et(p))),d=kt([s,a],n.dtype);return E(dr(Fr(E(n,[-1,s,a])).map(f=>Et(c,f,d))),o)}var AM=w({bandPart_:A9});function N9(r){let e;if(Array.isArray(r)){e=!1,D(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let o=r[0].shape[0];for(let s=1;s<r.length;++s)D(r[s].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${o})`)}else e=!0,r=Pr(r,r.shape[0],0).map(o=>xa(o,[0]));D(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let t=[],n=r;for(let o=0;o<r.length;++o)t.push(N.tidy(()=>{let s=n[o];if(o>0)for(let a=0;a<o;++a){let i=P(be(P(t[a],s)),t[a]);s=ce(s,i)}return fe(s,Dl(s,"euclidean"))}));return e?dr(t,0):t}var NM=w({gramSchmidt_:N9});function D9(r,e=!1){if(D(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return DM(r,e);{let t=r.shape.slice(0,r.shape.length-2).reduce((p,u)=>p*u),n=Fr(E(r,[t,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),o=[],s=[];n.forEach(p=>{let[u,l]=DM(p,e);o.push(u),s.push(l)});let a=E(dr(o,0),r.shape),i=E(dr(s,0),r.shape);return[a,i]}}function DM(r,e=!1){return N.tidy(()=>{D(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let t=r.shape[0],n=r.shape[1],o=_l(t),s=bn(r),a=wi([[1]],[1,1]),i=bn(a),p=t>=n?n:t;for(let u=0;u<p;++u){let l=s,m=i,c=o;[i,s,o]=N.tidy(()=>{let d=Ue(s,[u,u],[t-u,1]),f=Dl(d),h=Ue(s,[u,u],[1,1]),g=Et(Jt(h,0),wi([[-1]]),wi([[1]])),b=ce(h,P(g,f)),x=fe(d,b);x.shape[0]===1?i=bn(a):i=gt([a,Ue(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);let T=et(fe(qe(g,b),f)),C=Ue(s,[u,0],[t-u,n]),v=P(T,i),A=je(i);if(u===0)s=ce(C,qe(v,qe(A,C)));else{let M=ce(C,qe(v,qe(A,C)));s=gt([Ue(s,[0,0],[u,n]),M],0)}let _=je(v),R=Ue(o,[0,u],[t,o.shape[1]-u]);if(u===0)o=ce(R,qe(qe(R,i),_));else{let M=ce(R,qe(qe(R,i),_));o=gt([Ue(o,[0,0],[t,u]),M],1)}return[i,s,o]}),Me([l,m,c])}return!e&&t>n&&(o=Ue(o,[0,0],[t,n]),s=Ue(s,[0,0],[n,n])),[o,s]})}var _M=w({qr_:D9});var Ai=(o=>(o[o.NONE=0]="NONE",o[o.MEAN=1]="MEAN",o[o.SUM=2]="SUM",o[o.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",o))(Ai||{});function _9(r,e,t=3){let n=S(r,"losses","computeWeightedLoss"),o=null;e!=null&&(o=S(e,"weights","computeWeightedLoss"));let s=o==null?n:P(n,o);if(t===0)return s;if(t===2)return be(s);if(t===1){if(o==null)return zt(s);{let a=n.size/o.size,i=fe(be(s),be(o));return a>1?fe(i,ge(a)):i}}if(t===3){if(o==null)return fe(be(s),ge(n.size));{let a=P(o,Ir(n.shape)),i=ne(be($u(a,ge(0))),"float32");return fe(be(s),i)}}throw Error(`Unknown reduction: ${t}`)}var Qr=w({computeWeightedLoss_:_9});function R9(r,e,t,n=3){let o=S(r,"labels","absoluteDifference"),s=S(e,"predictions","absoluteDifference"),a=null;t!=null&&(a=S(t,"weights","absoluteDifference")),Gt(o.shape,s.shape,"Error in absoluteDifference: ");let i=Wt(ce(o,s));return Qr(i,a,n)}var RM=w({absoluteDifference_:R9});function M9(r,e,t,n,o=3){let s=S(r,"labels","cosineDistance"),a=S(e,"predictions","cosineDistance"),i=null;n!=null&&(i=S(n,"weights","cosineDistance")),Gt(s.shape,a.shape,"Error in cosineDistance: ");let p=ge(1),u=ce(p,be(P(s,a),t,!0));return Qr(u,i,o)}var MM=w({cosineDistance_:M9});function P9(r,e,t,n=3){let o=S(r,"labels","hingeLoss"),s=S(e,"predictions","hingeLoss"),a=null;t!=null&&(a=S(t,"weights","hingeLoss")),Gt(o.shape,s.shape,"Error in hingeLoss: ");let i=ge(1);o=ce(P(ge(2),o),i);let p=pn(ce(i,P(o,s)));return Qr(p,a,n)}var PM=w({hingeLoss_:P9});function F9(r,e,t,n=1,o=3){let s=S(r,"labels","huberLoss"),a=S(e,"predictions","huberLoss"),i=null;t!=null&&(i=S(t,"weights","huberLoss")),Gt(s.shape,a.shape,"Error in huberLoss: ");let p=ge(n),u=Wt(ce(a,s)),l=Si(u,p),m=ce(u,l),c=Z(P(ge(.5),Xe(l)),P(p,m));return Qr(c,i,o)}var FM=w({huberLoss_:F9});function E9(r,e,t,n=1e-7,o=3){let s=S(r,"labels","logLoss"),a=S(e,"predictions","logLoss"),i=null;t!=null&&(i=S(t,"weights","logLoss")),Gt(s.shape,a.shape,"Error in logLoss: ");let p=ge(1),u=ge(n),l=et(P(s,Zr(Z(a,u)))),m=P(ce(p,s),Zr(Z(ce(p,a),u))),c=ce(l,m);return Qr(c,i,o)}var EM=w({logLoss_:E9});function L9(r,e,t,n=3){let o=S(r,"labels","meanSquaredError"),s=S(e,"predictions","meanSquaredError"),a=null;t!=null&&(a=S(t,"weights","meanSquaredError")),Gt(o.shape,s.shape,"Error in meanSquaredError: ");let i=Ry(o,s);return Qr(i,a,n)}var LM=w({meanSquaredError_:L9});function B9(r,e){let t=S(r,"labels","sigmoidCrossEntropyWithLogits"),n=S(e,"logits","sigmoidCrossEntropyWithLogits");Gt(t.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let o=pn(n),s=P(n,t),a=kc(Tr(et(Wt(n))));return Z(ce(o,s),a)}function $9(r,e,t,n=0,o=3){let s=S(r,"multiClassLabels","sigmoidCrossEntropy"),a=S(e,"logits","sigmoidCrossEntropy"),i=null;if(t!=null&&(i=S(t,"weights","sigmoidCrossEntropy")),Gt(s.shape,a.shape,"Error in sigmoidCrossEntropy: "),n>0){let u=ge(n),l=ge(1),m=ge(.5);s=Z(P(s,ce(l,u)),P(m,u))}let p=B9(s,a);return Qr(p,i,o)}var BM=w({sigmoidCrossEntropy_:$9});function O9(r,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return yn((o,s,a)=>{let p=fy(s,[t],!0),u=ce(ne(s,"float32"),p);a([o,u]);let l=et(P(u,o));return{value:be(l,[t]),gradFunc:(d,f)=>{let[h,g]=f,b=ga(d.shape,[t]);return[P(E(d,b),ce(ne(h,"float32"),Tr(g))),P(E(d,b),ce(Tr(g),ne(h,"float32")))]}}})(r,e)}function z9(r,e,t,n=0,o=3){let s=S(r,"onehotLabels","softmaxCrossEntropy"),a=S(e,"logits","softmaxCrossEntropy"),i=null;if(t!=null&&(i=S(t,"weights","softmaxCrossEntropy")),Gt(s.shape,a.shape,"Error in softmaxCrossEntropy: "),n>0){let u=ge(n),l=ge(1),m=ge(s.shape[1]);s=Z(P(s,ce(l,u)),fe(u,m))}let p=O9(s,a);return Qr(p,i,o)}var $M=w({softmaxCrossEntropy_:z9});function G9(r,e,t,n){let o=S(r,"indices","sparseFillEmptyRows","int32"),s=S(e,"values","sparseFillEmptyRows"),a=S(t,"denseShape","sparseFillEmptyRows","int32"),i=S(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let p={indices:o,values:s,denseShape:a,defaultValue:i},u=N.runKernel(Sp,p);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var OM=w({sparseFillEmptyRows_:G9});function W9(r,e,t){let n=S(r,"inputIndices","sparseReshape","int32"),o=S(e,"inputShape","sparseReshape","int32"),s=S(t,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let a={inputIndices:n,inputShape:o,newShape:s},i=N.runKernel(_u,a);return{outputIndices:i[0],outputShape:i[1]}}var zM=w({sparseReshape_:W9});function U9(r,e,t){let n=S(r,"data","sparseSegmentMean"),o=S(e,"indices","sparseSegmentMean","int32"),s=S(t,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return N.runKernel(wp,a)}var GM=w({sparseSegmentMean_:U9});function K9(r,e,t){let n=S(r,"data","sparseSegmentSum"),o=S(e,"indices","sparseSegmentSum","int32"),s=S(t,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return N.runKernel(Ap,a)}var WM=w({sparseSegmentSum_:K9});function V9(r,e,t,n,o,s,a,i){let p=S(r,"data","stringNGrams","string");if(p.dtype!=="string")throw new Error("Data must be of datatype string");if(p.shape.length!==1)throw new Error(`Data must be a vector, saw: ${p.shape}`);let u=S(e,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let l={separator:t,nGramWidths:n,leftPad:o,rightPad:s,padWidth:a,preserveShortSequences:i},m={data:p,dataSplits:u},c=N.runKernel(su,m,l);return{nGrams:c[0],nGramsSplits:c[1]}}var UM=w({stringNGrams_:V9});function H9(r,e,t=!0){let n=S(r,"input","stringSplit","string"),o=S(e,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);let s={skipEmpty:t},a={input:n,delimiter:o},i=N.runKernel(Np,a,s);return{indices:i[0],values:i[1],shape:i[2]}}var KM=w({stringSplit_:H9});function q9(r,e){let t=S(r,"input","stringToHashBucketFast","string"),n={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");let o={input:t};return N.runKernel(Dp,o,n)}var VM=w({stringToHashBucketFast_:q9});function j9(r,e,t,n=!0){let o=S(r,"input","staticRegexReplace","string"),s={pattern:e,rewrite:t,replaceGlobal:n};return N.runKernel(xl,{x:o},s)}var HM=w({staticRegexReplace_:j9});var X9={fft:Rc,ifft:Bl,rfft:Mc,irfft:_y},Y9={hammingWindow:pM,hannWindow:Oy,frame:zy,stft:lM},xn={flipLeftRight:cM,grayscaleToRGB:dM,resizeNearestNeighbor:vM,resizeBilinear:kM,rotateWithOffset:fM,cropAndResize:mM,nonMaxSuppression:hM,nonMaxSuppressionAsync:yM,nonMaxSuppressionWithScore:xM,nonMaxSuppressionWithScoreAsync:TM,nonMaxSuppressionPadded:CM,nonMaxSuppressionPaddedAsync:IM,threshold:SM,transform:wM},GA={bandPart:AM,gramSchmidt:NM,qr:_M},Z9={absoluteDifference:RM,computeWeightedLoss:Qr,cosineDistance:MM,hingeLoss:PM,huberLoss:FM,logLoss:EM,meanSquaredError:LM,sigmoidCrossEntropy:BM,softmaxCrossEntropy:$M},Q9={sparseFillEmptyRows:OM,sparseReshape:zM,sparseSegmentMean:GM,sparseSegmentSum:WM},J9={stringNGrams:UM,stringSplit:KM,stringToHashBucketFast:VM,staticRegexReplace:HM};var ee={};Ye(ee,{Serializable:()=>Wh,SerializationMap:()=>Gh,registerClass:()=>WA});var Wh=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Wl=class{classNameMap;constructor(){this.classNameMap={}}static getMap(){return Wl.instance==null&&(Wl.instance=new Wl),Wl.instance}static register(e){Wl.getMap().classNameMap[e.className]=[e,e.fromConfig]}},Gh=Wl;q(Gh,"instance");function WA(r){D(r.className!=null,()=>"Class being registered does not have the static className property defined."),D(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),D(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Gh.register(r)}var Jr=class extends Wh{iterations_;minimize(e,t=!1,n){let{value:o,grads:s}=this.computeGradients(e,n);if(n!=null){let a=n.map(i=>({name:i.name,tensor:s[i.name]}));this.applyGradients(a)}else this.applyGradients(s);return Me(s),t?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return my(e,t)}dispose(){this.iterations_!=null&&Me(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ge(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Jr,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var Ul=class extends Jr{constructor(t,n,o=null){super();this.learningRate=t;this.rho=n;this.epsilon=o;o==null&&(this.epsilon=N.backend.epsilon())}static get className(){return"Adadelta"}accumulatedGrads=[];accumulatedUpdates=[];applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,s)=>{let a=N.registeredVariables[o],i=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${o}/accum_grad`,variable:z(()=>_e(a).variable(i))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${o}/accum_var`,variable:z(()=>_e(a).variable(i))});let p=Array.isArray(t)?t[s].tensor:t[o];if(p==null)return;let u=this.accumulatedGrads[s].variable,l=this.accumulatedUpdates[s].variable;z(()=>{let m=Z(P(u,this.rho),P(Xe(p),1-this.rho)),c=P(fe(Ot(Z(l,this.epsilon)),Ot(Z(u,this.epsilon))),p),d=Z(P(l,this.rho),P(Xe(c),1-this.rho));u.assign(m),l.assign(d);let f=Z(P(c,-this.learningRate),a);a.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Me(this.accumulatedGrads.map(t=>t.variable)),Me(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){let t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(t){t=await this.extractIterations(t);let n=t.length/2,o=!1;this.accumulatedGrads=t.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})),this.accumulatedUpdates=t.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(o)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,n){return new t(n.learningRate,n.rho,n.epsilon)}};var Kl=class extends Jr{constructor(t,n=.1){super();this.learningRate=t;this.initialAccumulatorValue=n}static get className(){return"Adagrad"}accumulatedGrads=[];applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,s)=>{let a=N.registeredVariables[o];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${o}/accumulator`,variable:z(()=>ha(a.shape,this.initialAccumulatorValue).variable(!1))});let i=Array.isArray(t)?t[s].tensor:t[o];if(i==null)return;let p=this.accumulatedGrads[s].variable;z(()=>{let u=Z(p,Xe(i));p.assign(u);let l=Z(P(fe(i,Ot(Z(u,N.backend.epsilon()))),-this.learningRate),a);a.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Me(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);let n=!1;this.accumulatedGrads=t.map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,n){return new t(n.learningRate,n.initialAccumulatorValue)}};var Vl=class extends Jr{constructor(t,n,o,s=null){super();this.learningRate=t;this.beta1=n;this.beta2=o;this.epsilon=s;z(()=>{this.accBeta1=ge(n).variable(),this.accBeta2=ge(o).variable()}),s==null&&(this.epsilon=N.backend.epsilon())}static get className(){return"Adam"}accBeta1;accBeta2;accumulatedFirstMoment=[];accumulatedSecondMoment=[];applyGradients(t){let n=Array.isArray(t)?t.map(o=>o.name):Object.keys(t);z(()=>{let o=ce(1,this.accBeta1),s=ce(1,this.accBeta2);n.forEach((a,i)=>{let p=N.registeredVariables[a],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:z(()=>_e(p).variable(u))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${a}/v`,variable:z(()=>_e(p).variable(u))});let l=Array.isArray(t)?t[i].tensor:t[a];if(l==null)return;let m=this.accumulatedFirstMoment[i].variable,c=this.accumulatedSecondMoment[i].variable,d=Z(P(m,this.beta1),P(l,1-this.beta1)),f=Z(P(c,this.beta2),P(Xe(l),1-this.beta2)),h=fe(d,o),g=fe(f,s);m.assign(d),c.assign(f);let b=Z(P(fe(h,Z(Ot(g),this.epsilon)),-this.learningRate),p);p.assign(b)}),this.accBeta1.assign(P(this.accBeta1,this.beta1)),this.accBeta2.assign(P(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Me(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&Me(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){let t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(t){t=await this.extractIterations(t),z(()=>{this.accBeta1.assign(Qn(this.beta1,this.iterations_+1)),this.accBeta2.assign(Qn(this.beta2,this.iterations_+1))});let n=t.length/2,o=!1;this.accumulatedFirstMoment=t.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})),this.accumulatedSecondMoment=t.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(o)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,n){return new t(n.learningRate,n.beta1,n.beta2,n.epsilon)}};var Hl=class extends Jr{constructor(t,n,o,s=null,a=0){super();this.learningRate=t;this.beta1=n;this.beta2=o;this.epsilon=s;this.decay=a;z(()=>{this.iteration=ge(0).variable(),this.accBeta1=ge(n).variable()}),s==null&&(this.epsilon=N.backend.epsilon())}static get className(){return"Adamax"}accBeta1;iteration;accumulatedFirstMoment=[];accumulatedWeightedInfNorm=[];applyGradients(t){let n=Array.isArray(t)?t.map(o=>o.name):Object.keys(t);z(()=>{let o=ce(1,this.accBeta1),s=fe(-this.learningRate,Z(P(this.iteration,this.decay),1));n.forEach((a,i)=>{let p=N.registeredVariables[a],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:_e(p).variable(u)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${a}/v`,variable:_e(p).variable(u)});let l=Array.isArray(t)?t[i].tensor:t[a];if(l==null)return;let m=this.accumulatedFirstMoment[i].variable,c=this.accumulatedWeightedInfNorm[i].variable,d=Z(P(m,this.beta1),P(l,1-this.beta1)),f=P(c,this.beta2),h=Wt(l),g=Es(f,h);m.assign(d),c.assign(g);let b=Z(P(fe(s,o),fe(d,Z(g,this.epsilon))),p);p.assign(b)}),this.iteration.assign(Z(this.iteration,1)),this.accBeta1.assign(P(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Me(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&Me(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,n){return new t(n.learningRate,n.beta1,n.beta2,n.epsilon,n.decay)}};var zu=class extends Jr{constructor(t){super();this.learningRate=t;this.setLearningRate(t)}static get className(){return"SGD"}c;applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,s)=>{let a=Array.isArray(t)?t[s].tensor:t[o];if(a==null)return;let i=N.registeredVariables[o];z(()=>{let p=Z(P(this.c,a),i);i.assign(p)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=$t(ge(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,n){return new t(n.learningRate)}};var ql=class extends zu{constructor(t,n,o=!1){super(t);this.learningRate=t;this.momentum=n;this.useNesterov=o;this.m=ge(this.momentum)}static get className(){return"Momentum"}m;accumulations=[];applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,s)=>{let a=N.registeredVariables[o];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${o}/momentum`,variable:z(()=>_e(a).variable(!1))});let i=this.accumulations[s].variable,p=Array.isArray(t)?t[s].tensor:t[o];p!=null&&z(()=>{let u,l=Z(P(this.m,i),p);this.useNesterov?u=Z(P(this.c,Z(p,P(l,this.m))),a):u=Z(P(this.c,l),a),i.assign(l),a.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Me(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);let n=!1;this.accumulations=t.map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,n){return new t(n.learningRate,n.momentum,n.useNesterov)}};var jl=class extends Jr{constructor(t,n=.9,o=0,s=null,a=!1){super();this.learningRate=t;this.decay=n;this.momentum=o;this.epsilon=s;if(this.centered=a,s==null&&(this.epsilon=N.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}static get className(){return"RMSProp"}centered;accumulatedMeanSquares=[];accumulatedMoments=[];accumulatedMeanGrads=[];applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,s)=>{let a=N.registeredVariables[o],i=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${o}/rms`,variable:z(()=>_e(a).variable(i))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${o}/momentum`,variable:z(()=>_e(a).variable(i))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${o}/mg`,variable:z(()=>_e(a).variable(i))});let p=Array.isArray(t)?t[s].tensor:t[o];if(p==null)return;let u=this.accumulatedMeanSquares[s].variable,l=this.accumulatedMoments[s].variable;z(()=>{let m=Z(P(u,this.decay),P(Xe(p),1-this.decay));if(this.centered){let c=this.accumulatedMeanGrads[s].variable,d=Z(P(c,this.decay),P(p,1-this.decay)),f=fe(P(p,this.learningRate),Ot(ce(m,Z(Xe(d),this.epsilon)))),h=Z(P(l,this.momentum),f);u.assign(m),c.assign(d),l.assign(h);let g=ce(a,h);a.assign(g)}else{let c=Z(P(u,this.decay),P(Xe(p),1-this.decay)),d=Z(P(l,this.momentum),fe(P(p,this.learningRate),Ot(Z(c,this.epsilon))));u.assign(c),l.assign(d);let f=ce(a,d);a.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Me(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Me(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&Me(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){let t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(t){t=await this.extractIterations(t);let n=this.centered?t.length/3:t.length/2,o=!1;this.accumulatedMeanSquares=t.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})),this.accumulatedMoments=t.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})),this.centered&&(this.accumulatedMeanGrads=t.slice(n*2,n*3).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,n){return new t(n.learningRate,n.decay,n.momentum,n.epsilon,n.centered)}};var eee=[Ul,Kl,Vl,Hl,ql,jl,zu];function qM(){for(let r of eee)WA(r)}var Wr={};Ye(Wr,{browserFiles:()=>XM,browserHTTPRequest:()=>QM,concatenateArrayBuffers:()=>dc,copyModel:()=>g1,decodeWeights:()=>zb,encodeWeights:()=>e1,fromMemory:()=>JM,fromMemorySync:()=>jA,getLoadHandlers:()=>a1,getModelArtifactsForJSON:()=>fc,getModelArtifactsForJSONSync:()=>fA,getModelArtifactsInfoForJSON:()=>iu,getSaveHandlers:()=>s1,getWeightSpecs:()=>Wb,http:()=>Hy,isHTTPScheme:()=>Vy,listModels:()=>f1,loadWeights:()=>YM,moveModel:()=>b1,registerLoadRouter:()=>o1,registerSaveRouter:()=>n1,removeModel:()=>h1,weightsLoaderFactory:()=>HA,withSaveHandler:()=>eP,withSaveHandlerSync:()=>tP});var tee="model",ree=".json",nee=".weights.bin";function jM(r){return new Promise(e=>setTimeout(e)).then(r)}var Ky=class{modelJsonFileName;weightDataFileName;modelJsonAnchor;weightDataAnchor;constructor(e){if(!L().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ky.URL_SCHEME)&&(e=e.slice(Ky.URL_SCHEME.length)),(e==null||e.length===0)&&(e=tee),this.modelJsonFileName=e+ree,this.weightDataFileName=e+nee}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=Gb(e,n),s=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=s,await jM(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await jM(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:iu(e)}}}},Lc=Ky;q(Lc,"URL_SCHEME","downloads://");var UA=class{jsonFile;weightsFiles;constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=o=>{let s=JSON.parse(o.target.result),a=s.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let p=fc(s,u=>this.loadWeights(u));e(p)},n.onerror=o=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let o=this.checkManifestAndWeightFiles(e),s=n.map(a=>this.loadWeightsFile(a,o[a]));return Promise.all(s).then(a=>[t,dc(a)])}loadWeightsFile(e,t){return new Promise((n,o)=>{let s=new FileReader;s.onload=a=>{let i=a.target.result;n(i)},s.onerror=a=>o(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(s=>dA(s.name)),o={};for(let s of e)s.paths.forEach(a=>{let i=dA(a);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);o[a]=this.weightsFiles[n.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return o}},oee=r=>L().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(Lc.URL_SCHEME)?see(r.slice(Lc.URL_SCHEME.length)):null;Ar.registerSaveRouter(oee);function see(r="model"){return new Lc(r)}function XM(r){return new UA(r)}function KA(r,e,t,n){a(r),t=t??0,n=n??1,i(t,n);let o=0,s=p=>(p.then(u=>{let l=t+ ++o/r.length*(n-t);return e(l),u}),p);function a(p){D(p!=null&&Array.isArray(p)&&p.length>0,()=>"promises must be a none empty array")}function i(p,u){D(p>=0&&p<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${p}`),D(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),D(u>=p,()=>`startFraction must be no more than endFraction, but got startFraction ${p} and endFraction ${u}`)}return Promise.all(r.map(s))}async function VA(r,e){e==null&&(e={});let t=e.fetchFunc==null?L().platform.fetch:e.fetchFunc,n=r.map(m=>t(m,e.requestInit,{isBinary:!0})),o=0,s=.5,i=(e.onProgress==null?await Promise.all(n):await KA(n,e.onProgress,o,s)).map(m=>m.arrayBuffer()),p=.5,u=1;return e.onProgress==null?await Promise.all(i):await KA(i,e.onProgress,p,u)}async function YM(r,e="",t,n){return HA(a=>VA(a,{requestInit:n}))(r,e,t)}function HA(r){return async(e,t="",n)=>{let o=e.map(()=>!1),s={},a=n!=null?n.map(()=>!1):[],i=[];if(e.forEach((d,f)=>{let h=0;d.weights.forEach(g=>{let b="quantization"in g?g.quantization.dtype:g.dtype,x=Dh[b]*st(g.shape),T=()=>{o[f]=!0,s[f]==null&&(s[f]=[]),s[f].push({manifestEntry:g,groupOffset:h,sizeBytes:x})};n!=null?n.forEach((C,v)=>{C===g.name&&(T(),a[v]=!0)}):T(),i.push(g.name),h+=x})}),!a.every(d=>d)){let d=n.filter((f,h)=>!a[h]);throw new Error(`Could not find weights in manifest with names: ${d.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let p=o.reduce((d,f,h)=>(f&&d.push(h),d),[]),u=[];p.forEach(d=>{e[d].paths.forEach(f=>{let h=t+(t.endsWith("/")?"":"/")+f;u.push(h)})});let l=await r(u),m={},c=0;return p.forEach(d=>{let f=e[d].paths.length,h=0;for(let C=0;C<f;C++)h+=l[c+C].byteLength;let g=new ArrayBuffer(h),b=new Uint8Array(g),x=0;for(let C=0;C<f;C++){let v=new Uint8Array(l[c+C]);b.set(v,x),x+=v.byteLength}s[d].forEach(C=>{let v=g.slice(C.groupOffset,C.groupOffset+C.sizeBytes),A=zb(v,[C.manifestEntry]);for(let _ in A)m[_]=A[_]}),c+=f}),m}}var aee="application/octet-stream",iee="application/json",Uh=class{path;requestInit;fetch;weightUrlConverter;DEFAULT_METHOD="POST";weightPathPrefix;onProgress;constructor(e,t){if(t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(D(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=L().platform.fetch,D(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&D(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],o=Gb(e,n);t.body.append("model.json",new Blob([JSON.stringify(o)],{type:iee}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:aee}),"model.weights.bin");let s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:iu(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,o=t.weightsManifest;if(n==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return fc(t,s=>this.loadWeights(s))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,o]=uee(t),s=this.weightPathPrefix||n,a=Wb(e),i=[],p=[];for(let l of e)for(let m of l.paths)this.weightUrlConverter!=null?p.push(this.weightUrlConverter(m)):i.push(s+m+o);this.weightUrlConverter&&i.push(...await Promise.all(p));let u=await VA(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,dc(u)]}};q(Uh,"URL_SCHEME_REGEX",/^https?:\/\//);function uee(r){let e=r.lastIndexOf("/"),t=r.lastIndexOf("?"),n=r.substring(0,e),o=t>e?r.substring(t):"";return[n+"/",o]}function Vy(r){return r.match(Uh.URL_SCHEME_REGEX)!=null}var ZM=(r,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(r)?t=r.every(n=>Vy(n)):t=Vy(r),t)return Hy(r,e)}return null};Ar.registerSaveRouter(ZM);Ar.registerLoadRouter(ZM);function Hy(r,e){return new Uh(r,e)}function QM(r,e){return Hy(r,e)}var Kh=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},qy=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},qA=class{load;save;constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function JM(r,e,t,n){let o=arguments;return new qA(jA(...o))}function jA(r,e,t,n){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new Kh(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Kh({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Kh({modelTopology:r,weightSpecs:e,weightData:t,trainingConfig:n}))}function eP(r){return new qy(r)}function tP(r){return new qy(r)}var nP={};Ye(nP,{confusionMatrix:()=>rP});function pee(r,e,t){let n=S(r,"labels","confusionMatrix"),o=S(e,"predictions","confusionMatrix");D(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),D(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),D(o.rank===1,()=>`Expected the rank of predictions to be 1, but got ${o.rank}`),D(n.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),D(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);let s=Hp(ne(n,"int32"),t),a=Hp(ne(o,"int32"),t),i=je(s),p=qe(i,a);return ne(p,"int32")}var rP=w({confusionMatrix_:pee});var jy={};Ye(jy,{fromPixels:()=>gee,fromPixelsAsync:()=>fee,toPixels:()=>hee});var Xl;function oP(r,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,n=!1,o=!1,s=!1,a=!1,i=!1;if(r.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&r instanceof ImageData)n=!0;else if(typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement)s=!0;else if(r.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&r instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(Ih(Tl,N.backendName)!=null){let f={pixels:r},h={numChannels:e};return N.runKernel(Tl,f,h)}let[u,l]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],m;if(a)m=r.getContext("2d").getImageData(0,0,u,l).data;else if(n||t)m=r.data;else if(s||o||i){if(Xl==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Xl=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Xl=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Xl.canvas.width=u,Xl.canvas.height=l,Xl.drawImage(r,0,0,u,l),m=Xl.getImageData(0,0,u,l).data}let c;if(e===4)c=new Int32Array(m);else{let f=u*l;c=new Int32Array(f*e);for(let h=0;h<f;h++)for(let g=0;g<e;++g)c[h*e+g]=m[h*4+g]}return My(c,[l,u,e],"int32")}function lee(r){return r!=null&&r.data instanceof Uint8Array}function mee(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function cee(r){return r!=null&&r.width!==0&&r.height!==0}function dee(r){return mee()&&!(r instanceof ImageBitmap)&&cee(r)&&!lee(r)}async function fee(r,e=3){let t=null;if(L().getBool("WRAP_TO_IMAGEBITMAP")&&dee(r)){let n;try{n=await createImageBitmap(r,{premultiplyAlpha:"none"})}catch{n=null}n!=null&&n.width===r.width&&n.height===r.height?t=n:t=r}else t=r;return oP(t,e)}async function hee(r,e){let t=S(r,"img","toPixels");if(!(r instanceof He)){let u=t;t=ne(u,"int32"),u.dispose()}if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);let[n,o]=t.shape.slice(0,2),s=t.rank===2?1:t.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`);let a=await t.data(),i=t.dtype==="float32"?255:1,p=new Uint8ClampedArray(o*n*4);for(let u=0;u<n*o;++u){let l=[0,0,0,255];for(let c=0;c<s;c++){let d=a[u*s+c];if(t.dtype==="float32"){if(d<0||d>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${d}.`)}else if(t.dtype==="int32"&&(d<0||d>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${d}.`);s===1?(l[0]=d*i,l[1]=d*i,l[2]=d*i):l[c]=d*i}let m=u*4;p[m+0]=Math.round(l[0]),p[m+1]=Math.round(l[1]),p[m+2]=Math.round(l[2]),p[m+3]=Math.round(l[3])}if(e!=null){e.width=o,e.height=n;let u=e.getContext("2d"),l=new ImageData(p,o,n);u.putImageData(l,0,0)}return t!==r&&t.dispose(),p}var gee=w({fromPixels_:oP});var Xy={};Ye(Xy,{prepareAndValidate:()=>sP});function sP(r,e){let t=r.shape.length,n=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[n-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[n-1]} vs. ${t}`);if(st(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let o=e.shape,s=o[o.length-1],a=1;for(let m=0;m<o.length-1;++m)a*=o[m];let i=r.shape,p=o.slice();p.pop();let u=1;for(let m=s;m<t;++m)u*=i[m],p.push(i[m]);let l=[...ji(r.shape).map(m=>m/u),1].slice(0,s);return[p,a,u,l]}var vt={};Ye(vt,{assertParamsValid:()=>yee,computeFlatOffset:()=>kee,computeOutShape:()=>Tee,getNormalizedAxes:()=>Cee,isSliceContinous:()=>Iee,maskToAxes:()=>xee,parseSliceParams:()=>YA,sliceInfo:()=>vee,startForAxis:()=>dP,startIndicesWithElidedDims:()=>lP,stopForAxis:()=>fP,stopIndicesWithElidedDims:()=>mP,stridesForAxis:()=>cP,stridesWithElidedDims:()=>iP});var XA=-2,bee=-1;function yee(r,e,t){let n=r.shape.length;D(n===e.length,()=>`Error in slice${n}D: Length of begin ${e} must match the rank of the array (${n}).`),D(n===t.length,()=>`Error in slice${n}D: Length of size ${t} must match the rank of the array (${n}).`);for(let o=0;o<n;++o)D(e[o]+t[o]<=r.shape[o],()=>`Error in slice${n}D: begin[${o}] + size[${o}] (${e[o]+t[o]}) would overflow input.shape[${o}] (${r.shape[o]})`)}function xee(r){let e=[],t=0;for(;r>0;)r&1&&e.push(t),r/=2,t++;return e}function Tee(r,e,t){let n=[];for(let o=0;o<r.length;o++)n[o]=Math.ceil((e[o]-r[o])/t[o]);return n}function iP(r,e,t,n){let o=[...r];for(let s=o.length;s<n.length;s++)o.push(1);for(let s=0;s<t;s++)s===0?o[e]=1:(o.splice(e,0,1),o.pop());return o}function uP(r,e,t){return t<=r?t:t-(e-1)}function pP(r,e){let t=[];for(let n=0;n<r;n++)t.push(e+n);return t}function Cee(r,e,t,n,o,s,a,i,p){let u=r.length,l=new Array(u),m=new Array(u),c=new Array(u);if(e.length&&t>0){let d=e[0],f=t+1;l=lP(a,d,f,n,r),m=mP(i,d,f,o,r),c=iP(s,d,f,r)}else for(let d=0;d<u;d++)l[d]=dP(a,n,s,r,d,p),m[d]=fP(i,o,s,r,d,p),c[d]=cP(s,d,p);return{begin:l,end:m,strides:c}}function lP(r,e,t,n,o){let s=[...o],a=pP(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=0;else{let p=uP(e,t,i),u=n[p];r&1<<p&&(u=0),s[i]=u}return s}function mP(r,e,t,n,o){let s=[...o],a=pP(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{let p=uP(e,t,i),u=n[p];r&1<<p&&(u=Number.MAX_SAFE_INTEGER),s[i]=u}for(let i=0;i<s.length;i++){let p=o[i];s[i]<0&&(s[i]+=p),s[i]=ec(0,s[i],o[i])}return s}function cP(r,e,t){let n=r[e];return(t&1<<e||n==null)&&(n=1),n}function dP(r,e,t,n,o,s){let a=e[o],i=t[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);let p=n[o];return a<0&&(a+=p),a=ec(0,a,p-1),a}function fP(r,e,t,n,o,s){let a=e[o],i=t[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);let p=n[o];return a<0&&(a+=p),i>0?a=ec(0,a,p):a=ec(-1,a,p-1),a}function Iee(r,e,t){let n=t.length;for(let o=0;o<t.length;o++)if(t[o]>1){n=o;break}for(let o=n+1;o<t.length;o++)if(e[o]>0||t[o]!==r[o])return!1;return!0}function kee(r,e){let t=r.length>0?r[r.length-1]:1;for(let n=0;n<r.length-1;n++)t+=r[n]*e[n];return t}function YA(r,e,t){let n,o=r.shape.length;typeof e=="number"?n=[e,...new Array(o-1).fill(0)]:e.length<o?n=e.concat(new Array(o-e.length).fill(0)):n=e.slice(),n.forEach(a=>{D(a!==-1,()=>"slice() does not support negative begin indexing.")});let s;return t==null?s=new Array(o).fill(-1):typeof t=="number"?s=[t,...new Array(o-1).fill(-1)]:t.length<o?s=t.concat(new Array(o-t.length).fill(-1)):s=t,s=s.map((a,i)=>a>=0?a:(D(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),r.shape[i]-n[i])),[n,s]}function vee(r,e,t,n,o,s,a,i,p){let u;if(n==null?(u=new Array(e.length),u.fill(1)):u=n,a!=null&&a&a-1)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1,m={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:u.slice(),beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:p};for(let T=0;T<m.dims;T++)l&&1<<T&i&&m.numAddAxisAfterEllipsis++,1<<T&a&&(l=!0);l||(m.ellipsisMask|=1<<m.dims,m.dims++);let c={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};See(m,c);let d=!0,f=!0,h=!0,g=[],b=[];for(let T=0;T<r.length;++T){if(c.strides[T]===0)throw Error(`strides[${T}] must be non-zero`);let C=!!(c.shrinkAxisMask&1<<T),v=r[T];if(v===-1){g.push(C?1:-1);continue}let A=[c.beginMask&1<<T,c.endMask&1<<T],_=[c.strides[T]>0?0:-1,c.strides[T]>0?v:v-1];if(C&&c.strides[T]<=0)throw Error("only stride 1 allowed on non-range indexing.");h=h&&c.strides[T]===1;let R=!!(c.beginMask&1<<T&&c.endMask&1<<T);if(c.beginValid&&c.endValid){if(C){let G=c.begin[T]<0?v+c.begin[T]:c.begin[T];if(c.begin[T]=G,c.end[T]=c.begin[T]+1,G<0||G>=v)throw Error(`slice index ${c.begin[T]} of dimension ${T} out of bounds.`)}else c.begin[T]=aP(c.begin[T],0,c.strides[T],v,A,_),c.end[T]=aP(c.end[T],1,c.strides[T],v,A,_);let O=c.strides[T]===1&&c.begin[T]===0&&c.end[T]===v;d=d&&O,f=f&&(T===0&&c.strides[T]===1||O)}else d=d&&c.strides[T]===1&&R,f=f&&(T===0&&c.strides[T]===1||R);let M,F=!1;if(c.beginValid&&c.endValid?(M=c.end[T]-c.begin[T],F=!0):C?(M=1,F=!0):R&&v>=0&&(c.strides[T]<0?M=-v:M=v,F=!0),F){let O;M===0||M<0!=c.strides[T]<0?O=0:O=Math.trunc(M/c.strides[T])+(M%c.strides[T]!==0?1:0),g.push(O)}else g.push(-1)}for(let T=0;T<c.finalShapeGatherIndices.length;++T){let C=c.finalShapeGatherIndices[T];C>=0?b.push(g[C]):C===XA&&b.push(1)}return{finalShapeSparse:b.filter((T,C)=>c.finalShapeGatherIndices[C]!==XA),finalShape:b,isIdentity:d,sliceDim0:f,isSimpleSlice:h,begin:c.begin,end:c.end,strides:c.strides}}function See(r,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=r.begin!=null,e.endValid=r.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let n=0;n<r.dims;n++)if(1<<n&r.ellipsisMask){let o=Math.min(e.dims-(r.dims-n)+1+r.numAddAxisAfterEllipsis,e.dims);for(;t<o;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=n}else if(1<<n&r.newAxisMask)e.finalShapeGatherIndices.push(XA),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);r.begin!=null&&(e.begin[t]=r.begin[n]),r.end!=null&&(e.end[t]=r.end[n]),e.strides[t]=r.strides[n],r.beginMask&1<<n&&(e.beginMask|=1<<t),r.endMask&1<<n&&(e.endMask|=1<<t),r.shrinkAxisMask&1<<n?(e.finalShapeGatherIndices.push(bee),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(n)),e.inputShapeGatherIndicesSparse[t]=n,t++}}function aP(r,e,t,n,o,s){if(o[e])return t>0?s[e]:s[e+1&1];{let a=r<0?n+r:r;return a<s[0]?s[0]:a>s[1]?s[1]:a}}var wee="0.0.0";var Vh=class{static sgd(e){return new zu(e)}static momentum(e,t,n=!1){return new ql(e,t,n)}static rmsprop(e,t=.9,n=0,o=null,s=!1){return new jl(e,t,n,o,s)}static adam(e=.001,t=.9,n=.999,o=null){return new Vl(e,t,n,o)}static adadelta(e=.001,t=.95,n=null){return new Ul(e,t,n)}static adamax(e=.002,t=.9,n=.999,o=null,s=0){return new Hl(e,t,n,o,s)}static adagrad(e,t=.1){return new Kl(e,t)}};var Yl=Vh;var Aee=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:r=>r())();function Hh(){return new Promise(r=>Aee(()=>r()))}var I={};Ye(I,{ERF_A1:()=>Wee,ERF_A2:()=>Uee,ERF_A3:()=>Kee,ERF_A4:()=>Vee,ERF_A5:()=>Hee,ERF_P:()=>Gee,PARALLELIZE_THRESHOLD:()=>Yy,RowPartitionType:()=>hP,SELU_SCALE:()=>QA,SELU_SCALEALPHA:()=>ZA,applyActivation:()=>zl,assertAndGetBroadcastShape:()=>Ge,assertAxesAreInnerMostDims:()=>cQ,assertParamsConsistent:()=>Nee,assignToTypedArray:()=>Qee,axesAreInnerMostDims:()=>SA,calculateShapes:()=>JR,checkEinsumDimSizes:()=>ote,checkPadOnDimRoundingMode:()=>Pt,combineLocations:()=>K1,combineRaggedTensorToTensorShapes:()=>_ee,complexWithEvenIndex:()=>Xee,complexWithOddIndex:()=>Yee,computeConv2DInfo:()=>Al,computeConv3DInfo:()=>_1,computeDefaultPad:()=>vA,computeDilation2DInfo:()=>dZ,computeOptimalWindowSize:()=>Fee,computeOutAndReduceShapes:()=>wA,computeOutShape:()=>Dee,computePool2DInfo:()=>kA,computePool3DInfo:()=>fZ,convertConv2DDataFormat:()=>R1,decodeEinsumEquation:()=>rte,eitherStridesOrDilationsAreOne:()=>zr,expandShapeToKeepDim:()=>ga,exponent:()=>ete,exponents:()=>Jee,fromStringArrayToUint8:()=>Ste,fromUint8ToStringArray:()=>vte,getAxesPermutation:()=>AA,getBroadcastDims:()=>O1,getComplexWithIndex:()=>Zee,getEinsumComputePath:()=>ste,getEinsumPermutation:()=>nte,getFusedBiasGradient:()=>Ol,getFusedDyActivation:()=>$l,getImageCenter:()=>Eee,getInnerMostAxes:()=>dQ,getPermuted:()=>Bee,getRaggedRank:()=>Mee,getReductionAxes:()=>Dt,getReshaped:()=>Lee,getReshapedPermuted:()=>$ee,getRowPartitionTypesHelper:()=>Ree,getSliceBeginCoords:()=>Oee,getSliceSize:()=>zee,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>pte,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>lte,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>mte,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>fte,getSparseReshapeInputOutputMismatchErrorMessage:()=>gte,getSparseReshapeInputOutputMultipleErrorMessage:()=>hte,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>cte,getSparseReshapeNegativeOutputDimErrorMessage:()=>dte,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Tte,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>bte,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>yte,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>xte,getUndoAxesPermutation:()=>Lh,isIdentityPermutation:()=>ate,log:()=>uY,mergeRealAndImagArrays:()=>qee,prepareAndValidate:()=>sP,prepareSplitSize:()=>ute,segment_util:()=>eN,shouldFuse:()=>Gl,slice_util:()=>vt,splitRealAndImagArrays:()=>jee,stridesOrDilationsArePositive:()=>lu,tupleValuesAreOne:()=>Ms,upcastType:()=>Nt,validateDefaultValueShape:()=>Pee,validateInput:()=>Pc,validateUpdateShape:()=>BA,warn:()=>au});function Nee(r,e){let t=r[0].length;r.forEach((o,s)=>{D(o.length===t,()=>`Error in concat${t}D: rank of tensors[${s}] must be the same as the rank of the rest (${t})`)}),D(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);let n=r[0];r.forEach((o,s)=>{for(let a=0;a<t;a++)D(a===e||o[a]===n[a],()=>`Error in concat${t}D: Shape of tensors[${s}] (${o}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function Dee(r,e){let t=r[0].slice();for(let n=1;n<r.length;n++)t[e]+=r[n][e];return t}var hP=(a=>(a[a.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",a[a.VALUE_ROWIDS=1]="VALUE_ROWIDS",a[a.ROW_LENGTHS=2]="ROW_LENGTHS",a[a.ROW_SPLITS=3]="ROW_SPLITS",a[a.ROW_LIMITS=4]="ROW_LIMITS",a[a.ROW_STARTS=5]="ROW_STARTS",a))(hP||{});function _ee(r,e,t){let n=new Array;if(t==null&&e==null)return n;if(e==null)for(;n.length<r+t.length;)n.push(-1);else n=e.slice();if(t==null)return n;if(r+t.length!==n.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${r+t.length}, but shape.rank = ${n.length}`);for(let o=1;o<t.length;++o){let s=t[o],a=n[n.length-t.length+o],i=n[a];if(s>=0)if(i>=0){if(i!==s)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${o+r}] = ${s} but shape[${o+r}] = ${i}`)}else n[a]=s}return n}function Ree(r){let e={FIRST_DIM_SIZE:0,VALUE_ROWIDS:1,ROW_LENGTHS:2,ROW_SPLITS:3,ROW_LIMITS:4,ROW_STARTS:5},t=[];for(let n of r)if(n in e)t.push(e[n]);else break;return t}function Mee(r){return r.length===0?0:r[0]===0?r.length-1:r.length}function Pee(r,e){if(r==null||e==null)return;let t=r.length,n=e.length;if(t>=n)throw new Error(`defaultValue.shape=${r} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${n})`);for(let o=0;o<Math.min(t,n-1);++o){let s=r[o],a=e[o+1];if(s>=0&&a>=0&&s!==1&&s!==a)throw new Error(`defaultValue.shape=${r}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${o-r.length}] = ${s} but ragged tensor input.flatValues.shape[${o-r.length}] = ${a}`)}}var Yy=30;function Fee(r){return r<=Yy?r:rc(r,Math.floor(Math.sqrt(r)))}function Eee(r,e,t){let n=t*(typeof r=="number"?r:r[0]),o=e*(typeof r=="number"?r:r[1]);return[n,o]}function Lee(r,e,t,n=!0){let o=[];if(n)o=o.concat(e.slice(0)),o.push(r[0]/t),o=o.concat(r.slice(1));else{o=o.concat(r[0]);let s=e.length;for(let a=0;a<s;++a)o=o.concat([r[a+1]/e[a],e[a]]);o=o.concat(r.slice(s+1))}return o}function Bee(r,e,t=!0){let n=[];if(t){n.push(e);for(let o=e+1;o<r;++o)o<=2*e?(n.push(o),n.push(o-(e+1))):n.push(o)}else{let o=[],s=[];for(let a=1;a<r;++a)a>=e*2+1||a%2===1?s.push(a):o.push(a);n.push(...o),n.push(0),n.push(...s)}return n}function $ee(r,e,t,n=!0){let o=[];n?o.push(r[0]/t):o.push(r[0]*t);for(let s=1;s<r.length;++s)s<=e.length?n?o.push(e[s-1]*r[s]):o.push(r[s]/e[s-1]):o.push(r[s]);return o}function Oee(r,e){let t=[0];for(let n=0;n<e;++n)t.push(r[n][0]);return t}function zee(r,e,t){let n=r.slice(0,1);for(let o=0;o<t;++o)n.push(r[o+1]-e[o][0]-e[o][1]);return n}var ZA=1.7580993408473768,QA=1.0507009873554805;var Gee=.3275911,Wee=.254829592,Uee=-.284496736,Kee=1.421413741,Vee=-1.453152027,Hee=1.061405429;function qee(r,e){if(r.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${e.length}.`);let t=new Float32Array(r.length*2);for(let n=0;n<t.length;n+=2)t[n]=r[n/2],t[n+1]=e[n/2];return t}function jee(r){let e=new Float32Array(r.length/2),t=new Float32Array(r.length/2);for(let n=0;n<r.length;n+=2)e[n/2]=r[n],t[n/2]=r[n+1];return{real:e,imag:t}}function Xee(r){let e=Math.ceil(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=0;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function Yee(r){let e=Math.floor(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=2;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function Zee(r,e){let t=r[e*2],n=r[e*2+1];return{real:t,imag:n}}function Qee(r,e,t,n){r[n*2]=e,r[n*2+1]=t}function Jee(r,e){let t=new Float32Array(r/2),n=new Float32Array(r/2);for(let o=0;o<Math.ceil(r/2);o++){let s=(e?2:-2)*Math.PI*(o/r);t[o]=Math.cos(s),n[o]=Math.sin(s)}return{real:t,imag:n}}function ete(r,e,t){let n=(t?2:-2)*Math.PI*(r/e),o=Math.cos(n),s=Math.sin(n);return{real:o,imag:s}}var JA="->",tte=/->/g,gP=",",bP="...";function rte(r,e){r=r.replace(/\s/g,"");let t=(r.length-r.replace(tte,"").length)/JA.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${JA}").`);let[n,o]=r.split(JA);D(n.indexOf(bP)===-1,()=>`The ellipsis notation ("${bP}") is not supported yet.`);let s=n.split(gP),a=s.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let c=0;c<o.length;++c){let d=o[c];if(!s.some(f=>f.indexOf(d)!==-1))throw new Error(`Output subscripts contain the label ${d} not present in the input subscripts.`);i.indexOf(d)===-1&&i.push(d)}for(let c=0;c<n.length;++c){let d=n[c];i.indexOf(d)===-1&&d!==gP&&i.push(d)}let p=new Array(s.length);for(let c=0;c<a;++c){if(new Set(s[c].split("")).size!==s[c].length)throw new Error(`Found duplicate axes in input component ${s[c]}. Support for duplicate axes in input is not implemented yet.`);p[c]=[];for(let d=0;d<s[c].length;++d)p[c].push(i.indexOf(s[c][d]))}let u=i.length,l=o.length,m=[];for(let c=l;c<u;++c)m.push(c);return{allDims:i,summedDims:m,idDims:p}}function nte(r,e){let t=new Array(r);t.fill(-1);for(let o=0;o<e.length;++o)t[e[o]]=o;let n=[];for(let o=0;o<r;++o)t[o]===-1&&n.push(o);return t=t.filter(o=>o!==-1),{permutationIndices:t,expandDims:n}}function ote(r,e,t){let n=new Array(r);for(let o=0;o<t.length;++o){let s=t[o].shape;for(let a=0;a<e[o].length;++a)n[e[o][a]]===void 0?n[e[o][a]]=s[a]:D(n[e[o][a]]===s[a],()=>`Expected dimension ${n[e[o][a]]} at axis ${a} of input shaped ${JSON.stringify(s)}, but got dimension ${s[a]}`)}}function ste(r,e){let t=r,n=[],o=0;r.length===0&&t.push(-1),o=r.length+1;for(let a=0;a<o;++a)n.push([]);let s=[];for(let a=0;a<t.length;++a){let i=t[a],p=ite(e,i);for(let u of p)s.indexOf(u)===-1&&(n[a].push(u),s.push(u))}return{path:t,steps:n}}function ate(r){return r.every((e,t)=>e===t)}function ite(r,e){let t=[];for(let n=0;n<r.length;++n)(r[n].length===0||r[n].indexOf(e)!==-1||e===-1)&&t.push(n);return t}function ute(r,e,t=0){let n=[];if(typeof e=="number")D(r.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),n=new Array(e).fill(r.shape[t]/e);else{let o=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);D(o<=1,()=>"There should be only one negative value in split array.");let s=e.indexOf(-1);if(s!==-1){let a=e.reduce((i,p)=>p>0?i+p:i);e[s]=r.shape[t]-a}D(r.shape[t]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),n=e}return n}function pte(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function lte(r,e){return`indices(${r}, 0) is invalid: ${e} < 0`}function mte(r,e,t){return`indices(${r}, 0) is invalid: ${e} >= ${t}`}function cte(r,e){return`only one output dimension may be -1, not both ${r} and ${e}`}function dte(r,e){return`size ${r} must be non-negative, not ${e}`}function fte(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function hte(r,e){let t=st(r),n=st(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${r} outputShape= ${e}`}function gte(r,e){let t=st(r),n=st(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${n}. inputShape=${r} outputShape=${e}`}function bte(){return"segment ids must be >= 0"}function yte(){return"segment ids are not increasing"}function xte(r,e){return`Segment id ${r} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function Tte(r,e,t){return`Bad: indices[${r}] == ${e} out of range [0, ${t})`}var eN={};Ye(eN,{collectGatherOpShapeInfo:()=>kte,computeOutShape:()=>Ite,segOpComputeOptimalWindowSize:()=>Cte});function Cte(r,e){let t=!1,n;for(r<=Yy?(n=r,t=!0):n=rc(r,Math.floor(Math.sqrt(r)));!t;)n>e||n===r?t=!0:n=rc(r,n+1);return n}function Ite(r,e,t){let n=[],o=r.length;for(let s=0;s<o;s++)s!==e?n.push(r[s]):n.push(t);return n}function kte(r,e,t,n){let o=e.shape.length,s=r.shape.length;if(n!==0&&(n<-o||n>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${n}`);if(n<0&&(n+=o),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(t<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${t}).`);for(let m=0;m<n;++m)if(r.shape[m]!==e.shape[m])throw new Error(`x.shape[${m}]: ${r.shape[m]} should be equal to indices.shape[${m}]: ${e.shape[m]}.`);let a=r.shape[t],i=[],p=1,u=1,l=1;for(let m=0;m<n;++m)i.push(r.shape[m]),p*=r.shape[m];for(let m=n;m<t;m++)i.push(r.shape[m]),u*=r.shape[m];for(let m=n;m<o;m++)i.push(e.shape[m]);for(let m=t+1;m<s;m++)i.push(r.shape[m]),l*=r.shape[m];return{batchSize:p,sliceSize:l,outerSize:u,dimSize:a,outputShape:i}}function vte(r){try{return r.map(e=>mc(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Ste(r){return r.map(e=>Pp(e))}var kr={};Ye(kr,{nonMaxSuppressionV3Impl:()=>Gy,nonMaxSuppressionV4Impl:()=>Wy,nonMaxSuppressionV5Impl:()=>Uy,whereImpl:()=>Ey});qM();var En=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,En.prototype)}},en=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,en.prototype)}},$=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,$.prototype)}},Re=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Re.prototype)}},Bc=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Bc.prototype)}};var qh=class{cache;maxEntries;constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=e}};function Ia(r,e){if(Array.isArray(r)){let t=[];for(let n=0;n<e;n++)t=t.concat(r);return t}else{let t=new Array(e);return t.fill(r),t}}function Ls(r,e){if(!r)throw new Bc(e)}function rN(r,e){let t=0;for(let n of r)n===e&&t++;return t}function Er(r){return r.length===1?r[0]:r}function _t(r){return Array.isArray(r)?r:[r]}function ka(r){let t=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Gu(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}var Ca={};function $c(r){if(r==null)return null;let e={};return e.className=r.getClassName(),e.config=r.getConfig(),e}function tN(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(e=>tN(e));else{let e=Object.keys(r);for(let t of e){let n=r[t];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?r[t]=n.value:tN(n))}}}function du(r,e={},t={},n="object",o=!1){if(typeof r=="string"){let s=r,a;if(s in t)a=t[s];else if(s in Ca)a=Ca[s];else if(a=e[s],a==null)throw new $(`Unknown ${n}: ${r}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{let s=r;if(s.className==null||s.config==null)throw new $(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let a=s.className,i,p;if(a in t?[i,p]=t[a]:a in Ca?[i,p]=Ca.className:a in e&&([i,p]=e[a]),i==null)throw new $(`Unknown ${n}: ${a}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(p!=null){let u={};for(let d of Object.keys(Ca))u[d]=Ca[d];for(let d of Object.keys(t))u[d]=t[d];let l=s.config;l.customObjects=u;let m={...Ca};for(let d of Object.keys(t))Ca[d]=t[d];tN(s.config);let c=p(i,s.config,t,o);return Ca={...m},c}else{let u={...Ca};for(let m of Object.keys(t))Ca[m]=t[m];let l=new i(s.config);return Ca={...u},l}}}function wte(r,e){return r<e?-1:r>e?1:0}function jh(r,e){return-1*wte(r,e)}function va(r){if(r==null)return r;let e=[];for(let t of r)e.indexOf(t)===-1&&e.push(t);return e}function yP(r){if(r==null)throw new $(`Invalid value in obj: ${JSON.stringify(r)}`);for(let e in r)if(r.hasOwnProperty(e))return!1;return!0}function fu(r,e,t){if(t!=null&&r.indexOf(t)<0)throw new $(`${t} is not a valid ${e}.  Valid values are ${r} or null/undefined.`)}function Zy(r,e,t=0,n=1/0){return Ls(t>=0),Ls(n>=t),Array.isArray(r)&&r.length>=t&&r.length<=n&&r.every(o=>typeof o===e)}function ar(r,e){Array.isArray(r)?(y.assert(r.length>0,()=>`${e} is unexpectedly an empty array.`),r.forEach((t,n)=>ar(t,`element ${n+1} of ${e}`))):y.assert(Number.isInteger(r)&&r>0,()=>`Expected ${e} to be a positive integer, but got ${xP(r)}.`)}function xP(r){return r===null?"null":Array.isArray(r)?"["+r.map(e=>xP(e)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function TP(r,e,t){let n=t!=null?t():y.now(),o;return(...a)=>{let i=t!=null?t():y.now();return i-n<e||(n=i,o=r(...a)),o}}function Qy(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}var Ate=0;function ex(){return Ate++}var Jy={};function Xp(r=""){return r in Jy||(Jy[r]=0),Jy[r]+=1,r+Jy[r].toString()}var CP=["channelsFirst","channelsLast"],IP=["nearest","bilinear"],kP=["valid","same","causal"],vP=["max","avg"],SP=["sum","mul","concat","ave"];var Oc=new Map;function Ut(r){fu(CP,"DataFormat",r)}function AP(r){fu(IP,"InterpolationFormat",r)}function Tn(r){fu(kP,"PaddingMode",r)}function nN(r){fu(vP,"PoolMode",r)}var Xh=[],wP="/";function Di(r,e){Xh.push(r);try{let t=e();return Xh.pop(),t}catch(t){throw Xh.pop(),t}}function Nte(){return Xh.length===0?"":Xh.join(wP)+wP}function tx(r){if(!NP(r))throw new Error("Not a valid tensor name: '"+r+"'");return Nte()+r}function rx(r){if(!NP(r))throw new Error("Not a valid tensor name: '"+r+"'");Oc.has(r)||Oc.set(r,0);let e=Oc.get(r);if(Oc.set(r,Oc.get(r)+1),e>0){let t=`${r}_${e}`;return Oc.set(t,1),t}else return r}var Dte=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function NP(r){return!!r.match(Dte)}function DP(r){return r===parseInt(r.toString(),10)}function Sa(r,e,t){e==null&&(e=0),t==null&&(t=r.length);let n=1;for(let o=e;o<t;++o)n*=r[o];return n}function Zl(r){if(r.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n<e&&(e=n)}return e}function _i(r){if(r.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n>e&&(e=n)}return e}function Cn(r,e){if(e<r)throw new $(`end (${e}) < begin (${r}) is forbidden.`);let t=[];for(let n=r;n<e;++n)t.push(n);return t}var oN;function hr(){return oN==null&&(oN=T1().epsilon()),oN}function In(){return"channelsLast"}function ln(r,e){return ne(r,e)}function Uu(r,e=-1){let t=r.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),E(r,t)}function _P(r,e){return z(()=>{if(r.shape.length!==2)throw new $(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let t=Uu(r,1);return ox(t,[1,e,1])})}function RP(r){let e=[Sa(r.shape)];return E(r,e)}function MP(r){if(r.rank<=1)throw new $(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let e=[r.shape[0],Sa(r.shape,1)];return E(r,e)}function Wu(r,e,t){return z(()=>{switch(r.rank){case 1:return Nc(r,e,t);case 2:return Oh(r,[e,0],[t,r.shape[1]]);case 3:return Dc(r,[e,0,0],[t,r.shape[1],r.shape[2]]);case 4:return Ll(r,[e,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3]]);case 5:return Ue(r,[e,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return Ue(r,[e,0,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new $(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function sN(r,e,t){return z(()=>{switch(r.rank){case 1:return Nc(r,e,t);case 2:return Oh(r,[0,e],[r.shape[0],t]);case 3:return Dc(r,[0,0,e],[r.shape[0],r.shape[1],t]);case 4:return Ll(r,[0,0,0,e],[r.shape[0],r.shape[1],r.shape[2],t]);default:throw new $(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Yh(r,e,t,n){return z(()=>{switch(r.rank){case 1:return Nc(r,e,t);case 2:switch(n){case 1:return Wu(r,e,t);case 2:return sN(r,e,t);default:throw new $(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return Wu(r,e,t);case 2:return Dc(r,[0,e,0],[r.shape[0],t,r.shape[2]]);case 3:return sN(r,e,t);default:throw new $(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return Wu(r,e,t);case 2:return Ll(r,[0,e,0,0],[r.shape[0],t,r.shape[2],r.shape[3]]);case 3:return Ll(r,[0,0,e,0],[r.shape[0],r.shape[1],t,r.shape[3]]);case 4:return sN(r,e,t);default:throw new $(`The axis is not within the rank of the tensor ${n}`)}default:throw new $(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function zc(r,e=-1){let t;return e<0&&(t=r[0].rank,t!==0?e=t:e=0),e===r[0].rank&&(e=-1),gt(r,e)}function iN(r,e){switch(r.rank){case 1:return ey([r,e]);case 2:return ty([r,e],0);case 3:return ry([r,e],0);case 4:return ny([r,e],0);default:throw new $(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function ox(r,e){if(Array.isArray(e)||(e=[e]),r.rank!==e.length)throw new $(`The length of input n (${e.length}) does not match the number of dimensions in input x (${r.rank})`);return an(r,e)}function Gc(r,e=0,t=1,n,o){return El(r,e,t,n,o)}function wa(r,e,t,n){if(r.rank<2||e.rank<2)throw new Re(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${e.shape}`);if(e.rank>=3){let o=r.shape.slice(-1)[0],s=e.shape.slice(-2)[0];if(o!==s)throw new Re(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${e.shape}`)}if(r.rank===2&&e.rank===2)return jp.matMul({a:r,b:e,transposeA:!1,transposeB:!1,bias:n?aN(r.rank,n,In()):null,activation:t});{let o=r.shape.slice(),s=o.pop();r=E(r,[-1,s]);let a=e.shape.slice(),i=a.pop(),p=a.pop(),u=[...a,i],l=Array.from({length:e.rank},(f,h)=>h===0?e.rank-2:h<=e.rank-2?h-1:h);e=E(je(e,l),[p,-1]);let m=[...o,...u],c=!1,d=!1;return E(jp.matMul({a:r,b:e,transposeA:c,transposeB:d,bias:n?aN(r.rank,n,In()):null,activation:t}),m)}}function sx(r,e,t){return z(()=>(Array.isArray(e)?e=er(e,"int32"):e=ne(e,"int32"),Kp(r,e,t)))}function Ql(r){return P(r,r)}function aN(r,e,t){let n=e.shape;if(e.rank!==1&&e.rank!==r)throw new $(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${r}`);if(r===5){if(t==="channelsFirst")return n.length===1?E(e,[1,n[0],1,1,1]):E(e,[1,n[3],n[0],n[1],n[2]]);if(t==="channelsLast")return n.length===1?E(e,[1,1,1,1,n[0]]):E(e,[1].concat(n))}else if(r===4){if(t==="channelsFirst")return n.length===1?E(e,[1,n[0],1,1]):E(e,[1,n[2],n[0],n[1]]);if(t==="channelsLast")return n.length===1?E(e,[1,1,1,n[0]]):E(e,[1].concat(n))}else if(r===3){if(t==="channelsFirst")return n.length===1?E(e,[1,n[0],1]):E(e,[1,n[1],n[0]]);if(t==="channelsLast")return n.length===1?E(e,[1,1,n[0]]):E(e,[1].concat(n))}else if(r<3)return e;throw new $(`Unsupported input rank by biasAdd: ${e.rank}`)}function kn(r,e,t){return z(()=>(t==null&&(t=In()),Ut(t),Z(r,aN(r.rank,e,t))))}function PP(r,e=1){if(e!==1)throw new Re(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Wp(r)}function FP(r){return z(()=>fe(r,Z(Wt(r),1)))}function ax(r,e,t,n){return z(()=>$A(r,e,t,n))}function EP(r){return z(()=>{let e=Z(.5,P(.2,r));return Xr(e,0,1)})}function Yp(r,e,t=!1){return t?r():e()}var LP=["fanIn","fanOut","fanAvg"],BP=["normal","uniform","truncatedNormal"];function _te(r){fu(LP,"FanMode",r)}function Rte(r){fu(BP,"Distribution",r)}var vn=class extends ee.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Wc=class extends vn{apply(e,t){return kt(e,t)}};q(Wc,"className","Zeros");ee.registerClass(Wc);var Zp=class extends vn{apply(e,t){return Ir(e,t)}};q(Zp,"className","Ones");ee.registerClass(Zp);var Uc=class extends vn{value;constructor(e){if(super(),typeof e!="object")throw new $(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new $(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return z(()=>P(ge(this.value),Ir(e,t)))}getConfig(){return{value:this.value}}};q(Uc,"className","Constant");ee.registerClass(Uc);var Kc=class extends vn{DEFAULT_MINVAL=-.05;DEFAULT_MAXVAL=.05;minval;maxval;seed;constructor(e){super(),this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return ya(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};q(Kc,"className","RandomUniform");ee.registerClass(Kc);var Vc=class extends vn{DEFAULT_MEAN=0;DEFAULT_STDDEV=.05;mean;stddev;seed;constructor(e){super(),this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Re(`randomNormal does not support dType ${t}.`);return Gc(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};q(Vc,"className","RandomNormal");ee.registerClass(Vc);var Hc=class extends vn{DEFAULT_MEAN=0;DEFAULT_STDDEV=.05;mean;stddev;seed;constructor(e){super(),this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Re(`truncatedNormal does not support dType ${t}.`);return Fc(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};q(Hc,"className","TruncatedNormal");ee.registerClass(Hc);var qc=class extends vn{gain;constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return z(()=>{if(e.length!==2||e[0]!==e[1])throw new $("Identity matrix initializer can only be used for 2D square matrices.");return P(this.gain,_l(e[0]))})}getConfig(){return{gain:this.gain}}};q(qc,"className","Identity");ee.registerClass(qc);function Mte(r,e="channelsLast"){let t,n;if(Ut(e),r.length===2)t=r[0],n=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(e==="channelsFirst"){let o=Sa(r,2);t=r[1]*o,n=r[0]*o}else if(e==="channelsLast"){let o=Sa(r,0,r.length-2);t=r[r.length-2]*o,n=r[r.length-1]*o}}else{let o=Sa(r);t=Math.sqrt(o),n=Math.sqrt(o)}return[t,n]}var tn=class extends vn{scale;mode;distribution;seed;constructor(e){if(super(),e.scale<0)throw new $(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,_te(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,Rte(this.distribution),this.seed=e.seed}apply(e,t){let n=Mte(e),o=n[0],s=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,o):this.mode==="fanOut"?a/=Math.max(1,s):a/=Math.max(1,(o+s)/2),this.distribution==="normal"){let i=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Re(`${this.getClassName()} does not support dType ${t}.`);return Fc(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*a);return ya(e,-i,i,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};q(tn,"className","VarianceScaling");ee.registerClass(tn);var Jl=class extends tn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return tn.className}};q(Jl,"className","GlorotUniform");ee.registerClass(Jl);var em=class extends tn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return tn.className}};q(em,"className","GlorotNormal");ee.registerClass(em);var tm=class extends tn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return tn.className}};q(tm,"className","HeNormal");ee.registerClass(tm);var rm=class extends tn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return tn.className}};q(rm,"className","HeUniform");ee.registerClass(rm);var nm=class extends tn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return tn.className}};q(nm,"className","LeCunNormal");ee.registerClass(nm);var om=class extends tn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return tn.className}};q(om,"className","LeCunUniform");ee.registerClass(om);var jc=class extends vn{DEFAULT_GAIN=1;ELEMENTS_WARN_SLOW=2e3;gain;seed;constructor(e){super(),this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return z(()=>{if(e.length<2)throw new Re("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;let n=y.sizeFromShape(e.slice(0,-1)),o=e[e.length-1],s=n*o;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);let a=[Math.max(o,n),Math.min(o,n)],i=Gc(a,0,1,t,this.seed),p=GA.qr(i,!1),u=p[0],m=p[1].flatten().stridedSlice([0],[Math.min(o,n)*Math.min(o,n)],[Math.min(o,n)+1]);return u=P(u,m.sign()),n<o&&(u=u.transpose()),P(ge(this.gain),u.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}};q(jc,"className","Orthogonal");ee.registerClass(jc);var $P={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function OP(r,e={}){return du(r,ee.SerializationMap.getMap().classNameMap,e,"initializer")}function Ft(r){return $c(r)}function St(r){if(typeof r=="string"){let e=r in $P?$P[r]:r;if(e==="GlorotNormal")return new em;if(e==="GlorotUniform")return new Jl;if(e==="HeNormal")return new tm;if(e==="HeUniform")return new rm;if(e==="LeCunNormal")return new nm;if(e==="LeCunUniform")return new om;{let t={};return t.className=e,t.config={},OP(t)}}else return r instanceof vn?r:OP(r)}function ix(r){return Array.isArray(r)&&Array.isArray(r[0])}function Xc(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function De(r){let e;if(Array.isArray(r)){if(r.length!==1)throw new $(`Expected Tensor length to be 1; got ${r.length}`);e=r[0]}else e=r;return e}function Ve(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new $(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function Yc(r){let e=0;for(let t of r)t.shape.length===0?e+=1:e+=t.shape.reduce((n,o)=>n*o);return e}var GP="Variable",Zh=class{dtype;shape;id;name;originalName;trainable_;val;constraint;constructor(e,t="float32",n=GP,o=!0,s=null){this.dtype=t??"float32",this.shape=e.shape,this.id=ex(),n=n??GP,this.originalName=tx(n),this.name=rx(this.originalName),this.trainable_=o,this.constraint=s,this.val=Fy(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),Fte(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function Fte(r,e){if(r.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(e.shape))}function Qh(r){return r.map(e=>e.read())}function Zc(r){r.forEach(e=>{e[0].write(e[1])})}var Rt=class{dtype;shape;ndim;maxNDim;minNDim;axes;constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},mn=class{constructor(e,t,n,o,s,a,i){this.dtype=e;this.shape=t;this.sourceLayer=n;this.inputs=o;this.callArgs=s;this.outputTensorIndex=i;this.id=ex(),a!=null&&(this.originalName=tx(a),this.name=rx(this.originalName)),this.rank=t.length}id;name;originalName;rank;nodeIndex;tensorIndex},Ete=0,Ku=class{constructor(e,t){this.callArgs=t;this.id=Ete++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}outboundLayer;inboundLayers;nodeIndices;tensorIndices;inputTensors;outputTensors;inputMasks;outputMasks;inputShapes;outputShapes;id;getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},Lte=0,Fe=class extends ee.Serializable{name;inputSpec;supportsMasking;trainable_;batchInputShape;dtype;initialWeights;inboundNodes;outboundNodes;activityRegularizer;_trainableWeights;_nonTrainableWeights;_losses;_updates;_built;_callHook=null;_addedWeightNames=[];id;_stateful=!1;_refCount;fastWeightInitDuringBuild;constructor(e={}){super(),this.id=Lte++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=ka(n)+"_"+Xp(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let s=null;e.batchSize!=null&&(s=e.batchSize),n=[s].concat(e.inputShape)}this.batchInputShape=n;let o=e.dtype;o==null&&(o=e.inputDType),o==null&&(o="float32"),this.dtype=o}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new en(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new $(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Er(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Er(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new En(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new En(`Layer ${this.name} is not connected, no input to return.`);return Er(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new En(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new En(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Er(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=_t(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=_t(this.inputSpec);if(e.length!==t.length)throw new $(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let o=e[n],s=t[n];if(s==null)continue;let a=o.rank;if(s.ndim!=null&&a!==s.ndim)throw new $(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(s.maxNDim!=null&&a>s.maxNDim)throw new $(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(s.minNDim!=null&&a<s.minNDim)throw new $(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(s.dtype!=null&&o.dtype!==s.dtype)throw new $(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${o.dtype}.`);if(s.axes){let i=o.shape;for(let p in s.axes){let u=Number(p),l=s.axes[p],m=u>=0?i[u]:i[i.length+u];if(l!=null&&[l,null].indexOf(m)===-1)throw new $(`Input ${n} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${l} but got shape ${i}.`)}}if(s.shape!=null)for(let i=0;i<s.shape.length;++i){let p=s.shape[i],u=o.shape[i];if(p!=null&&u!=null&&p!==u)throw new $(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=_t(e),o=!0;for(let a of n)if(!(a instanceof mn)){o=!1;break}let s=!0;for(let a of n)if(a instanceof mn){s=!1;break}if(o===s)throw new $("Arguments to apply() must be all SymbolicTensors or all Tensors");return Di(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let i of _t(e))a.push(i.shape);this.build(Er(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let a=this.call(e,t),i=_t(a),p=[];for(let u of i)n.indexOf(u)!==-1&&(u=u.clone()),p.push(u);if(a=Er(p),this.activityRegularizer!=null)throw new Re("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=Bte(e),i=this.computeOutputShape(a),p,u=$te(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?p=i.map((l,m)=>new mn(u,l,this,_t(e),t,this.name,m)):p=new mn(u,i,this,_t(e),t,this.name),this.addInboundNode(e,p,null,null,a,i,t),this._refCount++,this.activityRegularizer!=null)throw new Re("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return p}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,o)=>{n!=null&&e[o]!=null&&e[o]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new En(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new En(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new en(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Yc(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Qh(e?this.trainableWeights:this.weights)}setWeights(e){z(()=>{let t=this.weights;if(t.length!==e.length)throw new $(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],o=Qh(t);for(let s=0;s<o.length;++s){let a=o[s],i=t[s],p=e[s];if(!y.arraysEqual(a.shape,p.shape))throw new $(`Layer weight shape ${a.shape} not compatible with provided weight shape ${p.shape}`);n.push([i,p])}Zc(n)})}addWeight(e,t,n,o,s,a,i,p){if(this._addedWeightNames.indexOf(e)!==-1)throw new $(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(o=p!=null?p():St("zeros"));let u=o.apply(t,n),l=new Zh(u,n,e,a,i);return u.dispose(),s!=null&&this.addLoss(()=>s.apply(l.read())),a==null&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=_t(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,o,s,a,i=null){let p=_t(e);t=_t(t),n=_t(n),o=_t(o),s=Xc(s),a=Xc(a);let u=[],l=[],m=[];for(let c of p)u.push(c.sourceLayer),l.push(c.nodeIndex),m.push(c.tensorIndex);new Ku({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:m,inputTensors:p,outputTensors:t,inputMasks:n,outputMasks:o,inputShapes:s,outputShapes:a},i);for(let c=0;c<t.length;c++)t[c].sourceLayer=this,t[c].nodeIndex=this.inboundNodes.length-1,t[c].tensorIndex=c}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function Bte(r){r=_t(r);let e=[];for(let t of r)e.push(t.shape);return Er(e)}function $te(r){return"float32"}function uN(r,e,t){if((e==null||t!=null&&t>0)&&(e=r.sourceLayer,t=r.nodeIndex),e.inboundNodes.length===0)return[r];{let n=e.inboundNodes[t];if(n.inboundLayers.length===0)return n.inputTensors;{let o=[];for(let s=0;s<n.inboundLayers.length;s++){let a=n.inputTensors[s],i=n.inboundLayers[s],p=n.nodeIndices[s],u=uN(a,i,p);for(let l of u)o.indexOf(l)===-1&&o.push(l)}return o}}}var Ri=class extends Fe{sparse;constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:Xp("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new $("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new $("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new $("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let o=new mn(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new Ku({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new $(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};q(Ri,"className","InputLayer");ee.registerClass(Ri);function ux(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new $("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=r.batchShape;r.shape!=null&&e==null&&(e=[null].concat(r.shape));let t=r.dtype;return t==null&&(t="float32"),new Ri({batchInputShape:e,name:r.name,dtype:t,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}function Ote(r,e){if(r.dtype==null||r.dtype===e.dtype)return e;try{return ne(e,r.dtype)}catch{throw new $(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var Aa=class{id2Value={};id2Mask={};name2Id={};constructor(e){if(e instanceof Aa)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=Ote(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new $(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof mn){if(this.id2Value[e.id]==null)throw new $(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new $(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof mn){if(this.id2Value[e.id]==null)throw new $(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new $(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Me(this.id2Mask)}},px=new qh,lx=new qh;function UP(r){px?.setMaxEntries(r),lx?.setMaxEntries(r)}function sm(r,e,t,n){let o=t==null?!1:t.training,s=Array.isArray(r),a=s?r:[r],i=a.map(f=>f.name),p=[],u=e.names();for(let f of i)u.indexOf(f)!==-1?p.push(e.getValue(f)):p.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);let l=i.join(",")+"|"+e.names().sort().join(","),m=px.get(l),c;if(m==null){let f=zte(a,e);m=f.sorted,c=f.recipientCounts,px.put(l,m),lx.put(l,c)}c={},o||Object.assign(c,lx.get(l));let d=new Aa(e);for(let f=0;f<m.length;++f){if(n!=null){let M=_h().numTensors;M>n.maxNumTensors&&(n.maxNumTensors=M),M<n.minNumTensors&&(n.minNumTensors=M)}let h=m[f],g=h.sourceLayer;if(g instanceof Ri)continue;let b=[],x=[],T=[],C=!1;for(let M of h.inputs){let F=d.getValue(M),O=d.getMask(M);b.push(F),x.push(O),O!=null&&(C=!0),o||(c[M.name]--,c[M.name]===0&&!e.hasKey(M)&&i.indexOf(M.name)===-1&&!F.isDisposed&&M.sourceLayer.stateful!==!0&&T.push(F))}C&&(t=t||{},t.mask=x[0]);let v=_t(g.apply(b,t)),A=null;g.supportsMasking&&(A=g.computeMask(b,x));let _=Wte(h),R=Array.isArray(_)?_:[_];for(let M=0;M<R.length;++M){d.hasKey(R[M])||d.add(R[M],v[M],Array.isArray(A)?A[0]:A);let F=i.indexOf(R[M].name);F!==-1&&(p[F]=v[M])}o||Me(T)}return d.disposeMasks(),s?p:p[0]}function zte(r,e){y.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let t=[],n={};if(r.length===1){let o=WP(r[0],e);t=o.sorted,n=o.recipientMap}else{let o=new Set;for(let s of r){let{sorted:a,recipientMap:i}=WP(s,e);for(let p of a)o.has(p.name)||(t.push(p),o.add(p.name));for(let p in i)n[p]==null&&(n[p]=new Set),i[p].forEach(u=>n[p].add(u))}}return{sorted:t,recipientCounts:Gte(n)}}function Gte(r){let e={};for(let t in r)e[t]=r[t].size;return e}function WP(r,e){let t=new Set,n=[],o={};for(let i of e.names())t.add(i);let s=[],a=[];for(s.push(r);s.length>0;){let i=s[s.length-1];if(t.has(i.name)){s.pop();continue}let p=a[a.length-1]===s.length-1;if(i.inputs.length===0||p)s.pop(),n.push(i),t.add(i.name),p&&a.pop();else{a.push(s.length-1);for(let u of i.inputs)o[u.name]==null&&(o[u.name]=new Set),o[u.name].add(i.name),!t.has(u.name)&&s.push(u)}}return{sorted:n,recipientMap:o}}function Wte(r){let e;if(r.sourceLayer.inboundNodes.length===1)e=r.sourceLayer.output;else{let t=null;for(let n=0;n<r.sourceLayer.inboundNodes.length;++n)for(let o of r.sourceLayer.inboundNodes[n].outputTensors)if(o.id===r.id){t=n;break}e=r.sourceLayer.getOutputAt(t)}return e}var Ute=L();Ute.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,UP);var mx={kernelName:Gs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(r,cu(ne(t,"float32"),-1))}}};var KP={kernelName:xo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Xe(ne(t,"float32")),o=Ot(ce(ge(1),n));return et(fe(r,o))}}}};var VP={kernelName:To,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Ot(ce(Xe(ne(t,"float32")),1));return fe(r,n)}}}};var HP={kernelName:Dn,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ge(t.shape,n.shape);return{a:()=>{let i=r,p=Dt(t.shape,o);return p.length>0&&(i=be(i,p)),E(i,t.shape)},b:()=>{let i=r,p=Dt(n.shape,o);return p.length>0&&(i=be(i,p)),E(i,n.shape)}}}};var qP={kernelName:Co,saveAllInputs:!0,gradFunc:(r,e)=>{let t={};return e.forEach((n,o)=>{t[o]=()=>r.clone()}),t}};var jP={kernelName:Ws,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_e(t)}}};var XP={kernelName:Us,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_e(t)}}};var YP={kernelName:Io,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,Ot(ce(ge(1),Xe(ne(t,"float32")))))}}};var ZP={kernelName:ko,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Ot(Z(ge(1),Xe(ne(t,"float32"))));return fe(r,n)}}}};var QP={kernelName:wo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ge(t.shape,n.shape);return{a:()=>{let i=Z(Xe(t),Xe(n)),p=P(r,fe(n,i)),u=Dt(t.shape,o);return u.length>0&&(p=be(p,u)),E(p,t.shape)},b:()=>{let i=Z(Xe(t),Xe(n)),p=et(P(r,fe(t,i))),u=Dt(n.shape,o);return u.length>0&&(p=be(p,u)),E(p,n.shape)}}}};var JP={kernelName:vo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,Z(Xe(ne(t,"float32")),1))}}};var eF={kernelName:So,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,ce(ge(1),Xe(ne(t,"float32"))))}}};function Kte(r,e,t,n,o,s){let a=S(r,"dy","avgPool3dGrad"),i=S(e,"input","avgPool3dGrad"),p=a,u=i,l=!1;i.rank===4&&(l=!0,p=E(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=E(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),D(p.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),D(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),Pt("avgPool3dGrad",o,s);let m={dy:p,input:u},c={filterSize:t,strides:n,pad:o,dimRoundingMode:s},d=N.runKernel(Xi,m,c);return l?E(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var tF=w({avgPool3dGrad_:Kte});var rF={kernelName:Ks,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:a,dimRoundingMode:i}=t;return{x:()=>tF(r,n,o,s,a,i)}}};function Vte(r,e,t,n,o){let s=S(r,"dy","avgPoolGrad"),a=S(e,"input","avgPoolGrad");D(a.rank===s.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${s.rank})`);let i=a,p=s,u=!1;a.rank===3&&(u=!0,i=E(a,[1,a.shape[0],a.shape[1],a.shape[2]]),p=E(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(p.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${p.rank}.`),D(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let l={dy:p,input:i},m={filterSize:t,strides:n,pad:o},c=N.runKernel(cp,l,m);return u?E(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var nF=w({avgPoolGrad_:Vte});var oF={kernelName:Ao,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:a}=t;return{x:()=>nF(r,n,o,s,a)}}};var sF={kernelName:No,inputsToSave:["a","b"],gradFunc:(r,e,t)=>{let[n,o]=e,{transposeA:s,transposeB:a}=t;return!s&&!a?{a:()=>qe(r,o,!1,!0),b:()=>qe(n,r,!0,!1)}:!s&&a?{a:()=>qe(r,o,!1,!1),b:()=>qe(r,n,!0,!1)}:s&&!a?{a:()=>qe(o,r,!1,!0),b:()=>qe(n,r,!1,!1)}:{a:()=>qe(o,r,!0,!0),b:()=>qe(r,n,!0,!0)}}};var aF={kernelName:Vs,gradFunc:(r,e,t)=>{let{blockShape:n,crops:o}=t;return{x:()=>wc(r,n,o)}}};var iF={kernelName:y_,gradFunc:(r,e,t)=>{let n=t,o=n.inputShape,s=n.shape,a=Array.from(s);for(let p=o.length-1;p>=0;p--)if(o[p]===s[p])a[p]=1;else if(o[p]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);let i=[];for(let p=0;p<a.length;p++)a[p]>1&&i.push(p);return{x:()=>be(r,i,!0)}}};var uF={kernelName:Hn,gradFunc:r=>({x:()=>r.clone()})};var pF={kernelName:Do,gradFunc:r=>({x:()=>_e(r)})};var lF={kernelName:qn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{clipValueMin:o,clipValueMax:s}=t;return{x:()=>Et(un(Jn(n,o),ba(n,s)),r,_e(r))}}};var mF={kernelName:fp,inputsToSave:["x"],gradFunc:mx.gradFunc};var cF={kernelName:Hs,saveAllInputs:!0,gradFunc:(r,e,t)=>{let n=e.map(p=>p.shape),{axis:o}=t,s=yr(o,e[0].shape)[0],a=n.map(p=>p[s]);return Pr(r,a,s).map(p=>()=>p)}};var dF={kernelName:_o,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{dilations:s,strides:a,pad:i,dataFormat:p}=t;return D(Ms(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Tc(n.shape,r,o,a,i,p),filter:()=>Ec(n,r,o.shape,a,i,p)}}};var fF={kernelName:Ro,inputsToSave:["dy","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{strides:s,pad:a,dataFormat:i,dimRoundingMode:p}=t;return{dy:()=>Fs(r,o,s,a,i,1,p),filter:()=>Ec(r,n,o.shape,s,a,i,p)}}};function Hte(r,e,t,n,o){let s=r;r.rank===4&&(s=E(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let a=e;a.rank===4&&(a=E(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),D(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),D(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),D(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),D(s.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${t[3]}.`),D(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);let i={x:s,dy:a},p={strides:n,pad:o,filterShape:t};return N.runKernel(Ua,i,p)}var hF=w({conv3DBackpropFilter_:Hte});var gF={kernelName:Mo,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s}=t;D(Ms(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[a,i]=e;return{x:()=>iy(a.shape,r,i,o,s),filter:()=>hF(a,r,i.shape,o,s)}}};var bF={kernelName:Po,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(et(Ny(ne(t,"float32"))),r)}}};var yF={kernelName:Fo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(Dy(ne(t,"float32")),r)}}};var xF={kernelName:Eo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o,exclusive:s,reverse:a}=t;return{x:()=>{let i=AA([o],n.rank),p=ly(r,o,s,!a);return i!=null&&(p=je(p,i)),p}}}};var TF={kernelName:Lo,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s,dimRoundingMode:a}=t,i=n??[1,1];D(Ms(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[p,u]=e;return D(p.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${p.rank}.`),D(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),D(p.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),D(zr(o,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${i}'.`),Pt("depthwiseConv2d",s,a),{x:()=>$y(p.shape,r,u,o,s,i,a),filter:()=>By(p,r,u.shape,o,s,i,a)}}};var CF={kernelName:Bo,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,s={x:n,filter:o,dy:r},a={x:n,filter:o,dy:r};return{x:()=>N.runKernel(Ji,s,t),filter:()=>N.runKernel(eu,a,t)}}};var IF={kernelName:Oo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e,n={dy:r,y:t};return{x:()=>N.runKernel(ja,n)}}};var kF={kernelName:Xa,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=P(Tr(et(Xe(t))),2/Math.sqrt(Math.PI));return{x:()=>P(r,n)}}};var vF={kernelName:zo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(r,t)}}};var SF={kernelName:qs,inputsToSave:["input"],gradFunc:(r,e)=>{let[t]=e;return{input:()=>E(r,t.shape)}}};var wF={kernelName:Go,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(r,Tr(t))}}};var AF={kernelName:Wo,gradFunc:r=>({x:()=>_e(r)})};var NF={kernelName:Uo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ge(t.shape,n.shape);return{a:()=>{let i=fe(r,ne(n,"float32")),p=Dt(t.shape,o);return p.length>0?E(be(i,p),t.shape):i},b:()=>{let i=P(r,ne(t,"float32")),p=Dt(n.shape,o);p.length>0&&(i=E(be(i,p),n.shape));let u=Xe(n);return et(fe(i,ne(u,"float32")))}}}};var DF={kernelName:Ko,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,e,t)=>{let{varianceEpsilon:n}=t,[o,s,a,i]=e,p=i??ge(1),u=Dt(s.shape,o.shape),l=[];if(s.rank===1){for(let C=0;C<o.shape.length-1;++C)l.push(o.shape[C]);l.push(1)}let m=ce(o,s),c=P(r,p),d=Sy(Z(a,ge(n))),f=P(P(P(d,d),d),ge(-.5));return{x:()=>s.rank===1?E(P(P(r,an(E(d,[1,1,1,s.shape[0]]),l)),p),o.shape):E(P(P(r,d),p),o.shape),mean:()=>{let C=P(P(d,ge(-1)),c);return s.rank===1&&(C=be(C,u)),E(C,s.shape)},variance:()=>{let C=P(P(f,m),c);return s.rank===1&&(C=be(C,u)),E(C,s.shape)},scale:()=>{let C=P(m,d),v=P(r,C);return s.rank===1&&(v=be(v,u)),E(v,s.shape)},offset:()=>{let C=r;return s.rank===1&&(C=be(C,u)),E(C,s.shape)}}}};var MF={kernelName:js,inputsToSave:["x","indices"],gradFunc:(r,e,t)=>{let[n,o]=e,{axis:s}=t,a=yr(s,n.shape)[0];return{x:()=>{let p=n.shape,u=o.size,l=p.slice(0,a),m=l.length,c=p.slice(s,p.length).slice(1),d=c.length,f=_F(0,m),h=_F(m+1,m+1+d),g=RF([l,[u],c]),b=E(r,g),x=E(o,[u]),T=RF([[m],f,h]),C=je(b,T),v=Py(C,x,n.shape[a]),A=Lh(T);return v=je(v,A),v},indices:()=>o}}};function _F(r,e){let t=[];for(let n=r;n<e;++n)t.push(n);return t}function RF(r){let e=[];for(let t=0;t<r.length;++t)for(let n=0;n<r[t].length;++n)e.push(r[t][n]);return e}var PF={kernelName:Vo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>_e(t),b:()=>_e(n)}}};var FF={kernelName:jn,gradFunc:r=>({x:()=>ne(r,"float32")})};var EF={kernelName:Ho,gradFunc:r=>({x:()=>_e(r)})};var LF={kernelName:qo,gradFunc:r=>({x:()=>_e(r)})};var BF={kernelName:jo,gradFunc:r=>({x:()=>_e(r)})};var $F={kernelName:Xo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{alpha:o}=t,s=Jt(n,0);return{x:()=>Et(s,r,P(r,o))}}};var OF={kernelName:Zo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,Z(t,1))}}};var zF={kernelName:Yo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,ne(t,"float32"))}}};var GF={kernelName:T_,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t;return{logits:()=>{let a=Tr(n);return ce(r,P(be(r,o,!0),a))}}}};function qte(r,e,t,n=5,o=1,s=1,a=.5){let i={x:r,y:e,dy:t},p={depthRadius:n,bias:o,alpha:s,beta:a};return N.runKernel(ai,i,p)}var WF=w({localResponseNormalizationBackprop_:qte});var UF={kernelName:Qo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{depthRadius:s,bias:a,alpha:i,beta:p}=t;return{x:()=>WF(n,o,r,s,a,i,p)}}};function cx(r,e,t,n){return e.rank<t.rank&&(e=E(e,ga(e.shape,n))),r.rank<t.rank&&(r=E(r,ga(r.shape,n))),{x:()=>P(r,ne(sn(t,e),r.dtype))}}var pN={kernelName:Jo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{reductionIndices:o}=n,s=e[0],a=e[1],i=yr(o,s.shape),p=cx(r,a,s,i);return{x:()=>p.x()}}};var KF={kernelName:es,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>P(r,ne(Jn(t,n),"float32")),b:()=>P(r,ne(Rl(t,n),"float32"))}}};function jte(r,e,t,n,o,s,a){let i=S(r,"dy","maxPool3dGrad"),p=S(e,"input","maxPool3dGrad"),u=S(t,"output","maxPool3dGrad"),l=i,m=p,c=u,d=!1;p.rank===4&&(d=!0,l=E(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),m=E(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]]),c=E(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),D(l.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),D(m.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${m.rank}.`),D(c.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${c.rank}.`),Pt("maxPool3dGrad",s,a);let f={dy:l,input:m,output:c},h={filterSize:n,strides:o,pad:s,dimRoundingMode:a},g=N.runKernel(ru,f,h);return d?E(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var VF=w({maxPool3dGrad_:jte});var HF={kernelName:Xs,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=t;return{x:()=>VF(r,n,o,s,a,i,p)}}};function Xte(r,e,t,n,o,s,a){let i=S(r,"dy","maxPoolGrad"),p=S(e,"input","maxPoolGrad"),u=S(t,"output","maxPoolGrad");D(p.rank===i.rank,()=>`Rank of input (${p.rank}) does not match rank of dy (${i.rank})`),D(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),D(p.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${p.rank}.`),Pt("maxPoolGrad",s,a);let l={dy:i,input:p,output:u},m={filterSize:n,strides:o,pad:s,dimRoundingMode:a};return N.runKernel(Ip,l,m)}var qF=w({maxPoolGrad_:Xte});var jF={kernelName:ts,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:a,pad:i}=t;return{x:()=>qF(r,n,o,s,a,i)}}};var XF={kernelName:rs,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t,s=yr(o,n.shape),i=wA(n.shape,s)[1],p=st(i);return{x:()=>{let l=n.shape.slice();s.forEach(d=>{l[d]=1});let m=E(r,l);return fe(P(m,Ir(n.shape,"float32")),p)}}}};var YF={kernelName:ns,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{axis:o}=n,[s,a]=e,i=yr(o,s.shape),p=cx(r,a,s,i);return{x:()=>p.x()}}};var ZF={kernelName:os,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>P(r,ne(ba(t,n),"float32")),b:()=>P(r,ne(Jt(t,n),"float32"))}}};var QF={kernelName:ss,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(a=>a[0]);return{x:()=>Ue(r,s,n.shape)}}};var JF={kernelName:ii,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ge(t.shape,n.shape);return{a:()=>{let i=Dt(t.shape,o);return i.length>0?E(be(r,i),t.shape):r},b:()=>{let i=P(r,et(Up(fe(t,n)))),p=Dt(n.shape,o);return p.length>0?E(be(i,p),n.shape):i}}}};var eE={kernelName:as,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ge(t.shape,n.shape);return{a:()=>{let i=P(r,ne(n,"float32")),p=Dt(t.shape,o);return p.length>0?E(be(i,p),t.shape):i},b:()=>{let i=P(r,ne(t,"float32")),p=Dt(n.shape,o);return p.length>0?E(be(i,p),n.shape):i}}}};var tE={kernelName:Ys,gradFunc:r=>({x:()=>et(r)})};var rE={kernelName:is,inputsToSave:["indices"],gradFunc:(r,e)=>{let t=e[0];return{indices:()=>kt(t.shape,"float32")}}};var nE={kernelName:Zs,gradFunc:r=>({x:()=>_e(r)})};var oE={kernelName:Qs,saveAllInputs:!0,gradFunc:(r,e,t)=>{let{axis:n}=t;return Fr(r,n).map(s=>()=>s)}};var lN={kernelName:us,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(a=>a[0]);return{x:()=>Ue(r,s,n.shape)}}};var sE={kernelName:ps,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,e)=>{let[t,n,o]=e,s=t,a=n,i=Ge(s.shape,a.shape);return{a:()=>{let l=ne(a,"float32"),m=P(r,P(l,Qn(s,ce(l,ge(1))))),c=Dt(s.shape,i);return c.length>0&&(m=be(m,c)),E(m,s.shape)},b:()=>{let l=Jt(s,0),m=Et(l,Zr(s),_e(s)),c=P(r,P(o,m)),d=Dt(a.shape,i);return d.length>0&&(c=be(c,d)),E(c,a.shape)}}}};var aE={kernelName:ls,inputsToSave:["x","alpha"],gradFunc:(r,e)=>{let[t,n]=e,o=Jt(t,0);return{x:()=>Et(o,r,P(r,n)),alpha:()=>{let s=Et(o,_e(r),P(r,t)),a=Dt(n.shape,r.shape);return a.length>0&&(s=be(s,a)),E(s,n.shape)}}}};function Yte(r,e,t){let n=r.shape.slice();n[t]=1;let o=E(e,n),s=Fh(r,t,!0,!1),a=Fh(r,t,!0,!0),i=P(s,a);return P(o,i)}function Zte(r,e,t){let n=r.shape.length,o=n-t.length,s=I.getAxesPermutation(t,n),a=r;s!=null&&(a=je(r,s));let i=a.shape.slice(),u=i.splice(n-t.length,t.length).reduce((c,d)=>c*d,1);i.push(u);let l=a.reshape(i),m=Yte(l,e,o);if(m=m.reshape(a.shape),s!=null){let c=I.getUndoAxesPermutation(s);m=je(m,c)}return m}var iE={kernelName:ms,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t,s=[];return o==null?s=n.shape.map((a,i)=>i):typeof o=="number"?s=[o]:s=o,{x:()=>Zte(n,r,s)}}};var uE={kernelName:$o,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ge(t.shape,n.shape);return{a:()=>{let i=fe(r,ne(n,"float32")),p=Dt(t.shape,o);return p.length>0?E(be(i,p),t.shape):i},b:()=>{let i=P(r,ne(t,"float32")),p=Dt(n.shape,o);p.length>0&&(i=E(be(i,p),n.shape));let u=Xe(n);return et(fe(i,ne(u,"float32")))}}}};var pE={kernelName:cs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,et(Xe(t)))}}};var lE={kernelName:gs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=P(ba(t,6),cu(t));return{x:()=>P(r,ne(n,"float32"))}}};var mE={kernelName:ds,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(r,ne(cu(t),"float32"))}}};var cE={kernelName:Js,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>E(r,t.shape)}}};var dE={kernelName:hs,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>N.runKernel(di,o,t)}}};var fE={kernelName:fs,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>N.runKernel(ci,o,t)}}};var hE={kernelName:bs,gradFunc:(r,e,t)=>{let{dims:n}=t,o=yr(n,r.shape);return{x:()=>Mr(r,o)}}};var gE={kernelName:ys,gradFunc:r=>({x:()=>_e(r)})};var bE={kernelName:xs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>et(fe(r,P(Qn(t,1.5),2)))}}};var yE={kernelName:ea,inputsToSave:["condition"],gradFunc:(r,e)=>{let[t]=e;return{condition:()=>ne(_e(t),"float32"),t:()=>P(r,ne(t,r.dtype)),e:()=>P(r,ne(vc(t),r.dtype))}}};var xE={kernelName:Ts,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Jt(t,ge(0)),o=ge(ZA),s=ge(QA),a=P(r,s),i=P(P(r,o),Tr(ne(t,"float32")));return Et(n,a,i)}}}};var TE={kernelName:ks,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(r,P(t,ce(ge(1),t)))}}};var CE={kernelName:Is,gradFunc:r=>({x:()=>_e(r)})};var IE={kernelName:Cs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(Cc(ne(t,"float32")),r)}}};var kE={kernelName:gi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(py(ne(t,"float32")),r)}}};var vE={kernelName:ta,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{begin:o,size:s}=t,a=n.shape,[i,p]=YA(n,o,s),u=[];for(let l=0;l<r.rank;l++)u.push([i[l],a[l]-i[l]-p[l]]);return{x:()=>eo(r,u)}}};var SE={kernelName:As,outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{dim:o}=t,s=!0,a=P(r,n);return{logits:()=>ce(a,P(be(a,[o],s),n))}}};var wE={kernelName:vs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(r,Fn(t))}}};var mN={kernelName:ra,gradFunc:(r,e,t)=>{let{blockShape:n,paddings:o}=t;return{x:()=>xc(r,n,o)}}};var cN={kernelName:na,gradFunc:(r,e,t)=>{let{axis:n}=t;return{x:()=>gt(r,n)}}};var AE={kernelName:Ss,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,P(Ot(ne(t,"float32")),2))}}};var NE={kernelName:ou,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(r,P(ne(t,"float32"),2))}}};var DE={kernelName:Ns,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ge(2);return{a:()=>P(r,P(o,ce(t,n))),b:()=>P(r,P(o,ce(n,t)))}}};var _E={kernelName:Xn,gradFunc:r=>({x:()=>_e(r)})};var RE={kernelName:Ds,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ge(t.shape,n.shape);return{a:()=>{let i=r,p=Dt(t.shape,o);return p.length>0&&(i=be(i,p)),E(i,t.shape)},b:()=>{let i=r,p=Dt(n.shape,o);return p.length>0&&(i=be(i,p)),E(et(i),n.shape)}}}};var ME={kernelName:ws,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,o=n.shape.slice(),{axis:s}=t;yr(s,n.shape).forEach(u=>{o[u]=1});let i=E(r,o),p=P(i,Ir(n.shape,"float32"));return{x:()=>p}}};var PE={kernelName:_s,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,Xe(Cc(t)))}}};var FE={kernelName:Rs,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(ce(ge(1),Xe(t)),r)}}};var EE={kernelName:_n,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{reps:o}=t;return{x:()=>{let a=_e(n);if(n.rank===1)for(let i=0;i<o[0];++i)a=Z(a,Ue(r,[i*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let i=0;i<o[0];++i)for(let p=0;p<o[1];++p)a=Z(a,Ue(r,[i*n.shape[0],p*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let i=0;i<o[0];++i)for(let p=0;p<o[1];++p)for(let u=0;u<o[2];++u)a=Z(a,Ue(r,[i*n.shape[0],p*n.shape[1],u*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let i=0;i<o[0];++i)for(let p=0;p<o[1];++p)for(let u=0;u<o[2];++u)for(let l=0;l<o[3];++l)a=Z(a,Ue(r,[i*n.shape[0],p*n.shape[1],u*n.shape[2],l*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return a}}}};var LE={kernelName:Rn,gradFunc:(r,e,t)=>{let n=t,{perm:o}=n,s=Lh(o);return{x:()=>je(r,s)}}};var BE={kernelName:oa,gradFunc:(r,e,t)=>{let n=t,{axis:o}=n;return{value:()=>dr(r,o)}}};var $E={kernelName:Rp,inputsToSave:["segmentIds"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Qte(r,t)}}};function Qte(r,e){let t=Es(e,_e(e)),n=Kp(r,t),o=Jn(e,ge(0,"int32")),s=n.rank-o.rank;for(let i=0;i<s;++i)o=Cr(o,i+1);o=un(o,Ir(n.shape,"bool"));let a=_e(n);return Et(o,n,a)}var OE={kernelName:sa,gradFunc:r=>({x:()=>_e(r)})};var Jte=[mx,KP,VP,HP,qP,jP,XP,YP,ZP,QP,JP,eF,rF,oF,sF,aF,iF,uF,pF,lF,mF,cF,fF,dF,gF,bF,yF,xF,TF,CF,uE,IF,kF,vF,SF,wF,NF,AF,DF,MF,PF,FF,EF,LF,BF,$F,OF,zF,GF,UF,pN,pN,KF,HF,jF,XF,YF,ZF,QF,JF,eE,tE,rE,nE,oE,lN,lN,sE,aE,iE,pE,lE,mE,cE,dE,fE,hE,gE,bE,yE,xE,TE,CE,IE,kE,vE,SE,wE,mN,mN,cN,cN,AE,DE,NE,_E,RE,ME,PE,FE,EE,LE,BE,$E,OE];for(let r of Jte)I_(r);var WE={};Ye(WE,{maxNorm:()=>ere,minMaxNorm:()=>nre,nonNeg:()=>rre,unitNorm:()=>tre});function dN(r,e){return z(()=>Ot(be(P(r,r),e,!0)))}var am=class extends ee.Serializable{getConfig(){return{}}},Qc=class extends am{maxValue;axis;defaultMaxValue=2;defaultAxis=0;constructor(e){super(),this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return z(()=>{let t=dN(e,this.axis),n=Xr(t,0,this.maxValue);return P(e,fe(n,Z(hr(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};q(Qc,"className","MaxNorm");ee.registerClass(Qc);var Jc=class extends am{axis;defaultAxis=0;constructor(e){super(),this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return z(()=>fe(e,Z(hr(),dN(e,this.axis))))}getConfig(){return{axis:this.axis}}};q(Jc,"className","UnitNorm");ee.registerClass(Jc);var ed=class extends am{apply(e){return pn(e)}};q(ed,"className","NonNeg");ee.registerClass(ed);var td=class extends am{minValue;maxValue;rate;axis;defaultMinValue=0;defaultMaxValue=1;defaultRate=1;defaultAxis=0;constructor(e){super(),this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return z(()=>{let t=dN(e,this.axis),n=Z(P(this.rate,Xr(t,this.minValue,this.maxValue)),P(1-this.rate,t));return P(e,fe(n,Z(hr(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};q(td,"className","MinMaxNorm");ee.registerClass(td);var zE={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function qt(r){return $c(r)}function GE(r,e={}){return du(r,ee.SerializationMap.getMap().classNameMap,e,"constraint")}function jt(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in zE?zE[r]:r,config:{}};return GE(t)}else return r instanceof am?r:GE(r)}function ere(r){return new Qc(r)}function tre(r){return new Jc(r)}function rre(){return new ed}function nre(r){return new td(r)}var UE={};Ye(UE,{constant:()=>are,glorotNormal:()=>dre,glorotUniform:()=>cre,heNormal:()=>fre,heUniform:()=>hre,identity:()=>lre,leCunNormal:()=>gre,leCunUniform:()=>bre,ones:()=>sre,orthogonal:()=>yre,randomNormal:()=>ure,randomUniform:()=>ire,truncatedNormal:()=>pre,varianceScaling:()=>mre,zeros:()=>ore});function ore(){return new Wc}function sre(){return new Zp}function are(r){return new Uc(r)}function ire(r){return new Kc(r)}function ure(r){return new Vc(r)}function pre(r){return new Hc(r)}function lre(r){return new qc(r)}function mre(r){return new tn(r)}function cre(r){return new Jl(r)}function dre(r){return new em(r)}function fre(r){return new tm(r)}function hre(r){return new rm(r)}function gre(r){return new nm(r)}function bre(r){return new om(r)}function yre(r){return new jc(r)}var IL={};Ye(IL,{Layer:()=>Fe,RNN:()=>Bs,RNNCell:()=>qu,activation:()=>Ene,add:()=>Kne,alphaDropout:()=>Aoe,average:()=>Vne,averagePooling1d:()=>RN,averagePooling2d:()=>MN,averagePooling3d:()=>PN,avgPool1d:()=>eoe,avgPool2d:()=>roe,avgPool3d:()=>ooe,avgPooling1d:()=>toe,avgPooling2d:()=>noe,avgPooling3d:()=>soe,batchNormalization:()=>Zne,bidirectional:()=>xoe,categoryEncoding:()=>Moe,centerCrop:()=>_oe,concatenate:()=>Hne,conv1d:()=>wne,conv2d:()=>Ane,conv2dTranspose:()=>Nne,conv3d:()=>Dne,conv3dTranspose:()=>_ne,convLstm2d:()=>hoe,convLstm2dCell:()=>goe,cropping2D:()=>Mne,dense:()=>Lne,depthwiseConv2d:()=>Fne,dot:()=>Yne,dropout:()=>Bne,elu:()=>Tne,embedding:()=>Une,flatten:()=>One,gaussianDropout:()=>woe,gaussianNoise:()=>Soe,globalAveragePooling1d:()=>aoe,globalAveragePooling2d:()=>ioe,globalMaxPool1d:()=>Coe,globalMaxPool2d:()=>Ioe,globalMaxPooling1d:()=>yL,globalMaxPooling2d:()=>xL,gru:()=>poe,gruCell:()=>loe,input:()=>CN,inputLayer:()=>xne,layerNormalization:()=>Qne,leakyReLU:()=>Ine,lstm:()=>moe,lstmCell:()=>coe,masking:()=>Noe,maxPool1d:()=>koe,maxPool2d:()=>voe,maxPooling1d:()=>TL,maxPooling2d:()=>CL,maxPooling3d:()=>uoe,maximum:()=>qne,minimum:()=>jne,multiply:()=>Xne,permute:()=>Wne,prelu:()=>kne,randomWidth:()=>Poe,reLU:()=>Cne,repeatVector:()=>zne,rescaling:()=>Doe,reshape:()=>Gne,resizing:()=>Roe,rnn:()=>boe,separableConv2d:()=>Rne,simpleRNN:()=>doe,simpleRNNCell:()=>foe,softmax:()=>vne,spatialDropout1d:()=>$ne,stackedRNNCells:()=>yoe,thresholdedReLU:()=>Sne,timeDistributed:()=>Toe,upSampling2d:()=>Pne,zeroPadding2d:()=>Jne});async function hu(r){if(r==null)return;let e=[],t=[],n=[];for(let o in r){let s=r[o];if(typeof s!="number"){let a=s;e.push(a.data()),t.push(o),n.push(a)}}if(e.length>0){let o=await Promise.all(e);for(let s=0;s<o.length;++s)r[t[s]]=o[s][0];Me(n)}}function dx(r){if(r!=null)for(let e in r){let t=r[e];typeof t!="number"&&t.dispose()}}var xre=125,Vu=class{validationData=null;params;setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},fx=class{callbacks;queueLength;constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},fN=class extends Vu{seen;totals;constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let o in t){let s=t[o];if(typeof s=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+s*n;else{let a;o in this.totals?a=this.totals[o]:this.totals[o]=0;let i=z(()=>Z(this.totals[o],P(s,n)));this.totals[o]=i,a?.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:z(()=>{let o=P(fe(1,this.seen),this.totals[n]);t[n]=o,this.totals[n].dispose(),$t(t[n])}))}},hx=class extends Vu{epoch;history;async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let s in this.history){let a=this.history[s];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){let p=a[i];e.push(p.data()),t.push(s),n.push(i)}}let o=await Promise.all(e);for(let s=0;s<o.length;++s)this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=o[s][0]}},gx=class extends Vu{trainBegin;trainEnd;epochBegin;epochEnd;batchBegin;batchEnd;yield;yieldEvery;currentEpoch=0;nowFunc;nextFrameFunc;constructor(e,t){if(super(),this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Hh,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=xre),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");y.isNumber(this.yieldEvery)&&(this.maybeWait=TP(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let o=[];this.yield!=null&&(await hu(n),o.push(this.yield(e,t,n))),o.push(this.nextFrameFunc()),await Promise.all(o)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await hu(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await hu(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await hu(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await hu(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):y.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await hu(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await hu(e),await this.trainEnd(e))}};function bx(r,e){return r==null&&(r={}),r instanceof Vu?[r]:Array.isArray(r)&&r[0]instanceof Vu?r:_t(r).map(n=>new gx(n,e))}var Mi=class{constructor(){}static registerCallbackConstructor(e,t){y.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Mi.checkForDuplicate(t),Mi.constructors[e]==null&&(Mi.constructors[e]=[]),Mi.constructors[e].push(t)}static checkForDuplicate(e){for(let t in Mi.constructors)Mi.constructors[+t].forEach(o=>{if(o===e)throw new $("Duplicate callback constructor.")})}static clear(){Mi.constructors={}}static createCallbacks(e){let t=[];for(let n in Mi.constructors){let o=+n;e>=o&&t.push(...Mi.constructors[o])}return t.map(n=>new n)}},rd=Mi;q(rd,"constructors",{});function yx(r,e,t,n,o,s,a,i,p){let u=new hx,l=[new fN,...rd.createCallbacks(e)];r!=null&&l.push(...r),l.push(u);let m=new fx(l);return m.setParams({epochs:t,initialEpoch:n,samples:o,steps:s,batchSize:a,verbose:e,doValidation:i,metrics:p}),{callbackList:m,history:u}}function Sn(r,e={},t=!1){return du(r,ee.SerializationMap.getMap().classNameMap,e,"layer",t)}function Jh(r,e){return z(()=>{r.dtype!=="float32"&&(r=ne(r,"float32"));let t=be(Ql(r),e,!0),n=ha(t.shape,hr()),o=Ot(Es(t,n));return fe(r,o)})}function gu(r,e){return z(()=>zt(Ql(ce(e,r)),-1))}function nd(r,e){return z(()=>zt(Wt(ce(e,r)),-1))}function Qp(r,e){return z(()=>{let t=ce(r,e),n=Xr(Wt(r),hr(),Number.MAX_VALUE),o=Wt(fe(t,n));return P(100,zt(o,-1))})}function Tre(r,e){return z(()=>{let t=Xr(e,hr(),Number.MAX_VALUE),n=Zr(Z(1,t)),o=Xr(r,hr(),Number.MAX_VALUE),s=Zr(Z(1,o));return zt(Ql(ce(n,s)),-1)})}function Cre(r,e){return z(()=>{let t=Es(0,ce(1,P(r,e)));return zt(Ql(t),-1)})}function Ire(r,e){return z(()=>{let t=Es(0,ce(1,P(r,e)));return zt(t,-1)})}function kre(r,e){return z(()=>{let t=be(P(r,e),-1),n=Yr(P(ce(1,r),e),-1);return Es(0,Z(1,ce(n,t)))})}function vre(r,e){return z(()=>{let t=Math.log(2),n=ce(e,r),o=ce(Z(n,Bu(P(-2,n))),t);return zt(o,-1)})}function im(r,e,t=!1){return z(()=>{if(t)e=_c(e);else{let n=be(e,e.shape.length-1,!0);e=fe(e,n)}return e=Xr(e,hr(),1-hr()),et(be(P(ne(r,"float32"),Zr(e)),e.shape.length-1))})}function od(r,e,t=!1){return z(()=>{let n=ne(Up(RP(r)),"int32");e=Xr(e,hr(),1-hr());let o=e.shape,s=E(Hp(n,o[o.length-1]),o);return im(s,e,t)})}function Sre(r,e){if(!y.arraysEqual(r.shape,e.shape))throw new $(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(e.shape)}`);return z(()=>{let t=pn(e),n=et(Wt(e));return Z(ce(t,P(e,r)),kc(Tr(n)))})}function sd(r,e){return z(()=>{let t;return t=Xr(e,hr(),1-hr()),t=Zr(fe(t,ce(1,t))),zt(Sre(r,t),-1)})}function wre(r,e){return z(()=>{let t=Xr(r,hr(),1),n=Xr(e,hr(),1);return be(P(r,Zr(fe(t,n))),-1)})}function Are(r,e){return z(()=>{let t=Zr(Z(hr(),e));return zt(ce(e,P(r,t)),-1)})}function tg(r,e){return z(()=>{let t=Jh(r,-1),n=Jh(e,-1),o=P(t,n);return et(be(o,-1))})}var eg={meanSquaredError:gu,meanAbsoluteError:nd,meanAbsolutePercentageError:Qp,meanSquaredLogarithmicError:Tre,squaredHinge:Cre,hinge:Ire,categoricalHinge:kre,logcosh:vre,categoricalCrossentropy:im,sparseCategoricalCrossentropy:od,binaryCrossentropy:sd,kullbackLeiblerDivergence:wre,poisson:Are,cosineProximity:tg};function xx(r){if(typeof r=="string"){if(r in eg)return eg[r];let e=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new $(e)}else return r}function rg(r,e){return z(()=>{let t=P(.5,Gr(e)),n=ln(Jt(e,t),r.dtype);return zt(sn(r,n),-1)})}function ng(r,e){return z(()=>ln(sn(Bp(r,-1),Bp(e,-1)),"float32"))}function VE(r,e){return z(()=>ne(be(un(sn(r,1),sn(e,1))),"float32"))}function Nre(r,e){return z(()=>ne(be(un(sn(r,1),sn(e,0))),"float32"))}function Dre(r,e){return z(()=>ne(be(un(sn(r,0),sn(e,1))),"float32"))}function hN(r,e){return z(()=>{let t=VE(r,e),n=Dre(r,e),o=Z(t,n);return ne(Et(Jt(o,0),fe(t,o),0),"float32")})}function HE(r,e){return z(()=>{let t=VE(r,e),n=Nre(r,e),o=Z(t,n);return ne(Et(Jt(o,0),fe(t,o),0),"float32")})}function Cx(r,e){return sd(r,e)}function Ix(r,e){return r.rank===e.rank&&(r=xa(r,[r.rank-1])),e=Bp(e,-1),e.dtype!==r.dtype&&(e=ne(e,r.dtype)),ne(sn(r,e),"float32")}var _re=gu,Rre=gu,Mre=nd,Pre=nd,Fre=Qp,Ere=Qp,og=im,Lre=tg,gN=od,Tx={binaryAccuracy:rg,categoricalAccuracy:ng,precision:hN,categoricalCrossentropy:og,sparseCategoricalCrossentropy:gN,mse:_re,MSE:Rre,mae:Mre,MAE:Pre,mape:Fre,MAPE:Ere,cosine:Lre};function qE(r){if(typeof r=="string"&&r in Tx)return Tx[r];if(typeof r!="string"&&r!=null)return r;throw new $(`Unknown metric ${r}`)}function sg(r){if(Ls(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let e;for(let t of Object.keys(eg))if(eg[t]===r){e=t;break}if(e!==void 0)return e;for(let t of Object.keys(Tx))if(Tx[t]===r){e=t;break}return e!==void 0?e:r.name}}function XE(r){let e={Adagrad:()=>Yl.adagrad(.01),Adadelta:()=>Yl.adadelta(1,.95,hr()),Adam:()=>Yl.adam(.001,.9,.999,hr()),Adamax:()=>Yl.adamax(.002,.9,.999,hr(),0),RMSProp:()=>Yl.rmsprop(.001,.9,0,hr()),SGD:()=>Yl.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,r in e)return e[r]();throw new $(`Unknown Optimizer ${r}`)}function yN(r,e,t=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!bN(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){let n=JSON.stringify(r);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${1048576}.`)}}function bN(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let e=Object.keys(r);for(let t of e)if(typeof t!="string"||!bN(r[t]))return!1;return!0}else if(Array.isArray(r)){for(let e of r)if(!bN(e))return!1;return!0}else return!1;else{let e=typeof r;return e==="string"||e==="number"||e==="boolean"}}function YE(r,e,t,n=console.log){let o=Ore(r),s=["Layer (type)","Input Shape","Output shape","Param #"];o?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(l=>Math.floor(e*l)));let a;if(!o){s.push("Receives inputs"),a=[];for(let l in r.nodesByDepth)a.push(...r.nodesByDepth[l])}n("_".repeat(e)),kx(s,t,n),n("=".repeat(e));let i=r.layers;for(let l=0;l<i.length;++l)o?zre(i[l],t,n):Gre(i[l],t,a,n),n((l===i.length-1?"=":"_").repeat(e));r.checkTrainableWeightsConsistency();let p=$re(r),u=Yc(r.nonTrainableWeights);n(`Total params: ${p+u}`),n(`Trainable params: ${p}`),n(`Non-trainable params: ${u}`),n("_".repeat(e))}function $re(r){let e;return r.collectedTrainableWeights!=null?e=Yc(r.collectedTrainableWeights):e=Yc(r.trainableWeights),e}function Ore(r){let e=!0,t=[],n=[];for(let o in r.nodesByDepth)t.push(r.nodesByDepth[o]);for(let o of t){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){e=!1;break}n.push(...o)}if(e)for(let o of r.layers){let s=!1;for(let a of o.inboundNodes)if(n.indexOf(a)!==-1)if(s){e=!1;break}else s=!0;if(!e)break}return e}function kx(r,e,t=console.log){let n="";for(let o=0;o<r.length;++o)o>0&&(n=n.slice(0,n.length-1)+" "),n+=r[o],n=n.slice(0,e[o]),n+=" ".repeat(e[o]-n.length);t(n)}function zre(r,e,t){let n,o;try{o=r.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch{o="multiple"}try{n=JSON.stringify(r.outputShape)}catch{n="multiple"}let s=r.name,a=r.getClassName(),i=[`${s} (${a})`,o,n,r.countParams().toString()];kx(i,e,t)}function Gre(r,e,t,n){let o,s;try{s=r.inboundNodes.map(m=>JSON.stringify(m.inputShapes)).join(",")}catch{s="multiple"}try{o=JSON.stringify(r.outputShape)}catch{o="multiple"}let a=[];for(let m of r.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(m)===-1))for(let c=0;c<m.inboundLayers.length;++c){let d=m.inboundLayers[c].name,f=m.nodeIndices[c],h=m.tensorIndices[c];a.push(`${d}[${f}][${h}]`)}let i=r.name,p=r.getClassName(),u=a.length===0?"":a[0],l=[`${i} (${p})`,s,o,r.countParams().toString(),u];kx(l,e,n);for(let m=1;m<a.length;++m)kx(["","","","",a[m]],e,n)}function ZE(r,e,t){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&e===0&&typeof t=="string"}function um(r,e){if(r===null)return null;if(typeof r=="string")return Gu(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];ZE(e,o,s)?t.push(s):t.push(um(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n];if(n==="name"&&typeof o=="string")t[n]=o;else{let s=Gu(n);t[s]=um(o,s)}}return t}}function vx(r,e){if(r==null)return null;if(typeof r=="string")return ka(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];ZE(e,o,s)?t.push(s):t.push(vx(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n],s=ka(n);(n==="name"||n==="className")&&typeof o=="string"?t[s]=o:t[s]=vx(o,n)}return t}}var ag="0.0.0";var to=class extends Fe{inputs;outputs;inputLayers;inputLayersNodeIndices;inputLayersTensorIndices;outputLayers;outputLayersNodeIndices;outputLayersTensorIndices;layers;layersByDepth;nodesByDepth;internalContainerRefs;containerNodes=new Set;inputNames;outputNames;feedInputShapes;internalInputShapes;internalOutputShapes;feedInputNames;feedOutputNames;constructor(e){if(super({}),this.name=e.name,this.name==null){let x=this.getClassName().toLowerCase();this.name=Xp(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],va(this.inputs).length!==this.inputs.length)throw new $(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);va(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let x of this.outputs){let T=x.sourceLayer,C=x.nodeIndex,v=x.tensorIndex;this.outputLayers.push(T),this.outputLayersNodeIndices.push(C),this.outputLayersTensorIndices.push(v)}for(let x of this.inputs){let T=x.sourceLayer,C=x.nodeIndex,v=x.tensorIndex;Ls(C===0,"input layer has >1 nodes"),Ls(v===0,"input layer has >1 tensors"),this.inputLayers.push(T),this.inputLayersNodeIndices.push(C),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){let T=this.inputLayers[x];if(!(T instanceof Ri))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${x} (0-based) originates from layer type ${T.getClassName()}.`);this.inputNames.push(T.name),this.feedInputShapes.push(T.batchInputShape),this.feedInputNames.push(T.name)}for(let x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);let t={},n={},o={},s={},a={},i=[],p=(x,T,C,v,A,_)=>{(v==null||A==null||_==null)&&(v=x.sourceLayer,A=x.nodeIndex,_=x.tensorIndex);let R=v.inboundNodes[A];if(C.indexOf(R)!==-1)throw new en(`The tensor ${x.name} at layer "${v.name}" is part of a cycle.`);if(T.indexOf(R)!==-1)return;this.containerNodes.add(to.nodeKey(v,A)),v.id in a||(a[v.id]=Object.keys(a).length),C.indexOf(R)===-1&&C.push(R);let M=R.inboundLayers.length;for(let F=0;F<M;F++){let O=R.inputTensors[F],G=R.inboundLayers[F],W=R.nodeIndices[F],U=R.tensorIndices[F];p(O,T,C,G,W,U)}for(T.push(R);C.indexOf(R)>=0;)C.splice(C.indexOf(R),1);i.push(R)},u=[],l=[];for(let x of this.outputs)p(x,u,l);let m=i.slice().reverse();for(let x of m){n[x.id]=x,x.id in t||(t[x.id]=0);let T=t[x.id],C=o[x.outboundLayer.id]==null?0:o[x.outboundLayer.id];T=Math.max(T,C),o[x.outboundLayer.id]=T,s[x.outboundLayer.id]=x.outboundLayer,t[x.id]=T;for(let v=0;v<x.inboundLayers.length;v++){let A=x.inboundLayers[v],_=x.nodeIndices[v],R=A.inboundNodes[_],M=t[R.id]==null?0:t[R.id];t[R.id]=Math.max(T+1,M),n[R.id]=R}}let c={};for(let x in t){let T=t[x];T in c||(c[T]=[]),c[T].push(n[x])}let d={};for(let x in o){let T=o[x];T in d||(d[T]=[]),d[T].push(s[x])}let f=Object.keys(d).map(x=>parseInt(x,10)).sort(jh);this.layers=[];for(let x of f){let T=d[x];T.sort((C,v)=>{let A=a[C.id],_=a[v.id];return A<_?-1:A>_?1:0});for(let C of T)C instanceof to&&this.internalContainerRefs.push(C),this.layers.push(C)}this.layersByDepth=d,f=Object.keys(c).map(x=>parseInt(x,10)).sort(jh);let h=this.inputs.slice(),g=[];for(let x of f)for(let T of c[x]){let C=T.outboundLayer;if(C!=null){for(let v of T.inputTensors)if(h.indexOf(v)===-1)throw new en(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${C.name}". The following previous layers were accessed without issue: ${g}`);for(let v of T.outputTensors)h.push(v);g.push(C.name)}}this.nodesByDepth=c;let b=this.layers.map(x=>x.name);for(let x of b){let T=b.filter(C=>C===x).length;if(T!==1)throw new en(`The name "${x}" is used ${T} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(b))}this.outboundNodes=[],this.inboundNodes=[],new Ku({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new $("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},o=0;for(let a of this.layers)for(let i of a.weights){if(n[i.originalName]!=null)throw new $(`Duplicate weight name: ${i.originalName}`);n[i.originalName]=i,o++}let s=[];for(let a in e){let i=a;if(n[a]==null){let p=a.split("/");i=p.slice(0,-2).concat([p[p.length-1]]).join("/")}if(n[i]!=null)s.push([n[i],e[a]]);else if(t)throw new $(`Provided weight data has no target variable: ${a}`);delete n[i]}if(t){let a=[];for(let i in n)a.push(i);if(a.length>0)throw new $(`${a.length} of ${o} weights are not set: ${a}`)}Zc(s)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${ag}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=vx(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return z(()=>{e=_t(e);let n=new Aa;for(let o=0;o<this.inputs.length;++o)n.add(this.inputs[o],e[o]);return sm(this.outputs,n,t)})}computeMask(e,t){return z(()=>{e=_t(e);let n;return t==null?n=Ia(null,e.length):n=_t(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=Xc(e);if(t.length!==this.inputLayers.length)throw new $(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let p=this.inputLayers[i],u=t[i],l=p.name+"_0_0";n[l]=u}let o=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(jh);if(o.length>1)for(let i of o){let p=this.nodesByDepth[i];for(let u of p){let l=u.outboundLayer;if(this.inputLayers.map(h=>h.id).indexOf(l.id)!==-1)continue;let m=[];for(let h=0;h<u.inboundLayers.length;h++){let g=u.inboundLayers[h],b=u.nodeIndices[h],x=u.tensorIndices[h],T=`${g.name}_${b}_${x}`,C=n[T];m.push(C)}let c=l.computeOutputShape(Er(m)),d=Xc(c),f=l.inboundNodes.indexOf(u);for(let h=0;h<d.length;h++){let g=`${l.name}_${f}_${h}`;n[g]=d[h]}}}let s=[],a=[];for(let i=0;i<this.outputLayers.length;i++){let p=this.outputLayers[i],u=this.outputLayersNodeIndices[i],l=this.outputLayersTensorIndices[i],m=`${p.name}_${u}_${l}`;a.push(m)}for(let i=0;i<a.length;i++){let p=a[i];Ls(p in n),s.push(n[p])}return Er(s)}runInternalGraph(e,t){t==null&&(t=Ia(null,e.length));let n={};for(let p=0;p<this.inputs.length;++p){let u=this.inputs[p],l=e[p],m=t[p];n[u.id]=[l,m]}let o=Object.keys(this.nodesByDepth).map(p=>parseInt(p,10)).sort(jh);for(let p of o){let u=this.nodesByDepth[p];for(let l of u){let m=l.outboundLayer,c=l.inputTensors,d=l.outputTensors,f=new Array;for(let h of c)h.id in n&&f.push(n[h.id]);if(f.length===c.length){let h={},g,b,x,T;if(l.callArgs!=null&&(h=l.callArgs),f.length===1){let[C,v]=f[0];h.mask==null&&(h.mask=v),x=_t(m.call(C,h)),T=_t(m.computeMask(C,v)),g=[C],b=[v]}else g=f.map(C=>C[0]),b=f.map(C=>C[1]),h.mask==null&&(h.mask=b),x=_t(m.call(g,h)),T=_t(m.computeMask(g,b));if(m.activityRegularizer)throw new Re("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let C=0;C<d.length;++C){let v=d[C],A=x[C],_=T[C];n[v.id]=[A,_]}}}}let s=[],a=[],i=[];for(let p of this.outputs){Ls(p.id in n,`Could not compute output ${p.name} : ${p.id}`);let[u,l]=n[p.id];i.push(u.shape),s.push(u),a.push(l)}return[s,a,i]}buildNodeConversionMap(e){let t={},n;for(let o of this.layers){n=o instanceof to?1:0;for(let s=0;s<o.inboundNodes.length;s++){let a=to.nodeKey(o,s);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new $(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new $("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new $(`No such layer: ${e}`)}calculateLosses(){return z(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let o=to.nodeKey(t,n);this.containerNodes.has(o)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let i=a.getClassName(),p=a.getConfig(),u=[];for(let m=0;m<a.inboundNodes.length;m++){let c=a.inboundNodes[m],d=to.nodeKey(a,m),f={};if(this.containerNodes.has(d)){if(c.callArgs)try{JSON.stringify(c.callArgs),f=c.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${c.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(c.inboundLayers.length>0){let h=[];for(let g=0;g<c.inboundLayers.length;g++){let b=c.inboundLayers[g],x=c.nodeIndices[g],T=c.tensorIndices[g],C=to.nodeKey(b,x),v=t[C];v==null&&(v=0),h.push([b.name,v,T,f])}u.push(h)}}}let l={};l.name=a.name,l.className=i,l.config=p,l.inboundNodes=u,n.push(l)}e.layers=n;let o=[];for(let a=0;a<this.inputLayers.length;a++){let i=this.inputLayers[a],p=this.inputLayersNodeIndices[a],u=to.nodeKey(i,p);if(!this.containerNodes.has(u))continue;let l=t[u];l==null&&(l=0);let m=this.inputLayersTensorIndices[a];o.push([i.name,l,m])}e.inputLayers=o;let s=[];for(let a=0;a<this.outputLayers.length;a++){let i=this.outputLayers[a],p=this.outputLayersNodeIndices[a],u=to.nodeKey(i,p);if(!this.containerNodes.has(u))continue;let l=t[u];l==null&&(l=0);let m=this.outputLayersTensorIndices[a];s.push([i.name,l,m])}return e.outputLayers=s,e}static fromConfig(e,t,n={},o=!1){let s={},a={};function i(g,b){g.name in a?a[g.name].push(b):a[g.name]=[b]}function p(g,b){let x=[],T;for(let C of b){let v=C[0],A=C[1],_=C[2];if(T=C[3]==null?{}:C[3],!(v in s)){i(g,b);return}let R=s[v];if(R.inboundNodes.length<=A){i(g,b);return}let M=R.inboundNodes[A];x.push(M.outputTensors[_])}x.length>0&&g.apply(Er(x),T)}function u(g){let b=g.name,x=Sn(g,t.customObjects!=null?t.customObjects:{});x.setFastWeightInitDuringBuild(o),s[b]=x,g.inboundNodes.forEach(C=>{if(!(C instanceof Array))throw new $(`Corrupted configuration, expected array for nodeData: ${C}`);i(x,C)})}let l=t.name,m=t.layers;for(let g of m)u(g);for(;!yP(a);)for(let g of m){let b=s[g.name];if(b.name in a){let x=a[b.name];delete a[b.name];for(let T of x)p(b,T)}}let c=[],d=[],f=t.inputLayers;for(let g of f){let b=g[0],x=g[1],T=g[2];Ls(b in s);let v=s[b].inboundNodes[x].outputTensors;c.push(v[T])}let h=t.outputLayers;for(let g of h){let b=g[0],x=g[1],T=g[2];Ls(b in s);let v=s[b].inboundNodes[x].outputTensors;d.push(v[T])}return new e({inputs:c,outputs:d,name:l})}get stateful(){if(this._stateful)throw new $("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){z(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function Wre(r,e,t){let n=e.length;if(r==null||Array.isArray(r)&&r.length===0)return e.map(o=>null);if(n===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&e[0]in r?[r[e[0]]]:[r];if(Array.isArray(r)){if(r.length!==n)throw new Error(`Provided ${t} is an array of ${r.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let o=[];return e.forEach(s=>{s in r?o.push(r[s]):o.push(null)}),o}else throw new Error(`The model has multiple (${n}) outputs, so ${t} must be either an array with ${n} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(r)}`)}function Sx(r,e){return Wre(r,e,"classWeight")}async function wx(r,e,t,n){if(e!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){let o=z(()=>{if(r.shape.length===1)return bn(r);if(r.shape.length===2){if(r.shape[1]>1)return Bp(r,1);if(r.shape[1]===1)return E(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await o.data());Me(o);let a=[];return s.forEach(i=>{if(t[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(t[i])}),er(a,"float32")}else return null}function QE(r,e){return P(r,e)}var Ure=32;function tL(r,e){let t,n,o=e;t=o.xs,n=o.ys,y.assert(t!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);let s=JE("input",r.inputNames,t),a=JE("output",r.outputNames,n),i=s[0].shape[0];y.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),y.assert(a.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let p=0;p<s.length;p++)y.assert(s[p].shape[0]===i,()=>`Batch size mismatch: input ${r.inputNames[p]} has ${s[p].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);for(let p=0;p<a.length;p++)y.assert(a[p].shape[0]===i,()=>`Batch size mismatch: output ${r.outputNames[p]} has ${a[p].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);return{xs:s,ys:a}}function JE(r,e,t){if(t instanceof He)return[t];if(Array.isArray(t))return y.assert(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${r} keys ${e}.`),t;{let n=[];for(let o of e){if(t[o]==null)throw new $(`The feature data generated by the dataset lacks the required ${r} key '${o}'.`);n.push(t[o])}return n}}function Kre(r){if(r.length===3)throw new Re("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}async function rL(r,e,t){let n=t.batchesPerEpoch!=null;if(y.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),y.assert(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),y.assert(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),y.assert(!n||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),y.assert(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let o=t.validationData!=null,s,a;if(o)if(eL(t.validationData))y.assert(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{let g=Kre(t.validationData);s=g.xs,a=g.ys}let i=r.makeTrainFunction(),p=r.getDedupedMetricsNames(),u;o?u=p.slice().concat(p.map(g=>"val_"+g)):u=p.slice();let l=bx(t.callbacks,t.yieldEvery),m=t.verbose==null?1:t.verbose,{callbackList:c,history:d}=yx(l,m,t.epochs,null,null,Vre(e,t),null,o,u);c.setModel(r),r.history=d,await c.onTrainBegin(),r.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,h=await e.iterator();for(;f<t.epochs;){let g={};await c.onEpochBegin(f);let b=0,x=0;for(n||(h=await e.iterator());!n||b<t.batchesPerEpoch;){let T=await h.next();if(n&&T.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${b} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(T.value!=null){let{xs:C,ys:v}=tL(r,T.value),A={};A.batch=x,A.size=C[0].shape[0],await c.onBatchBegin(x,A);let _=[];if(t.classWeight!=null){let F=Sx(t.classWeight,r.outputNames);for(let O=0;O<F.length;++O)_.push(await wx(v[O],null,F[O]))}let R=C.concat(v).concat(_),M=i(R);Me(R);for(let F=0;F<p.length;++F){let O=p[F],G=M[F];A[O]=G,$t(G)}await c.onBatchEnd(x,A),dx(A),x++,b++}if(n?b>=t.batchesPerEpoch:T.done){if(o){let C;eL(t.validationData)?C=_t(await r.evaluateDataset(t.validationData,{batches:t.validationBatches})):C=_t(r.evaluate(s,a,{batchSize:t.validationBatchSize==null?Ure:t.validationBatchSize,verbose:0}));for(let v=0;v<r.metricsNames.length;++v)g[`val_${r.metricsNames[v]}`]=C[v]}break}if(r.stopTraining_)break}if(await c.onEpochEnd(f,g),f++,r.stopTraining_)break}return await c.onTrainEnd(),await r.history.syncData(),r.history}finally{r.isTraining=!1}}function Vre(r,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(r.size)&&(t=r.size),t}function eL(r){return typeof r.iterator=="function"}function Hre(r){return typeof r.next=="function"}async function nL(r,e,t){t=t||{};let n=t.batches!=null,o=r.testFunction,s=[];if(t.verbose>0)throw new Re("Verbose mode is not implemented yet.");y.assert(!n||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);let a=Hre(e)?e:await e.iterator(),i=0,p=0;for(;!n||p<t.batches;){let u=await a.next();if(s=z(()=>{if(u.value){let{xs:l,ys:m}=tL(r,u.value),c=l.concat(m),d=z(()=>o(c));if(Me(c),p===0)for(let h=0;h<d.length;++h)s.push(ge(0));let f=c[0].shape[0];for(let h=0;h<d.length;++h){let g=d[h],b=s[h];s[h]=z(()=>Z(s[h],P(f,g))),p>0&&Me(b)}Me(d),i+=f,++p}return s}),u.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let l=s[u];s[u]=fe(s[u],i),Me(l)}return Er(s)}function Ax(r){y.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function ad(r,e,t){return r==null?[null]:Array.isArray(r)?r.map(n=>Wu(n,e,t-e)):Wu(r,e,t-e)}function Nx(r,e){return z(()=>r==null?null:Array.isArray(r)?r.map(t=>Nx(t,e)):sx(r,e.dtype==="int32"?e:ne(e,"int32")))}function Dx(r,e){let t=[],n=0,o=null;for(;n<r;)o=n+e,o>=r&&(o=r),t.push([n,o]),n=o;return t}function xN(r){let e=[];r instanceof He&&(r=[r]);for(let t=0;t<r.length;++t){let n=r[t];if(n.rank===1)e.push(Uu(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(n)}}return e}function Na(r,e){if(r==null)return;let t=[];if(e instanceof He)t.push(e.id);else if(Array.isArray(e))e.forEach(o=>t.push(o.id));else if(e!=null)for(let o in e){let s=e[o];t.push(s.id)}let n=[];if(r instanceof He)t.indexOf(r.id)===-1&&n.push(r);else if(Array.isArray(r))r.forEach(o=>{t.indexOf(o.id)===-1&&n.push(o)});else if(r!=null)for(let o in r){let s=r[o];t.indexOf(s.id)===-1&&n.push(s)}n.forEach(o=>{o.isDisposed||o.dispose()})}function qre(r){return r instanceof He}function TN(r){return Array.isArray(r)}function oL(r){return!qre(r)&&!TN(r)}function sL(r,e,t,n=!0,o=""){if(e==null||e.length===0){if(r!=null){let a=!1;if(TN(r)&&r.length>0)a=!0;else if(oL(r)){for(let i in r)if(r.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new $(`Error when checking model ${o} expected no data, but got ${r}`)}return[]}if(r==null)return e.map(a=>null);let s;if(oL(r)){r=r,s=[];for(let a of e){if(r[a]==null)throw new $(`No data provided for "${a}". Need data for each key in: ${e}`);s.push(r[a])}}else if(TN(r)){if(r=r,r.length!==e.length)throw new $(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,e.length>1)throw new $(`The model ${o} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=xN(s),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new $(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${i.shape}`);for(let p=0;p<t[a].length;++p){if(p===0&&!n)continue;let u=i.shape[p],l=t[a][p];if(l!=null&&l>=0&&u!==l)throw new $(`${o} expected a batch of elements where each example has shape [${t[a].slice(1,t[a].length)}] (i.e.,tensor shape [*,${t[a].slice(1,t[a].length)}]) but the ${o} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function jre(r,e,t){let n=va(r.map(s=>s.shape[0]));n.sort();let o=va(e.map(s=>s.shape[0]));if(o.sort(),n.length>1)throw new $(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(o.length>1)throw new $(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(n.length>0&&o.length>0&&!y.arraysEqual(n,o))throw new $(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${o[0]} target sample(s).`)}function Xre(r,e,t){let n=[gu,sd,im];for(let o=0;o<r.length;++o){let s=r[o],a=e[o],i=t[o];if(a!=null){if(a===im&&s.shape[s.shape.length-1]===1)throw new $(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(a)!==-1){let p=s.shape.slice(1),u=i.slice(1);for(let l=0;l<p.length;++l){let m=p[l],c=u[l];if(c!=null&&m!==c)throw new $(`A target Tensor with shape ${s.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function aL(r,e,t,n=!0,o=""){let s;if(Array.isArray(r)){if(r.length!==e.length)throw new $(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(e.length>1)throw new $(`The model expects ${e.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new $(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let p=0;p<t[a].length;++p){if(p===0&&!n)continue;let u=i.shape[p],l=t[a][p];if(l!=null&&l!==u)throw new $(`Error when checking ${o}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function Yre(r,e){if(r==null||Array.isArray(r)&&r.length===0)return e.map(n=>[]);let t;if(typeof r=="string"||typeof r=="function")t=[r];else if(Array.isArray(r)||typeof r=="object")t=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(t))return e.map(n=>t);{let n=[];for(let o of e){let s=t.hasOwnProperty(o)?t[o]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var Zre="layers-model",ro=class extends to{optimizer_;isOptimizerOwned;loss;lossFunctions;feedOutputShapes;feedLossFns;collectedTrainableWeights;testFunction;history;stopTraining_;isTraining;metrics;metricsNames;metricsTensors;userDefinedMetadata;constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new $("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");YE(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=XE(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Jr))throw new $("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new $(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(xx(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new $(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>xx(i))}else{let a=xx(e.loss);this.outputs.forEach(i=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let i=this.internalOutputShapes[a],p=this.outputNames[a];this.feedOutputNames.push(p),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Di("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let o=Yre(e.metrics,this.outputNames),s=(a,i,p)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([p,a])};Di("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=o[a];(u=>{let l="",m,c,d;for(let f of u){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){let g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===sd?["accuracy","acc"].indexOf(f)!==-1?c=rg:["crossentropy","ce"].indexOf(f)!==-1&&(c=Cx):this.lossFunctions[a]===od?["accuracy","acc"].indexOf(f)!==-1?c=Ix:["crossentropy","ce"].indexOf(f)!==-1&&(c=gN):["accuracy","acc"].indexOf(f)!==-1?c=ng:["crossentropy","ce"].indexOf(f)!==-1&&(c=og);let b;["accuracy","acc"].indexOf(f)!==-1?b="acc":["crossentropy","ce"].indexOf(f)!==-1&&(b="ce"),d=c,m=l+b}else d=qE(f),m=l+sg(f);let h;Di(m,()=>{h=d}),s(a,m,h)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let o=n.batchSize==null?32:n.batchSize;Ax(o);let s=!0,a=this.standardizeUserDataXY(e,t,s,o);try{let i=a[0].concat(a[1]);this.makeTestFunction();let p=this.testFunction,u=this.testLoop(p,i,o,n.verbose,n.steps);return Er(u)}finally{Na(a[0],e),Na(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),nL(this,e,t)}checkNumSamples(e,t,n,o="steps"){let s;if(n!=null){if(s=null,t!=null)throw new $(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?s=e[0].shape[0]:s=e.shape[0];else throw new $(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return s}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new $("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),o=n?t:[t],s=this.retrieveSymbolicTensors(o),a=new Aa;if(e instanceof He&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new $(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let p=0;p<this.inputs.length;++p)a.add(this.inputs[p],e[p])}else for(let p of this.inputs){let u=e[p.name];if(u==null)throw new $(`No value is provided for the model's input ${p.name}`);a.add(p,u)}let i=sm(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){let t=Ia(null,e.length),n=e.length;for(let o of this.layers){let s=Array.isArray(o.output)?o.output:[o.output],a=s.map(i=>i.name);for(let i=0;i<e.length;++i){let p=a.indexOf(e[i]);if(p!==-1&&(t[i]=s[p],n--),n===0)break}if(n===0)break}if(n>0){let o=[];throw t.forEach((s,a)=>{s==null&&o.push(e[a])}),new $(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return t}predictLoop(e,t=32,n=!1){return z(()=>{let o=this.checkNumSamples(e);if(n)throw new Re("Verbose predictLoop() is not implemented yet.");let s=Dx(o,t),a=this.outputs.map(i=>[]);for(let i=0;i<s.length;++i)z(()=>{let u=s[i][0],l=s[i][1],m=ad(e,u,l),c=[];if(Array.isArray(m))for(let f=0;f<m.length;++f)c.push({key:this.inputs[f],value:m[f]});else c.push({key:this.inputs[0],value:m});let d=new Aa(c);return sm(this.outputs,d)}).forEach((u,l)=>a[l].push(u));return Er(a.map(i=>gt(i,0)))})}predict(e,t={}){let n=xN(e);aL(n,this.inputNames,this.feedInputShapes,!1);try{let o=t.batchSize==null?32:t.batchSize;return Ax(o),this.predictLoop(n,o)}finally{Na(n,e)}}predictOnBatch(e){aL(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,o){if(this.optimizer_==null)throw new en("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let a=0;a<this.feedOutputShapes.length;++a){let i=this.feedOutputShapes[a];this.feedLossFns[a]===od?s.push(i.slice(0,i.length-1).concat([1])):s.push(i)}if(e=sL(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=sL(t,this.feedOutputNames,s,!1,"target"),jre(e,t,null),Xre(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&e[0].shape[0]%o!==0)throw new $(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,o,s=!0,a){let[i,p]=this.standardizeUserDataXY(e,t,s,a);if(n!=null)throw new Error("sample weight is not supported yet.");let u=null;if(o!=null){let l=Sx(o,this.outputNames);u=[];for(let m=0;m<l.length;++m)u.push(await wx(p[m],null,l[m]))}return[i,p,u]}testLoop(e,t,n,o=0,s){return z(()=>{let a=this.checkNumSamples(t,n,s,"steps"),i=[];if(o>0)throw new Re("Verbose mode is not implemented yet.");if(s!=null)throw new Re("steps mode in testLoop() is not implemented yet");{let p=Dx(a,n),u=er(Cn(0,a));for(let l=0;l<p.length;++l){let m=p[l][0],c=p[l][1],d=Wu(u,m,c-m),f=Nx(t,d),h=e(f);if(l===0)for(let g=0;g<h.length;++g)i.push(ge(0));for(let g=0;g<h.length;++g){let b=h[g];i[g]=Z(i[g],P(c-m,b))}}for(let l=0;l<i.length;++l)i[l]=fe(i[l],a)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let o=e[n],s=o;if(rN(e,o)>1){let a=rN(e.slice(0,n),o);s+=`_${a}`}t.push(s)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{let m=[];for(let h=0;h<this.inputs.length;++h)m.push({key:this.inputs[h],value:n[h]});let c=new Aa(m),d=sm(this.outputs,c,{training:!0}),f;for(let h=0;h<this.lossFunctions.length;++h){let g=this.lossFunctions[h],b=g(o[h],d[h]);s[h]!=null&&(b=QE(b,s[h]));let x=zt(b);t.push(x),h===0?f=b:f=Z(f,b)}for(let h=0;h<this.metricsTensors.length;++h){let g;if(this.outputs.length>1&&h<this.outputs.length)g=t[h];else{let b=this.metricsTensors[h][0],x=this.metricsTensors[h][1];g=zt(b(o[x],d[x]))}$t(g),a.push(g)}return f=zt(f),this.calculateLosses().forEach(h=>{f=Z(f,h)}),f},p=this.collectedTrainableWeights.map(m=>m.read()),u=!0;return[this.optimizer_.minimize(i,u,p)].concat(a)}}makeTestFunction(){this.testFunction=e=>z(()=>{let t=[],n,o=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let u=0;u<this.inputs.length;++u)a.push({key:this.inputs[u],value:o[u]});let i=new Aa(a),p=sm(this.outputs,i);for(let u=0;u<this.lossFunctions.length;++u){let l=this.lossFunctions[u],m=zt(l(s[u],p[u]));u===0?n=m:n=Z(n,m),t.push(n)}for(let u=0;u<this.metricsTensors.length;++u){let l=this.metricsTensors[u][0],m=this.metricsTensors[u][1],c=zt(l(s[m],p[m]));t.push(c)}return t})}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let o,s,a,i,p,u,l,m,c;try{let d=n.batchSize==null?32:n.batchSize;Ax(d);let f=!1,h=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,f,d);o=h[0],s=h[1],c=h[2];let g=!1,b;if(n.validationData!=null&&n.validationData.length>0){if(g=!0,n.validationData.length===2)p=n.validationData[0],u=n.validationData[1];else throw n.validationData.length===3?new Re("validationData including sample weights is not supported yet."):new $(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let M=!0,F=await this.standardizeUserData(p,u,null,null,M,d);l=F[0],m=F[1],b=l.concat(m)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){g=!0;let M=Math.floor(o[0].shape[0]*(1-n.validationSplit)),F=o[0].shape[0];l=ad(o,M,F),a=o,o=ad(o,0,M),m=ad(s,M,F),i=s,s=ad(s,0,M),b=l.concat(m)}else n.validationSteps!=null&&(g=!0);let x=o.concat(s).concat(c);this.checkTrainableWeightsConsistency();let T=this.makeTrainFunction(),C=this.getDedupedMetricsNames(),v,A;g?(this.makeTestFunction(),v=this.testFunction,A=C.slice().concat(C.map(M=>"val_"+M))):(v=null,b=[],A=C.slice());let _=bx(n.callbacks,n.yieldEvery);return await this.fitLoop(T,x,C,d,n.epochs,n.verbose,_,v,b,n.shuffle,A,n.initialEpoch,null,null)}finally{this.isTraining=!1,Na(o,e),Na(s,t),Na(a,e),Na(i,t),Na(l,p),Na(m,u),c!=null&&Me(c)}}async fitLoop(e,t,n,o,s,a,i,p,u,l,m,c,d,f){o==null&&(o=32),s==null&&(s=1),l==null&&(l=!0),c==null&&(c=0);let h=!1;if(p!=null&&u!=null&&(h=!0),f!=null&&(h=!0,d==null))throw new $("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=this.checkNumSamples(t,o,d,"steps_per_epoch"),b;g!=null&&(b=Cn(0,g)),a==null&&(a=1);let{callbackList:x,history:T}=yx(i,a,s,c,g,d,o,h,m);x.setModel(this),this.history=T,await x.onTrainBegin(),this.stopTraining_=!1;for(let C=c;C<s;++C){await x.onEpochBegin(C);let v={};if(d!=null)throw new Re("stepsPerEpoch mode is not implemented yet.");{if(l==="batch")throw new Re("batch shuffling is not implemneted yet");l&&y.shuffle(b);let A=er(b),_=Dx(g,o);for(let R=0;R<_.length;++R){let M={};if(await x.onBatchBegin(R,M),z(()=>{let F=_[R][0],O=_[R][1],G=Wu(A,F,O-F);M.batch=R,M.size=O-F;let W=Nx(t,G),U=e(W);for(let K=0;K<n.length;++K){let H=n[K],X=U[K];M[H]=X,$t(X)}if(R===_.length-1&&h){let K=this.testLoop(p,u,o);for(let H=0;H<n.length;++H){let X=n[H],j=K[H];$t(j),v["val_"+X]=j}}}),await x.onBatchEnd(R,M),dx(M),this.stopTraining_)break}A.dispose()}if(await x.onEpochEnd(C,v),this.stopTraining_)break}return await x.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return rL(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),o=n[0],s=n[1],i=this.makeTrainFunction()(o.concat(s)),p=[];for(let u of i){let l=await u.data();p.push(l[0])}return Me(i),Na(n[0],e),Na(n[1],t),Er(p)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,o=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<o.length;++a)n&&!o[a].trainable||t.push({name:o[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=_h().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-_h().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=ka(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>ka(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let o of t)if(typeof n[o]=="string")e[o]=ka(n[o]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[ka(sg(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>ka(sg(e)));{let e={};for(let t in this.metrics)e[t]=ka(sg(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=um(e.optimizer_config),n=Sn(t),o;if(typeof e.loss=="string")o=Gu(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(a=>Gu(a));else if(e.loss!=null){o={};for(let a in e.loss)o[a]=Gu(e.loss[a])}let s;if(Array.isArray(e.metrics))s=e.metrics.map(a=>Gu(a));else if(e.metrics!=null){s={};for(let a in e.metrics)s[a]=Gu(e.metrics[a])}this.compile({loss:o,metrics:s,optimizer:n})}async save(e,t){if(typeof e=="string"){let u=Wr.getSaveHandlers(e);if(u.length===0)throw new $(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new $(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new $("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Wr.encodeWeights(this.getNamedWeights(t)),o=!1,s=null,i={modelTopology:this.toJSON(s,o),format:Zre,generatedBy:`TensorFlow.js tfjs-layers v${ag}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();let u="optimizer",{data:l,specs:m}=await Wr.encodeWeights(await this.optimizer.getWeights(),u);n.specs.push(...m),n.data=Wr.concatenateArrayBuffers([n.data,l])}return this.userDefinedMetadata!=null&&(yN(this.userDefinedMetadata,this.name,!0),i.userDefinedMetadata=this.userDefinedMetadata),i.weightData=n.data,i.weightSpecs=n.specs,e.save(i)}setUserDefinedMetadata(e){yN(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};q(ro,"className","Model");ee.registerClass(ro);var _x=class extends ro{};q(_x,"className","Functional");ee.registerClass(_x);async function iL(r,e){"modelTopology"in r||(r={modelTopology:r}),r=r;let t=r.modelTopology;t.model_config!=null&&(t=t.model_config);let n=um(t),o=Sn(n,e);if(r.weightsManifest!=null){let s=await Wr.loadWeights(r.weightsManifest,r.pathPrefix,o.weights.map(i=>i.originalName)),a={};for(let i of o.weights)a[i.originalName]=s[i.originalName];o.loadWeights(a),Me(s)}return o}async function uL(r,e){if(e==null&&(e={}),typeof r=="string"){let t=Wr.getLoadHandlers(r,e);if(t.length===0)t.push(Wr.browserHTTPRequest(r,e));else if(t.length>1)throw new $(`Found more than one (${t.length}) load handlers for URL '${r}'`);r=t[0]}return Qre(r,void 0,e)}async function Qre(r,e,t){if(t==null&&(t={}),r.load==null)throw new $("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let n=await r.load(),o=n.modelTopology;o.model_config!=null&&(o=o.model_config);let s=t.strict==null?!0:t.strict,a=n.weightData!=null&&n.weightSpecs!=null&&s,i=Sn(um(o),e,a),p=n.trainingConfig;if(p!=null&&i.loadTrainingConfig(p),n.userDefinedMetadata!=null&&i.setUserDefinedMetadata(n.userDefinedMetadata),n.weightData!=null){if(n.weightSpecs==null)throw new $("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:u,optimizerWeights:l}=Jre(n.weightData,n.weightSpecs);i.loadWeights(u,s),i.optimizer!=null&&l.length>0&&await i.optimizer.setWeights(l),Me(u),Me(l.map(m=>m.tensor))}return i}function Jre(r,e){let t=Wr.decodeWeights(r,e),n={},o=[];return e.forEach(s=>{s.group==="optimizer"?o.push({name:s.name,tensor:t[s.name]}):n[s.name]=t[s.name]}),{modelWeights:n,optimizerWeights:o}}var Rx=class extends ro{model;constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Xp("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new $(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof Rx||e instanceof ro,n;if(t){if(n=e,n.outputs.length!==1)throw new $("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new $("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new $("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let o=ux({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new $(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new $("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=uN(this.outputs[0])}this.inboundNodes=[],new Ku({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ia(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{let o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(Ve(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ro({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new en("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new en("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new en("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new en("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},o=!1){let s,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new $("Legacy serialization format not supported yet.");s=t}else y.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,a=t;let i=new e(a);if(!(i instanceof Rx))throw new Re(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let p of s){let l=Sn(p,void 0,o);o&&l.setFastWeightInitDuringBuild(!0),i.add(l)}return i}set stopTraining(e){if(this.model==null)throw new $("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new $("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},pm=Rx;q(pm,"className","Sequential");ee.registerClass(pm);function ene(r){return new ro(r)}function tne(r){return new pm(r)}function CN(r){return ux(r)}function rne(r,e){rd.registerCallbackConstructor(r,e)}var cn=class extends ee.Serializable{getConfig(){return{}}},Mx=class extends cn{apply(e,t=1){return PP(e,t)}};q(Mx,"className","elu");ee.registerClass(Mx);var Px=class extends cn{apply(e){return wy(e)}};q(Px,"className","selu");ee.registerClass(Px);var Fx=class extends cn{apply(e){return pn(e)}};q(Fx,"className","relu");ee.registerClass(Fx);var Ex=class extends cn{apply(e){return z(()=>Si(6,pn(e)))}};q(Ex,"className","relu6");ee.registerClass(Ex);var Lx=class extends cn{apply(e){return e}};q(Lx,"className","linear");ee.registerClass(Lx);var Bx=class extends cn{apply(e){return Fn(e)}};q(Bx,"className","sigmoid");ee.registerClass(Bx);var $x=class extends cn{apply(e){return EP(e)}};q($x,"className","hardSigmoid");ee.registerClass($x);var Ox=class extends cn{apply(e){return Bu(e)}};q(Ox,"className","softplus");ee.registerClass(Ox);var zx=class extends cn{apply(e){return FP(e)}};q(zx,"className","softsign");ee.registerClass(zx);var Gx=class extends cn{apply(e){return $p(e)}};q(Gx,"className","tanh");ee.registerClass(Gx);var id=class extends cn{apply(e,t=-1){return _c(e,t)}};q(id,"className","softmax");ee.registerClass(id);var Wx=class extends cn{apply(e,t=-1){return dy(e,t)}};q(Wx,"className","logSoftmax");ee.registerClass(Wx);var Ux=class extends cn{apply(e,t=1){return z(()=>P(Fn(P(e,t)),e))}};q(Ux,"className","swish");ee.registerClass(Ux);var Kx=class extends cn{apply(e){return z(()=>P(e,$p(Bu(e))))}};q(Kx,"className","mish");ee.registerClass(Kx);function Pi(r){return r.getClassName()}function IN(r,e={}){return du(r,ee.SerializationMap.getMap().classNameMap,e,"activation")}function Fi(r){if(r==null){let e={};return e.className="linear",e.config={},IN(e)}if(typeof r=="string"){let e={};return e.className=r,e.config={},IN(e)}else return r instanceof cn?r:IN(r)}function kN(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var Vx=class extends ee.Serializable{},Jp=class extends Vx{l1;l2;hasL1;hasL2;constructor(e){super(),kN(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return z(()=>{let t=kt([1]);return this.hasL1&&(t=Z(t,be(P(this.l1,Wt(e))))),this.hasL2&&(t=Z(t,be(P(this.l2,Ql(e))))),E(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};q(Jp,"className","L1L2");ee.registerClass(Jp);function mL(r){return kN(r),new Jp({l1:r!=null?r.l1:null,l2:0})}function cL(r){return kN(r),new Jp({l2:r!=null?r.l2:null,l1:0})}var pL={l1l2:"L1L2"};function Tt(r){return $c(r)}function lL(r,e={}){return du(r,ee.SerializationMap.getMap().classNameMap,e,"regularizer")}function Mt(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in pL?pL[r]:r,config:{}};return lL(t)}else return r instanceof Vx?r:lL(r)}var ud=class extends Fe{maxValue;constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=De(e);let n=pn(e);return this.maxValue!=null&&(n=Xr(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};q(ud,"className","ReLU");ee.registerClass(ud);var pd=class extends Fe{alpha;DEFAULT_ALPHA=.3;constructor(e){super(e??{}),e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=De(e);return Ic(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};q(pd,"className","LeakyReLU");ee.registerClass(pd);var ld=class extends Fe{alphaInitializer;alphaRegularizer;alphaConstraint;sharedAxes;alpha;DEFAULT_ALPHA_INITIALIZER="zeros";constructor(e){if(super(e??{}),e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=St(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Mt(e.alphaRegularizer),this.alphaConstraint=jt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new $(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Ve(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let o of this.sharedAxes)t[o-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let o=1;o<e.length;++o)n[o]=e[o];this.inputSpec=[new Rt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=De(e),Ac(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Ft(this.alphaInitializer),alphaRegularizer:Tt(this.alphaRegularizer),alphaConstraint:qt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};q(ld,"className","PReLU");ee.registerClass(ld);var md=class extends Fe{alpha;DEFAULT_ALPHA=1;constructor(e){if(super(e??{}),e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Re(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=De(e);return Wp(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};q(md,"className","ELU");ee.registerClass(md);var cd=class extends Fe{theta;DEFAULT_THETA=1;constructor(e){super(e??{}),e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=De(e);return P(n,ne(Jt(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};q(cd,"className","ThresholdedReLU");ee.registerClass(cd);var dd=class extends Fe{axis;softmax;DEFAULT_AXIS=1;constructor(e){super(e??{}),e==null&&(e={}),this.softmax=new id().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=De(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};q(dd,"className","Softmax");ee.registerClass(dd);function el(r,e,t){if(typeof r=="number")return Ia(r,e);if(r.length!==e)throw new $(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${r.length} elements.`);for(let n=0;n<e;++n){let o=r[n];if(!DP(o))throw new $(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(r)} including a non-integer number ${o}`)}return r}function Ln(r,e,t,n,o=1){if(r==null)return r;let s=e+(e-1)*(o-1),a;return t==="same"?a=r:a=r-s+1,Math.floor((a+n-1)/n)}function Ei(r,e,t,n){if(r==null)return null;if(n==="valid")r=r*e+_i([t-e,0]);else if(n==="same")r=r*e;else throw new $(`Unsupport padding mode: ${n}.`);return r}function ig(r,e){return z(()=>(Ut(e),e==="channelsFirst"?je(r,[0,2,3,1]):r))}function vN(r,e){return z(()=>(Ut(e),e==="channelsFirst"?je(r,[0,2,3,4,1]):r))}function one(r,e,t,n=1,o="valid",s,a=1){return z(()=>{if(s==null&&(s=In()),Ut(s),r.shape.length!==3)throw new $(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(e.shape.length!==3)throw new $(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new $(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(s==="channelsFirst"&&(r=je(r,[0,2,1])),o==="causal")throw new Re("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=oy(r,e,n,o==="same"?"same":"valid","NWC",a);return t!=null&&(i=kn(i,t)),i})}function dL(r,e,t,n=[1,1],o="valid",s,a,i=null){return z(()=>{if(s==null&&(s=In()),Ut(s),r.rank!==3&&r.rank!==4)throw new $(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(e.rank!==3&&e.rank!==4)throw new $(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let p=ig(r,s);if(o==="causal")throw new Re("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return p=jp.conv2d({x:p,filter:e,strides:n,pad:o==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:i}),s==="channelsFirst"&&(p=je(p,[0,3,1,2])),p})}function sne(r,e,t,n=[1,1,1],o="valid",s,a){return z(()=>{if(s==null&&(s=In()),Ut(s),r.rank!==4&&r.rank!==5)throw new $(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(e.rank!==4&&e.rank!==5)throw new $(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let i=vN(r,s);if(o==="causal")throw new Re("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=ay(i,e,n,o==="same"?"same":"valid","NDHWC",a),t!=null&&(i=kn(i,t)),s==="channelsFirst"&&(i=je(i,[0,4,1,2,3])),i})}var cm=class extends Fe{rank;kernelSize;strides;padding;dataFormat;activation;useBias;dilationRate;biasInitializer;biasConstraint;biasRegularizer;bias=null;DEFAULT_KERNEL_INITIALIZER="glorotNormal";DEFAULT_BIAS_INITIALIZER="zeros";constructor(e,t){if(super(t),cm.verifyArgs(t),this.rank=e,ar(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Re(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=el(t.kernelSize,e,"kernelSize"),this.strides=el(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Tn(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ut(this.dataFormat),this.activation=Fi(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=St(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=jt(t.biasConstraint),this.biasRegularizer=Mt(t.biasRegularizer),this.activityRegularizer=Mt(t.activityRegularizer),this.dilationRate=el(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new $(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new $(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new $(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Ls("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Zy(e.kernelSize,"number",1,3))throw new $(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Pi(this.activation),useBias:this.useBias,biasInitializer:Ft(this.biasInitializer),biasRegularizer:Tt(this.biasRegularizer),activityRegularizer:Tt(this.activityRegularizer),biasConstraint:qt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},tl=class extends cm{filters;kernel=null;kernelInitializer;kernelConstraint;kernelRegularizer;constructor(e,t){super(e,t),tl.verifyArgs(t),this.filters=t.filters,ar(this.filters,"filters"),this.kernelInitializer=St(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=jt(t.kernelConstraint),this.kernelRegularizer=Mt(t.kernelRegularizer)}build(e){e=Ve(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new $(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return z(()=>{e=De(e);let n,o=this.bias==null?null:this.bias.read(),s=Qy(this.activation.getClassName());if(s!=null&&this.rank===2)n=dL(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)n=one(e,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=dL(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=sne(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Re("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=Ve(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){let a=Ln(n[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);t.push(a)}let o=[e[0]];return this.dataFormat==="channelsLast"?(o=o.concat(t),o.push(this.filters)):(o.push(this.filters),o=o.concat(t)),o}getConfig(){let e={filters:this.filters,kernelInitializer:Ft(this.kernelInitializer),kernelRegularizer:Tt(this.kernelRegularizer),kernelConstraint:qt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new $(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},SN=class extends tl{constructor(e){super(2,e),SN.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Zy(e.kernelSize,"number",1,2))throw new $(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},lm=SN;q(lm,"className","Conv2D");ee.registerClass(lm);var wN=class extends tl{constructor(e){super(3,e),wN.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new $(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},mm=wN;q(mm,"className","Conv3D");ee.registerClass(mm);var fd=class extends lm{constructor(e){if(super(e),this.inputSpec=[new Rt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new $(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Ve(e),e.length!==4)throw new $("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new $("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Rt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return z(()=>{let n=De(e);if(n.shape.length!==4)throw new $(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);let p=o[a],u=o[i],l=this.kernelSize[0],m=this.kernelSize[1],c=this.strides[0],d=this.strides[1],f=Ei(p,c,l,this.padding),h=Ei(u,d,m,this.padding),g=[s,f,h,this.filters];this.dataFormat!=="channelsLast"&&(n=je(n,[0,2,3,1]));let b=sy(n,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(b=je(b,[0,3,1,2])),this.bias!=null&&(b=kn(b,this.bias.read(),this.dataFormat)),this.activation!=null&&(b=this.activation.apply(b)),b})}computeOutputShape(e){e=Ve(e);let t=e.slice(),n,o,s;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3):(n=3,o=1,s=2);let a=this.kernelSize[0],i=this.kernelSize[1],p=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[o]=Ei(t[o],p,a,this.padding),t[s]=Ei(t[s],u,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};q(fd,"className","Conv2DTranspose");ee.registerClass(fd);var hd=class extends mm{constructor(e){if(super(e),this.inputSpec=[new Rt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new $(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Ve(e),e.length!==5)throw new $("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new $("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Rt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return z(()=>{let n=De(e);if(n.shape.length!==5)throw new $(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],a,i,p;this.dataFormat==="channelsFirst"?(p=2,a=3,i=4):(p=1,a=2,i=3);let u=o[p],l=o[a],m=o[i],c=this.kernelSize[0],d=this.kernelSize[1],f=this.kernelSize[2],h=this.strides[0],g=this.strides[1],b=this.strides[2],x=Ei(u,h,c,this.padding),T=Ei(l,g,d,this.padding),C=Ei(m,b,f,this.padding),v=[s,x,T,C,this.filters];this.dataFormat!=="channelsLast"&&(n=je(n,[0,2,3,4,1]));let A=uy(n,this.kernel.read(),v,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(A=je(A,[0,4,1,2,3])),this.bias!==null&&(A=kn(A,this.bias.read(),this.dataFormat)),this.activation!==null&&(A=this.activation.apply(A)),A})}computeOutputShape(e){e=Ve(e);let t=e.slice(),n,o,s,a;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3,a=4):(n=4,o=1,s=2,a=3);let i=this.kernelSize[0],p=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],m=this.strides[1],c=this.strides[2];return t[n]=this.filters,t[o]=Ei(t[o],l,i,this.padding),t[s]=Ei(t[s],m,p,this.padding),t[a]=Ei(t[a],c,u,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};q(hd,"className","Conv3DTranspose");ee.registerClass(hd);var Hx=class extends tl{depthMultiplier;depthwiseInitializer;depthwiseRegularizer;depthwiseConstraint;pointwiseInitializer;pointwiseRegularizer;pointwiseConstraint;DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform";DEFAULT_POINTWISE_INITIALIZER="glorotUniform";depthwiseKernel=null;pointwiseKernel=null;constructor(e,t){if(super(e,t),t.filters==null)throw new $("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new $("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new $(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=St(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Mt(t.depthwiseRegularizer),this.depthwiseConstraint=jt(t.depthwiseConstraint),this.pointwiseInitializer=St(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Mt(t.pointwiseRegularizer),this.pointwiseConstraint=jt(t.pointwiseConstraint)}build(e){if(e=Ve(e),e.length<this.rank+2)throw new $(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new $(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],o=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let i=0;i<this.rank;++i)s.push(1);s.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Rt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return z(()=>{e=De(e);let n;if(this.rank===1)throw new Re("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=je(e,[0,2,3,1])),n=Ay(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=kn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=je(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ft(this.depthwiseInitializer),e.pointwiseInitializer=Ft(this.pointwiseInitializer),e.depthwiseRegularizer=Tt(this.depthwiseRegularizer),e.pointwiseRegularizer=Tt(this.pointwiseRegularizer),e.depthwiseConstraint=qt(this.depthwiseConstraint),e.pointwiseConstraint=qt(this.pointwiseConstraint),e}};q(Hx,"className","SeparableConv");var gd=class extends Hx{constructor(e){super(2,e)}};q(gd,"className","SeparableConv2D");ee.registerClass(gd);var AN=class extends tl{constructor(e){super(1,e),AN.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Zy(e.kernelSize,"number",1,1))throw new $(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},bd=AN;q(bd,"className","Conv1D");ee.registerClass(bd);var yd=class extends Fe{cropping;dataFormat;constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return z(()=>{if(e=De(e),this.dataFormat==="channelsLast"){let n=Yh(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Yh(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=Yh(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Yh(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};q(yd,"className","Cropping2D");ee.registerClass(yd);var xd=class extends Fe{DEFAULT_SIZE=[2,2];size;dataFormat;interpolation;constructor(e){super(e),this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ut(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,AP(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return z(()=>{let n=De(e),o=n.shape;if(this.dataFormat==="channelsFirst"){n=je(n,[0,2,3,1]);let s=this.size[0]*o[2],a=this.size[1]*o[3],i=this.interpolation==="nearest"?xn.resizeNearestNeighbor(n,[s,a]):xn.resizeBilinear(n,[s,a]);return je(i,[0,3,1,2])}else{let s=this.size[0]*o[1],a=this.size[1]*o[2];return this.interpolation==="nearest"?xn.resizeNearestNeighbor(n,[s,a]):xn.resizeBilinear(n,[s,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};q(xd,"className","UpSampling2D");ee.registerClass(xd);function ane(r,e,t=[1,1],n="valid",o,s){return z(()=>{o==null&&(o=In()),Ut(o);let a=ig(r,o);if(r.rank!==4)throw new $(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(e.rank!==4)throw new $(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=Gp(a,e,t,n==="same"?"same":"valid","NHWC",s),o==="channelsFirst"&&(a=je(a,[0,3,1,2])),a})}var Td=class extends cm{depthMultiplier;depthwiseInitializer;depthwiseConstraint;depthwiseRegularizer;depthwiseKernel=null;constructor(e){super(2,e),this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=St(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=jt(e.depthwiseConstraint),this.depthwiseRegularizer=Mt(e.depthwiseRegularizer)}build(e){if(e=Ve(e),e.length<4)throw new $(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new $(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],o=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return z(()=>{e=De(e);let n=ane(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=kn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=Ve(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Ln(t,this.kernelSize[0],this.padding,this.strides[0]),a=Ln(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],o,s,a]:[e[0],s,a,o]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ft(this.depthwiseInitializer),e.depthwiseRegularizer=Tt(this.depthwiseRegularizer),e.depthwiseConstraint=qt(this.depthwiseRegularizer),e}};q(Td,"className","DepthwiseConv2D");ee.registerClass(Td);function NN(r,e,t,n){if(Array.isArray(r)){if(e!=null||t!=null)throw new $("When inputs is an array, neither initialState or constants should be provided");n!=null&&(t=r.slice(r.length-n,r.length),r=r.slice(0,r.length-n)),r.length>1&&(e=r.slice(1,r.length)),r=r[0]}function o(s){return s==null||Array.isArray(s)?s:[s]}return e=o(e),t=o(t),{inputs:r,initialState:e,constants:t}}function DN(r,e,t,n=!1,o,s,a=!1,i=!1){return z(()=>{let p=e.shape.length;if(p<3)throw new $(`Input should be at least 3D, but is ${p}D.`);let u=[1,0].concat(Cn(2,p));if(e=je(e,u),s!=null)throw new Re("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=ne(ne(o,"bool"),"float32"),o.rank===p-1&&(o=Cr(o,-1)),o=je(o,u)),n&&(e=Mr(e,0),o!=null&&(o=Mr(o,0)));let l=[],m,c=t,d=e.shape[0],f=Fr(e),h;o!=null&&(h=Fr(o));for(let b=0;b<d;++b){let x=f[b],T=z(()=>r(x,c));if(o==null)m=T[0],c=T[1];else{let C=z(()=>{let v=h[b],A=ce(Gr(v),v),_=Z(P(T[0],v),P(c[0],A)),R=c.map((M,F)=>Z(P(T[1][F],v),P(M,A)));return{output:_,newStates:R}});m=C.output,c=C.newStates}i&&l.push(m)}let g;return i&&(g=dr(l,1)),[m,g,c]})}var _N=class extends Fe{cell;returnSequences;returnState;goBackwards;unroll;stateSpec;states_;keptStates;numConstants;constructor(e){super(e);let t;if(e.cell==null)throw new $("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new hm({cells:e.cell}):t=e.cell,t.stateSize==null)throw new $("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Rt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Cn(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){ix(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],o;if(this.returnSequences?o=[e[0],e[1],n]:o=[e[0],n],this.returnState){let s=[];for(let a of t)s.push([e[0],a]);return[o].concat(s)}else return o}computeMask(e,t){return z(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let o=this.states.map(s=>null);return[n].concat(o)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Re("Constants support is not implemented in RNN yet.");ix(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,o=e.slice(2);this.inputSpec[0]=new Rt({shape:[n,null,...o]});let s=[e[0]].concat(e.slice(2));this.cell.build(s);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!y.arraysEqual(this.stateSpec.map(i=>i.shape[i.shape.length-1]),a))throw new $(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(i=>new Rt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){z(()=>{if(!this.stateful)throw new En("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new $("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>kt([n,o])):this.states_=[kt([n,this.cell.stateSize])];else if(e==null)Me(this.states_),this.keptStates!=null&&(Me(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>kt([n,o])):this.states_[0]=kt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new $(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Me(this.states_);for(let o=0;o<this.states_.length;++o){let s=e[o],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,i=[n,a];if(!y.arraysEqual(s.shape,i))throw new $(`State ${o} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[o]=s}}this.states_=this.states_.map(o=>$t(o.clone()))})}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=NN(e,n,o,this.numConstants);e=s.inputs,n=s.initialState,o=s.constants;let a=[],i=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let u of n)this.stateSpec.push(new Rt({shape:u.shape}));i=i.concat(this.stateSpec)}if(o!=null&&(t.constants=o,a=a.concat(o),this.numConstants=o.length),a[0]instanceof mn){let u=[e].concat(a),l=this.inputSpec.concat(i),m=this.inputSpec;this.inputSpec=l;let c=super.apply(u,t);return this.inputSpec=m,c}else return super.apply(e,t)}call(e,t){return z(()=>{let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;e=De(e),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new $(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:o},u=DN((f,h)=>{let g=this.cell.call([f].concat(h),i);return[g[0],g.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=u[0],m=u[1],c=u[2];this.stateful&&this.resetStates(c,o);let d=this.returnSequences?m:l;return this.returnState?[d].concat(c):d})}getInitialState(e){return z(()=>{let t=kt(e.shape);return t=be(t,[1,2]),t=Uu(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?ox(t,[1,n]):t):this.cell.stateSize>1?[ox(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===_N.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let o=t.cell,s=Sn(o,n);return new e(Object.assign(t,{cell:s}))}},Bs=_N;q(Bs,"className","RNN");ee.registerClass(Bs);var qu=class extends Fe{dropoutMask;recurrentDropoutMask},dm=class extends qu{units;activation;useBias;kernelInitializer;recurrentInitializer;biasInitializer;kernelConstraint;recurrentConstraint;biasConstraint;kernelRegularizer;recurrentRegularizer;biasRegularizer;dropout;recurrentDropout;dropoutFunc;stateSize;kernel;recurrentKernel;bias;DEFAULT_ACTIVATION="tanh";DEFAULT_KERNEL_INITIALIZER="glorotNormal";DEFAULT_RECURRENT_INITIALIZER="orthogonal";DEFAULT_BIAS_INITIALIZER="zeros";constructor(e){super(e),this.units=e.units,ar(this.units,"units"),this.activation=Fi(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=St(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=St(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=St(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Mt(e.kernelRegularizer),this.recurrentRegularizer=Mt(e.recurrentRegularizer),this.biasRegularizer=Mt(e.biasRegularizer),this.kernelConstraint=jt(e.kernelConstraint),this.recurrentConstraint=jt(e.recurrentConstraint),this.biasConstraint=jt(e.biasConstraint),this.dropout=Zl([1,_i([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Zl([1,_i([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ve(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return z(()=>{if(e=e,e.length!==2)throw new $(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let o=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ju({ones:()=>Gr(e),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ju({ones:()=>Gr(n),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));let s,a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?s=wa(P(e,a),this.kernel.read()):s=wa(e,this.kernel.read()),this.bias!=null&&(s=kn(s,this.bias.read())),i!=null&&(n=P(n,i));let p=Z(s,wa(n,this.recurrentKernel.read()));return this.activation!=null&&(p=this.activation.apply(p)),[p,p]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Pi(this.activation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:Tt(this.kernelRegularizer),recurrentRegularizer:Tt(this.recurrentRegularizer),biasRegularizer:Tt(this.biasRegularizer),activityRegularizer:Tt(this.activityRegularizer),kernelConstraint:qt(this.kernelConstraint),recurrentConstraint:qt(this.recurrentConstraint),biasConstraint:qt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};q(dm,"className","SimpleRNNCell");ee.registerClass(dm);var Cd=class extends Bs{constructor(e){e.cell=new dm(e),super(e)}call(e,t){return z(()=>{this.cell.dropoutMask!=null&&(Me(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return new e(t)}};q(Cd,"className","SimpleRNN");ee.registerClass(Cd);var fm=class extends qu{units;activation;recurrentActivation;useBias;kernelInitializer;recurrentInitializer;biasInitializer;kernelRegularizer;recurrentRegularizer;biasRegularizer;kernelConstraint;recurrentConstraint;biasConstraint;dropout;recurrentDropout;dropoutFunc;stateSize;implementation;DEFAULT_ACTIVATION="tanh";DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";DEFAULT_KERNEL_INITIALIZER="glorotNormal";DEFAULT_RECURRENT_INITIALIZER="orthogonal";DEFAULT_BIAS_INITIALIZER="zeros";kernel;recurrentKernel;bias;constructor(e){if(super(e),e.resetAfter)throw new $("GRUCell does not support reset_after parameter set to true.");this.units=e.units,ar(this.units,"units"),this.activation=Fi(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Fi(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=St(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=St(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=St(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Mt(e.kernelRegularizer),this.recurrentRegularizer=Mt(e.recurrentRegularizer),this.biasRegularizer=Mt(e.biasRegularizer),this.kernelConstraint=jt(e.kernelConstraint),this.recurrentConstraint=jt(e.recurrentConstraint),this.biasConstraint=jt(e.biasConstraint),this.dropout=Zl([1,_i([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Zl([1,_i([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ve(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return z(()=>{if(e=e,e.length!==2)throw new $(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ju({ones:()=>Gr(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ju({ones:()=>Gr(o),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,a=this.recurrentDropoutMask,i,p,u;0<this.dropout&&this.dropout<1&&(e=P(e,s[0]));let l=wa(e,this.kernel.read());this.useBias&&(l=kn(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=P(o,a[0]));let m=this.recurrentKernel.read(),[c,d]=Pr(m,[2*this.units,this.units],m.rank-1),f=wa(o,c),[h,g,b]=Pr(l,3,l.rank-1),[x,T]=Pr(f,2,f.rank-1);i=this.recurrentActivation.apply(Z(h,x)),p=this.recurrentActivation.apply(Z(g,T));let C=wa(P(p,o),d);u=this.activation.apply(Z(b,C));let v=Z(P(i,o),P(Z(1,et(i)),u));return[v,v]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Pi(this.activation),recurrentActivation:Pi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:Tt(this.kernelRegularizer),recurrentRegularizer:Tt(this.recurrentRegularizer),biasRegularizer:Tt(this.biasRegularizer),activityRegularizer:Tt(this.activityRegularizer),kernelConstraint:qt(this.kernelConstraint),recurrentConstraint:qt(this.recurrentConstraint),biasConstraint:qt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};q(fm,"className","GRUCell");ee.registerClass(fm);var Id=class extends Bs{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new fm(e),super(e)}call(e,t){return z(()=>{this.cell.dropoutMask!=null&&(Me(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};q(Id,"className","GRU");ee.registerClass(Id);var Hu=class extends qu{units;activation;recurrentActivation;useBias;kernelInitializer;recurrentInitializer;biasInitializer;unitForgetBias;kernelConstraint;recurrentConstraint;biasConstraint;kernelRegularizer;recurrentRegularizer;biasRegularizer;dropout;recurrentDropout;dropoutFunc;stateSize;implementation;DEFAULT_ACTIVATION="tanh";DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";DEFAULT_KERNEL_INITIALIZER="glorotNormal";DEFAULT_RECURRENT_INITIALIZER="orthogonal";DEFAULT_BIAS_INITIALIZER="zeros";kernel;recurrentKernel;bias;constructor(e){super(e),this.units=e.units,ar(this.units,"units"),this.activation=Fi(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Fi(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=St(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=St(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=St(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Mt(e.kernelRegularizer),this.recurrentRegularizer=Mt(e.recurrentRegularizer),this.biasRegularizer=Mt(e.biasRegularizer),this.kernelConstraint=jt(e.kernelConstraint),this.recurrentConstraint=jt(e.recurrentConstraint),this.biasConstraint=jt(e.biasConstraint),this.dropout=Zl([1,_i([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Zl([1,_i([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ve(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let n;if(this.useBias){if(this.unitForgetBias){let o=this.biasInitializer,s=this.units;n=new class extends vn{static className="CustomInit";apply(i,p){let u=o.apply([s]),l=new Zp().apply([s]),m=o.apply([s*2]);return iN(iN(u,l),m)}}}else n=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return z(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new $(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1],s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ju({ones:()=>Gr(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ju({ones:()=>Gr(o),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,i=this.recurrentDropoutMask,p,u,l,m;0<this.dropout&&this.dropout<1&&(e=P(e,a[0]));let c=wa(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=P(o,i[0])),c=Z(c,wa(o,this.recurrentKernel.read())),this.useBias&&(c=kn(c,this.bias.read()));let[d,f,h,g]=Pr(c,4,c.rank-1);p=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(f),l=Z(P(u,s),P(p,this.activation.apply(h))),m=this.recurrentActivation.apply(g);let b=P(m,this.activation.apply(l));return[b,b,l]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Pi(this.activation),recurrentActivation:Pi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Tt(this.kernelRegularizer),recurrentRegularizer:Tt(this.recurrentRegularizer),biasRegularizer:Tt(this.biasRegularizer),activityRegularizer:Tt(this.activityRegularizer),kernelConstraint:qt(this.kernelConstraint),recurrentConstraint:qt(this.recurrentConstraint),biasConstraint:qt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};q(Hu,"className","LSTMCell");ee.registerClass(Hu);var kd=class extends Bs{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Hu(e),super(e)}call(e,t){return z(()=>{this.cell.dropoutMask!=null&&(Me(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};q(kd,"className","LSTM");ee.registerClass(kd);var hm=class extends qu{cells;constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return z(()=>{e=e;let n=e.slice(1),o=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?o.push(n.splice(0,i.stateSize.length)):o.push(n.splice(0,1));o.reverse();let s=[],a;for(let i=0;i<this.cells.length;++i){let p=this.cells[i];n=o[i],i===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=p.call(a,t),s.push(a.slice(1))}n=[];for(let i of s.slice().reverse())n.push(...i);return[a[0]].concat(n)})}build(e){ix(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,o)=>{Di(`RNNCell_${o}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=s=>({className:s.getClassName(),config:s.getConfig()}),o={cells:this.cells.map(t)};return{...e,...o}}static fromConfig(e,t,n={}){let o=[];for(let s of t.cells)o.push(Sn(s,n));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return Qh(e)}setWeights(e){let t=[];for(let n of this.cells){let o=n.weights.length,s=e.splice(o);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],s[a]])}Zc(t)}};q(hm,"className","StackedRNNCells");ee.registerClass(hm);function ju(r){let{ones:e,rate:t,training:n=!1,count:o=1,dropoutFunc:s}=r,a=()=>s!=null?s(e(),t):ax(e(),t),i=()=>Yp(a,e,n);return!o||o<=1?$t(i().clone()):Array(o).fill(void 0).map(i).map(u=>$t(u.clone()))}var qx=class extends Bs{constructor(e){if(e.unroll)throw new Re("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Re("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Rt({ndim:5})]}call(e,t){return z(()=>{if(this.cell.dropoutMask!=null&&(Me(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new $("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return z(()=>{let{stateSize:t}=this.cell,n=e.shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)],a=kt(s);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){z(()=>{if(!this.stateful)throw new En("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)];if(n[0]==null)throw new $("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>kt(s)):this.states_=[kt(s)];else if(e==null)Me(this.states_),this.keptStates!=null&&(Me(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>kt(s)):this.states_[0]=kt(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new $(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Me(this.states_);for(let i=0;i<this.states_.length;++i){let p=e[i],u=s;if(!y.arraysEqual(p.shape,u))throw new $(`State ${i} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${p.shape}`);this.states_[i]=p}}this.states_=this.states_.map(i=>$t(i.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:o,padding:s,strides:a,dilationRate:i}=this.cell,p=t==="channelsFirst",u=e[p?3:2],l=e[p?4:3],m=Ln(u,o[0],s,a[0],i[0]),c=Ln(l,o[1],s,a[1],i[1]);return[...e.slice(0,2),...p?[n,m,c]:[m,c,n]]}};q(qx,"className","ConvRNN2D");var gm=class extends Hu{filters;kernelSize;strides;padding;dataFormat;dilationRate;constructor(e){let{filters:t,kernelSize:n,strides:o,padding:s,dataFormat:a,dilationRate:i}=e;super({...e,units:t}),this.filters=t,ar(this.filters,"filters"),this.kernelSize=el(n,2,"kernelSize"),this.kernelSize.forEach(p=>ar(p,"kernelSize")),this.strides=el(o||1,2,"strides"),this.strides.forEach(p=>ar(p,"strides")),this.padding=s||"valid",Tn(this.padding),this.dataFormat=a||"channelsLast",Ut(this.dataFormat),this.dilationRate=el(i||1,2,"dilationRate"),this.dilationRate.forEach(p=>ar(p,"dilationRate"))}build(e){e=Ve(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new $(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=4,s=this.kernelSize.concat([n,this.filters*o]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let a=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let i;if(this.unitForgetBias){let p=this.biasInitializer,u=this.filters;i=new class extends vn{static className="CustomInit";apply(m,c){let d=p.apply([u]),f=Ir([u]),h=p.apply([u*2]);return zc([d,f,h])}}}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,i,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return z(()=>{if(e.length!==3)throw new $(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,o=e[0],s=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ju({ones:()=>Gr(o),rate:this.dropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let p=this.dropoutMask,u=(ae,ie,me)=>!ie||!ie[me]?ae:P(ie[me],ae),l=u(o,p,0),m=u(o,p,1),c=u(o,p,2),d=u(o,p,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ju({ones:()=>Gr(s),rate:this.recurrentDropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let f=this.recurrentDropoutMask,h=u(s,f,0),g=u(s,f,1),b=u(s,f,2),x=u(s,f,3),T=3,[C,v,A,_]=Pr(this.kernel.read(),i,T),[R,M,F,O]=this.useBias?Pr(this.bias.read(),i):[null,null,null,null];l=this.inputConv(l,C,R,this.padding),m=this.inputConv(m,v,M,this.padding),c=this.inputConv(c,A,F,this.padding),d=this.inputConv(d,_,O,this.padding);let[G,W,U,K]=Pr(this.recurrentKernel.read(),i,T);h=this.recurrentConv(h,G),g=this.recurrentConv(g,W),b=this.recurrentConv(b,U),x=this.recurrentConv(x,K);let H=this.recurrentActivation.apply(Z(l,h)),X=this.recurrentActivation.apply(Z(m,g)),j=Z(P(X,a),P(H,this.activation.apply(Z(c,b)))),re=P(this.recurrentActivation.apply(Z(d,x)),this.activation.apply(j));return[re,re,j]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,o){let s=Fs(e,t,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?kn(s,n,this.dataFormat):s}recurrentConv(e,t){return Fs(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};q(gm,"className","ConvLSTM2DCell");ee.registerClass(gm);var vd=class extends qx{constructor(e){let t=new gm(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};q(vd,"className","ConvLSTM2D");ee.registerClass(vd);var bm=class extends Fe{rate;noiseShape;seed;constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let o=0;o<this.noiseShape.length;++o)n.push(this.noiseShape[o]==null?t[o]:this.noiseShape[o]);return n}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=De(e);if(0<this.rate&&this.rate<1){let o=t.training==null?!1:t.training,s=this.getNoiseShape(n);return Yp(()=>ax(n,this.rate,s,this.seed),()=>n,o)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};q(bm,"className","Dropout");ee.registerClass(bm);var Sd=class extends bm{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};q(Sd,"className","SpatialDropout1D");ee.registerClass(Sd);var wd=class extends Fe{units;activation=null;useBias=!0;kernelInitializer;biasInitializer;kernel=null;bias=null;DEFAULT_KERNEL_INITIALIZER="glorotNormal";DEFAULT_BIAS_INITIALIZER="zeros";kernelConstraint;biasConstraint;kernelRegularizer;biasRegularizer;constructor(e){if(super(e),e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,ar(this.units,"units"),this.activation=Fi(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=St(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=St(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=jt(e.kernelConstraint),this.biasConstraint=jt(e.biasConstraint),this.kernelRegularizer=Mt(e.kernelRegularizer),this.biasRegularizer=Mt(e.biasRegularizer),this.activityRegularizer=Mt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Ve(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=Ve(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=De(e),o=Qy(this.activation.getClassName()),s;return o!=null?s=wa(n,this.kernel.read(),o,this.bias?this.bias.read():null):(s=wa(n,this.kernel.read()),this.bias!=null&&(s=kn(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let e={units:this.units,activation:Pi(this.activation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:Tt(this.kernelRegularizer),biasRegularizer:Tt(this.biasRegularizer),activityRegularizer:Tt(this.activityRegularizer),kernelConstraint:qt(this.kernelConstraint),biasConstraint:qt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};q(wd,"className","Dense");ee.registerClass(wd);var Ad=class extends Fe{dataFormat;constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ve(e);for(let t of e.slice(1))if(t==null)throw new $(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Sa(e,1)]}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=De(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let o=[0];for(let s=2;s<n.rank;++s)o.push(s);o.push(1),n=je(n,o)}return MP(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};q(Ad,"className","Flatten");ee.registerClass(Ad);var Nd=class extends Fe{activation;constructor(e){super(e),this.supportsMasking=!0,this.activation=Fi(e.activation)}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=De(e);return this.activation.apply(n)})}getConfig(){let e={activation:Pi(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};q(Nd,"className","Activation");ee.registerClass(Nd);var Dd=class extends Fe{n;constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return z(()=>(e=De(e),_P(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};q(Dd,"className","RepeatVector");ee.registerClass(Dd);var _d=class extends Fe{targetShape;constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",o=t.slice(),s=1,a=null;for(let p=0;p<o.length;++p){let u=o[p];if(this.isUnknown(u))if(a===null)a=p;else throw new $("Can only specifiy one unknown dimension.");else s*=u}let i=Sa(e);if(a!==null){if(s===0||i%s!==0)throw new $(n);o[a]=i/s}else if(i!==s)throw new $(n);return o}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=De(e),o=n.shape,s=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return E(n,s)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};q(_d,"className","Reshape");ee.registerClass(_d);var Rd=class extends Fe{dims;dimsIncludingBatch;constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Cn(1,e.dims.length+1);if(!y.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Rt({ndim:this.dims.length+1})]}computeOutputShape(e){e=Ve(e);let t=e.slice();return this.dims.forEach((n,o)=>{t[o+1]=e[n]}),t}call(e,t){return je(De(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};q(Rd,"className","Permute");ee.registerClass(Rd);var Md=class extends Fe{maskValue;constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=De(e),o=-1;return Rh($u(n,this.maskValue),o)}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=De(e),o=-1,s=!0,a=Rh($u(n,this.maskValue),o,s);return P(n,ne(a,n.dtype))})}};q(Md,"className","Masking");ee.registerClass(Md);var Pd=class extends Fe{inputDim;outputDim;embeddingsInitializer;maskZero;inputLength;embeddings=null;DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform";embeddingsRegularizer;embeddingsConstraint;constructor(e){if(super(e),e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(_t(e.inputLength))}this.inputDim=e.inputDim,ar(this.inputDim,"inputDim"),this.outputDim=e.outputDim,ar(this.outputDim,"outputDim"),this.embeddingsInitializer=St(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Mt(e.embeddingsRegularizer),this.activityRegularizer=Mt(e.activityRegularizer),this.embeddingsConstraint=jt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return z(()=>this.maskZero?(e=De(e),$u(e,_e(e))):null)}computeOutputShape(e){if(e=Ve(e),this.inputLength==null)return[...e,this.outputDim];let t=_t(this.inputLength);if(t.length!==e.length-1)throw new $(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let o=0;o<t.length;++o){let s=t[o],a=e[o+1];if(s!=null&&a!=null&&s!==a)throw new $(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);s==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=De(e);n.dtype!=="int32"&&(n=ln(n,"int32"));let o=sx(this.embeddings.read(),E(n,[n.size]));return E(o,Ve(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ft(this.embeddingsInitializer),embeddingsRegularizer:Tt(this.embeddingsRegularizer),activityRegularizer:Tt(this.activityRegularizer),embeddingsConstraint:qt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};q(Pd,"className","Embedding");ee.registerClass(Pd);var Xu=class extends Fe{reshapeRequired;constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Re}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let o=0;o<t.length;++o){let s=e[e.length-t.length+o],a=t[o];if(s==null||a==null||s<0||a<0)n.push(null);else if(s===1)n.push(a);else if(a===1)n.push(s);else{if(s!==a)throw new $("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ve(e)]),e=e,e.length<2)throw new $(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let s of e)s!=null&&s[0]!==null&&t.push(s[0]);if(t=va(t),t.length>1)throw new $(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let s=1;s<e.length;++s){let a=e[s]==null?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let o=e.map(s=>s.length);e.indexOf(null)===-1&&va(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return z(()=>{if(e=e,this.reshapeRequired){let n=[],o=e.map(s=>s.rank);if(o.indexOf(null)===-1){let s=_i(o);for(let a of e){let i=a.rank;for(let p=0;p<s-i;++p)a=Uu(a,1);n.push(a)}return this.mergeFunction(n)}else{let s=!1;for(let p of e){let u=p.rank;if(u==null){let l=p.shape,m=l[0],c=l.slice(1).concat([m]),d=E(p,[m].concat(Sa(l.slice(1))));d=je(d,[1,0]),d=E(d,c),n.push(d),s=!0}else if(u>1){let l=Cn(1,u).concat([0]);n.push(je(p,l)),s=!0}else n.push(p)}let a=this.mergeFunction(n),i=a.rank;if(s){if(i==null){let p=a.shape,u=p.length,l=p[u-1],m=[l].concat(p.slice(0,p.length-1));a=E(je(E(a,[-1,l]),[1,0]),m)}else if(i>1){let p=[i-1].concat(Cn(0,i-1));a=je(a,p)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let o=1;o<e.length;++o){let s=e[o]==null?null:e[o].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(let o of e)o!=null&&o[0]!==null&&n.push(o[0]);return n=va(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return z(()=>{if(t==null)return null;if(!Array.isArray(t))throw new $("`mask` should be an Array");if(!Array.isArray(e))throw new $("`inputs` should be an Array");if(t.length!==e.length)throw new $(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(o=>o==null))return null;t=t.map(o=>o==null?o:Cr(o,0));let n=t[0];for(let o=1;o<t.length-1;++o)n=un(n,t[o]);return n})}},Fd=class extends Xu{constructor(e){super(e)}mergeFunction(e){return z(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Z(t,e[n]);return t})}};q(Fd,"className","Add");ee.registerClass(Fd);var Ed=class extends Xu{constructor(e){super(e)}mergeFunction(e){return z(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=P(t,e[n]);return t})}};q(Ed,"className","Multiply");ee.registerClass(Ed);var Ld=class extends Xu{constructor(e){super(e)}mergeFunction(e){return z(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Z(t,e[n]);return P(1/e.length,t)})}};q(Ld,"className","Average");ee.registerClass(Ld);var Bd=class extends Xu{constructor(e){super(e)}mergeFunction(e){return z(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Es(t,e[n]);return t})}};q(Bd,"className","Maximum");ee.registerClass(Bd);var $d=class extends Xu{constructor(e){super(e)}mergeFunction(e){return z(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Si(t,e[n]);return t})}};q($d,"className","Minimum");ee.registerClass($d);var Od=class extends Xu{DEFAULT_AXIS=-1;axis;constructor(e){super(e),e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new $("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let o of e)if(o!=null){t=!1;break}if(t)return;let n=[];for(let o=0;o<e.length;++o){let s=e[o].slice();s.splice(this.axis,1);let a=!1;for(let i of n)if(y.arraysEqual(i,s)){a=!0;break}a||n.push(s)}if(n.length>1)throw new $("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return z(()=>zc(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new $("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),o=this.axis<0?n.length+this.axis:this.axis;for(let s of t.slice(1)){if(n[o]==null||s[o]==null){n[o]=null;break}n[o]+=s[o]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new $("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new $("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new $(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return z(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let o=[];for(let a=0;a<e.length;++a)t[a]==null?o.push(ne(Gr(e[a]),"bool")):t[a].rank<e[a].rank?o.push(Cr(t[a],-1)):o.push(t[a]);let s=gt(o,this.axis);return jb(s,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};q(Od,"className","Concatenate");ee.registerClass(Od);function ug(r,e){for(;r<0;)r+=e;return r}function ine(r,e,t){if(r.shape.length>3||e.shape.length>3)throw new Re("batchDot is not implemented for tensors of 4D or higher rank yet");if(y.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),y.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),r.dtype==="complex64"||e.dtype==="complex64")throw new Re("batchDot is not implemented for complex64-type Tensors yet.");let n=r.shape.length,o=e.shape.length;t==null&&(t=[n-1,o-2]);let s=t;return z(()=>{let a;if(n>o){a=n-o;let p=[];for(let u=0;u<a;++u)p.push(1);e=E(e,e.shape.concat(p))}else if(o>n){a=o-n;let p=[];for(let u=0;u<a;++u)p.push(1);r=E(r,r.shape.concat(p))}else a=0;let i;if(r.shape.length===2&&e.shape.length===2)s[0]===s[1]?i=be(P(r,e),s[0]):i=be(P(je(r,[1,0]),e),s[1]);else{let p=s[0]!==r.shape.length-1,u=s[1]===e.shape.length-1;i=qe(r,e,p,u)}if(a>0){let p;n>o?p=n+o-3:p=n-1;let u=[];for(let l=p;l<p+a;++l)u.push(l);i=xa(i,u)}return i.shape.length===1&&(i=Cr(i,1)),i})}var zd=class extends Xu{axes;normalize;constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){y.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Re("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);if(t[o[0]]!==n[o[1]])throw new $(`Dimension incompatibility: ${t[o[0]]} !== ${n[o[1]]}`)}mergeFunction(e){if(e.length!==2)throw new $(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],o;return Array.isArray(this.axes)?o=this.axes.map((s,a)=>ug(s,e[a].shape.length)):o=[ug(this.axes,t.shape.length),ug(this.axes,n.shape.length)],this.normalize&&(t=Jh(t,o[0]),n=Jh(n,o[1])),ine(t,n,o)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[ug(this.axes,e.length),ug(this.axes,t.length)],n}computeOutputShape(e){y.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Re("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);t.splice(o[0],1),n.splice(o[1],1),n.splice(0,1);let s=t.concat(n);return s.length===1&&s.push(1),s}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};q(zd,"className","Dot");ee.registerClass(zd);var Gd=class extends Fe{stddev;constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=De(e);return Yp(()=>Z(Gc(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};q(Gd,"className","GaussianNoise");ee.registerClass(Gd);var Wd=class extends Fe{rate;constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=De(e);return this.rate>0&&this.rate<1?Yp(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return P(n,Gc(n.shape,1,s))},()=>n,t.training||!1):n})}};q(Wd,"className","GaussianDropout");ee.registerClass(Wd);var Ud=class extends Fe{rate;noiseShape;constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||De(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return z(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return Yp(()=>{let s=De(e),a=1.6732632423543772,i=1.0507009873554805,p=-a*i,u=Jn(ya(n),this.rate);u=ln(u,"float32");let l=((1-this.rate)*(1+this.rate*p**2))**-.5,m=-l*p*this.rate,c=Z(P(s,u),P(Z(u,-1),p));return Z(P(c,l),m)},()=>De(e),t.training||!1)}return e})}};q(Ud,"className","AlphaDropout");ee.registerClass(Ud);function pg(r,e,t,n,o,s=.001){let a;if(r.rank===2)a=Yb(r,e,t,n,o,s);else if(r.rank===3)a=Zb(r,e,t,n,o,s);else if(r.rank===4)a=Qb(r,e,t,n,o,s);else throw new Re(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return a}function une(r,e,t,n,o=.001){return z(()=>{let s=Ml(r,n),a=s.mean,i=s.variance;return[pg(r,a,i,t,e,o),a,i]})}function pne(r,e,t,n,o=.001){return z(()=>{let s=Ml(r,n),a=s.mean,i=s.variance,p=[];for(let f of Cn(0,r.rank))n.indexOf(f)!==-1?p.push(1):p.push(r.shape[f]);let u=E(a,p),l=E(i,p),m=e==null?null:E(e,p),c=t==null?null:E(t,p);return[pg(r,u,l,c,m,o),a,i]})}function lne(r,e,t,n,o=.001){return y.arraysEqual(n.slice().sort(),Cn(0,r.rank-1))?une(r,e,t,n,o):pne(r,e,t,n,o)}var Kd=class extends Fe{axis;momentum;epsilon;center;scale;betaInitializer;gammaInitializer;movingMeanInitializer;movingVarianceInitializer;betaConstraint;gammaConstraint;betaRegularizer;gammaRegularizer;gamma;beta;movingMean;movingVariance;constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=St(e.betaInitializer||"zeros"),this.gammaInitializer=St(e.gammaInitializer||"ones"),this.movingMeanInitializer=St(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=St(e.movingVarianceInitializer||"ones"),this.betaConstraint=jt(e.betaConstraint),this.gammaConstraint=jt(e.gammaConstraint),this.betaRegularizer=Mt(e.betaRegularizer),this.gammaRegularizer=Mt(e.gammaRegularizer)}build(e){e=Ve(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new $(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Rt({ndim:e.length,axes:{[t]:n}})];let o=[n];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return z(()=>{let n=t.training==null?!1:t.training,o=De(e),s=o.shape,a=s.length,i=Cn(0,a),p=this.axis>=0?this.axis:this.axis+a;i.splice(p,1);let u=Ia(1,a);u[p]=s[p];let l=i.slice();l.sort();let m=!y.arraysEqual(l,Cn(0,a).slice(0,a-1)),c=()=>{if(m){let x=E(this.movingMean.read(),u),T=E(this.movingVariance.read(),u),C=this.center?E(this.beta.read(),u):null,v=this.scale?E(this.gamma.read(),u):null;return pg(o,x,T,C,v,this.epsilon)}else return pg(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return c();let[d,f,h]=lne(o,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(x,T,C)=>{z(()=>{let v=1-C,A=x.read(),_=P(ce(A,T),v);x.write(ce(A,_))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,h,this.momentum)})(),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ft(this.betaInitializer),gammaInitializer:Ft(this.gammaInitializer),movingMeanInitializer:Ft(this.movingMeanInitializer),movingVarianceInitializer:Ft(this.movingVarianceInitializer),betaRegularizer:Tt(this.betaRegularizer),gammaRegularizer:Tt(this.gammaRegularizer),betaConstraint:qt(this.betaConstraint),gammaConstraint:qt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};q(Kd,"className","BatchNormalization");ee.registerClass(Kd);var Vd=class extends Fe{axis;epsilon;center;scale;betaInitializer;gammaInitializer;betaRegularizer;gammaRegularizer;gamma;beta;constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=St(e.betaInitializer||"zeros"),this.gammaInitializer=St(e.gammaInitializer||"ones"),this.betaRegularizer=Mt(e.betaRegularizer),this.gammaRegularizer=Mt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Ve(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(let s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==va(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(s=>e[s]),o=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(e,t){let n=De(e),o=n.shape,s=o.length;return z(()=>{let{mean:i,variance:p}=Ml(n,this.axis,!0),u=Ia(1,s);for(let h of this.axis)u[h]=o[h];let l=h=>h!=null&&h.shape.length!==s?E(h,u):h,m=this.scale?l(this.gamma.read()):null,c=this.center?l(this.beta.read()):null,d=[],f=[];for(let h=0;h<s;++h)this.axis.indexOf(h)!==-1?(d.push(o[h]),f.push(1)):(d.push(1),f.push(o[h]));return i=an(i,d),p=an(p,d),m!=null&&(m=an(m,f)),c!=null&&(c=an(c,f)),pg(n,i,p,c,m,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ft(this.betaInitializer),gammaInitializer:Ft(this.gammaInitializer),betaRegularizer:Tt(this.betaRegularizer),gammaRegularizer:Tt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};q(Vd,"className","LayerNormalization");ee.registerClass(Vd);function mne(r,e,t){return z(()=>{if(r.rank!==4)throw new $(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new $("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=In()),t!=="channelsLast"&&t!=="channelsFirst")throw new $(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return t==="channelsFirst"?n=[[0,0],[0,0],e[0],e[1]]:n=[[0,0],e[0],e[1],[0,0]],eo(r,n)})}var Hd=class extends Fe{dataFormat;padding;constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?In():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new $(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new $(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new $(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Rt({ndim:4})]}computeOutputShape(e){e=Ve(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return z(()=>mne(De(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};q(Hd,"className","ZeroPadding2D");ee.registerClass(Hd);function Jx(r,e,t,n,o,s){return z(()=>{Ut(o),nN(s),Tn(n),t==null&&(t=[1,1]),n==null&&(n="valid"),o==null&&(o=In()),s==null&&(s="max"),r=ig(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=Sc(r,e,t,i):a=yc(r,e,t,i),o==="channelsFirst"&&(a=je(a,[0,3,1,2])),a})}function fL(r,e,t,n,o,s){return z(()=>{Ut(o),nN(s),Tn(n),t==null&&(t=[1,1,1]),n==null&&(n="valid"),o==null&&(o=In()),s==null&&(s="max"),r=vN(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=by(r,e,t,i):a=Xb(r,e,t,i),o==="channelsFirst"&&(a=je(a,[0,4,1,2,3])),a})}var jx=class extends Fe{poolSize;strides;padding;constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new $(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(ar(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new $(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);ar(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Tn(this.padding),this.inputSpec=[new Rt({ndim:3})]}computeOutputShape(e){e=Ve(e);let t=Ln(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return z(()=>{this.invokeCallHook(e,t),e=Uu(De(e),2);let n=this.poolingFunction(De(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return xa(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},qd=class extends jx{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ut(s),Tn(o),Jx(e,t,n,o,s,"max")}};q(qd,"className","MaxPooling1D");ee.registerClass(qd);var jd=class extends jx{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ut(s),Tn(o),Jx(e,t,n,o,s,"avg")}};q(jd,"className","AveragePooling1D");ee.registerClass(jd);var Xx=class extends Fe{poolSize;strides;padding;dataFormat;constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new $(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];ar(this.poolSize,"poolSize"),ar(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ut(this.dataFormat),Tn(this.padding),this.inputSpec=[new Rt({ndim:4})]}computeOutputShape(e){e=Ve(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Ln(t,this.poolSize[0],this.padding,this.strides[0]),n=Ln(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return z(()=>(this.invokeCallHook(e,t),this.poolingFunction(De(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Xd=class extends Xx{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ut(s),Tn(o),Jx(e,t,n,o,s,"max")}};q(Xd,"className","MaxPooling2D");ee.registerClass(Xd);var Yd=class extends Xx{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ut(s),Tn(o),Jx(e,t,n,o,s,"avg")}};q(Yd,"className","AveragePooling2D");ee.registerClass(Yd);var Yx=class extends Fe{poolSize;strides;padding;dataFormat;constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new $(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];ar(this.poolSize,"poolSize"),ar(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ut(this.dataFormat),Tn(this.padding),this.inputSpec=[new Rt({ndim:5})]}computeOutputShape(e){e=Ve(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Ln(t,this.poolSize[0],this.padding,this.strides[0]),n=Ln(n,this.poolSize[1],this.padding,this.strides[1]),o=Ln(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,o]:[e[0],t,n,o,e[4]]}call(e,t){return z(()=>(this.invokeCallHook(e,t),this.poolingFunction(De(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Zd=class extends Yx{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ut(s),Tn(o),fL(e,t,n,o,s,"max")}};q(Zd,"className","MaxPooling3D");ee.registerClass(Zd);var Qd=class extends Yx{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ut(s),Tn(o),fL(e,t,n,o,s,"avg")}};q(Qd,"className","AveragePooling3D");ee.registerClass(Qd);var Zx=class extends Fe{constructor(e){super(e),this.inputSpec=[new Rt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Re}},Jd=class extends Zx{constructor(e){super(e||{})}call(e,t){return z(()=>{let n=De(e);return zt(n,1)})}};q(Jd,"className","GlobalAveragePooling1D");ee.registerClass(Jd);var ef=class extends Zx{constructor(e){super(e||{})}call(e,t){return z(()=>{let n=De(e);return Yr(n,1)})}};q(ef,"className","GlobalMaxPooling1D");ee.registerClass(ef);var Qx=class extends Fe{dataFormat;constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ut(this.dataFormat),this.inputSpec=[new Rt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Re}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},tf=class extends Qx{call(e,t){return z(()=>{let n=De(e);return this.dataFormat==="channelsLast"?zt(n,[1,2]):zt(n,[2,3])})}};q(tf,"className","GlobalAveragePooling2D");ee.registerClass(tf);var rf=class extends Qx{call(e,t){return z(()=>{let n=De(e);return this.dataFormat==="channelsLast"?Yr(n,[1,2]):Yr(n,[2,3])})}};q(rf,"className","GlobalMaxPooling2D");ee.registerClass(rf);var eT=class extends Fe{layer;constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let o=t.layer,s=Sn(o,n);delete t.layer;let a={layer:s};return Object.assign(a,t),new e(a)}},nf=class extends eT{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Ve(e),e.length<3)throw new $(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Ve(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),o=e[1];return[n[0],o].concat(n.slice(1))}call(e,t){return z(()=>(e=De(e),DN((a,i)=>[De(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};q(nf,"className","TimeDistributed");ee.registerClass(nf);function cne(r){fu(SP,"BidirectionalMergeMode",r)}var dne="concat",of=class extends eT{mergeMode;forwardLayer;backwardLayer;returnSequences;returnState;numConstants;_trainable;constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Sn(n),t.goBackwards=t.goBackwards!==!0;let o={};if(o.className=e.layer.getClassName(),o.config=t,this.backwardLayer=Sn(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?dne:e.mergeMode,cne(this.mergeMode),e.weights)throw new Re("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,o,s;return this.returnState&&(s=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,o=[n]):this.mergeMode==null?o=[n,n.slice()]:o=[n],this.returnState?this.mergeMode==null?o.concat(s).concat(s.slice()):[n].concat(s).concat(s.slice()):Er(o)}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=NN(e,n,o,this.numConstants);if(e=s.inputs,n=s.initialState,o=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&o==null)return super.apply(e,t);let a=[],i=[];if(n!=null){let u=n.length;if(u%2>0)throw new $("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let l=n.map(m=>new Rt({shape:m.shape}));this.forwardLayer.stateSpec=l.slice(0,u/2),this.backwardLayer.stateSpec=l.slice(u/2),i.push(...l)}if(o!=null)throw new Re("Support for constants in Bidirectional layers is not implemented yet.");let p=a[0]instanceof mn;for(let u of a)if(u instanceof mn!==p)throw new $("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(p){let u=[e].concat(a),l=this.inputSpec.concat(i),m=this.inputSpec;this.inputSpec=l;let c=super.apply(u,t);return this.inputSpec=m,c}else return super.apply(e,t)}call(e,t){return z(()=>{let n=t.initialState,o,s;if(n==null)o=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{let p=n.slice(0,n.length/2),u=n.slice(n.length/2);o=this.forwardLayer.call(e,Object.assign(t,{initialState:p})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let a;this.returnState&&(Array.isArray(o)&&(a=o.slice(1).concat(s.slice(1))),o=o[0],s=s[0]),this.returnSequences&&(s=Mr(s,1));let i;return this.mergeMode==="concat"?i=zc([o,s]):this.mergeMode==="sum"?i=Z(o,s):this.mergeMode==="ave"?i=P(.5,Z(o,s)):this.mergeMode==="mul"?i=P(o,s):this.mergeMode==null&&(i=[o,s]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Di(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Di(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let s=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(s).concat(s):[n].concat(s).concat(s)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Sn(t.layer);if(delete t.layer,t.numConstants!=null)throw new Re("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let o=t;return o.layer=n,new e(o)}};q(of,"className","Bidirectional");ee.registerClass(of);var sf=class extends Fe{scale;offset;constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return z(()=>(e=De(e),e.dtype!=="float32"&&(e=ln(e,"float32")),Z(P(e,this.scale),this.offset)))}};q(sf,"className","Rescaling");ee.registerClass(sf);var{resizeBilinear:fne,cropAndResize:hne}=xn,af=class extends Fe{height;width;constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,o,s,a,i,p){return z(()=>{let u,l=!1,m=t/a,c=n/i,d=(o+t)/a,f=(s+n)/i,h=[m,c,d,f],g=[];e.rank===3?(l=!0,u=dr([e])):u=e;for(let v=0;v<u.shape[0];v++)g.push(h);let b=cr(g,[g.length,4]),x=mu(0,g.length,1,"int32"),C=hne(u,b,x,[o,s],"nearest");return l?ln(De(Fr(C)),p):ln(C,p)})}upsize(e,t,n,o){return z(()=>{let s=fne(e,[t,n]);return ln(s,o)})}call(e,t){return z(()=>{let n=De(e),o=n.dtype,s=n.shape,a=s[s.length-3],i=s[s.length-2],p=0;a!==this.height&&(p=Math.floor((a-this.height)/2));let u=0;return i!==this.width&&(u=Math.floor((i-this.width)/2),u===0&&(u=1)),p>=0&&u>=0?this.centerCrop(n,p,u,this.height,this.width,a,i,o):this.upsize(e,this.height,this.width,o)})}getConfig(){let e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Ve(e);let t=e.length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}};q(af,"className","CenterCrop");ee.registerClass(af);function hL(r,e,t,n){let o=De(r);if(o.dtype!=="int32"&&(o=ln(o,"int32")),e==="int")return o;let s=o.shape;if(o.rank===0&&(o=Cr(o,-1)),e==="oneHot"&&o.shape[o.shape.length-1]!==1&&(o=Cr(o,-1)),o.rank>2)throw new $(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${s} which would result in output rank ${o.rank}.`);let a=["multiHot","oneHot"].includes(e),i=o,p;if(typeof n<"u"&&e==="count"?p=Eh(i,n,t,a):p=Eh(i,[],t,a),e!=="tfIdf")return p;if(n)return P(p,n);throw new $("When outputMode is 'tfIdf', weights must be provided.")}var uf=class extends Fe{numTokens;outputMode;constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){let e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=Ve(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return z(()=>{e=De(e),e.dtype!=="int32"&&(e=ln(e,"int32"));let n;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new $(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);n=De(t.countWeights)}let o=Yr(e),s=Nl(e),a=Jt(this.numTokens,o).bufferSync().get(0),i=Jn(s,0).bufferSync().get(0);if(!(a&&i))throw new $(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return hL(e,this.outputMode,this.numTokens,n)})}};q(uf,"className","CategoryEncoding");ee.registerClass(uf);var bne=["bilinear","nearest"],gL=new Set(bne),pf=class extends Fe{height;width;interpolation;cropToAspectRatio;constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(gL.has(e.interpolation))this.interpolation=e.interpolation;else throw new $(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){e=Ve(e);let t=e[2];return[this.height,this.width,t]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return z(()=>{let n=[this.height,this.width];if(this.interpolation==="bilinear")return xn.resizeBilinear(e,n,!this.cropToAspectRatio);if(this.interpolation==="nearest")return xn.resizeNearestNeighbor(e,n,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...gL]} are supported`)})}};q(pf,"className","Resizing");ee.registerClass(pf);var lg=class{seed;constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}};q(lg,"className","RandomSeed");var mg=class extends Fe{randomGenerator;constructor(e){super(e),this.randomGenerator=new lg(e.seed)}getConfig(){let e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}};q(mg,"className","BaseRandomLayer");var yne=["bilinear","nearest"],bL=new Set(yne),lf=class extends mg{factor;interpolation;widthLower;widthUpper;imgHeight;adjustedWidth;widthFactor;constructor(e){super(e);let{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new $(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new $(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new $(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(n)if(bL.has(n))this.interpolation=n;else throw new $(`Invalid interpolation parameter: ${n} is not implemented`)}getConfig(){let e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Ve(e);let t=e[2];return[this.imgHeight,this.adjustedWidth,t]}call(e,t){return z(()=>{let n=De(e);this.imgHeight=n.shape[n.shape.length-3];let o=n.shape[n.shape.length-2];this.widthFactor=ya([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next()),this.adjustedWidth=this.widthFactor.dataSync()[0]*o,this.adjustedWidth=Math.round(this.adjustedWidth);let s=[this.imgHeight,this.adjustedWidth];switch(this.interpolation){case"bilinear":return xn.resizeBilinear(e,s);case"nearest":return xn.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...bL]} are supported`)}})}};q(lf,"className","RandomWidth");ee.registerClass(lf);function xne(r){return new Ri(r)}function Tne(r){return new md(r)}function Cne(r){return new ud(r)}function Ine(r){return new pd(r)}function kne(r){return new ld(r)}function vne(r){return new dd(r)}function Sne(r){return new cd(r)}function wne(r){return new bd(r)}function Ane(r){return new lm(r)}function Nne(r){return new fd(r)}function Dne(r){return new mm(r)}function _ne(r){return new hd(r)}function Rne(r){return new gd(r)}function Mne(r){return new yd(r)}function Pne(r){return new xd(r)}function Fne(r){return new Td(r)}function Ene(r){return new Nd(r)}function Lne(r){return new wd(r)}function Bne(r){return new bm(r)}function $ne(r){return new Sd(r)}function One(r){return new Ad(r)}function zne(r){return new Dd(r)}function Gne(r){return new _d(r)}function Wne(r){return new Rd(r)}function Une(r){return new Pd(r)}function Kne(r){return new Fd(r)}function Vne(r){return new Ld(r)}function Hne(r){return new Od(r)}function qne(r){return new Bd(r)}function jne(r){return new $d(r)}function Xne(r){return new Ed(r)}function Yne(r){return new zd(r)}function Zne(r){return new Kd(r)}function Qne(r){return new Vd(r)}function Jne(r){return new Hd(r)}function RN(r){return new jd(r)}function eoe(r){return RN(r)}function toe(r){return RN(r)}function MN(r){return new Yd(r)}function roe(r){return MN(r)}function noe(r){return MN(r)}function PN(r){return new Qd(r)}function ooe(r){return PN(r)}function soe(r){return PN(r)}function aoe(r){return new Jd(r)}function ioe(r){return new tf(r)}function yL(r){return new ef(r)}function xL(r){return new rf(r)}function TL(r){return new qd(r)}function CL(r){return new Xd(r)}function uoe(r){return new Zd(r)}function poe(r){return new Id(r)}function loe(r){return new fm(r)}function moe(r){return new kd(r)}function coe(r){return new Hu(r)}function doe(r){return new Cd(r)}function foe(r){return new dm(r)}function hoe(r){return new vd(r)}function goe(r){return new gm(r)}function boe(r){return new Bs(r)}function yoe(r){return new hm(r)}function xoe(r){return new of(r)}function Toe(r){return new nf(r)}var Coe=yL,Ioe=xL,koe=TL,voe=CL;function Soe(r){return new Gd(r)}function woe(r){return new Wd(r)}function Aoe(r){return new Ud(r)}function Noe(r){return new Md(r)}function Doe(r){return new sf(r)}function _oe(r){return new af(r)}function Roe(r){return new pf(r)}function Moe(r){return new uf(r)}function Poe(r){return new lf(r)}var kL={};Ye(kL,{MAPE:()=>Koe,MSE:()=>qoe,binaryAccuracy:()=>Foe,binaryCrossentropy:()=>Eoe,categoricalAccuracy:()=>Boe,categoricalCrossentropy:()=>$oe,cosineProximity:()=>Goe,mape:()=>Voe,meanAbsoluteError:()=>Woe,meanAbsolutePercentageError:()=>Uoe,meanSquaredError:()=>Hoe,mse:()=>joe,precision:()=>Ooe,recall:()=>zoe,sparseCategoricalAccuracy:()=>Loe});function Foe(r,e){return rg(r,e)}function Eoe(r,e){return Cx(r,e)}function Loe(r,e){return Ix(r,e)}function Boe(r,e){return ng(r,e)}function $oe(r,e){return og(r,e)}function Ooe(r,e){return hN(r,e)}function zoe(r,e){return HE(r,e)}function Goe(r,e){return tg(r,e)}function Woe(r,e){return nd(r,e)}function Uoe(r,e){return Qp(r,e)}function Koe(r,e){return Qp(r,e)}function Voe(r,e){return Qp(r,e)}function Hoe(r,e){return gu(r,e)}function qoe(r,e){return gu(r,e)}function joe(r,e){return gu(r,e)}var vL={};Ye(vL,{modelFromJSON:()=>iL});var SL={};Ye(SL,{l1:()=>Yoe,l1l2:()=>Xoe,l2:()=>Zoe});function Xoe(r){return new Jp(r)}function Yoe(r){return mL(r)}function Zoe(r){return cL(r)}var rT=class extends Vu{model=null;setModel(e){if(!(e instanceof ro))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function tT(r,e){return r<e}function wL(r,e){return r>e}var nT=class extends rT{monitor;minDelta;patience;baseline;verbose;mode;monitorFunc;wait;stoppedEpoch;best;constructor(e){if(super(),e==null&&(e={}),e.restoreBestWeights)throw new Re("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=tT:this.mode==="max"?this.monitorFunc=wL:this.monitor.indexOf("acc")!==-1?this.monitorFunc=wL:this.monitorFunc=tT,this.monitorFunc===tT&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===tT?1/0:-1/0}async onEpochEnd(e,t){await hu(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function Qoe(r){return new nT(r)}var Joe={earlyStopping:Qoe};var ese=L();ese.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var FN=(te=>(te[te.DT_INVALID=0]="DT_INVALID",te[te.DT_FLOAT=1]="DT_FLOAT",te[te.DT_DOUBLE=2]="DT_DOUBLE",te[te.DT_INT32=3]="DT_INT32",te[te.DT_UINT8=4]="DT_UINT8",te[te.DT_INT16=5]="DT_INT16",te[te.DT_INT8=6]="DT_INT8",te[te.DT_STRING=7]="DT_STRING",te[te.DT_COMPLEX64=8]="DT_COMPLEX64",te[te.DT_INT64=9]="DT_INT64",te[te.DT_BOOL=10]="DT_BOOL",te[te.DT_QINT8=11]="DT_QINT8",te[te.DT_QUINT8=12]="DT_QUINT8",te[te.DT_QINT32=13]="DT_QINT32",te[te.DT_BFLOAT16=14]="DT_BFLOAT16",te[te.DT_QINT16=15]="DT_QINT16",te[te.DT_QUINT16=16]="DT_QUINT16",te[te.DT_UINT16=17]="DT_UINT16",te[te.DT_COMPLEX128=18]="DT_COMPLEX128",te[te.DT_HALF=19]="DT_HALF",te[te.DT_RESOURCE=20]="DT_RESOURCE",te[te.DT_VARIANT=21]="DT_VARIANT",te[te.DT_UINT32=22]="DT_UINT32",te[te.DT_UINT64=23]="DT_UINT64",te[te.DT_FLOAT_REF=101]="DT_FLOAT_REF",te[te.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",te[te.DT_INT32_REF=103]="DT_INT32_REF",te[te.DT_UINT8_REF=104]="DT_UINT8_REF",te[te.DT_INT16_REF=105]="DT_INT16_REF",te[te.DT_INT8_REF=106]="DT_INT8_REF",te[te.DT_STRING_REF=107]="DT_STRING_REF",te[te.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",te[te.DT_INT64_REF=109]="DT_INT64_REF",te[te.DT_BOOL_REF=110]="DT_BOOL_REF",te[te.DT_QINT8_REF=111]="DT_QINT8_REF",te[te.DT_QUINT8_REF=112]="DT_QUINT8_REF",te[te.DT_QINT32_REF=113]="DT_QINT32_REF",te[te.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",te[te.DT_QINT16_REF=115]="DT_QINT16_REF",te[te.DT_QUINT16_REF=116]="DT_QUINT16_REF",te[te.DT_UINT16_REF=117]="DT_UINT16_REF",te[te.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",te[te.DT_HALF_REF=119]="DT_HALF_REF",te[te.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",te[te.DT_VARIANT_REF=121]="DT_VARIANT_REF",te[te.DT_UINT32_REF=122]="DT_UINT32_REF",te[te.DT_UINT64_REF=123]="DT_UINT64_REF",te))(FN||{}),tse;(e=>{let r;(s=>(s[s.LEGACY=0]="LEGACY",s[s.V1=1]="V1",s[s.V2=2]="V2"))(r=e.CheckpointFormatVersion||={})})(tse||={});var EN={};function nse(r,e){let t={tfOpName:r,category:"custom",inputs:[],attrs:[],customExecutor:e};EN[r]=t}function oT(r){return EN[r]}function ose(r){delete EN[r]}function k(r,e,t,n,o){let s=e.inputParams[r];if(s&&s.inputIndexStart!==void 0){let i=s.inputIndexStart,p=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?i+1:s.inputIndexEnd,u=i<0?e.inputNames.length+i:i;if(s.type==="tensor")return gr(e.inputNames[u],t,n,o);if(s.type==="tensors"){let c=e.inputs.slice(i,p);return e.inputNames.slice(i,p).filter((f,h)=>c[h]?.op!=="NoOp").map(f=>gr(f,t,n,o))}let l=gr(e.inputNames[u],t,n,o),m=l.dataSync();return s.type==="number"?m[0]:y.toNestedArray(l.shape,m)}let a=e.attrParams[r];return a&&a.value}function gr(r,e,t,n){let[o,s]=wn(r,t);if(n!=null){let i=n.getHashTableHandleByName(o);if(i!=null)return i}let a=t.currentContextIds.find(i=>!!e[sT(o,i)]);return a!==void 0?e[sT(o,a)][s]:void 0}function LN(r,e,t){return e[sT(r,t.currentContextId)]}function Li(r,e){let[t,n,o]=wn(r,e);return[sT(t,e&&e.currentContextId),n,o]}function sT(r,e){return e?`${r}-${e}`:r}function wn(r,e){if(r==="")return["",0,void 0];let t=e!=null&&e.parseNodeNameCache!=null;if(t){let s=e.parseNodeNameCache.get(r);if(s!=null)return s}let n=r.split(":"),o;if(n.length===1)o=[r,0,void 0];else{let s=n[0],a=n.length===3?n[1]:void 0,i=Number(n[n.length-1]);o=[s,i,a]}return t&&e.parseNodeNameCache.set(r,o),o}function cg(r,e,t){let n=k("pad",r,e,t);if(n==="explicit"){n=k("explicitPaddings",r,e,t);let o=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)o[s][0]=n[s*2],o[s][1]=n[s*2+1];return o}return n}function Bi(r){return r.kept?r:bn(r)}var BN={};Ye(BN,{json:()=>sse});var sse=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var $N={};Ye($N,{json:()=>ase});var ase=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var ON={};Ye(ON,{json:()=>ise});var ise=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var zN={};Ye(zN,{json:()=>use});var use=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var GN={};Ye(GN,{json:()=>pse});var pse=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var WN={};Ye(WN,{json:()=>lse});var lse=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var UN={};Ye(UN,{json:()=>mse});var mse=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var KN={};Ye(KN,{json:()=>cse});var cse=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var VN={};Ye(VN,{json:()=>dse});var dse=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var HN={};Ye(HN,{json:()=>fse});var fse=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var qN={};Ye(qN,{json:()=>hse});var hse=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var jN={};Ye(jN,{json:()=>gse});var gse=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}];var XN={};Ye(XN,{json:()=>bse});var bse=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var YN={};Ye(YN,{json:()=>yse});var yse=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var ZN={};Ye(ZN,{json:()=>xse});var xse=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var QN={};Ye(QN,{json:()=>Tse});var Tse=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var JN={};Ye(JN,{json:()=>Cse});var Cse=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var eD={};Ye(eD,{json:()=>Ise});var Ise=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var tD={};Ye(tD,{json:()=>kse});var kse=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var mf=class{opMappers;static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[BN,$N,ON,zN,GN,WN,UN,KN,VN,HN,qN,jN,XN,YN,ZN,QN,JN,eD,tD],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,o)=>(n[o.tfOpName]=o,n),{})}transformGraph(e,t={}){let n=e.node,o=[],s=[],a=[],i=n.reduce((h,g)=>(h[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?o.push(h[g.name]):g.op==="Const"?s.push(h[g.name]):(g.input==null||g.input.length===0)&&a.push(h[g.name]),h),{}),p=[],u=[],l={},m={};t!=null&&(l=this.mapSignatureEntries(t.inputs),m=this.mapSignatureEntries(t.outputs));let c=Object.keys(i);c.forEach(h=>{let g=i[h];g.inputNames.forEach((b,x)=>{let[T,,C]=Li(b),v=i[T];if(v.outputs!=null){let A=v.outputs.indexOf(C);if(A!==-1){let _=`${T}:${A}`;g.inputNames[x]=_}}g.inputs.push(v),v.children.push(g)})}),Object.keys(m).length===0?c.forEach(h=>{let g=i[h];g.children.length===0&&u.push(g)}):Object.keys(m).forEach(h=>{let[g]=Li(h),b=i[g];b!=null&&(b.signatureKey=m[h],u.push(b))}),Object.keys(l).length>0?Object.keys(l).forEach(h=>{let[g]=Li(h),b=i[g];b&&(b.signatureKey=l[h],p.push(b))}):p=o;let d={};e.library!=null&&e.library.function!=null&&(d=e.library.function.reduce((h,g)=>(h[g.signature.name]=this.mapFunction(g),h),{}));let f={nodes:i,inputs:p,outputs:u,weights:s,placeholders:o,signature:t,functions:d};return a.length>0&&(f.initNodes=a),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=oT(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(o=>o.startsWith("^")?o.slice(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((o,s)=>(o[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},o),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((o,s)=>{let a=s.type,i;switch(s.type){case"string":i=aT(e.attr,s.tfName,s.defaultValue),i===void 0&&s.tfDeprecatedName&&(i=aT(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":i=dT(e.attr,s.tfName,s.defaultValue),i===void 0&&s.tfDeprecatedName&&(i=dT(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":i=uT(e.attr,s.tfName,s.defaultValue||0),i===void 0&&s.tfDeprecatedName&&(i=uT(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":i=cT(e.attr,s.tfName,s.defaultValue),i===void 0&&s.tfDeprecatedName&&(i=cT(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":i=iT(e.attr,s.tfName,s.defaultValue),i===void 0&&s.tfDeprecatedName&&(i=iT(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":i=hT(e.attr,s.tfName,s.defaultValue),i===void 0&&s.tfDeprecatedName&&(i=hT(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":i=mT(e.attr,s.tfName,s.defaultValue),i===void 0&&s.tfDeprecatedName&&(i=mT(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":i=fT(e.attr,s.tfName,s.defaultValue),i===void 0&&s.tfDeprecatedName&&(i=fT(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":i=pT(e.attr,s.tfName,s.defaultValue),i===void 0&&s.tfDeprecatedName&&(i=pT(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":i=lT(e.attr,s.tfName,s.defaultValue),i===void 0&&s.tfDeprecatedName&&(i=lT(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":i=AL(e.attr,s.tfName,s.defaultValue),i===void 0&&s.tfDeprecatedName&&(i=AL(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${e.op}`)}return o[s.name]={value:i,type:a},o},{})),n}mapFunction(e){let t=e.nodeDef,n=[],o=[],s={};t!=null&&(s=t.reduce((m,c)=>(m[c.name]=this.mapNode(c),c.op==="Const"&&o.push(m[c.name]),m),{}));let a=[],i=[];e.signature.inputArg.forEach(m=>{let[c]=Li(m.name),d={name:c,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:rD(m.type),type:"dtype"}},children:[]};d.signatureKey=m.name,a.push(d),s[c]=d}),Object.keys(s).forEach(m=>{let c=s[m];c.inputNames.forEach((d,f)=>{let[h,,g]=Li(d),b=s[h];if(b.outputs!=null){let x=b.outputs.indexOf(g);if(x!==-1){let T=`${h}:${x}`;c.inputNames[f]=T}}c.inputs.push(b),b.children.push(c)})});let u=e.ret;e.signature.outputArg.forEach(m=>{let[c,d]=Li(u[m.name]),f=s[c];f!=null&&(f.defaultOutput=d,i.push(f))});let l=this.mapArgsToSignature(e);return{nodes:s,inputs:a,outputs:i,weights:o,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};q(mf,"_instance");function vse(r){let e=L().global;if(typeof e.atob<"u")return e.atob(r);if(typeof Buffer<"u")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function NL(r,e){let t=Array.isArray(r)?String.fromCharCode.apply(null,r):vse(r);return e?t:t.toLowerCase()}function aT(r,e,t,n=!1){let o=r[e];return o!=null?NL(o.s,n):t}function iT(r,e,t){let n=r[e];return n?n.b:t}function uT(r,e,t){let n=r[e]||{},o=n.i!=null?n.i:n.f!=null?n.f:t;return typeof o=="number"?o:parseInt(o,10)}function rD(r){switch(typeof r=="string"&&(r=FN[r]),r){case 1:case 19:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 2:return"float32";case 7:return"string";default:return null}}function AL(r,e,t){let n=r[e];return n&&n.func?n.func.name:t}function pT(r,e,t){let n=r[e];return n&&n.type?rD(n.type):t}function lT(r,e,t){let n=r[e];return n&&n.list&&n.list.type?n.list.type.map(o=>rD(o)):t}function DL(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function mT(r,e,t){let n=r[e];return n&&n.shape?DL(n.shape):t}function cT(r,e,t){let n=r[e];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):t}function dT(r,e,t,n=!1){let o=r[e];return o&&o.list&&o.list.s?o.list.s.map(s=>NL(s,n)):t}function fT(r,e,t){let n=r[e];return n&&n.list&&n.list.shape?n.list.shape.map(o=>DL(o)):t}function hT(r,e,t){let n=r[e];return n&&n.list&&n.list.b?n.list.b:t}var gT=class{constructor(e,t,n){this.node=e;this.tensorMap=t;this.context=n;this.inputs=e.inputNames.map(o=>this.getInput(o)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((o,s)=>(o[s]=this.getAttr(s),o),{}))}inputs=[];attrs={};getInput(e){return gr(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return gr(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return uT(this.node.rawAttrs,e,t);if(n.s!=null)return aT(this.node.rawAttrs,e,t);if(n.b!=null)return iT(this.node.rawAttrs,e,t);if(n.shape!=null)return mT(this.node.rawAttrs,e,t);if(n.type!=null)return pT(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return cT(this.node.rawAttrs,e,t);if(n.list.s!=null)return dT(this.node.rawAttrs,e,t);if(n.list.shape!=null)return fT(this.node.rawAttrs,e,t);if(n.list.b!=null)return hT(this.node.rawAttrs,e,t);if(n.list.type!=null)return lT(this.node.rawAttrs,e,t)}return t}};var mt={};Ye(mt,{OP_SCOPE_SUFFIX:()=>mA,abs:()=>Wt,acos:()=>C1,acosh:()=>I1,add:()=>Z,addN:()=>k1,all:()=>jb,any:()=>Rh,argMax:()=>Bp,argMin:()=>v1,asin:()=>S1,asinh:()=>w1,atan:()=>A1,atan2:()=>N1,atanh:()=>D1,avgPool:()=>yc,avgPool3d:()=>Xb,basicLSTMCell:()=>M1,batchNorm:()=>Op,batchNorm2d:()=>Yb,batchNorm3d:()=>Zb,batchNorm4d:()=>Qb,batchToSpaceND:()=>xc,bincount:()=>Jb,booleanMaskAsync:()=>BJ,broadcastArgs:()=>F1,broadcastTo:()=>zp,buffer:()=>Ce,cast:()=>ne,ceil:()=>E1,clipByValue:()=>Xr,clone:()=>bn,complex:()=>Pn,concat:()=>gt,concat1d:()=>ey,concat2d:()=>ty,concat3d:()=>ry,concat4d:()=>ny,conv1d:()=>oy,conv2d:()=>Fs,conv2dTranspose:()=>sy,conv3d:()=>ay,conv3dTranspose:()=>uy,cos:()=>Cc,cosh:()=>py,cosineWindow:()=>zh,cumprod:()=>Fh,cumsum:()=>ly,denseBincount:()=>Eh,depthToSpace:()=>L1,depthwiseConv2d:()=>Gp,diag:()=>B1,dilation2d:()=>$1,div:()=>fe,divNoNan:()=>z1,dot:()=>G1,dropout:()=>$A,einsum:()=>W1,elu:()=>Wp,enclosingPowerOfTwo:()=>OA,equal:()=>sn,erf:()=>U1,euclideanNorm:()=>H1,exp:()=>Tr,expandDims:()=>Cr,expm1:()=>q1,eye:()=>_l,fft:()=>Rc,fill:()=>ha,floor:()=>Up,floorDiv:()=>qb,fused:()=>jp,gather:()=>Kp,gatherND:()=>qJ,greater:()=>Jt,greaterEqual:()=>Jn,ifft:()=>Bl,imag:()=>Vp,image:()=>xn,inTopKAsync:()=>YJ,irfft:()=>_y,isFinite:()=>j1,isInf:()=>X1,isNaN:()=>Y1,leakyRelu:()=>Ic,less:()=>Rl,lessEqual:()=>ba,linalg:()=>GA,linspace:()=>Z1,localResponseNormalization:()=>Q1,log:()=>Zr,log1p:()=>kc,logSigmoid:()=>J1,logSoftmax:()=>dy,logSumExp:()=>fy,logicalAnd:()=>un,logicalNot:()=>vc,logicalOr:()=>hy,logicalXor:()=>eR,losses:()=>Z9,lowerBound:()=>tR,matMul:()=>qe,max:()=>Yr,maxPool:()=>Sc,maxPool3d:()=>by,maxPoolWithArgmax:()=>rR,maximum:()=>Es,mean:()=>zt,meshgrid:()=>nR,min:()=>Nl,minimum:()=>Si,mirrorPad:()=>oR,mod:()=>sR,moments:()=>Ml,movingAverage:()=>zJ,mul:()=>P,multiRNNCell:()=>aR,multinomial:()=>iR,neg:()=>et,norm:()=>Dl,notEqual:()=>$u,oneHot:()=>Hp,ones:()=>Ir,onesLike:()=>Gr,op:()=>w,outerProduct:()=>uR,pad:()=>eo,pad1d:()=>pR,pad2d:()=>lR,pad3d:()=>mR,pad4d:()=>cR,pool:()=>dR,pow:()=>Qn,prelu:()=>Ac,print:()=>Hb,prod:()=>fR,raggedGather:()=>hR,raggedRange:()=>gR,raggedTensorToTensor:()=>bR,rand:()=>yR,randomGamma:()=>OR,randomNormal:()=>El,randomStandardNormal:()=>zR,randomUniform:()=>ya,range:()=>mu,real:()=>Ou,reciprocal:()=>GR,relu:()=>pn,relu6:()=>ky,reshape:()=>E,reverse:()=>Mr,reverse1d:()=>WR,reverse2d:()=>UR,reverse3d:()=>KR,reverse4d:()=>VR,rfft:()=>Mc,round:()=>vy,rsqrt:()=>Sy,scalar:()=>ge,scatterND:()=>WJ,searchSorted:()=>Bh,selu:()=>wy,separableConv2d:()=>Ay,setdiff1dAsync:()=>HR,sigmoid:()=>Fn,sign:()=>qR,signal:()=>Y9,sin:()=>Ny,sinh:()=>Dy,slice:()=>Ue,slice1d:()=>Nc,slice2d:()=>Oh,slice3d:()=>Dc,slice4d:()=>Ll,softmax:()=>_c,softplus:()=>Bu,spaceToBatchND:()=>wc,sparse:()=>Q9,sparseToDense:()=>VJ,spectral:()=>X9,split:()=>Pr,sqrt:()=>Ot,square:()=>Xe,squaredDifference:()=>Ry,squeeze:()=>xa,stack:()=>dr,step:()=>cu,stridedSlice:()=>jR,string:()=>J9,sub:()=>ce,sum:()=>be,tan:()=>XR,tanh:()=>$p,tensor:()=>cr,tensor1d:()=>er,tensor2d:()=>wi,tensor3d:()=>My,tensor4d:()=>YR,tensor5d:()=>ZR,tensor6d:()=>QR,tensorScatterUpdate:()=>eM,tile:()=>an,topk:()=>tM,transpose:()=>je,truncatedNormal:()=>Fc,unique:()=>rM,unsortedSegmentSum:()=>Py,unstack:()=>Fr,upperBound:()=>nM,variable:()=>Fy,where:()=>Et,whereAsync:()=>Ly,zeros:()=>kt,zerosLike:()=>_e});var _L=(r,e,t,n=mt)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[n.add(k("a",r,e,t),k("b",r,e,t))];case"AddN":return[n.addN(k("tensors",r,e,t))];case"FloorMod":case"Mod":return[n.mod(k("a",r,e,t),k("b",r,e,t))];case"Mul":return[n.mul(k("a",r,e,t),k("b",r,e,t))];case"RealDiv":case"Div":return[n.div(k("a",r,e,t),k("b",r,e,t))];case"DivNoNan":return[n.divNoNan(k("a",r,e,t),k("b",r,e,t))];case"FloorDiv":return[n.floorDiv(k("a",r,e,t),k("b",r,e,t))];case"Sub":return[n.sub(k("a",r,e,t),k("b",r,e,t))];case"Minimum":return[n.minimum(k("a",r,e,t),k("b",r,e,t))];case"Maximum":return[n.maximum(k("a",r,e,t),k("b",r,e,t))];case"Pow":return[n.pow(k("a",r,e,t),k("b",r,e,t))];case"SquaredDifference":return[n.squaredDifference(k("a",r,e,t),k("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var RL=(r,e,t,n=mt)=>{switch(r.op){case"Abs":case"ComplexAbs":return[n.abs(k("x",r,e,t))];case"Acos":return[n.acos(k("x",r,e,t))];case"Acosh":return[n.acosh(k("x",r,e,t))];case"Asin":return[n.asin(k("x",r,e,t))];case"Asinh":return[n.asinh(k("x",r,e,t))];case"Atan":return[n.atan(k("x",r,e,t))];case"Atan2":return[n.atan2(k("x",r,e,t),k("y",r,e,t))];case"Atanh":return[n.atanh(k("x",r,e,t))];case"Ceil":return[n.ceil(k("x",r,e,t))];case"Complex":return[n.complex(k("real",r,e,t),k("imag",r,e,t))];case"Cos":return[n.cos(k("x",r,e,t))];case"Cosh":return[n.cosh(k("x",r,e,t))];case"Elu":return[n.elu(k("x",r,e,t))];case"Erf":return[n.erf(k("x",r,e,t))];case"Exp":return[n.exp(k("x",r,e,t))];case"Expm1":return[n.expm1(k("x",r,e,t))];case"Floor":return[n.floor(k("x",r,e,t))];case"Log":return[n.log(k("x",r,e,t))];case"Log1p":return[n.log1p(k("x",r,e,t))];case"Imag":return[n.imag(k("x",r,e,t))];case"Neg":return[n.neg(k("x",r,e,t))];case"Reciprocal":return[n.reciprocal(k("x",r,e,t))];case"Real":return[n.real(k("x",r,e,t))];case"Relu":return[n.relu(k("x",r,e,t))];case"Round":return[n.round(k("x",r,e,t))];case"Selu":return[n.selu(k("x",r,e,t))];case"Sigmoid":return[n.sigmoid(k("x",r,e,t))];case"Sin":return[n.sin(k("x",r,e,t))];case"Sign":return[n.sign(k("x",r,e,t))];case"Sinh":return[n.sinh(k("x",r,e,t))];case"Softplus":return[n.softplus(k("x",r,e,t))];case"Sqrt":return[n.sqrt(k("x",r,e,t))];case"Square":return[n.square(k("x",r,e,t))];case"Tanh":return[n.tanh(k("x",r,e,t))];case"Tan":return[n.tan(k("x",r,e,t))];case"ClipByValue":return[n.clipByValue(k("x",r,e,t),k("clipValueMin",r,e,t),k("clipValueMax",r,e,t))];case"Relu6":return[n.relu6(k("x",r,e,t))];case"Rsqrt":return[n.rsqrt(gr(r.inputNames[0],e,t))];case"Prod":return[n.prod(k("x",r,e,t),k("axes",r,e,t))];case"LeakyRelu":return[n.leakyRelu(k("x",r,e,t),k("alpha",r,e,t))];case"Prelu":return[n.prelu(k("x",r,e,t),k("alpha",r,e,t))];case"IsNan":return[n.isNaN(gr(r.inputNames[0],e,t))];case"IsInf":return[n.isInf(gr(r.inputNames[0],e,t))];case"IsFinite":return[n.isFinite(gr(r.inputNames[0],e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function no(r,e,t=""){if(!(typeof r=="number"||typeof e=="number")){y.assert(r.length===e.length,()=>t+` Shapes ${r} and ${e} must match`);for(let n=0;n<r.length;n++){let o=r[n],s=e[n];y.assert(o<0||s<0||o===s,()=>t+` Shapes ${r} and ${e} must match`)}}}function ML(r){return!(typeof r=="number"||r.some(e=>e<0))}function cf(r,e,t){let n=bT(r,t),o=!ML(n);if(o&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(o&&e.forEach(s=>{n=bT(s.shape,n)}),!ML(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function bT(r,e){if(typeof r=="number")return e;if(typeof e=="number")return r;if(r.length!==e.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${e}`);let t=[];for(let n=0;n<r.length;++n){let o=r[n],s=e[n];if(o>=0&&s>=0&&o!==s)throw new Error(`Incompatible shape during merge: ${r} vs. ${e}`);t[n]=o>=0?o:s}return t}var yT=class{constructor(e,t,n,o,s,a,i){this.name=e;this.dtype=t;this.maxSize=n;this.elementShape=o;this.identicalElementShapes=s;this.dynamicSize=a;this.clearAfterRead=i;this.idTensor=ge(0),$t(this.idTensor)}tensors=[];closed_=!1;idTensor;get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),no(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,$t(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,o)=>this.write(n,t[o]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let o=0;o<this.size();o++)e.push(o)}if(e.length===0)return cr([],[0].concat(this.elementShape));let n=this.readMany(e);return no(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),dr(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return cr([],[0].concat(this.elementShape));let t=[];for(let o=0;o<this.size();o++)t.push(o);let n=this.readMany(t);return no(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),gt(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Fr(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,o=e.map(p=>(n+=p,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:t.size/n,a=[];z(()=>{t=E(t,[1,n,s]);for(let p=0;p<e.length;++p){let l=[0,p===0?0:o[p-1],0],m=[1,e[p],s];a[p]=E(Ue(t,l,m),this.elementShape)}return a});let i=[];for(let p=0;p<e.length;p++)i[p]=p;this.writeMany(i,a)}};var Yu=class{constructor(e,t,n,o=-1){this.tensors=e;this.elementShape=t;this.elementDtype=n;e?.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);no(t,s.shape,"TensorList shape mismatch: "),$t(s)}),this.idTensor=ge(0),this.maxNumElements=o,$t(this.idTensor)}idTensor;maxNumElements;get id(){return this.idTensor.id}copy(){return new Yu([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);no(e,this.elementShape,"TensorList shape mismatch: ");let o=cf(this.elementShape,this.tensors,e);return z(()=>{let s=this.tensors.map(a=>E(a,o));return dr(s,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=cf(this.elementShape,this.tensors,e),o=this.tensors.pop();return o.kept=!1,no(o.shape,e,"TensorList shape mismatch: "),E(o,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(no(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");$t(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new Yu([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);no(this.tensors[e].shape,t,"TensorList shape mismatch: ");let o=cf(this.elementShape,this.tensors,t);return E(this.tensors[e],o)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);no(this.elementShape,t.shape,"TensorList shape mismatch: "),$t(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);no(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let o=cf(this.elementShape,this.tensors,n);return e.length===0?cr([],[0].concat(o)):z(()=>{let s=e.map(a=>E(this.tensors[a],o));return dr(s,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);no(this.elementShape,t,"TensorList shape mismatch: ");let n=cf(this.elementShape,this.tensors,t);return this.size()===0?cr([],[0].concat(n)):z(()=>{let o=this.tensors.map(s=>E(s,n));return gt(o,0)})}};function PL(r,e,t){let n=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==t)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${t}`);let o=r.shape.slice(1);no(o,e,"TensorList shape mismatch: ");let s=Fr(r);return new Yu(s,e,n)}function FL(r,e,t,n){return new Yu([],r,e,n)}function EL(r,e,t,n){if(e.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${r.shape[0]}`);let o=Math.max(...e);if(n!=null&&n!==-1&&o>=n)throw new Error(`Max index must be < array size (${o}  vs. ${n})`);let s=new Yu([],t,r.dtype,n),a=Fr(r,0);return e.forEach((i,p)=>{s.setItem(i,a[p])}),s}function LL(r,e,t){let n=0,o=e.map(l=>(n+=l,n));if(n!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${r.shape}`);let s=r.shape.slice(1),a=bT(s,t),i=n===0?0:r.size/n,p=z(()=>{let l=[];r=E(r,[1,n,i]);for(let m=0;m<e.length;++m){let d=[0,m===0?0:o[m-1],0],f=[1,e[m],i];l[m]=E(Ue(r,d,f),a)}return r.dispose(),l}),u=new Yu([],t,r.dtype,e.length);for(let l=0;l<p.length;l++)u.setItem(l,p[l]);return u}var BL=async(r,e,t)=>{switch(r.op){case"If":case"StatelessIf":{let n=k("thenBranch",r,e,t),o=k("elseBranch",r,e,t),s=k("cond",r,e,t),a=k("args",r,e,t);return(await s.data())[0]?t.functionMap[n].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[o].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{let n=k("body",r,e,t),o=k("cond",r,e,t),s=k("args",r,e,t),a=await t.functionMap[o].executeFunctionAsync(s,t.tensorArrayMap,t.tensorListMap),i=s.map(l=>l.id),p=await a[0].data();a.forEach(l=>{!l.kept&&i.indexOf(l.id)===-1&&l.dispose()});let u=s;for(;p[0];){let l=u;u=await t.functionMap[n].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);let m=u.map(d=>d.id);l.forEach(d=>{!d.kept&&i.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()});let c=await t.functionMap[o].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);p=await c[0].data(),c.forEach(d=>{!d.kept&&i.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()})}return u}case"LoopCond":{let n=k("pred",r,e,t);return[Bi(n)]}case"Switch":{let n=k("pred",r,e,t),o=k("data",r,e,t);return o.kept||(o=Bi(o)),(await n.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{let n=r.inputNames.find(o=>gr(o,e,t)!==void 0);if(n){let o=gr(n,e,t);return[Bi(o)]}return}case"Enter":{let n=k("frameName",r,e,t),o=k("tensor",r,e,t);return t.enterFrame(n),[Bi(o)]}case"Exit":{let n=k("tensor",r,e,t);return t.exitFrame(),[Bi(n)]}case"NextIteration":{let n=k("tensor",r,e,t);return t.nextIteration(),[Bi(n)]}case"TensorArrayV3":{let n=k("size",r,e,t),o=k("dtype",r,e,t),s=k("elementShape",r,e,t),a=k("dynamicSize",r,e,t),i=k("clearAfterRead",r,e,t),p=k("identicalElementShapes",r,e,t),u=k("name",r,e,t),l=new yT(u,o,n,s,p,a,i);return t.addTensorArray(l),[l.idTensor,ge(1)]}case"TensorArrayWriteV3":{let n=k("tensorArrayId",r,e,t),o=k("index",r,e,t),s=k("tensor",r,e,t),a=t.getTensorArray(n.id);return a.write(o,s),[a.idTensor]}case"TensorArrayReadV3":{let n=k("tensorArrayId",r,e,t),o=k("index",r,e,t);return[t.getTensorArray(n.id).read(o)]}case"TensorArrayGatherV3":{let n=k("tensorArrayId",r,e,t),o=k("indices",r,e,t),s=k("dtype",r,e,t);return[t.getTensorArray(n.id).gather(o,s)]}case"TensorArrayScatterV3":{let n=k("tensorArrayId",r,e,t),o=k("indices",r,e,t),s=k("tensor",r,e,t),a=t.getTensorArray(n.id);return a.scatter(o,s),[a.idTensor]}case"TensorArrayConcatV3":{let n=k("tensorArrayId",r,e,t),o=t.getTensorArray(n.id),s=k("dtype",r,e,t);return[o.concat(s)]}case"TensorArraySplitV3":{let n=k("tensorArrayId",r,e,t),o=k("tensor",r,e,t),s=k("lengths",r,e,t),a=t.getTensorArray(n.id);return a.split(s,o),[a.idTensor]}case"TensorArraySizeV3":{let n=k("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return[ge(o.size(),"int32")]}case"TensorArrayCloseV3":{let n=k("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{let n=k("tensorListId",r,e,t),o=k("index",r,e,t),s=k("tensor",r,e,t),a=t.getTensorList(n.id);return a.setItem(o,s),[a.idTensor]}case"TensorListGetItem":{let n=k("tensorListId",r,e,t),o=k("index",r,e,t),s=k("elementShape",r,e,t),a=k("elementDType",r,e,t);return[t.getTensorList(n.id).getItem(o,s,a)]}case"TensorListScatterV2":case"TensorListScatter":{let n=k("indices",r,e,t),o=k("tensor",r,e,t),s=k("elementShape",r,e,t),a=k("numElements",r,e,t),i=EL(o,n,s,a);return t.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=k("elementShape",r,e,t),o=k("elementDType",r,e,t),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let a=k(s,r,e,t),i=r.op==="TensorListReserve"?-1:a,p=FL(n,o,a,i);return t.addTensorList(p),[p.idTensor]}case"TensorListGather":{let n=k("tensorListId",r,e,t),o=k("indices",r,e,t),s=k("elementShape",r,e,t),a=k("elementDType",r,e,t);return[t.getTensorList(n.id).gather(o,a,s)]}case"TensorListStack":{let n=k("tensorListId",r,e,t),o=k("elementShape",r,e,t),s=k("elementDType",r,e,t),a=k("numElements",r,e,t);return[t.getTensorList(n.id).stack(o,s,a)]}case"TensorListFromTensor":{let n=k("tensor",r,e,t),o=k("elementShape",r,e,t),s=k("elementDType",r,e,t),a=PL(n,o,s);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let n=k("tensorListId",r,e,t),o=t.getTensorList(n.id),s=k("dtype",r,e,t),a=k("elementShape",r,e,t);return[o.concat(s,a)]}case"TensorListPushBack":{let n=k("tensorListId",r,e,t),o=k("tensor",r,e,t),s=t.getTensorList(n.id);return s.pushBack(o),[s.idTensor]}case"TensorListPopBack":{let n=k("tensorListId",r,e,t),o=k("elementShape",r,e,t),s=k("elementDType",r,e,t);return[t.getTensorList(n.id).popBack(o,s)]}case"TensorListSplit":{let n=k("tensor",r,e,t),o=k("elementShape",r,e,t),s=k("lengths",r,e,t),a=LL(n,s,o);return t.addTensorList(a),[a.idTensor]}case"TensorListLength":{let n=k("tensorListId",r,e,t),o=t.getTensorList(n.id);return[ge(o.size(),"int32")]}case"TensorListResize":{let n=k("tensorListId",r,e,t),o=k("size",r,e,t),a=t.getTensorList(n.id).resize(o);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};function $L(r,e,t){let[n,o]=k("fusedOps",r,e,t),s=n==="biasadd",a=!s,i=o==="prelu",p=n==="fusedbatchnorm",u=k("numArgs",r,e,t);if(s){if(i&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(p)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let l=k("strides",r,e,t),m=cg(r,e,t),c=k("dataFormat",r,e,t).toUpperCase(),d=k("dilations",r,e,t),[f,h]=k("args",r,e,t);a&&(h=f,f=void 0);let g=k("leakyreluAlpha",r,e,t);return{stride:l,pad:m,dataFormat:c,dilations:d,biasArg:f,preluArg:h,activationFunc:o,leakyreluAlpha:g}}var OL=(r,e,t,n=mt)=>{switch(r.op){case"Conv1D":{let o=k("stride",r,e,t),s=k("pad",r,e,t),a=k("dataFormat",r,e,t).toUpperCase(),i=k("dilation",r,e,t);return[n.conv1d(k("x",r,e,t),k("filter",r,e,t),o,s,a,i)]}case"Conv2D":{let o=k("strides",r,e,t),s=cg(r,e,t),a=k("dataFormat",r,e,t).toUpperCase(),i=k("dilations",r,e,t);return[n.conv2d(k("x",r,e,t),k("filter",r,e,t),[o[1],o[2]],s,a,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:o,pad:s,dataFormat:a,dilations:i,biasArg:p,preluArg:u,activationFunc:l,leakyreluAlpha:m}=$L(r,e,t);return[n.fused.conv2d({x:k("x",r,e,t),filter:k("filter",r,e,t),strides:[o[1],o[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:p,activation:l,preluActivationWeights:u,leakyreluAlpha:m})]}case"FusedDepthwiseConv2dNative":{let{stride:o,pad:s,dataFormat:a,dilations:i,biasArg:p,preluArg:u,activationFunc:l,leakyreluAlpha:m}=$L(r,e,t);return[n.fused.depthwiseConv2d({x:k("x",r,e,t),filter:k("filter",r,e,t),strides:[o[1],o[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:p,activation:l,preluActivationWeights:u,leakyreluAlpha:m})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let o=k("outputShape",r,e,t),s=k("strides",r,e,t),a=cg(r,e,t);return[n.conv2dTranspose(k("x",r,e,t),k("filter",r,e,t),o,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let o=k("strides",r,e,t),s=cg(r,e,t),a=k("dilations",r,e,t),i=k("dataFormat",r,e,t).toUpperCase();return[n.depthwiseConv2d(k("input",r,e,t),k("filter",r,e,t),[o[1],o[2]],s,i,[a[1],a[2]])]}case"Conv3D":{let o=k("strides",r,e,t),s=k("pad",r,e,t),a=k("dataFormat",r,e,t).toUpperCase(),i=k("dilations",r,e,t);return[n.conv3d(k("x",r,e,t),k("filter",r,e,t),[o[1],o[2],o[3]],s,a,[i[1],i[2],i[3]])]}case"AvgPool":{let o=k("strides",r,e,t),s=k("pad",r,e,t),a=k("kernelSize",r,e,t);return[n.avgPool(k("x",r,e,t),[a[1],a[2]],[o[1],o[2]],s)]}case"MaxPool":{let o=k("strides",r,e,t),s=k("pad",r,e,t),a=k("kernelSize",r,e,t);return[n.maxPool(k("x",r,e,t),[a[1],a[2]],[o[1],o[2]],s)]}case"MaxPoolWithArgmax":{let o=k("strides",r,e,t),s=k("pad",r,e,t),a=k("kernelSize",r,e,t),i=k("includeBatchInIndex",r,e,t),{result:p,indexes:u}=n.maxPoolWithArgmax(k("x",r,e,t),[a[1],a[2]],[o[1],o[2]],s,i);return[p,u]}case"AvgPool3D":{let o=k("strides",r,e,t),s=k("pad",r,e,t),a=k("kernelSize",r,e,t);return[n.avgPool3d(k("x",r,e,t),[a[1],a[2],a[3]],[o[1],o[2],o[3]],s)]}case"MaxPool3D":{let o=k("strides",r,e,t),s=k("pad",r,e,t),a=k("kernelSize",r,e,t);return[n.maxPool3d(k("x",r,e,t),[a[1],a[2],a[3]],[o[1],o[2],o[3]],s)]}case"Dilation2D":{let o=k("strides",r,e,t),s=k("pad",r,e,t),a=k("dilations",r,e,t),i=o[1],p=o[2],u=a[1],l=a[2];return[n.dilation2d(k("x",r,e,t),k("filter",r,e,t),[i,p],s,[u,l],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var zL=(r,e,t,n=mt)=>{switch(r.op){case"Fill":{let o=k("shape",r,e,t),s=k("dtype",r,e,t),a=k("value",r,e,t);return[n.fill(o,a,s)]}case"LinSpace":{let o=k("start",r,e,t),s=k("stop",r,e,t),a=k("num",r,e,t);return[n.linspace(o,s,a)]}case"Multinomial":{let o=k("logits",r,e,t),s=k("numSamples",r,e,t),a=k("seed",r,e,t);return[n.multinomial(o,s,a)]}case"OneHot":{let o=k("indices",r,e,t),s=k("depth",r,e,t),a=k("onValue",r,e,t),i=k("offValue",r,e,t),p=k("dtype",r,e,t);return[n.oneHot(o,s,a,i,p)]}case"Ones":return[n.ones(k("shape",r,e,t),k("dtype",r,e,t))];case"OnesLike":return[n.onesLike(k("x",r,e,t))];case"RandomStandardNormal":return[n.randomStandardNormal(k("shape",r,e,t),k("dtype",r,e,t),k("seed",r,e,t))];case"RandomUniform":return[n.randomUniform(k("shape",r,e,t),k("minval",r,e,t),k("maxval",r,e,t),k("dtype",r,e,t))];case"Range":{let o=k("start",r,e,t),s=k("stop",r,e,t),a=k("step",r,e,t);return[n.range(o,s,a,k("dtype",r,e,t))]}case"TruncatedNormal":{let o=k("shape",r,e,t),s=k("mean",r,e,t),a=k("stdDev",r,e,t),i=k("seed",r,e,t);return[n.truncatedNormal(o,s,a,k("dtype",r,e,t),i)]}case"Zeros":return[n.zeros(k("shape",r,e,t),k("dtype",r,e,t))];case"ZerosLike":return[n.zerosLike(k("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function nD(r,e,t){let n=k("boxes",r,e,t),o=k("scores",r,e,t),s=k("maxOutputSize",r,e,t),a=k("iouThreshold",r,e,t),i=k("scoreThreshold",r,e,t),p=k("softNmsSigma",r,e,t);return{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:p}}var GL=async(r,e,t,n,o=mt)=>{switch(r.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:a,maxOutputSize:i,iouThreshold:p,scoreThreshold:u,softNmsSigma:l}=nD(r,e,t),m=await o.image.nonMaxSuppressionWithScoreAsync(s,a,i,p,u,l);return[m.selectedIndices,m.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:a,maxOutputSize:i,iouThreshold:p,scoreThreshold:u}=nD(r,e,t),l=k("padToMaxOutputSize",r,e,t),m=await o.image.nonMaxSuppressionPaddedAsync(s,a,i,p,u,l);return[m.selectedIndices,m.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:a,maxOutputSize:i,iouThreshold:p,scoreThreshold:u}=nD(r,e,t);return[await o.image.nonMaxSuppressionAsync(s,a,i,p,u)]}case"Where":{let s=o.cast(k("condition",r,e,t),"bool"),a=[await o.whereAsync(s)];return s.dispose(),a}case"ListDiff":return o.setdiff1dAsync(k("x",r,e,t),k("y",r,e,t));default:throw TypeError(`Node type ${r.op} is not implemented`)}};var WL=(r,e,t,n=mt)=>{switch(r.op){case"LowerBound":{let o=k("sortedSequence",r,e,t),s=k("values",r,e,t);return[n.lowerBound(o,s)]}case"TopKV2":{let o=k("x",r,e,t),s=k("k",r,e,t),a=k("sorted",r,e,t),i=n.topk(o,s,a);return[i.values,i.indices]}case"UpperBound":{let o=k("sortedSequence",r,e,t),s=k("values",r,e,t);return[n.upperBound(o,s)]}case"Unique":{let o=k("x",r,e,t),s=n.unique(o);return[s.values,s.indices]}case"UniqueV2":{let o=k("x",r,e,t),s=k("axis",r,e,t),a=n.unique(o,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var UL=(r,e,t,n=mt)=>{switch(r.op){case"Const":return e[r.name];case"PlaceholderWithDefault":let o=k("default",r,e,t);return[gr(r.name,e,t)||o];case"Placeholder":return[gr(r.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let l=k("x",r,e,t);return[Bi(l)]}case"IdentityN":return k("x",r,e,t).map(l=>Bi(l));case"Snapshot":let s=k("x",r,e,t);return[Bi(s)];case"Shape":return[n.tensor1d(k("x",r,e,t).shape,"int32")];case"ShapeN":return k("x",r,e,t).map(l=>n.tensor1d(l.shape));case"Size":return[n.scalar(k("x",r,e,t).size,"int32")];case"Rank":return[n.scalar(k("x",r,e,t).rank,"int32")];case"NoOp":return[n.scalar(1)];case"Print":let a=k("x",r,e,t),i=k("data",r,e,t),p=k("message",r,e,t),u=k("summarize",r,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(p);for(let l=0;l<i.length;l++)console.log(Array.prototype.slice.call(i[l].dataSync()).slice(0,u));return[a];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var xT=class{constructor(e,t){this.keyDType=e;this.valueDType=t;this.handle=ge(0),this.tensorMap=new Map,$t(this.handle)}handle;tensorMap;get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ge(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),z(()=>{let o=Fr(t),s=n.length,a=o.length;y.assert(s===a,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${a} elements.`);for(let i=0;i<s;i++){let p=n[i],u=o[i];$t(u),this.tensorMap.set(p,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return z(()=>{let o=[];for(let s=0;s<n.length;s++){let a=n[s],i=this.findWithDefault(a,t);o.push(i)}return dr(o)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};var KL=async(r,e,t,n)=>{switch(r.op){case"HashTable":case"HashTableV2":{let o=n.getHashTableHandleByName(r.name);if(o!=null)return[o];{let s=k("keyDType",r,e,t),a=k("valueDType",r,e,t),i=new xT(s,a);return n.addHashTable(r.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let o=k("tableHandle",r,e,t,n),s=k("keys",r,e,t),a=k("values",r,e,t);return[await n.getHashTableById(o.id).import(s,a)]}case"LookupTableFind":case"LookupTableFindV2":{let o=k("tableHandle",r,e,t,n),s=k("keys",r,e,t),a=k("defaultValue",r,e,t);return[await n.getHashTableById(o.id).find(s,a)]}case"LookupTableSize":case"LookupTableSizeV2":{let o=k("tableHandle",r,e,t,n);return[n.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var VL=(r,e,t,n=mt)=>{switch(r.op){case"ResizeBilinear":{let o=k("images",r,e,t),s=k("size",r,e,t),a=k("alignCorners",r,e,t),i=k("halfPixelCenters",r,e,t);return[n.image.resizeBilinear(o,[s[0],s[1]],a,i)]}case"ResizeNearestNeighbor":{let o=k("images",r,e,t),s=k("size",r,e,t),a=k("alignCorners",r,e,t),i=k("halfPixelCenters",r,e,t);return[n.image.resizeNearestNeighbor(o,[s[0],s[1]],a,i)]}case"CropAndResize":{let o=k("image",r,e,t),s=k("boxes",r,e,t),a=k("boxInd",r,e,t),i=k("cropSize",r,e,t),p=k("method",r,e,t),u=k("extrapolationValue",r,e,t);return[n.image.cropAndResize(o,s,a,i,p,u)]}case"ImageProjectiveTransformV3":{let o=k("images",r,e,t),s=k("transforms",r,e,t),a=k("outputShape",r,e,t),i=k("fillValue",r,e,t),p=k("interpolation",r,e,t),u=k("fillMode",r,e,t);return[n.image.transform(o,s,p.toLowerCase(),u.toLowerCase(),i,a)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var HL=(r,e,t,n=mt)=>{switch(r.op){case"Equal":return[n.equal(k("a",r,e,t),k("b",r,e,t))];case"NotEqual":return[n.notEqual(k("a",r,e,t),k("b",r,e,t))];case"Greater":return[n.greater(k("a",r,e,t),k("b",r,e,t))];case"GreaterEqual":return[n.greaterEqual(k("a",r,e,t),k("b",r,e,t))];case"Less":return[n.less(k("a",r,e,t),k("b",r,e,t))];case"LessEqual":return[n.lessEqual(k("a",r,e,t),k("b",r,e,t))];case"LogicalAnd":return[n.logicalAnd(k("a",r,e,t),k("b",r,e,t))];case"LogicalNot":return[n.logicalNot(k("a",r,e,t))];case"LogicalOr":return[n.logicalOr(k("a",r,e,t),k("b",r,e,t))];case"Select":case"SelectV2":return[n.where(k("condition",r,e,t),k("a",r,e,t),k("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var qL=(r,e,t,n=mt)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[n.matMul(k("a",r,e,t),k("b",r,e,t),k("transposeA",r,e,t),k("transposeB",r,e,t))];case"Einsum":return[n.einsum(k("equation",r,e,t),...k("tensors",r,e,t))];case"Transpose":return[n.transpose(k("x",r,e,t),k("perm",r,e,t))];case"_FusedMatMul":let[o,s]=k("fusedOps",r,e,t),a=o==="biasadd",i=s==="prelu",p=k("numArgs",r,e,t),u=k("leakyreluAlpha",r,e,t);if(a){if(i&&p!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&p!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[l,m]=k("args",r,e,t);return[n.fused.matMul({a:k("a",r,e,t),b:k("b",r,e,t),transposeA:k("transposeA",r,e,t),transposeB:k("transposeB",r,e,t),bias:l,activation:s,preluActivationWeights:m,leakyreluAlpha:u})];case"MatrixBandPart":return[n.linalg.bandPart(k("a",r,e,t),k("numLower",r,e,t),k("numUpper",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var jL=(r,e,t,n=mt)=>{switch(r.op){case"EuclideanNorm":return[n.euclideanNorm(k("x",r,e,t),k("axis",r,e,t),k("keepDims",r,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[n.batchNorm(k("x",r,e,t),k("mean",r,e,t),k("variance",r,e,t),k("offset",r,e,t),k("scale",r,e,t),k("epsilon",r,e,t))];case"FusedBatchNormV3":return[n.batchNorm(k("x",r,e,t),k("mean",r,e,t),k("variance",r,e,t),k("offset",r,e,t),k("scale",r,e,t),k("epsilon",r,e,t))];case"LRN":return[n.localResponseNormalization(k("x",r,e,t),k("radius",r,e,t),k("bias",r,e,t),k("alpha",r,e,t),k("beta",r,e,t))];case"Softmax":return[n.softmax(k("x",r,e,t))];case"LogSoftmax":return[n.logSoftmax(k("x",r,e,t))];case"SparseToDense":return[n.sparseToDense(k("sparseIndices",r,e,t),k("outputShape",r,e,t),k("sparseValues",r,e,t),k("defaultValue",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var XL=(r,e,t,n=mt)=>{switch(r.op){case"RaggedGather":{let{outputNestedSplits:o,outputDenseValues:s}=n.raggedGather(k("paramsNestedSplits",r,e,t),k("paramsDenseValues",r,e,t),k("indices",r,e,t),k("outputRaggedRank",r,e,t));return o.concat(s)}case"RaggedRange":{let{rtNestedSplits:o,rtDenseValues:s}=n.raggedRange(k("starts",r,e,t),k("limits",r,e,t),k("splits",r,e,t));return[o,s]}case"RaggedTensorToTensor":return[n.raggedTensorToTensor(k("shape",r,e,t),k("values",r,e,t),k("defaultValue",r,e,t),k("rowPartitionTensors",r,e,t),k("rowPartitionTypes",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var YL=(r,e,t,n=mt)=>{switch(r.op){case"Max":{let i=k("axis",r,e,t),p=k("keepDims",r,e,t);return[n.max(k("x",r,e,t),i,p)]}case"Mean":{let i=k("axis",r,e,t),p=k("keepDims",r,e,t);return[n.mean(k("x",r,e,t),i,p)]}case"Min":{let i=k("axis",r,e,t),p=k("keepDims",r,e,t);return[n.min(k("x",r,e,t),i,p)]}case"Sum":{let i=k("axis",r,e,t),p=k("keepDims",r,e,t);return[n.sum(k("x",r,e,t),i,p)]}case"All":{let i=k("axis",r,e,t),p=k("keepDims",r,e,t);return[n.all(k("x",r,e,t),i,p)]}case"Any":{let i=k("axis",r,e,t),p=k("keepDims",r,e,t);return[n.any(k("x",r,e,t),i,p)]}case"ArgMax":{let i=k("axis",r,e,t);return[n.argMax(k("x",r,e,t),i)]}case"ArgMin":{let i=k("axis",r,e,t);return[n.argMin(k("x",r,e,t),i)]}case"Prod":{let i=k("axis",r,e,t),p=k("keepDims",r,e,t);return[n.prod(k("x",r,e,t),i,p)]}case"Cumprod":{let i=k("axis",r,e,t),p=k("exclusive",r,e,t),u=k("reverse",r,e,t);return[n.cumprod(k("x",r,e,t),i,p,u)]}case"Cumsum":{let i=k("axis",r,e,t),p=k("exclusive",r,e,t),u=k("reverse",r,e,t);return[n.cumsum(k("x",r,e,t),i,p,u)]}case"Bincount":let o=k("x",r,e,t),s=k("weights",r,e,t),a=k("size",r,e,t);return[n.bincount(o,s,a)];case"DenseBincount":{let i=k("x",r,e,t),p=k("weights",r,e,t),u=k("size",r,e,t),l=k("binaryOutput",r,e,t);return[n.denseBincount(i,p,u,l)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var ZL=(r,e,t,n=mt)=>{switch(r.op){case"ConcatV2":case"Concat":{let o=k("n",r,e,t),s=k("axis",r,e,t),a=k("tensors",r,e,t);return a=a.slice(0,o),[n.concat(a,s)]}case"Gather":{let o=k("x",r,e,t),s=k("indices",r,e,t);return[n.gather(o,n.cast(s,"int32"),0)]}case"GatherV2":{let o=k("axis",r,e,t),s=k("batchDims",r,e,t),a=k("x",r,e,t),i=k("indices",r,e,t);return[n.gather(a,n.cast(i,"int32"),o,s)]}case"Reverse":{let o=k("dims",r,e,t),s=[];for(let i=0;i<o.length;i++)o[i]&&s.push(i);let a=k("x",r,e,t);return[n.reverse(a,s)]}case"ReverseV2":{let o=k("axis",r,e,t),s=k("x",r,e,t);return[n.reverse(s,o)]}case"Slice":{let o=k("begin",r,e,t),s=k("size",r,e,t);return[n.slice(k("x",r,e,t),o,s)]}case"StridedSlice":{let o=k("begin",r,e,t),s=k("end",r,e,t),a=k("strides",r,e,t),i=k("beginMask",r,e,t),p=k("endMask",r,e,t),u=k("ellipsisMask",r,e,t),l=k("newAxisMask",r,e,t),m=k("shrinkAxisMask",r,e,t),c=k("x",r,e,t);return[n.stridedSlice(c,o,s,a,i,p,u,l,m)]}case"Pack":return z(()=>{let o=k("axis",r,e,t),s=k("tensors",r,e,t),a=s[0].shape,i=n.squeeze(s[0]).shape,p=s.map(u=>{let l=y.arraysEqual(u.shape,a);if(!l&&!y.arraysEqual(n.squeeze(u).shape,i))throw new Error("the input tensors shape does not match");return l?u:n.reshape(u,a)});return[n.stack(p,o)]});case"Unpack":{let o=k("axis",r,e,t),s=k("tensor",r,e,t);return n.unstack(s,o)}case"Tile":{let o=k("reps",r,e,t);return[n.tile(k("x",r,e,t),o)]}case"Split":case"SplitV":{let o=k("axis",r,e,t),s=k("numOrSizeSplits",r,e,t),a=k("x",r,e,t);return n.split(a,s,o)}case"ScatterNd":{let o=k("indices",r,e,t),s=k("values",r,e,t),a=k("shape",r,e,t);return[n.scatterND(o,s,a)]}case"GatherNd":{let o=k("x",r,e,t),s=k("indices",r,e,t);return[n.gatherND(o,s)]}case"SparseToDense":{let o=k("sparseIndices",r,e,t),s=k("outputShape",r,e,t),a=k("sparseValues",r,e,t),i=k("defaultValue",r,e,t);return[n.sparseToDense(o,a,s,a.dtype===i.dtype?i:n.cast(i,a.dtype))]}case"TensorScatterUpdate":{let o=k("indices",r,e,t),s=k("values",r,e,t),a=k("tensor",r,e,t);return[n.tensorScatterUpdate(a,o,s)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var QL=(r,e,t,n=mt)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:o,outputValues:s,emptyRowIndicator:a,reverseIndexMap:i}=n.sparse.sparseFillEmptyRows(k("indices",r,e,t),k("values",r,e,t),k("denseShape",r,e,t),k("defaultValue",r,e,t));return[o,s,a,i]}case"SparseReshape":{let{outputIndices:o,outputShape:s}=n.sparse.sparseReshape(k("inputIndices",r,e,t),k("inputShape",r,e,t),k("newShape",r,e,t));return[o,s]}case"SparseSegmentMean":return[n.sparse.sparseSegmentMean(k("data",r,e,t),k("indices",r,e,t),k("segmentIds",r,e,t))];case"SparseSegmentSum":return[n.sparse.sparseSegmentSum(k("data",r,e,t),k("indices",r,e,t),k("segmentIds",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var JL=(r,e,t,n=mt)=>{switch(r.op){case"FFT":return[n.fft(k("x",r,e,t))];case"IFFT":return[n.ifft(k("x",r,e,t))];case"RFFT":return[n.rfft(k("x",r,e,t))];case"IRFFT":return[n.irfft(k("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var eB=(r,e,t,n=mt)=>{switch(r.op){case"StaticRegexReplace":return[n.string.staticRegexReplace(k("input",r,e,t),k("pattern",r,e,t),k("rewrite",r,e,t),k("replaceGlobal",r,e,t))];case"StringNGrams":{let{nGrams:o,nGramsSplits:s}=n.string.stringNGrams(k("data",r,e,t),k("dataSplits",r,e,t),k("separator",r,e,t),k("nGramWidths",r,e,t),k("leftPad",r,e,t),k("rightPad",r,e,t),k("padWidth",r,e,t),k("preserveShortSequences",r,e,t));return[o,s]}case"StringSplit":{let{indices:o,values:s,shape:a}=n.string.stringSplit(k("input",r,e,t),k("delimiter",r,e,t),k("skipEmpty",r,e,t));return[o,s,a]}case"StringToHashBucketFast":return[n.string.stringToHashBucketFast(k("input",r,e,t),k("numBuckets",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var tB=(r,e,t,n=mt)=>{switch(r.op){case"Cast":return[n.cast(k("x",r,e,t),k("dtype",r,e,t))];case"ExpandDims":{let o=k("axis",r,e,t);return[n.expandDims(k("x",r,e,t),o)]}case"Squeeze":{let o=k("axis",r,e,t);return[n.squeeze(k("x",r,e,t),o)]}case"Reshape":return[n.reshape(k("x",r,e,t),k("shape",r,e,t))];case"MirrorPad":return[n.mirrorPad(k("x",r,e,t),k("padding",r,e,t),k("mode",r,e,t))];case"PadV2":case"Pad":return[n.pad(k("x",r,e,t),k("padding",r,e,t),k("constantValue",r,e,t))];case"SpaceToBatchND":{let o=k("blockShape",r,e,t),s=k("paddings",r,e,t);return[n.spaceToBatchND(k("x",r,e,t),o,s)]}case"BatchToSpaceND":{let o=k("blockShape",r,e,t),s=k("crops",r,e,t);return[n.batchToSpaceND(k("x",r,e,t),o,s)]}case"DepthToSpace":{let o=k("blockSize",r,e,t),s=k("dataFormat",r,e,t).toUpperCase();return[n.depthToSpace(k("x",r,e,t),o,s)]}case"BroadcastTo":return[n.broadcastTo(k("x",r,e,t),k("shape",r,e,t))];case"BroadcastArgs":return[n.broadcastArgs(k("s0",r,e,t),k("s1",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function oD(r,e,t,n,o=z){let s=((a,i,p)=>{switch(a.category){case"arithmetic":return o(()=>_L(a,i,p));case"basic_math":return o(()=>RL(a,i,p));case"control":return BL(a,i,p);case"convolution":return o(()=>OL(a,i,p));case"creation":return o(()=>zL(a,i,p));case"dynamic":return GL(a,i,p);case"evaluation":return o(()=>WL(a,i,p));case"image":return o(()=>VL(a,i,p));case"graph":return o(()=>UL(a,i,p));case"logical":return o(()=>HL(a,i,p));case"matrices":return o(()=>qL(a,i,p));case"normalization":return o(()=>jL(a,i,p));case"ragged":return o(()=>XL(a,i,p));case"reduction":return o(()=>YL(a,i,p));case"slice_join":return o(()=>ZL(a,i,p));case"sparse":return o(()=>QL(a,i,p));case"spectral":return o(()=>JL(a,i,p));case"string":return o(()=>eB(a,i,p));case"transformation":return o(()=>tB(a,i,p));case"hash_table":return KL(a,i,p,n);case"custom":let u=oT(a.op);if(u&&u.customExecutor)return u.customExecutor(new gT(a,i,p));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,e,t);return y.isPromise(s)?s.then(a=>[].concat(a)):[].concat(s)}var dg=class{constructor(e={},t={},n={},o={},s){this.weightMap=e;this.tensorArrayMap=t;this.tensorListMap=n;this.functionMap=o;this.parseNodeNameCache=s;this.generateCurrentContextIds()}rootContext={id:0,frameName:"",iterationId:0};contexts=[this.rootContext];lastId=0;_currentContextIds;newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function sD(r,e,t,n){let o=new Set,s=[],a=null,i=null,p=new Set,u=new Set(Object.keys(r).map(c=>wn(c)[0]));n=n||[];let l=new Set(n.map(c=>wn(c.name)[0])),m=[...e];for(;m.length>0;){let c=m.pop();if((ym(c)||Yse(c)||Zse(c))&&a==null&&(a=c,i=a.children.map(d=>d.name).filter(d=>o.has(d))),o.add(c.name),t[c.name]==null&&!u.has(c.name)&&!l.has(c.name)){if(c.inputs.length===0){s.push(c.name);continue}c.inputs.forEach(d=>{p.has(d.name)||(p.add(d.name),m.push(d))})}}return{inputs:r,outputs:e,usedNodes:o,missingInputs:s,dynamicNode:a,syncInputs:i}}function rB(r,e){let{usedNodes:t,inputs:n}=e,o=Object.keys(n).map(g=>wn(g)[0]).map(g=>r.nodes[g]),s=r.initNodes||[],a=g=>t.has(typeof g=="string"?g:g.name);function i(g){return[...new Map(g.map(b=>[b.name,b])).values()]}let p=i([...o,...r.weights,...s]).filter(a),u=i([...p,...Object.values(r.nodes)]).filter(a),l=new Map(u.map(g=>[g.name,g])),m={};for(let g of u){m[g.name]=m[g.name]||0;for(let b of g.children)a(b)||(m[b.name]=Number.POSITIVE_INFINITY),m[b.name]=(m[b.name]||0)+1}let c=Object.entries(m).filter(([,g])=>g===0).map(([g])=>g),d=[...c];for(;c.length>0;){let g=c.pop(),b=l.get(g);for(let x of b.children.filter(a))--m[x.name]===0&&(d.push(x.name),c.push(x.name))}let f=d.map(g=>l.get(g)),h=Vse(f,p);return Hse(h,p),h}function Vse(r,e){let t=new Map(r.map(a=>[a.name,a])),n=e.map(a=>a.name),o=new Set(n);for(;n.length>0;){let a=n.pop(),i=t.get(a);for(let p of i.children)!t.has(p.name)||o.has(p.name)||(o.add(p.name),n.push(p.name))}return r.filter(a=>o.has(a.name))}var df=class extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}};function Hse(r,e){let t=new Map(r.map((i,p)=>[i.name,p])),n=new Set(e.map(i=>i.name)),o=i=>n.has(typeof i=="string"?i:i.name),s=new Set(r.map(i=>i.name)),a=i=>s.has(typeof i=="string"?i:i.name);for(let i of r){for(let p of i.children.filter(a)){if(!t.has(p.name))throw new df(`Child ${p.name} of node ${i.name} is unreachable.`);if(t.get(i.name)>t.get(p.name))throw new df(`Node ${i.name} is scheduled to run after its child ${p.name}.`)}if(!o(i))for(let p of i.inputs){if(!t.has(p.name))throw new df(`Input ${p.name} of node ${i.name} is unreachable.`);if(t.get(p.name)>t.get(i.name))throw new df(`Node ${i.name} is scheduled to run before its input ${p.name}.`)}}}function nB(r){let e=new Map(r.map((i,p)=>[i.name,p])),t=Number.MAX_SAFE_INTEGER,n=r.map((i,p)=>ym(i)?t:p),o=i=>{let p=n[e.get(i.name)];return p??-1},s=r.map((i,p)=>i.children.map(o).reduce((u,l)=>Math.max(u,l),n[p])),a=new Map;for(let i=0;i<r.length;++i){let p=s[i];if(p===t)continue;let u=r[i],l=r[p];a.has(l.name)||a.set(l.name,[]),a.get(l.name).push(u.name)}return a}var qse=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),jse=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Xse=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function ym(r){return qse.has(r.op)}function Yse(r){return jse.has(r.op)}function Zse(r){return Xse.has(r.op)}var xm=class{constructor(e,t){this.graph=e;this.parent=t;this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new xm(e.functions[n],this)})}compiledMap=new Map;parseNodeNameCache=new Map;_weightMap={};_weightIds;_signature;_inputs;_outputs;_initNodes;SEPARATOR=",";_functions={};_functionExecutorMap={};_resourceManager;clonedTensorsMap;keepIntermediateTensors=!1;get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(o=>o.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(s=>s.name).sort(),o=t.map(s=>s.name).sort();return n.join(this.SEPARATOR)+"--"+o.join(this.SEPARATOR)}compile(e,t){let n=sD(e,t,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:s,syncInputs:a}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(o.length>0){let u=t.map(m=>m.name),l=Object.keys(e);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${l}]. Missing the following inputs: [${o}]`)}let i=rB(this.graph,n),p=nB(i);return{orderedNodes:i,nodeLiveUntilMap:p}}cloneAndKeepTensor(e){if(e==null)return null;let t=e.clone();return $t(t),t}cloneTensorList(e){return e?e.map(n=>this.cloneAndKeepTensor(n)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,n])=>[t,this.cloneTensorList(n)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let o=n.map(c=>this.graph.nodes[wn(c)[0]]),s=t.map(c=>wn(c)[0]),a=new Set(s),i=s.map(c=>this.graph.nodes[c]);i.length===0&&(i=this._outputs);let p=this.getCompilationKey(o,i),u=this.compiledMap.get(p);u==null&&(u=this.compile(e,i),this.compiledMap.set(p,u));try{this.keepIntermediateTensors=L().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(c){this.keepIntermediateTensors=!1,console.warn(c.message)}let l={},m={};return z(()=>{let c=new dg(this.weightMap,l,m,this.functionExecutorMap,this.parseNodeNameCache),d={...this.weightMap};this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(b=>{let[x,T]=wn(b,c),C=[];C[T]=e[b],d[x]=C,this.keepIntermediateTensors&&(this.clonedTensorsMap[x]=this.cloneTensorList(C))});let f=this.getFrozenTensorIds(d),{orderedNodes:h,nodeLiveUntilMap:g}=u;for(let b of h){if(d[b.name])continue;let x=oD(b,d,c,this._resourceManager);if(y.isPromise(x))throw new Error(`The execution of the op '${b.op}' returned a promise. Please use model.executeAsync() instead.`);d[b.name]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[b.name]=this.cloneTensorList(x)),this.checkTensorForDisposalWithNodeLiveUntilInfo(b,d,c,f,a,g.get(b.name))}return this.parent==null&&c.dispose(f),t.map(b=>gr(b,d,c))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(o=>o.id)));return new Set(t)}checkTensorForDisposal(e,t,n,o,s,a,i){if(!(ym(t)||a.has(e))){for(let p of n[e])p!=null&&(i[p.id]=(i[p.id]||0)+t.children.length);for(let p of t.inputs){if(ym(p))continue;let u=LN(p.name,n,o);if(u!=null)for(let l of u){if(!l||l.kept||s.has(l.id))continue;let m=i[l.id];m===1?(l.dispose(),delete i[l.id]):m!=null&&i[l.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,o,s,a){if(!(ym(e)||s.has(e.name))&&a!=null)for(let i of a){let p=LN(i,t,n);for(let u of p)!u||u.kept||o.has(u.id)||u.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,o={},s={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=L().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(c){this.keepIntermediateTensors=!1,console.warn(c.message)}let a=new dg(this.weightMap,o,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let i=await this.executeWithControlFlow(e,a,t,n),p=t.map(c=>gr(c,i,a)),u=p.map(c=>c.id),l=Object.keys(e).map(c=>e[c].id),m=new Set([...u,...l,...this.weightIds]);return Object.values(i).forEach(c=>{c.forEach(d=>{d&&!d.isDisposed&&!m.has(d.id)&&d.dispose()})}),this.parent==null&&a.dispose(m),p}async executeFunctionAsync(e,t,n){let o=e.reduce((s,a,i)=>(s[this.inputs[i].name]=a,s),{});return this._executeAsync(o,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,o){let s=Object.keys(e),a=s.map(C=>this.graph.nodes[wn(C)[0]]),i=n.map(C=>wn(C)[0]),p=new Set(i),u=i.map(C=>this.graph.nodes[C]);u.length===0&&(u=this._outputs);let{usedNodes:l,missingInputs:m,dynamicNode:c,syncInputs:d}=sD(e,u,this.weightMap,this._initNodes),f=[...a,...this.graph.weights,...this._initNodes||[]].map(C=>({node:C,contexts:t.currentContext})),h={...this.weightMap};Object.keys(e).forEach(C=>{let[v,A]=wn(C),_=[];_[A]=e[C],h[v]=_});let g={},b=this.getFrozenTensorIds(h),x={};for(;f.length>0;){let C=this.processStack(a,f,t,h,x,b,p,g,l);await Promise.all(C)}c==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let T=u.filter(C=>!ym(C)&&!gr(C.name,h,t)).map(C=>C.name);if(T.length>0){let C="";throw c!=null&&(C=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${T}] from the provided inputs [${s}]. Consider providing the following inputs: [${m}]. ${C}`)}return h}processStack(e,t,n,o,s,a,i,p,u){let l=[];for(;t.length>0;){let m=t.pop();n.currentContext=m.contexts;let c="";if(m.node.op==="Enter"&&k("isConstant",m.node,o,n)&&([c]=Li(m.node.name,n)),o[m.node.name]==null){let d=oD(m.node,o,n,this._resourceManager);c||([c]=Li(m.node.name,n));let f=n.currentContext;y.isPromise(d)?l.push(d.then(h=>(o[c]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(h)),n.currentContext=f,this.checkTensorForDisposal(c,m.node,o,n,a,i,p),this.processChildNodes(m.node,t,n,o,s,u),h))):(o[c]=d,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(d)),this.checkTensorForDisposal(c,m.node,o,n,a,i,p),this.processChildNodes(m.node,t,n,o,s,u))}else this.processChildNodes(m.node,t,n,o,s,u)}return l}processChildNodes(e,t,n,o,s,a){e.children.forEach(i=>{let[p]=Li(i.name,n);s[p]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(u=>!!gr(u,o,n))&&(s[p]=!0,t.push({contexts:n.currentContext,node:i})):i.inputNames.every(u=>!!gr(u,o,n))&&(s[p]=!0,t.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[o]=wn(t),s=this.graph.nodes[o];if(s.attrParams.shape&&s.attrParams.shape.value){let a=s.attrParams.shape.value,i=a.length===n.shape.length&&n.shape.every((p,u)=>a[u]===-1||a[u]===p);y.assert(i,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&y.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e){let o=this._signature?.inputs?.[n];o!=null?t[o.name]=e[n]:t[n]=e[n]}return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[o]=wn(n);return this.graph.nodes[o]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{let n=this._signature?.outputs?.[t];return n!=null?n.name:t},{})}checkOutputs(e){e.forEach(t=>{let[n]=wn(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}};var TT=class{constructor(e={},t={}){this.hashTableNameToHandle=e;this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}};var Qse="?tfjs-format=file",Jse="model.json",fg=class{constructor(e,t={},n=Wr){this.modelUrl=e;this.loadOptions=t;this.io=n,t==null&&(this.loadOptions={}),this.resourceManager=new TT}executor;version="n/a";handler;artifacts;initializer;resourceIdToCapturedInput;resourceManager;signature;initializerSignature;structuredOutputKeys;io;get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return y.isPromise(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let s=this.artifacts.userDefinedMetadata;s.signature!=null&&(n=s.signature),s.structuredOutputKeys!=null&&(this.structuredOutputKeys=s.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let o=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new xm(mf.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let s=mf.Instance.transformGraph(e.modelInitializer);this.initializer=new xm(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){let n=this.io.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t=e instanceof He?[e]:e,n={};return t.forEach((o,s)=>n[this.structuredOutputKeys[s]]=o),n}return e}predict(e,t){let n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){let n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){if(!(e instanceof He)&&!Array.isArray(e)){let o=this.signature?.inputs;if(o!=null)for(let s in o){let a=o[s];a.resourceId!=null&&(e[s]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];let t=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+t!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-t} non-resource placeholders, while there are ${e.length} input tensors provided.`);let n=0;return this.inputNodes.reduce((o,s)=>{let a=this.signature?.inputs?.[s]?.resourceId;return a!=null?o[s]=this.resourceIdToCapturedInput[a]:o[s]=e[n++],o},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,n=Object.keys(t);for(let o=0;o<n.length;o++){let s=n[o],a=t[s];this.resourceIdToCapturedInput[a.resourceId]=e[o]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Me(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function eae(r,e={},t=Wr){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof r=="string"&&(r=rae(r));let n=new fg(r,e,t);return await n.load(),n}function tae(r){if(r==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let e;if(r instanceof Array){let[n,o]=r;if(!n)throw new Error("modelJSON must be the first element of the array");if(!o||!(o instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");let s=Wr.getWeightSpecs(n.weightsManifest),a=Wr.getModelArtifactsForJSONSync(n,s,o);e=Wr.fromMemorySync(a)}else if("load"in r)e=r;else if("modelTopology"in r&&"weightSpecs"in r&&"weightData"in r)e=Wr.fromMemorySync(r);else throw new Error("Unknown model format");let t=new fg(e);return t.load(),t}function rae(r){return r.endsWith("/")||(r=r+"/"),`${r}${Jse}${Qse}`}var nae="0.0.0";var vB={};Ye(vB,{CSVDataset:()=>gf,Dataset:()=>$i,FileDataSource:()=>Cf,TextLineDataset:()=>hf,URLDataSource:()=>If,array:()=>dB,csv:()=>yB,func:()=>xB,generator:()=>TB,microphone:()=>IB,version_data:()=>kB,webcam:()=>CB,zip:()=>fB});var cB=hl($h());var pB=hl($h());function oB(r,e){return CT(r,e)}function CT(r,e,t=new Map,n=new Set){if(r==null)return null;if(typeof Blob=="function"&&r instanceof Blob)return r.slice();if(n.has(r))throw new Error("Circular references are not supported.");if(t.has(r))return t.get(r);let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(rl(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let a in r){let i=r[a],p=CT(i,e,t,n);s[a]=p}return n.delete(r),r.__proto__&&(s.__proto__=r.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return t.set(r,o.value),o.value}function sB(r,e=iD){return aB(r,e)}function aB(r,e,t=new Set){let n=r[0];if(t.has(n))throw new Error("Circular references are not supported.");let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(rl(n)){let s=Array.isArray(n)?[]:{};t.add(n);for(let a in n){let i=r.map(u=>u[a]),p=aB(i,e,t);s[a]=p}return t.delete(n),s}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return o.value}function iD(r){return r===null?null:rl(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}async function IT(r,e){let t=new Map;CT(r,e,t);for(let o of Array.from(t.keys())){let s=t.get(o);if(y.isPromise(s)){let a=await s;t.set(o,a)}}return CT(r,e,t)}function rl(r){let e=!1;if(L().get("IS_BROWSER"))e=r instanceof TextDecoder;else{let{StringDecoder:t}=aD();e=r instanceof t}return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof He)&&!(r instanceof Promise)&&!e)}function iB(r){return r==null||oae(r)||Array.isArray(r)||typeof r=="object"&&r instanceof He||y.isTypedArray(r)}function oae(r){return r===null||typeof r!="object"&&typeof r!="function"}function uB(r){return oB(r,sae)}function sae(r){return r instanceof He?{value:r.clone(),recurse:!1}:rl(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var ff=class{constructor(e){this.capacity=e;if(e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}begin=0;end=0;doubledCapacity;data;wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}};var uD=class extends ff{constructor(){super(uD.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let o=0;o<n;o++)t[o]=this.get(this.wrap(this.begin+o));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},hg=uD;q(hg,"INITIAL_CAPACITY",32);function CD(r){return new pD(r)}function gg(r){return new lD(r)}function lB(r,e){return new vT(r,e)}function mB(r,e=ID.FAIL){return new xD(r,e)}var ir=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new bD(this,e)}filter(e){return new hD(this,e)}map(e){return new gD(this,e)}mapAsync(e){return new kT(this,e)}serialMapAsync(e){return new kT(this,e).serial()}flatmap(e){return new yD(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new fD(this,e,t)}columnMajorBatch(e,t=!0,n=iD){return this.rowMajorBatch(e,t).map(s=>sB(s,n))}concatenate(e,t){return new vT(CD([this,e]),t)}take(e){return e<0||e==null?this:new dD(this,e)}skip(e){return e<0||e==null?this:new cD(this,e)}prefetch(e){return new ST(this,e)}shuffle(e,t){return new TD(this,e,t)}serial(){return new mD(this)}},pD=class extends ir{constructor(t){super();this.items=t}trav=0;summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let t=this.items[this.trav];return this.trav++,{value:uB(t),done:!1}}},lD=class extends ir{constructor(t){super();this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}},mD=class extends ir{constructor(t){super();this.upstream=t;this.lastRead=Promise.resolve({value:null,done:!1})}lastRead;summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},cD=class extends ir{constructor(t,n){super();this.upstream=t;this.maxCount=n;this.lastRead=Promise.resolve({value:null,done:!1})}lastRead;count=0;summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let t=await this.upstream.next();if(t.done)return t;Me(t.value)}return this.upstream.next()}},dD=class extends ir{constructor(t,n){super();this.upstream=t;this.maxCount=n}count=0;summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},fD=class extends ir{constructor(t,n,o=!0){super();this.upstream=t;this.batchSize=n;this.enableSmallLastBatch=o;this.lastRead=Promise.resolve({value:null,done:!1})}lastRead;summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let t=[];for(;t.length<this.batchSize;){let n=await this.upstream.next();if(n.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(n.value)}return{value:t,done:!1}}},hD=class extends ir{constructor(t,n){super();this.upstream=t;this.predicate=n;this.lastRead=Promise.resolve({value:null,done:!1})}lastRead;summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;Me(t.value)}}},gD=class extends ir{constructor(t,n){super();this.upstream=t;this.transform=n}summary(){return`${this.upstream.summary()} -> Map`}async next(){let t=await this.upstream.next();if(t.done)return{value:null,done:!0};let n=ca.getTensorsInContainer(t.value),o=this.transform(t.value),s=ca.getTensorsInContainer(o);for(let a of n)ca.isTensorInList(a,s)||a.dispose();return{value:o,done:!1}}},bD=class extends ir{constructor(t,n){super();this.upstream=t;this.handler=n;this.lastRead=Promise.resolve({value:null,done:!1})}count=0;summary(){return`${this.upstream.summary()} -> handleErrors`}lastRead;async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}},kT=class extends ir{constructor(t,n){super();this.upstream=t;this.transform=n}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let t=await this.upstream.next();if(t.done)return{value:null,done:!0};let n=ca.getTensorsInContainer(t.value),o=await this.transform(t.value),s=ca.getTensorsInContainer(o);for(let a of n)ca.isTensorInList(a,s)||a.dispose();return{value:o,done:!1}}},Tm=class extends ir{lastRead;outputQueue;constructor(){super(),this.outputQueue=new hg,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},yD=class extends Tm{constructor(t,n){super();this.upstream=t;this.transform=n}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let t=await this.upstream.next();if(t.done)return!1;let n=ca.getTensorsInContainer(t.value),o=this.transform(t.value),s=ca.getTensorsInContainer(o);this.outputQueue.pushAll(o);for(let a of n)ca.isTensorInList(a,s)||a.dispose();return!0}},vT=class extends ir{constructor(t,n){super();this.baseErrorHandler=n;this.moreIterators=t}lastRead=null;iterator=null;moreIterators;summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,this.iterator==null){let o=await this.moreIterators.next();if(o.done)return{value:null,done:!0};this.iterator=o.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let n=await this.iterator.next();return n.done?(this.iterator=null,this.readFromChain(t)):n}},ID=(n=>(n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST",n))(ID||{}),xD=class extends ir{constructor(t,n=0){super();this.iterators=t;this.mismatchMode=n}count=0;currentPromise=null;summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(t){await t;let n=0,o=0;function s(i){return i instanceof ir?{value:i.next().then(u=>(n++,u.done&&o++,u.value)),recurse:!1}:{value:null,recurse:!0}}let a=await IT(this.iterators,s);if(n===o)return{value:null,done:!0};if(o>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},ST=class extends ir{constructor(t,n){super();this.upstream=t;this.bufferSize=n;this.buffer=new ff(n)}buffer;summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}},TD=class extends ST{constructor(t,n,o){super(t,n);this.upstream=t;this.windowSize=n;this.random=pB.alea(o||y.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}random;lastRead;upstreamExhausted=!1;async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let t=this.chooseIndex(),n=await this.buffer.shuffleExcise(t);if(n.done)this.upstreamExhausted=!0;else return this.refill(),n}return{value:null,done:!0}}};var $i=class{size=null;batch(e,t=!0){let n=this;y.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let o;return this.size===1/0||this.size==null?o=this.size:t?o=Math.ceil(this.size/e):o=Math.floor(this.size/e),Bn(async()=>(await n.iterator()).columnMajorBatch(e,t,aae),o)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,Bn(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,Bn(async()=>(await t.iterator()).filter(o=>z(()=>e(o))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Bn(async()=>(await t.iterator()).map(n=>z(()=>e(n))),this.size)}mapAsync(e){let t=this;return Bn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Bn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,Bn(async()=>{let o=gg(async()=>({value:await t.iterator(),done:!1}));return lB(o.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,Bn(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let o=this,s=cB.alea(t||y.now().toString());return Bn(async()=>{let a=s.int32();return n&&(a+=s.int32()),(await o.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,Bn(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};q($i,"MAX_BUFFER_SIZE",1e4);function Bn(r,e=null){return new class extends $i{size=e;async iterator(){return r()}}}function dB(r){return Bn(async()=>CD(r),r.length)}function fB(r){if(!rl(r))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(r))for(let t=0;t<r.length;t++)e=e==null?r[t].size:Math.min(e,r[t].size);else if(r instanceof Object)for(let t in r)e=e==null?r[t].size:Math.min(e,r[t].size);return Bn(async()=>{let t=await IT(r,n=>{if(n instanceof $i)return{value:n.iterator(),recurse:!1};if(rl(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return mB(t,1)},e)}function aae(r){if(r===null)return null;let e=r[0];return iB(e)?{value:iae(r),recurse:!1}:{value:null,recurse:!0}}function iae(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof He?dr(r):cr(r)}var hf=class extends $i{constructor(t){super();this.input=t}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(s=>(s.endsWith("\r")&&(s=s.slice(0,-1)),s))}};var wT='"',bg=Symbol("out"),hB=Symbol("field"),AT=Symbol("quote"),kD=Symbol("quoteafterquote"),gB=Symbol("quoteinquote"),gf=class extends $i{constructor(t,n){super();this.input=t;this.base=new hf(t),n||(n={}),this.hasHeader=n.hasHeader!==!1,this.fullColumnNames=n.columnNames,this.columnConfigs=n.columnConfigs,this.configuredColumnsOnly=n.configuredColumnsOnly,n.delimWhitespace?(y.assert(n.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=n.delimiter?n.delimiter:","}base;hasHeader=!0;fullColumnNames=null;columnNamesValidated=!1;columnConfigs=null;configuredColumnsOnly=!1;delimiter=",";delimWhitespace=!1;async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let t=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!t)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&t&&y.assert(t.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+t.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=t);let n=this.fullColumnNames.reduce((s,a)=>(s[a]=s[a]+1||1,s),{}),o=Object.keys(n).filter(s=>n[s]>1);if(y.assert(o.length===0,()=>"Duplicate column names found: "+o.toString()),this.columnConfigs){for(let s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let n=await(await this.base.iterator()).next();if(n.done)throw new Error("No data was found for CSV parsing.");let o=n.value;return this.parseRow(o,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let t=await this.base.iterator();return this.hasHeader&&(t=t.skip(1)),t.map(n=>this.makeDataElement(n))}makeDataElement(t){let n=this.parseRow(t),o={},s={};for(let a=0;a<this.fullColumnNames.length;a++){let i=this.fullColumnNames[a],p=this.columnConfigs?this.columnConfigs[i]:null;if(!(this.configuredColumnsOnly&&!p)){let u=n[a],l=null;if(u==="")if(p&&p.default!==void 0)l=p.default;else{if(p&&(p.required||p.isLabel))throw new Error(`Required column ${i} is empty in this line: ${t}`);l=void 0}else{let m=Number(u);if(isNaN(m))p&&p.dtype==="bool"?l=this.getBoolean(u):l=u;else if(!p||!p.dtype)l=m;else switch(p.dtype){case"float32":l=m;break;case"int32":l=Math.floor(m);break;case"bool":l=this.getBoolean(u);break;default:l=m}}p&&p.isLabel?s[i]=l:o[i]=l}}return Object.keys(s).length===0?o:{xs:o,ys:s}}getBoolean(t){return t==="1"||t.toLowerCase()==="true"?1:0}parseRow(t,n=!0){let o=[],s=0,a=t.length,i=bg;for(let p=0;p<a;p++)switch(i){case bg:switch(t.charAt(p)){case wT:s=p+1,i=AT;break;case this.delimiter:if(s=p+1,this.delimiter===" "&&this.delimWhitespace)break;o.push(""),i=bg;break;default:i=hB,s=p;break}break;case hB:switch(t.charAt(p)){case this.delimiter:o.push(t.substring(s,p)),i=bg,s=p+1;break;default:}break;case AT:switch(t.charAt(p)){case wT:i=kD;break;default:}break;case kD:switch(t.charAt(p)){case this.delimiter:o.push(t.substring(s,p-1)),i=bg,s=p+1;break;case wT:i=AT;break;default:i=gB;break}break;case gB:switch(t.charAt(p)){case wT:i=AT;break;default:}break;default:}if(i===kD?o.push(t.substring(s,a-1)):o.push(t.substring(s)),n&&o.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${o}`);return o}};var bf=class extends ir{constructor(t){super();this.microphoneConfig=t;this.fftSize=t.fftSize||1024;let n=Math.log2(this.fftSize);if(this.fftSize<0||n<4||n>14||!Number.isInteger(n))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=t.numFramesPerSpectrogram||43,this.sampleRateHz=t.sampleRateHz,this.columnTruncateLength=t.columnTruncateLength||this.fftSize,this.audioTrackConstraints=t.audioTrackConstraints,this.smoothingTimeConstant=t.smoothingTimeConstant||0,this.includeSpectrogram=t.includeSpectrogram!==!1,this.includeWaveform=t.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}isClosed=!1;stream;fftSize;columnTruncateLength;freqData;timeData;numFrames;analyser;audioContext;sampleRateHz;audioTrackConstraints;smoothingTimeConstant;includeSpectrogram;includeWaveform;summary(){return"microphone"}static async create(t={}){if(!L().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let n=new bf(t);return await n.start(),n}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(o){throw new Error(`Error thrown while initializing video stream: ${o.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let t=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new t,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let n=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,n.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let t,n,o=await this.getAudioData();if(this.includeSpectrogram){let s=this.flattenQueue(o.freqDataQueue);t=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let s=this.flattenQueue(o.timeDataQueue);n=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:t,waveform:n},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let t=[],n=[],o=0;return new Promise(s=>{let a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:t,timeDataQueue:n}),t.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),n.push(this.timeData.slice())),++o===this.numFrames&&(clearInterval(a),s({freqDataQueue:t,timeDataQueue:n}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(t){let n=t[0].length,o=new Float32Array(t.length*n);return t.forEach((s,a)=>o.set(s,a*n)),o}getTensorFromAudioDataArray(t,n){let o=new Float32Array(y.sizeFromShape(n));return o.set(t,o.length-t.length),cr(o,n)}};var yf=class extends ir{constructor(t,n){super();this.webcamVideoElement=t;this.webcamConfig=n;if(this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=er([0],"int32"),this.webcamConfig.centerCrop){let o=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,a=(1-o)/2,i=(1-s)/2,p=a+o,u=s+i;this.cropBox=wi([i,a,u,p],[1,4])}else this.cropBox=wi([0,0,1,1],[1,4])}isClosed=!0;stream;resize=!1;cropSize;cropBox;cropBoxInd;summary(){return"webcam"}static async create(t,n={}){if(!L().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!n.resizeWidth||!n.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=n.resizeWidth,t.height=n.resizeHeight}let o=new yf(t,n);return await o.start(),o}async start(){this.webcamConfig.facingMode&&y.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(t){throw t.message=`Error thrown while initializing video stream: ${t.message}`,t}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){console.log(t),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(t=>{this.webcamVideoElement.onloadedmetadata=()=>{t()}})}async next(){if(this.isClosed)return{value:null,done:!0};let t;try{t=jy.fromPixels(this.webcamVideoElement)}catch(n){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(n)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(t),done:!1}}catch(n){throw new Error(`Error thrown cropping the video: ${n.message}`)}finally{t.dispose()}else return{value:t,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(t){return z(()=>{let n=Cr(ne(t,"float32"),0),o;o=xn.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let s=o.shape;return E(o,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(n=>n.stop());try{this.webcamVideoElement.srcObject=null}catch(n){console.log(n),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}};var xf=class{};var yg=class extends ir{split(e){return new vD(this,e)}},vD=class extends yg{constructor(t,n){super();this.upstream=t;this.impl=new SD(t,n)}impl;summary(){return this.impl.summary()}async next(){return this.impl.next()}},SD=class extends Tm{constructor(t,n){super();this.upstream=t;this.separator=n}carryover="";summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let t=await this.upstream.next();if(t.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let n=t.value.split(this.separator);n[0]=this.carryover+n[0];for(let o of n.slice(0,-1))this.outputQueue.push(o);return this.carryover=n[n.length-1],!0}};var NT=class extends ir{decodeUTF8(){return new wD(this)}},wD=class extends yg{constructor(t){super();this.upstream=t;this.impl=new AD(t)}impl;summary(){return this.impl.summary()}async next(){return this.impl.next()}},AD=class extends Tm{constructor(t){super();this.upstream=t;if(L().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:n}=aD();this.decoder=new n("utf8")}}decoder;summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let t=await this.upstream.next(),n;if(t.done)return!1;n=t.value;let o;return L().get("IS_BROWSER")?o=this.decoder.decode(n,{stream:!0}):o=this.decoder.write(Buffer.from(n.buffer)),this.outputQueue.push(o),!0}};var Tf=class extends NT{constructor(t,n={}){super();this.file=t;this.options=n;y.assert(t instanceof Uint8Array||(L().get("IS_BROWSER")?t instanceof File||t instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=n.offset||0,this.chunkSize=n.chunkSize||1024*1024}offset;chunkSize;summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((n,o)=>{let s=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)n(new Uint8Array(this.file.slice(this.offset,s)));else{let a=new FileReader;a.onload=p=>{let u=a.result;if(u instanceof ArrayBuffer&&(u=new Uint8Array(u)),!(u instanceof Uint8Array))return o(new TypeError("FileReader returned unknown type."));n(u)},a.onabort=p=>o(new Error("Aborted")),a.onerror=p=>o(new Error(p.type));let i=this.file.slice(this.offset,s);a.readAsArrayBuffer(i)}this.offset=s}),done:!1}}};async function bB(r,e={},t){let n,o;typeof r=="string"?n=r:(n=r.url,o=uae(r));let s=await(t||y.fetch)(n,o);if(s.ok){let a=new Uint8Array(await s.arrayBuffer());return new Tf(a,e)}else throw new Error(s.statusText)}var uae=r=>({method:r.method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:r.referrer,integrity:r.integrity});function DT(r){return typeof r=="string"&&r.slice(0,7)==="file://"}var Cf=class extends xf{constructor(t,n={}){super();this.input=t;this.options=n}async iterator(){if(DT(this.input)&&L().get("IS_NODE")){let t=_T();this.input=t.readFileSync(this.input.slice(7))}return new Tf(this.input,this.options)}};var If=class extends xf{constructor(t,n={}){super();this.url=t;this.fileOptions=n}async iterator(){return DT(this.url)?new Cf(this.url,this.fileOptions).iterator():bB(this.url,this.fileOptions)}};function yB(r,e={}){return new gf(new If(r),e)}function xB(r){let e=gg(r);return Bn(async()=>e)}function TB(r){return Bn(async()=>{let e=await r();return gg(()=>e.next())})}async function CB(r,e){return yf.create(r,e)}async function IB(r){return bf.create(r)}var kB="0.0.0";function oe(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&y.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}var pae=kr.whereImpl,ND=class extends bo{blockSize=48;data;firstUse=!0;nextDataId(){return ND.nextDataId++}constructor(){super(),this.data=new $a(this,jr())}write(e,t,n){this.firstUse&&(this.firstUse=!1,L().get("IS_NODE")&&I.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let o={id:this.nextDataId()};return this.data.set(o,{values:e,dtype:n,refCount:1}),o}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&y.isString(n[0])){let s=n.map(a=>y.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return{dataId:o,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,o,s){this.data.set(e,{values:t,dtype:o,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let o=this.readSync(n.real.dataId),s=this.readSync(n.imag.dataId);return I.mergeRealAndImagArrays(o,s)}return y.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(o=>y.decodeString(o));return Ce(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,t)}makeOutput(e,t,n){return jr().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=y.now();return e(),{kernelMs:y.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){oe([e],"where");let t=this.readSync(e.dataId);return pae(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},kf=ND;q(kf,"nextDataId",0);var _f={};Ye(_f,{addImpl:()=>RD,bincountImpl:()=>wf,bincountReduceImpl:()=>RT,castImpl:()=>_D,ceilImpl:()=>MD,concatImpl:()=>Cm,equalImpl:()=>PD,expImpl:()=>ED,expm1Impl:()=>BD,floorDivImpl:()=>OD,floorImpl:()=>$D,gatherNdImpl:()=>MT,gatherV2Impl:()=>PT,greaterEqualImpl:()=>GD,greaterImpl:()=>zD,lessEqualImpl:()=>UD,lessImpl:()=>WD,linSpaceImpl:()=>FT,logImpl:()=>KD,maxImpl:()=>ET,maximumImpl:()=>VD,minimumImpl:()=>HD,multiplyImpl:()=>xg,negImpl:()=>qD,notEqualImpl:()=>jD,prodImpl:()=>XD,raggedGatherImpl:()=>LT,raggedRangeImpl:()=>BT,raggedTensorToTensorImpl:()=>$T,rangeImpl:()=>km,rsqrtImpl:()=>YD,scatterImpl:()=>Oi,sigmoidImpl:()=>e$,simpleAbsImpl:()=>DD,sliceImpl:()=>vm,sparseFillEmptyRowsImpl:()=>OT,sparseReshapeImpl:()=>zT,sparseSegmentReductionImpl:()=>Df,sqrtImpl:()=>n$,squaredDifferenceImpl:()=>QD,staticRegexReplaceImpl:()=>JD,stridedSliceImpl:()=>GT,stringNGramsImpl:()=>Sm,stringSplitImpl:()=>wm,stringToHashBucketFastImpl:()=>Am,subImpl:()=>t0,tileImpl:()=>WT,topKImpl:()=>UT,transposeImpl:()=>Af,uniqueImpl:()=>Nm});function DD(r){let e=new Float32Array(r.length);for(let t=0;t<r.length;++t)e[t]=Math.abs(r[t]);return e}var lae=r=>{let{x:e}=r.inputs,t=r.backend;oe(e,"abs");let n=new Float32Array(y.sizeFromShape(e.shape)),o=t.data.get(e.dataId).values;return n=DD(o),t.makeOutput(n,e.shape,e.dtype)},SB={kernelName:Gs,backendName:"cpu",kernelFunc:lae};function at(r){return(e,t,n,o,s)=>{let a=I.assertAndGetBroadcastShape(e,t),i=a.length,p=y.computeStrides(a),u=y.sizeFromShape(a),l=y.getTypedArrayFromDType(s,u),m=e.length,c=t.length,d=y.computeStrides(e),f=y.computeStrides(t),h=I.getBroadcastDims(e,a),g=I.getBroadcastDims(t,a);if(h.length+g.length===0)for(let b=0;b<l.length;++b)l[b]=r(n[b%n.length],o[b%o.length]);else for(let b=0;b<l.length;++b){let x=y.indexToLoc(b,i,p),T=x.slice(-m);h.forEach(_=>T[_]=0);let C=y.locToIndex(T,m,d),v=x.slice(-c);g.forEach(_=>v[_]=0);let A=y.locToIndex(v,c,f);l[b]=r(n[C],o[A])}return[l,a]}}function Nr(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,i=t.makeTensorInfo(n.shape,"complex64"),p=t.data.get(i.dataId);return p.complexTensorInfos={real:t.makeTensorInfo(n.shape,"float32",s),imag:t.makeTensorInfo(o.shape,"float32",a)},i}var wB={kernelName:dp,backendName:"cpu",kernelFunc:Nr};function vf(r,e,t="float32"){if(t==="complex64"){let o=vf(r,e,"float32"),s=vf(r,e,"float32");return Nr({inputs:{real:o,imag:s},backend:r})}let n=y.makeZerosTypedArray(y.sizeFromShape(e),t);return r.makeTensorInfo(e,t,n)}function rn(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var AB={kernelName:jn,backendName:"cpu",kernelFunc:rn};function Da(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.real,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var NB={kernelName:vp,backendName:"cpu",kernelFunc:Da};function _D(r,e,t,n){if(n==="int32"){let o=Int32Array.from(r);return[e,"int32",o]}if(n==="bool"){let o=y.toTypedArray([0],t),[s,a]=at((i,p)=>i!==p?1:0)(e,[],r,o,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${t} to ${n}`)}function _a(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return rn({inputs:{x:o},backend:t});let l=vf(t,o.shape,o.dtype),m=_a({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),c=Nr({inputs:{real:m,imag:l},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(m),c}if(o.dtype==="complex64"){let l=Da({inputs:{input:o},backend:t}),m=_a({inputs:{x:l},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(l),m}if(!y.hasEncodingLoss(o.dtype,s)){let l=rn({inputs:{x:o},backend:t});return{dataId:l.dataId,shape:l.shape,dtype:s}}let a=t.data.get(o.dataId).values,[i,p,u]=_D(a,o.shape,o.dtype,s);return t.makeTensorInfo(i,p,u)}var DB={kernelName:Hn,backendName:"cpu",kernelFunc:_a};function ct(r,e,t,n){return t==null?({inputs:o,backend:s})=>{let{a,b:i}=o,p=s;oe([a,i],r);let u=p.data.get(a.dataId).values,l=p.data.get(i.dataId).values,m=a.dtype==="string"?I.fromUint8ToStringArray(u):u,c=a.dtype==="string"?I.fromUint8ToStringArray(l):l,d=n||a.dtype,[f,h]=e(a.shape,i.shape,m,c,d);return p.makeTensorInfo(h,d,f)}:({inputs:o,backend:s})=>{let{a,b:i}=o,p=s;if(a.dtype==="complex64"||i.dtype==="complex64"){let u=_a({inputs:{x:a},backend:p,attrs:{dtype:"complex64"}}),l=p.data.get(u.dataId),m=l.complexTensorInfos.real,c=l.complexTensorInfos.imag,d=p.data.get(m.dataId).values,f=p.data.get(c.dataId).values,h=_a({inputs:{x:i},backend:p,attrs:{dtype:"complex64"}}),g=p.data.get(h.dataId),b=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,T=p.data.get(b.dataId).values,C=p.data.get(x.dataId).values,[v,A,_]=t(a.shape,i.shape,d,f,T,C),R=p.makeTensorInfo(_,"float32",v),M=p.makeTensorInfo(_,"float32",A),F=Nr({inputs:{real:R,imag:M},backend:p});return p.disposeIntermediateTensorInfo(u),p.disposeIntermediateTensorInfo(h),p.disposeIntermediateTensorInfo(R),p.disposeIntermediateTensorInfo(M),F}else{let u=p.data.get(a.dataId).values,l=p.data.get(i.dataId).values,m=n||a.dtype,[c,d]=e(a.shape,i.shape,u,l,m);return p.makeTensorInfo(d,m,c)}}}function Sf(r){return(e,t,n,o,s,a)=>{let i=I.assertAndGetBroadcastShape(e,t),p=y.sizeFromShape(i),u=i.length,l=y.computeStrides(i),m=y.getTypedArrayFromDType("float32",p),c=y.getTypedArrayFromDType("float32",p),d=I.getBroadcastDims(e,i),f=I.getBroadcastDims(t,i),h=I.mergeRealAndImagArrays(n,o),g=I.mergeRealAndImagArrays(s,a),b=e.length,x=y.computeStrides(e),T=t.length,C=y.computeStrides(t);if(d.length+f.length===0)for(let v=0;v<m.length;v++){let A=v%h.length,_=v%g.length,R=r(h[A*2],h[A*2+1],g[_*2],g[_*2+1]);m[v]=R.real,c[v]=R.imag}else for(let v=0;v<m.length;v++){let A=y.indexToLoc(v,u,l),_=A.slice(-b);d.forEach(G=>_[G]=0);let R=y.locToIndex(_,b,x),M=A.slice(-T);f.forEach(G=>M[G]=0);let F=y.locToIndex(M,T,C),O=r(h[R*2],h[R*2+1],g[F*2],g[F*2+1]);m[v]=O.real,c[v]=O.imag}return[m,c,i]}}var RD=at((r,e)=>r+e),mae=Sf((r,e,t,n)=>({real:r+t,imag:e+n})),bu=ct(Dn,RD,mae),_B={kernelName:Dn,backendName:"cpu",kernelFunc:bu};function wf(r,e,t,n,o){let s=y.sizeFromShape(n),a=y.makeZerosTypedArray(o,t);for(let i=0;i<r.length;i++){let p=r[i];if(p<0)throw new Error("Input x must be non-negative!");p>=o||(s>0?a[p]+=e[i]:a[p]+=1)}return a}function RT(r,e,t,n=!1){let o=r.shape[0],s=r.shape[1],a=Ce([o,t],e.dtype);for(let i=0;i<o;i++)for(let p=0;p<s;p++){let u=r.get(i,p);if(u<0)throw new Error("Input x must be non-negative!");u>=t||(n?a.set(1,i,u):e.size>0?a.set(a.get(i,u)+e.get(i,p),i,u):a.set(a.get(i,u)+1,i,u))}return a}function Br(r){return(e,t,n)=>{let o=y.getArrayFromDType(t,e.length);for(let s=0;s<e.length;++s)o[s]=r(e[s],n);return o}}function Le(r,e,t){let n=Br(e);return $n(r,n,t)}function $n(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;oe(a,r);let i=s,p=i.data.get(a.dataId).values,u;if(a.dtype==="string"){if(!Array.isArray(p))throw new Error("String tensor's value was not an instance of Array");u=I.fromUint8ToStringArray(p)}else u=p;let l=t||a.dtype,m=e(u,l,o);return i.makeTensorInfo(a.shape,l,m)}}var MD=Br(r=>Math.ceil(r)),cae=$n(Do,MD),RB={kernelName:Do,backendName:"cpu",kernelFunc:cae};function Cm(r,e,t,n){let o=y.getArrayFromDType(t,y.sizeFromShape(e));if(n&&t!=="string"){let s=0;r.forEach(a=>{let i=y.sizeFromShape(a.shape);o.set(a.vals,s),s+=i})}else{let s=0;r.forEach(a=>{let i=t==="string"?I.fromUint8ToStringArray(a.vals):a.vals,p=0;for(let u=0;u<a.shape[0];++u){let l=u*e[1]+s;for(let m=0;m<a.shape[1];++m)o[l+m]=i[p++]}s+=a.shape[1]})}return o}var PD=at((r,e)=>r===e?1:0),FD=ct(Ya,PD,null,"bool"),MB={kernelName:Ya,backendName:"cpu",kernelFunc:FD};var ED=Br(r=>Math.exp(r)),LD=$n(zo,ED,"float32"),PB={kernelName:zo,backendName:"cpu",kernelFunc:LD};var BD=Br(r=>Math.expm1(r)),dae=$n(Go,BD),FB={kernelName:Go,backendName:"cpu",kernelFunc:dae};var $D=Br(r=>Math.floor(r)),fae=$n(Wo,$D),EB={kernelName:Wo,backendName:"cpu",kernelFunc:fae};var OD=at((r,e)=>Math.floor(r/e)),hae=ct(Uo,OD,null,"int32"),LB={kernelName:Uo,backendName:"cpu",kernelFunc:hae};function MT(r,e,t,n,o,s,a,i,p){let u=Ce([n,s],t);for(let l=0;l<n;l++){let m=[],c=0;for(let d=0;d<o;d++){let f=r[l*o+d];c+=f*a[d],m.push(f)}if(c<0||c>=p/s)throw new Error(`Invalid indices: ${m} does not index into ${i}`);for(let d=0;d<s;d++)u.values[l*s+d]=e.get(...e.indexToLoc(c*s+d))}return u}function PT(r,e,t){let n=Ce(t,r.dtype);for(let o=0;o<n.size;++o){let a=n.indexToLoc(o).slice(),i=a[0],p=a[2],u=e.locToIndex([i,p]);a[2]=e.values[u];let l=r.locToIndex(a);0<=l&&l<r.values.length&&(n.values[o]=r.values[l])}return n}var zD=at((r,e)=>r>e?1:0),gae=ct(Ja,zD,null,"bool"),BB={kernelName:Ja,backendName:"cpu",kernelFunc:gae};var GD=at((r,e)=>r>=e?1:0),bae=ct(Vo,GD,null,"bool"),$B={kernelName:Vo,backendName:"cpu",kernelFunc:bae};var WD=at((r,e)=>r<e?1:0),yae=ct(ei,WD,null,"bool"),OB={kernelName:ei,backendName:"cpu",kernelFunc:yae};var UD=at((r,e)=>r<=e?1:0),xae=ct(ti,UD,null,"bool"),zB={kernelName:ti,backendName:"cpu",kernelFunc:xae};function FT(r,e,t){let n=(e-r)/(t-1),o=y.makeZerosTypedArray(t,"float32");o[0]=r;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}var KD=Br(r=>Math.log(r)),Tae=$n(Yo,KD),GB={kernelName:Yo,backendName:"cpu",kernelFunc:Tae};function ET(r,e,t,n){let o=y.getTypedArrayFromDType(n,y.sizeFromShape(t));for(let s=0;s<o.length;++s){let a=s*e,i=r[a];for(let p=0;p<e;++p){let u=r[a+p];(Number.isNaN(u)||u>i)&&(i=u)}o[s]=i}return o}var VD=at((r,e)=>Math.max(r,e)),Cae=ct(es,VD),WB={kernelName:es,backendName:"cpu",kernelFunc:Cae};var HD=at((r,e)=>Math.min(r,e)),Iae=ct(os,HD),UB={kernelName:os,backendName:"cpu",kernelFunc:Iae};var xg=at((r,e)=>r*e),kae=Sf((r,e,t,n)=>({real:r*t-e*n,imag:r*n+e*t})),Im=ct(as,xg,kae),KB={kernelName:as,backendName:"cpu",kernelFunc:Im};function qD(r,e,t){let n=y.createScalarValue(-1,t);return xg([],e,n,r,t)}function vae(r){let{inputs:e,backend:t}=r,{x:n}=e;oe(n,"neg");let o=t.data.get(n.dataId).values,[s,a]=qD(o,n.shape,n.dtype);return t.makeTensorInfo(a,n.dtype,s)}var VB={kernelName:Ys,backendName:"cpu",kernelFunc:vae};var jD=at((r,e)=>r!==e?1:0),Sae=ct(pi,jD,null,"bool"),HB={kernelName:pi,backendName:"cpu",kernelFunc:Sae};function Af(r,e,t,n,o){let s=e.length,a=y.sizeFromShape(e),i=y.computeStrides(e),p=y.computeStrides(o),u=y.getTypedArrayFromDType(t,y.sizeFromShape(o));for(let l=0;l<a;++l){let m=y.indexToLoc(l,s,i),c=new Array(m.length);for(let f=0;f<c.length;f++)c[f]=m[n[f]];let d=y.locToIndex(c,s,p);u[d]=r[l]}return u}function Xt(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{perm:s}=t;oe(o,"transpose");let a=o.shape.length,i=new Array(a);for(let m=0;m<i.length;m++)i[m]=o.shape[s[m]];let p=n.data.get(o.dataId).values,u=Af(p,o.shape,o.dtype,s,i);return{dataId:n.write(u,i,o.dtype),shape:i,dtype:o.dtype}}var qB={kernelName:Rn,backendName:"cpu",kernelFunc:Xt};function XD(r,e,t,n){let[o,s]=I.computeOutAndReduceShapes(r,n),a=Nt(e,"int32"),i=y.makeZerosTypedArray(y.sizeFromShape(o),a),p=y.sizeFromShape(s);for(let u=0;u<i.length;++u){let l=u*p,m=1;for(let c=0;c<p;++c)m*=t[l+c];i[u]=m}return{outVals:i,outShape:o,outDtype:a}}function wae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;oe(o,"prod");let i=o.shape.length,p=y.parseAxisParam(s,o.shape),u=I.getAxesPermutation(p,i),l=p,m=o,c=[];u!=null&&(m=Xt({inputs:{x:o},backend:t,attrs:{perm:u}}),c.push(m),l=I.getInnerMostAxes(l.length,i));let d=t.data.get(m.dataId).values,{outVals:f,outShape:h,outDtype:g}=XD(m.shape,m.dtype,d,l),b=h;return a&&(b=I.expandShapeToKeepDim(h,p)),c.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.makeTensorInfo(b,g,f)}var jB={kernelName:ms,backendName:"cpu",kernelFunc:wae};function Aae(r,e,t){r.forEach((n,o)=>{if(n<0||n>=t){let s=y.indexToLoc(o,e.length,y.computeStrides(e)).join(",");throw new Error(`indices[${s}] = ${n} is not in [0, ${t})`)}})}function Nae(r,e){for(let t=0;t<r.length;++t){let n=r[t],o=t===r.length-1?e:r[t+1].length;if(n.length===0)throw new Error("Ragged splits may not be empty");if(n[0]<0)throw new Error("Ragged splits must be non-negative");if(n[n.length-1]>o)throw new Error("Ragged splits must not point past values");for(let s=1;s<n.length;++s)if(n[s-1]>n[s])throw new Error("Ragged splits must be sorted in ascending order")}}function Dae(r,e,t,n){let o=[],s=0,a=e.length-1+t.length,i=new Array(a).fill(null).map(()=>[0]);Nae(t,n);let p=1;for(let u=0;u<e.length-1;++u){p*=e[u];let l=e[u+1];for(let m=1;m<p+1;++m)i[u].push(m*l)}for(let u=0;u<r.length;++u){let l=r[u],m=r[u]+1;for(let c=0;c<t.length;++c){let d=t[c],f=c+e.length-1;if(f>=0){let h=i[f],g=h[h.length-1]-d[l];for(let b=l;b<m;++b)i[f].push(d[b+1]+g)}l=d[l],m=d[m]}m!==l&&(o.push([l,m]),s+=m-l)}return{outSplits:i,valueSlices:o,numValues:s}}function _ae(r){let e=[];for(let t=0;t<r.length;++t){let n=r[t].length,o=y.getArrayFromDType("int32",n);e.push(o),r[t].forEach((s,a)=>o[a]=s)}return e}function XB(r,e){let t=r.slice(0,e);for(;t.length<e;)t.push(1);for(let n=e;n<r.length;n++)t[e-1]*=r[n];return t}function Rae(r,e,t,n,o,s){let a=XB(e,2)[1],i=XB(s,2)[1],p=0;for(let u of t)for(let l=u[0];l<u[1];++l){for(let m=0;m<n;++m)o[p*i+m]=r[l*a+m];++p}}function Mae(r,e,t,n,o){let s=e.slice();s[0]=o;let a=y.getArrayFromDType(t,y.sizeFromShape(s)),i=r.length,p=i===0?0:i/e[0];return Rae(r,e,n,p,a,s),[a,s]}function LT(r,e,t,n,o,s,a,i){if(r.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");let p=e[0][0]-1;if(Aae(s,a,p),n.length===0)throw new Error("params.rank must be nonzero");let u=n[0],{outSplits:l,valueSlices:m,numValues:c}=Dae(s,a,r,u),d=_ae(l),f=Mae(t,n,o,m,c);return[d,f[0],f[1]]}var YB=2147483647;function BT(r,e,t,n,o,s,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(o.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");let i=e.length===0,p=o.length===0,u=a.length===0,l=[];i||l.push(e[0]),p||l.push(o[0]),u||l.push(a[0]);for(let g=1;g<l.length;++g)if(l[g]!==l[g-1])throw new Error("starts, limits, and deltas must have the same shape");let m=l.length===0?1:l[0],c=y.getArrayFromDType("int32",m+1);c[0]=0;for(let g=0;g<m;++g){let b=i?r[0]:r[g],x=p?n[0]:n[g],T=u?s[0]:s[g];if(T===0)throw new Error("Requires delta != 0");let C;if(T>0&&x<b||T<0&&x>b)C=0;else if(C=Math.ceil(Math.abs((x-b)/T)),C>YB)throw new Error(`Requires ((limit - start) / delta) <= ${YB}`);c[g+1]=c[g]+C}let d=c[m],f=y.getArrayFromDType(t,d),h=0;for(let g=0;g<m;++g){let b=c[g+1]-c[g],x=i?r[0]:r[g],T=u?s[0]:s[g];for(let C=0;C<b;++C)f[h++]=x,x+=T}return[c,f]}var Ra=I.RowPartitionType,Nf=class{constructor(e,t,n,o,s,a,i,p,u,l){this.shape=e;this.shapeShape=t;this.values=n;this.valuesShape=o;this.valuesDType=s;this.defaultValue=a;this.defaultValueShape=i;this.rowPartitionValues=p;this.rowPartitionValuesShapes=u;this.rowPartitionTypes=I.getRowPartitionTypesHelper(l),this.raggedRank=I.getRaggedRank(this.rowPartitionTypes)}rowPartitionTypes;raggedRank;getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Ra.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Ra.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Ra.VALUE_ROWIDS:return Nf.getMaxWidthValueRowID(t);case Ra.ROW_SPLITS:return Nf.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Ra[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(t===0||t===1)return 0;let n=0;for(let o=0;o<t-1;++o){let s=e[o+1]-e[o];s>n&&(n=s)}return n}static getMaxWidthValueRowID(e){let t=e.length;if(t===0)return 0;let n=0,o=e[0],s=0;for(let a=1;a<t;++a){let i=e[a];i!==o&&(o=i,s=Math.max(a-n,s),n=a)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return QB(e,n)}calculateOutputSize(e){let t=this.valuesShape,n=this.defaultValueShape;I.validateDefaultValueShape(n,t);let o=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=I.combineRaggedTensorToTensorShapes(this.raggedRank,o,t);a[0]<0&&(a[0]=e);for(let i=1;i<=this.raggedRank;++i)a[i]<0&&(a[i]=this.getMaxWidth(i));return a}calculateFirstParentOutputIndex(e,t,n){let o=Math.min(e,n),s=[],a=0;for(let i=0;i<o;++i,a+=t)s.push(a);for(let i=o;i<e;++i)s.push(-1);return y.assert(s.length===e,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(e,t,n,o){let s=e.length,a=[];for(let i=0;i<s-1;++i){let p=e[i+1]-e[i],u=Math.min(o,p),l=t[i];l===-1&&(u=0);for(let m=0;m<u;++m)a.push(l),l+=n;for(let m=0;m<p-u;++m)a.push(-1)}if(s>0&&a.length!==e[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,o){let s=e.length,a=[];if(s===0)return[];let i=0,p=e[0];if(p>=t.length)throw new Error(`Got currentValueRowId=${p}, which is not less than ${t.length}`);let u=t[p];a.push(u);for(let l=1;l<s;++l){let m=e[l];if(m===p)u>=0&&(++i,i<o?u+=n:u=-1);else{if(i=0,p=m,m>=t.length)throw new Error(`Got nextValueRowId=${m} which is not less than ${t.length}`);u=t[m]}a.push(u)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,o){let s=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case Ra.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,o);case Ra.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,o);default:throw new Error(`Unsupported partition type: ${Ra[a]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case Ra.FIRST_DIM_SIZE:return e[0];case Ra.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Ra.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Ra[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let t=this.getFirstDimensionSize(),n=this.calculateOutputSize(t),o=new Array(this.raggedRank+1);o[o.length-1]=1;for(let p=o.length-2;p>=0;--p)o[p]=o[p+1]*n[p+1];let s=QB(n,!1),a=y.getArrayFromDType(this.valuesDType,y.sizeFromShape(s));if(o[0]*n[0]>0){let p=this.calculateFirstParentOutputIndex(t,o[0],n[0]);for(let u=1;u<=this.raggedRank;++u)p=this.calculateOutputIndex(u-1,p,o[u],n[u]);this.setOutput(this.raggedRank,p,a,s)}return[s,a]}setOutput(e,t,n,o){if(n.length===0)return;let s=this.values,a=n,i=o.slice();i=i.slice(e+1);let p=y.sizeFromShape(i),u=t.length,l=this.defaultValue;if(l.length!==p&&l.length!==1){let f=this.defaultValueShape;z(()=>{let h=E(l,f);l=zp(h,i).dataSync()})}let m=0,c=0,d=0;for(let f=0;f<=u;++f){let h=f<u?t[f]:-1;if(h===d){++d;continue}if(c<d){let g=s.subarray(m*p),b=a.subarray(c*p),x=(d-c)*p;ZB(b,g,x)}if(f>=u){let g=n.length;h=Math.floor(g/p)}if(h>d)if(this.defaultValue.length===1)a.subarray(d*p,h*p).fill(this.defaultValue[0]),d=h;else for(;h>d;){let g=a.slice(d*p);ZB(g,l,p),++d}h<0?(m=f+1,c=d):(m=f,c=d,d=c+1)}}};function ZB(r,e,t){for(let n=0;n<t;n++)r[n]=e[n]}function QB(r,e){let t=[];for(let n of r){if(n<0){if(!e)throw new Error(`Dimension ${n} must be >= 0`);if(n<-1)throw new Error(`Dimension ${n} must be >= -1`);n=-1}t.push(n)}return t}function $T(r,e,t,n,o,s,a,i,p,u){return new Nf(r,e,t,n,o,s,a,i,p,u).compute()}function km(r,e,t,n){let o=r===e,s=r<e&&t<0,a=e<r&&t>1;if(o||s||a)return y.makeZerosTypedArray(0,n);let i=Math.abs(Math.ceil((e-r)/t)),p=y.makeZerosTypedArray(i,n);e<r&&t===1&&(t=-1),p[0]=r;for(let u=1;u<p.length;u++)p[u]=p[u-1]+t;return p}var YD=Br(r=>1/Math.sqrt(r)),Pae=$n(xs,YD),JB={kernelName:xs,backendName:"cpu",kernelFunc:Pae};function Oi(r,e,t,n,o,s,a,i,p,u){let l=[n/o,o],m=r.values,c=e.values;if(n===0)return Ce(t,e.dtype);let d=p instanceof ht?p:Ce(l,e.dtype);typeof p=="string"||typeof p=="number"?d.values.fill(p):typeof p=="boolean"&&d.values.fill(+p);for(let f=0;f<s;f++){let h=[],g=0;for(let b=0;b<a;b++){let x=m[f*a+b];h.push(x),g+=x*i[b]}if(g<0||g>=n/o)throw new Error(`Invalid indices: ${h} does not index into ${t}`);for(let b=0;b<o;b++)u?d.values[g*o+b]+=c[f*o+b]:d.values[g*o+b]=e.rank===0?c[0]:c[f*o+b]}return d}var e$=Br(r=>1/(1+Math.exp(-r))),ZD=Le(ks,r=>1/(1+Math.exp(-r))),t$={kernelName:ks,backendName:"cpu",kernelFunc:ZD};function vm(r,e,t,n,o){let s=vt.isSliceContinous(n,e,t),a=y.sizeFromShape(t),i=y.computeStrides(n);if(s){let m=vt.computeFlatOffset(e,i);return o==="string"?r.slice(m,m+a):r.subarray(m,m+a)}let p=o==="string"?I.fromUint8ToStringArray(r):r,u=Ce(n,o,p),l=Ce(t,o);for(let m=0;m<l.size;++m){let c=l.indexToLoc(m),d=c.map((f,h)=>f+e[h]);l.set(u.get(...d),...c)}return o==="string"?I.fromStringArrayToUint8(l.values):l.values}function Ma(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n;oe(o,"slice");let[i,p]=vt.parseSliceParams(o,s,a);vt.assertParamsValid(o,i,p);let u=t.data.get(o.dataId).values,l=vm(u,i,p,o.shape,o.dtype);return t.makeTensorInfo(p,o.dtype,l)}var r$={kernelName:ta,backendName:"cpu",kernelFunc:Ma};function OT(r,e,t,n,o,s,a){let i=e[0],p=s[0],u=new Array(p),l=new Array(i),m=e[1];if(p===0){if(i!==0)throw new Error(I.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));let g=y.getArrayFromDType(t,0),b=y.getArrayFromDType(o,0);return[g,[0,m],b,u,l]}let c=!0,d=0,f=new Array(p).fill(0);for(let g=0;g<i;++g){let b=r[g*m];if(b<0)throw new Error(I.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,b));if(b>=p)throw new Error(I.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,b,p));++f[b],c=c&&b>=d,d=b}let h=!0;for(let g=0;g<p;++g){let b=f[g]===0;u[g]=b,h=h&&!b,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(h&&c){let g=r,b=n;for(let x=0;x<i;++x)l[x]=x;return[g,[i,m],b,u,l]}else{let g=f[p-1],b=y.getArrayFromDType(t,g*m),x=y.getArrayFromDType(o,g),T=new Array(p).fill(0);for(let C=0;C<i;++C){let v=r[C*m],A=T[v],_=(v===0?0:f[v-1])+A;T[v]++;for(let R=0;R<m;++R)b[_*m+R]=r[C*m+R];x[_]=n[C],l[C]=_}for(let C=0;C<p;++C)if(T[C]===0){let A=C===0?0:f[C-1];b[A*m+0]=C;for(let _=1;_<m;++_)b[A*m+_]=0;x[A]=a}return[b,[g,m],x,u,l]}}function zT(r,e,t,n,o){let s=y.sizeFromShape(n),a=e[0],i=o.length,p=[],u=1,l=-1;for(let g=0;g<i;++g){let b=o[g];if(b===-1){if(l!==-1)throw new Error(I.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(l,g));l=g,p.push(1)}else{if(b<0)throw new Error(I.getSparseReshapeNegativeOutputDimErrorMessage(g,b));u*=b,p.push(b)}}if(l!==-1){if(u<=0)throw new Error(I.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(s/u);if(u*g!==s)throw new Error(I.getSparseReshapeInputOutputMultipleErrorMessage(n,p));p[l]=g}if(y.sizeFromShape(p)!==s)throw new Error(I.getSparseReshapeInputOutputMismatchErrorMessage(n,p));let c=n.length,d=[];if(c>0){d[c-1]=1;for(let g=c-2;g>=0;--g)d[g]=d[g+1]*n[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*p[g+1]}let h=y.getArrayFromDType(t,a*i);for(let g=0;g<a;++g){let b=0;for(let x=0;x<c;++x)b+=r[g*c+x]*d[x];for(let x=0;x<i;++x)h[g*i+x]=Math.trunc(b/f[x]),b%=f[x]}return[h,[a,i],p]}function Df(r,e,t,n,o,s=!1,a=0){let i=n.length,p=[e[0],r.length/e[0]],u=p[1],m=i>0?o[i-1]+1:0;if(m<0)throw new Error(I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let c=e.slice();c[0]=m;let d=c.reduce((T,C)=>T*C,1),f=y.getArrayFromDType(t,d);if(i===0)return m>0&&f.fill(a),[f,c];if(m<=0)throw new Error(I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=0,g=1,b=0,x=o[h];for(;;){let T=0;if(g<i){if(T=o[g],x===T){++g;continue}if(x>=T)throw new Error(I.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(x<0||x>=m)throw new Error(I.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x,m));x>b&&f.fill(a,b*u,x*u);for(let C=h;C<g;++C){let v=n[C];if(v<0||v>=p[0])throw new Error(I.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(C,n[C],p[0]));for(let A=0;A<u;A++)f[x*u+A]+=r[v*u+A]}if(s)for(let C=0;C<u;C++)f[x*u+C]/=g-h;if(h=g,++g,b=x+1,x=T,g>i)break}return b<m&&f.fill(a,b*u,m*u),[f,c]}var n$=Br(r=>Math.sqrt(r)),Fae=Le(Ss,r=>Math.sqrt(r)),o$={kernelName:Ss,backendName:"cpu",kernelFunc:Fae};var QD=at((r,e)=>{let t=r-e;return t*t}),Eae=ct(Ns,QD),s$={kernelName:Ns,backendName:"cpu",kernelFunc:Eae};var JD=Br((r,e)=>{let{pattern:t,replaceGlobal:n,rewrite:o}=e;return r.replace(new RegExp(t,n?"g":""),o)}),Lae=$n(xl,JD),a$={kernelName:xl,backendName:"cpu",kernelFunc:Lae};function GT(r,e,t,n){let o=Ce(r,e.dtype);for(let s=0;s<o.size;s++){let a=o.indexToLoc(s),i=new Array(a.length);for(let p=0;p<i.length;p++)i[p]=a[p]*t[p]+n[p];o.set(e.get(...i),...a)}return o}var e0=class{separator;nGramWidths;padWidth;leftPad;rightPad;preserveShort;constructor(e,t,n,o,s,a){this.separator=y.encodeString(e),this.nGramWidths=t,this.leftPad=y.encodeString(n),this.rightPad=y.encodeString(o),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,o,s,a){for(let i=0;i<s;++i){let p=this.getPadWidth(a),u=Math.max(0,p-i),l=Math.max(0,p-(s-(i+1))),m=a-(u+l),c=t+(u>0?0:i-p),d=0;d+=u*this.leftPad.length;for(let x=0;x<m;++x)d+=e[c+x].length;d+=l*this.rightPad.length;let f=u+l+m-1;d+=f*this.separator.length,n[o+i]=new Uint8Array(d);let h=n[o+i],g=0,b=x=>x.forEach(T=>h[g++]=T);for(let x=0;x<u;++x)b(this.leftPad),b(this.separator);for(let x=0;x<m-1;++x)b(e[c+x]),b(this.separator);if(m>0){b(e[c+m-1]);for(let x=0;x<l;++x)b(this.separator),b(this.rightPad)}else{for(let x=0;x<l-1;++x)b(this.rightPad),b(this.separator);b(this.rightPad)}}}compute(e,t){let n=e.length,o=t.length;if(o>0){let p=t[0];if(p!==0)throw new Error(`First split value must be 0, got ${p}`);for(let u=1;u<o;++u){let l=t[u]>=p;if(l=l&&t[u]<=n,!l)throw new Error(`Invalid split value ${t[u]}, must be in [${p}, ${n}]`);p=t[u]}if(p!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${p}`)}let s=o-1,a=y.getArrayFromDType("int32",o);if(n===0||o===0){let p=new Array(n);for(let u=0;u<=s;++u)a[u]=0;return[p,a]}a[0]=0;for(let p=1;p<=s;++p){let u=t[p]-t[p-1],l=0;this.nGramWidths.forEach(m=>{l+=this.getNumNGrams(u,m)}),this.preserveShort&&u>0&&l===0&&(l=1),a[p]=a[p-1]+l}let i=new Array(a[s]);for(let p=0;p<s;++p){let u=t[p],l=a[p];if(this.nGramWidths.forEach(m=>{let c=t[p+1]-t[p],d=this.getNumNGrams(c,m);this.createNGrams(e,u,i,l,d,m),l+=d}),this.preserveShort&&l===a[p]){let m=t[p+1]-t[p];if(m===0)continue;let c=m+2*this.padWidth,d=1;this.createNGrams(e,u,i,l,d,c)}}return[i,a]}};function Sm(r,e,t,n,o,s,a,i){return new e0(t,n,o,s,a,i).compute(r,e)}function Bae(r,e,t,n){if(!r.length)return;if(e.length===0){for(let s=0;s<r.length;++s)n.push(r.subarray(s,s+1));return}if(e.length===1){let s=e[0],a=r.indexOf(s);for(;a!==-1;){let i=r.subarray(0,a);(!t||i.length!==0)&&n.push(i),r=r.subarray(a+1),a=r.indexOf(s)}(!t||r.length!==0)&&n.push(r);return}let o=0;for(let s=0;s<r.length+1;s++)if(s===r.length||e.indexOf(r[s])!==-1){let a=r.subarray(o,s);(!t||a.length!==0)&&n.push(a),o=s+1}}function wm(r,e,t){let n=r.length,o=[],s=0,a=0,i=new Array(n);for(let c=0;c<n;++c){let d=o.length;Bae(r[c],e,t,o);let f=o.length-d;i[c]=f,s+=f,a=Math.max(a,f)}let p=y.getArrayFromDType("int32",s*2),u=new Array(s),l=[n,a],m=0;for(let c=0;c<n;++c)for(let d=0;d<i[c];++d)p[m*2]=c,p[m*2+1]=d,u[m]=o[m],++m;return[p,u,l]}function Am(r,e){let t=y.getArrayFromDType("int32",r.length);for(let n=0;n<r.length;++n)t[n]=y.fingerPrint64(r[n]).modulo(e).getLowBitsUnsigned();return t}var t0=at((r,e)=>r-e),$ae=Sf((r,e,t,n)=>({real:r-t,imag:e-n})),Tg=ct(Ds,t0,$ae),i$={kernelName:Ds,backendName:"cpu",kernelFunc:Tg};function WT(r,e){let t=new Array(r.rank);for(let o=0;o<t.length;o++)t[o]=r.shape[o]*e[o];let n=Ce(t,r.dtype);for(let o=0;o<n.values.length;++o){let s=n.indexToLoc(o),a=new Array(r.rank);for(let p=0;p<a.length;p++)a[p]=s[p]%r.shape[p];let i=r.locToIndex(a);n.values[o]=r.values[i]}return n}var Cg=(r,e)=>{let t=e.value-r.value;return t===0?r.index-e.index:t};function u$(r,e,t=0,n=r.length-1){for(;n>t;){if(n-t>600){let i=n-t+1,p=e-t+1,u=Math.log(i),l=.5*Math.exp(2*u/3),m=.5*Math.sqrt(u*l*(i-l)/i)*Math.sign(p-i/2),c=Math.max(t,Math.floor(e-p*l/i+m)),d=Math.min(n,Math.floor(e+(i-p)*l/i+m));u$(r,e,c,d)}let o=r[e],s=t,a=n;for(y.swap(r,t,e),Cg(r[n],o)>0&&y.swap(r,t,n);s<a;){for(y.swap(r,s,a),s++,a--;Cg(r[s],o)<0;)s=s+1;for(;Cg(r[a],o)>0;)a=a-1}Cg(r[t],o)===0?y.swap(r,t,a):(a=a+1,y.swap(r,a,n)),a<=e&&(t=a+1),e<=a&&(n=a-1)}}function UT(r,e,t,n,o){let s=e[e.length-1],[a,i]=[r.length/s,s],p=y.getTypedArrayFromDType(t,a*n),u=y.getTypedArrayFromDType("int32",a*n);for(let m=0;m<a;m++){let c=m*i,d=r.subarray(c,c+i),f=new Array(d.length);d.forEach((x,T)=>f[T]={value:x,index:T}),n<f.length&&(u$(f,n),f=f.slice(0,n)),o&&f.sort(Cg);let h=m*n,g=p.subarray(h,h+n),b=u.subarray(h,h+n);for(let x=0;x<n;x++)g[x]=f[x].value,b[x]=f[x].index}let l=e.slice();return l[l.length-1]=n,[Ce(l,t,p),Ce(l,"int32",u)]}function Nm(r,e,t,n){let o=y.parseAxisParam(e,t)[0],s=[1,t[0],1];for(let f=0;f<o;f++)s[0]*=t[f];s[1]=t[o];for(let f=o+1;f<t.length;f++)s[2]*=t[f];let a=new Map,i=new Int32Array(t[o]),p=new ht(s,n,r),u=[],l=s[0]===1&&s[2]===1;for(let f=0;f<t[o];f++){let h;if(l)h=r[f].toString();else{let b=[];for(let x=0;x<s[0];x++)for(let T=0;T<s[2];T++)b.push(p.get(x,f,T));h=b.join(",")}let g=a.get(h);if(g!=null)i[f]=g;else{let b=a.size;a.set(h,b),i[f]=b,u.push(f)}}let m=s.slice();m[1]=a.size;let c=new ht(m,n);u.forEach((f,h)=>{for(let g=0;g<s[0];g++)for(let b=0;b<s[2];b++)c.set(p.get(g,f,b),g,h,b)});let d=t.slice();return d[o]=m[1],{outputValues:c.values,outputShape:d,indices:i}}var Oae="0.0.0";Lp("cpu",()=>new kf,1);var r0=Le(Oo,r=>r>=0?r:Math.exp(r)-1),p$={kernelName:Oo,backendName:"cpu",kernelFunc:r0};function n0(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n;oe([o],"leakyRelu");let a=y.sizeFromShape(o.shape),i=t.data.get(o.dataId).values,p=y.getTypedArrayFromDType("float32",a);for(let u=0;u<i.length;u++)p[u]=i[u]<0?s*i[u]:i[u];return t.makeTensorInfo(o.shape,"float32",p)}var l$={kernelName:Xo,backendName:"cpu",kernelFunc:n0};var zae=at((r,e)=>r<0?e*r:r);function o0(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e;oe([n,o],"prelu");let s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,[i,p]=zae(n.shape,o.shape,s,a,"float32");return t.makeTensorInfo(p,"float32",i)}var m$={kernelName:ls,backendName:"cpu",kernelFunc:o0};var s0=Le(ds,r=>Math.max(0,r)),c$={kernelName:ds,backendName:"cpu",kernelFunc:s0};var a0=Le(gs,r=>Math.min(Math.max(0,r),6)),d$={kernelName:gs,backendName:"cpu",kernelFunc:a0};function Dm(r,e,t,n,o){if(t==="linear")return rn({inputs:{x:e},backend:r});if(t==="relu")return s0({inputs:{x:e},backend:r});if(t==="elu")return r0({inputs:{x:e},backend:r});if(t==="relu6")return a0({inputs:{x:e},backend:r});if(t==="prelu")return o0({inputs:{x:e,alpha:n},backend:r});if(t==="leakyrelu")return n0({inputs:{x:e},backend:r,attrs:{alpha:o}});if(t==="sigmoid")return ZD({inputs:{x:e},backend:r});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}function ot(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,a=y.sizeFromShape(o.shape),i=y.inferFromImplicitShape(s,a),p=y.sizeFromShape(i);y.assert(a===p,()=>`The new shape (${i}) has ${p} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(o.dataId);let u=t.data.get(o.dataId);if(u.complexTensorInfos!=null){let l=u.complexTensorInfos.real,m=u.complexTensorInfos.imag;l.shape=i,m.shape=i}return{dataId:o.dataId,shape:i,dtype:o.dtype}}var f$={kernelName:Js,backendName:"cpu",kernelFunc:ot};function i0(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;oe([o,s],"matMul");let p=o.shape.length,u=s.shape.length,l=a?o.shape[p-2]:o.shape[p-1],m=i?s.shape[u-1]:s.shape[u-2],c=a?o.shape[p-1]:o.shape[p-2],d=i?s.shape[u-2]:s.shape[u-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=y.sizeFromShape(f),b=y.sizeFromShape(h),T=Rr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);y.assert(l===m,()=>`Error in matMul: inner shapes (${l}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let C=a?[g,l,c]:[g,c,l],v=i?[b,d,m]:[b,m,d],A=ot({inputs:{x:o},backend:t,attrs:{shape:C}}),_=ot({inputs:{x:s},backend:t,attrs:{shape:v}}),R=a?A.shape[1]:A.shape[2],M=a?A.shape[2]:A.shape[1],F=i?_.shape[1]:_.shape[2],O=Math.max(g,b),G=t.data.get(A.dataId).values,W=t.data.get(_.dataId).values,U=y.computeStrides(A.shape),K=y.computeStrides(_.shape),[H,X,j]=a?[U[0],1,U[1]]:[U[0],U[1],1],[re,ae,ie]=i?[1,K[1],K[0]]:[K[1],1,K[0]],me=M*F,ue=Ce([O,M,F],A.dtype),le=ue.values,he=t.blockSize;for(let Te=0;Te<O;Te++){let Ae=Te%g,Oe=Te%b;for(let Be=0;Be<M;Be+=he){let Qe=Math.min(Be+he,M);for(let te=0;te<F;te+=he){let yt=Math.min(te+he,F);for(let wt=0;wt<R;wt+=he){let it=Math.min(wt+he,R);for(let At=Be;At<Qe;At++)for(let Ct=te;Ct<yt;Ct++){let Lt=0;for(let Bt=wt;Bt<it;Bt++){let Wn=G[Ae*H+At*X+Bt*j],fr=W[Bt*re+Ct*ae+Oe*ie];Lt+=Wn*fr}le[Te*me+(At*F+Ct)]+=Lt}}}}}return t.disposeIntermediateTensorInfo(A),t.disposeIntermediateTensorInfo(_),t.makeTensorInfo(T,ue.dtype,ue.values)}var h$={kernelName:No,backendName:"cpu",kernelFunc:i0};function Gae(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:p,transposeB:u,activation:l,leakyreluAlpha:m}=n,c,d,f,h=[];c=i0({inputs:{a:o,b:s},attrs:{transposeA:p,transposeB:u},backend:t}),a&&(d=bu({inputs:{a:c,b:a},backend:t}),h.push(c),c=d),l&&(f=Dm(t,c,l,i,m),h.push(c),c=f);for(let b of h)t.disposeIntermediateTensorInfo(b);return c}var g$={kernelName:aa,backendName:"cpu",kernelFunc:Gae};var Wae=Le(xo,r=>Math.acos(r)),b$={kernelName:xo,backendName:"cpu",kernelFunc:Wae};var Uae=Le(To,r=>Math.acosh(r)),y$={kernelName:To,backendName:"cpu",kernelFunc:Uae};function Kae(r){let{inputs:e,backend:t}=r,n=e;oe(e,"addN");let o=n.map(i=>t.data.get(i.dataId).values),s=Ce(n[0].shape,n[0].dtype),a=s.values;for(let i=0;i<n.length;i++){let p=o[i];for(let u=0;u<a.length;u++)a[u]+=p[u]}return t.makeTensorInfo(s.shape,s.dtype,s.values)}var x$={kernelName:Co,backendName:"cpu",kernelFunc:Kae};function Vae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;oe(o,"all");let i=y.parseAxisParam(s,o.shape),p=i,u=I.getAxesPermutation(p,o.shape.length),l=o;u!=null&&(l=Xt({inputs:{x:o},backend:t,attrs:{perm:u}}),p=I.getInnerMostAxes(p.length,o.shape.length)),I.assertAxesAreInnerMostDims("all",p,l.shape.length);let[m,c]=I.computeOutAndReduceShapes(l.shape,p),d=y.sizeFromShape(c),f=y.makeZerosTypedArray(y.sizeFromShape(m),l.dtype),h=t.data.get(l.dataId).values;for(let b=0;b<f.length;++b){let x=b*d,T=h[x];for(let C=0;C<d;++C){let v=h[x+C];T=T&&v}f[b]=T}u!=null&&t.disposeIntermediateTensorInfo(l);let g=t.makeTensorInfo(m,l.dtype,f);if(a){let b=I.expandShapeToKeepDim(m,i),x=ot({inputs:{x:g},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(g),x}return g}var T$={kernelName:za,backendName:"cpu",kernelFunc:Vae};function Hae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;oe(o,"any");let i=y.parseAxisParam(s,o.shape),p=i,u=I.getAxesPermutation(p,o.shape.length),l=o;u!=null&&(l=Xt({inputs:{x:o},backend:t,attrs:{perm:u}}),p=I.getInnerMostAxes(p.length,o.shape.length)),I.assertAxesAreInnerMostDims("any",p,l.shape.length);let[m,c]=I.computeOutAndReduceShapes(l.shape,p),d=y.sizeFromShape(c),f=y.makeZerosTypedArray(y.sizeFromShape(m),l.dtype),h=t.data.get(l.dataId).values;for(let b=0;b<f.length;++b){let x=b*d,T=h[x];for(let C=0;C<d;++C){let v=h[x+C];T=T||v}f[b]=T}u!=null&&t.disposeIntermediateTensorInfo(l);let g=t.makeTensorInfo(m,l.dtype,f);if(a){let b=I.expandShapeToKeepDim(m,i),x=ot({inputs:{x:g},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(g),x}return g}var C$={kernelName:Ga,backendName:"cpu",kernelFunc:Hae};function qae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;oe(o,"argMax");let a=y.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=Xt({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(p),a=I.getInnerMostAxes(a.length,p.shape.length)),a=[a[0]],I.assertAxesAreInnerMostDims("argMax",a,p.shape.length);let[l,m]=I.computeOutAndReduceShapes(p.shape,a),c=y.sizeFromShape(l),d=y.makeZerosTypedArray(c,"int32"),f=y.sizeFromShape(m),h=t.data.get(p.dataId).values;for(let g=0;g<d.length;++g){let b=g*f,x=h[b],T=0;for(let C=0;C<f;++C){let v=h[b+C];v>x&&(x=v,T=C)}d[g]=T}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(l,"int32",d)}var I$={kernelName:Ws,backendName:"cpu",kernelFunc:qae};function jae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;oe(o,"argMin");let a=y.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=Xt({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(p),a=I.getInnerMostAxes(a.length,p.shape.length)),a=[a[0]],I.assertAxesAreInnerMostDims("argMin",a,p.shape.length);let[l,m]=I.computeOutAndReduceShapes(p.shape,a),c=y.sizeFromShape(l),d=y.makeZerosTypedArray(c,"int32"),f=y.sizeFromShape(m),h=t.data.get(p.dataId).values;for(let g=0;g<d.length;++g){let b=g*f,x=h[b],T=0;for(let C=0;C<f;++C){let v=h[b+C];v<x&&(x=v,T=C)}d[g]=T}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(l,"int32",d)}var k$={kernelName:Us,backendName:"cpu",kernelFunc:jae};var Xae=Le(Io,r=>Math.asin(r)),v$={kernelName:Io,backendName:"cpu",kernelFunc:Xae};var Yae=Le(ko,r=>Math.asinh(r)),S$={kernelName:ko,backendName:"cpu",kernelFunc:Yae};var Zae=Le(vo,r=>Math.atan(r)),w$={kernelName:vo,backendName:"cpu",kernelFunc:Zae};var Qae=at((r,e)=>Math.atan2(r,e)),Jae=ct(wo,Qae),A$={kernelName:wo,backendName:"cpu",kernelFunc:Jae};var eie=Le(So,r=>Math.atanh(r)),N$={kernelName:So,backendName:"cpu",kernelFunc:eie};function Rf(r,e,t,n,o,s){let a=o.strideHeight,i=o.strideWidth,p=o.dilationHeight,u=o.dilationWidth,l=o.effectiveFilterHeight,m=o.effectiveFilterWidth,c=o.padInfo.top,d=o.padInfo.left,f=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=Ce(o.outShape,t),g=h.values,b=o.outShape[1]*o.outShape[2]*o.outShape[3],x=o.outShape[2]*o.outShape[3],T=o.outShape[3];for(let C=0;C<o.batchSize;++C){let v=C*b,A=C*n[0];for(let _=0;_<o.inChannels;++_)for(let R=0;R<o.outHeight;++R){let M=R*a-c,F=Math.max(0,M),O=Math.min(o.inHeight,l+M),G=v+R*x;for(let W=0;W<o.outWidth;++W){let U=W*i-d,K=Math.max(0,U),H=Math.min(o.inWidth,m+U),X=f,j=0,re=0;for(let ie=F;ie<O;ie+=p){let me=A+ie*n[1];for(let ue=K;ue<H;ue+=u){let le=me+ue*n[2],he=r[le+_];s==="max"&&he>X?X=he:s==="avg"&&(j+=he,re++)}if(isNaN(X))break}let ae=G+W*T+_;g[ae]=s==="avg"?j/re:X}}}return h}function KT(r,e,t,n,o=!1,s=!1){let a=Ce(n.outShape,"int32"),i=n.strideHeight,p=n.strideWidth,u=n.dilationHeight,l=n.dilationWidth,m=n.effectiveFilterHeight,c=n.effectiveFilterWidth,d=n.padInfo.top,f=n.padInfo.left,h=Ce(e,t,r);for(let g=0;g<n.batchSize;++g)for(let b=0;b<n.inChannels;++b)for(let x=0;x<n.outHeight;++x){let T=x*i-d,C=T;for(;C<0;)C+=u;let v=Math.min(n.inHeight,m+T);for(let A=0;A<n.outWidth;++A){let _=A*p-f,R=_;for(;R<0;)R+=l;let M=Math.min(n.inWidth,c+_),F=Number.NEGATIVE_INFINITY,O=-1;for(let G=C;G<v;G+=u){let W=G-T;for(let U=R;U<M;U+=l){let K=U-_,H=h.get(g,G,U,b);H>F&&(F=H,o?O=s?((g*n.inHeight+G)*n.inWidth+U)*n.inChannels+b:(G*n.inWidth+U)*n.inChannels+b:O=W*c+K)}}a.set(O,g,x,A,b)}}return a}function VT(r,e,t,n,o,s){let a=o.strideDepth,i=o.strideHeight,p=o.strideWidth,u=o.dilationDepth,l=o.dilationHeight,m=o.dilationWidth,c=o.effectiveFilterDepth,d=o.effectiveFilterHeight,f=o.effectiveFilterWidth,h=o.padInfo.front,g=o.padInfo.top,b=o.padInfo.left,x=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,T=Ce(o.outShape,t),C=T.values,v=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],A=o.outShape[2]*o.outShape[3]*o.outShape[4],_=o.outShape[3]*o.outShape[4],R=o.outShape[4];for(let M=0;M<o.batchSize;++M){let F=M*v,O=M*n[0];for(let G=0;G<o.inChannels;++G)for(let W=0;W<o.outDepth;++W){let U=W*a-h,K=U;for(;K<0;)K+=u;let H=Math.min(o.inDepth,c+U),X=F+W*A;for(let j=0;j<o.outHeight;++j){let re=j*i-g,ae=re;for(;ae<0;)ae+=l;let ie=Math.min(o.inHeight,d+re),me=X+j*_;for(let ue=0;ue<o.outWidth;++ue){let le=ue*p-b,he=le;for(;he<0;)he+=m;let Te=Math.min(o.inWidth,f+le),Ae=me+ue*R,Oe=x,Be=0,Qe=0;for(let yt=K;yt<H;yt+=u){let wt=O+yt*n[1];for(let it=ae;it<ie;it+=l){let At=wt+it*n[2];for(let Ct=he;Ct<Te;Ct+=m){let Lt=At+Ct*n[3],Bt=r[Lt+G];if(s==="max"&&Bt>Oe?Oe=Bt:s==="avg"&&(Be+=Bt,Qe++),isNaN(Oe))break}if(isNaN(Oe))break}if(isNaN(Oe))break}let te=Ae+G;C[te]=s==="avg"?Be/Math.max(Qe,1):Oe}}}}return T}function D$(r,e){let t=Ce(e.outShape,"int32"),n=e.strideDepth,o=e.strideHeight,s=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,p=e.dilationWidth,u=e.effectiveFilterDepth,l=e.effectiveFilterHeight,m=e.effectiveFilterWidth,c=e.padInfo.front,d=e.padInfo.top,f=e.padInfo.left;for(let h=0;h<e.batchSize;++h)for(let g=0;g<e.inChannels;++g)for(let b=0;b<e.outDepth;++b){let x=b*n-c,T=x;for(;T<0;)T+=a;let C=Math.min(e.inDepth,u+x);for(let v=0;v<e.outHeight;++v){let A=v*o-d,_=A;for(;_<0;)_+=i;let R=Math.min(e.inHeight,l+A);for(let M=0;M<e.outWidth;++M){let F=M*s-f,O=F;for(;O<0;)O+=p;let G=Math.min(e.inWidth,m+F),W=Number.NEGATIVE_INFINITY,U=-1;for(let K=T;K<C;K+=a){let H=K-x;for(let X=_;X<R;X+=i){let j=X-A;for(let re=O;re<G;re+=p){let ae=re-F,ie=r.get(h,K,X,re,g);ie>=W&&(W=ie,U=H*l*m+j*l+ae)}}}t.set(U,h,b,v,M,g)}}}return t}function tie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;oe(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1;y.assert(I.eitherStridesOrDilationsAreOne(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let l=I.computePool2DInfo(o.shape,s,a,u,i,p),m;if(l.filterWidth===1&&l.filterHeight===1&&y.arraysEqual(l.inShape,l.outShape))m=rn({inputs:{x:o},backend:t});else{let c=t.data.get(o.dataId).values,d=y.computeStrides(o.shape),f=Rf(c,o.shape,o.dtype,d,l,"avg");m=t.makeTensorInfo(l.outShape,o.dtype,f.values)}return m}var _$={kernelName:Ao,backendName:"cpu",kernelFunc:tie};function rie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:p,dataFormat:u}=n;oe(o,"avgPool3d");let l=I.computePool3DInfo(o.shape,s,a,1,i,p,u),m=t.data.get(o.dataId).values,c=VT(m,o.shape,o.dtype,y.computeStrides(o.shape),l,"avg");return t.makeTensorInfo(c.shape,"float32",c.values)}var R$={kernelName:Ks,backendName:"cpu",kernelFunc:rie};function nie(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:p,dimRoundingMode:u}=n;oe([o,s],"avgPool3DGrad");let l=I.computePool3DInfo(s.shape,a,i,1,p,u),m=l.strideDepth,c=l.strideHeight,d=l.strideWidth,f=l.filterDepth,h=l.filterHeight,g=l.filterWidth,b=l.dilationDepth,x=l.dilationHeight,T=l.dilationWidth,C=l.effectiveFilterDepth,v=l.effectiveFilterHeight,A=l.effectiveFilterWidth,_=C-1-l.padInfo.front,R=A-1-l.padInfo.left,M=v-1-l.padInfo.top,F=Ce(s.shape,"float32"),O=1/(f*h*g),G=t.bufferSync(o);for(let W=0;W<l.batchSize;++W)for(let U=0;U<l.inChannels;++U)for(let K=0;K<l.inDepth;++K)for(let H=0;H<l.inHeight;++H)for(let X=0;X<l.inWidth;++X){let j=K-_,re=H-M,ae=X-R,ie=0;for(let me=0;me<C;me+=b){let ue=(j+me)/m;if(!(ue<0||ue>=l.outDepth||Math.floor(ue)!==ue))for(let le=0;le<v;le+=x){let he=(re+le)/c;if(!(he<0||he>=l.outHeight||Math.floor(he)!==he))for(let Te=0;Te<A;Te+=T){let Ae=(ae+Te)/d;if(Ae<0||Ae>=l.outWidth||Math.floor(Ae)!==Ae)continue;let Oe=G.get(W,ue,he,Ae,U);ie+=Oe}}}F.set(ie*O,W,K,H,X,U)}return t.makeTensorInfo(F.shape,F.dtype,F.values)}var M$={kernelName:Xi,backendName:"cpu",kernelFunc:nie};function oie(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s;oe([o,s],"avgPoolGrad");let{filterSize:i,strides:p,pad:u}=n,l=I.computePool2DInfo(a.shape,i,p,1,u),m=l.strideHeight,c=l.strideWidth,d=l.filterHeight,f=l.filterWidth,h=l.dilationHeight,g=l.dilationWidth,b=l.effectiveFilterHeight,x=l.effectiveFilterWidth,T=x-1-l.padInfo.left,C=b-1-l.padInfo.top,v=Ce(a.shape,"float32"),A=1/(d*f),_=t.data.get(o.dataId).values,R=Ce(o.shape,"float32",_);for(let M=0;M<l.batchSize;++M)for(let F=0;F<l.inChannels;++F)for(let O=0;O<l.inHeight;++O)for(let G=0;G<l.inWidth;++G){let W=O-C,U=G-T,K=0;for(let H=0;H<b;H+=h){let X=(W+H)/m;if(!(X<0||X>=l.outHeight||Math.floor(X)!==X))for(let j=0;j<x;j+=g){let re=(U+j)/c;if(re<0||re>=l.outWidth||Math.floor(re)!==re)continue;let ae=R.get(M,X,re,F);K+=ae}}v.set(K*A,M,O,G,F)}return t.makeTensorInfo(v.shape,v.dtype,v.values)}var P$={kernelName:cp,backendName:"cpu",kernelFunc:oie};function sie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,scale:s,offset:a,mean:i,variance:p}=e;y.assert(i.shape.length===p.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(s==null||i.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),oe([o,i,p,s,a],"batchNorm");let{varianceEpsilon:u}=n;u==null&&(u=.001);let l=t.data.get(o.dataId).values,m=t.data.get(i.dataId).values,c=t.data.get(p.dataId).values,d=s?t.data.get(s.dataId).values:new Float32Array([1]),f=a?t.data.get(a.dataId).values:new Float32Array([0]),h=new Float32Array(l.length),g=f.length,b=d.length,x=c.length,T=m.length,C=0,v=0,A=0,_=0;for(let R=0;R<l.length;++R)h[R]=f[C++]+(l[R]-m[v++])*d[A++]/Math.sqrt(c[_++]+u),C>=g&&(C=0),v>=T&&(v=0),A>=b&&(A=0),_>=x&&(_=0);return t.makeTensorInfo(o.shape,o.dtype,h)}var F$={kernelName:Ko,backendName:"cpu",kernelFunc:sie};function aie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;oe([o],"batchToSpaceND");let i=s.reduce((b,x)=>b*x),p=I.getReshaped(o.shape,s,i),u=I.getPermuted(p.length,s.length),l=I.getReshapedPermuted(o.shape,s,i),m=I.getSliceBeginCoords(a,s.length),c=I.getSliceSize(l,a,s.length),d=ot({inputs:{x:o},backend:t,attrs:{shape:p}}),f=Xt({inputs:{x:d},backend:t,attrs:{perm:u}}),h=ot({inputs:{x:f},backend:t,attrs:{shape:l}}),g=Ma({inputs:{x:h},backend:t,attrs:{begin:m,size:c}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),g}var E$={kernelName:Vs,backendName:"cpu",kernelFunc:aie};function iie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,u=wf(i,p,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,u)}var L$={kernelName:Wa,backendName:"cpu",kernelFunc:iie};function uie(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,i=I.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var B$={kernelName:Yi,backendName:"cpu",kernelFunc:uie};var pie=Le(qn,(r,e)=>{let t=e;return r>t.clipValueMax?t.clipValueMax:r<t.clipValueMin?t.clipValueMin:r}),$$={kernelName:qn,backendName:"cpu",kernelFunc:pie};var lie=r=>{let{x:e}=r.inputs,t=r.backend,n=new Float32Array(y.sizeFromShape(e.shape)),o=t.data.get(e.dataId),s=o.complexTensorInfos.real,a=o.complexTensorInfos.imag,i=t.data.get(s.dataId).values,p=t.data.get(a.dataId).values;for(let u=0;u<i.length;u++){let l=i[u],m=p[u];n[u]=Math.hypot(l,m)}return t.makeOutput(n,e.shape,"float32")},O$={kernelName:fp,backendName:"cpu",kernelFunc:lie};function yu(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.imag,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var z$={kernelName:Cp,backendName:"cpu",kernelFunc:yu};function nl(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,e[0].shape)[0],a=e.map(h=>h.shape);I.assertParamsConsistent(a,s);let i=I.computeOutShape(e.map(h=>h.shape),s);if(y.sizeFromShape(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);let p=e.filter(h=>y.sizeFromShape(h.shape)>0);if(p.length===1)return rn({inputs:{x:p[0]},backend:t});if(p[0].dtype==="complex64"){let h=p.map(C=>Da({inputs:{input:C},backend:t})),g=p.map(C=>yu({inputs:{input:C},backend:t})),b=nl({inputs:h,backend:t,attrs:{axis:s}}),x=nl({inputs:g,backend:t,attrs:{axis:s}}),T=Nr({inputs:{real:b,imag:x},backend:t});return h.forEach(C=>t.disposeIntermediateTensorInfo(C)),g.forEach(C=>t.disposeIntermediateTensorInfo(C)),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(x),T}let u=p.map(h=>{let b=[-1,y.sizeFromShape(h.shape.slice(s))];return ot({inputs:{x:h},backend:t,attrs:{shape:b}})}),l=u.map(h=>({vals:t.data.get(h.dataId).values,shape:h.shape}));i=I.computeOutShape(u.map(h=>h.shape),1);let m=u[0].shape[0]===1,c=Cm(l,i,e[0].dtype,m),d=I.computeOutShape(p.map(h=>h.shape),s),f=t.makeTensorInfo(d,e[0].dtype,c);return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),f}var G$={kernelName:Hs,backendName:"cpu",kernelFunc:nl};function u0(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:p,dilations:u,dimRoundingMode:l}=n;oe([o,s],"conv2d");let m=I.convertConv2DDataFormat(p),c=I.computeConv2DInfo(o.shape,s.shape,a,u,i,l,!1,m),d=c.filterHeight,f=c.filterWidth,h=c.dilationHeight,g=c.dilationWidth,b=c.padInfo.left,x=c.padInfo.top,T=c.dataFormat==="channelsLast",C=new ht(c.outShape,o.dtype),v=y.computeStrides(o.shape),A=y.computeStrides(s.shape),_=v[0],R=T?v[1]:v[2],M=T?v[2]:1,F=T?1:v[1],O=C.strides[0],G=T?C.strides[1]:C.strides[2],W=T?C.strides[2]:1,U=T?1:C.strides[1],K=t.data.get(o.dataId).values,H=t.data.get(s.dataId).values,X=C.values;for(let j=0;j<c.batchSize;++j){let re=j*_,ae=j*O;for(let ie=0;ie<c.outHeight;++ie){let me=ae+ie*G,ue=ie*c.strideHeight-x;for(let le=0;le<d;++le){let he=ue+le*h;if(he<0||he>=c.inHeight)continue;let Te=le*A[0],Ae=re+he*R;for(let Oe=0;Oe<c.outWidth;++Oe){let Be=me+Oe*W,Qe=Oe*c.strideWidth-b;for(let te=0;te<f;++te){let yt=Qe+te*g;if(yt<0||yt>=c.inWidth)continue;let wt=Te+te*A[1],it=Ae+yt*M,At=wt;for(let Ct=0;Ct<c.inChannels;++Ct){let Lt=K[it+Ct*F];for(let Bt=0;Bt<c.outChannels;++Bt)X[Be+Bt*U]+=Lt*H[At+Bt];At+=c.outChannels}}}}}}return t.makeTensorInfo(C.shape,C.dtype,X)}var W$={kernelName:_o,backendName:"cpu",kernelFunc:u0};function mie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,dataFormat:p,dimRoundingMode:u,filterShape:l}=n;oe([o,s],"conv2dBackpropFilter");let m=I.convertConv2DDataFormat(p),c=I.computeConv2DInfo(o.shape,l,a,1,i,u,!1,m),{strideHeight:d,strideWidth:f,filterHeight:h,filterWidth:g}=c,b=c.dataFormat==="channelsLast",x=new ht(c.filterShape,"float32"),T=c.padInfo.left,C=c.padInfo.top,v=t.data.get(o.dataId).values,A=t.data.get(s.dataId).values,_=new ht(o.shape,o.dtype,v),R=new ht(s.shape,s.dtype,A);for(let M=0;M<h;++M){let F=Math.max(0,Math.ceil((C-M)/d)),O=Math.min(c.outHeight,(c.inHeight+C-M)/d);for(let G=0;G<g;++G){let W=Math.max(0,Math.ceil((T-G)/f)),U=Math.min(c.outWidth,(c.inWidth+T-G)/f);for(let K=0;K<c.inChannels;++K)for(let H=0;H<c.outChannels;++H){let X=0;for(let j=0;j<c.batchSize;++j)for(let re=F;re<O;++re){let ae=M+re*d-C;for(let ie=W;ie<U;++ie){let me=G+ie*f-T;b?X+=_.get(j,ae,me,K)*R.get(j,re,ie,H):X+=_.get(j,K,ae,me)*R.get(j,H,re,ie)}}x.set(X,M,G,K,H)}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}var U$={kernelName:hp,backendName:"cpu",kernelFunc:mie};function cie(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:p,dataFormat:u,dimRoundingMode:l}=n;oe([o,s],"conv2dBackpropInput");let m=y.computeStrides(s.shape),c=y.computeStrides(o.shape),d=I.convertConv2DDataFormat(u),f=I.computeConv2DInfo(a,s.shape,i,1,p,l,!1,d),h=new ht(f.inShape,"float32"),g=h.values,b=t.data.get(o.dataId).values,x=t.data.get(s.dataId).values,[T,C,v]=m,{batchSize:A,filterHeight:_,filterWidth:R,inChannels:M,inHeight:F,inWidth:O,outChannels:G,outHeight:W,outWidth:U,strideHeight:K,strideWidth:H}=f;d=f.dataFormat;let X=_-1-f.padInfo.top,j=R-1-f.padInfo.left,re=d==="channelsLast",ae=h.strides[0],ie=re?h.strides[1]:h.strides[2],me=re?h.strides[2]:1,ue=re?1:h.strides[1],le=c[0],he=re?c[1]:c[2],Te=re?c[2]:1,Ae=re?1:c[1];for(let Oe=0;Oe<A;++Oe)for(let Be=0;Be<M;++Be)for(let Qe=0;Qe<F;++Qe){let te=Qe-X,yt=Math.max(0,Math.ceil(te/K)),wt=Math.min(W,(_+te)/K);for(let it=0;it<O;++it){let At=it-j,Ct=Math.max(0,Math.ceil(At/H)),Lt=Math.min(U,(R+At)/H),Bt=0;for(let fr=yt;fr<wt;++fr){let mo=fr*K-te;for(let Kr=Ct;Kr<Lt;++Kr){let nr=Kr*H-At,Vr=le*Oe+he*fr+Te*Kr,Hr=T*(_-1-mo)+C*(R-1-nr)+v*Be;for(let co=0;co<G;++co){let fo=b[Vr+Ae*co],on=x[Hr+co];Bt+=fo*on}}}let Wn=ae*Oe+ie*Qe+me*it+ue*Be;g[Wn]=Bt}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}var K$={kernelName:Ro,backendName:"cpu",kernelFunc:cie};function die(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:p}=n;oe([o,s],"conv3d");let u=I.computeConv3DInfo(o.shape,s.shape,a,p,i),{filterDepth:l,filterHeight:m,filterWidth:c,dilationDepth:d,dilationHeight:f,dilationWidth:h,padInfo:g}=u,b=g.front,x=g.left,T=g.top,C=new ht(u.outShape,o.dtype),v=t.data.get(o.dataId).values,A=t.data.get(s.dataId).values,_=C.values,R=y.computeStrides(o.shape),M=y.computeStrides(s.shape);for(let F=0;F<u.batchSize;++F){let O=F*R[0],G=F*C.strides[0];for(let W=0;W<u.outDepth;++W){let U=G+W*C.strides[1],K=W*u.strideDepth-b;for(let H=0;H<l;++H){let X=K+H*d;if(X<0||X>=u.inDepth)continue;let j=H*M[0],re=O+X*R[1];for(let ae=0;ae<u.outHeight;++ae){let ie=U+ae*C.strides[2],me=ae*u.strideHeight-T;for(let ue=0;ue<m;++ue){let le=me+ue*f;if(le<0||le>=u.inHeight)continue;let he=j+ue*M[1],Te=re+le*R[2];for(let Ae=0;Ae<u.outWidth;++Ae){let Oe=ie+Ae*u.outChannels,Be=Ae*u.strideWidth-x;for(let Qe=0;Qe<c;++Qe){let te=Be+Qe*h;if(te<0||te>=u.inWidth)continue;let yt=he+Qe*M[2],wt=Te+te*u.inChannels,it=yt;for(let At=0;At<u.inChannels;++At){let Ct=v[wt+At];for(let Lt=0;Lt<u.outChannels;++Lt)_[Oe+Lt]+=Ct*A[it+Lt];it+=u.outChannels}}}}}}}}return t.makeTensorInfo(C.shape,C.dtype,C.values)}var V$={kernelName:Mo,backendName:"cpu",kernelFunc:die};function fie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:p}=n;oe([o,s],"conv3dBackpropFilterV2");let u=y.computeStrides(o.shape),l=y.computeStrides(s.shape),m=I.computeConv3DInfo(o.shape,p,a,1,i),c=m.strideDepth,d=m.strideHeight,f=m.strideWidth,h=m.filterDepth,g=m.filterHeight,b=m.filterWidth,x=new ht(m.filterShape,"float32"),T=x.values,[C,v,A,_]=x.strides,R=t.data.get(s.dataId).values,[M,F,O,G]=l,W=t.data.get(o.dataId).values,[U,K,H,X]=u,j=m.padInfo.front,re=m.padInfo.left,ae=m.padInfo.top;for(let ie=0;ie<h;++ie){let me=Math.max(0,Math.ceil((j-ie)/c)),ue=Math.min(m.outDepth,(m.inDepth+j-ie)/c),le=ie*C;for(let he=0;he<g;++he){let Te=Math.max(0,Math.ceil((ae-he)/d)),Ae=Math.min(m.outHeight,(m.inHeight+ae-he)/d),Oe=he*v+le;for(let Be=0;Be<b;++Be){let Qe=Math.max(0,Math.ceil((re-Be)/f)),te=Math.min(m.outWidth,(m.inWidth+re-Be)/f),yt=Be*A+Oe;for(let wt=0;wt<m.inChannels;++wt){let it=wt*_+yt;for(let At=0;At<m.outChannels;++At){let Ct=0;for(let Lt=0;Lt<m.batchSize;++Lt){let Bt=Lt*U,Wn=Lt*M;for(let fr=me;fr<ue;++fr){let Kr=(ie+fr*c-j)*K+Bt,nr=fr*F+Wn;for(let Vr=Te;Vr<Ae;++Vr){let co=(he+Vr*d-ae)*H+Kr,fo=Vr*O+nr;for(let on=Qe;on<te;++on){let Ba=(Be+on*f-re)*X+co,Hi=on*G+fo;Ct+=W[Ba+wt]*R[Hi+At]}}}}T[it+At]=Ct}}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}var H$={kernelName:Ua,backendName:"cpu",kernelFunc:fie};function hie(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:a,strides:i,inputShape:p}=n;oe([o],"conv3dBackpropInputV2");let u=y.computeStrides(o.shape),l=y.computeStrides(s.shape),m=I.computeConv3DInfo(p,s.shape,i,1,a),c=new ht(m.inShape,"float32"),d=c.values,[f,h,g,b]=c.strides,x=t.data.get(o.dataId).values,[T,C,v,A]=u,_=t.data.get(s.dataId).values,[R,M,F,O]=l,{batchSize:G,filterDepth:W,filterHeight:U,filterWidth:K,inChannels:H,inDepth:X,inHeight:j,inWidth:re,outChannels:ae,outDepth:ie,outHeight:me,outWidth:ue,strideDepth:le,strideHeight:he,strideWidth:Te}=m,Ae=W-1-m.padInfo.front,Oe=U-1-m.padInfo.top,Be=K-1-m.padInfo.left;for(let Qe=0;Qe<G;++Qe)for(let te=0;te<H;++te)for(let yt=0;yt<X;++yt){let wt=yt-Ae,it=Math.max(0,Math.ceil(wt/le)),At=Math.min(ie,(W+wt)/le);for(let Ct=0;Ct<j;++Ct){let Lt=Ct-Oe,Bt=Math.max(0,Math.ceil(Lt/he)),Wn=Math.min(me,(U+Lt)/he);for(let fr=0;fr<re;++fr){let mo=fr-Be,Kr=Math.max(0,Math.ceil(mo/Te)),nr=Math.min(ue,(K+mo)/Te),Vr=0;for(let Hr=it;Hr<At;++Hr){let co=Hr*le-wt;for(let fo=Bt;fo<Wn;++fo){let on=fo*he-Lt;for(let Iu=Kr;Iu<nr;++Iu){let Ba=Iu*Te-mo,Hi=T*Qe+C*Hr+v*fo+A*Iu,$r=R*(W-1-co)+M*(U-1-on)+F*(K-1-Ba)+O*te;for(let ku=0;ku<ae;++ku){let lh=x[Hi+ku],mh=_[$r+ku];Vr+=lh*mh}}}}d[f*Qe+h*yt+g*Ct+b*fr+te]=Vr}}}return t.makeTensorInfo(c.shape,c.dtype,c.values)}var q$={kernelName:Ka,backendName:"cpu",kernelFunc:hie};var gie=Le(Po,r=>Math.cos(r)),j$={kernelName:Po,backendName:"cpu",kernelFunc:gie};var bie=Le(Fo,r=>Math.cosh(r)),X$={kernelName:Fo,backendName:"cpu",kernelFunc:bie};function yie(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:p,extrapolationValue:u}=n,[l,m,c,d]=o.shape,f=s.shape[0],[h,g]=i,b=Ce([f,h,g,d],"float32"),x=t.data.get(s.dataId).values,T=t.data.get(a.dataId).values,C=t.data.get(o.dataId).values,v=y.computeStrides(o.shape),A=y.computeStrides(b.shape);for(let _=0;_<f;_++){let R=_*4,M=x[R],F=x[R+1],O=x[R+2],G=x[R+3],W=T[_];if(W>=l)continue;let U=h>1?(O-M)*(m-1)/(h-1):0,K=g>1?(G-F)*(c-1)/(g-1):0;for(let H=0;H<h;H++){let X=h>1?M*(m-1)+H*U:.5*(M+O)*(m-1);if(X<0||X>m-1){for(let j=0;j<g;j++)for(let re=0;re<d;re++){let ae=re+j*A[2]+H*A[1]+_*A[0];b.values[ae]=u}continue}if(p==="bilinear"){let j=Math.floor(X),re=Math.ceil(X),ae=X-j;for(let ie=0;ie<g;ie++){let me=g>1?F*(c-1)+ie*K:.5*(F+G)*(c-1);if(me<0||me>c-1){for(let Te=0;Te<d;Te++){let Ae=Te+ie*A[2]+H*A[1]+_*A[0];b.values[Ae]=u}continue}let ue=Math.floor(me),le=Math.ceil(me),he=me-ue;for(let Te=0;Te<d;Te++){let Ae=Te+ue*v[2]+j*v[1]+W*v[0],Oe=C[Ae];Ae=Te+le*v[2]+j*v[1]+W*v[0];let Be=C[Ae];Ae=Te+ue*v[2]+re*v[1]+W*v[0];let Qe=C[Ae];Ae=Te+le*v[2]+re*v[1]+W*v[0];let te=C[Ae],yt=Oe+(Be-Oe)*he,wt=Qe+(te-Qe)*he;Ae=Te+ie*A[2]+H*A[1]+_*A[0],b.values[Ae]=yt+(wt-yt)*ae}}}else for(let j=0;j<g;++j){let re=g>1?F*(c-1)+j*K:.5*(F+G)*(c-1);if(re<0||re>c-1){for(let me=0;me<d;me++){let ue=me+j*A[2]+H*A[1]+_*A[0];b.values[ue]=u}continue}let ae=Math.round(re),ie=Math.round(X);for(let me=0;me<d;me++){let ue=me+ae*v[2]+ie*v[1]+W*v[0],le=me+j*A[2]+H*A[1]+_*A[0];b.values[le]=C[ue]}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}var Y$={kernelName:Ha,backendName:"cpu",kernelFunc:yie};function xie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;oe(o,"cumprod");let p=I.getAxesPermutation([s],o.shape.length),u=o;p!=null&&(u=Xt({inputs:{x:o},backend:t,attrs:{perm:p}}));let l=I.getInnerMostAxes(1,o.shape.length)[0];if(l!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${l}`);let m=Nt(u.dtype,"int32"),c=y.makeOnesTypedArray(y.sizeFromShape(u.shape),m),d=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],h=i?(b,x)=>b+f-x-1:(b,x)=>b+x;for(let b=0;b<d.length;b+=f)for(let x=0;x<f;x++){let T=h(b,x);if(x===0)c[T]=a?1:d[T];else{let C=h(b,x-1);c[T]=a?d[C]*c[C]:d[T]*c[C]}}let g=t.makeTensorInfo(u.shape,m,c);if(p!=null){let b=I.getUndoAxesPermutation(p),x=Xt({inputs:{x:g},backend:t,attrs:{perm:b}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),x}return g}var Z$={kernelName:Va,backendName:"cpu",kernelFunc:xie};function Tie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;oe(o,"cumsum");let p=I.getAxesPermutation([s],o.shape.length),u=o;p!=null&&(u=Xt({inputs:{x:o},backend:t,attrs:{perm:p}}));let l=I.getInnerMostAxes(1,o.shape.length)[0];if(l!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${l}`);let m=Nt(u.dtype,"int32"),c=y.makeZerosTypedArray(y.sizeFromShape(u.shape),m),d=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],h=i?(b,x)=>b+f-x-1:(b,x)=>b+x;for(let b=0;b<d.length;b+=f)for(let x=0;x<f;x++){let T=h(b,x);if(x===0)c[T]=a?0:d[T];else{let C=h(b,x-1);c[T]=a?d[C]+c[C]:d[T]+c[C]}}let g=t.makeTensorInfo(u.shape,m,c);if(p!=null){let b=I.getUndoAxesPermutation(p),x=Xt({inputs:{x:g},backend:t,attrs:{perm:b}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),x}return g}var Q$={kernelName:Eo,backendName:"cpu",kernelFunc:Tie};function Cie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let p=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,l=wf(p,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,l)}else if(o.shape.length===2){let p=t.bufferSync(o),u=t.bufferSync(s),l=RT(p,u,a,i);return t.makeTensorInfo(l.shape,s.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var J$={kernelName:Zi,backendName:"cpu",kernelFunc:Cie};function Iie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n;y.assert(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);let i=o.shape[0],p=o.shape[1],u=o.shape[2],l=o.shape[3],m=p*s,c=u*s,d=l/(s*s),f=t.data.get(o.dataId).values,h=new Float32Array(i*m*c*d),g=0;for(let b=0;b<i;++b)for(let x=0;x<m;++x){let T=Math.floor(x/s),C=x%s;for(let v=0;v<c;++v){let A=Math.floor(v/s),_=v%s,R=(C*s+_)*d;for(let M=0;M<d;++M){let O=M+R+l*(A+u*(T+p*b));h[g++]=f[O]}}}return t.makeTensorInfo([i,m,c,d],o.dtype,h)}var e3={kernelName:qa,backendName:"cpu",kernelFunc:Iie};function p0(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:p,dimRoundingMode:u}=n;oe([o,s],"depthwiseConv2DNative");let l=y.computeStrides(o.shape),m=y.computeStrides(s.shape),c=p;c==null&&(c=[1,1]),y.assert(I.eitherStridesOrDilationsAreOne(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let d=I.computeConv2DInfo(o.shape,s.shape,a,c,i,u,!0),{filterHeight:f,filterWidth:h,dilationHeight:g,dilationWidth:b,padInfo:x}=d,T=x.left,C=x.top,v=d.outChannels/d.inChannels,A=new ht(d.outShape,o.dtype),_=t.data.get(o.dataId).values,R=t.data.get(s.dataId).values,M=A.values;for(let F=0;F<d.batchSize;++F){let O=F*l[0],G=F*A.strides[0];for(let W=0;W<d.outHeight;++W){let U=G+W*A.strides[1],K=W*d.strideHeight-C;for(let H=0;H<f;++H){let X=K+H*g;if(X<0||X>=d.inHeight)continue;let j=H*m[0],re=O+X*l[1];for(let ae=0;ae<d.outWidth;++ae){let ie=U+ae*A.strides[2],me=ae*d.strideWidth-T;for(let ue=0;ue<h;++ue){let le=me+ue*b;if(le<0||le>=d.inWidth)continue;let he=j+ue*m[1],Te=re+le*d.inChannels,Ae=ie,Oe=he;for(let Be=0;Be<d.inChannels;++Be){let Qe=_[Te+Be];for(let te=0;te<v;++te)M[Ae+te]+=Qe*R[Oe+te];Ae+=v,Oe+=v}}}}}}return t.makeTensorInfo(A.shape,A.dtype,A.values)}var t3={kernelName:Lo,backendName:"cpu",kernelFunc:p0};function kie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,dilations:i,pad:p,dimRoundingMode:u,filterShape:l}=n;oe([o,s],"depthwiseConv2dNativeBackpropFilter");let m=I.computeConv2DInfo(o.shape,l,a,i,p,u,!0),{strideHeight:c,strideWidth:d,filterHeight:f,filterWidth:h}=m,g=new ht(m.filterShape,"float32"),b=m.padInfo.left,x=m.padInfo.top,T=m.outChannels/m.inChannels,C=t.data.get(o.dataId).values,v=new ht(o.shape,o.dtype,C),A=t.data.get(s.dataId).values,_=new ht(s.shape,s.dtype,A);for(let R=0;R<f;++R){let M=Math.max(0,Math.ceil((x-R)/c)),F=Math.min(m.outHeight,(m.inHeight+x-R)/c);for(let O=0;O<h;++O){let G=Math.max(0,Math.ceil((b-O)/d)),W=Math.min(m.outWidth,(m.inWidth+b-O)/d);for(let U=0;U<m.outChannels;++U){let K=Math.trunc(U/T),H=U%T,X=0;for(let j=0;j<m.batchSize;++j)for(let re=M;re<F;++re){let ae=R+re*c-x;for(let ie=G;ie<W;++ie){let me=O+ie*d-b;X+=v.get(j,ae,me,K)*_.get(j,re,ie,U)}}g.set(X,R,O,K,H)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}var r3={kernelName:gp,backendName:"cpu",kernelFunc:kie};function vie(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,dilations:i,pad:p,dimRoundingMode:u,inputShape:l}=n;oe([o,s],"depthwiseConv2DNativeBackpropInput");let m=y.computeStrides(o.shape),c=y.computeStrides(s.shape),d=I.computeConv2DInfo(l,s.shape,a,i,p,u,!0),f=new ht(d.inShape,"float32"),h=f.values,[g,b,x]=f.strides,T=t.data.get(o.dataId).values,[C,v,A]=m,_=t.data.get(s.dataId).values,[R,M,F]=c,{batchSize:O,filterHeight:G,filterWidth:W,inChannels:U,inHeight:K,inWidth:H,outChannels:X,outHeight:j,outWidth:re,strideHeight:ae,strideWidth:ie}=d,me=G-1-d.padInfo.top,ue=W-1-d.padInfo.left,le=X/U;for(let he=0;he<O;++he)for(let Te=0;Te<U;++Te)for(let Ae=0;Ae<K;++Ae){let Oe=Ae-me,Be=Math.max(0,Math.ceil(Oe/ae)),Qe=Math.min(j,(G+Oe)/ae);for(let te=0;te<H;++te){let yt=te-ue,wt=Math.max(0,Math.ceil(yt/ie)),it=Math.min(re,(W+yt)/ie),At=0;for(let Ct=Be;Ct<Qe;++Ct){let Lt=Ct*ae-Oe;for(let Bt=wt;Bt<it;++Bt){let Wn=Bt*ie-yt,fr=C*he+v*Ct+A*Bt,mo=R*(G-1-Lt)+M*(W-1-Wn)+F*Te;for(let Kr=0;Kr<le;++Kr){let nr=Te*le+Kr,Vr=T[fr+nr],Hr=_[mo+Kr];At+=Vr*Hr}}}h[g*he+b*Ae+x*te+Te]=At}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}var n3={kernelName:bp,backendName:"cpu",kernelFunc:vie};function Sie(r){let{inputs:e,backend:t}=r,{x:n}=e,o=y.sizeFromShape(n.shape),s=t.data.get(n.dataId).values,a=Ce([o,o],n.dtype),i=a.values;for(let u=0;u<s.length;u++)i[u*o+u]=s[u];let p=[...n.shape,...n.shape];return t.makeTensorInfo(p,a.dtype,a.values)}var o3={kernelName:Qi,backendName:"cpu",kernelFunc:Sie};var s3={kernelName:Bo,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o}=r,{strides:s,pad:a,dilations:i}=t,p=e,u=p.data.get(n.dataId).values,l=n.shape.length,m=p.data.get(o.dataId).values,c=o.shape.length,{batchSize:d,inHeight:f,inWidth:h,inChannels:g,outHeight:b,outWidth:x,padInfo:T,strideHeight:C,strideWidth:v,filterHeight:A,filterWidth:_,dilationHeight:R,dilationWidth:M,outShape:F}=I.computeDilation2DInfo(n.shape,o.shape,s,a,"NHWC",i),O=y.sizeFromShape(F),G=F.length,W=y.getArrayFromDType(n.dtype,O);for(let K=0;K<d;++K)for(let H=0;H<b;++H){let X=H*C-T.top;for(let j=0;j<x;++j){let re=j*v-T.left;for(let ae=0;ae<g;++ae){let ie=Number.MIN_SAFE_INTEGER;for(let ue=0;ue<A;++ue){let le=X+ue*R;if(le>=0&&le<f)for(let he=0;he<_;++he){let Te=re+he*M;if(Te>=0&&Te<h){let Ae=y.locToIndex([K,le,Te,ae],l,y.computeStrides(n.shape)),Oe=y.locToIndex([ue,he,ae],c,y.computeStrides(o.shape)),Be=u[Ae]+m[Oe];Be>ie&&(ie=Be)}}}let me=y.locToIndex([K,H,j,ae],G,y.computeStrides(F));W[me]=ie}}}return{dataId:p.write(y.toTypedArray(W,n.dtype),F,n.dtype),shape:F,dtype:n.dtype}}};var a3={kernelName:eu,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:p}=t,u=e,l=y.toNestedArray(n.shape,u.data.get(n.dataId).values),m=y.toNestedArray(o.shape,u.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:b,padInfo:x,strideHeight:T,strideWidth:C,filterHeight:v,filterWidth:A,dilationHeight:_,dilationWidth:R,outShape:M}=I.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",p);y.assert(s.rank===M.length,()=>`Error in ${eu}, dy must have the same rank as output ${M.length}, but got ${s.rank}`);let F=y.toNestedArray(M,u.data.get(s.dataId).values),O=y.makeZerosNestedTypedArray(o.shape,o.dtype);for(let W=0;W<c;++W)for(let U=0;U<g;++U){let K=U*T-x.top;for(let H=0;H<b;++H){let X=H*C-x.left;for(let j=0;j<h;++j){let re=Number.MIN_SAFE_INTEGER,ae=0,ie=0;for(let me=0;me<v;++me){let ue=K+me*_;if(ue>=0&&ue<d)for(let le=0;le<A;++le){let he=X+le*R;if(he>=0&&he<f){let Te=l[W][ue][he][j]+m[me][le][j];Te>re&&(re=Te,ae=me,ie=le)}}}O[ae][ie][j]+=F[W][U][H][j]}}}return{dataId:u.write(y.toTypedArray(O,n.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var i3={kernelName:Ji,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:p}=t,u=e,l=y.toNestedArray(n.shape,u.data.get(n.dataId).values),m=y.toNestedArray(o.shape,u.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:b,padInfo:x,strideHeight:T,strideWidth:C,filterHeight:v,filterWidth:A,dilationHeight:_,dilationWidth:R,outShape:M}=I.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",p);y.assert(s.rank===M.length,()=>`Error in ${Ji}, dy must have the same rank as output ${M.length}, but got ${s.rank}`);let F=y.toNestedArray(M,u.data.get(s.dataId).values),O=y.makeZerosNestedTypedArray(n.shape,n.dtype);for(let W=0;W<c;++W)for(let U=0;U<g;++U){let K=U*T-x.top;for(let H=0;H<b;++H){let X=H*C-x.left;for(let j=0;j<h;++j){let re=Number.MIN_SAFE_INTEGER,ae=K<0?0:K,ie=X<0?0:X;for(let me=0;me<v;++me){let ue=K+me*_;if(ue>=0&&ue<d)for(let le=0;le<A;++le){let he=X+le*R;if(he>=0&&he<f){let Te=l[W][ue][he][j]+m[me][le][j];Te>re&&(re=Te,ae=ue,ie=he)}}}O[W][ae][ie][j]+=F[W][U][H][j]}}}return{dataId:u.write(y.toTypedArray(O,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function Zu(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;oe(o,"sum");let i;o.dtype==="bool"?i=_a({inputs:{x:o},backend:t,attrs:{dtype:"int32"}}):i=rn({inputs:{x:o},backend:t});let p=i.shape.length,u=y.parseAxisParam(s,i.shape),l=I.getAxesPermutation(u,p),m=u,c=i;l!=null&&(c=Xt({inputs:{x:i},backend:t,attrs:{perm:l}}),m=I.getInnerMostAxes(m.length,p)),I.assertAxesAreInnerMostDims("sum",m,c.shape.length);let[d,f]=I.computeOutAndReduceShapes(c.shape,m),h=I.upcastType(c.dtype,"int32"),g=vf(t,d,h),b=y.sizeFromShape(f),x=t.data.get(g.dataId).values,T=t.data.get(c.dataId).values;for(let C=0;C<x.length;++C){let v=C*b,A=0;for(let _=0;_<b;++_)A+=T[v+_];x[C]=A}if(a){let C=I.expandShapeToKeepDim(g.shape,u),v=g;g=ot({inputs:{x:g},backend:t,attrs:{shape:C}}),t.disposeIntermediateTensorInfo(v)}return t.disposeIntermediateTensorInfo(i),l!=null&&t.disposeIntermediateTensorInfo(c),g}var u3={kernelName:ws,backendName:"cpu",kernelFunc:Zu};function wie(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:a,summedDims:i,idDims:p}=I.decodeEinsumEquation(o,s.length);I.checkEinsumDimSizes(a.length,p,s);let{path:u,steps:l}=I.getEinsumComputePath(i,p),m=l.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of l[h]){let{permutationIndices:b,expandDims:x}=I.getEinsumPermutation(d,p[g]),T;I.isIdentityPermutation(b)?T=s[g]:(T=Xt({inputs:{x:s[g]},backend:t,attrs:{perm:b}}),f.push(T));let C=T.shape.slice();for(let v=0;v<x.length;++v)C.splice(x[v],0,1);y.arraysEqual(T.shape,C)||(T=ot({inputs:{x:T},backend:t,attrs:{shape:C}}),f.push(T)),c===null?c=T:(c=Im({inputs:{a:T,b:c},backend:t}),f.push(c))}h<m-1&&(u[h]>=0&&(c=Zu({inputs:{x:c},backend:t,attrs:{axis:u[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&t.disposeIntermediateTensorInfo(h);return c}var p3={kernelName:yp,backendName:"cpu",kernelFunc:wie};function Aie(r){let{inputs:e,backend:t}=r,{dy:n,y:o}=e;oe([n,o],"eluGrad");let s=new Float32Array(y.sizeFromShape(o.shape)),a=t.data.get(o.dataId).values,i=t.data.get(n.dataId).values;for(let p=0;p<a.length;++p){let u=a[p];u>=0?s[p]=i[p]:s[p]=i[p]*(u+1)}return t.makeTensorInfo(o.shape,"float32",s)}var l3={kernelName:ja,backendName:"cpu",kernelFunc:Aie};var Nie=I.ERF_P,Die=I.ERF_A1,_ie=I.ERF_A2,Rie=I.ERF_A3,Mie=I.ERF_A4,Pie=I.ERF_A5,Fie=Le(Xa,r=>{let e=Math.sign(r),t=Math.abs(r),n=1/(1+Nie*t);return e*(1-((((Pie*n+Mie)*n+Rie)*n+_ie)*n+Die)*n*Math.exp(-t*t))}),m3={kernelName:Xa,backendName:"cpu",kernelFunc:Fie};function Mf(r){let{inputs:e,backend:t,attrs:n}=r,{input:o}=e,{dim:s}=n,a=o.shape.length,i=o.shape.slice(),p=s;return s<0&&(y.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),p=a+s+1),i.splice(p,0,1),ot({inputs:{x:o},backend:t,attrs:{shape:i}})}var c3={kernelName:qs,backendName:"cpu",kernelFunc:Mf};var Eie=at((r,e)=>r/e),Ig=ct($o,Eie),kg={kernelName:$o,backendName:"cpu",kernelFunc:Ig};function HT(r,e,t){let n=r.shape,o=n[0],s=n[1],a=t.data.get(r.dataId),i=a.complexTensorInfos.real,p=a.complexTensorInfos.imag,u=[o,s],l=y.sizeFromShape(u),m=y.getTypedArrayFromDType("float32",l),c=y.getTypedArrayFromDType("float32",l);for(let g=0;g<o;g++){let b=Ma({inputs:{x:i},backend:t,attrs:{begin:[g,0],size:[1,s]}}),x=Ma({inputs:{x:p},backend:t,attrs:{begin:[g,0],size:[1,s]}}),T=Nr({inputs:{real:b,imag:x},backend:t}),{real:C,imag:v}=Lie(T,e,t),A=I.mergeRealAndImagArrays(C,v);for(let _=0;_<s;_++){let R=I.getComplexWithIndex(A,_);m[g*s+_]=R.real,c[g*s+_]=R.imag}t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(T)}let d=t.makeTensorInfo(u,"float32",m),f=t.makeTensorInfo(u,"float32",c),h=Nr({inputs:{real:d,imag:f},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),h}function Lie(r,e,t){let n=y.sizeFromShape(r.shape),o=t.data.get(r.dataId),s=t.data.get(o.complexTensorInfos.real.dataId).values,a=t.data.get(o.complexTensorInfos.imag.dataId).values;if(Bie(n)){let i=l0(s,a,n,e,t),p=[r.shape[0],r.shape[1]];if(e){let u=t.makeTensorInfo(p,"float32",i.real),l=t.makeTensorInfo(p,"float32",i.imag),m=t.makeTensorInfo([],"float32",y.createScalarValue(n,"float32")),c=rn({inputs:{x:m},backend:t}),d=kg.kernelFunc({inputs:{a:u,b:m},backend:t}),f=kg.kernelFunc({inputs:{a:l,b:c},backend:t}),h=t.data.get(d.dataId).values,g=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),{real:h,imag:g}}return i}else{let i=I.mergeRealAndImagArrays(s,a),p=$ie(i,n,e);return I.splitRealAndImagArrays(p)}}function Bie(r){return(r&r-1)===0}function l0(r,e,t,n,o){if(t===1)return{real:r,imag:e};let s=I.mergeRealAndImagArrays(r,e),a=t/2,i=I.complexWithEvenIndex(s),p=i.real,u=i.imag,l=[p.length],m=o.makeTensorInfo(l,"float32",p),c=o.makeTensorInfo(l,"float32",u),d=Nr({inputs:{real:m,imag:c},backend:o}),f=I.complexWithOddIndex(s),h=f.real,g=f.imag,b=[h.length],x=o.makeTensorInfo(b,"float32",h),T=o.makeTensorInfo(b,"float32",g),C=Nr({inputs:{real:x,imag:T},backend:o}),v=l0(p,u,a,n,o),A=v.real,_=v.imag,R=[A.length],M=o.makeTensorInfo(R,"float32",A),F=o.makeTensorInfo(R,"float32",_),O=Nr({inputs:{real:M,imag:F},backend:o}),G=l0(h,g,a,n,o),W=G.real,U=G.imag,K=[W.length],H=o.makeTensorInfo(K,"float32",W),X=o.makeTensorInfo(K,"float32",U),j=Nr({inputs:{real:H,imag:X},backend:o}),re=I.exponents(t,n),ae=[re.real.length],ie=o.makeTensorInfo(ae,"float32",re.real),me=o.makeTensorInfo(ae,"float32",re.imag),ue=Nr({inputs:{real:ie,imag:me},backend:o}),le=Im({inputs:{a:ue,b:j},backend:o}),he=bu({inputs:{a:O,b:le},backend:o}),Te=Tg({inputs:{a:O,b:le},backend:o}),Ae=Da({inputs:{input:he},backend:o}),Oe=Da({inputs:{input:Te},backend:o}),Be=yu({inputs:{input:he},backend:o}),Qe=yu({inputs:{input:Te},backend:o}),te=nl({inputs:[Ae,Oe],backend:o,attrs:{axis:0}}),yt=nl({inputs:[Be,Qe],backend:o,attrs:{axis:0}}),wt=o.data.get(te.dataId).values,it=o.data.get(yt.dataId).values;return o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(C),o.disposeIntermediateTensorInfo(M),o.disposeIntermediateTensorInfo(F),o.disposeIntermediateTensorInfo(O),o.disposeIntermediateTensorInfo(H),o.disposeIntermediateTensorInfo(X),o.disposeIntermediateTensorInfo(j),o.disposeIntermediateTensorInfo(ie),o.disposeIntermediateTensorInfo(me),o.disposeIntermediateTensorInfo(ue),o.disposeIntermediateTensorInfo(le),o.disposeIntermediateTensorInfo(he),o.disposeIntermediateTensorInfo(Te),o.disposeIntermediateTensorInfo(Ae),o.disposeIntermediateTensorInfo(Be),o.disposeIntermediateTensorInfo(Oe),o.disposeIntermediateTensorInfo(Qe),o.disposeIntermediateTensorInfo(te),o.disposeIntermediateTensorInfo(yt),{real:wt,imag:it}}function $ie(r,e,t){let n=new Float32Array(e*2);for(let o=0;o<e;o++){let s=0,a=0;for(let i=0;i<e;i++){let p=I.exponent(o*i,e,t),u=I.getComplexWithIndex(r,i);s+=u.real*p.real-u.imag*p.imag,a+=u.real*p.imag+u.imag*p.real}t&&(s/=e,a/=e),I.assignToTypedArray(n,s,a,o)}return n}function Oie(r){let{inputs:e,backend:t}=r,{input:n}=e,o=y.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=ot({inputs:{x:n},backend:t,attrs:{shape:[a,s]}}),p=HT(i,!1,t),u=ot({inputs:{x:p},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(p),u}var d3={kernelName:xp,backendName:"cpu",kernelFunc:Oie};function vg(r){let{backend:e,attrs:t}=r,{shape:n,value:o,dtype:s}=t,a=s||y.inferDtype(o),i=y.getArrayFromDType(a,y.sizeFromShape(n));return zie(i,o,a),e.makeTensorInfo(n,a,i)}var f3={kernelName:tu,backendName:"cpu",kernelFunc:vg};function zie(r,e,t){r.fill(e)}var h3={kernelName:Za,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,o=t,s=y.getTypedArrayFromDType(n.dtype,y.sizeFromShape(n.shape)),[a,i,p,u]=n.shape,l=o.data.get(n.dataId).values;for(let c=0;c<a;c++){let d=c*p*i*u;for(let f=0;f<i;f++){let h=f*(p*u);for(let g=0;g<p;g++){let b=g*u;for(let x=0;x<u;x++){let T=Math.round(p-g-1),C=d+h+b+x,v=l[C];if(T>=0&&T<p){let A=T*u,_=d+h+A+x;v=l[_]}s[C]=v}}}}return{dataId:o.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function Gie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=u0({inputs:{x:o,filter:s},backend:t,attrs:{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c}});if(a){let g=h;if(l==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){let b=ot({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});h=bu({inputs:{a:h,b},backend:t}),t.disposeIntermediateTensorInfo(b)}else h=bu({inputs:{a:h,b:a},backend:t});t.disposeIntermediateTensorInfo(g)}if(d){let g=h;if(l==="NCHW"&&d==="prelu"&&i.shape.length===1&&i.shape[0]!==1){let b=ot({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});h=Dm(t,h,d,b,f),t.disposeIntermediateTensorInfo(b)}else h=Dm(t,h,d,i,f);t.disposeIntermediateTensorInfo(g)}return h}var g3={kernelName:ia,backendName:"cpu",kernelFunc:Gie};function Wie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=p0({inputs:{x:o,filter:s},backend:t,attrs:{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c}});if(a){let g=h;h=bu({inputs:{a:h,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(d){let g=h;h=Dm(t,h,d,i,f),t.disposeIntermediateTensorInfo(g)}return h}var b3={kernelName:ua,backendName:"cpu",kernelFunc:Wie};function Uie(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=y.sizeFromShape(n.shape),a=o.shape,i=a[a.length-1],[p,u,l,m]=I.prepareAndValidate(n,o);if(u===0)return t.makeTensorInfo(p,n.dtype,[]);let c=t.data.get(o.dataId).values,d=t.bufferSync(n),f=MT(c,d,n.dtype,u,i,l,m,n.shape,s);return t.makeTensorInfo(p,n.dtype,f.values)}var y3={kernelName:Qa,backendName:"cpu",kernelFunc:Uie};function Kie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n;oe([o,s],"gatherV2");let p=y.parseAxisParam(a,o.shape)[0],u=t.data.get(s.dataId).values,l=o.shape[p];for(let C=0;C<u.length;++C){let v=u[C];y.assert(v<=l-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${l-1}]`)}let m=i;i==null&&(m=0);let c=y.sizeFromShape(s.shape),d=I.segment_util.collectGatherOpShapeInfo(o,s,p,m),f=ot({inputs:{x:o},backend:t,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),h=ot({inputs:{x:s},backend:t,attrs:{shape:[d.batchSize,c/d.batchSize]}}),g=[d.batchSize,d.outerSize,c/d.batchSize,d.sliceSize],b=t.bufferSync(h),x=t.bufferSync(f),T=PT(x,b,g);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),t.makeTensorInfo(d.outputShape,T.dtype,T.values)}var x3={kernelName:js,backendName:"cpu",kernelFunc:Kie};function Vie(r){let{inputs:e,backend:t}=r,{input:n}=e,o=y.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=ot({inputs:{x:n},backend:t,attrs:{shape:[a,s]}}),p=HT(i,!0,t),u=ot({inputs:{x:p},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(p),u}var T3={kernelName:Tp,backendName:"cpu",kernelFunc:Vie};var Hie=Le(Ho,r=>Number.isFinite(r)?1:0,"bool"),C3={kernelName:Ho,backendName:"cpu",kernelFunc:Hie};var qie=Le(qo,r=>Math.abs(r)===1/0?1:0,"bool"),I3={kernelName:qo,backendName:"cpu",kernelFunc:qie};var jie=Le(jo,r=>Number.isNaN(r)?1:0,"bool"),k3={kernelName:jo,backendName:"cpu",kernelFunc:jie};function Xie(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,a=FT(n,o,s);return e.makeTensorInfo([a.length],"float32",a)}var v3={kernelName:ri,backendName:"cpu",kernelFunc:Xie};var Yie=Le(Zo,r=>Math.log1p(r)),S3={kernelName:Zo,backendName:"cpu",kernelFunc:Yie};var Zie=at((r,e)=>r&&e),Qie=ct(ni,Zie,null,"bool"),w3={kernelName:ni,backendName:"cpu",kernelFunc:Qie};var Jie=Le(oi,r=>r?0:1,"bool"),A3={kernelName:oi,backendName:"cpu",kernelFunc:Jie};var eue=at((r,e)=>r||e),tue=ct(si,eue,null,"bool"),N3={kernelName:si,backendName:"cpu",kernelFunc:tue};function rue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:p}=n;oe(o,"LRN");let u=o.shape[3],l=u-1,m=t.data.get(o.dataId).values,c=y.sizeFromShape(o.shape),d=new Float32Array(c);function f(h){let g=h%u,b=h-g+Math.max(0,g-s),x=h-g+Math.min(g+s,l),T=0;for(;b<=x;b++){let C=m[b];T+=C*C}return T}for(let h=0;h<c;h++){let g=f(h),b=m[h]*Math.pow(a+i*g,-p);d[h]=b}return t.makeTensorInfo(o.shape,o.dtype,d)}var D3={kernelName:Qo,backendName:"cpu",kernelFunc:rue};function nue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:p,alpha:u,beta:l}=n;oe(a,"LRNGrad");let m=y.sizeFromShape(a.shape),c=a.shape[3],d=t.data.get(a.dataId).values,f=t.data.get(o.dataId).values,h=t.data.get(s.dataId).values,g=new Float32Array(m),b=m;for(let x=0;x<b;x++){let T=x%c,C=x-T+Math.max(0,T-i),v=x-T+Math.min(c,T+i+1),A=0;for(let _=C;_<v;_++)A+=Math.pow(f[_],2);A=u*A+p;for(let _=C;_<v;_++){let R=-2*u*l*f[_]*h[x]/A;x===_&&(R+=Math.pow(A,-l)),R*=d[x],g[_]+=R}}return t.makeTensorInfo(a.shape,o.dtype,g)}var _3={kernelName:ai,backendName:"cpu",kernelFunc:nue};function m0(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n,i=t,p=o.shape,u=p.length,l=y.parseAxisParam(s,p),m=l,c=I.getAxesPermutation(m,u),d=i.data.get(o.dataId).values;if(c!=null){let C=new Array(u);for(let v=0;v<C.length;v++)C[v]=p[c[v]];d=Af(d,p,o.dtype,c,C),m=I.getInnerMostAxes(m.length,u),p=C}oe(o,"max"),I.assertAxesAreInnerMostDims("max",m,u);let[f,h]=I.computeOutAndReduceShapes(p,m),g=y.sizeFromShape(h),b=ET(d,g,f,o.dtype),x=i.write(b,f,o.dtype),T=f;return a&&(T=I.expandShapeToKeepDim(f,l)),{dataId:x,shape:T,dtype:o.dtype}}var R3={kernelName:Jo,backendName:"cpu",kernelFunc:m0};function oue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;oe(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1;y.assert(I.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let l=I.computePool2DInfo(o.shape,s,a,u,i,p),m;if(l.filterWidth===1&&l.filterHeight===1&&y.arraysEqual(l.inShape,l.outShape))m=rn({inputs:{x:o},backend:t});else{let c=t.data.get(o.dataId).values,d=y.computeStrides(o.shape),f=Rf(c,o.shape,o.dtype,d,l,"max");m=t.makeTensorInfo(l.outShape,o.dtype,f.values)}return m}var M3={kernelName:ts,backendName:"cpu",kernelFunc:oue};function sue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:p,dataFormat:u}=n;oe(o,"maxPool3d");let l=I.computePool3DInfo(o.shape,s,a,1,i,p,u),m=t.data.get(o.dataId).values,c=VT(m,o.shape,o.dtype,y.computeStrides(o.shape),l,"max");return t.makeTensorInfo(c.shape,"float32",c.values)}var P3={kernelName:Xs,backendName:"cpu",kernelFunc:sue};function aue(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:p,dimRoundingMode:u}=n;oe([o,s],"maxPool3DGrad");let l=I.computePool3DInfo(s.shape,a,i,1,p,u),m=t.bufferSync(s),c=D$(m,l),d=l.strideDepth,f=l.strideHeight,h=l.strideWidth,g=l.dilationDepth,b=l.dilationHeight,x=l.dilationWidth,T=l.effectiveFilterDepth,C=l.effectiveFilterHeight,v=l.effectiveFilterWidth,A=T-1-l.padInfo.front,_=v-1-l.padInfo.left,R=C-1-l.padInfo.top,M=Ce(s.shape,"float32"),F=t.bufferSync(o);for(let O=0;O<l.batchSize;++O)for(let G=0;G<l.inChannels;++G)for(let W=0;W<l.inDepth;++W)for(let U=0;U<l.inHeight;++U)for(let K=0;K<l.inWidth;++K){let H=W-A,X=U-R,j=K-_,re=0;for(let ae=0;ae<T;ae+=g){let ie=(H+ae)/d;if(!(ie<0||ie>=l.outDepth||Math.floor(ie)!==ie))for(let me=0;me<C;me+=b){let ue=(X+me)/f;if(!(ue<0||ue>=l.outHeight||Math.floor(ue)!==ue))for(let le=0;le<v;le+=x){let he=(j+le)/h;if(he<0||he>=l.outWidth||Math.floor(he)!==he)continue;let Te=T*C*v-1-c.get(O,ie,ue,he,G),Ae=ae*C*v+me*v+le,Oe=Te===Ae?1:0;if(Oe===0)continue;let Be=F.get(O,ie,ue,he,G);re+=Be*Oe}}}M.set(re,O,W,U,K,G)}return t.makeTensorInfo(M.shape,M.dtype,M.values)}var F3={kernelName:ru,backendName:"cpu",kernelFunc:aue};function iue(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:a}=e,i=s;oe([s,a],"maxPoolGrad");let{filterSize:p,strides:u,pad:l,dimRoundingMode:m}=n,c=I.computePool2DInfo(i.shape,p,u,1,l,m),d=t.data.get(i.dataId).values,f=Ce(c.outShape,i.dtype,KT(d,i.shape,i.dtype,c).values),h=c.strideHeight,g=c.strideWidth,b=c.dilationHeight,x=c.dilationWidth,T=c.effectiveFilterHeight,C=c.effectiveFilterWidth,v=C-1-c.padInfo.left,A=T-1-c.padInfo.top,_=Ce(i.shape,"float32"),R=t.data.get(o.dataId).values,M=Ce(o.shape,"float32",R);for(let F=0;F<c.batchSize;++F)for(let O=0;O<c.inChannels;++O)for(let G=0;G<c.inHeight;++G)for(let W=0;W<c.inWidth;++W){let U=G-A,K=W-v,H=0;for(let X=0;X<T;X+=b){let j=(U+X)/h;if(!(j<0||j>=c.outHeight||Math.floor(j)!==j))for(let re=0;re<C;re+=x){let ae=(K+re)/g;if(ae<0||ae>=c.outWidth||Math.floor(ae)!==ae)continue;let ie=T*C-1-f.get(F,j,ae,O),me=X*C+re,ue=ie===me?1:0;if(ue===0)continue;let le=M.get(F,j,ae,O);H+=le*ue}}_.set(H,F,G,W,O)}return t.makeTensorInfo(_.shape,_.dtype,_.values)}var E3={kernelName:Ip,backendName:"cpu",kernelFunc:iue};function L3(r,e,t,n,o){let s=y.computeStrides(e),a=Rf(r,e,t,s,o,"max"),i=KT(r,e,t,o,!0,n);return[a.values,i.values]}var B3={kernelName:kp,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=e,p=t;oe(n,"MaxPoolWithArgmax");let u=p.data.get(n.dataId).values,l=I.computePool2DInfo(n.shape,o,s,[1,1],a),[m,c]=L3(u,n.shape,n.dtype,i,l),d=p.write(m,l.outShape,n.dtype),f=p.write(c,l.outShape,n.dtype);return[{dataId:d,shape:l.outShape,dtype:n.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}};function uue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=y.parseAxisParam(s,o.shape),u=I.computeOutAndReduceShapes(o.shape,i)[1],l=y.sizeFromShape(u),m=[],c=t.makeTensorInfo([],"float32",new Float32Array([l]));m.push(c);let d=_a({inputs:{x:o},backend:t,attrs:{dtype:"float32"}});m.push(d);let f=Ig({inputs:{a:d,b:c},backend:t});m.push(f);let h=Zu({inputs:{x:f},backend:t,attrs:{axis:s,keepDims:a}});return m.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}var $3={kernelName:rs,backendName:"cpu",kernelFunc:uue};function pue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;oe(o,"min");let i=y.parseAxisParam(s,o.shape),p=i,u=I.getAxesPermutation(p,o.shape.length),l=o;u!=null&&(l=Xt({inputs:{x:o},backend:t,attrs:{perm:u}}),p=I.getInnerMostAxes(p.length,o.shape.length)),I.assertAxesAreInnerMostDims("min",p,l.shape.length);let[m,c]=I.computeOutAndReduceShapes(l.shape,p),d=y.sizeFromShape(c),f=y.makeZerosTypedArray(y.sizeFromShape(m),l.dtype),h=t.data.get(l.dataId).values;for(let b=0;b<f.length;++b){let x=b*d,T=h[x];for(let C=0;C<d;++C){let v=h[x+C];(Number.isNaN(v)||v<T)&&(T=v)}f[b]=T}u!=null&&t.disposeIntermediateTensorInfo(l);let g=t.makeTensorInfo(m,l.dtype,f);if(a){let b=I.expandShapeToKeepDim(m,i),x=ot({inputs:{x:g},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(g),x}return g}var O3={kernelName:ns,backendName:"cpu",kernelFunc:pue};function lue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,mode:a}=n;oe(o,"mirrorPad");let i=s.map((T,C)=>T[0]+o.shape[C]+T[1]),p=s.map(T=>T[0]),u=s.map((T,C)=>T[0]+o.shape[C]),l=a==="reflect"?0:1,m=t.data.get(o.dataId).values,c=o.shape.length,d=y.computeStrides(o.shape),f=y.sizeFromShape(i),h=i.length,g=y.computeStrides(i),b=y.getTypedArrayFromDType(o.dtype,f);for(let T=0;T<f;T++){let C=y.indexToLoc(T,h,g);for(let A=0;A<h;A++)C[A]<p[A]?C[A]=p[A]*2-C[A]-l:C[A]>=u[A]&&(C[A]=(u[A]-1)*2-C[A]+l);C=C.map((A,_)=>A-p[_]);let v=y.locToIndex(C,c,d);b[T]=m[v]}return{dataId:t.write(b,i,o.dtype),shape:i,dtype:o.dtype}}var z3={kernelName:ss,backendName:"cpu",kernelFunc:lue};var mue=at((r,e)=>{let t=r%e;return r<0&&e<0||r>=0&&e>=0?t:(t+e)%e}),cue=ct(ii,mue),G3={kernelName:ii,backendName:"cpu",kernelFunc:cue};var U3=hl($h());function c0(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=o.shape.length,i=s;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);let p=y.parseAxisParam([i],o.shape),u=m0({inputs:{x:o},backend:t,attrs:{reductionIndices:p,keepDims:!1}}),l=I.expandShapeToKeepDim(u.shape,p),m=ot({inputs:{x:u},backend:t,attrs:{shape:l}}),c=Tg({inputs:{a:o,b:m},backend:t}),d=LD({inputs:{x:c},backend:t}),f=Zu({inputs:{x:d},backend:t,attrs:{axis:p,keepDims:!1}}),h=ot({inputs:{x:f},backend:t,attrs:{shape:l}}),g=Ig({inputs:{a:d,b:h},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),g}var W3={kernelName:As,backendName:"cpu",kernelFunc:c0};function due(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n;oe(o,"multinomial");let p=i?o:c0({inputs:{logits:o},backend:t,attrs:{dim:-1}}),u=p.shape[0],l=p.shape[1],m=t.data.get(p.dataId).values,c=[u,s],d=y.makeZerosTypedArray(y.sizeFromShape(c),"int32");for(let f=0;f<u;++f){let h=f*l,g=new Float32Array(l-1);g[0]=m[h];for(let T=1;T<g.length;++T)g[T]=g[T-1]+m[h+T];let b=U3.alea(a.toString()),x=f*s;for(let T=0;T<s;++T){let C=b();d[x+T]=g.length;for(let v=0;v<g.length;v++)if(C<g[v]){d[x+T]=v;break}}}return i||t.disposeIntermediateTensorInfo(p),t.makeTensorInfo(c,"int32",d)}var K3={kernelName:ui,backendName:"cpu",kernelFunc:due};var fue=kr.nonMaxSuppressionV3Impl;function hue(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p}=n;oe(o,"NonMaxSuppression");let u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,{selectedIndices:m}=fue(u,l,a,i,p);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}var V3={kernelName:li,backendName:"cpu",kernelFunc:hue};var gue=kr.nonMaxSuppressionV4Impl;function bue(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p,padToMaxOutputSize:u}=n;oe(o,"NonMaxSuppressionPadded");let l=t.data.get(o.dataId).values,m=t.data.get(s.dataId).values,{selectedIndices:c,validOutputs:d}=gue(l,m,a,i,p,u);return[t.makeTensorInfo([c.length],"int32",new Int32Array(c)),t.makeTensorInfo([],"int32",new Int32Array([d]))]}var H3={kernelName:Nu,backendName:"cpu",kernelFunc:bue};var yue=kr.nonMaxSuppressionV5Impl;function xue(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p,softNmsSigma:u}=n;oe(o,"NonMaxSuppressionWithScore");let l=t.data.get(o.dataId).values,m=t.data.get(s.dataId).values,c=a,d=i,f=p,h=u,{selectedIndices:g,selectedScores:b}=yue(l,m,c,d,f,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var q3={kernelName:mi,backendName:"cpu",kernelFunc:xue};function Tue(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{dtype:s,depth:a,onValue:i,offValue:p}=n;oe(o,"oneHot");let u=y.sizeFromShape(o.shape),l=new Float32Array(u*a);l.fill(p);let m=t.data.get(o.dataId).values;for(let c=0;c<u;++c)m[c]>=0&&m[c]<a&&(l[c*a+m[c]]=i);return t.makeTensorInfo([...o.shape,a],s,l)}var j3={kernelName:is,backendName:"cpu",kernelFunc:Tue};function Sg(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Da({inputs:{input:n},backend:t}),s=Sg({inputs:{x:o},backend:t}),a=yu({inputs:{input:n},backend:t}),i=Sg({inputs:{x:a},backend:t}),p=Nr({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),p}else return vg({backend:t,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var X3={kernelName:sa,backendName:"cpu",kernelFunc:Sg};function Y3(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Da({inputs:{input:n},backend:t}),s=Y3({inputs:{x:o},backend:t}),a=yu({inputs:{input:n},backend:t}),i=Sg({inputs:{x:a},backend:t}),p=Nr({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),p}else return vg({backend:t,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var Z3={kernelName:Zs,backendName:"cpu",kernelFunc:Y3};function d0(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return Mf({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(l=>{y.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],p=e.map(l=>{let m=Mf({inputs:{input:l},backend:t,attrs:{dim:o}});return i.push(m),m}),u=nl({inputs:p,backend:t,attrs:{axis:o}});return i.forEach(l=>t.disposeIntermediateTensorInfo(l)),u}var Q3={kernelName:Qs,backendName:"cpu",kernelFunc:d0};function Cue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;oe(o,"pad");let i=s.map((x,T)=>x[0]+o.shape[T]+x[1]),p=s.map(x=>x[0]),u=t.data.get(o.dataId).values,l=y.sizeFromShape(o.shape),m=o.shape.length,c=y.computeStrides(o.shape),d=y.sizeFromShape(i),f=i.length,h=y.computeStrides(i),g=y.getTypedArrayFromDType(o.dtype,d);a!==0&&g.fill(a);for(let x=0;x<l;x++){let C=y.indexToLoc(x,m,c).map((A,_)=>A+p[_]),v=y.locToIndex(C,f,h);g[v]=u[x]}return{dataId:t.write(g,i,o.dtype),shape:i,dtype:o.dtype}}var qT={kernelName:us,backendName:"cpu",kernelFunc:Cue};var Iue=at((r,e)=>Math.pow(r,e)),kue=ct(ps,Iue),J3={kernelName:ps,backendName:"cpu",kernelFunc:kue};function vue(r){let{inputs:e,backend:t,attrs:n}=r,{paramsNestedSplits:o,paramsDenseValues:s,indices:a}=e,{outputRaggedRank:i}=n,p=o.map(b=>t.data.get(b.dataId).values),u=o.map(b=>b.shape),l=t.data.get(s.dataId).values,m=t.data.get(a.dataId).values,[c,d,f]=LT(p,u,l,s.shape,s.dtype,m,a.shape,i),h=c.map(b=>t.makeTensorInfo([b.length],"int32",b)),g=t.makeTensorInfo(f,s.dtype,d);return h.concat([g])}var eO={kernelName:oc,backendName:"cpu",kernelFunc:vue};function Sue(r){let{inputs:e,backend:t}=r,{starts:n,limits:o,deltas:s}=e,a=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,[u,l]=BT(a,n.shape,n.dtype,i,o.shape,p,s.shape),m=t.makeTensorInfo([u.length],"int32",u),c=t.makeTensorInfo([l.length],n.dtype,l);return[m,c]}var tO={kernelName:sc,backendName:"cpu",kernelFunc:Sue};function wue(r){let{inputs:e,backend:t,attrs:n}=r,{shape:o,values:s,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:p}=n,u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,m=t.data.get(a.dataId).values,c=i.map(g=>t.data.get(g.dataId).values),d=i.map(g=>g.shape),[f,h]=$T(u,o.shape,l,s.shape,s.dtype,m,a.shape,c,d,p);return t.makeTensorInfo(f,s.dtype,h)}var rO={kernelName:ac,backendName:"cpu",kernelFunc:wue};function Aue(r){let{backend:e,attrs:t}=r,{start:n,stop:o,dtype:s,step:a}=t,i=km(n,o,a,s);return e.makeTensorInfo([i.length],s,i)}var nO={kernelName:nu,backendName:"cpu",kernelFunc:Aue};var Nue=Le(cs,r=>1/r),oO={kernelName:cs,backendName:"cpu",kernelFunc:Nue};function Due(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n;oe(o,"resizeBilinear");let p=y.computeStrides(o.shape),[u,l]=i,[m,c,d,f]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(y.sizeFromShape([m,u,l,f])),b=[s&&u>1?c-1:c,s&&l>1?d-1:d],x=[s&&u>1?u-1:u,s&&l>1?l-1:l],T=0,C=b[0]/x[0],v=b[1]/x[1];for(let A=0;A<m;A++)for(let _=0;_<u;_++){let R;a?R=C*(_+.5)-.5:R=C*_;let M=Math.max(0,Math.floor(R)),F=R-M,O=Math.min(c-1,Math.ceil(R)),G=A*p[0]+M*p[1],W=A*p[0]+O*p[1];for(let U=0;U<l;U++){let K;a?K=v*(U+.5)-.5:K=v*U;let H=Math.max(0,Math.floor(K)),X=K-H,j=Math.min(d-1,Math.ceil(K)),re=G+H*p[2],ae=W+H*p[2],ie=G+j*p[2],me=W+j*p[2];for(let ue=0;ue<f;ue++){let le=h[re+ue],he=h[ae+ue],Te=h[ie+ue],Ae=h[me+ue],Oe=le+(Te-le)*X,Be=he+(Ae-he)*X,Qe=Oe+(Be-Oe)*F;g[T++]=Qe}}}return t.makeTensorInfo([m,u,l,f],"float32",g)}var sO={kernelName:hs,backendName:"cpu",kernelFunc:Due};function _ue(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n;oe([s,o],"resizeBilinearGrad");let i=y.computeStrides(o.shape),[p,u,l,m]=o.shape,[,c,d]=s.shape,f=new Float32Array(p*u*l*m),h=[a&&c>1?u-1:u,a&&d>1?l-1:l],g=[a&&c>1?c-1:c,a&&d>1?d-1:d],b=h[0]/g[0],x=h[1]/g[1],T=t.data.get(s.dataId).values,C=0;for(let v=0;v<p;v++){let A=v*i[0];for(let _=0;_<c;_++){let R=_*b,M=Math.floor(R),F=Math.min(Math.ceil(R),u-1),O=A+M*i[1],G=A+F*i[1],W=R-M,U=1-W;for(let K=0;K<d;K++){let H=K*x,X=Math.floor(H),j=Math.min(Math.ceil(H),l-1),re=H-X,ae=1-re,ie=O+X*i[2],me=O+j*i[2],ue=G+X*i[2],le=G+j*i[2],he=U*ae,Te=U*re,Ae=W*ae,Oe=W*re;for(let Be=0;Be<m;Be++){let Qe=T[C++];f[ie+Be]+=Qe*he,f[me+Be]+=Qe*Te,f[ue+Be]+=Qe*Ae,f[le+Be]+=Qe*Oe}}}}return t.makeTensorInfo([p,l,u,m],"float32",f)}var aO={kernelName:di,backendName:"cpu",kernelFunc:_ue};function Rue(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n;oe(o,"resizeNearestNeighbor");let p=y.computeStrides(o.shape),[u,l]=i,[m,c,d,f]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(m*u*l*f),b=[s&&u>1?c-1:c,s&&l>1?d-1:d],x=[s&&u>1?u-1:u,s&&l>1?l-1:l],T=b[0]/x[0],C=b[1]/x[1],v=0;for(let A=0;A<m;A++){let _=A*p[0];for(let R=0;R<u;R++){let M=a?T*(R+.5):T*R,F=Math.min(c-1,s?Math.round(M):Math.floor(M));a&&(F=Math.max(0,F));let O=_+F*p[1];for(let G=0;G<l;G++){let W=a?C*(G+.5):C*G,U=Math.min(d-1,s?Math.round(W):Math.floor(W));a&&(U=Math.max(0,U));let K=O+U*p[2];for(let H=0;H<f;H++){let X=h[K+H];g[v++]=X}}}}return t.makeTensorInfo([m,u,l,f],o.dtype,g)}var iO={kernelName:fs,backendName:"cpu",kernelFunc:Rue};function Mue(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n;oe([s,o],"resizeNearestNeighborGrad");let i=y.computeStrides(o.shape),p=y.computeStrides(s.shape),[u,l,m,c]=o.shape,[,d,f]=s.shape,h=new Float32Array(u*l*m*c),g=t.data.get(s.dataId).values,b=[a&&d>1?l-1:l,a&&f>1?m-1:m],x=[a&&d>1?d-1:d,a&&f>1?f-1:f],T=b[0]/x[0],C=b[1]/x[1],v=1/T,A=1/C,_=Math.ceil(v)*2+2,R=Math.ceil(A)*2+2;for(let M=0;M<u;M++){let F=M*i[0];for(let O=0;O<l;O++){let G=F+O*i[1],W=Math.floor(O*v),U=Math.floor(W-_/2);for(let K=0;K<m;K++){let H=G+K*i[2],X=Math.floor(K*A),j=Math.floor(X-R/2);for(let re=0;re<c;re++){let ae=0;for(let ie=0;ie<_;ie++){let me=ie+U;if(me<0||me>=d)continue;let ue=F+me*p[1],le=me*T,he=Math.min(l-1,a?Math.round(le):Math.floor(le));if(O===he)for(let Te=0;Te<R;Te++){let Ae=Te+j;if(Ae<0||Ae>=f)continue;let Oe=ue+Ae*p[2],Be=Ae*C,Qe=Math.min(m-1,a?Math.round(Be):Math.floor(Be));K===Qe&&(ae+=g[Oe+re])}}h[H+re]=ae}}}}return t.makeTensorInfo(o.shape,o.dtype,h)}var uO={kernelName:ci,backendName:"cpu",kernelFunc:Mue};function Pue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n;oe(o,"reverse");let a=o.shape.length,i=y.parseAxisParam(s,o.shape);if(a===0)return rn({inputs:{x:o},backend:t});let p=new ht(o.shape,o.dtype),u=t.bufferSync(o);for(let l=0;l<p.size;l++){let m=p.indexToLoc(l),c=m.slice();i.forEach(d=>c[d]=o.shape[d]-1-c[d]),p.set(u.get(...c),...m)}return t.makeTensorInfo(p.shape,p.dtype,p.values)}var pO={kernelName:bs,backendName:"cpu",kernelFunc:Pue};var lO={kernelName:Ci,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,p=y.getTypedArrayFromDType(n.dtype,y.sizeFromShape(n.shape)),[u,l,m,c]=n.shape,[d,f]=I.getImageCenter(a,l,m),h=255,g=Math.sin(o),b=Math.cos(o),x=i.data.get(n.dataId).values;for(let C=0;C<u;C++){let v=C*m*l*c;for(let A=0;A<l;A++){let _=A*(m*c);for(let R=0;R<m;R++){let M=R*c;for(let F=0;F<c;F++){let O=[u,A,R,F],G=O[2],W=O[1],U=(G-d)*b-(W-f)*g,K=(G-d)*g+(W-f)*b;U=Math.round(U+d),K=Math.round(K+f);let H=s;if(typeof s!="number"&&(F===3?H=h:H=s[F]),U>=0&&U<m&&K>=0&&K<l){let j=K*(m*c),re=U*c,ae=v+j+re+F;H=x[ae]}let X=v+_+M+F;p[X]=H}}}}return{dataId:i.write(p,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var Fue=Le(ys,r=>{let e=Math.floor(r);return r-e<.5?Math.floor(r):r-e>.5?Math.ceil(r):e%2===0?e:e+1}),mO={kernelName:ys,backendName:"cpu",kernelFunc:Fue};function Eue(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:p,sliceSize:u,strides:l,outputSize:m}=I.calculateShapes(s,o,a),c=!0,d=t.bufferSync(o),f=t.bufferSync(s),h=Oi(d,f,a,m,u,p,i,l,0,c);return t.makeTensorInfo(a,h.dtype,h.values)}var cO={kernelName:fi,backendName:"cpu",kernelFunc:Eue};function Lue(r,e){let t=0,n=r.length,o=0;for(;t<n;)o=Math.floor((t+n)/2),r[o]<e?t=o+1:n=o;return n}function Bue(r,e){let t=0,n=r.length,o=0;for(;t<n;)o=Math.floor((t+n)/2),r[o]<=e?t=o+1:n=o;return n}function dO(r,e,t,n,o,s){let a=y.getArrayFromDType("int32",t*o);for(let i=0;i<t;++i){let p=r.slice(i*n,(i+1)*n),u=i*o;for(let l=0;l<o;++l)a[u+l]=s==="left"?Lue(p,e[l+u]):Bue(p,e[l+u])}return a}function $ue(r){let{inputs:e,backend:t,attrs:n}=r,{sortedSequence:o,values:s}=e,{side:a}=n,i=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,u=dO(i,p,o.shape[0],o.shape[1],s.shape[1],a);return t.makeTensorInfo(s.shape,"int32",u)}var fO={kernelName:hi,backendName:"cpu",kernelFunc:$ue};function Oue(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e;oe([n,o,s],"select");let a=n.shape.length,i=t.data.get(n.dataId).values,p=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,l=Nt(o.dtype,s.dtype),m=y.makeZerosTypedArray(y.sizeFromShape(o.shape),l),c=0,d=a===0||a>1||o.shape.length===1?1:y.sizeFromShape(o.shape.slice(1));for(let f=0;f<i.length;f++)for(let h=0;h<d;h++)i[f]===1?m[c++]=p[f]:m[c++]=u[f];return t.makeTensorInfo(o.shape,l,m)}var hO={kernelName:ea,backendName:"cpu",kernelFunc:Oue};var zue=I.SELU_SCALEALPHA,Gue=I.SELU_SCALE,Wue=Le(Ts,r=>r>=0?Gue*r:zue*(Math.exp(r)-1)),gO={kernelName:Ts,backendName:"cpu",kernelFunc:Wue};var Uue=Le(Is,r=>r<0?-1:r>0?1:0),bO={kernelName:Is,backendName:"cpu",kernelFunc:Uue};var Kue=Le(Cs,r=>Math.sin(r)),yO={kernelName:Cs,backendName:"cpu",kernelFunc:Kue};var Vue=Le(gi,r=>Math.sinh(r)),xO={kernelName:gi,backendName:"cpu",kernelFunc:Vue};var Hue=11920928955078125e-23,TO=Math.log(Hue)+2,que=Le(vs,r=>{let e=r>-TO,t=r<TO,n=Math.exp(r),o;return t?o=n:e?o=r:o=Math.log(1+n),o}),CO={kernelName:vs,backendName:"cpu",kernelFunc:que};function jue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;oe([o],"spaceToBatchND");let i=y.sizeFromShape(s),p=[[0,0]];p.push(...a);for(let A=1+s.length;A<o.shape.length;++A)p.push([0,0]);let u=qT.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:p,constantValue:0}}),l=I.getReshaped(u.shape,s,i,!1),m=I.getPermuted(l.length,s.length,!1),c=I.getReshapedPermuted(u.shape,s,i,!1),h=ot({inputs:{x:u},backend:t,attrs:{shape:l}}),x=Xt({inputs:{x:h},backend:t,attrs:{perm:m}}),v=ot({inputs:{x},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(x),v}var IO={kernelName:ra,backendName:"cpu",kernelFunc:jue};function Xue(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=t.data.get(n.dataId).values,p=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,l=t.data.get(a.dataId).values[0],[m,c,d,f,h]=OT(i,n.shape,n.dtype,p,o.dtype,u,l);return[t.makeTensorInfo(c,n.dtype,m),t.makeTensorInfo([c[0]],o.dtype,d),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var kO={kernelName:Sp,backendName:"cpu",kernelFunc:Xue};function Yue(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(t.data.get(o.dataId).values),i=t.data.get(n.dataId).values,p=Array.from(t.data.get(s.dataId).values),[u,l,m]=zT(i,n.shape,n.dtype,a,p);return[t.makeTensorInfo(l,n.dtype,u),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var vO={kernelName:_u,backendName:"cpu",kernelFunc:Yue};function Zue(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let a=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,[u,l]=Df(a,n.shape,n.dtype,i,p,!0);return t.makeTensorInfo(l,n.dtype,u)}var SO={kernelName:wp,backendName:"cpu",kernelFunc:Zue};function Que(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let a=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,[u,l]=Df(a,n.shape,n.dtype,i,p);return t.makeTensorInfo(l,n.dtype,u)}var wO={kernelName:Ap,backendName:"cpu",kernelFunc:Que};function Jue(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:p,numUpdates:u,sliceSize:l,strides:m,outputSize:c}=I.calculateShapes(s,o,i),d=!1,f=t.bufferSync(o),h;switch(s.dtype){case"bool":{let g=t.bufferSync(s),b=Boolean(t.data.get(a.dataId).values[0]);h=Oi(f,g,i,c,l,u,p,m,b,d);break}case"float32":{let g=t.bufferSync(s),b=t.data.get(a.dataId).values[0];h=Oi(f,g,i,c,l,u,p,m,b,d);break}case"int32":{let g=t.bufferSync(s),b=t.data.get(a.dataId).values[0];h=Oi(f,g,i,c,l,u,p,m,b,d);break}case"string":{let g=t.bufferSync(s),b=y.decodeString(t.data.get(a.dataId).values[0]);h=Oi(f,g,i,c,l,u,p,m,b,d);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return t.makeTensorInfo(i,h.dtype,h.values)}var AO={kernelName:bi,backendName:"cpu",kernelFunc:Jue};function epe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],p=I.prepareSplitSize(o,s,i),u=new Array(o.shape.length).fill(0),l=o.shape.slice();return p.map(m=>{let c=[...l];c[i]=m;let d=Ma({inputs:{x:o},backend:t,attrs:{begin:u,size:c}});return u[i]+=m,d})}var NO={kernelName:na,backendName:"cpu",kernelFunc:epe};var DO={kernelName:ou,backendName:"cpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e;oe(t,"square");let o=n.data.get(t.dataId).values,s=new Float32Array(o.length);for(let i=0;i<o.length;++i){let p=o[i];s[i]=p*p}return{dataId:n.write(s,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};var tpe=Le(Xn,(r,e)=>{let t=e;return isNaN(r)?NaN:r>0?1:t.alpha}),_O={kernelName:Xn,backendName:"cpu",kernelFunc:tpe};function rpe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:p,endMask:u,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n;oe(o,"stridedSlice");let{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:x,end:T,strides:C}=vt.sliceInfo(o.shape,s,a,i,p,u,l,m,c),v;if(h)v=ot({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let A=vt.computeOutShape(x,T,C),_=Ma({inputs:{x:o},backend:t,attrs:{begin:x,size:A}});v=ot({inputs:{x:_},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(_)}else{let A=t.bufferSync(o),_=GT(d,A,C,x);v=t.makeTensorInfo(f,_.dtype,_.values)}return v}var RO={kernelName:yi,backendName:"cpu",kernelFunc:rpe};function npe(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:p,preserveShortSequences:u}=n,{data:l,dataSplits:m}=e,c=t.data.get(l.dataId).values,d=t.data.get(m.dataId).values,[f,h]=Sm(c,d,o,s,a,i,p,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(m.shape,"int32",h)]}var MO={kernelName:su,backendName:"cpu",kernelFunc:npe};function ope(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=t.data.get(s.dataId).values,p=t.data.get(a.dataId).values[0],[u,l,m]=wm(i,p,o),c=l.length;return[t.makeTensorInfo([c,2],"int32",u),t.makeTensorInfo([c],"string",l),t.makeTensorInfo([2],"int32",new Int32Array(m))]}var PO={kernelName:Np,backendName:"cpu",kernelFunc:ope};function spe(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=t.data.get(s.dataId).values,i=Am(a,o);return t.makeTensorInfo(s.shape,"int32",i)}var FO={kernelName:Dp,backendName:"cpu",kernelFunc:spe};var ape=Le(_s,r=>Math.tan(r)),EO={kernelName:_s,backendName:"cpu",kernelFunc:ape};var ipe=Le(Rs,r=>Math.tanh(r)),LO={kernelName:Rs,backendName:"cpu",kernelFunc:ipe};function upe(r){let{inputs:e,backend:t}=r,{tensor:n,indices:o,updates:s}=e,{sliceRank:a,numUpdates:i,sliceSize:p,strides:u,outputSize:l}=I.calculateShapes(s,o,n.shape),m=!1,c=t.bufferSync(o),d=t.bufferSync(s),f=t.bufferSync(n),h=Oi(c,d,n.shape,l,p,i,a,u,f,m);return t.makeTensorInfo(n.shape,h.dtype,h.values)}var BO={kernelName:Du,backendName:"cpu",kernelFunc:upe};function ppe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;oe(o,"tile");let a=WT(t.bufferSync(o),s);return t.makeTensorInfo(a.shape,a.dtype,a.values)}var $O={kernelName:_n,backendName:"cpu",kernelFunc:ppe};function lpe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n;oe(o,"topk");let i=t.data.get(o.dataId).values,[p,u]=UT(i,o.shape,o.dtype,s,a);return[t.makeTensorInfo(p.shape,p.dtype,p.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}var OO={kernelName:xi,backendName:"cpu",kernelFunc:lpe};function mpe(r){let{inputs:e,attrs:t,backend:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:p,outputShape:u}=t,[l,m,c,d]=o.shape,[f,h]=u??[m,c],g=[l,f,h,d],b=y.computeStrides(o.shape),x=b[0],T=b[1],C=b[2],v=y.computeStrides(g),A=v[0],_=v[1],R=v[2],M=y.getTypedArrayFromDType(o.dtype,y.sizeFromShape(g));M.fill(p);let F=n.data.get(o.dataId).values,O=n.data.get(s.dataId).values;for(let W=0;W<l;++W){let U=s.shape[0]===1?O:O.subarray(W*8,W*8+8);for(let K=0;K<f;++K)for(let H=0;H<h;++H)for(let X=0;X<d;++X){let j,re=U[6]*H+U[7]*K+1;if(re===0)continue;let ae=(U[0]*H+U[1]*K+U[2])/re,ie=(U[3]*H+U[4]*K+U[5])/re,me=zO(ae,c,i),ue=zO(ie,m,i);switch(a){case"nearest":j=gpe(F,m,c,x,T,C,W,ue,me,X,p);break;case"bilinear":j=bpe(F,m,c,x,T,C,W,ue,me,X,p);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}let le=W*A+K*_+H*R+X;M[le]=j}return n.makeTensorInfo(g,o.dtype,M)}return{dataId:n.write(M,g,o.dtype),shape:o.shape,dtype:o.dtype}}var GO={kernelName:Ti,backendName:"cpu",kernelFunc:mpe};function zO(r,e,t){switch(t){case"reflect":return cpe(r,e);case"wrap":return dpe(r,e);case"nearest":return hpe(r,e);case"constant":default:return fpe(r,e)}}function cpe(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=2*e;t<n&&(t=n*Math.trunc(-t/n)+t),t=t<-e?t+n:-t-1}else if(t>e-1)if(e<=1)t=0;else{let n=2*e;t-=n*Math.trunc(t/n),t>=e&&(t=n-t-1)}return y.clamp(0,t,e-1)}function dpe(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=e-1;t+=e*(Math.trunc(-t/n)+1)}else if(t>e-1)if(e<=1)t=0;else{let n=e-1;t-=e*Math.trunc(t/n)}return y.clamp(0,t,e-1)}function fpe(r,e){return r}function hpe(r,e){return y.clamp(0,r,e-1)}function wg(r,e,t,n,o,s,a,i,p,u,l){let m=a*n+i*o+p*s+u;return 0<=i&&i<e&&0<=p&&p<t?r[m]:l}function gpe(r,e,t,n,o,s,a,i,p,u,l){let m=Math.round(i),c=Math.round(p);return wg(r,e,t,n,o,s,a,m,c,u,l)}function bpe(r,e,t,n,o,s,a,i,p,u,l){let m=Math.floor(i),c=Math.floor(p),d=m+1,f=c+1,h=(f-p)*wg(r,e,t,n,o,s,a,m,c,u,l)+(p-c)*wg(r,e,t,n,o,s,a,m,f,u,l),g=(f-p)*wg(r,e,t,n,o,s,a,d,c,u,l)+(p-c)*wg(r,e,t,n,o,s,a,d,f,u,l);return(d-i)*h+(i-m)*g}function ype(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;oe(s,"unique");let a=n.data.get(s.dataId).values,{outputValues:i,outputShape:p,indices:u}=Nm(a,o,s.shape,s.dtype);return[n.makeTensorInfo(p,s.dtype,i),n.makeTensorInfo([u.length],"int32",u)]}var WO={kernelName:_p,backendName:"cpu",kernelFunc:ype};function xpe(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape.length,i=o.shape[s],p=new Array(a-1),u=0;for(let d=0;d<a;d++)d!==s&&(p[u++]=o.shape[d]);let l=new Array(a).fill(0),m=o.shape.slice();m[s]=1;let c=new Array(i);for(let d=0;d<c.length;d++){l[s]=d;let f=Ma({inputs:{x:o},backend:t,attrs:{begin:l,size:m}});c[d]=ot({inputs:{x:f},backend:t,attrs:{shape:p}}),t.disposeIntermediateTensorInfo(f)}return c}var UO={kernelName:oa,backendName:"cpu",kernelFunc:xpe};function Tpe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:a}=n;oe(o,"unsortedSegmentSum");let i=o.shape.length,p=s.shape.length,u=[],l=[],m=i-p,c=s;for(let f=0;f<m;++f){let h=Mf({inputs:{input:c},backend:t,attrs:{dim:f+1}});c=h,l.push(h)}for(let f=0;f<a;++f){let h=y.createScalarValue(f,"int32"),g=t.makeTensorInfo([],"int32",h),b=FD({inputs:{a:g,b:c},backend:t}),x=_a({inputs:{x:b},backend:t,attrs:{dtype:"float32"}}),T=Im({inputs:{a:x,b:o},backend:t}),C=Zu({inputs:{x:T},backend:t,attrs:{axis:0,keepDims:!1}});u.push(C),l.push(g),l.push(b),l.push(x),l.push(T),l.push(C)}let d=d0({inputs:u,backend:t,attrs:{axis:0}});return l.forEach(f=>t.disposeIntermediateTensorInfo(f)),d}var KO={kernelName:Rp,backendName:"cpu",kernelFunc:Tpe};var Cpe=[g$,SB,b$,y$,_B,x$,T$,C$,I$,k$,v$,S$,w$,A$,N$,_$,R$,M$,P$,h$,F$,E$,L$,B$,DB,RB,$$,wB,O$,G$,W$,U$,K$,V$,H$,q$,j$,X$,Y$,Z$,Q$,J$,e3,t3,r3,n3,o3,s3,a3,i3,p3,p$,l3,MB,m3,PB,c3,FB,d3,f3,h3,EB,LB,g3,b3,y3,x3,BB,$B,AB,T3,z$,C3,I3,k3,l$,OB,zB,v3,GB,S3,w3,A3,N3,D3,_3,R3,WB,M3,P3,F3,E3,B3,$3,O3,UB,z3,G3,K3,KB,VB,V3,H3,q3,HB,j3,Z3,Q3,qT,J3,m$,jB,eO,tO,rO,nO,NB,kg,oO,c$,d$,f$,sO,aO,iO,uO,pO,lO,mO,JB,cO,fO,hO,gO,t$,bO,yO,xO,r$,W3,CO,IO,kO,vO,SO,wO,AO,NO,o$,DO,s$,a$,_O,RO,MO,PO,FO,i$,u3,EO,LO,BO,$O,OO,GO,qB,WO,UO,KO,X3];for(let r of Cpe)Ru(r);var Lf={};Ye(Lf,{assertNotComplex:()=>zi,bindCanvasToFramebuffer:()=>_pe,bindColorTextureToFramebuffer:()=>_g,bindTextureToProgramUniformSampler:()=>D0,bindTextureUnit:()=>jO,bindVertexBufferToProgramAttribute:()=>JT,callAndCheck:()=>xe,canBeRepresented:()=>b0,createFragmentShader:()=>x0,createFramebuffer:()=>w0,createProgram:()=>T0,createStaticIndexBuffer:()=>k0,createStaticVertexBuffer:()=>I0,createTexture:()=>v0,createVertexShader:()=>y0,getBatchDim:()=>Ju,getExtensionOrThrow:()=>Pf,getFramebufferErrorMessage:()=>XO,getMaxTexturesInShader:()=>M0,getNumChannels:()=>Npe,getProgramUniformLocation:()=>N0,getProgramUniformLocationOrThrow:()=>A0,getRowsCols:()=>ep,getShapeAs3D:()=>Ef,getTextureShapeFromLogicalShape:()=>_0,getWebGLDisjointQueryTimerVersion:()=>P0,getWebGLErrorMessage:()=>qO,getWebGLMaxTextureSize:()=>R0,hasExtension:()=>so,isCapableOfRenderingToFloatTexture:()=>F0,isDownloadFloatTextureEnabled:()=>E0,isReshapeFree:()=>ol,isWebGLFenceEnabled:()=>L0,isWebGLVersionEnabled:()=>tC,linkProgram:()=>C0,logShaderSourceAndInfoLog:()=>QT,resetMaxTextureSize:()=>Rpe,resetMaxTexturesInShader:()=>Mpe,unbindColorTextureFromFramebuffer:()=>eC,unbindTextureUnit:()=>Dpe,validateFramebuffer:()=>Ff,validateProgram:()=>Dg,validateTextureSize:()=>S0});var _m={},jT={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function f0(r,e){_m[r]=e}function oo(r,e){if(!(r in _m)||e!=null){let n=kpe(r,e);if(n!==null)_m[r]=n;else return console.log("Could not get context for WebGL version",r),null}let t=_m[r];return t==null||t.isContextLost()?(delete _m[r],oo(r)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),_m[r])}function Ipe(r){if(!L().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&r===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function kpe(r,e){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=e??Ipe(r);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete _m[r]},!1),L().getBool("SOFTWARE_WEBGL_ENABLED")&&(jT.failIfMajorPerformanceCaveat=!1),r===1?t.getContext("webgl",jT)||t.getContext("experimental-webgl",jT):t.getContext("webgl2",jT)}function Rm(r,e){return[e,r]}function VO(r,e){return r*e}function Ag(r){let e=y.sizeFromShape(r),t=Math.ceil(e/4);return y.sizeToSquarishShape(t)}function xu(r,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(r/2))]}function HO(r,e){let[t,n]=xu(r,e);return t*n*4}function Ng(r,e){let t=r,n,o,s,a,i,p,u,l,m,c;return L().getNumber("WEBGL_VERSION")===2?(n=t.R32F,o=t.R16F,s=t.RGBA16F,a=t.RGBA32F,i=t.RED,u=4,l=1,m=t.HALF_FLOAT,c=t.FLOAT,p=t.RGBA8):(n=r.RGBA,o=r.RGBA,s=r.RGBA,a=t.RGBA,i=r.RGBA,u=4,l=4,m=e!=null?e.HALF_FLOAT_OES:null,c=r.FLOAT,p=r.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:p,downloadUnpackNumChannels:u,defaultNumChannels:l,textureTypeHalfFloat:m,textureTypeFloat:c}}function xe(r,e){let t=e();return L().getBool("DEBUG")&&vpe(r),t}function vpe(r){let e=r.getError();if(e!==r.NO_ERROR)throw new Error("WebGL Error: "+qO(r,e))}var Spe=596e-10,wpe=65504;function b0(r){return!!(L().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||Spe<Math.abs(r)&&Math.abs(r)<wpe)}function qO(r,e){switch(e){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Pf(r,e){return Qu(r,()=>r.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function y0(r,e){let t=Qu(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(xe(r,()=>r.shaderSource(t,e)),xe(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function x0(r,e){let t=Qu(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(xe(r,()=>r.shaderSource(t,e)),xe(r,()=>r.compileShader(t)),L().get("ENGINE_COMPILE_ONLY"))return t;if(r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw QT(e,r.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}var Ape=/ERROR: [0-9]+:([0-9]+):/g;function QT(r,e){let t=Ape.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(r);return}let n=+t[1],o=r.split(`
`),s=o.length.toString().length+2,a=o.map((m,c)=>y.rightPad((c+1).toString(),s)+m),i=0;for(let m=0;m<a.length;m++)i=Math.max(a[m].length,i);let p=a.slice(0,n-1),u=a.slice(n-1,n),l=a.slice(n);console.log(p.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${y.rightPad(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function T0(r){return Qu(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function C0(r,e){if(xe(r,()=>r.linkProgram(e)),!L().get("ENGINE_COMPILE_ONLY")&&r.getProgramParameter(e,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Dg(r,e){if(xe(r,()=>r.validateProgram(e)),r.getProgramParameter(e,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function I0(r,e){let t=Qu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return xe(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),xe(r,()=>r.bufferData(r.ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function k0(r,e){let t=Qu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return xe(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t)),xe(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function Npe(){return L().getNumber("WEBGL_VERSION")===2?1:4}function v0(r){return Qu(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function S0(r,e){let t=L().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||e<=0){let n=`[${r}x${e}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(r>t||e>t){let n=`[${r}x${e}]`,o=`[${t}x${t}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+o+".")}}function w0(r){return Qu(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function JT(r,e,t,n,o,s,a){let i=r.getAttribLocation(e,t);return i===-1?!1:(xe(r,()=>r.bindBuffer(r.ARRAY_BUFFER,n)),xe(r,()=>r.vertexAttribPointer(i,o,r.FLOAT,!1,s,a)),xe(r,()=>r.enableVertexAttribArray(i)),!0)}function jO(r,e,t){YO(r,t),xe(r,()=>r.activeTexture(r.TEXTURE0+t)),xe(r,()=>r.bindTexture(r.TEXTURE_2D,e))}function Dpe(r,e){YO(r,e),xe(r,()=>r.activeTexture(r.TEXTURE0+e)),xe(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function A0(r,e,t){return Qu(r,()=>r.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function N0(r,e,t){return r.getUniformLocation(e,t)}function D0(r,e,t,n){xe(r,()=>jO(r,e,n)),xe(r,()=>r.uniform1i(t,n))}function _pe(r){xe(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,null)),xe(r,()=>r.viewport(0,0,r.canvas.width,r.canvas.height)),xe(r,()=>r.scissor(0,0,r.canvas.width,r.canvas.height))}function _g(r,e,t){xe(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),xe(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0))}function eC(r,e){xe(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),xe(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function Ff(r){let e=r.checkFramebufferStatus(r.FRAMEBUFFER);if(e!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+XO(r,e))}function XO(r,e){switch(e){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Qu(r,e,t){let n=xe(r,()=>e());if(n==null)throw new Error(t);return n}function YO(r,e){let t=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=e+r.TEXTURE0;if(n<r.TEXTURE0||n>t){let o=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${o}.`)}}function Ju(r,e=2){return y.sizeFromShape(r.slice(0,r.length-e))}function ep(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function Ef(r){let e=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(e=[Ju(r),...ep(r)]),e}function _0(r,e=!1){let t=L().getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=L().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&L().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=t/2),e&&(t=t*2,n=n*2,r=r.map((i,p)=>p>=r.length-2?y.nearestLargerEven(r[p]):r[p]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=y.squeezeShape(r).newShape);let o=y.sizeFromShape(r),s=null;r.length<=1&&o<=t?s=[1,o]:r.length===2&&r[0]<=t&&r[1]<=t?s=r:r.length===3&&r[0]*r[1]<=t&&r[2]<=t?s=[r[0]*r[1],r[2]]:r.length===3&&r[0]<=t&&r[1]*r[2]<=t?s=[r[0],r[1]*r[2]]:r.length===4&&r[0]*r[1]*r[2]<=t&&r[3]<=t?s=[r[0]*r[1]*r[2],r[3]]:r.length===4&&r[0]<=t&&r[1]*r[2]*r[3]<=t&&(s=[r[0],r[1]*r[2]*r[3]]);let a=s!=null&&Math.max(...s)>n&&Math.min(...s)<=(e?2:1)&&Math.min(...s)>0;if(s==null||a)if(e){let i=Ju(r),p=2,u=2;r.length&&([p,u]=ep(r)),o=i*(p/2)*(u/2),s=y.sizeToSquarishShape(o).map(l=>l*2)}else s=y.sizeToSquarishShape(o);return s}function XT(r){return r%2===0}function ol(r,e){if(r=r.slice(-2),e=e.slice(-2),y.arraysEqual(r,e)||!r.length||!e.length||r[0]===0||r[1]===0||e[0]===0||e[1]===0)return!0;if(r.length!==e.length){let t=r[r.length-1],n=e[e.length-1];if(t===n||XT(t)&&XT(n)&&(r[0]===1||e[0]===1))return!0}return r[1]===e[1]&&XT(r[0])&&XT(e[0])}var YT,ZT;function R0(r){if(YT==null){let e=oo(r);YT=e.getParameter(e.MAX_TEXTURE_SIZE)}return YT}function Rpe(){YT=null}function Mpe(){ZT=null}function M0(r){if(ZT==null){let e=oo(r);ZT=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ZT)}function P0(r){if(r===0)return 0;let e,t=oo(r);return so(t,"EXT_disjoint_timer_query_webgl2")&&r===2?e=2:so(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function so(r,e){return r.getExtension(e)!=null}function tC(r){try{if(oo(r)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function F0(r){if(r===0)return!1;let e=oo(r);if(r===1){if(!so(e,"OES_texture_float"))return!1}else if(!so(e,"EXT_color_buffer_float"))return!1;return g0(e)}function E0(r){if(r===0)return!1;let e=oo(r);if(r===1){if(!so(e,"OES_texture_float")||!so(e,"WEBGL_color_buffer_float"))return!1}else{if(so(e,"EXT_color_buffer_float"))return g0(e);let n="EXT_color_buffer_half_float";if(so(e,n)){let o=e.getExtension(n);return Ppe(e,o)}return!1}return g0(e)}function g0(r){let e=Ng(r),t=r.createTexture();r.bindTexture(r.TEXTURE_2D,t);let n=1,o=1;r.texImage2D(r.TEXTURE_2D,0,e.internalFormatFloat,n,o,0,e.textureFormatFloat,e.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(t),r.deleteFramebuffer(s),a}function Ppe(r,e){let t=Ng(r,e),n=r.createTexture();r.bindTexture(r.TEXTURE_2D,n);let o=1,s=1;r.texImage2D(r.TEXTURE_2D,0,t.internalFormatHalfFloat,o,s,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);let a=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,a),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,n,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(n),r.deleteFramebuffer(a),i}function L0(r){return r!==2?!1:oo(r).fenceSync!=null}function zi(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&y.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}var Ee=L();Ee.registerFlag("HAS_WEBGL",()=>Ee.getNumber("WEBGL_VERSION")>0);Ee.registerFlag("WEBGL_VERSION",()=>tC(2)?2:tC(1)?1:0);Ee.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ee.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ee.get("WEBGL_VERSION")===2);Ee.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ee.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ee.registerFlag("WEBGL_PACK",()=>Ee.getBool("HAS_WEBGL"));Ee.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ee.getBool("WEBGL_PACK"));Ee.registerFlag("WEBGL_PACK_CLIP",()=>Ee.getBool("WEBGL_PACK"));Ee.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ee.getBool("WEBGL_PACK"));Ee.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ee.getBool("WEBGL_PACK"));Ee.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ee.getBool("WEBGL_PACK"));Ee.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ee.getBool("WEBGL_PACK"));Ee.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ee.getBool("WEBGL_PACK"));Ee.registerFlag("WEBGL_PACK_REDUCE",()=>Ee.getBool("WEBGL_PACK"));Ee.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ee.getBool("WEBGL_PACK"));Ee.registerFlag("WEBGL_CONV_IM2COL",()=>Ee.getBool("WEBGL_PACK"));Ee.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>R0(Ee.getNumber("WEBGL_VERSION")));Ee.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>M0(Ee.getNumber("WEBGL_VERSION")));Ee.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=Ee.getNumber("WEBGL_VERSION");return r===0?0:P0(r)});Ee.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ee.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Fp.isMobile());Ee.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>F0(Ee.getNumber("WEBGL_VERSION")));Ee.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ee.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ee.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ee.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>E0(Ee.getNumber("WEBGL_VERSION")));Ee.registerFlag("WEBGL_FENCE_API_ENABLED",()=>L0(Ee.getNumber("WEBGL_VERSION")));Ee.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ee.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ee.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});Ee.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Fp.isMobile()?1:-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});Ee.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ee.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ee.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ee.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Ee.registerFlag("WEBGL_EXP_CONV",()=>!1);Ee.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Ee.getBool("IS_TEST"));Ee.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Ee.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Ee.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Ee.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function Yt(){let r,e,t,n,o,s,a,i,p,u;return L().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",e="in",t="out",n="in",o="texture",s="outputColor",a="out vec4 outputColor;",i=L().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",p="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",e="attribute",t="varying",n="varying",o="texture2D",s="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,p=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:e,varyingVs:t,varyingFs:n,texture2D:o,output:s,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:p,defineRound:u}}function Gi(r,e,t="index"){let n=y.computeStrides(e);return n.map((o,s)=>{let a=`int ${r[s]} = ${t} / ${o}`,i=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * ${o}`:`index -= ${r[s]} * ${o}`;return`${a}; ${i};`}).join("")}function Mm(r,e,t="index"){let n=y.computeStrides(e);return n.map((o,s)=>{let a=`int ${r[s]} = ${t} / outShapeStrides[${s}]`,i=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * outShapeStrides[${s}]`:`index -= ${r[s]} * outShapeStrides[${s}]`;return`${a}; ${i};`}).join("")}function Fpe(r,e){let t=r.length,n=r.map(s=>`${e}[${s}]`),o=new Array(t-1);o[t-2]=n[t-1];for(let s=t-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function ZO(r,e,t="index"){let n=r.map((s,a)=>a),o=Fpe(n,e);return o.map((s,a)=>{let i=`int ${r[a]} = ${t} / ${o[a]}`,p=a===o.length-1?`int ${r[a+1]} = ${t} - ${r[a]} * ${o[a]}`:`index -= ${r[a]} * ${o[a]}`;return`${i}; ${p};`}).join("")}function Bf(r){let e=y.computeStrides(r).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function $f(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var rC=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:QO}=I;function JO(r,e,t){let n=[];if(r.forEach(d=>{let f=y.sizeFromShape(d.shapeInfo.logicalShape);if(d.shapeInfo.isUniform?n.push(`uniform float ${d.name}${f>1?`[${f}]`:""};`):(n.push(`uniform sampler2D ${d.name};`),n.push(`uniform int offset${d.name};`)),t.enableShapeUniforms){let{uniformShape:h}=nC(t.packedInputs,d.shapeInfo.logicalShape,d.shapeInfo.texShape);switch(h.length){case 1:n.push(`uniform int ${d.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${d.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${d.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${d.name}Shape;`);break;default:break}n.push(`uniform ivec2 ${d.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break;default:break}n.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(d=>{n.push(`uniform ${d.type} ${d.name}${d.arrayIndex?`[${d.arrayIndex}]`:""};`)});let o=n.join(`
`),s=r.map(d=>Epe(d,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,i=Yt(),p=$pe(i),u,l,m=Gpe(i);return e.isPacked?(u=Lpe(e.logicalShape,a,t.enableShapeUniforms),l=zpe(i)):(u=Bpe(e.logicalShape,a,t.enableShapeUniforms),l=Ope(i)),t.packedInputs&&(m+=Vpe),[m,p,l,o,u,s,t.userCode].join(`
`)}function zf(r,e=!1){let t=r.shapeInfo.logicalShape;switch(t.length){case 0:return nle(r,e);case 1:return sle(r,e);case 2:return ile(r,e);case 3:return ple(r,e);case 4:return mle(r,e);case 5:return cle(r);case 6:return dle(r);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function ez(r,e){switch(r.shapeInfo.logicalShape.length){case 0:return rle(r);case 1:return ole(r,e);case 2:return ale(r,e);case 3:return ule(r,e);default:return lle(r,e)}}function Epe(r,e,t=!1,n){let o="";t?o+=ez(r,n):o+=zf(r,n);let s=r.shapeInfo.logicalShape,a=e.logicalShape;return s.length<=a.length&&(t?o+=fle(r,e):o+=hle(r,e)),o}function Lpe(r,e,t){switch(r.length){case 0:return tz();case 1:return Hpe(r,e,t);case 2:return ele(r,e,t);case 3:return jpe(r,e,t);default:return Ype(r,e,t)}}function Bpe(r,e,t){switch(r.length){case 0:return tz();case 1:return qpe(r,e,t);case 2:return tle(r,e,t);case 3:return Xpe(r,e,t);case 4:return Zpe(r,e,t);case 5:return Qpe(r,e);case 6:return Jpe(r,e);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function $pe(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function Ope(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function zpe(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function Gpe(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${Wpe}
    ${Upe}
    ${Kpe}
  `}var Wpe=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Upe=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Kpe=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Vpe=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function tz(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function Hpe(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return n[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function qpe(r,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function jpe(r,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[2]/2),s=o*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function Xpe(r,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Mm(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let n=Gi(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function Ype(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[r.length-1]/2),s=o*Math.ceil(r[r.length-2]/2),a=s,i="",p="b, r, c";for(let u=2;u<r.length-1;u++)a*=r[r.length-u-1],i=`
      int b${u} = index / ${a};
      index -= b${u} * ${a};
    `+i,p=`b${u}, `+p;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${i}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${r.length}(${p});
    }
  `}function Zpe(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Mm(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let n=Gi(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function Qpe(r,e){let t=Gi(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Jpe(r,e){let t=Gi(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function ele(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(y.arraysEqual(r,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let o=Math.ceil(r[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function tle(r,e,t){return y.arraysEqual(r,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:r[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function Pm(r){return`offset${r}`}function rle(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),n=Yt();return`
    vec4 ${t}() {
      return ${n.texture2D}(${e}, halfCR);
    }
  `}function nle(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;let[o,s]=r.shapeInfo.texShape;if(o===1&&s===1)return`
      float ${n}() {
        return sampleTexture(${t}, halfCR);
      }
    `;let a=Pm(t);if(e)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;let[i,p]=r.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${i}, ${p}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function ole(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=r.shapeInfo.texShape,s=Yt();if(e)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${t}, uv);
    }
  `;let a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${s.texture2D}(${t}, uv);
    }
  `}function sle(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${Gf(r)}
      }
    `;let o=r.shapeInfo.texShape,s=o[0],a=o[1];if(a===1&&s===1)return`
      float ${n}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;let i=Pm(t);return a===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);
        return sampleTexture(${t}, uv);
      }
    `:s===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${i});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});
      return sampleTexture(${t}, uv);
    }
  `}function ale(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=s[0],i=s[1],p=Yt();if(s!=null&&y.arraysEqual(t,s))return e?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${p.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${p.texture2D}(${n}, uv);
      }
    `;if(e)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${p.texture2D}(${n}, uv);
    }
  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],l=Math.ceil(t[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${u[0]}, ${u[1]}, row, col);
      return ${p.texture2D}(${n}, uv);
    }
  `}function ile(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape;if(s!=null&&y.arraysEqual(t,s)){if(e)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;let c=s[0],d=s[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${d}.0, ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:a,keptDims:i}=y.squeezeShape(t),p=a;if(p.length<t.length){let c=Wf(r,p),d=["row","col"];return`
      ${zf(c,e)}
      float ${o}(int row, int col) {
        return ${o}(${Uf(d,i)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Gf(r)}
      }
    `;let u=s[0],l=s[1],m=Pm(n);return l===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${n}, uv);
    }
  `:u===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:e?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${m};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${m};
    vec2 uv = uvFromFlat(${u}, ${l}, index);
    return sampleTexture(${n}, uv);
  }
`}function ule(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(t[0]===1){let c=t.slice(1),d=[1,2],f=Wf(r,c),h=["b","row","col"];return`
        ${ez(f,e)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${Uf(h,d)});
        }
      `}let i=Yt();if(e)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `;let p=a[0],u=a[1],l=Math.ceil(t[2]/2),m=l*Math.ceil(t[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${p}, ${u}, ${m}, ${l}, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `}function ple(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],a=t[2],{newShape:i,keptDims:p}=y.squeezeShape(t),u=i;if(u.length<t.length){let h=Wf(r,u),g=["row","col","depth"];return`
        ${zf(h,e)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${Uf(g,p)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${a}, 1)));
        ${Gf(r)}
      }
    `;let l=r.shapeInfo.texShape,m=l[0],c=l[1],d=r.shapeInfo.flatOffset;if(c===s&&d==null)return e?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${c}.0, ${m}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(c===a&&d==null)return e?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${m}.0);
      return sampleTexture(${n}, uv);
    }
  `;let f=Pm(n);return e?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${a} + depth + ${f};
        vec2 uv = uvFromFlat(${m}, ${c}, index);
        return sampleTexture(${n}, uv);
      }
  `}function lle(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=Yt();if(e)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${t}, uv);
    }
  `;let s=r.shapeInfo.logicalShape,a=s.length,i=r.shapeInfo.texShape,p=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=p[0],l=p[1],m=Math.ceil(s[a-1]/2),c=m*Math.ceil(s[a-2]/2),d="int b, int row, int col",f=`b * ${c} + (row / 2) * ${m} + (col / 2)`;for(let h=2;h<a-1;h++)d=`int b${h}, `+d,c*=s[a-h-1],f=`b${h} * ${c} + `+f;return`
    vec4 ${n}(${d}) {
      int index = ${f};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${u});
      return ${o.texture2D}(${t}, uv);
    }
  `}function mle(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],a=t[2]*s,i=t[1]*a,{newShape:p,keptDims:u}=y.squeezeShape(t);if(p.length<t.length){let x=Wf(r,p),T=["row","col","depth","depth2"];return`
      ${zf(x,e)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${Uf(T,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${s}, 1)));
        ${Gf(r)}
      }
    `;let l=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1],f=`int stride2 = ${n}Shape[3];`,h=`int stride1 = ${n}Shape[2] * stride2;`,g=`int stride0 = ${n}Shape[1] * stride1;`;if(d===i&&l==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${f}
        ${h}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(d===s&&l==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;let b=Pm(n);return e?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${h}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${b});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${c}, ${d}, index + ${b});
      return sampleTexture(${n}, uv);
    }
  `}function cle(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[4],s=e[3]*o,a=e[2]*s,i=e[1]*a,{newShape:p,keptDims:u}=y.squeezeShape(e);if(p.length<e.length){let h=Wf(r,p),g=["row","col","depth","depth2","depth3"];return`
      ${zf(h)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${Uf(g,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${s}, ${o})) +
          depth3;
        ${Gf(r)}
      }
    `;let l=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1];if(d===i&&l==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(d===o&&l==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${t}, uv);
      }
    `;let f=Pm(t);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${s} +
          depth2 * ${o} + depth3 + ${f};
      vec2 uv = uvFromFlat(${c}, ${d}, index);
      return sampleTexture(${t}, uv);
    }
  `}function dle(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:o,keptDims:s}=y.squeezeShape(e);if(o.length<e.length){let g=Wf(r,o),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${zf(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${Uf(b,s)});
      }
    `}let a=e[5],i=e[4]*a,p=e[3]*i,u=e[2]*p,l=e[1]*u;if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${u}, ${p}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${Gf(r)}
      }
    `;let m=r.shapeInfo.flatOffset,c=r.shapeInfo.texShape,d=c[0],f=c[1];if(f===l&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${p}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===a&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;let h=Pm(t);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${u} + depth * ${p} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${h};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Gf(r){let e=r.name,t=y.sizeFromShape(r.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function fle(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=r.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=QO(r.shapeInfo.logicalShape,e.logicalShape),p=Ke(a),u=a-s,l,m=["x","y","z","w","u","v"];s===0?l="":a<2&&i.length>=1?l="coords = 0;":l=i.map(x=>`coords.${m[x+u]} = 0;`).join(`
`);let c="";a<2&&s>0?c="coords":c=r.shapeInfo.logicalShape.map((x,T)=>`coords.${m[T+u]}`).join(", ");let d="return outputValue;",h=y.sizeFromShape(r.shapeInfo.logicalShape)===1,b=y.sizeFromShape(e.logicalShape)===1;if(s===1&&!h&&!b)d=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(h&&!b)a===1?d=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:d=`
        return vec4(outputValue.x);
      `;else if(i.length){let x=s-2,T=s-1;i.indexOf(x)>-1&&i.indexOf(T)>-1?d="return vec4(outputValue.x);":i.indexOf(x)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(T)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${p} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${n}(${c});
      ${d}
    }
  `}function hle(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=e.texShape,a=r.shapeInfo.texShape,i=r.shapeInfo.logicalShape.length,p=e.logicalShape.length;if(!r.shapeInfo.isUniform&&i===p&&r.shapeInfo.flatOffset==null&&y.arraysEqual(a,s))return`
      float ${o}() {
        return sampleTexture(${t}, resultUV);
      }
    `;let u=Ke(p),l=QO(r.shapeInfo.logicalShape,e.logicalShape),m=p-i,c,d=["x","y","z","w","u","v"];i===0?c="":p<2&&l.length>=1?c="coords = 0;":c=l.map(h=>`coords.${d[h+m]} = 0;`).join(`
`);let f="";return p<2&&i>0?f="coords":f=r.shapeInfo.logicalShape.map((h,g)=>`coords.${d[g+m]}`).join(", "),`
    float ${o}() {
      ${u} coords = getOutputCoords();
      ${c}
      return get${n}(${f});
    }
  `}function Ke(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function nC(r,e,t){let{newShape:n,keptDims:o}=y.squeezeShape(e),s=e.length,a=r&&s===3&&e[0]===1,i=a?e.slice(1):n,p=!r&&s>1&&!y.arraysEqual(e,t)&&n.length<s||a;return{useSqueezeShape:p,uniformShape:p?i:e,keptDims:o}}function Wf(r,e){let t=JSON.parse(JSON.stringify(r));return t.shapeInfo.logicalShape=e,t}function Uf(r,e){return e.map(t=>r[t]).join(", ")}function nz(r,e,t,n){let o=t.map((l,m)=>{let c={logicalShape:l.shape,texShape:l.isUniform?null:l.texData.texShape,isUniform:l.isUniform,isPacked:l.isUniform?!1:l.texData.isPacked,flatOffset:null};return l.texData!=null&&l.texData.slice!=null&&l.texData.slice.flatOffset>0&&(c.flatOffset=l.texData.slice.flatOffset),{name:e.variableNames[m],shapeInfo:c}}),s=o.map(l=>l.shapeInfo),a={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},i=JO(o,a,e),p=x0(r.gl,i),u=r.createProgram(p);return L().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:p,source:i,webGLProgram:u,inShapeInfos:s,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:{program:e,fragmentShader:p,source:i,webGLProgram:u,inShapeInfos:s,outShapeInfo:a,...B0(r,e,u)}}function B0(r,e,t){let n=[],o=[],s,a,i,p=null,u=null;u=r.getUniformLocation(t,"NAN",!1),L().getNumber("WEBGL_VERSION")===1&&(p=r.getUniformLocation(t,"INFINITY",!1));let l=!1;for(let m of e.variableNames){let c={name:m,uniform:r.getUniformLocation(t,m,l),offset:r.getUniformLocation(t,`offset${m}`,l)};e.enableShapeUniforms&&(c.shape=r.getUniformLocation(t,`${m}Shape`,l),c.texShape=r.getUniformLocation(t,`${m}TexShape`,l)),n.push(c)}if(e.enableShapeUniforms&&(s=r.getUniformLocation(t,"outShape",l),i=r.getUniformLocation(t,"outShapeStrides",l),a=r.getUniformLocation(t,"outTexShape",l)),e.customUniforms)for(let m of e.customUniforms)o.push(r.getUniformLocation(t,m.name,l));return{variablesLocations:n,customUniformLocations:o,infLoc:p,nanLoc:u,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:a}}function rz(r,e){if(r.length!==e.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${e.length} inputs`);r.forEach((t,n)=>{let o=t.logicalShape,s=e[n],a=s.shape;if(!y.arraysEqual(o,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${a} must match`);if(t.isUniform&&s.isUniform)return;let i=t.texShape,p=s.isUniform?null:s.texData.texShape;if(!y.arraysEqual(i,p))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${p} must match`)})}function oz(r,e,t,n,o){e.program.enableShapeUniforms||(rz(e.inShapeInfos,t),rz([e.outShapeInfo],[n]));let s=n.texData.texture,a=n.texData.texShape;n.texData.isPacked?r.setOutputPackedMatrixTexture(s.texture,a[0],a[1]):r.setOutputMatrixTexture(s.texture,a[0],a[1]),r.setProgram(e.webGLProgram),L().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&r.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&r.gl.uniform1f(e.nanLoc,NaN);for(let p=0;p<t.length;++p){let u=t[p],{uniform:l,offset:m,shape:c,texShape:d}=e.variablesLocations[p];if(c){let{uniformShape:f}=nC(e.program.packedInputs,u.shape,u.texData.texShape);switch(f.length){case 1:r.gl.uniform1iv(c,new Int32Array(f));break;case 2:r.gl.uniform2iv(c,new Int32Array(f));break;case 3:r.gl.uniform3iv(c,new Int32Array(f));break;case 4:r.gl.uniform4iv(c,new Int32Array(f));break;default:break}}if(d&&r.gl.uniform2i(d,u.texData.texShape[0],u.texData.texShape[1]),l!=null){if(u.isUniform){if(y.sizeFromShape(u.shape)<2)r.gl.uniform1f(l,u.uniformValues[0]);else{let f=u.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),r.gl.uniform1fv(l,f)}continue}u.texData.slice!=null&&m!=null&&r.gl.uniform1i(m,u.texData.slice.flatOffset),r.setInputMatrixTexture(u.texData.texture.texture,l,p)}}let i=e.outShapeLocation;if(i)switch(n.shape.length){case 1:r.gl.uniform1iv(i,new Int32Array(n.shape));break;case 2:r.gl.uniform2iv(i,new Int32Array(n.shape));break;case 3:r.gl.uniform3iv(i,new Int32Array(n.shape));break;case 4:r.gl.uniform4iv(i,new Int32Array(n.shape));break;default:break}if(e.outShapeStridesLocation){let p=y.computeStrides(n.shape);switch(n.shape.length){case 2:r.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(p));break;case 3:r.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(p));break;case 4:r.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(p));break;default:break}}if(e.outTexShapeLocation&&r.gl.uniform2i(e.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),e.program.customUniforms&&o)for(let p=0;p<e.program.customUniforms.length;++p){let u=e.program.customUniforms[p],l=e.customUniformLocations[p],m=o[p];if(u.type==="float")r.gl.uniform1fv(l,m);else if(u.type==="vec2")r.gl.uniform2fv(l,m);else if(u.type==="vec3")r.gl.uniform3fv(l,m);else if(u.type==="vec4")r.gl.uniform4fv(l,m);else if(u.type==="int")r.gl.uniform1iv(l,m);else if(u.type==="ivec2")r.gl.uniform2iv(l,m);else if(u.type==="ivec3")r.gl.uniform3iv(l,m);else if(u.type==="ivec4")r.gl.uniform4iv(l,m);else throw Error(`uniform type ${u.type} is not supported yet.`)}r.executeProgram()}function sz(r,e,t){let n="";e.concat(t).forEach(a=>{let i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!a.isUniform){let p=a.texData.texShape,{useSqueezeShape:u,uniformShape:l,keptDims:m}=nC(r.packedInputs,a.shape,p),c="",d="",f="";if(l.length===1&&r.packedInputs){let v=[Math.ceil(p[0]/2),Math.ceil(p[1]/2)];c=`${v[0]>1}_${v[1]>1}`}else if(l.length===2&&!r.packedInputs)d=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!r.packedInputs){let v=y.computeStrides(l);f=`${v[0]===p[1]}_${v[v.length-1]===p[1]}`}let h=a.shape.length,g=l.length===2&&y.arraysEqual(a.shape,p),b=y.sizeFromShape(a.shape)===1,x=I.getBroadcastDims(a.shape,t.shape),T=!r.packedInputs&&h===t.shape.length&&y.arraysEqual(p,t.texData.texShape),C=r.packedInputs||l.length>2?"":`${p[0]>1}_${p[1]>1}`;n+=`${h}_${T}_${u?m:""}_${l.length}_${b}_${x}_${g}_${c}_${d}_${f}_${C}_${i}`}else{let p=a.isUniform?"uniform":a.texData.texShape;n+=`${a.shape}_${p}_${i}`}});let o=r.userCode,s=r.constructor.name;return s+="_"+n+"_"+o+`${L().getNumber("WEBGL_VERSION")}`,s}function It(r){return L().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var oC=class{variableNames=["A"];userCode;outputShape;packedInputs=!1;packedOutput=!0;outPackingScheme=0;enableShapeUniforms;customUniforms=[{name:"texShape",type:"ivec2"}];constructor(e){let t=Yt();this.outputShape=e,this.enableShapeUniforms=It(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Mm(["r","c","d"],e):Gi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}};var sC=class{variableNames=["A"];userCode;packedInputs=!0;packedOutput=!0;outputShape;outPackingScheme=0;enableShapeUniforms;customUniforms=[{name:"texShape",type:"ivec2"}];constructor(e){let t=Yt();this.outputShape=e,this.enableShapeUniforms=It(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Mm(["r","c","d"],e):Gi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}};var aC=class{variableNames=["A"];userCode;outputShape;outTexUsage=3;constructor(e){let t=Yt();this.outputShape=e,this.userCode=`
      ${rC}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}};var uC=class{variableNames=["A"];userCode;outputShape;packedInputs=!0;packedOutput=!1;outTexUsage=3;constructor(e){let t=Yt();this.outputShape=e,this.userCode=`
      ${rC}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}};var yle={R:0,G:1,B:2,A:3},Rg=class{variableNames=["A"];userCode;outputShape;enableShapeUniforms;customUniforms=[{name:"texShape",type:"ivec2"}];constructor(e,t=!1,n="RGBA"){let o=Yt();this.outputShape=e,this.enableShapeUniforms=It(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let a="";for(let i=0;i<n.length;i++){let p=n[i];a+=`
          if(offset == ${i}) {
            result = values[${yle[p]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?$f():Bf(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${n.length});

        flatIndex = idiv(flatIndex, ${n.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${o.texture2D}(A, uv);
          ${a}
        }
        ${o.output} = vec4(${s}, 0., 0., 0.);
      }
    `}};var pC=class{variableNames=["A"];userCode;outputShape;packedInputs=!1;packedOutput=!0;enableShapeUniforms;customUniforms=[{name:"texShape",type:"ivec2"}];constructor(e,t=!1){let n=Yt();this.outputShape=e,this.enableShapeUniforms=It(this.outputShape.length);let o="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){let p=a*2+i;o+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${p}] = values[0];
            } else if (offset == 1) {
              result[${p}] = values[1];
            } else if (offset == 2) {
              result[${p}] = values[2];
            } else {
              result[${p}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?$f():Bf(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${n.output} = ${s};
        }
    `}};var e2={};Ye(e2,{bindVertexProgramAttributeStreams:()=>H0,createBufferFromOutputTexture:()=>X0,createFloat16MatrixTexture:()=>W0,createFloat16PackedMatrixTexture:()=>V0,createFloat32MatrixTexture:()=>G0,createIndexBuffer:()=>z0,createPackedMatrixTexture:()=>K0,createUnsignedBytesMatrixTexture:()=>U0,createVertexBuffer:()=>O0,createVertexShader:()=>$0,downloadByteEncodedFloatMatrixFromOutputTexture:()=>Z0,downloadFloat32MatrixFromBuffer:()=>Y0,downloadMatrixFromPackedOutputTexture:()=>J0,downloadPackedMatrixFromBuffer:()=>Q0,getInternalFormatForFloat16MatrixTexture:()=>mC,getInternalFormatForFloat16PackedMatrixTexture:()=>fC,getInternalFormatForFloat32MatrixTexture:()=>lC,getInternalFormatForPackedMatrixTexture:()=>dC,getInternalFormatForUnsignedBytesMatrixTexture:()=>cC,uploadDenseMatrixToTexture:()=>q0,uploadPixelDataToTexture:()=>j0});function $0(r){let e=Yt(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return y0(r,t)}function O0(r){let e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return I0(r,e)}function z0(r){let e=new Uint16Array([0,1,2,2,1,3]);return k0(r,e)}function Mg(r,e,t,n,o,s){S0(e,t);let a=v0(r),i=r.TEXTURE_2D;return xe(r,()=>r.bindTexture(i,a)),xe(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),xe(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),xe(r,()=>r.texParameteri(i,r.TEXTURE_MIN_FILTER,r.NEAREST)),xe(r,()=>r.texParameteri(i,r.TEXTURE_MAG_FILTER,r.NEAREST)),L().getNumber("WEBGL_VERSION")===1?xe(r,()=>r.texImage2D(i,0,n,e,t,0,o,s,null)):xe(r,()=>r.texStorage2D(i,1,n,e,t)),xe(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:a,texShape:[t,e]}}function lC(r){return r.internalFormatFloat}function G0(r,e,t,n){let[o,s]=Rm(e,t);return Mg(r,o,s,lC(n),n.textureFormatFloat,r.FLOAT)}function mC(r){return r.internalFormatHalfFloat}function W0(r,e,t,n){let[o,s]=Rm(e,t);return Mg(r,o,s,mC(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function cC(r){return r.downloadTextureFormat}function U0(r,e,t,n){let[o,s]=Rm(e,t);return Mg(r,o,s,cC(n),r.RGBA,r.UNSIGNED_BYTE)}function dC(r){return r.internalFormatPackedFloat}function K0(r,e,t,n){let[o,s]=xu(e,t);return Mg(r,o,s,dC(n),r.RGBA,r.FLOAT)}function fC(r){return r.internalFormatPackedHalfFloat}function V0(r,e,t,n){let[o,s]=xu(e,t);return Mg(r,o,s,fC(n),r.RGBA,n.textureTypeHalfFloat)}function H0(r,e,t){return xe(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),JT(r,e,"clipSpacePos",t,3,20,0)&&JT(r,e,"uv",t,2,20,12)}function q0(r,e,t,n,o,s){xe(r,()=>r.bindTexture(r.TEXTURE_2D,e));let a,i,p;o instanceof Uint8Array?(a=new Uint8Array(t*n*4),i=r.UNSIGNED_BYTE,p=r.RGBA):(a=new Float32Array(t*n*4),i=r.FLOAT,p=s.internalFormatPackedFloat),a.set(o),L().getNumber("WEBGL_VERSION")===2?xe(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t,n,r.RGBA,i,a)):xe(r,()=>r.texImage2D(r.TEXTURE_2D,0,p,t,n,0,r.RGBA,i,a)),xe(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function j0(r,e,t){xe(r,()=>r.bindTexture(r.TEXTURE_2D,e)),t.data instanceof Uint8Array?L().getNumber("WEBGL_VERSION")===2?xe(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t.width,t.height,r.RGBA,r.UNSIGNED_BYTE,t.data)):xe(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t.width,t.height,0,r.RGBA,r.UNSIGNED_BYTE,t.data)):L().getNumber("WEBGL_VERSION")===2?xe(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,t)):xe(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t)),xe(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function X0(r,e,t,n){let o=r.createBuffer();xe(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,o));let i=4*4*e*t;return xe(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,i,r.STREAM_READ)),xe(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,0)),xe(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),o}function Y0(r,e,t){let n=r,o=new Float32Array(t);return n.bindBuffer(n.PIXEL_PACK_BUFFER,e),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,o),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),o}function Z0(r,e,t,n){let[o,s]=Rm(e,t),a=4,i=new Uint8Array(VO(e*t,a));return xe(r,()=>r.readPixels(0,0,o,s,n.downloadTextureFormat,r.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function Q0(r,e,t,n,o,s,a,i){let p=r,u=new Float32Array(HO(s,a));return p.bindBuffer(p.PIXEL_PACK_BUFFER,e),p.getBufferSubData(p.PIXEL_PACK_BUFFER,0,u),p.bindBuffer(p.PIXEL_PACK_BUFFER,null),u}function J0(r,e,t){let n=new Float32Array(e*t*4);return xe(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,n)),n}var Fm=class{gl;textureFloatExtension;textureHalfFloatExtension;colorBufferFloatExtension;colorBufferHalfFloatExtension;disjointQueryTimerExtension;parallelCompilationExtension;vertexBuffer;indexBuffer;framebuffer;outputTexture=null;program=null;disposed=!1;disjoint;vertexShader;textureConfig;createVertexArray;bindVertexArray;deleteVertexArray;getVertexArray;constructor(e){let t=L().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,f0(t,e)):this.gl=oo(t),e=this.gl,L().getNumber("WEBGL_VERSION")===2){let s=e;this.createVertexArray=()=>xe(s,()=>s.createVertexArray()),this.bindVertexArray=a=>xe(s,()=>s.bindVertexArray(a)),this.deleteVertexArray=a=>xe(s,()=>s.deleteVertexArray(a)),this.getVertexArray=()=>xe(s,()=>s.getParameter(s.VERTEX_ARRAY_BINDING))}else if(e!=null){let s=e.getExtension("OES_vertex_array_object");if(s==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>xe(e,()=>s.createVertexArrayOES()),this.bindVertexArray=a=>xe(e,()=>s.bindVertexArrayOES(a)),this.deleteVertexArray=a=>xe(e,()=>s.deleteVertexArrayOES(a)),this.getVertexArray=()=>xe(e,()=>e.getParameter(s.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float",o="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),L().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Pf(this.gl,s),so(this.gl,a))this.textureHalfFloatExtension=Pf(this.gl,a);else if(L().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),so(this.gl,o))this.colorBufferHalfFloatExtension=Pf(this.gl,o);else if(L().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",so(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(so(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=O0(this.gl),this.indexBuffer=z0(this.gl),this.framebuffer=w0(this.gl),this.textureConfig=Ng(this.gl,this.textureHalfFloatExtension)}get debug(){return L().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;xe(e,()=>e.finish()),xe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),xe(e,()=>e.deleteFramebuffer(this.framebuffer)),xe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),xe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),xe(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),G0(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),W0(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),U0(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),j0(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,o){this.throwIfDisposed(),q0(this.gl,e,t,n,o,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),V0(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),K0(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(eC(this.gl,this.framebuffer),this.outputTexture=null),xe(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>Z0(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,o,s,a){return Q0(this.gl,e,t,n,o,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return Y0(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let o=X0(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(L().getBool("WEBGL_FENCE_API_ENABLED")){let o=e,s=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=o.clientWaitSync(s,0,0);return a===o.ALREADY_SIGNALED||a===o.CONDITION_SATISFIED},t=s}else L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>J0(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=$0(t));let n=T0(t);xe(t,()=>t.attachShader(n,this.vertexShader)),xe(t,()=>t.attachShader(n,e)),C0(t,n);let o;return o=Object.assign(n,{vao:this.createVertexArray()}),this.bindVertexArray(o.vao),xe(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),console.assert(H0(t,o,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&Dg(t,o),this.setProgram(o),o}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(xe(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&(this.bindVertexArray(this.program.vao),this.debug&&Dg(this.gl,this.program)),xe(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?A0(this.gl,e,t):N0(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),xe(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),D0(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[o,s]=xu(t,n);this.setOutputMatrixTextureDriver(e,o,s)}setOutputMatrixWriteRegion(e,t,n,o){this.setOutputMatrixWriteRegionDriver(n,e,o,t)}setOutputPackedMatrixWriteRegion(e,t,n,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Dg(this.gl,this.program),Ff(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;if(this.debug){let t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}xe(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),xe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Pf(this.gl,L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,s),s}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await y.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),o=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}itemsToPoll=[];pollItems(){let e=xle(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in L().platform&&(n=L().platform.setTimeoutCustom.bind(L().platform)),y.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),_g(this.gl,e,this.framebuffer),this.debug&&Ff(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(_g(this.gl,this.outputTexture,this.framebuffer),this.debug&&Ff(this.gl)):eC(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let o=this.gl;_g(o,e,this.framebuffer),this.debug&&Ff(o),this.outputTexture=e,xe(o,()=>o.viewport(0,0,t,n)),xe(o,()=>o.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,o){this.throwIfDisposed(),xe(this.gl,()=>this.gl.scissor(e,t,n,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function xle(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var{addImpl:iz,bincountImpl:hC,bincountReduceImpl:uz,castImpl:pz,ceilImpl:lz,concatImpl:mz,equalImpl:cz,expImpl:dz,expm1Impl:fz,floorImpl:hz,gatherNdImpl:gz,gatherV2Impl:bz,greaterImpl:yz,greaterEqualImpl:xz,lessImpl:Tz,lessEqualImpl:Cz,linSpaceImpl:Iz,logImpl:kz,maxImpl:vz,maximumImpl:Sz,minimumImpl:wz,multiplyImpl:Az,negImpl:Nz,notEqualImpl:Dz,prodImpl:_z,raggedGatherImpl:Rz,raggedRangeImpl:Mz,raggedTensorToTensorImpl:Pz,rangeImpl:Fz,rsqrtImpl:Ez,scatterImpl:Lz,sigmoidImpl:Bz,simpleAbsImpl:gC,sliceImpl:$z,sparseFillEmptyRowsImpl:Oz,sparseReshapeImpl:zz,sparseSegmentReductionImpl:bC,sqrtImpl:Gz,staticRegexReplaceImpl:Wz,stridedSliceImpl:Uz,stringNGramsImpl:Kz,stringSplitImpl:Vz,stringToHashBucketFastImpl:Hz,subImpl:qz,tileImpl:jz,topKImpl:Xz,transposeImpl:Em,uniqueImpl:Yz}=_f;function t2(r,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${r}.${t}`)}function ur(r,e){return e===1?[r]:t2(r,e)}function Zz(r,e){if(r===1)return"rc";let t="";for(let n=0;n<r;n++)t+=e[n],n<r-1&&(t+=",");return t}var yC=class{variableNames=["A"];outputShape;userCode;packedInputs=!1;packedOutput=!0;enableShapeUniforms;rank;constructor(e){if(this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=It(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=ur("rc",this.rank),n=Ke(this.rank),o=this.getOutOfBoundsCondition(t),s=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let o=0;o<=1;o++){let s=`${n===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)s=`${e[e.length-1-a]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${o};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}};var Kf=class{variableNames=["A"];packedInputs=!0;packedOutput=!0;outputShape;userCode;enableShapeUniforms;customUniforms=[{name:"inputShape",type:"ivec3"}];constructor(e,t){this.outputShape=e,this.enableShapeUniforms=It(this.outputShape.length);let n="";for(let o=0;o<4;o++){let s="thisRC = rc;";o%2===1&&(s+="thisRC.z += 1;"),o>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${Tle(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?$f():Bf(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function Tle(r,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?ZO(["r","c","d"],"inputShape"):Gi(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var xC=class{constructor(e){this.gpgpu=e}numUsedTextures=0;numFreeTextures=0;_numBytesAllocated=0;_numBytesFree=0;freeTextures={};usedTextures={};logEnabled=!1;acquireTexture(e,t,n){let o=Jz(t,n),s=eG(e,o,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let a=Qz(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let p=this.freeTextures[s].pop();return this.usedTextures[s].push(p),p}let i;return o===3?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===4?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===1?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===0?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===2&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,o){if(this.freeTextures==null)return;let s=Jz(n,o),a=eG(t,s,o);a in this.freeTextures||(this.freeTextures[a]=[]);let i=Qz(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,o),p=L().get("WEBGL_DELETE_TEXTURE_THRESHOLD");p!==-1&&this._numBytesAllocated>p?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let u=this.usedTextures[a],l=u&&u.indexOf(e);if(l==null||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[l]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function Cle(r,e){let t=r;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===r.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function Qz(r,e,t,n,o){let s=Ile(e,n),a;if(o){let[p,u]=xu(r[0],r[1]);a=p*u}else{let[p,u]=Rm(r[0],r[1]);a=p*u}let i=Cle(t,s);return a*i}function Ile(r,e){switch(r){case 3:return dC(e);case 4:return fC(e);case 1:return lC(e);case 0:return mC(e);case 2:return cC(e);default:throw new Error(`Unknown physical texture type ${r}`)}}function kle(r){return L().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?3:1:r?4:0}function Jz(r,e){if(r===1)return 3;if(r===0||r==null)return kle(e);if(r===3||r===2)return 2;throw new Error(`Unknown logical texture type ${r}`)}function eG(r,e,t){return`${r[0]}_${r[1]}_${e}_${t}`}var Ur=class{variableNames=["A"];userCode;outputShape;enableShapeUniforms;constructor(e,t){this.outputShape=e,this.enableShapeUniforms=It(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},vr="if (isnan(x)) return x;",tG="return x;",r2="return abs(x);";var rG="return (x >= 0.0) ? x : (exp(x) - 1.0);",nG=vr+`
  return (x < 0.0) ? 0.0 : x;
`,oG=vr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Tu="return x;",sG="return 1.0 / (1.0 + exp(-1.0 * x));";var iG="return x;",uG=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,pG=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,lG=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,mG="return 1.0 / (1.0 + exp(-1.0 * x));",On=class{variableNames=["A"];userCode;enableShapeUniforms;outputShape;packedInputs=!0;packedOutput=!0;constructor(e,t){this.outputShape=e,this.enableShapeUniforms=It(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var TC=class{variableNames=["A"];packedInputs=!0;packedOutput=!1;outputShape;userCode;enableShapeUniforms;constructor(e){this.outputShape=e,this.enableShapeUniforms=It(this.outputShape.length);let t=e.length,n=ur("rc",t),o=Ke(t),s=Zz(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}};var Sle=kr.whereImpl,wle=1e-7,Ale=1e-4,CC={};function Nle(r){return r in CC||(CC[r]={}),CC[r]}var Dle=L().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),_le=600;function Rle(){return L().global.screen==null?1024:L().global.screen.height*L().global.screen.width*window.devicePixelRatio*_le/1024/1024}var n2=class extends bo{texData;gpgpu;nextDataId(){return n2.nextDataId++}pendingRead=new WeakMap;pendingDisposal=new WeakSet;dataRefCount=new WeakMap;numBytesInGPU=0;canvas;programTimersStack;activeTimers;uploadWaitMs=0;downloadWaitMs=0;lastGlFlushTime=0;floatPrecisionValue;textureManager;binaryCache;gpgpuCreatedLocally;numMBBeforeWarning;warnedAboutMemory=!1;constructor(e){if(super(),!L().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Fm)t=e;else{let n=oo(L().getNumber("WEBGL_VERSION"),e);t=new Fm(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=oo(L().getNumber("WEBGL_VERSION"));t=new Fm(n),this.binaryCache=Nle(L().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new xC(this.gpgpu),this.numMBBeforeWarning=Rle(),this.texData=new $a(this,jr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,o,s,a){let i=this.makeTensorInfo(t,n),p=this.texData.get(i.dataId);p.isPacked=!1,p.texture={texture:e,texShape:[o,s]},p.texShape=[o,s];let u=Ef(t),l=new Rg(u,!1,a),m=this.runWebGLProgram(l,[i],n,[[o,s]]);return m.shape=t,p.texture=null,this.disposeIntermediateTensorInfo(i),m.dataId}write(e,t,n){if((L().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||L().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()};return this.texData.set(o,{shape:t,dtype:n,values:e,usage:1,refCount:1}),o}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,o,s){if(L().getBool("DEBUG")&&this.checkNumericalProblems(t),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:o,values:t,usage:1,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:o,complexTensorInfos:s,slice:a,shape:i,isPacked:p}=t;if(a!=null){let c;p?c=new On(i,Tu):c=new Ur(i,Tu);let d=this.runWebGLProgram(c,[{dataId:e,shape:i,dtype:o}],o),f=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),f}if(n!=null)return this.convertAndCacheOnCPU(e);if(o==="string")return n;let u=this.activeTimers!=null,l;u&&(l=y.now());let m;if(o==="complex64"){let c=this.readSync(s.real.dataId),d=this.readSync(s.imag.dataId);m=I.mergeRealAndImagArrays(c,d)}else m=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=y.now()-l),this.convertAndCacheOnCPU(e,m)}async read(e){if(this.pendingRead.has(e)){let f=this.pendingRead.get(e);return new Promise(h=>f.push(h))}let t=this.texData.get(e),{values:n,shape:o,slice:s,dtype:a,complexTensorInfos:i,isPacked:p}=t;if(s!=null){let f;p?f=new On(o,Tu):f=new Ur(o,Tu);let h=this.runWebGLProgram(f,[{dataId:e,shape:o,dtype:a}],a),g=this.read(h.dataId);return this.disposeIntermediateTensorInfo(h),g}if(n!=null)return this.convertAndCacheOnCPU(e);if(L().getBool("DEBUG")&&!L().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&L().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,l;if(a!=="complex64"&&L().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let f=this.texData.get(l.dataId);u=this.gpgpu.createBufferFromTexture(f.texture.texture,...Ag(o))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let m;if(a==="complex64"){let f=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),h=f[0],g=f[1];m=I.mergeRealAndImagArrays(h,g)}else if(u==null)m=this.getValuesFromTexture(e);else{let f=y.sizeFromShape(o);m=this.gpgpu.downloadFloat32MatrixFromBuffer(u,f)}if(l!=null&&this.disposeIntermediateTensorInfo(l),u!=null){let f=this.gpgpu.gl;xe(f,()=>f.deleteBuffer(u))}let c=this.convertAndCacheOnCPU(e,m),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(f=>f(c)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&jr().removeDataId(e,this),this.pendingDeletes--),c}readToGPU(e,t={}){let n=this.texData.get(e),{values:o,shape:s,slice:a,dtype:i,isPacked:p,texture:u}=n;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let d;p?d=new On(s,Tu):d=new Ur(s,Tu);let f=this.runWebGLProgram(d,[{dataId:e,shape:s,dtype:i}],i),h=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),h}if(u==null)throw o!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let l=this.decode(e,t.customTexShape),m=jr().makeTensorFromTensorInfo(l),c=this.texData.get(l.dataId);return{tensorRef:m,...c.texture}}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(o=>y.decodeString(o));return Ce(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!b0(n))throw L().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:o}=this.texData.get(e),s=y.sizeFromShape(t);if(L().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let c=this.decode(e),d=this.texData.get(c.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...Ag(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(c),f}let a=L().getBool("WEBGL_PACK")&&o===!0,i=a?Ef(t):t,p=a?new uC(i):new aC(i),u=this.runWebGLProgram(p,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),m=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),m}timerAvailable(){return L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=y.flatten(this.activeTimers.map(p=>p.query)).filter(p=>p!=null),a=y.flatten(this.activeTimers.map(p=>p.name)).filter(p=>p!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let p=await Promise.all(s);i.kernelMs=y.sum(p),i.getExtraProfileInfo=()=>p.map((u,l)=>({name:a[l],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:y.now(),endMs:null}}endTimer(e){return L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=y.now(),e)}async getQueryTime(e){if(L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}pendingDeletes=0;disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:o,usage:s,isPacked:a,slice:i}=this.texData.get(e),p=i&&i.origDataId||e,u=this.dataRefCount.get(p);u>1?this.dataRefCount.set(p,u-1):(this.dataRefCount.delete(p),t!=null&&(this.numBytesInGPU-=this.computeBytes(o,n),this.textureManager.releaseTexture(t,o,s,a)));let l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Dle){return L().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&y.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){I.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return Sle(e.shape,t)}packedUnaryOp(e,t,n){let o=new On(e.shape,t),s=this.compileAndRun(o,[e],n);return jr().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let o=gC(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,o)}if(L().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,r2,e.dtype);let t=new Ur(e.shape,r2),n=this.compileAndRun(t,[e]);return jr().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&y.isString(n[0])){let s=n.map(a=>y.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:t}}makeOutput(e,t,n){return jr().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new TC(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new yC(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[Ju(e.shape),...ep(e.shape)],o={dtype:e.dtype,shape:n,dataId:e.dataId},s=[Ju(t),...ep(t)],a=new Kf(s,n),i=!0,p=[n],u=this.runWebGLProgram(a,[o],e.dtype,p,i);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:o,shape:s,dtype:a}=n;if(t!=null){let c=y.sizeFromShape(s),d=t[0]*t[1]*4;y.assert(c<=d,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let i=Ef(s),p;o?p=new sC(i):p=new oC(i);let u=!0,l=[t??Ag(i)],m=this.runWebGLProgram(p,[{shape:i,dtype:a,dataId:e}],a,l,u,t);return{dtype:a,shape:s,dataId:m.dataId}}runWebGLProgram(e,t,n,o,s=!1,a){let i=this.makeTensorInfo(e.outputShape,n),p=this.texData.get(i.dataId);if(e.packedOutput&&(p.isPacked=!0),e.outPackingScheme===0){let b=a??Ag(e.outputShape);p.texShape=b.map(x=>x*2)}if(e.outTexUsage!=null&&(p.usage=e.outTexUsage),y.sizeFromShape(i.shape)===0)return p.values=y.getTypedArrayFromDType(i.dtype,0),i;let u=[],l=t.map(b=>{if(b.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(b.dataId);if(x.texture==null){if(!e.packedInputs&&y.sizeFromShape(b.shape)<=L().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:b.shape,texData:null,isUniform:!0,uniformValues:x.values};e.packedInputs&&(x.isPacked=!0,x.shape=b.shape)}if(this.uploadToGPU(b.dataId),!!x.isPacked!=!!e.packedInputs)b=x.isPacked?this.unpackTensor(b):this.packTensor(b),u.push(b),x=this.texData.get(b.dataId);else if(x.isPacked&&!ol(x.shape,b.shape)){let T=b,C=b.shape;b.shape=x.shape,b=this.packedReshape(b,C),u.push(b),x=this.texData.get(b.dataId),T.shape=C}return{shape:b.shape,texData:x,isUniform:!1}});this.uploadToGPU(i.dataId);let m={shape:i.shape,texData:p,isUniform:!1},c=sz(e,l,m),d=this.getAndSaveBinary(c,()=>nz(this.gpgpu,e,l,m)),f=this.activeTimers!=null,h;f&&(h=this.startTimer()),L().get("ENGINE_COMPILE_ONLY")||oz(this.gpgpu,d,l,m,o),u.forEach(b=>this.disposeIntermediateTensorInfo(b)),f&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));let g=L().get("WEBGL_FLUSH_THRESHOLD");if(g>0){let b=y.now();b-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=b)}if(!L().getBool("WEBGL_LAZILY_UNPACK")&&p.isPacked&&s===!1){let b=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),b}return i}compileAndRun(e,t,n,o,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,o,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}disposed=!1;dispose(){this.disposed||(L().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=z(()=>{if(!L().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=L().getBool("DEBUG");L().set("DEBUG",!1);let t=this.abs(ge(1e-8)).dataSync()[0];if(L().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?wle:Ale}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:o,values:s,texture:a,usage:i,isPacked:p}=t;if(a!=null)return;let u=this.activeTimers!=null,l;u&&(l=y.now());let m=t.texShape;if(m==null&&(m=_0(n,p),t.texShape=m),s!=null){let c=Ef(n),d,f=m[1],h=m[0],g=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(p||!g)&&([f,h]=xu(m[0],m[1])),p?d=new pC(c,g):d=new Rg(c,g);let b=g?[h,f]:m,x=this.makeTensorInfo(b,o),T=this.texData.get(x.dataId);g?T.usage=2:T.usage=1,T.texShape=b,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),f,h,s);let C=[[h,f]],v=!0,A=this.runWebGLProgram(d,[x],o,C,v),_=this.texData.get(A.dataId);t.texShape=_.texShape,t.isPacked=_.isPacked,t.usage=_.usage,L().get("ENGINE_COMPILE_ONLY")?this.disposeData(A.dataId):(t.texture=_.texture,t.values=null,this.texData.delete(A.dataId)),this.disposeIntermediateTensorInfo(x),u&&(this.uploadWaitMs+=y.now()-l)}else{let c=this.acquireTexture(m,i,o,p);t.texture=c}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:o}=n;return t!=null&&(n.values=Mle(t,o)),n.values}acquireTexture(e,t,n,o){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,o)}computeBytes(e,t){return e[0]*e[1]*y.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise(o=>{try{this.checkCompletion_(t),o(!0)}catch(s){throw s}});e.push(n)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Hh(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(QT(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){let{variablesLocations:t,customUniformLocations:n,infLoc:o,nanLoc:s,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:p}=B0(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=o,e.nanLoc=s,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=p}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";let{texture:o,height:s,width:a,channels:i}=e,p=jr().backend;if(!p.gpgpu.gl.isTexture(o))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let u=p.writeTexture(o,t,n,s,a,i);return jr().makeTensorFromDataId(u,t,n,p)}},Vf=n2;q(Vf,"nextDataId",0);function Mle(r,e){if(e==="float32"||e==="complex64")return r;if(e==="int32"||e==="bool"){let t=e==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let n=0;n<t.length;++n)t[n]=Math.round(r[n]);return t}else throw new Error(`Unknown dtype ${e}`)}var Ple="0.0.0";function cG(){L().set("WEBGL_FORCE_F16_TEXTURES",!0)}Fp.isBrowser()&&Lp("webgl",()=>new Vf,2);var Hrr={forceHalfFloat:cG};var Hf=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var $s=class{variableNames=["A","B"];outputShape;userCode;enableShapeUniforms;constructor(e,t,n){this.outputShape=I.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=It(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var ao=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;var Pa=class{variableNames=["A","B"];outputShape;userCode;supportsBroadcasting=!0;packedInputs=!0;packedOutput=!0;enableShapeUniforms;constructor(e,t,n,o=!1){this.outputShape=I.assertAndGetBroadcastShape(t,n);let s=this.outputShape.length;this.enableShapeUniforms=It(s);let a="";if(o)if(s===0||y.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Ke(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let p=ur("coords",s);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${p[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${p[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${p[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${p[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function pr(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var dG={kernelName:jn,backendName:"webgl",kernelFunc:pr};function zn(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),a=t.texData.get(s.dataId),i=pr({inputs:{x:n},backend:t}),p=pr({inputs:{x:o},backend:t});return a.complexTensorInfos={real:i,imag:p},s}var fG={kernelName:dp,backendName:"webgl",kernelFunc:zn};var o2="return (a < 0.) ? b * a : a;",s2=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Fle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n,a=t.makeTensorInfo([],"float32",y.createScalarValue(s,"float32")),i=L().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Pa(s2,o.shape,a.shape):new $s(o2,o.shape,a.shape),p=t.runWebGLProgram(i,[o,a],"float32");return t.disposeIntermediateTensorInfo(a),p}var hG={kernelName:Xo,backendName:"webgl",kernelFunc:Fle};var a2="return (a < 0.) ? b * a : a;",i2=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Ele(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=L().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Pa(i2,n.shape,o.shape):new $s(a2,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],"float32")}var gG={kernelName:ls,backendName:"webgl",kernelFunc:Ele};var Fa="if (isnan(x)) return x;";function Se({opSnippet:r,packedOpSnippet:e,cpuKernelImpl:t,dtype:n}){return({inputs:o,backend:s})=>{let{x:a}=o,i=s,p=n||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){let m=i.texData.get(a.dataId),c=t(m.values,p);return i.makeTensorInfo(a.shape,p,c)}let u=L().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null,l;return u?l=new On(a.shape,e):l=new Ur(a.shape,r),i.runWebGLProgram(l,[a],p)}}function bt({opSnippet:r,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:n=!1,cpuKernelImpl:o,dtype:s}){return({inputs:a,backend:i})=>{let{a:p,b:u}=a,l=i;if(n&&p.dtype==="complex64"){let f=l.texData.get(p.dataId),h=l.texData.get(u.dataId),[g,b]=[[f.complexTensorInfos.real,h.complexTensorInfos.real],[f.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(T=>{let[C,v]=T,A={dataId:C.dataId,dtype:C.dtype,shape:p.shape},_={dataId:v.dataId,dtype:v.dtype,shape:u.shape},R=new $s(r,p.shape,u.shape);return l.runWebGLProgram(R,[A,_],Nt(C.dtype,v.dtype))}),x=zn({inputs:{real:g,imag:b},backend:l});return l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(b),x}let m=s||Nt(p.dtype,u.dtype);if((p.dtype==="string"||u.dtype==="string"||l.shouldExecuteOnCPU([p,u]))&&o!=null){let f=l.texData.get(p.dataId).values,h=l.texData.get(u.dataId).values,g=p.dtype==="string"?I.fromUint8ToStringArray(f):f,b=p.dtype==="string"?I.fromUint8ToStringArray(h):h,[x,T]=o(p.shape,u.shape,g,b,m),C=l.makeTensorInfo(T,m),v=l.texData.get(C.dataId);return v.values=x,C}let c=L().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null,d;return c?d=new Pa(e,p.shape,u.shape,t):d=new $s(r,p.shape,u.shape),l.runWebGLProgram(d,[p,u],m)}}function tp(r,e=!1){if(r==="linear")return e?iG:tG;if(r==="relu")return e?pG:nG;if(r==="elu")return e?uG:rG;if(r==="relu6")return e?lG:oG;if(r==="prelu")return e?i2:a2;if(r==="leakyrelu")return e?s2:o2;if(r==="sigmoid")return e?mG:sG;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var qf=class{variableNames=["matrixA","matrixB"];packedInputs=!0;packedOutput=!0;outputShape;userCode;enableShapeUniforms;constructor(e,t,n,o=!1,s=!1,a=!1,i=null,p=!1,u=!1){this.outputShape=n,this.enableShapeUniforms=It(this.outputShape.length);let l=o?e[1]:e[2],m=Math.ceil(l/2),c=o?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",f=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",b="";i&&(p?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:u?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,b="result = activation(result);");let x=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),p&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let T="rc.x",C="rc.x";e[0]<t[0]?T=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(C=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${m}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${T};
        int batchB = ${C};
        for (int i = 0; i < ${m}; i++) {
          vec4 a = getMatrixA(batchA, ${c});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${h[0]});
          result += (${f[1]} * ${h[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${x}

        ${b}

        setOutput(result);
      }
    `}};var u2={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},Pg=class{variableNames=["AReal","AImag","BReal","BImag"];userCode;outputShape;constructor(e,t,n){this.outputShape=I.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var bG="return a * b;";function Fg(r){let{inputs:e,backend:t}=r,{a:n,b:o}=e,s=I.upcastType(n.dtype,o.dtype);if(n.dtype==="complex64"){let i=t.texData.get(n.dataId),p=t.texData.get(o.dataId),u=new Pg(u2.REAL,n.shape,o.shape),l=new Pg(u2.IMAG,n.shape,o.shape),m=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:n.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:o.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:o.shape}],c=t.runWebGLProgram(u,m,"float32"),d=t.runWebGLProgram(l,m,"float32"),f=zn({inputs:{real:c,imag:d},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),f}if(t.shouldExecuteOnCPU([n,o])){let i=t.texData.get(n.dataId),p=t.texData.get(o.dataId),[u,l]=Az(n.shape,o.shape,i.values,p.values,s),m=t.makeTensorInfo(l,s),c=t.texData.get(m.dataId);return c.values=u,m}let a;return L().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new Pa(bG,n.shape,o.shape):a=new $s(bG,n.shape,o.shape),t.runWebGLProgram(a,[n,o],s)}var yG={kernelName:as,backendName:"webgl",kernelFunc:Fg};function xG(r,e,t){let n=[Ju(r.shape),...ep(r.shape)],o={dtype:r.dtype,shape:n,dataId:r.dataId},s=[Ju(e),...ep(e)],a=new Kf(s,n),i=!0,p=[n],u=t.runWebGLProgram(a,[o],r.dtype,p,i);return{dataId:u.dataId,shape:e,dtype:u.dtype}}function pe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,a=t,i=y.sizeFromShape(o.shape),p=y.inferFromImplicitShape(s,i),u=y.sizeFromShape(p);y.assert(i===u,()=>`The new shape (${p}) has ${u} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let l=a.texData.get(o.dataId);return l.isPacked&&!ol(o.shape,p)&&!(l.texture!==null&&ol(l.shape,p))?xG(o,p,a):(a.incRef(o.dataId),{dataId:o.dataId,shape:p,dtype:o.dtype})}var TG={kernelName:Js,backendName:"webgl",kernelFunc:pe};var Eg=class{variableNames=["x"];outputShape;userCode;constructor(e,t){let{windowSize:n,batchSize:o,inSize:s,outSize:a}=e;this.outputShape=[o,a];let i=Math.floor(n/4)*4,p=n%4,u="sumValue += dot(values, ones);";if(t!=null){let m=1/t;u=`sumValue += dot(values * ${y.isInt(m)?m.toPrecision(2):m}, ones);`}let l="";s%n>0&&(l=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${i};
        if (${p===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}};var IC=class{variableNames=["x"];outputShape;userCode;constructor(e,t){let{windowSize:n,batchSize:o,inSize:s,outSize:a}=e;this.outputShape=[o,a];let i="0.0",p="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",p="min"):t==="max"&&(i="-1.0 / 1e-20",p="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");let l=Math.floor(n/4)*4,m=n%4,c=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${p}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${p}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";t==="all"?(i="1.0",c=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):t==="any"&&(i="0.0",c=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${l};
        if (${m===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${c}
        }
        setOutput(${u});
      }
    `}};function Ble(r){let e=[];for(;e.length===0||e[e.length-1].outSize!==1;){let t=e.length?e[e.length-1].outSize:r[1],n=I.computeOptimalWindowSize(t);e.push({inSize:t,windowSize:n,outSize:Math.ceil(t/n)})}return e}function io(r,e,t,n){let o=Ble(r.shape),s=r;for(let a=0;a<o.length;a++){let{inSize:i,windowSize:p,outSize:u}=o[a],l,m;t==="mean"?l=a===0?new Eg({windowSize:p,inSize:i,batchSize:r.shape[0],outSize:u},i):new Eg({windowSize:p,inSize:i,batchSize:r.shape[0],outSize:u}):l=new IC({windowSize:p,inSize:i,batchSize:r.shape[0],outSize:u},t),m=s,s=n.runWebGLProgram(l,[s],e),m.dataId!==r.dataId&&n.disposeIntermediateTensorInfo(m)}return s}var kC=class{variableNames=["A"];outputShape;userCode;rank;constructor(e,t){let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let o=Ke(this.rank),s=$le(t);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function $le(r){let e=r.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(e);for(let o=0;o<r.length;o++)n[r[o]]=t[o];return n.join()}var vC=class{variableNames=["A"];outputShape;userCode;rank;packedInputs=!0;packedOutput=!0;constructor(e,t){let n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let o=Ke(this.rank),s=t2("rc",this.rank),a=new Array(this.rank);for(let l=0;l<t.length;l++)a[t[l]]=s[l];let i=`vec2(${a.slice(-2).join()})`,p=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${p}) {
        result[1] = ${u};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${u};
        if(${p}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function sl(r,e,t){let n=L().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vC(r.shape,e):new kC(r.shape,e);return t.runWebGLProgram(n,[r],r.dtype)}function CG(r,e,t,n){let o=e,s=r.shape.length,a=y.parseAxisParam(o,r.shape),i=a,p=I.getAxesPermutation(i,s),u=p!=null,l=r;u&&(l=sl(r,p,n),i=I.getInnerMostAxes(i.length,s)),I.assertAxesAreInnerMostDims("sum",i,s);let[m,c]=I.computeOutAndReduceShapes(l.shape,i),d=m;t&&(d=I.expandShapeToKeepDim(m,a));let f=y.sizeFromShape(c),g=y.sizeFromShape(r.shape)/f,b=pe({inputs:{x:l},attrs:{shape:[g,f]},backend:n}),x=Pu(r.dtype),T=io(b,x,"sum",n),C=pe({inputs:{x:T},attrs:{shape:d},backend:n});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(T),u&&n.disposeIntermediateTensorInfo(l),C}function Lm(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return CG(o,s,a,t)}var IG={kernelName:ws,backendName:"webgl",kernelFunc:Lm};function Kt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,a=t,i=o.shape.length,p=new Array(i);for(let l=0;l<p.length;l++)p[l]=o.shape[s[l]];let u;if(a.shouldExecuteOnCPU([o])){let m=a.texData.get(o.dataId).values,c=Em(m,o.shape,o.dtype,s,p);u=a.makeTensorInfo(p,o.dtype);let d=a.texData.get(u.dataId);d.values=c}else u=sl(o,s,a);return u}var kG={kernelName:Rn,backendName:"webgl",kernelFunc:Kt};var p2=1e3;function Bm({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:p=null}){let u=r.shape.length,l=e.shape.length,m=t?r.shape[u-2]:r.shape[u-1],c=n?e.shape[l-1]:e.shape[l-2],d=t?r.shape[u-1]:r.shape[u-2],f=n?e.shape[l-2]:e.shape[l-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),b=y.sizeFromShape(h),x=y.sizeFromShape(g),C=Rr.assertAndGetBroadcastShape(r.shape.slice(0,-2),e.shape.slice(0,-2)).concat([d,f]);y.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let v=t?[b,m,d]:[b,d,m],A=n?[x,f,c]:[x,c,f],_=pe({inputs:{x:r},backend:o,attrs:{shape:v}}),R=pe({inputs:{x:e},backend:o,attrs:{shape:A}}),M=[_,R],F=Math.max(b,x),O=t?_.shape[1]:_.shape[2],G=s!=null,W=a!=null,U=p==="leakyrelu",K=p!=null?tp(p,!0):null,H=G||W||U||K!=null,X;if((d===1||f===1)&&O>p2&&H===!1){let re=_,ae=R;t&&(re=Kt({inputs:{x:_},backend:o,attrs:{perm:[0,2,1]}}),M.push(re)),n&&(ae=Kt({inputs:{x:R},backend:o,attrs:{perm:[0,2,1]}}),M.push(ae));let ie=f!==1,me=f===1,ue=re;ie&&(ue=pe({inputs:{x:re},backend:o,attrs:{shape:[F,O,1]}}),M.push(ue));let le=f===1?2:1,he=ae;me&&(he=pe({inputs:{x:ae},backend:o,attrs:{shape:[F,1,O]}}),M.push(he));let Te=Fg({inputs:{a:ue,b:he},backend:o});X=Lm({inputs:{x:Te},backend:o,attrs:{axis:le,keepDims:!0}}),M.push(Te)}else{let re=Nt(r.dtype,e.dtype),ae=new qf(v,A,[F,d,f],t,n,G,K,W,U),ie=[_,R];if(s!=null&&ie.push(s),W&&ie.push(a),U){let me=o.makeTensorInfo([],"float32",y.createScalarValue(i,"float32"));ie.push(me),M.push(me)}X=o.runWebGLProgram(ae,ie,re)}let j=pe({inputs:{x:X},backend:o,attrs:{shape:C}});M.push(X);for(let re of M)o.disposeIntermediateTensorInfo(re);return j}function Ole(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:p,transposeB:u,activation:l,leakyreluAlpha:m}=n;return Bm({a:o,b:s,transposeA:p,transposeB:u,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:m,activation:l})}var vG={kernelName:aa,backendName:"webgl",kernelFunc:Ole};var SG="return abs(x);";function zle(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=t.texData.get(n.dataId),a=gC(s.values);return t.makeTensorInfo(n.shape,n.dtype,a)}let o;return L().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new On(n.shape,SG):o=new Ur(n.shape,SG),t.runWebGLProgram(o,[n],n.dtype)}var wG={kernelName:Gs,backendName:"webgl",kernelFunc:zle};var Gle=vr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,Wle=Se({opSnippet:Gle}),AG={kernelName:xo,backendName:"webgl",kernelFunc:Wle};var Ule=vr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Kle=Se({opSnippet:Ule}),NG={kernelName:To,backendName:"webgl",kernelFunc:Kle};var DG="return a + b;",Vle=bt({opSnippet:DG,packedOpSnippet:DG,supportsComplex:!0,cpuKernelImpl:iz}),_G={kernelName:Dn,backendName:"webgl",kernelFunc:Vle};var SC=class{variableNames;outputShape=[];userCode;constructor(e,t){this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}};var wC=class{variableNames;outputShape=[];userCode;packedInputs=!0;packedOutput=!0;constructor(e,t){this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}};function AC(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return pr({inputs:{x:n[0]},backend:t});if(n.length>L().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let p=Math.floor(n.length/2),u=AC({inputs:n.slice(0,p),backend:t}),l=AC({inputs:n.slice(p),backend:t});return AC({inputs:[u,l],backend:t})}let o=n.map(p=>p.dtype).reduce((p,u)=>Nt(p,u)),s=n.map(p=>p.shape),i=L().getBool("WEBGL_PACK")?new wC(n[0].shape,s):new SC(n[0].shape,s);return t.runWebGLProgram(i,n,o)}var RG={kernelName:Co,backendName:"webgl",kernelFunc:AC};function Hle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,p=y.parseAxisParam(s,o.shape),u=p,l=I.getAxesPermutation(u,i),m=o;l!=null&&(m=Kt({inputs:{x:o},backend:t,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,i)),I.assertAxesAreInnerMostDims("all",u,i);let[c,d]=I.computeOutAndReduceShapes(m.shape,u),f=y.sizeFromShape(d),h=pe({inputs:{x:m},backend:t,attrs:{shape:[-1,f]}}),g=io(h,h.dtype,"all",t),b;if(a){let x=I.expandShapeToKeepDim(c,p);b=pe({inputs:{x:g},backend:t,attrs:{shape:x}})}else b=pe({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(m),b}var MG={kernelName:za,backendName:"webgl",kernelFunc:Hle};function qle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,p=y.parseAxisParam(s,o.shape),u=p,l=I.getAxesPermutation(u,i),m=o;l!=null&&(m=Kt({inputs:{x:o},backend:t,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,i)),I.assertAxesAreInnerMostDims("any",u,i);let[c,d]=I.computeOutAndReduceShapes(m.shape,u),f=y.sizeFromShape(d),h=pe({inputs:{x:m},backend:t,attrs:{shape:[-1,f]}}),g=io(h,h.dtype,"any",t),b;if(a){let x=I.expandShapeToKeepDim(c,p);b=pe({inputs:{x:g},backend:t,attrs:{shape:x}})}else b=pe({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(m),b}var PG={kernelName:Ga,backendName:"webgl",kernelFunc:qle};var NC=class{variableNames=["A"];outputShape;userCode;constructor(e,t,n){let{windowSize:o,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];let i=t==="max"?">":"<",p=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${p};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var DC=class{variableNames=["A"];outputShape;userCode;packedInputs=!0;packedOutput=!0;constructor(e,t,n,o){y.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),o||this.variableNames.push("bestIndicesA");let i=this.outputShape,p=i.length,u=Ke(p),l=ur("coords",p),m,c;if(a===1){c=p+1;let R=Ke(c);m=`
        ${R} sourceLocR = ${R}(${l.join()}, 0);
        ++${l[p-1]};
        ${R} sourceLocG = ${R}(${l.join()}, 0);
        ++${l[p-2]};
        ${R} sourceLocA = ${R}(${l.join()}, 0);
        --${l[p-1]};
        ${R} sourceLocB = ${R}(${l.join()}, 0);
        --${l[p-2]};`}else c=p,m=`
        ${u} sourceLocR = coords;
        ++${l[p-1]};
        ${u} sourceLocG = coords;
        ++${l[p-2]};
        ${u} sourceLocA = coords;
        --${l[p-1]};
        ${u} sourceLocB = coords;
        --${l[p-2]};`;let d=["x","y","z","w","u","v"].slice(0,c),f="."+d[c-1],h=d.map(R=>"int "+R),g=ur("sourceLocR",c-1).concat("inIdx.r"),b=ur("sourceLocG",c-1).concat("inIdx.g"),x=ur("sourceLocB",c-1).concat("inIdx.b"),T=ur("sourceLocA",c-1).concat("inIdx.a"),C=n==="max"?"greaterThan":"lessThan",v=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${T.join()})));`,A=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${b.join()}) : 0.,
            hasNextRow ? getAChannel(${x.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${T.join()}) : 0.)`,_=o?"":`
      float getBestIndicesAChannel(${h.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${h.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${_}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${l[p-1]} < ${i[p-1]-1};
        bool hasNextRow = ${l[p-2]} < ${i[p-2]-1};
        ${m}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${A};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${A};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${C}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function FG(r,e,t,n=null){let o=e.shape[0],s=e.shape[1];n!=null&&(o=n.shape[0],s=n.shape[1]);let a=I.computeOptimalWindowSize(s),i={windowSize:a,inSize:s,batchSize:o,outSize:Math.ceil(s/a)},p=new NC(i,t,n==null),u=[e];n!=null&&u.push(n);let l=r.runWebGLProgram(p,u,"int32");if(l.shape[1]===1)return l;let m=FG(r,e,t,l);return r.disposeIntermediateTensorInfo(l),m}function EG(r,e,t,n=null){let o=n!=null?n.shape:e.shape,s=o[o.length-1],a=I.computeOptimalWindowSize(s),i=new DC(o,a,t,n==null),p=n==null?[e]:[e,n],u=r.runWebGLProgram(i,p,"int32");if(u.shape.length===e.shape.length){let l=EG(r,e,t,u);return r.disposeIntermediateTensorInfo(u),l}return u}function _C(r,e,t,n){let o=[t];if(I.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.shape.length),!L().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){let s=[],a=r.texData.get(e.dataId),i=a!==null&&a.isPacked,p=e;i&&(p=r.unpackTensor(e),s.push(p));let[u,l]=I.computeOutAndReduceShapes(p.shape,o),m=y.sizeFromShape(l),c=pe({inputs:{x:p},backend:r,attrs:{shape:[-1,m]}});s.push(c);let d=FG(r,c,n);s.push(d);let f=pe({inputs:{x:d},backend:r,attrs:{shape:u}});return s.forEach(h=>r.disposeIntermediateTensorInfo(h)),f}return EG(r,e,n)}function jle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=Kt({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(p),a=I.getInnerMostAxes(a.length,p.shape.length)),I.assertAxesAreInnerMostDims("argMax",[a[0]],p.shape.length);let l=_C(t,p,a[0],"max");return u.forEach(m=>t.disposeIntermediateTensorInfo(m)),l}var LG={kernelName:Ws,backendName:"webgl",kernelFunc:jle};function Xle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=Kt({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(p),a=I.getInnerMostAxes(a.length,p.shape.length)),I.assertAxesAreInnerMostDims("argMin",[a[0]],p.shape.length);let l=_C(t,p,a[0],"min");return u.forEach(m=>t.disposeIntermediateTensorInfo(m)),l}var BG={kernelName:Us,backendName:"webgl",kernelFunc:Xle};var Yle=vr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Zle=Se({opSnippet:Yle}),$G={kernelName:Io,backendName:"webgl",kernelFunc:Zle};var Qle=vr+"return log(x + sqrt(x * x + 1.0));",Jle=Se({opSnippet:Qle}),OG={kernelName:ko,backendName:"webgl",kernelFunc:Jle};var eme=vr+`
  return atan(x);
`,tme=Se({opSnippet:eme}),zG={kernelName:vo,backendName:"webgl",kernelFunc:tme};var rme=Hf+`
  return atan(a, b);
`,nme=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ao+`
  return result;
`,ome=bt({opSnippet:rme,packedOpSnippet:nme}),GG={kernelName:wo,backendName:"webgl",kernelFunc:ome};var sme=vr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,ame=Se({opSnippet:sme}),WG={kernelName:So,backendName:"webgl",kernelFunc:ame};var Wi=class{variableNames=["x"];outputShape;userCode;constructor(e,t,n,o=!1,s=!1){if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideHeight,p=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,m=e.effectiveFilterHeight,c=e.effectiveFilterWidth,d=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;let h=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,b=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,x="0.0";if(h||(x="-1.0 / 1e-20"),n){let R=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${p});
        const ivec2 pads = ivec2(${d}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${m};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${c};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${R} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?s?g:b:`wR * ${c} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let T="max",C=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(C="avgValue / max(count, 1.0)");let v=Math.floor(a/4)*4,A=a%4,_=`
      if (${h}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${T}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${p});
      const ivec2 pads = ivec2(${d}, ${f});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${m};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${_}
          }

          int xC = xCCorner + ${v};
          if (${A===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${_}
          } else if (${A===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${_}
          } else if (${A===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${_}
          }
        }
        setOutput(${C});
      }
    `}},al=class{variableNames=["x"];outputShape;userCode;constructor(e,t,n,o=!1,s=!1){if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideDepth,p=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,m=e.dilationHeight,c=e.dilationWidth,d=e.effectiveFilterDepth,f=e.effectiveFilterHeight,h=e.effectiveFilterWidth,g=e.padInfo.front,b=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;let T=t==="avg",C="0.0";if(T||(C="-1.0 / 1e-20"),n){let F=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${p}, ${u});
        const ivec3 pads = ivec3(${g}, ${b}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${m}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${h};
                  wC += ${c}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${F} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${h} +
                      wR * ${h} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let v="max",A=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(A="avgValue / max(count, 1.0)");let _=Math.floor(a/4)*4,R=a%4,M=`
      if (${T}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${p}, ${u});
      const ivec3 pads = ivec3(${g}, ${b}, ${x});
      const float initializationValue = ${C};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${C});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${m}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${_}; wC += 4) {
              int xC = xCCorner + wC * ${c};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                getValue(batch, xD, xR, xC + 3 * ${c}, ch)
              );

              ${M}
            }

            int xC = xCCorner + ${_};
            if (${R===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${M}
            } else if (${R===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                initializationValue,
                initializationValue
              );

              ${M}
            } else if (${R===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                initializationValue
              );

              ${M}
            }
          }
        }
        setOutput(${A});
      }
    `}};function ime(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;zi(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1;y.assert(I.eitherStridesOrDilationsAreOne(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let l=I.computePool2DInfo(o.shape,s,a,u,i,p);if(l.filterWidth===1&&l.filterHeight===1&&y.arraysEqual(l.inShape,l.outShape))return pr({inputs:{x:o},backend:t});let m=new Wi(l,"avg",!1);return t.runWebGLProgram(m,[o],"float32")}var UG={kernelName:Ao,backendName:"webgl",kernelFunc:ime};function ume(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:p,dataFormat:u}=n,l=[1,1,1],m=I.computePool3DInfo(o.shape,s,a,l,i,p,u),c=new al(m,"avg",!1);return t.runWebGLProgram(c,[o],"float32")}var KG={kernelName:Ks,backendName:"webgl",kernelFunc:ume};var RC=class{variableNames=["dy"];outputShape;userCode;constructor(e){this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,p=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=p-1-e.padInfo.top,m=u-1-e.padInfo.left,c=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${m});
      const float avgMultiplier = float(${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},MC=class{variableNames=["dy"];outputShape;userCode;constructor(e){this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,p=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,m=e.effectiveFilterDepth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,f=m-1-e.padInfo.front,h=c-1-e.padInfo.top,g=d-1-e.padInfo.left,b=1/(t*n*o);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${h}, ${g});
      const float avgMultiplier = float(${b});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${m};
            wD += ${p}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function pme(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:p,pad:u,dimRoundingMode:l}=n,m=[1,1,1],c=I.computePool3DInfo(a.shape,i,p,m,u,l),d=new MC(c);return t.runWebGLProgram(d,[o],a.dtype)}var VG={kernelName:Xi,backendName:"webgl",kernelFunc:pme};function lme(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s;zi([o,s],"avgPoolGrad");let{filterSize:i,strides:p,pad:u}=n,l=I.computePool2DInfo(a.shape,i,p,1,u),m=new RC(l);return t.runWebGLProgram(m,[o],a.dtype)}var HG={kernelName:cp,backendName:"webgl",kernelFunc:lme};function mme(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;return Bm({a:o,b:s,transposeA:a,transposeB:i,backend:t})}var qG={kernelName:No,backendName:"webgl",kernelFunc:mme};var PC=class{variableNames;outputShape=[];userCode;constructor(e,t,n,o,s,a){this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n);let i="0.0";o!=null&&(I.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let p="1.0";s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),p="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${p};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var FC=class{variableNames;outputShape;userCode;packedInputs=!0;packedOutput=!0;constructor(e,t,n,o,s,a){this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";o!=null&&(I.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let p="vec4(1.0)";s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),p="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${p};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var cme=({inputs:r,backend:e,attrs:t})=>{let{x:n,mean:o,variance:s,offset:a,scale:i}=r;y.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:p}=t;p==null&&(p=.001);let u=[n,o,s],l=null;a!=null&&(l=a.shape,u.push(a));let m=null;i!=null&&(m=i.shape,u.push(i));let c=L().getBool("WEBGL_PACK_NORMALIZATION")?new FC(n.shape,o.shape,s.shape,l,m,p):new PC(n.shape,o.shape,s.shape,l,m,p);return e.runWebGLProgram(c,u,u[0].dtype)},jG={kernelName:Ko,backendName:"webgl",kernelFunc:cme};var EC=class{variableNames=["source"];outputShape;userCode;rank;customUniforms;constructor(e){this.outputShape=e,this.rank=e.length;let t=Ke(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=dme(this.rank),o,s=e.map((a,i)=>`sourceLoc.${l2[i]} = start[${i}] + coords.${l2[i]};`);o=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${n}));
      }
    `}},l2=["x","y","z","w","u","v"];function dme(r){if(r===1)return"sourceLoc";if(r<=6)return l2.slice(0,r).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var LC=class{variableNames=["source"];packedInputs=!0;packedOutput=!0;outputShape;userCode;rank;customUniforms;constructor(e){this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=Ke(this.rank),n=ur("coords",this.rank),o=ur("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,a=`getChannel(getSource(${o.join()}), ${s})`,i=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${a};
        --${o[this.rank-1]};
      }
    `,p=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${a};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((l,m)=>`start[${m}]`).join()});`:e.map((l,m)=>`${o[m]} = ${n[m]} + start[${m}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${i}
        ${p}
        setOutput(result);
      }
    `}};function fme(r,e,t,n){let o=n.texData.get(r.dataId),s=n.makeTensorInfo(t,r.dtype),a=n.texData.get(s.dataId);Object.assign(a,o),a.refCount=1,a.shape=t,a.dtype=r.dtype;let i=vt.computeFlatOffset(e,y.computeStrides(r.shape));o.slice&&(i+=o.slice.flatOffset),a.slice={flatOffset:i,origDataId:o.slice&&o.slice.origDataId||r.dataId};let p=n.dataRefCount.get(a.slice.origDataId)||1;return n.dataRefCount.set(a.slice.origDataId,p+1),s}function Ui(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n,[i,p]=vt.parseSliceParams(o,s,a);if(vt.assertParamsValid(o,i,p),y.sizeFromShape(p)===0)return t.makeTensorInfo(p,o.dtype,[]);if(t.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=t.texData.get(o.dataId),c=$z(m.values,i,p,o.shape,o.dtype);return t.makeTensorInfo(p,o.dtype,c)}let{isPacked:u}=t.texData.get(o.dataId),l=vt.isSliceContinous(o.shape,i,p);if(u||!l){let m=L().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new LC(p):new EC(p),c=[i];return t.runWebGLProgram(m,[o],o.dtype,c)}return t.uploadToGPU(o.dataId),fme(o,i,p,t)}var XG={kernelName:ta,backendName:"webgl",kernelFunc:Ui};var hme=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;y.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((x,T)=>x*T),p=I.getReshaped(o.shape,s,i),u=I.getPermuted(p.length,s.length),l=I.getReshapedPermuted(o.shape,s,i),m=I.getSliceBeginCoords(a,s.length),c=I.getSliceSize(l,a,s.length),d=[],f=pe({inputs:{x:o},backend:t,attrs:{shape:p}}),h=Kt({inputs:{x:f},backend:t,attrs:{perm:u}}),g=pe({inputs:{x:h},backend:t,attrs:{shape:l}}),b=Ui({inputs:{x:g},backend:t,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(x=>t.disposeIntermediateTensorInfo(x)),b},YG={kernelName:Vs,backendName:"webgl",kernelFunc:hme};function gme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=t.readSync(o.dataId),p=t.readSync(s.dataId),u=hC(i,p,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,u)}var ZG={kernelName:Wa,backendName:"webgl",kernelFunc:gme};function bme(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.readSync(n.dataId),a=t.readSync(o.dataId),i=I.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var QG={kernelName:Yi,backendName:"webgl",kernelFunc:bme};var yme="return float(a != b);",m2=bt({opSnippet:yme,cpuKernelImpl:Dz,dtype:"bool"}),JG={kernelName:pi,backendName:"webgl",kernelFunc:m2};function rp(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return pr({inputs:{x:o.complexTensorInfos.real},backend:t})}var eW={kernelName:vp,backendName:"webgl",kernelFunc:rp};var xme="return float(int(x));";function tW(r,e){let t=new Ur(r.shape,xme),n=e.runWebGLProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function c2(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return pr({inputs:{x:o},backend:t});let a=kt(o.shape),i=c2({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),p=zn({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(i),p}if(o.dtype==="complex64"){let a=rp({inputs:{input:o},backend:t}),i=c2({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),i}if(!y.hasEncodingLoss(o.dtype,s)){let a=pr({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(t.shouldExecuteOnCPU([o])){let a=t.texData.get(o.dataId).values,[i,p,u]=pz(a,o.shape,o.dtype,s);return t.makeTensorInfo(i,p,u)}if(s==="int32")return tW(o,t);if(s==="bool"){let a=t.makeTensorInfo([],"bool",y.getTypedArrayFromDType("bool",1)),p=m2({inputs:{a:o,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),p}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var rW={kernelName:Hn,backendName:"webgl",kernelFunc:c2};var nW="return ceil(x);",Tme=Se({opSnippet:nW,packedOpSnippet:nW,cpuKernelImpl:lz}),oW={kernelName:Do,backendName:"webgl",kernelFunc:Tme};var BC=class{variableNames=["A"];userCode;outputShape;customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];constructor(e){this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var $C=class{variableNames=["A"];packedInputs=!0;packedOutput=!0;userCode;outputShape;customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];constructor(e){this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function Cme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i;L().getBool("WEBGL_PACK_CLIP")?i=new $C(o.shape):i=new BC(o.shape);let p=[[s],[a]];return t.runWebGLProgram(i,[o],o.dtype,p)}var sW={kernelName:qn,backendName:"webgl",kernelFunc:Cme};var OC=class{variableNames=["real","imag"];userCode;outputShape;constructor(e){this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function aW(r,e){return{dataId:e.dataId,dtype:e.dtype,shape:r.shape}}function Ime(r){let{inputs:e,backend:t}=r,{x:n}=e,o=t.texData.get(n.dataId),s=new OC(n.shape),a=[aW(n,o.complexTensorInfos.real),aW(n,o.complexTensorInfos.imag)];return t.runWebGLProgram(s,a,a[0].dtype)}var iW={kernelName:fp,backendName:"webgl",kernelFunc:Ime};var zC=class{variableNames;outputShape=[];userCode;constructor(e){this.outputShape=I.computeOutShape(e,1),this.variableNames=e.map((a,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let i=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}let o=t.length,s=t[t.length-1];n.push(`else setOutput(getT${o}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}};var WC=class{variableNames;packedInputs=!0;packedOutput=!0;outputShape=[];userCode;constructor(e,t){this.outputShape=I.computeOutShape(e,t);let n=this.outputShape,o=n.length,s=Ke(o),a=ur("coords",o),i=["x","y","z","w","u","v"].slice(0,o);this.variableNames=e.map((h,g)=>`T${g}`);let p=new Array(e.length-1);p[0]=e[0][t];for(let h=1;h<p.length;h++)p[h]=p[h-1]+e[h][t];let u=i[t],l=i.slice(-2),m=i.join(),c=`if (${u} < ${p[0]}) {
        return getChannel(
            getT0(${m}), vec2(${l.join()}));
        }`;for(let h=1;h<p.length;h++){let g=p[h-1];c+=`
        if (${u} < ${p[h]}  && ${u} >= ${p[h-1]}) {
          return getChannel(
            getT${h}(${GC(i,u,g)}),
            vec2(${GC(l,u,g)}));
        }`}let d=p.length,f=p[p.length-1];c+=`
        return getChannel(
          getT${d}(${GC(i,u,f)}),
          vec2(${GC(l,u,f)}));`,this.userCode=`
      float getValue(${i.map(h=>"int "+h)}) {
        ${c}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[o-1]} = ${a[o-1]} + 1;
        if (${a[o-1]} < ${n[o-1]}) {
          result.g = getValue(${a});
        }

        ${a[o-2]} = ${a[o-2]} + 1;
        if (${a[o-2]} < ${n[o-2]}) {
          result.a = getValue(${a});
        }

        ${a[o-1]} = ${a[o-1]} - 1;
        if (${a[o-2]} < ${n[o-2]} &&
            ${a[o-1]} < ${n[o-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function GC(r,e,t){let n=r.indexOf(e);return r.map((s,a)=>a===n?`${s} - ${t}`:s).join()}function $m(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return pr({inputs:{x:o.complexTensorInfos.imag},backend:t})}var uW={kernelName:Cp,backendName:"webgl",kernelFunc:$m};function jf(r,e,t){let n=r[0].dtype;if(n==="complex64"){let d=r.map(x=>rp({inputs:{input:x},backend:t})),f=r.map(x=>$m({inputs:{input:x},backend:t})),h=jf(d,e,t),g=jf(f,e,t),b=zn({inputs:{real:h,imag:g},backend:t});return d.forEach(x=>t.disposeIntermediateTensorInfo(x)),f.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),b}let o=t.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let d=r.map(C=>{let A=[-1,y.sizeFromShape(C.shape.slice(e))];return pe({inputs:{x:C},backend:t,attrs:{shape:A}})}),f=d.map(C=>({vals:t.readSync(C.dataId),shape:C.shape})),h=I.computeOutShape(d.map(C=>C.shape),1),g=d[0].shape[0]===1,b=mz(f,h,n,g),x=I.computeOutShape(r.map(C=>C.shape),e),T=t.makeTensorInfo(x,n,b);return d.forEach(C=>t.disposeIntermediateTensorInfo(C)),T}let s=r.filter(d=>y.sizeFromShape(d.shape)>0),a=L().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(s.length===1){let d=a?new Ur(r[0].shape,Tu):new On(r[0].shape,Tu);return t.runWebGLProgram(d,r,n)}let i=L().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>i){let d=[];for(let h=0;h<s.length;h+=i){let g=s.slice(h,h+i);d.push(jf(g,e,t))}let f=jf(d,e,t);for(let h of d)t.disposeIntermediateTensorInfo(h);return f}if(a){let d=new WC(s.map(f=>f.shape),e);return t.runWebGLProgram(d,s,n)}let{tensors2D:p,outShape:u}=kme(s,e,t),l=new zC(p.map(d=>d.shape)),m=t.runWebGLProgram(l,p,n);p.forEach(d=>t.disposeIntermediateTensorInfo(d));let c=pe({inputs:{x:m},attrs:{shape:u},backend:t});return t.disposeIntermediateTensorInfo(m),c}function kme(r,e,t){let n=I.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>pe({inputs:{x:s},attrs:{shape:[-1,y.sizeFromShape(s.shape.slice(e))]},backend:t})),outShape:n}}function d2(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,e[0].shape)[0],a=e.map(u=>u.shape);I.assertParamsConsistent(a,s);let i=I.computeOutShape(e.map(u=>u.shape),s);if(y.sizeFromShape(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);let p=e.filter(u=>y.sizeFromShape(u.shape)>0);return p.length===1?pr({inputs:{x:p[0]},backend:t}):jf(p,s,t)}var pW={kernelName:Hs,backendName:"webgl",kernelFunc:d2};var Xf=class{variableNames=["x","W"];outputShape;userCode;constructor(e,t=!1,n=null,o=!1,s=!1){this.outputShape=e.outShape;let a=e.padInfo.top,i=e.padInfo.left,p=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,m=e.dilationWidth,c=e.filterHeight,d=e.filterWidth,f=Math.floor(e.inChannels/4)*4,h=e.inChannels%4,g=e.dataFormat==="channelsLast",b=g?1:2,x=g?2:3,T=g?3:1,C="",v="";n&&(o?C=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?C=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:C=`
          float activation(float x) {
            ${n}
          }
        `,v="result = activation(result);");let A=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${C}

      const ivec2 strides = ivec2(${p}, ${u});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${T}];

        ivec2 xRCCorner =
            ivec2(coords[${b}], coords[${x}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${m};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${h===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${h===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${h===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${A}
        ${v}
        setOutput(result);
      }
    `}},UC=class{variableNames=["x","W"];outputShape;userCode;constructor(e){this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,o=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,p=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,m=e.filterDepth,c=e.filterHeight,d=e.filterWidth,f=Math.floor(e.inChannels/4)*4,h=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${m}; wF++) {
          int xF = xFCorner + wF * ${p};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${h===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${h===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${h===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var Yf=class{variableNames=["x","W"];packedInputs=!0;packedOutput=!0;outputShape;userCode;enableShapeUniforms;customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];constructor(e,t=!1,n=null,o=!1,s=!1){this.outputShape=e.outShape,this.enableShapeUniforms=It(this.outputShape.length);let a=e.padInfo.left,i=e.strideWidth,p=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,m=l,c=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<l;g++)c+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;c+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let g=0;g<l;g++)c+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;c+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(m+1)/2;g++){let b=g*2;if(c+=`
           xC = xCCorner + ${b*p};
           `,i===1){if(b<l&&(a%2===1?(c+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }
               `,p===1&&b>0?c+=`
                 xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                 `:c+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                   } else {
                     xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                   }
                   `):c+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xC${b} = xTexelC${b};
                 `,b+1<l)){let x=a%2===0?y.nearestLargerEven(p):p;p%2===0&&a%2===1||p%2!==0&&a%2!==1?(c+=`
                   xCOffset = xC + imod(pads[1], 2) + ${x};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                     xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${b+1}.zw = vec2(0.0);
                     }
                     xTexelC${b+1}Ready = 1;
                   }
                   `,p>1?c+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                     } else {
                      xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                     }
                     `:c+=`
                     xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                     `):x===1?c+=`
                     xC${b+1} = xTexelC${b};
                     `:c+=`
                     xCOffset = xC + ${x};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                       xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${b+1}.zw = vec2(0.0);
                       }
                       xTexelC${b+1}Ready = 1;
                     }

                     xC${b+1} = xTexelC${b+1};
                     `}}else b<l&&(a%2===1?(c+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.0);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
               `,b+1<l&&(c+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                 `)):(c+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(
                   xTexelC${b}.xy, xTexelC${b+1}.xy);
               `,b+1<l&&(c+=`
                   xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                 `)));b<l&&(c+=`
             wTexel = getW(r, ${b}, d1, d2);
             dotProd += xC${b}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${b}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,b+1<l&&(c+=`
               wTexel = getW(r, ${b+1}, d1, d2);
               dotProd += xC${b+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${b+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}c+=`
     }
   `,c+=`
     }
   `,c+=`
     }
   `;let d="",f="";n&&(o?d=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:s?d=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:d=`vec4 activation(vec4 x) {
           ${n}
         }`,f="result = activation(result);");let h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${d}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${c}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${h}
         ${f}
         setOutput(result);
       }
     `}};var KC=class{variableNames=["A"];packedInputs=!0;packedOutput=!0;outputShape;userCode;enableShapeUniforms;customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}];constructor(e,t){this.outputShape=e,this.enableShapeUniforms=It(this.outputShape.length);let{dataFormat:n}=t,o=Yt(),s=n==="channelsLast",a=s?1:2,i=s?2:3,p=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,u="";for(let l=0;l<=1;l++)for(let m=0;m<=1;m++)u+=`
          blockIndex = rc.z + ${m};
          pos = rc.y + ${l};

          ${p}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+m}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+m}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${o.output} = result;
      }
    `}};function VC(r,e){let t=r.length;return t>=3?e?[...r.slice(0,-3),r[t-3]*r[t-2],r[t-1]]:[...r.slice(0,-3),r[t-3],r[t-2]*r[t-1]]:!e&&t===1&&r[0]>1?[r[0],1]:null}function HC({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let p=r.shape,u=n.texData.get(r.dataId),l=t.inChannels,m=p[0]*p[1]*p[2],c=t.outChannels,d=t.dataFormat==="channelsLast",f=!1,h=!1,g,b=[];if(s!=null){let C=VC(s.shape,d);C!=null&&(s=pe({inputs:{x:s},backend:n,attrs:{shape:C}}),b.push(s))}if(o!=null){let C=VC(o.shape,d);C!=null&&(o=pe({inputs:{x:o},backend:n,attrs:{shape:C}}),b.push(o))}if(!((m===1||c===1)&&l>p2)&&u.isPacked&&d&&u.texture!=null&&p[2]%2!==0&&y.arraysEqual(u.shape.slice(-3),p.slice(-3))){let C=p[0]*p[1]*(p[2]+1),v={dataId:r.dataId,shape:[1,C,t.inChannels],dtype:r.dtype},A=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,y.assert(ol(u.shape,v.shape),()=>`packed reshape ${u.shape} to ${v.shape} isn't free`);let _=pe({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});b.push(_);let R=Bm({a:v,b:_,backend:n,transposeA:f,transposeB:h,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),M=n.texData.get(R.dataId);y.assert(M.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=A,M.shape=t.outShape,g=pr({inputs:{x:R},backend:n}),g.shape=t.outShape,b.push(R)}else{let C=t.outHeight*t.outWidth,v=pe({inputs:{x:r},backend:n,attrs:{shape:d?[t.batchSize,C,t.inChannels]:[t.batchSize,t.inChannels,C]}}),A=pe({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),_=Bm({a:d?v:A,b:d?A:v,transposeA:!d,transposeB:h,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});g=pe({inputs:{x:_},backend:n,attrs:{shape:t.outShape}}),b.push(v),b.push(A),b.push(_)}for(let C of b)n.disposeIntermediateTensorInfo(C);return g}function qC({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let{filterWidth:p,filterHeight:u,inChannels:l,outWidth:m,outHeight:c,dataFormat:d}=t,f=d==="channelsLast",h=p*u*l,g=c*m,b=[t.batchSize,h,g],x=!0,T=!1,C=[];if(s!=null){let j=VC(s.shape,f);j!=null&&(s=pe({inputs:{x:s},backend:n,attrs:{shape:j}}),C.push(s))}if(o!=null){let j=VC(o.shape,f);j!=null&&(o=pe({inputs:{x:o},backend:n,attrs:{shape:j}}),C.push(o))}let v=pe({inputs:{x:e},backend:n,attrs:{shape:[1,h,y.sizeFromShape(e.shape)/h]}});C.push(v);let A=new KC(b,t),_=[r.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],R=n.runWebGLProgram(A,[r],"float32",_),M=pe({inputs:{x:R},backend:n,attrs:{shape:b}});C.push(R),C.push(M);let F=o!=null,O=s!=null,G=i==="leakyrelu",W=i?tp(i,!0):null,U=new qf(f?M.shape:v.shape,f?v.shape:M.shape,f?[t.batchSize,g,t.outChannels]:[t.batchSize,t.outChannels,g],x,T,F,W,O,G),K=f?[M,v]:[v,M];if(o&&K.push(o),O&&K.push(s),G){let j=n.makeTensorInfo([],"float32",y.createScalarValue(a,"float32"));K.push(j),C.push(j)}let H=n.runWebGLProgram(U,K,"float32"),X=pe({inputs:{x:H},backend:n,attrs:{shape:t.outShape}});C.push(H);for(let j of C)n.disposeIntermediateTensorInfo(j);return X}function vme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:p,dilations:u,dimRoundingMode:l}=n,m=I.convertConv2DDataFormat(p),c=I.computeConv2DInfo(o.shape,s.shape,a,u,i,l,!1,m),d;if(c.filterHeight===1&&c.filterWidth===1&&c.dilationHeight===1&&c.dilationWidth===1&&c.strideHeight===1&&c.strideWidth===1&&(c.padInfo.type==="SAME"||c.padInfo.type==="VALID"))d=HC({x:o,filter:s,convInfo:c,backend:t});else if(c.strideWidth<=2&&m==="channelsLast"&&L().getBool("WEBGL_EXP_CONV")){let h=new Yf(c),g=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];d=t.runWebGLProgram(h,[o,s],"float32",g)}else if(L().getBool("WEBGL_CONV_IM2COL"))d=qC({x:o,filter:s,convInfo:c,backend:t});else{let h=new Xf(c);d=t.runWebGLProgram(h,[o,s],"float32")}let f=pe({inputs:{x:d},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(d),f}var lW={kernelName:_o,backendName:"webgl",kernelFunc:vme};var jC=class{variableNames=["x","dy"];outputShape;userCode;constructor(e){this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${a?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},XC=class{variableNames=["dy","W"];outputShape;userCode;constructor(e){this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,p=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,m=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${m}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},YC=class{variableNames=["x","dy"];outputShape;userCode;constructor(e){this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${s};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},ZC=class{variableNames=["dy","W"];outputShape;userCode;constructor(e){this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,p=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=o-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${u}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Sme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,dataFormat:p,dimRoundingMode:u,filterShape:l}=n,m=I.convertConv2DDataFormat(p),c=I.computeConv2DInfo(o.shape,l,a,1,i,u,!1,m),d=new jC(c);return t.runWebGLProgram(d,[o,s],"float32")}var mW={kernelName:hp,backendName:"webgl",kernelFunc:Sme};var QC=class{variableNames=["dy","W"];packedInputs=!0;packedOutput=!0;outputShape;userCode;enableShapeUniforms;customUniforms=[{name:"strides",type:"vec2"}];constructor(e){this.outputShape=e.inShape,this.enableShapeUniforms=It(this.outputShape.length);let t=e.filterHeight,n=e.filterWidth,o=t-1-e.padInfo.top,s=n-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${s});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            int wCPerm = ${n} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}};function wme(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:p,dataFormat:u,dimRoundingMode:l}=n,m=I.convertConv2DDataFormat(u),c=I.computeConv2DInfo(a,s.shape,i,1,p,l,!1,m);if(L().getBool("WEBGL_PACK")&&m==="channelsLast"){let d=[[c.strideHeight,c.strideWidth]],f=new QC(c);return t.runWebGLProgram(f,[o,s],"float32",d)}else{let d=new XC(c);return t.runWebGLProgram(d,[o,s],"float32")}}var cW={kernelName:Ro,backendName:"webgl",kernelFunc:wme};function Ame(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:p}=n,u=I.computeConv3DInfo(o.shape,s.shape,a,p,i),l=new UC(u);return t.runWebGLProgram(l,[o,s],"float32")}var dW={kernelName:Mo,backendName:"webgl",kernelFunc:Ame};function Nme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:p}=n,u=I.computeConv3DInfo(o.shape,p,a,1,i),l=new YC(u);return t.runWebGLProgram(l,[o,s],"float32")}var fW={kernelName:Ua,backendName:"webgl",kernelFunc:Nme};function Dme(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:a,strides:i,inputShape:p}=n,u=I.computeConv3DInfo(p,s.shape,i,1,a),l=new ZC(u);return t.runWebGLProgram(l,[o,s],"float32")}var hW={kernelName:Ka,backendName:"webgl",kernelFunc:Dme};var _me=Fa+`
  return cos(x);
`,Rme=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${ao}
  return result;
`,Mme=Se({opSnippet:_me,packedOpSnippet:Rme}),gW={kernelName:Po,backendName:"webgl",kernelFunc:Mme};var Pme=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Fme=Se({opSnippet:Pme}),bW={kernelName:Fo,backendName:"webgl",kernelFunc:Fme};var JC=class{variableNames=["Image","Boxes","BoxInd"];outputShape=[];userCode;constructor(e,t,n,o,s){let[a,i,p,u]=e,[l]=t,[m,c]=n;this.outputShape=[l,m,c,u];let d=o==="bilinear"?1:0,[f,h]=[`${i-1}.0`,`${p-1}.0`],[g,b,x]=m>1?[`${(i-1)/(m-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[T,C,v]=c>1?[`${(p-1)/(c-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${T});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${b};
        float width_scale = ${C};

        float in_y = ${x};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var Eme=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:p,extrapolationValue:u}=n,l=new JC(o.shape,s.shape,i,p,u);return t.runWebGLProgram(l,[o,s,a],"float32")},yW={kernelName:Ha,backendName:"webgl",kernelFunc:Eme};var Lg=class{constructor(e,t,n,o){this.op=e;this.outputShape=t;let s=this.outputShape.length,a=this.op==="*"?"1.0":"0.0",i=n?a:`getX(${xW(s,"coords",this.op)})`,p=this.outputShape[this.outputShape.length-1],u="",l="";n?(u=o?`end != ${p-1}`:"end != 0",l=o?"end + 1":"end - 1"):(u=o?`end + pow2 < ${p}`:"end >= pow2",l=o?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Ke(s)} coords = getOutputCoords();
        int end = ${TW(s,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${l};
          ${TW(s,"coords",this.op)} = idx;
          val ${this.op}= getX(${xW(s,"coords",this.op)});
        }
        setOutput(val);
      }
    `}variableNames=["x"];userCode;customUniforms=[{name:"index",type:"float"}]};function xW(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.x, ${e}.y`;if(r===3)return`${e}.x, ${e}.y, ${e}.z`;if(r===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function TW(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.y`;if(r===3)return`${e}.z`;if(r===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function eI(r,e,t,n,o,s){let a=e.shape.length,i=I.getAxesPermutation([n],a),p=e;i!=null&&(p=Kt({inputs:{x:e},backend:t,attrs:{perm:i}}));let u=I.getInnerMostAxes(1,a)[0];if(u!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${n}`);let l=p.shape[u],m=pr({inputs:{x:p},backend:t});for(let c=0;c<=Math.ceil(Math.log2(l))-1;c++){let d=new Lg(r,p.shape,!1,s),f=[[c]],h=m;m=t.runWebGLProgram(d,[m],m.dtype,f),t.disposeIntermediateTensorInfo(h)}if(o){let c=new Lg(r,p.shape,o,s),d=m;m=t.runWebGLProgram(c,[m],m.dtype),t.disposeIntermediateTensorInfo(d)}if(i!=null){let c=I.getUndoAxesPermutation(i),d=Kt({inputs:{x:m},backend:t,attrs:{perm:c}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(p),d}return m}function Bme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;return eI("*",o,t,s,a,i)}var CW={kernelName:Va,backendName:"webgl",kernelFunc:Bme};function $me(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;return eI("+",o,t,s,a,i)}var IW={kernelName:Eo,backendName:"webgl",kernelFunc:$me};function Ome(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let p=t.readSync(o.dataId),u=t.readSync(s.dataId),l=hC(p,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,l)}else if(o.shape.length===2){let p=t.bufferSync(o),u=t.bufferSync(s),l=uz(p,u,a,i);return t.makeTensorInfo(l.shape,s.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var kW={kernelName:Zi,backendName:"webgl",kernelFunc:Ome};var tI=class{variableNames=["x"];outputShape=[];userCode;blockSize;dataFormat;constructor(e,t,n){this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function zme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n,i=o.shape[0],p=a==="NHWC"?o.shape[1]:o.shape[2],u=a==="NHWC"?o.shape[2]:o.shape[3],l=a==="NHWC"?o.shape[3]:o.shape[1],m=p*s,c=u*s,d=l/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=new tI(f,s,a);return t.runWebGLProgram(h,[o],o.dtype)}var vW={kernelName:qa,backendName:"webgl",kernelFunc:zme};var Zf=class{variableNames=["x","W"];outputShape;userCode;enableShapeUniforms;customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];constructor(e,t=!1,n=null,o=!1,s=!1){this.outputShape=e.outShape,this.enableShapeUniforms=It(this.outputShape.length);let a=e.filterHeight,i=e.filterWidth,p=e.outChannels/e.inChannels,u="",l="";n&&(o?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:u=`
          float activation(float x) {
            ${n}
          }
        `,l="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${p};
        int q = d2 - d1 * ${p};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${m}
        ${l}
        setOutput(result);
      }
    `}};var Qf=class{variableNames=["x","W"];packedInputs=!0;packedOutput=!0;outputShape;userCode;enableShapeUniforms;customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];constructor(e,t=!1,n=null,o=!1,s=!1){this.outputShape=e.outShape,this.enableShapeUniforms=It(this.outputShape.length);let a=e.outChannels/e.inChannels,i=e.padInfo.left,p=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,m=e.filterWidth,c=m,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let b=0;b<m;b++)d+=`
          vec4 xTexelC${b*2};
          int xTexelC${b*2}Ready;
          vec4 xTexelC${b*2+1};
          int xTexelC${b*2+1}Ready;
          vec4 xC${b};`;d+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let b=0;b<m;b++)d+=`
          xTexelC${b*2} = vec4(0.0);
          xTexelC${b*2}Ready = 0;
          xTexelC${b*2+1} = vec4(0.0);
          xTexelC${b*2+1}Ready = 0;
          xC${b} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let b=0;b<(c+1)/2;b++){let x=b*2;if(d+=`
          xC = xCCorner + ${x*u};
          `,p===1){if(x<m&&(i%2===1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }
              `,u===1&&x>0?d+=`
                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                  } else {
                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xC${x} = xTexelC${x};
                `,x+1<m)){let T=i%2===0?y.nearestLargerEven(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${T};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${x+1}.zw = vec2(0.0);
                    }
                    xTexelC${x+1}Ready = 1;
                  }
                  `,u>1?d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                    } else {
                     xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                    }
                    `:d+=`
                    xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                    `):T===1?d+=`
                    xC${x+1} = xTexelC${x};
                    `:d+=`
                    xCOffset = xC + ${T};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${x+1}.zw = vec2(0.0);
                      }
                      xTexelC${x+1}Ready = 1;
                    }

                    xC${x+1} = xTexelC${x+1};
                    `}}else x<m&&(i%2===1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.0);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
              `,x+1<m&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(
                  xTexelC${x}.xy, xTexelC${x+1}.xy);
              `,x+1<m&&(d+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                `)));x<m&&(d+=`
            wTexel = getW(r, ${x}, d1, q);
            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);
          `,x+1<m&&(d+=`
              wTexel = getW(r, ${x+1}, d1, q);
              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let f="",h="";n&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:f=`vec4 activation(vec4 x) {
          ${n}
        }`,h="result = activation(result);");let g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${h}
        setOutput(result);
      }
    `}};function Gme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:p,dimRoundingMode:u}=n,l=p;l==null&&(l=[1,1]),y.assert(I.eitherStridesOrDilationsAreOne(a,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let m=I.computeConv2DInfo(o.shape,s.shape,a,l,i,u,!0),c;L().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1?c=new Qf(m):c=new Zf(m);let d=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];return t.runWebGLProgram(c,[o,s],"float32",d)}var SW={kernelName:Lo,backendName:"webgl",kernelFunc:Gme};var rI=class{variableNames=["x","dy"];outputShape;userCode;constructor(e){this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},nI=class{variableNames=["dy","W"];outputShape;userCode;constructor(e){this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,p=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${p}; dm++) {
              int d2 = d1 * ${p} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Wme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,dilations:i,pad:p,dimRoundingMode:u,filterShape:l}=n,m=I.computeConv2DInfo(o.shape,l,a,i,p,u,!0),c=new rI(m);return t.runWebGLProgram(c,[o,s],"float32")}var wW={kernelName:gp,backendName:"webgl",kernelFunc:Wme};function Ume(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,dilations:i,pad:p,dimRoundingMode:u,inputShape:l}=n,m=I.computeConv2DInfo(l,s.shape,a,i,p,u,!0),c=new nI(m);return t.runWebGLProgram(c,[o,s],"float32")}var AW={kernelName:bp,backendName:"webgl",kernelFunc:Ume};var oI=class{variableNames=["X"];outputShape;userCode;constructor(e){this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function Kme(r){let{inputs:e,backend:t}=r,{x:n}=e,o=[...n.shape,...n.shape],s=y.sizeFromShape(n.shape),a=pe({inputs:{x:n},backend:t,attrs:{shape:[s]}}),i=new oI(s),p=t.runWebGLProgram(i,[a],a.dtype),u=pe({inputs:{x:p},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(p),u}var NW={kernelName:Qi,backendName:"webgl",kernelFunc:Kme};var sI=class{variableNames=["x","W"];outputShape;userCode;constructor(e){this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:o,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:p,dilationHeight:u,dilationWidth:l}=e,{top:m,left:c}=o;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${a});
      const ivec2 pads = ivec2(${m}, ${c});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${p}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function Vme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:p}=n,u=I.computeDilation2DInfo(o.shape,s.shape,a,i,"NHWC",p),l,m=new sI(u);l=t.runWebGLProgram(m,[o,s],"float32");let c=pe({inputs:{x:l},backend:t,attrs:{shape:u.outShape}});return t.disposeIntermediateTensorInfo(l),c}var DW={kernelName:Bo,backendName:"webgl",kernelFunc:Vme};function Hme(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:a,summedDims:i,idDims:p}=I.decodeEinsumEquation(o,s.length);I.checkEinsumDimSizes(a.length,p,s);let{path:u,steps:l}=I.getEinsumComputePath(i,p),m=l.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of l[h]){let{permutationIndices:b,expandDims:x}=I.getEinsumPermutation(d,p[g]),T;I.isIdentityPermutation(b)?T=s[g]:(T=Kt({inputs:{x:s[g]},backend:t,attrs:{perm:b}}),f.push(T));let C=T.shape.slice();for(let v=0;v<x.length;++v)C.splice(x[v],0,1);y.arraysEqual(T.shape,C)||(T=pe({inputs:{x:T},backend:t,attrs:{shape:C}}),f.push(T)),c===null?c=T:(c=Fg({inputs:{a:T,b:c},backend:t}),f.push(c))}h<m-1&&(u[h]>=0&&(c=Lm({inputs:{x:c},backend:t,attrs:{axis:u[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&t.disposeIntermediateTensorInfo(h);return c}var _W={kernelName:yp,backendName:"webgl",kernelFunc:Hme};var qme="return (x >= 0.0) ? x : (exp(x) - 1.0);",jme=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Xme=Se({opSnippet:qme,packedOpSnippet:jme}),RW={kernelName:Oo,backendName:"webgl",kernelFunc:Xme};var Yme="return (b >= 0.0) ? a : a * (b + 1.0);",Zme=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Qme=r=>{let{inputs:e,backend:t}=r,{dy:n,y:o}=e,s=L().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Pa(Zme,n.shape,o.shape):new $s(Yme,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],n.dtype)},MW={kernelName:ja,backendName:"webgl",kernelFunc:Qme};var Jme=`
  return vec4(equal(a, b));
`,ece="return float(a == b);",tce=bt({opSnippet:ece,packedOpSnippet:Jme,dtype:"bool",cpuKernelImpl:cz}),PW={kernelName:Ya,backendName:"webgl",kernelFunc:tce};var rce=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${I.ERF_P};
  float a1 = ${I.ERF_A1};
  float a2 = ${I.ERF_A2};
  float a3 = ${I.ERF_A3};
  float a4 = ${I.ERF_A4};
  float a5 = ${I.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,nce=Se({opSnippet:rce}),FW={kernelName:Xa,backendName:"webgl",kernelFunc:nce};var oce=Fa+`
  return exp(x);
`,sce=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,f2=Se({opSnippet:oce,packedOpSnippet:sce,cpuKernelImpl:dz,dtype:"float32"}),EW={kernelName:zo,backendName:"webgl",kernelFunc:f2};function aI(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,a=s.shape.length,i=s.shape.slice(),p=o;return o<0&&(y.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),p=a+o+1),i.splice(p,0,1),pe({inputs:{x:s},backend:n,attrs:{shape:i}})}var LW={kernelName:qs,backendName:"webgl",kernelFunc:aI};var BW="return exp(x) - 1.0;",ace=Se({opSnippet:BW,packedOpSnippet:BW,cpuKernelImpl:fz}),$W={kernelName:Go,backendName:"webgl",kernelFunc:ace};var Bg=class{variableNames=["real","imag"];outputShape;userCode;constructor(e,t,n){let o=t[1];this.outputShape=t;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${o}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function iI(r,e,t){let n=t.texData.get(r.dataId),o=y.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],a=o/s,i=pe({inputs:{x:r},backend:t,attrs:{shape:[a,s]}}),p=i.shape,u=new Bg("real",p,e),l=new Bg("imag",p,e),m=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:p},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:p}],c=t.runWebGLProgram(u,m,"float32"),d=t.runWebGLProgram(l,m,"float32"),f=zn({inputs:{real:c,imag:d},backend:t});t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d);let h=pe({inputs:{x:f},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(f),h}function ice(r){let{inputs:e,backend:t}=r,{input:n}=e;return iI(n,!1,t)}var OW={kernelName:xp,backendName:"webgl",kernelFunc:ice};var uI=class{variableNames;outputShape=[];userCode;customUniforms=[{name:"value",type:"float"}];constructor(e,t){this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function np(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||y.inferDtype(o),s==="string"){let a=y.getArrayFromDType(s,y.sizeFromShape(n));return a.fill(o),e.makeTensorInfo(n,s,a)}else{let a=new uI(n,o),i=[[o]];return e.runWebGLProgram(a,[],s,i)}}var zW={kernelName:tu,backendName:"webgl",kernelFunc:np};var pI=class{variableNames=["Image"];outputShape=[];userCode;constructor(e){let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var GW={kernelName:Za,backendName:"webgl",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new pI(t.shape);return n.runWebGLProgram(o,[t],t.dtype)}};var WW="return floor(x);",uce=Se({opSnippet:WW,packedOpSnippet:WW,cpuKernelImpl:hz}),UW={kernelName:Wo,backendName:"webgl",kernelFunc:uce};var pce=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,lce=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,mce=bt({opSnippet:pce,packedOpSnippet:lce,dtype:"int32"}),KW={kernelName:Uo,backendName:"webgl",kernelFunc:mce};var lI=class{variableNames=["A"];userCode;outputShape;constructor(e){let t=Yt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var mI=class{variableNames=["A"];userCode;outputShape;packedInputs=!1;packedOutput=!0;constructor(e){let t=Yt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}};var VW={kernelName:Tl,backendName:"webgl",kernelFunc:cce},Jf,h2=L().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function cce(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n,a=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,[p,u]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],l=[u,p],m=[u,p,s];if(i||a){let h=L().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Jf==null||h!==h2)&&(h2=h,Jf=document.createElement("canvas").getContext("2d",{willReadFrequently:h2})),Jf.canvas.width=p,Jf.canvas.height=u,Jf.drawImage(o,0,0,p,u),o=Jf.canvas}let c=t.makeTensorInfo(l,"int32");t.texData.get(c.dataId).usage=2,t.gpgpu.uploadPixelDataToTexture(t.getTexture(c.dataId),o);let d=L().getBool("WEBGL_PACK")?new mI(m):new lI(m),f=t.runWebGLProgram(d,[c],"int32");return t.disposeData(c.dataId),f}function dce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=I.convertConv2DDataFormat(l),g=I.computeConv2DInfo(o.shape,s.shape,p,m,u,c,!1,h),b,x=[],T=a!=null,C=i!=null,v=d==="leakyrelu",A=()=>{let R=[o,s],M=(F,O)=>{if(O==="NCHW"&&F.shape.length===1&&F.shape[0]!==1){let G=pe({inputs:{x:F},backend:t,attrs:{shape:[F.shape[0],1,1]}});return x.push(G),G}return F};if(T&&R.push(M(a,l)),C&&R.push(M(i,l)),v){let F=t.makeTensorInfo([],"float32",y.createScalarValue(f,"float32"));R.push(F),x.push(F)}return R};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))b=HC({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else if(g.strideWidth<=2&&h==="channelsLast"&&L().getBool("WEBGL_EXP_CONV")){let R=d?tp(d,!0):null,M=new Yf(g,T,R,C,v),F=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],O=A();b=t.runWebGLProgram(M,O,"float32",F)}else if(L().getBool("WEBGL_CONV_IM2COL"))b=qC({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else{let R=d?tp(d,!1):null,M=new Xf(g,T,R,C,v),F=A();b=t.runWebGLProgram(M,F,"float32")}let _=pe({inputs:{x:b},backend:t,attrs:{shape:g.outShape}});return x.push(b),x.forEach(R=>t.disposeIntermediateTensorInfo(R)),_}var HW={kernelName:ia,backendName:"webgl",kernelFunc:dce};function fce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dilations:l,dimRoundingMode:m,activation:c,leakyreluAlpha:d}=n,f=[],h=l;h==null&&(h=[1,1]),y.assert(I.eitherStridesOrDilationsAreOne(p,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${p} and dilations '${h}'`);let g=I.computeConv2DInfo(o.shape,s.shape,p,h,u,m,!0),b=L().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=c?tp(c,b):null,T=[o,s],C=a!=null,v=i!=null,A=c==="leakyrelu";if(C&&T.push(a),v&&T.push(i),A){let F=t.makeTensorInfo([],"float32",y.createScalarValue(d,"float32"));T.push(F),f.push(F)}let _;b?_=new Qf(g,C,x,v,A):_=new Zf(g,C,x,v,A);let R=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],M=t.runWebGLProgram(_,T,"float32",R);return f.forEach(F=>t.disposeIntermediateTensorInfo(F)),M}var qW={kernelName:ua,backendName:"webgl",kernelFunc:fce};var cI=class{constructor(e,t,n,o){this.sliceDim=e;this.strides=t;this.paramsShape=o;this.outputShape=n;let s=Ke(n.length),a=`
    int index;`;for(let i=0;i<this.sliceDim;i++)a+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}variableNames=["x","indices"];outputShape;userCode};function hce(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,a=s[s.length-1],i=y.sizeFromShape(n.shape),[p,u,l,m]=I.prepareAndValidate(n,o),c=pe({inputs:{x:o},backend:t,attrs:{shape:[u,a]}}),d=pe({inputs:{x:n},backend:t,attrs:{shape:[y.sizeFromShape(n.shape)/l,l]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let b=t.readSync(o.dataId),x=t.bufferSync(n),T=gz(b,x,n.dtype,u,a,l,m,n.shape,i);return t.makeTensorInfo(p,n.dtype,T.values)}let f=new cI(a,m,[u,l],n.shape),h=t.runWebGLProgram(f,[d,c],d.dtype),g=pe({inputs:{x:h},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var jW={kernelName:Qa,backendName:"webgl",kernelFunc:hce};var dI=class{variableNames=["A","indices"];outputShape;userCode;rank;constructor(e,t){this.outputShape=t,this.rank=t.length;let n=Ke(this.rank),o=gce(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}};function gce(r,e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push("index"):n.push(`${t[o]}`);return n.join()}function g2(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n,p=y.parseAxisParam(a,o.shape)[0];if(L().get("DEBUG")){let x=t.readSync(s.dataId),T=o.shape[p];for(let C=0;C<x.length;++C){let v=x[C];y.assert(v<=T-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${T-1}]`)}}let u=I.segment_util.collectGatherOpShapeInfo(o,s,p,i),l=y.sizeFromShape(s.shape),m=[],c=pe({inputs:{x:o},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),d=pe({inputs:{x:s},backend:t,attrs:{shape:[u.batchSize,l/u.batchSize]}});m.push(c),m.push(d);let f=[u.batchSize,u.outerSize,l/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([o,s])||o.dtype==="string"){let x=t.bufferSync(d),T=t.bufferSync(c),C=bz(T,x,f);return m.forEach(v=>t.disposeIntermediateTensorInfo(v)),t.makeTensorInfo(u.outputShape,C.dtype,C.values)}let h=new dI(c.shape,f),g=t.runWebGLProgram(h,[c,d],c.dtype);m.push(g);let b=pe({inputs:{x:g},backend:t,attrs:{shape:u.outputShape}});return m.forEach(x=>t.disposeIntermediateTensorInfo(x)),b}var XW={kernelName:js,backendName:"webgl",kernelFunc:g2};var bce="return float(a > b);",yce=`
  return vec4(greaterThan(a, b));
`,xce=bt({opSnippet:bce,packedOpSnippet:yce,cpuKernelImpl:yz,dtype:"bool"}),YW={kernelName:Ja,backendName:"webgl",kernelFunc:xce};var Tce="return float(a >= b);",Cce=`
  return vec4(greaterThanEqual(a, b));
`,Ice=bt({opSnippet:Tce,packedOpSnippet:Cce,dtype:"bool",cpuKernelImpl:xz}),ZW={kernelName:Vo,backendName:"webgl",kernelFunc:Ice};function kce(r){let{inputs:e,backend:t}=r,{input:n}=e;return iI(n,!0,t)}var QW={kernelName:Tp,backendName:"webgl",kernelFunc:kce};var vce="return float(!isnan(x) && !isinf(x));",Sce=Se({opSnippet:vce,dtype:"bool"}),JW={kernelName:Ho,backendName:"webgl",kernelFunc:Sce};var wce="return float(isinf(x));",Ace=Se({opSnippet:wce,dtype:"bool"}),eU={kernelName:qo,backendName:"webgl",kernelFunc:Ace};var Nce="return float(isnan(x));",Dce=Se({opSnippet:Nce,dtype:"bool"}),tU={kernelName:jo,backendName:"webgl",kernelFunc:Dce};var _ce="return float(a < b);",Rce=`
  return vec4(lessThan(a, b));
`,Mce=bt({opSnippet:_ce,packedOpSnippet:Rce,cpuKernelImpl:Tz,dtype:"bool"}),rU={kernelName:ei,backendName:"webgl",kernelFunc:Mce};var Pce="return float(a <= b);",Fce=`
  return vec4(lessThanEqual(a, b));
`,Ece=bt({opSnippet:Pce,packedOpSnippet:Fce,cpuKernelImpl:Cz,dtype:"bool"}),nU={kernelName:ti,backendName:"webgl",kernelFunc:Ece};function Lce(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,a=Iz(n,o,s);return e.makeTensorInfo([a.length],"float32",a)}var oU={kernelName:ri,backendName:"webgl",kernelFunc:Lce};var Bce=Fa+`
  return x < 0.0 ? 0./0. : log(x);
`,$ce=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Oce=Se({opSnippet:Bce,packedOpSnippet:$ce,cpuKernelImpl:kz}),sU={kernelName:Yo,backendName:"webgl",kernelFunc:Oce};var zce=Fa+`
  return log(1.0 + x);
`,Gce=Se({opSnippet:zce}),aU={kernelName:Zo,backendName:"webgl",kernelFunc:Gce};var Wce="return float(a >= 1.0 && b >= 1.0);",Uce=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Kce=bt({opSnippet:Wce,packedOpSnippet:Uce,dtype:"bool"}),iU={kernelName:ni,backendName:"webgl",kernelFunc:Kce};var Vce="return float(!(x >= 1.0));",Hce=Se({opSnippet:Vce}),uU={kernelName:oi,backendName:"webgl",kernelFunc:Hce};var qce="return float(a >= 1.0 || b >= 1.0);",jce=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Xce=bt({opSnippet:qce,packedOpSnippet:jce,dtype:"bool"}),pU={kernelName:si,backendName:"webgl",kernelFunc:Xce};var fI=class{variableNames=["x"];outputShape=[];userCode;constructor(e,t,n,o,s){let a=t,i=e[3]-1;this.outputShape=e;let p,u=`float(${n}) + float(${o}) * sum`;s===.5?p=`inversesqrt(${u})`:s===1?p=`1.0/(${u})`:p=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${p};
        setOutput(val);
      }
    `}};var hI=class{variableNames=["x"];outputShape=[];userCode;packedInputs=!0;packedOutput=!0;constructor(e,t,n,o,s){let a=t,i=e[3]-1;this.outputShape=e;let p,u=`float(${n}) + float(${o}) * sum`;s===.5?p=`inversesqrt(${u})`:s===1?p=`1.0/(${u})`:p=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${p};
        setOutput(result);
      }
    `}};var Yce=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:p}=n,u=L().getBool("WEBGL_PACK_NORMALIZATION")?new hI(o.shape,s,a,i,p):new fI(o.shape,s,a,i,p);return t.runWebGLProgram(u,[o],o.dtype)},lU={kernelName:Qo,backendName:"webgl",kernelFunc:Yce};var gI=class{variableNames=["inputImage","outputImage","dy"];outputShape=[];userCode;depthRadius;bias;alpha;beta;depth;constructor(e,t,n,o,s){this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=o,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${s})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var Zce=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:p,alpha:u,beta:l}=n,m=new gI(o.shape,i,p,u,l);return t.runWebGLProgram(m,[o,s,a],o.dtype)},mU={kernelName:ai,backendName:"webgl",kernelFunc:Zce};function cU(r,e,t,n){let o=y.sizeFromShape(e),a=y.sizeFromShape(r.shape)/o,i=pe({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),p=io(i,r.dtype,"max",n),u=pe({inputs:{x:p},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),u}function b2(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n,i=o.shape.length,p=y.parseAxisParam(s,o.shape),u=p,l=I.getAxesPermutation(u,i),m=l!=null,c=t.shouldExecuteOnCPU([o]),d=o;if(m){if(c){let T=t.texData.get(d.dataId).values,C=new Array(i);for(let _=0;_<C.length;_++)C[_]=o.shape[l[_]];let v=Em(T,o.shape,o.dtype,l,C);d=t.makeTensorInfo(C,o.dtype);let A=t.texData.get(d.dataId);A.values=v}else d=sl(o,l,t);u=I.getInnerMostAxes(u.length,i)}I.assertAxesAreInnerMostDims("max",u,i);let[f,h]=I.computeOutAndReduceShapes(d.shape,u),g=f;a&&(g=I.expandShapeToKeepDim(f,p));let b;if(c){let T=t.texData.get(d.dataId).values,C=vz(T,y.sizeFromShape(h),g,o.dtype);b=t.makeTensorInfo(g,o.dtype);let v=t.texData.get(b.dataId);v.values=C}else b=cU(d,h,g,t);return m&&t.disposeIntermediateTensorInfo(d),b}var dU={kernelName:Jo,backendName:"webgl",kernelFunc:b2};var Qce=Hf+`
  return max(a, b);
`,Jce=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ao+`
  return result;
`,ede=bt({opSnippet:Qce,packedOpSnippet:Jce,cpuKernelImpl:Sz}),fU={kernelName:es,backendName:"webgl",kernelFunc:ede};function tde(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;zi(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1;y.assert(I.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let l=I.computePool2DInfo(o.shape,s,a,u,i,p);if(l.filterWidth===1&&l.filterHeight===1&&y.arraysEqual(l.inShape,l.outShape))return pr({inputs:{x:o},backend:t});let m=new Wi(l,"max",!1);return t.runWebGLProgram(m,[o],o.dtype)}var hU={kernelName:ts,backendName:"webgl",kernelFunc:tde};function rde(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dataFormat:p,dimRoundingMode:u}=n,l=[1,1,1],m=I.computePool3DInfo(o.shape,s,a,l,i,u,p),c=new al(m,"max",!1);return t.runWebGLProgram(c,[o],o.dtype)}var gU={kernelName:Xs,backendName:"webgl",kernelFunc:rde};var bI=class{variableNames=["dy","maxPos"];outputShape;userCode;constructor(e){this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,o=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,p=a-1-e.padInfo.left,u=s*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},yI=class{variableNames=["dy","maxPos"];outputShape;userCode;constructor(e){this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,p=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,m=p-1-e.padInfo.front,c=u-1-e.padInfo.top,d=l-1-e.padInfo.left,f=p*u*l-1;this.userCode=`
      const ivec3 pads = ivec3(${m}, ${c}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function nde(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:p,pad:u,dimRoundingMode:l}=n,m=[1,1,1],c=I.computePool3DInfo(a.shape,i,p,m,u,l),d=new al(c,"max",!0),f=t.runWebGLProgram(d,[a],a.dtype),h=new yI(c),g=t.runWebGLProgram(h,[o,f],a.dtype);return t.disposeIntermediateTensorInfo(f),g}var bU={kernelName:ru,backendName:"webgl",kernelFunc:nde};function ode(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:a}=e,i=s;zi([s,a],"maxPoolGrad");let{filterSize:p,strides:u,pad:l,dimRoundingMode:m}=n,c=I.computePool2DInfo(i.shape,p,u,1,l,m),d=!0,f=new Wi(c,"max",d),h=t.runWebGLProgram(f,[i],i.dtype),g=new bI(c),b=t.runWebGLProgram(g,[o,h],i.dtype);return t.disposeIntermediateTensorInfo(h),b}var yU={kernelName:Ip,backendName:"webgl",kernelFunc:ode};function xU(r,e,t,n){let o=new Wi(t,"max",!1),s=n.runWebGLProgram(o,[r],"float32");o=new Wi(t,"max",!0,!0,e);let a=n.runWebGLProgram(o,[r],"float32");return[s,a]}var TU={kernelName:kp,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=e,p=t;y.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let u=[1,1];y.assert(I.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let l=I.computePool2DInfo(n.shape,o,s,u,a),[m,c]=xU(n,i,l,p);return[m,c]}};function CU(r,e,t,n){let o=y.sizeFromShape(e),a=y.sizeFromShape(r.shape)/o,i=pe({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),p=io(i,"float32","mean",n),u=pe({inputs:{x:p},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),u}var IU={kernelName:rs,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{keepDims:o,axis:s}=e,a=t,i=n.shape.length,p=y.parseAxisParam(s,n.shape),u=p,l=I.getAxesPermutation(u,i),m=l!=null,c=a.shouldExecuteOnCPU([n]),d=[],f=n;if(m){if(c){let C=a.texData.get(f.dataId).values,v=new Array(i);for(let R=0;R<v.length;R++)v[R]=n.shape[l[R]];let A=Em(C,n.shape,n.dtype,l,v);f=a.makeTensorInfo(v,n.dtype);let _=a.texData.get(f.dataId);_.values=A}else f=sl(n,l,a);d.push(f),u=I.getInnerMostAxes(u.length,i)}I.assertAxesAreInnerMostDims("sum",u,i);let[h,g]=I.computeOutAndReduceShapes(f.shape,u),b=h;o&&(b=I.expandShapeToKeepDim(h,p));let x=CU(f,g,b,a);for(let T of d)a.disposeIntermediateTensorInfo(T);return x}};function sde(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,p=y.parseAxisParam(s,o.shape),u=p,l=I.getAxesPermutation(u,i),m=o;l!=null&&(m=Kt({inputs:{x:o},backend:t,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,o.shape.length)),I.assertAxesAreInnerMostDims("min",u,i);let[c,d]=I.computeOutAndReduceShapes(m.shape,u),f=y.sizeFromShape(d),h=pe({inputs:{x:m},backend:t,attrs:{shape:[-1,f]}}),g=io(h,h.dtype,"min",t),b;if(a){let x=I.expandShapeToKeepDim(c,p);b=pe({inputs:{x:g},backend:t,attrs:{shape:x}})}else b=pe({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(m),b}var kU={kernelName:ns,backendName:"webgl",kernelFunc:sde};var ade=Hf+`
  return min(a, b);
`,ide=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ao+`
  return result;
`,ude=bt({opSnippet:ade,packedOpSnippet:ide,cpuKernelImpl:wz}),vU={kernelName:os,backendName:"webgl",kernelFunc:ude};var xI=class{variableNames=["x"];outputShape;userCode;constructor(e,t,n){this.outputShape=t.map((l,m)=>l[0]+e[m]+l[1]);let o=e.length,s=Ke(o),a=t.map(l=>l[0]).join(","),i=t.map((l,m)=>l[0]+e[m]).join(","),p=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),u=n==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${p}));
      }
    `}};var TI=class{variableNames=["x"];packedInputs=!0;packedOutput=!0;outputShape;userCode;constructor(e,t,n){this.outputShape=t.map((f,h)=>f[0]+e[h]+f[1]);let o=e.length,s=Ke(o),a=t.map(f=>f[0]).join(","),i=t.map((f,h)=>f[0]+e[h]).join(","),p=ur("rc",o),u=ur("source",o),l=`${p[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${u.slice(-2).join()})`,c=n==="reflect"?0:1,d="";if(o===1){let f=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${c};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${c};
        }
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${m});
        ${p[o-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${m});
        }
      `}else{let f=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${c}) +
                gte * ((end - 1) * 2 - source + ${c});
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${m});
        ${p[o-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${m});
        }
        rc = outputLoc;
        ${p[o-2]} += 1;
        if(${p[o-2]} < ${this.outputShape[o-2]}) {
          ${f}
          result[2] = getChannel(getX(${u.join()}), ${m});
          ${p[o-1]} += 1;
          if(${l}) {
            ${f}
            result[3] = getChannel(getX(${u.join()}), ${m});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}};var pde=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{paddings:o,mode:s}=t,a=L().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new TI(n.shape,o,s):new xI(n.shape,o,s);return e.runWebGLProgram(a,[n],n.dtype)},SU={kernelName:ss,backendName:"webgl",kernelFunc:pde};var lde=`if (b == 0.0) return NAN;
  return mod(a, b);`,mde=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+ao+`
  return result;
`,cde=bt({opSnippet:lde,packedOpSnippet:mde}),wU={kernelName:ii,backendName:"webgl",kernelFunc:cde};var CI=class{variableNames=["probs"];outputShape;userCode;customUniforms=[{name:"seed",type:"float"}];constructor(e,t,n){this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}};var dde=`
if (a == b) {
  return 1.0;
};
return a / b;`,fde=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,y2=bt({opSnippet:dde,packedOpSnippet:fde,checkOutOfBounds:!0}),AU={kernelName:$o,backendName:"webgl",kernelFunc:y2};var NU="return a - b;",x2=bt({opSnippet:NU,packedOpSnippet:NU,supportsComplex:!0,cpuKernelImpl:qz}),DU={kernelName:Ds,backendName:"webgl",kernelFunc:x2};function T2(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=y.parseAxisParam([s],o.shape),i=b2({inputs:{x:o},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),p=I.expandShapeToKeepDim(i.shape,a),u=pe({inputs:{x:i},backend:t,attrs:{shape:p}}),l=x2({inputs:{a:o,b:u},backend:t}),m=f2({inputs:{x:l},backend:t}),c=Lm({inputs:{x:m},backend:t,attrs:{axis:a,keepDims:!1}}),d=pe({inputs:{x:c},backend:t,attrs:{shape:p}}),f=y2({inputs:{a:m,b:d},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),f}var _U={kernelName:As,backendName:"webgl",kernelFunc:T2};function hde(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n,p=i?o:T2({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),u=p.shape[0],l=p.shape[1],m=new CI(u,l,s),c=[[a]],d=t.runWebGLProgram(m,[p],"int32",c);return i||t.disposeIntermediateTensorInfo(p),d}var RU={kernelName:ui,backendName:"webgl",kernelFunc:hde};var gde=vr+`
  return -x;
`,bde=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function yde(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.texData.get(n.dataId),[a,i]=Nz(s.values,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,a)}let o;return L().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new On(n.shape,bde):o=new Ur(n.shape,gde),t.runWebGLProgram(o,[n],n.dtype)}var MU={kernelName:Ys,backendName:"webgl",kernelFunc:yde};var xde=kr.nonMaxSuppressionV3Impl;function Tde(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p}=n,u=t.readSync(o.dataId),l=t.readSync(s.dataId),{selectedIndices:m}=xde(u,l,a,i,p);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}var PU={kernelName:li,backendName:"webgl",kernelFunc:Tde};var Cde=kr.nonMaxSuppressionV4Impl;function Ide(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p,padToMaxOutputSize:u}=n,l=t.readSync(o.dataId),m=t.readSync(s.dataId),{selectedIndices:c,validOutputs:d}=Cde(l,m,a,i,p,u);return[t.makeTensorInfo([c.length],"int32",new Int32Array(c)),t.makeTensorInfo([],"int32",new Int32Array([d]))]}var FU={kernelName:Nu,backendName:"webgl",kernelFunc:Ide};var kde=kr.nonMaxSuppressionV5Impl;function vde(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p,softNmsSigma:u}=n,l=t.readSync(o.dataId),m=t.readSync(s.dataId),c=a,d=i,f=p,h=u,{selectedIndices:g,selectedScores:b}=kde(l,m,c,d,f,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var EU={kernelName:mi,backendName:"webgl",kernelFunc:vde};var II=class{variableNames=["indices"];outputShape;userCode;seedLoc;constructor(e,t,n,o){this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${n}),
                      float(index == coords.y)));
      }
    `}};var Sde=r=>{let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{dtype:s,depth:a,onValue:i,offValue:p}=n,u=y.sizeFromShape(o.shape),l=new II(u,a,i,p),m=pe({inputs:{x:o},backend:t,attrs:{shape:[u]}}),c=t.runWebGLProgram(l,[m],s);t.disposeIntermediateTensorInfo(m);let d=[...o.shape,a],f=pe({inputs:{x:c},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(c),f},LU={kernelName:is,backendName:"webgl",kernelFunc:Sde};function $g(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=rp({inputs:{input:n},backend:t}),s=$g({inputs:{x:o},backend:t}),a=$m({inputs:{input:n},backend:t}),i=$g({inputs:{x:a},backend:t}),p=zn({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),p}else return np({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var BU={kernelName:sa,backendName:"webgl",kernelFunc:$g};function $U(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=rp({inputs:{input:n},backend:t}),s=$U({inputs:{x:o},backend:t}),a=$m({inputs:{input:n},backend:t}),i=$g({inputs:{x:a},backend:t}),p=zn({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),p}else return np({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var OU={kernelName:Zs,backendName:"webgl",kernelFunc:$U};function wde(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return aI({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(l=>{y.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],p=e.map(l=>{let m=aI({inputs:{input:l},backend:t,attrs:{dim:o}});return i.push(m),m}),u=d2({inputs:p,backend:t,attrs:{axis:o}});return i.forEach(l=>t.disposeIntermediateTensorInfo(l)),u}var zU={kernelName:Qs,backendName:"webgl",kernelFunc:wde};var kI=class{variableNames=["x"];outputShape;userCode;customUniforms=[{name:"value",type:"float"}];constructor(e,t,n){this.outputShape=t.map((u,l)=>u[0]+e[l]+u[1]);let o=e.length,s=Ke(o),a=t.map(u=>u[0]).join(","),i=t.map((u,l)=>u[0]+e[l]).join(","),p=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${p}));
        }
      }
    `}};var vI=class{variableNames=["x"];packedInputs=!0;packedOutput=!0;outputShape;userCode;customUniforms=[{name:"value",type:"float"}];constructor(e,t,n){this.outputShape=t.map((h,g)=>h[0]+e[g]+h[1]);let o=e.length,s=Ke(o),a=t.map(h=>h[0]).join(","),i=t.map((h,g)=>h[0]+e[g]).join(","),p=ur("rc",o),u=ur("source",o),l=`${p[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${u.slice(-2).join()})`,c=[`${s} rc = outputLoc;`,`${p[o-1]} += 1;
       if(${l}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${p[o-2]} += 1;
       if(${p[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${p[o-1]} += 1;
         if(${l}) {`],d=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",f="";for(let h=0,g=o===1?2:4;h<g;h++)f+=`
        ${c[h]}
        if (${d}) {
          result[${h}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${h}] = getChannel(getX(${u.join()}), ${m});
        }
      `;f+=o===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var C2=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;if(y.sizeFromShape(o.shape)===0){let u=s.map((l,m)=>l[0]+o.shape[m]+l[1]);return np({backend:t,attrs:{shape:u,value:a,dtype:o.dtype}})}let i=L().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vI(o.shape,s,a):new kI(o.shape,s,a),p=[[a]];return t.runWebGLProgram(i,[o],o.dtype,p)},GU={kernelName:us,backendName:"webgl",kernelFunc:C2};var Ade=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Nde=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+ao+`
  return result;
`,Dde=bt({opSnippet:Ade,packedOpSnippet:Nde}),WU={kernelName:ps,backendName:"webgl",kernelFunc:Dde};function _de(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,p=[],u=y.parseAxisParam(s,o.shape),l=u,m=I.getAxesPermutation(l,i),c=o;m!=null&&(c=Kt({inputs:{x:o},backend:t,attrs:{perm:m}}),l=I.getInnerMostAxes(l.length,i),p.push(c)),I.assertAxesAreInnerMostDims("prod",l,i);let d;if(t.shouldExecuteOnCPU([c])){let f=t.texData.get(c.dataId).values,{outVals:h,outShape:g,outDtype:b}=_z(c.shape,c.dtype,f,l);d=t.makeTensorInfo(g,b,h)}else{let[f,h]=I.computeOutAndReduceShapes(c.shape,l),g=y.sizeFromShape(h),b=pe({inputs:{x:c},backend:t,attrs:{shape:[-1,g]}}),x=Pu(o.dtype),T=io(b,x,"prod",t);d=pe({inputs:{x:T},backend:t,attrs:{shape:f}}),p.push(b),p.push(T)}if(a){p.push(d);let f=I.expandShapeToKeepDim(d.shape,u);d=pe({inputs:{x:d},backend:t,attrs:{shape:f}})}return p.forEach(f=>t.disposeIntermediateTensorInfo(f)),d}var UU={kernelName:ms,backendName:"webgl",kernelFunc:_de};function Rde(r){let{inputs:e,backend:t,attrs:n}=r,{paramsNestedSplits:o,paramsDenseValues:s,indices:a}=e,{outputRaggedRank:i}=n,p=o.map(b=>t.readSync(b.dataId)),u=o.map(b=>b.shape),l=t.readSync(s.dataId),m=t.readSync(a.dataId),[c,d,f]=Rz(p,u,l,s.shape,s.dtype,m,a.shape,i),h=c.map(b=>t.makeTensorInfo([b.length],"int32",b)),g=t.makeTensorInfo(f,s.dtype,d);return h.concat([g])}var KU={kernelName:oc,backendName:"webgl",kernelFunc:Rde};function Mde(r){let{inputs:e,backend:t}=r,{starts:n,limits:o,deltas:s}=e,a=t.readSync(n.dataId),i=t.readSync(o.dataId),p=t.readSync(s.dataId),[u,l]=Mz(a,n.shape,n.dtype,i,o.shape,p,s.shape),m=t.makeTensorInfo([u.length],"int32",u),c=t.makeTensorInfo([l.length],n.dtype,l);return[m,c]}var VU={kernelName:sc,backendName:"webgl",kernelFunc:Mde};function Pde(r){let{inputs:e,backend:t,attrs:n}=r,{shape:o,values:s,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:p}=n,u=t.readSync(o.dataId),l=t.readSync(s.dataId),m=t.readSync(a.dataId),c=i.map(g=>t.readSync(g.dataId)),d=i.map(g=>g.shape),[f,h]=Pz(u,o.shape,l,s.shape,s.dtype,m,a.shape,c,d,p);return t.makeTensorInfo(f,s.dtype,h)}var HU={kernelName:ac,backendName:"webgl",kernelFunc:Pde};var I2=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=Fz(n,o,s,a);return e.makeTensorInfo([i.length],a,i)},qU={kernelName:nu,backendName:"webgl",kernelFunc:I2};var Fde="return 1.0 / x;",Ede=Se({opSnippet:Fde}),jU={kernelName:cs,backendName:"webgl",kernelFunc:Ede};var Lde=vr+`
  return (x < 0.0) ? 0.0 : x;
`,Bde=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,$de=Se({opSnippet:Lde,packedOpSnippet:Bde}),XU={kernelName:ds,backendName:"webgl",kernelFunc:$de};var Ode=vr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,zde=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Gde=Se({opSnippet:Ode,packedOpSnippet:zde}),YU={kernelName:gs,backendName:"webgl",kernelFunc:Gde};var SI=class{variableNames=["A"];outputShape=[];userCode;constructor(e,t,n,o,s){let[a,i,p,u]=e;this.outputShape=[a,t,n,u];let l=[o&&t>1?i-1:i,o&&n>1?p-1:p],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c;s?c="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":c="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/m[0]},
          ${l[1]/m[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${p}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var wI=class{variableNames=["A"];packedInputs=!0;packedOutput=!0;outputShape=[];userCode;constructor(e,t,n,o,s){let[a,i,p,u]=e;this.outputShape=[a,t,n,u];let l=[o&&t>1?i-1:i,o&&n>1?p-1:p],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c;s?c="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":c="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/m[0]},
          ${l[1]/m[1]},
          ${l[1]/m[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${p}.0,
                                     ${p}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function Wde(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[p,u]=i,l=L().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new wI(o.shape,p,u,s,a):new SI(o.shape,p,u,s,a);return t.runWebGLProgram(l,[o],"float32")}var ZU={kernelName:hs,backendName:"webgl",kernelFunc:Wde};var AI=class{variableNames=["dy"];outputShape=[];userCode;constructor(e,t,n){this.outputShape=t;let[,o,s]=t,[,a,i]=e,p=[n&&a>1?o-1:o,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=p[0]/u[0],m=p[1]/u[1],c=1/l,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Ude(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=new AI(s.shape,o.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var QU={kernelName:di,backendName:"webgl",kernelFunc:Ude};var NI=class{variableNames=["A"];outputShape=[];userCode;constructor(e,t,n,o,s){let[a,i,p,u]=e;this.outputShape=[a,t,n,u];let l=[o&&t>1?i-1:i,o&&n>1?p-1:p],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/m[0]},
          ${l[1]/m[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${p}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var DI=class{variableNames=["A"];packedInputs=!0;packedOutput=!0;outputShape=[];userCode;constructor(e,t,n,o,s){let[a,i,p,u]=e;this.outputShape=[a,t,n,u];let l=[o&&t>1?i-1:i,o&&n>1?p-1:p],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/m[0]},
          ${l[1]/m[1]},
          ${l[1]/m[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${p}.0,
                                     ${p}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function Kde(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[p,u]=i,l=L().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new DI(o.shape,p,u,s,a):new NI(o.shape,p,u,s,a);return t.runWebGLProgram(l,[o],o.dtype)}var JU={kernelName:fs,backendName:"webgl",kernelFunc:Kde};var _I=class{variableNames=["dy"];outputShape=[];userCode;constructor(e,t,n){this.outputShape=t;let[,o,s]=t,[,a,i]=e,p=[n&&a>1?o-1:o,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=p[0]/u[0],m=p[1]/u[1],c=1/l,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${p[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${p[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Vde(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=new _I(s.shape,o.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var eK={kernelName:ci,backendName:"webgl",kernelFunc:Vde};var RI=class{variableNames=["x"];outputShape;userCode;constructor(e,t){let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let o=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,s=e.map((i,p)=>o(p)).join(","),a=Ke(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var MI=class{variableNames=["x"];outputShape;userCode;packedInputs=!0;packedOutput=!0;constructor(e,t){let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let o=ur("rc",n),s=`${o[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${o[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Ke(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${p(o.slice())};
          if(${s}){
            result.g = ${u(o.slice())};
          }
          if(${a}) {
            result.b = ${l(o.slice())};
            if(${s}) {
              result.a = ${m(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function p(f){return c(f)}function u(f){return f[n-1]="("+f[n-1]+" + 1)",c(f)}function l(f){return f[n-2]="("+f[n-2]+" + 1)",c(f)}function m(f){return f[n-1]="("+f[n-1]+" + 1)",f[n-2]="("+f[n-2]+" + 1)",c(f)}function c(f){let h=e.map((x,T)=>d(T,f)),g=h.join(","),b=h.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${b}))`}function d(f,h){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${h[f]} - 1`:`${h[f]}`}}};function Hde(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,a=o.shape.length,i=y.parseAxisParam(s,o.shape);if(a===0)return pr({inputs:{x:o},backend:t});let p=L().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new MI(o.shape,i):new RI(o.shape,i);return t.runWebGLProgram(p,[o],o.dtype)}var tK={kernelName:bs,backendName:"webgl",kernelFunc:Hde};var PI=class{variableNames=["Image"];outputShape=[];userCode;customUniforms=[{name:"params",type:"vec4"}];constructor(e,t){let n=e[1],o=e[2];this.outputShape=e;let s="";typeof t=="number"?s=`float outputValue = ${t.toFixed(2)};`:s=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var rK={kernelName:Ci,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,p=new PI(n.shape,s),[u,l]=I.getImageCenter(a,n.shape[1],n.shape[2]),m=[[u,l,Math.sin(o),Math.cos(o)]];return i.runWebGLProgram(p,[n],n.dtype,m)}};var qde=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,jde=Se({opSnippet:qde}),nK={kernelName:ys,backendName:"webgl",kernelFunc:jde};var Xde="return inversesqrt(x);",Yde=Se({opSnippet:Xde,cpuKernelImpl:Ez}),oK={kernelName:xs,backendName:"webgl",kernelFunc:Yde};var il=class{variableNames=["updates","indices","defaultValue"];outputShape;userCode;constructor(e,t,n,o,s,a,i=!0,p=!1){this.outputShape=a;let u=Ke(s.length),l=Ke(a.length),m="";n===1?m="i":n===2&&(m="i, j");let c=`getIndices(${m})`,d="";o===1?d="i":o===2&&(d="i, coords[1]");let f=`getUpdates(${d})`,h="";p&&(h="coords[0], coords[1]");let g=`getDefaultValue(${h})`,b=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${s});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${c});
              flattenedIndex += index * ${b};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${g}, sum, float(found)));
        }
      `}};var FI=class{variableNames=["updates","indices","defaultValue"];outputShape;packedInputs=!0;packedOutput=!0;userCode;constructor(e,t,n,o,s,a,i=!0,p=!1){this.outputShape=a;let u=Ke(s.length),l=Ke(a.length),m="";n===1?m="i":n===2&&(m="i, j");let c=`getIndices(${m})`,d="";o===1?d="i":o===2&&(d="i, coords[1]");let f=`getUpdates(${d})`,h="";p&&(h="coords[0], coords[1]");let g=`getDefaultValue(${h})`,b=t>1?"strides[j]":"strides",x=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${s});

        void main() {
          ${l} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${c});
              flattenedIndex += index.xz * ${b};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${x};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${g}, sum, found));
        }
      `}};function Zde(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:p,sliceSize:u,strides:l,outputSize:m}=I.calculateShapes(s,o,a),c=[m/u,u];if(m===0)return t.makeTensorInfo(a,o.dtype);let d=pe({inputs:{x:o},backend:t,attrs:{shape:[p,i]}}),f=pe({inputs:{x:s},backend:t,attrs:{shape:[p,u]}}),h=t.makeTensorInfo([],"float32",new Float32Array([0])),g;L().getBool("WEBGL_PACK")?g=new FI(p,i,d.shape.length,f.shape.length,l,c):g=new il(p,i,d.shape.length,f.shape.length,l,c);let b=t.runWebGLProgram(g,[f,d,h],f.dtype),x=pe({inputs:{x:b},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(h),x}var sK={kernelName:fi,backendName:"webgl",kernelFunc:Zde};var EI=class{variableNames=["sortedSequence","values"];outputShape;userCode;customUniforms=[{name:"numInputs",type:"int"}];constructor(e,t,n,o){this.outputShape=[e,n];let s="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=L().getNumber("WEBGL_VERSION")===2?s:a,p=o==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${p} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function Qde(r){let{inputs:e,backend:t,attrs:n}=r,{sortedSequence:o,values:s}=e,{side:a}=n,i=new EI(o.shape[0],o.shape[1],s.shape[1],a),p=[[o.shape[1]]];return t.runWebGLProgram(i,[o,s],"int32",p)}var aK={kernelName:hi,backendName:"webgl",kernelFunc:Qde};var LI=class{variableNames=["c","a","b"];outputShape;userCode;constructor(e,t,n){this.outputShape=t;let o,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",o="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],p=[],u=[];for(let l=0;l<t.length;l++)u.push(`${i[l]}`),l<e&&p.push(`${i[l]}`);o=p.join(),s=u.join()}let a=Ke(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function Jde(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=new LI(n.shape.length,o.shape,o.shape.length);return t.runWebGLProgram(a,[n,o,s],Nt(o.dtype,s.dtype))}var iK={kernelName:ea,backendName:"webgl",kernelFunc:Jde};var efe=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${I.SELU_SCALEALPHA};
  float scale = ${I.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,tfe=Se({opSnippet:efe}),uK={kernelName:Ts,backendName:"webgl",kernelFunc:tfe};var rfe=Fa+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,nfe=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ofe=Se({opSnippet:rfe,packedOpSnippet:nfe,cpuKernelImpl:Bz}),pK={kernelName:ks,backendName:"webgl",kernelFunc:ofe};var sfe=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,afe=Se({opSnippet:sfe}),lK={kernelName:Is,backendName:"webgl",kernelFunc:afe};var ife=Fa+`
  return sin(x);
`,ufe=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${ao}
  return result;
`,pfe=Se({opSnippet:ife,packedOpSnippet:ufe}),mK={kernelName:Cs,backendName:"webgl",kernelFunc:pfe};var lfe=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,mfe=Se({opSnippet:lfe}),cK={kernelName:gi,backendName:"webgl",kernelFunc:mfe};var cfe=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,dfe=Se({opSnippet:cfe}),dK={kernelName:vs,backendName:"webgl",kernelFunc:dfe};var ffe=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;y.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((b,x)=>b*x),p=[[0,0]];p.push(...a);for(let b=1+s.length;b<o.shape.length;++b)p.push([0,0]);let u=[],l=C2({inputs:{x:o},backend:t,attrs:{paddings:p,constantValue:0}}),m=I.getReshaped(l.shape,s,i,!1),c=I.getPermuted(m.length,s.length,!1),d=I.getReshapedPermuted(l.shape,s,i,!1),f=pe({inputs:{x:l},backend:t,attrs:{shape:m}}),h=Kt({inputs:{x:f},backend:t,attrs:{perm:c}}),g=pe({inputs:{x:h},backend:t,attrs:{shape:d}});return u.push(l),u.push(f),u.push(h),u.forEach(b=>t.disposeIntermediateTensorInfo(b)),g},fK={kernelName:ra,backendName:"webgl",kernelFunc:ffe};function hfe(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=t.readSync(n.dataId),p=t.readSync(o.dataId),u=t.readSync(s.dataId),l=t.readSync(a.dataId)[0],[m,c,d,f,h]=Oz(i,n.shape,n.dtype,p,o.dtype,u,l);return[t.makeTensorInfo(c,n.dtype,m),t.makeTensorInfo([c[0]],o.dtype,d),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var hK={kernelName:Sp,backendName:"webgl",kernelFunc:hfe};function gfe(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(t.readSync(o.dataId)),i=t.readSync(n.dataId),p=Array.from(t.readSync(s.dataId)),[u,l,m]=zz(i,n.shape,n.dtype,a,p);return[t.makeTensorInfo(l,n.dtype,u),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var gK={kernelName:_u,backendName:"webgl",kernelFunc:gfe};function bfe(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let a=t.readSync(n.dataId),i=t.readSync(o.dataId),p=t.readSync(s.dataId),[u,l]=bC(a,n.shape,n.dtype,i,p,!0);return t.makeTensorInfo(l,n.dtype,u)}var bK={kernelName:wp,backendName:"webgl",kernelFunc:bfe};function yfe(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let a=t.readSync(n.dataId),i=t.readSync(o.dataId),p=t.readSync(s.dataId),[u,l]=bC(a,n.shape,n.dtype,i,p);return t.makeTensorInfo(l,n.dtype,u)}var yK={kernelName:Ap,backendName:"webgl",kernelFunc:yfe};function xfe(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:p,numUpdates:u,sliceSize:l,strides:m,outputSize:c}=I.calculateShapes(s,o,i),d=!1;if(s.dtype==="string"){let b=t.bufferSync(o),x=t.bufferSync(s),T=y.decodeString(t.readSync(a.dataId)[0]),C=Lz(b,x,i,c,l,u,p,m,T,d);return t.makeTensorInfo(i,C.dtype,C.values)}let f=new il(u,p,o.shape.length,s.shape.length,m,[c,1],d),h=t.runWebGLProgram(f,[s,o,a],s.dtype),g=pe({inputs:{x:h},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(h),g}var xK={kernelName:bi,backendName:"webgl",kernelFunc:xfe};function Tfe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],p=I.prepareSplitSize(o,s,i),u=o.shape.length,l=new Array(u).fill(0),m=o.shape.slice();return p.map(c=>{let d=[...m];d[i]=c;let f=Ui({inputs:{x:o},backend:t,attrs:{begin:l,size:d}});return l[i]+=c,f})}var TK={kernelName:na,backendName:"webgl",kernelFunc:Tfe};var CK="return sqrt(x);",Cfe=Se({opSnippet:CK,packedOpSnippet:CK,cpuKernelImpl:Gz}),IK={kernelName:Ss,backendName:"webgl",kernelFunc:Cfe};var Ife="return x * x;",kfe=Se({opSnippet:Ife}),kK={kernelName:ou,backendName:"webgl",kernelFunc:kfe};var vK="return (a - b) * (a - b);",vfe=bt({opSnippet:vK,packedOpSnippet:vK}),SK={kernelName:Ns,backendName:"webgl",kernelFunc:vfe};function Sfe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");let s=t.readSync(o.dataId),a=I.fromUint8ToStringArray(s),i=Wz(a,"string",n);return t.makeTensorInfo(o.shape,"string",i)}var wK={kernelName:xl,backendName:"webgl",kernelFunc:Sfe};function wfe({inputs:r,attrs:e,backend:t}){let{x:n}=r,o=vr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,s=new Ur(n.shape,o);return t.runWebGLProgram(s,[n],n.dtype)}var AK={kernelName:Xn,backendName:"webgl",kernelFunc:wfe};var BI=class{variableNames=["x"];outputShape;userCode;constructor(e,t,n){this.outputShape=n;let o=n.length,s=Ke(n.length),a=Ke(n.length),i="";if(o===1)i="coords * strides + begin";else{let p=0;i=n.map((u,l)=>(p++,n.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${p-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${e});
      ${s} strides = ${s}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function Afe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:p,endMask:u,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:x,end:T,strides:C}=vt.sliceInfo(o.shape,s,a,i,p,u,l,m,c),v;if(h)v=pe({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let _=vt.computeOutShape(x,T,C),R=Ui({inputs:{x:o},backend:t,attrs:{begin:x,size:_}});v=pe({inputs:{x:R},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(R)}else if(t.shouldExecuteOnCPU([o])){let R=t.readSync(o.dataId),M=Ce(o.shape,o.dtype,R),F=Uz(d,M,C,x);v=t.makeTensorInfo(f,o.dtype,F.values)}else{let R=new BI(x,C,d);v=t.runWebGLProgram(R,[o],o.dtype)}let A=pe({inputs:{x:v},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(v),A}var NK={kernelName:yi,backendName:"webgl",kernelFunc:Afe};function Nfe(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:p,preserveShortSequences:u}=n,{data:l,dataSplits:m}=e,c=t.readSync(l.dataId),d=t.readSync(m.dataId),[f,h]=Kz(c,d,o,s,a,i,p,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(m.shape,"int32",h)]}var DK={kernelName:su,backendName:"webgl",kernelFunc:Nfe};function Dfe(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=t.readSync(s.dataId),p=t.readSync(a.dataId)[0],[u,l,m]=Vz(i,p,o),c=l.length;return[t.makeTensorInfo([c,2],"int32",u),t.makeTensorInfo([c],"string",l),t.makeTensorInfo([2],"int32",new Int32Array(m))]}var _K={kernelName:Np,backendName:"webgl",kernelFunc:Dfe};function _fe(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=t.readSync(s.dataId),i=Hz(a,o);return t.makeTensorInfo(s.shape,"int32",i)}var RK={kernelName:Dp,backendName:"webgl",kernelFunc:_fe};var Rfe="return tan(x);",Mfe=Se({opSnippet:Rfe}),MK={kernelName:_s,backendName:"webgl",kernelFunc:Mfe};var Pfe=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Ffe=Se({opSnippet:Pfe}),PK={kernelName:Rs,backendName:"webgl",kernelFunc:Ffe};function Efe(r){let{inputs:e,backend:t,attrs:n}=r,{tensor:o,indices:s,updates:a}=e,{}=n,{sliceRank:i,numUpdates:p,sliceSize:u,strides:l,outputSize:m}=I.calculateShapes(a,s,o.shape),c=[m/u,u];if(m===0)return t.makeTensorInfo(o.shape,s.dtype);let d=pe({inputs:{x:s},backend:t,attrs:{shape:[p,i]}}),f=pe({inputs:{x:a},backend:t,attrs:{shape:[p,u]}}),h=pe({inputs:{x:o},backend:t,attrs:{shape:c}}),g=new il(p,i,d.shape.length,f.shape.length,l,c,!1,!0),b=t.runWebGLProgram(g,[f,d,h],h.dtype),x=pe({inputs:{x:b},backend:t,attrs:{shape:o.shape}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(b),x}var FK={kernelName:Du,backendName:"webgl",kernelFunc:Efe};var $I=class{variableNames=["A"];outputShape;userCode;rank;constructor(e,t){let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let o=Ke(this.rank),s=Lfe(e);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function Lfe(r){let e=r.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${r[0]})`;let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let o=0;o<r.length;o++)n.push(`imod(${t[o]}, ${r[o]})`);return n.join()}function k2(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(o.dtype==="string"||o.shape.length>5){let p=t.readSync(o.dataId),u=o.dtype==="string"?p.map(c=>y.decodeString(c)):p,l=Ce(o.shape,o.dtype,u),m=jz(l,s);return t.makeTensorInfo(m.shape,m.dtype,m.values)}let a=new $I(o.shape,s);return t.runWebGLProgram(a,[o],o.dtype)}var EK={kernelName:_n,backendName:"webgl",kernelFunc:k2};var OI=class{variableNames=["x","indices"];outputShape;userCode;customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}];constructor(e){this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},zI=class{variableNames=["x","indices"];outputShape;userCode;customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}];constructor(e){this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Om(r,e){e!==null&&r.disposeIntermediateTensorInfo(e)}function LK(r){let e=1;for(;e<r;)e*=2;return e}function Bfe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n,i=L().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),p=L().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=o.shape,l=u[u.length-1];if(t.shouldExecuteOnCPU([o])||l<i||s>p){let F=t.readSync(o.dataId),[O,G]=Xz(F,u,o.dtype,s,a);return[t.makeTensorInfo(O.shape,O.dtype,O.values),t.makeTensorInfo(G.shape,G.dtype,G.values)]}if(s===0)return u[u.length-1]=0,[t.makeTensorInfo(u,o.dtype,[]),t.makeTensorInfo(u,"int32",[])];if(l===1)return[o,np({attrs:{shape:u,dtype:"int32",value:0},backend:t})];let m=t.texData.get(o.dataId),c=m!==null&&m.isPacked,d=c?t.unpackTensor(o):o,h=y.sizeFromShape(u)/l,g=pe({inputs:{x:d},attrs:{shape:[h,l]},backend:t});c&&Om(t,d);let b=LK(s),x=LK(l),T=null,C=()=>T===null?[g,g]:[g,T],v=(F,O,G)=>{let W=C(),U=new OI(G),H=[[l],[T===null?1:0],[Number.NEGATIVE_INFINITY],[F],[O]],X=T;T=t.runWebGLProgram(U,W,"int32",H),Om(t,X)};for(let F=1;F<b;F*=2){let O=F*2;for(let G=F;G>=1;G/=2)v(O,G,[h,x])}for(let F=x;F>b;F/=2){let O=C(),G=new zI([h,F/2]),U=[[l],[T===null?1:0],[b]],K=T;T=t.runWebGLProgram(G,O,"int32",U),Om(t,K);let H=b/2,X=H*2;for(let j=H;j>=1;j/=2)v(X,j,T.shape)}let A=T;T=Ui({inputs:{x:T},backend:t,attrs:{begin:0,size:[h,s]}}),Om(t,A);let _=g2({inputs:{x:g,indices:T},backend:t,attrs:{axis:1,batchDims:1}});Om(t,g);let R=u.slice(0,-1);R.push(s),A=T,T=pe({inputs:{x:T},attrs:{shape:R},backend:t}),Om(t,A);let M=_;return _=pe({inputs:{x:_},attrs:{shape:R},backend:t}),Om(t,M),[_,T]}var BK={kernelName:xi,backendName:"webgl",kernelFunc:Bfe};var GI=class{variableNames=["Image","Transforms"];outputShape;userCode;constructor(e,t,n,o,s,a){this.outputShape=a;let i=n==="nearest"?1:2,p;switch(o){case"constant":p=1;break;case"reflect":p=2;break;case"wrap":p=3;break;case"nearest":p=4;break;default:p=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${p} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${p} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${p} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function $fe(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:p,outputShape:u}=n,[l,m,c,d]=o.shape,[f,h]=u??[m,c],g=[l,f,h,d],b=new GI(m,c,a,i,p,g);return t.runWebGLProgram(b,[o,s],"float32")}var $K={kernelName:Ti,backendName:"webgl",kernelFunc:$fe};function Ofe(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;zi(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let a=n.readSync(s.dataId),{outputValues:i,outputShape:p,indices:u}=Yz(a,o,s.shape,s.dtype);return[n.makeTensorInfo(p,s.dtype,i),n.makeTensorInfo([u.length],"int32",u)]}var OK={kernelName:_p,backendName:"webgl",kernelFunc:Ofe};function zfe(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,p=o.shape[s],u=new Array(i-1),l=0;for(let h=0;h<i;h++)h!==s&&(u[l++]=a.shape[h]);let m=[],c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let f=new Array(p);for(let h=0;h<f.length;h++){c[s]=h;let g=Ui({inputs:{x:a},backend:t,attrs:{begin:c,size:d}}),b=pe({inputs:{x:g},backend:t,attrs:{shape:u}});f[h]=b,m.push(g)}return m.forEach(h=>t.disposeIntermediateTensorInfo(h)),f}var zK={kernelName:oa,backendName:"webgl",kernelFunc:zfe};var WI=class{variableNames=["x","segmentIds"];outputShape;userCode;constructor(e,t){let n=e.windowSize,o=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[o,i];let p="0.0",u="sumValue",l=Math.floor(n/4)*4,m=n%4,c=`
        sumValue += dot(values, segFilter);
    `,d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${p};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${c}
        }

        int inIdx = inOffset + ${l};
        if (${m===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${c}
        } else if (${m===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${c}
        } else if (${m===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${c}
        }
        setOutput(${u});
      }
    `}};function Gfe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:a}=n,i=o.shape.length,p=[],u=0,l=I.getAxesPermutation([u],i),m=o;l!=null&&(m=Kt({inputs:{x:o},backend:t,attrs:{perm:l}}),p.push(m),u=I.getInnerMostAxes(1,i)[0]);let c=I.segment_util.computeOutShape(m.shape,u,a),d=y.sizeFromShape([m.shape[u]]),f=pe({inputs:{x:m},backend:t,attrs:{shape:[-1,d]}});p.push(f);let h=Pu(o.dtype),g=(C,v,A,_,R)=>{let M=C.shape[0],F=C.shape[1],O=I.segment_util.segOpComputeOptimalWindowSize(F,R),G={windowSize:O,inSize:F,batchSize:M,numSegments:R},W=new WI(G,v),U=t.compileAndRun(W,[C,A],_);if(p.push(U),U.shape[1]===R)return U;let K=I2({backend:t,attrs:{start:0,stop:R,step:1,dtype:"float32"}}),H=k2({inputs:{x:K},backend:t,attrs:{reps:[F/O]}});return p.push(K),p.push(H),g(U,v,H,_,R)},b=g(f,"unsortedSegmentSum",s,h,a),x=pe({inputs:{x:b},backend:t,attrs:{shape:c}}),T=x;if(l!=null){p.push(x);let C=I.getUndoAxesPermutation(l);T=Kt({inputs:{x:T},backend:t,attrs:{perm:C}})}return p.forEach(C=>t.disposeIntermediateTensorInfo(C)),T}var GK={kernelName:Rp,backendName:"webgl",kernelFunc:Gfe};var Wfe=[vG,wG,AG,NG,_G,RG,MG,PG,LG,BG,$G,OG,zG,GG,WG,UG,KG,VG,HG,qG,jG,YG,ZG,QG,rW,oW,sW,fG,iW,pW,lW,mW,cW,dW,fW,hW,gW,bW,yW,CW,IW,kW,vW,SW,wW,AW,NW,DW,_W,RW,MW,PW,FW,EW,LW,$W,OW,zW,GW,UW,KW,VW,HW,qW,jW,XW,YW,ZW,dG,QW,uW,JW,eU,tU,hG,rU,nU,oU,sU,aU,iU,uU,pU,lU,mU,dU,fU,hU,gU,bU,yU,TU,IU,kU,vU,SU,wU,RU,yG,MU,PU,FU,EU,JG,LU,OU,zU,GU,WU,gG,UU,KU,VU,HU,qU,eW,AU,jU,XU,YU,TG,ZU,QU,JU,eK,tK,rK,nK,oK,sK,aK,iK,uK,pK,lK,mK,cK,XG,_U,dK,fK,hK,gK,bK,yK,xK,TK,IK,kK,SK,wK,AK,NK,DK,_K,RK,DU,IG,MK,PK,FK,EK,BK,$K,kG,OK,zK,GK,BU];for(let r of Wfe)Ru(r);var Ki=L();Ki.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Ki.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Ki.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);Ki.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0);Ki.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Ki.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Ki.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Ki.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);Ki.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);Ki.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>0);Ki.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);var UI=class{vendor;architecture;intelGPUGeneration;constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return this.vendor==="intel"}};var KI=class{constructor(e){this.device=e}numUsedBuffers=0;numFreeBuffers=0;freeBuffers=new Map;usedBuffers=new Map;numBytesUsed=0;numBytesAllocated=0;acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){let o=WK(e,t);if(this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.usedBuffers.has(o)||this.usedBuffers.set(o,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(o).length>0){this.numFreeBuffers--;let a=this.freeBuffers.get(o).shift();return this.usedBuffers.get(o).push(a),a}this.numBytesAllocated+=e;let s=this.device.createBuffer({size:e,usage:t,mappedAtCreation:n});return this.usedBuffers.get(o).push(s),s}releaseBuffer(e,t,n){if(this.freeBuffers.size===0)return;let o=WK(t,n);this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.freeBuffers.get(o).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let s=this.usedBuffers.get(o),a=s.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");s.splice(a,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,n)},o=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function WK(r,e){return`${r}_${e}`}var VI=class{constructor(e){this.device=e}numUsedTextures=0;numFreeTextures=0;freeTextures=new Map;usedTextures=new Map;numBytesUsed=0;numBytesAllocated=0;acquireTexture(e,t,n,o){let s=KK(n),a=e*t*s,i=UK(e,t,n,o);if(this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.usedTextures.has(i)||this.usedTextures.set(i,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(i).length>0){this.numFreeTextures--;let u=this.freeTextures.get(i).shift();return this.usedTextures.get(i).push(u),u}this.numBytesAllocated+=a;let p=this.device.createTexture({size:[e,t],format:n,usage:o});return this.usedTextures.get(i).push(p),p}releaseTexture(e,t,n,o,s){if(this.freeTextures.size===0)return;let a=UK(t,n,o,s);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(e),this.numFreeTextures++,this.numUsedTextures--;let i=this.usedTextures.get(a),p=i.indexOf(e);if(p<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(p,1);let u=KK(o),l=t*n*u;this.numBytesUsed-=l}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function UK(r,e,t,n){return`${r}_${e}_${t}_${n}`}function KK(r){if(r==="rgba8unorm")return 16;throw new Error(`${r} is not supported!`)}function VK(r,e){if(Math.max(...r)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");let t=r.length,n="xyzwuv",o=r.map(a=>`${e}.${n[a]}`),s=new Array(t-1);s[t-2]=o[t-1];for(let a=t-3;a>=0;--a)s[a]=`(${s[a+1]} * ${o[a+1]})`;return s}var op=(r,e,t)=>t==="int32"?`atomicAdd(${r}, bitcast<i32>(${e}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${e});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${r}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`;var XK=(r,e,t,n)=>{let o={dtype:n.dtype,shape:n.shape},s=Kfe(t,o,e),a=r.createShaderModule({code:s,label:e.constructor.name});return r.createComputePipeline({compute:{module:a,entryPoint:"_start"},label:e.constructor.name,layout:"auto"})},Ze=(r,e="f32")=>{switch(r){case 1:return`${e}`;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${r}-component ${e} is not supported.`)}};function rr(r){if(r<=1)return"i32";if(r===2)return"vec2<i32>";if(r===3)return"vec3<i32>";if(r===4)return"vec4<i32>";if(r===5)return"vec5";if(r===6)return"vec6";throw Error(`GPU for rank ${r} is not yet supported`)}function Ea(r){if(r===0)return"x";if(r===1)return"y";if(r===2)return"z";if(r===3)return"w";if(r===4)return"u";if(r===5)return"v";throw Error(`Index ${r} is not yet supported`)}function J(...r){let e;switch(r.length){case 0:e=`
        fn main()
      `;break;case 1:e=`
        fn main(${r[0]} : i32)
      `;break;default:throw Error("Unreachable")}return e}function HK(r,e){let t;return t=`
     ${Ufe(e)}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${r?"main(getGlobalIndex());":"main();"};
      }
    `,t}function Ufe(r){return`
  @compute @workgroup_size(${r.workgroupSize[0]}, ${r.workgroupSize[1]}, ${r.workgroupSize[2]})
`}function Kfe(r,e,t){let n=[],o=t.workgroupSize[0]*t.workgroupSize[1]*t.workgroupSize[2];if(t.outputComponent=t.outputComponent?t.outputComponent:1,n.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${ZK(t)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${o}u +
                localIndex);
        `}
      }
    `),t.isFromPixels){n.push(`
        struct Uniform {
          size            : i32,
          numChannels     : i32,
          outShapeStrides : vec2<i32>,
        };

        @group(0) @binding(0) var<storage, read_write> result: array<${zm(e.dtype,t.outputComponent)}>;
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);let f=jK(t);return[qK,n.join(`
`),v2(e.shape),t.getUserCode(),HK(f,t)].join(`
`)}let s,a,i="struct Uniforms { NAN : f32, INFINITY : f32, ";t.variableNames.forEach((f,h)=>{let g=rr(r[h].shape.length);i+=`${f.charAt(0).toLowerCase()+f.slice(1)}Shape : ${g}, `,s=r[h].shape.length-1,a=rr(s),i+=`${f.charAt(0).toLowerCase()+f.slice(1)}ShapeStrides: ${a}, `});let p=rr(e.shape.length);i+=`outShape : ${p}, `,s=e.shape.length-1,a=rr(s),i+=`
         outShapeStrides: ${a}, `,t.size&&(i+="size : i32, "),t.uniforms&&(i+=t.uniforms),i+="};",i=Qfe(i),n.push(i),t.atomic?n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${zm(e.dtype,t.outputComponent)}>;
    `),t.variableNames.forEach((f,h)=>{n.push(`
      @group(0) @binding(${1+h}) var<storage, read> ${f}: array<${t.variableComponents?zm(r[h].dtype,t.variableComponents[h]):zm(r[h].dtype,t.outputComponent)}>;
        `)}),i!==""&&n.push(`
      @group(0) @binding(${1+t.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);let u=Xfe(e.shape,t.dispatchLayout),l=[qK,n.join(`
`)+Vfe,v2(e.shape),u,Yfe(e.shape.length)];t.atomic||l.push(Zfe(e.shape,e.dtype,t.outputComponent)),t.variableNames.forEach((f,h)=>{l.push(`${v2(r[h].shape,f)}`)});let m=r.map((f,h)=>jfe(f,e.shape,t.variableComponents?t.variableComponents[h]:t.outputComponent,t.dispatchLayout.x.length===e.shape.length)).join(`
`);l.push(m),l.push(t.getUserCode());let c=jK(t);return l.push(HK(c,t)),l.join(`
`)}function YK(r,e,t,n){let o=r.shaderKey;if(r.isFromPixels)return o;let s=t.map(l=>l.dtype).concat(n.dtype),a=t.map(l=>I.getBroadcastDims(l.shape,n.shape)),i=t.map(l=>y.arraysEqual(l.shape,n.shape)).join("_"),p=a.map(l=>l.join("_")).join(";"),u=ZK(r)?"flatDispatch":"";return o+="_"+(r.workgroupSize?r.workgroupSize.join(","):"")+e.map(l=>l.length).join(",")+s.join(",")+r.variableNames.join(",")+p+i+u,o}var qK=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let modulo: i32 = a % b;
    if (sign < 0. && modulo != 0) {
      res = res - 1;
    }
    return res;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,Vfe=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function v2(r,e=""){let t=r.length,n=e!==""?`get${e.charAt(0).toUpperCase()+e.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",o=e!==""?`${e.charAt(0).toLowerCase()+e.slice(1)}ShapeStrides`:"outShapeStrides";if(t<=1)return`fn ${n}(index : i32) -> i32 { return index; }`;let s=y.computeStrides(r),a=rr(t),i=[];for(let u=0;u<t;u++)i.push(`d${u}`);if(s.length===1)return`    fn ${n}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${o}; let d1 = index - d0 * uniforms.${o};
      return vec2<i32>(d0, d1);
    }`;let p;return p="var index2 = index;"+s.map((u,l)=>{let m=`let ${i[l]} = index2 / uniforms.${o}.${Ea(l)}`,c=l===s.length-1?`let ${i[l+1]} = index2 - ${i[l]} * uniforms.${o}.${Ea(l)}`:`index2 = index2 - ${i[l]} * uniforms.${o}.${Ea(l)}`;return`${m}; ${c};`}).join(""),`
    fn ${n}(index : i32) -> ${a} {
      ${p}
      return ${a}(${i.join(",")});
    }
  `}function Hfe(r,e){let t=r.name,n=r.shape.length,o=rr(n),s="get"+t.charAt(0).toUpperCase()+t.slice(1),a=["d0","d1","d2","d3","d4","d5"].slice(0,n),i=a.map(l=>`${l} : i32`).join(", ");if(n<1)return`
      fn ${s}() -> ${Ze(e)} {
        return ${Ze(e)}(${t}[0]);
      }
    `;let p=`uniforms.${t.charAt(0).toLowerCase()+t.slice(1)}Shape`,u=`${n}D`;return n===0&&(u="1D"),`
    fn ${s}(${i}) -> ${Ze(e)} {
      return ${Ze(e)}(${t}[getIndexFromCoords${u}(${o}(${a.join(",")}),
        ${p})${e===1?"":` / ${e}`}]);
    }
   `}function qfe(r,e,t,n){let o=r.name,s=o.charAt(0).toUpperCase()+o.slice(1),a="get"+s+"ByOutput",i=r.shape.length,p=e.length,u=rr(p);if(y.arraysEqual(r.shape,e)&&n)return`
    fn ${a}Index(globalIndex : i32) -> ${Ze(t)} {
      return ${Ze(t)}(${o}[globalIndex]);
    }

    fn ${a}Coords(coords : ${u}) -> ${Ze(t)} {
      return ${Ze(t)}(${o}[${p>1?"getOutputIndexFromCoords(coords)":"coords"}${t===1?"":` / ${t}`}]);
    }
    `;let l=I.getBroadcastDims(r.shape,e),m=p-i,c="";if(i===0)return`
    fn ${a}Index(globalIndex : i32) -> ${Ze(t)}{
      return get${s}();
    }

    fn ${a}Coords(coords : ${u}) -> ${Ze(t)}{
      return get${s}();
    }
  `;p<2&&l.length>=1?c="coords = 0;":c=l.map(g=>`coords.${Ea(g+m)} = 0;`).join(`
`);let d="";if(p<2&&i>0)d="coords";else if(p>1){let g=rr(i),b=r.shape.map((x,T)=>`coords.${Ea(T+m)}`).join(", ");d=`${g}(${b})`}else d="coords";let f=`uniforms.${o.charAt(0).toLowerCase()+o.slice(1)}Shape`,h=`${i}D`;return`
  fn ${a}Index(globalIndex : i32) -> ${Ze(t)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${c}
    return ${Ze(t)}(${o}[getIndexFromCoords${h}(${d}, ${f})${t===1?"":` / ${t}`}]);
  }

  fn ${a}Coords(coordsIn : ${u}) -> ${Ze(t)} {
    var coords = coordsIn;
    ${c}
    return ${Ze(t)}(${o}[getIndexFromCoords${h}(${d}, ${f})${t===1?"":` / ${t}`}]);
  }
`}function jfe(r,e,t,n){let o=Hfe(r,t);return r.shape.length<=e.length&&(o+=qfe(r,e,t,n)),o}function Xfe(r,e){let{x:t,y:n=[],z:o=[]}=e,s=r.length,a=t.length+n.length+o.length;if(a!==s)return"";if(t.length===s)return`fn getOutputCoords() -> ${rr(s)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let i="",p=[t,n,o];for(let c=0;c<p.length;c++){let d=p[c];if(d.length!==0)if(d.length===1)i+=`let d${d[0]} = i32(globalId[${c}]);`;else{let f=VK(d,"uniforms.outShape");i+=`var index${c} = i32(globalId[${c}]);`;for(let h=0;h<f.length;h++)i+=`let d${d[h]} = index${c} / ${f[h]};`,h===f.length-1?i+=`let d${d[h+1]} = index${c} - d${d[h]} * ${f[h]};`:i+=`index${c} = index${c} - d${d[h]} * ${f[h]};`}}let u=[];for(let c=0;c<a;c++)u.push(`d${c}`);let l=rr(a),m=`fn getOutputCoords() -> ${l} {
  ${i}
`;return u.length===0?m+=`return ${l}(0); }`:m+=`return ${l}(${u.join(",")}); }`,m}function Yfe(r){let e="";switch(r){case 0:case 1:e+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:e+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:e+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:e+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:e+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:y.assert(!1,()=>`Unsupported ${r}D shape`);break}return e}function ZK(r){return r.dispatch[1]===1&&r.dispatch[2]===1}function zm(r,e=1){if(r==="float32")return Ze(e,"f32");if(r==="int32"||r==="bool")return Ze(e,"i32");throw new Error(`type ${r} is not supported.`)}function Zfe(r,e,t){let n=r.length,o=zm(e,t),s=`fn setOutputAtIndex(flatIndex : i32, value : ${Ze(t)}) {
      result[flatIndex] = ${o}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${Ze(t,"i32")}) {
      result[flatIndex] = ${o}(value);
    }
    `;if(n>=2){let a=["d0","d1","d2","d3","d4","d5"].slice(0,n),i=rr(n);s+=`
      fn setOutputAtCoords(${a.map(p=>`${p} : i32`).join(", ")}, value : ${Ze(t)}) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndex(flatIndex${t===1?"":` / ${t}`}, value);
      }
      fn setOutputAtCoordsI32(${a.map(p=>`${p} : i32`).join(", ")}, value : ${Ze(t,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndexI32(flatIndex${t===1?"":` / ${t}`}, value);
      }
    `}return s}function Qfe(r){let e=/(\w+)\s*:\s*vec(5|6)/g;r=r.replace(e,n=>"@align(16) "+n);let t=/vec(5|6)\s*,\s*(\w+)/g;return r=r.replace(t,(n,o,s)=>`vec${o}, @align(16) ${s}`),r}function jK(r){return!(r.dispatchLayout.hasOwnProperty("y")&&r.dispatchLayout.y.length!==0||r.dispatchLayout.hasOwnProperty("z")&&r.dispatchLayout.z.length!==0)}var A2={};Ye(A2,{GPUBytesPerElement:()=>HI,MatMulProgramType:()=>w2,assertNotComplex:()=>Wg,computeDispatch:()=>Q,computeWorkPerThreadForConv2d:()=>zg,computeWorkgroupInfoForMatMul:()=>S2,computeWorkgroupSizeForConv2d:()=>Og,flatDispatchLayout:()=>se,isWebGPUSupported:()=>Gg,tilesFitEvenlyIntoShape:()=>ehe});var Gm=r=>{let e=1;for(let t=0;t<r.length;t++)e*=r[t];return e};function ehe(r,e){if(r.length!==e.length)throw new Error(`Cannot compute whether rank ${r.length} tiles fit evenly into rank ${e.length} shape - ranks must match.`);return e.every((t,n)=>t%r[n]===0)}function Q(r,e,t=[1,1,1],n=[1,1,1]){let[o,s,a]=[Math.ceil(Gm(r.x.map(i=>e[i]))/(t[0]*n[0])),r.y?Math.ceil(Gm(r.y.map(i=>e[i]))/(t[1]*n[1])):1,r.z?Math.ceil(Gm(r.z.map(i=>e[i]))/(t[2]*n[2])):1];return[o,s,a]}function S2(r,e,t,n=!1){let o=[8,8,1],s=[4,4,1];return n||(r<=8&&(s[1]=1),e<=16&&t<=16&&(o[0]=4)),{workgroupSize:o,elementsPerThread:s}}function Og(r,e,t=!1){if(t)return[8,8,1];let n=Gm(r.x.map(s=>e[s])),o=Gm(r.y.map(s=>e[s]));return n<=4?[4,16,1]:o<=4?[16,4,1]:[16,16,1]}function zg(r,e,t=!1){if(t)return[4,4,1];let n=Gm(r.x.map(s=>e[s])),o=Gm(r.y.map(s=>e[s]));return n<=4?[1,2,1]:o<=4?[2,1,1]:[2,2,1]}function se(r){return{x:r.map((e,t)=>t)}}function HI(r){if(r==="float32"||r==="int32"||r==="bool"||r==="string")return 4;if(r==="complex64")return 8;throw new Error(`Unknown dtype ${r}`)}function Gg(){return(typeof window<"u"||typeof WorkerGlobalScope<"u")&&!!navigator.gpu}function Wg(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&y.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGPU backend.`)})}var w2=(s=>(s[s.MatMulReduceProgram=0]="MatMulReduceProgram",s[s.MatMulSplitKProgram=1]="MatMulSplitKProgram",s[s.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",s[s.MatMulPackedProgram=3]="MatMulPackedProgram",s[s.MatMulMax=4]="MatMulMax",s))(w2||{});var the=L().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),rhe=(r,e)=>{let t=r.limits.maxComputeWorkgroupsPerDimension,n=e.dispatchLayout,o=e.dispatch;if(o.every(a=>a<=t))return o;y.assert(o[0]>t&&n.y===void 0&&n.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let s=Math.ceil(Math.sqrt(o[0]));return s>t?(s=Math.ceil(Math.cbrt(o[0])),y.assert(s<=t,()=>"Total dispatch size exceeds WebGPU maximum."),[s,s,s]):[s,s,1]},N2=class extends bo{bufferManager;adapterInfo;device;queue;tensorMap;textureManager;thresholdToIncreaseWorkgroups;activeTimers;currentCommandEncoder;currentComputePass;commandQueueOwnedIds=new WeakSet;dispatchNumberInEncoder=0;disposed=!1;downloadWaitMs=0;dummyCanvas;dummyContext;tensorDataPendingDisposal=[];pipelineCache;programTimersStack;querySet;stagingPendingDisposal=[];supportTimeQuery;uniformPendingDisposal=[];uploadWaitMs=0;nextDataId(){return N2.nextDataId++}constructor(e,t){if(super(),!Gg())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=e.features.has("timestamp-query-inside-passes"),this.adapterInfo=new UI(t),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new KI(this.device),this.textureManager=new VI(this.device),this.tensorMap=new $a(this,jr()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),L().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}disposeData(e,t=!1){if(this.tensorDataPendingDisposal.indexOf(e)>=0)return!1;if(!this.tensorMap.has(e))return!0;let n=this.tensorMap.get(e);if(this.decRef(e),!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDataPendingDisposal.push(e),!1;let{complexTensorInfos:o}=this.tensorMap.get(e);return o!=null&&(this.disposeData(o.real.dataId,t),this.disposeData(o.imag.dataId,t)),this.releaseResource(e),this.tensorMap.delete(e),!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let t=this.tensorMap.get(e);if(!(!t||!t.resourceInfo)){if(t.external){t.resourceInfo=null;return}if("texture"in t.resourceInfo){let n=t.resourceInfo;n.texture instanceof GPUTexture&&this.textureManager.releaseTexture(n.texture,n.width,n.height,n.format,n.usage),n.texture=null}else{let n=t.resourceInfo;this.bufferManager.releaseBuffer(n.buffer,n.size,n.usage),n.buffer=null}t.resourceInfo=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()};return this.tensorMap.set(o,{dtype:n,shape:t,values:e,refCount:1}),o}move(e,t,n,o,s){if(o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:o,shape:n,values:t,refCount:s})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.size,e.usage)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.size,e.usage)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.end(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e,t){let n=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let o=n.getMappedRange().slice(0);return n.unmap(),n!=null&&this.bufferManager.releaseBuffer(n,t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),L().getBool("WEBGPU_USE_PROFILE_TOOL")&&(y.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),o}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.releaseResource(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let o;if(t.dtype==="complex64"){let s=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=s[0],i=s[1];o=I.mergeRealAndImagArrays(a,i)}else{let s=t.resourceInfo,a=await this.getBufferData(s.buffer,s.size);o=y.convertBackendValuesAndArrayBuffer(a,t.dtype)}return this.convertAndCacheOnCPU(e,o),o}copyBuffer(e,t,n){let o=this.bufferManager.acquireBuffer(t,n);return this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,o,0,t),this.submitQueue(),o}createTensorFromGPUData(e,t,n){let o=e.buffer;if(n==="complex64")throw new Error("Cannot write to a complex64 dtype. ");let s={id:this.nextDataId()};this.tensorMap.set(s,{dtype:n,shape:t,values:null,refCount:1,external:e.zeroCopy});let a=this.tensorMap.get(s),i=HI(a.dtype)*y.sizeFromShape(a.shape);if(e.buffer.size<i)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${i})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return e.zeroCopy!==!0&&(o=this.copyBuffer(o,i,o.usage)),a.resourceInfo={size:o.size,usage:o.usage,buffer:o},jr().makeTensorFromDataId(s,t,n,this)}readToGPU(e){let t=this.tensorMap.get(e),{values:n,dtype:o,shape:s,resourceInfo:a}=t;if(o==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(a==null)throw n!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let i=a.size,p=this.bufferManager.acquireBuffer(i,a.usage);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(a.buffer,0,p,0,i),this.submitQueue();let u=this.makeTensorInfo(s,o),l=jr().makeTensorFromTensorInfo(u),m=this.tensorMap.get(u.dataId);return m.resourceInfo={size:i,usage:this.defaultGpuBufferUsage(),buffer:p},{tensorRef:l,buffer:p,bufSize:i}}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(o=>y.decodeString(o));return Ce(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,t)}async time(e){this.supportTimeQuery||console.warn("This device doesn't support timestamp-query-inside-passes extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled. Using performance.now is not workable for webgpu since it doesn't support synchronous data read from GPU.");let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=y.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=y.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},p=await Promise.all(s);return i.kernelMs=y.sum(p),i.getExtraProfileInfo=()=>p.map((u,l)=>({name:a[l],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}makeTensorInfo(e,t,n){return t==="string"&&n!=null&&n.length>0&&y.isString(n[0])&&(n=n.map(s=>y.encodeString(s))),{dataId:this.write(n,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);if("texture"in t.resourceInfo){let o=t.resourceInfo;return o.texture instanceof GPUExternalTexture?o.texture:o.texture.createView()}let n=t.resourceInfo;return{offset:0,size:n.size,buffer:n.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.resourceInfo)return;let n=HI(t.dtype)*y.sizeFromShape(t.shape),o=this.bufferManager.acquireBuffer(n,this.defaultGpuBufferUsage());if(t.resourceInfo={size:n,usage:this.defaultGpuBufferUsage(),buffer:o},t.values){let s=this.bufferManager.acquireUploadBuffer(n,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),a=s.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(a).set(t.values):new Float32Array(a).set(t.values),s.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(s,0,o,0,n);let i={size:n,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:s};this.stagingPendingDisposal.push(i)}}makeUniforms(e){let t=0,n=0,o=[],s=1;e.forEach(u=>{u.data.length===0&&(u.data=[1]);let l;switch(u.data.length){case 1:l=4;break;case 2:l=8;break;case 3:l=16;break;case 4:l=16;break;case 5:l=16;break;case 6:l=16;break;default:y.assert(!1,()=>`Unsupported ${u.data.length}D shape`)}(n===5||n===6)&&(l=16),l>s&&(s=l),t=Math.ceil(t/l)*l,n=u.data.length,o.push(t),t+=u.data.length*4}),t=Math.ceil(t/s)*s;let a=new ArrayBuffer(t);e.forEach((u,l)=>{let m=o[l];u.type==="int32"?new Int32Array(a,m,u.data.length).set(u.data):u.type==="uint32"?new Uint32Array(a,m,u.data.length).set(u.data):new Float32Array(a,m,u.data.length).set(u.data)});let i=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.queue.writeBuffer(i,0,a,0,t);let p={size:t,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:i};return this.uniformPendingDisposal.push(p),{offset:0,size:t,buffer:i}}runWebGPUProgram(e,t,n,o,s){if(s||(s=this.makeTensorInfo(e.outputShape,n)),y.sizeFromShape(s.shape)===0)return this.tensorMap.get(s.dataId).values=y.getTypedArrayFromDType(s.dtype,0),s;this.uploadToGPU(s.dataId),e.dispatch=rhe(this.device,e);let a=[],i=[];if(!e.isFromPixels){a.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),i=t.concat(s).map(g=>g.shape);let h="int32";if(i.map(g=>{a.push({type:h,data:g});let b=y.computeStrides(g);a.push({type:h,data:b})}),e.size){let g=y.sizeFromShape(e.outputShape);a.push({type:h,data:[e.outputComponent?g/e.outputComponent:g]})}}let p=t.map((h,g)=>{if(h.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(h.dataId),{dtype:this.tensorMap.get(h.dataId).dtype,shape:h.shape,name:e.variableNames[g]}}),u=YK(e,i,p,s),l;u in this.pipelineCache?l=this.pipelineCache[u]:(l=XK(this.device,e,p,s),this.pipelineCache[u]=l),o&&(a=[...a,...o]);let m=[this.tensorToBinding(s),...t.map(h=>this.tensorToBinding(h)),this.makeUniforms(a)],c=this.device.createBindGroup({layout:l.getBindGroupLayout(0),entries:m.map((h,g)=>({binding:g,resource:h}))});this.ensureCommandEncoderReady();let d=this.getComputePass(),f=this.activeTimers!=null;return f&&this.supportTimeQuery&&d.writeTimestamp(this.querySet,0),d.setPipeline(l),d.setBindGroup(0,c),d.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),f&&this.supportTimeQuery&&d.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(h=>{this.commandQueueOwnedIds.add(h.dataId)}),this.commandQueueOwnedIds.add(s.dataId),L().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),f&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),s}async getTimeFromQuerySet(e){let t=this.bufferManager.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.bufferManager.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let o=new BigUint64Array(n.getMappedRange()),s=Number(o[1]-o[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),s/1e6}shouldExecuteOnCPU(e,t=the){return L().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).resourceInfo==null&&y.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}},eh=N2;q(eh,"nextDataId",0);Gg()&&Lp("webgpu",async()=>{L().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let r={powerPreference:L().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(r),t={};e.features.has("timestamp-query-inside-passes")&&(t.requiredFeatures=["timestamp-query-inside-passes"]);let n=e.limits;t.requiredLimits={maxComputeWorkgroupStorageSize:n.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.maxStorageBufferBindingSize};let o=await e.requestDevice(t),s=await e.requestAdapterInfo();return new eh(o,s)},3);var nhe=`
  resultTemp = select(resultTemp, valueForNaN, isNaN | isnan(a) | isnan(b));`,ohe=`
  resultTemp = select(
      resultTemp, vec4<f32>(valueForNaN),
      vec4<bool>(isNaN) | isnanVec4(a) | isnanVec4(b));
  `,she="return a + b;",ahe="var resultTemp = atan2(a, b);",ihe="return areal * breal - aimag * bimag;",uhe="return areal * bimag + aimag * breal;",phe="return a / b;",lhe="return select(a * (b + 1.0), a, b >= 0.);",mhe="return select(a * (b + vec4<f32>(1.0)), a, b >= vec4<f32>(0.));",che="return f32(a == b);",dhe="return vec4<f32>(a == b);",fhe="return f32(a > b);",hhe="return vec4<f32>(a > b);",ghe="return f32(a >= b);",bhe="return vec4<f32>(a >= b);",yhe=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
`,xhe=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
`,The="return f32(a < b);",Che="return vec4<f32>(a < b);",Ihe="return f32(a <= b);",khe="return vec4<f32>(a <= b);",vhe="return f32(a >= 1.0 && b >= 1.0);",She=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,whe="return f32(a >= 1.0 || b >= 1.0);",Ahe=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,Nhe="var resultTemp = max(a, b);",Dhe="var resultTemp = min(a, b);",_he=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,Rhe=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,Mhe="return a * b;",Phe=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,Fhe=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,Ehe=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,Lhe=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,Bhe="if (a < 0.0) { return b * a; }  return a;",$he=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,Ohe="return (a - b) * (a - b);",zhe="return a - b;";function th(r,e){do{let t;switch(r){case 1:t=ahe;break;case 14:t=Nhe;break;case 15:t=Dhe;break;case 16:t=e?Rhe:_he;break;case 18:t=e?Fhe:Phe;break;case 19:t=e?Lhe:Ehe;break;default:continue}return`
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        ${t}
        ${e?ohe:nhe}
        return resultTemp;
      }
    `}while(!1);switch(r){case 0:return she;case 2:return uhe;case 3:return ihe;case 4:return phe;case 5:return e?mhe:lhe;case 6:return e?dhe:che;case 7:return e?hhe:fhe;case 8:return e?bhe:ghe;case 9:return e?xhe:yhe;case 10:return e?Che:The;case 11:return e?khe:Ihe;case 12:return e?She:vhe;case 13:return e?Ahe:whe;case 17:return Mhe;case 20:return e?$he:Bhe;case 21:return Ohe;case 22:return zhe;default:throw new Error(`BinaryType ${r} is not implemented!`)}}var Ghe="return abs(a);",Whe=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,Uhe=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,Khe=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,Vhe="return asinh(a);",Hhe=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,qhe=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,jhe="return ceil(a);",Xhe="return cos(a);",Yhe=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Zhe="return exp(a) - 1.0;",Qhe="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Jhe=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,ege=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${I.ERF_P};
  let a1 = ${I.ERF_A1};
  let a2 = ${I.ERF_A2};
  let a3 = ${I.ERF_A3};
  let a4 = ${I.ERF_A4};
  let a5 = ${I.ERF_A5};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,tge="return exp(a);",rge="return floor(a);",nge="return f32(!isnan(a) && !isinf(a));",oge="return f32(isinf(a));",sge="return f32(isnan(a));",age="return a;",ige=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,uge=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,pge="return f32(!(a >= 1.0));",lge="return -a;",mge="if (a < 0.0) { return uniforms.alpha * a; } return a;",cge=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,dge="return 1.0 / a;",fge="return select(a, 0.0, a < 0.0);",hge="return clamp(a, 0.0, 6.0);",gge="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",bge=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,yge="return round(a);",xge="return inverseSqrt(a);",Tge=`
  if (a >= 0.0) {
    return ${I.SELU_SCALE} * a;
  } else {
    return ${I.SELU_SCALEALPHA} * (exp(a) - 1.0);
  }
`,Cge="return 1.0 / (1.0 + exp(-1.0 * a));",Ige="return sign(a);",kge="return sin(a);",vge=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Sge=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,wge="return sqrt(a);",Age="return a * a;",Nge=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,Dge="return tan(a);",_ge=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,Rge="return f32(i32((a)));";function sp(r,e){switch(r){case 0:return Ghe;case 1:return Whe;case 2:return Uhe;case 3:return Khe;case 4:return Vhe;case 5:return Hhe;case 6:return qhe;case 8:return Xhe;case 9:return Yhe;case 7:return jhe;case 10:return e?Jhe:Qhe;case 11:return ege;case 12:return tge;case 13:return Zhe;case 14:return rge;case 15:return nge;case 16:return oge;case 17:return sge;case 18:return age;case 19:return ige;case 20:return uge;case 21:return pge;case 22:return lge;case 25:return e?cge:mge;case 26:return dge;case 23:return e?bge:fge;case 24:return e?gge:hge;case 27:return yge;case 28:return xge;case 29:return Tge;case 30:return Cge;case 31:return Ige;case 32:return kge;case 33:return vge;case 34:return Sge;case 35:return wge;case 36:return Age;case 37:return Nge;case 38:return Dge;case 39:return _ge;case 40:return Rge;default:throw new Error(`BinaryType ${r} is not implemented!`)}}function nn(r,e=!1,t=!1,n=3){if(r===null)return"";let o="";if(r==="linear")o=sp(18);else if(r==="relu")o=sp(23,t);else if(r==="elu")o=sp(10,t);else if(r==="relu6")o=sp(24,t);else if(r==="prelu")o=th(20,t);else if(r==="sigmoid")o=sp(30,t);else if(r==="leakyrelu")o=sp(25,t);else throw new Error(`Activation ${r} has not been implemented for the WebGPU backend.`);let a=Ze(t?4:1),i="";return e?i=`
      fn activation(a : ${a}, coords : vec${n}<i32>) -> ${a} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${o}
      }`:i=`
      fn activation(a : ${a}, coords : vec${n}<i32>) -> ${a} {
        ${o}
      }`,i}function uo(r,e){return`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      ${e?"value = activation(value, coords);":""}
      `}function D2(r,e,t=!1,n=!1,o=!1,s=1){y.assert(r&&s===1||!r,()=>`transposeA ${r} is not compatible with component size ${s}`);let a=`
      ${r?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,i=e?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batch: i32, row: i32, colIn: i32) -> ${Ze(s)} {
    var value = ${Ze(s)}(0.0);
    let col = colIn * ${s};
    ${t&&o?a:`
    ${r?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${a}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, colIn: i32) -> ${Ze(s)} {
    let col = colIn * ${s};
    var value = ${Ze(s)}(0.0);
    ${i}
    return value;
  }
  `}function Ug(r,e,t,n,o=!1,s=!1,a=!1,i=1){return`
  ${D2(t,n,o,s,a,i)}
  fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Ze(i)}) {
    let col = colIn * ${i};
    ${o&&s?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${uo(r,e)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}var Mge=(r,e)=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart / ${e} + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart / ${e} + inputCol);
        `,Pge=(r,e,t)=>r?`
        let ACached0 = mm_Asub[k * ${e}][localRow];
        let ACached1 = mm_Asub[k * ${e} + 1][localRow];
        let ACached2 = mm_Asub[k * ${e} + 2][localRow];
        ${e===3?"":`let ACached3 = mm_Asub[k * ${e} + 3][localRow];`}
        for (var i = 0; i < ${t}; i++) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < ${t}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`;function Wm(r,e,t=!1,n=32,o=!1,s=32,a=!1){let i=e[1]*r[1],p=e[0]*r[0],u=t?i:n,l=t?n:i,m=u/e[0],c=n/e[1],d=r[1];return y.assert((t&&m===4&&r[1]===4||!t&&(m===3||m===4))&&u%e[0]===0&&n%e[1]===0&&r[0]===4,()=>`If transposeA ${t} is true, innerElementSize ${m} and workPerThread[1] ${r[1]} must be 4.
          Otherwise, innerElementSize ${m} must be 3 or 4.
      tileAWidth ${u} must be divisible by workgroupSize[0]${e[0]}. tileInner ${n} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${r[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${m}<f32>, ${u/m}>, ${l}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${p/r[0]}>, ${n}>;

  ${J()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${d};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${d};
    let globalCol = i32(globalId.x);
    let batch = ${o?"0":"i32(globalId.z)"};
    let batchA = ${o||!a?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${o||!a?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${i};

    let numTiles = ${o?`${Math.ceil(s/n)}`:`(uniforms.dimInner - 1) / ${n} + 1`};
    var kStart = ${o?`i32(globalId.z) * ${s}`:"0"};

    var acc: array<vec4<f32>, ${d}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${c};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${d}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${Mge(t,m)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${c}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${n};
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${n/m}; k++) {
            let BCached0 = mm_Bsub[k * ${m}][tileCol];
            let BCached1 = mm_Bsub[k * ${m} + 1][tileCol];
            let BCached2 = mm_Bsub[k * ${m} + 2][tileCol];
            ${m===3?"":`let BCached3 = mm_Bsub[k * ${m} + 3][tileCol];`}

            ${Pge(t,m,d)}
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${d}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}var QK=r=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,Fge=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function Um(r,e,t=!1,n=32,o=!1,s=32,a=!1,i=!1){let p=r[1]*e[1],u=r[0]*e[0],l=t?p:n,m=t?n:p;y.assert(m%e[1]===0&&l%e[0]===0&&n%e[1]===0,()=>`tileAHight ${m} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${l} must be divisible by workgroupSize[0]${e[0]}, tileInner ${n} must be divisible by workgroupSize[1]${e[1]}`);let c=m/e[1],d=l/e[0],f=n/e[1],h=r[1],g=r[0],b=a?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${p};
      let globalColStart = i32(workgroupId.x) * ${u};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${m}; inputRow = inputRow + ${e[1]}) {
          for (var inputCol = localCol; inputCol < ${l}; inputCol = inputCol + ${e[0]}) {
            ${QK(t)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${e[1]}) {
              for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${e[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${n};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${g}>;
        for (var k = 0; k < ${n}; k++) {
          for (var inner = 0; inner < ${g}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
          }
          for (var innerRow = 0; innerRow < ${h}; innerRow++) {
            let ACached = ${t?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
            for (var innerCol = 0; innerCol < ${g}; innerCol++) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                  ACached * BCached[innerCol];
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${h}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${e[1]};
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${e[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${h};
  let tileCol = i32(localId.x) * ${g};

  let globalRow = i32(globalId.y) * ${h};
  let globalCol = i32(globalId.x) * ${g};
  let globalRowStart = i32(workgroupId.y) * ${p};

  let tileRowA = i32(localId.y) * ${c};
  let tileColA = i32(localId.x) * ${d};
  let tileRowB = i32(localId.y) * ${f};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${c}; innerRow++) {
      for (var innerCol = 0; innerCol < ${d}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${QK(t)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${f}; innerRow++) {
      for (var innerCol = 0; innerCol < ${g}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${n};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${g}>;
    for (var k = 0; k < ${n}; k++) {
      for (var inner = 0; inner < ${g}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${h}; innerRow++) {
        ${Fge(t)}
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${h}; innerRow++) {
    for (var innerCol = 0; innerCol < ${g}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${l}>, ${m}>;
    var<workgroup> mm_Bsub : array<array<f32, ${u}>, ${n}>;

    ${J()} {
      let batch = ${o?"0":"i32(globalId.z)"};
      let batchA = ${o||!i?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${o||!i?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${o?`${Math.ceil(s/n)}`:`(uniforms.dimInner - 1) / ${n} + 1`};
      var kStart = ${o?`i32(globalId.z) * ${s}`:"0"};

      var acc : array<array<f32, ${g}>, ${h}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${h}; innerRow++) {
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${b}
    }
  `}var Ege=r=>r?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `;function Lge(r,e=!1){y.assert(r[1]===1&&r[2]===1,()=>`A linear work group size is required. But got ${r}.`);let t=r[0]*4;return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;

    ${J()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${t} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${t} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${Ege(e)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${t/4}; k++) {
          let rowB = t * ${t} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}var qI=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["A","B"];uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";workgroupSize;elementsPerThread;transposeA;transposeB;addBias;activation;hasPreluActivationWeights;fitAOuter;fitBOuter;fitInner;tileInner;isVectorA;isVec4;outputComponent;sequentialAccessByThreads;constructor(e,t,n=!1,o=!1,s=null,a=null,i=null,p=!1){this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let u=n?e[1]:e[2];if(this.isVec4=(u%4===0&&!n||t[1]%4===0&&n)&&t[2]%4===0&&!o,this.outputComponent=this.isVec4?4:1,this.isVectorA=t[1]===1&&!n,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{let c=S2(t[1],u,t[2],n);this.workgroupSize=c.workgroupSize,this.elementsPerThread=c.elementsPerThread}this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);let l=s!=null,m=i!=null;l&&this.variableNames.push("bias"),m&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=p,this.transposeA=n,this.transposeB=o,this.addBias=l,this.activation=a,this.hasPreluActivationWeights=m,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],u),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${n}_${o}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,t,n){let o=this.workgroupSize[1]*this.elementsPerThread[1],s=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workgroupSize[0]*4:this.tileInner=s;let a=e%o===0,i=t%s===0,p=n%this.tileInner===0;return[a,i,p]}getUserCode(){return`
      ${nn(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${Ug(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?Wm(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?Lge(this.workgroupSize,this.transposeA):Um(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}};function Bge(r){return`
    var<workgroup> sumValues : array<f32, ${r}>;
    ${J()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${r}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${r/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var jI=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["A","B"];uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";workgroupSize=[256,1,1];transposeA;transposeB;addBias;activation;hasPreluActivationWeights;constructor(e,t=!1,n=!1,o=null,s=null,a=null){this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize);let i=o!=null,p=a!=null;i&&this.variableNames.push("bias"),p&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=i,this.activation=s,this.hasPreluActivationWeights=p,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){return`
      ${nn(this.activation,this.hasPreluActivationWeights)}
      ${Ug(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${Bge(this.workgroupSize[0])}
    `}};function $ge(r){let e=r[1],t=r[0],n=e>t?e:t;return`
  var<workgroup> mm_Asub : array<array<f32, ${n}>, ${e}>;
  var<workgroup> mm_Bsub : array<array<f32, ${t}>, ${n}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${J()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${n};
    globalRowB = globalRowB + ${n};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${n};
      globalRowB = globalRowB + ${n};

      for (var k = 0; k < ${n}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}var XI=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["A","B"];uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";workgroupSize=[16,8,1];transposeA;transposeB;addBias;activation;hasPreluActivationWeights;constructor(e,t,n,o=!1,s=!1,a=null,i=null,p=null){this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workgroupSize[0]),Math.ceil(n[1]/this.workgroupSize[1]),n[0]];let u=a!=null;u&&this.variableNames.push("bias");let l=p!=null;l&&this.variableNames.push("preluActivationWeights"),this.transposeA=o,this.transposeB=s,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=l,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${o}_${s}`}getUserCode(){return`
      ${nn(this.activation,this.hasPreluActivationWeights)}
      ${Ug(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${$ge(this.workgroupSize)}
    `}};var YI=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["A","B"];uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";workgroupSize=[8,8,1];elementsPerThread;transposeA;transposeB;atomic=!0;outputComponent;splitedDimInner=128;constructor(e,t,n=!1,o=!1){y.assert(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};let s=(n&&this.outputShape[1]%4===0||!n&&t%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=s?4:1,s||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=Q(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=n,this.transposeB=o,this.shaderKey=`matMulSplitK_${n}_${o}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){let e=this.outputComponent;return`
      ${D2(!1,this.transposeB,!1,!1,!1,e)}
      fn mm_write(batch: i32, row : i32, colIn : i32, value : ${Ze(e)}) {
        let col = colIn * ${e};
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${e}; i = i + 1) {
            ${op("&result[flatIndex + i]",`${e>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${e===4?Wm(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):Um(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}},ZI=class{outputShape;shaderKey;uniforms="";dispatchLayout;dispatch;variableNames=["x"];workgroupSize=[64,1,1];size=!0;addBias;activation;hasPreluActivationWeights;constructor(e,t=null,n=null,o=null){this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t!=null,this.hasPreluActivationWeights=o!=null,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${n}`}getUserCode(){return`
    ${nn(this.activation,this.hasPreluActivationWeights)}
    ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${uo(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}};var QI=class{variableNames=[];outputShape=[];shaderKey;dispatchLayout;dispatch;uniforms="value : f32,";workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function Dr(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||y.inferDtype(o),s==="string"){let a=y.getArrayFromDType(s,y.sizeFromShape(n));return a.fill(o),e.makeTensorInfo(n,s,a)}else{let a=new QI(n),i=[{type:"float32",data:[o]}];return e.runWebGPUProgram(a,[],s,i)}}var JK={kernelName:tu,backendName:"webgpu",kernelFunc:Dr};function Ie(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=y.sizeFromShape(n.shape),a=y.inferFromImplicitShape(o,s),i=y.sizeFromShape(a);return y.assert(s===i,()=>`The new shape (${a}) has ${i} elements and the old shape (${n.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var eV={kernelName:Js,backendName:"webgpu",kernelFunc:Ie};function Km({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:p=null}){let u=r.shape.length,l=e.shape.length,m=t?r.shape[u-2]:r.shape[u-1],c=n?e.shape[l-1]:e.shape[l-2],d=t?r.shape[u-1]:r.shape[u-2],f=n?e.shape[l-2]:e.shape[l-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),b=y.sizeFromShape(h),x=y.sizeFromShape(g),C=Rr.assertAndGetBroadcastShape(r.shape.slice(0,-2),e.shape.slice(0,-2)).concat([d,f]);y.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let v=t?[b,m,d]:[b,d,m],A=n?[x,f,c]:[x,c,f],_=Ie({inputs:{x:r},backend:o,attrs:{shape:v}}),R=Ie({inputs:{x:e},backend:o,attrs:{shape:A}}),M=[_,R],F=Math.max(b,x),O=[_,R],G=[{type:"int32",data:[d]},{type:"int32",data:[f]},{type:"int32",data:[m]}],W,U,K=[F,d,f],H=L().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(H<0){let j=L().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),re=j>0?j:o.thresholdToIncreaseWorkgroups,ae=F*Math.ceil(d/32)*Math.ceil(f/32);ae<=re||d<=8&&ae<=re*2?F*d*f<=128?H=0:F===1&&c>=2e3?H=1:H=2:H=3}switch(H){case 0:W=new jI(K,t,n,s,p,a);break;case 1:{if(U=Dr({backend:o,attrs:{shape:K,value:0,dtype:r.dtype}}),W=new YI(K,c,t,n),s||p){U=o.runWebGPUProgram(W,O,r.dtype,G,U);let re=new ZI(U.shape,s,p,a),ae=null,ie=[U];s&&ie.push(s),a&&ie.push(a),p==="leakyrelu"&&(ae=[{type:"float32",data:[i]}],re.uniforms+=" alpha : f32,");let me=o.runWebGPUProgram(re,ie,U.dtype,ae);M.push(U);let ue=Ie({inputs:{x:me},backend:o,attrs:{shape:C}});M.push(me);for(let le of M)o.disposeData(le.dataId);return ue}break}case 2:W=new XI(v,A,K,t,n,s,p,a);break;case 3:let j=o.adapterInfo.isIntel();W=new qI(v,K,t,n,s,p,a,j);break;default:throw new Error(`Unsupported MatMulProgramType ${H}.`)}s&&O.push(s),a&&O.push(a),p==="leakyrelu"&&(G.push({type:"float32",data:[i]}),W.uniforms+=" alpha : f32,"),U=o.runWebGPUProgram(W,O,r.dtype,G,U);let X=Ie({inputs:{x:U},backend:o,attrs:{shape:C}});M.push(U);for(let j of M)o.disposeData(j.dataId);return X}function Oge(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:p,transposeB:u,activation:l,leakyreluAlpha:m}=n;return Km({a:o,b:s,transposeA:p,transposeB:u,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:m,activation:l})}var tV={kernelName:aa,backendName:"webgpu",kernelFunc:Oge};var Kg=class{variableNames=["AReal","AImag","BReal","BImag"];outputShape;shaderKey;dispatchLayout;dispatch;workgroupSize=[128,1,1];op;size=!0;constructor(e,t,n){this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${th(this.op,!1)}
      }

      ${J("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};var ap=class{dispatch;dispatchLayout;outputComponent;op;outputShape;shaderKey;size=!0;variableNames=["A","B"];workgroupSize;variableComponents;lastDimensionSize;useSharedMemoryWithA;useSharedMemoryWithB;type;constructor(e,t,n){if(this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=se(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&n.length>1&&t[0]<128,this.useSharedMemoryWithB=n.length<=1&&t.length>1&&n[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:t[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{let o=t.length>0&&t[t.length-1]%4===0,s=n.length>0&&n[n.length-1]%4===0;o&&s?(this.outputComponent=4,this.variableComponents=[4,4]):o&&(y.isScalarShape(n)||n[n.length-1]===1)||s&&(y.isScalarShape(t)||t[t.length-1]===1)?(this.outputComponent=4,this.variableComponents=o?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e,t=this.outputComponent===4?"vec4<f32>":"f32",n=`
    fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {
      ${th(this.op,this.outputComponent===4)}
    };
    `;if(this.type==="shared"){let o=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",s=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${o}];`:`let a = sharedBuf[${o}];
          let b = getBByOutputIndex(index);`;e=`
        ${n}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${J("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${s}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else e=`
       ${n}
       ${J("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${t}(getAByOutputCoords(coords));
           let b = ${t}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return e}};function lr(r){let{inputs:e}=r,{x:t}=e;return r.backend.incRef(t.dataId),{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}var rV={kernelName:jn,backendName:"webgpu",kernelFunc:lr};function Os(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),a=t.tensorMap.get(s.dataId),i=lr({inputs:{x:n},backend:t}),p=lr({inputs:{x:o},backend:t});return a.complexTensorInfos={real:i,imag:p},s}var nV={kernelName:dp,backendName:"webgpu",kernelFunc:Os};var po=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["A"];workgroupSize;op;uniforms;size=!0;constructor(e,t,n=""){this.workgroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,n!==""&&(this.uniforms=n),this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${sp(this.op,!1)}
      }
      ${J("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function we({opType:r,cpuKernelImpl:e,dtype:t}){return({inputs:n,backend:o})=>{let{x:s}=n,a=o,i=t||s.dtype;if(a.shouldExecuteOnCPU([s])&&e!=null){let u=a.tensorMap.get(s.dataId),l=e(u.values,i);return a.makeTensorInfo(s.shape,i,l)}let p=new po(s.shape,r);return a.runWebGPUProgram(p,[s],i)}}function dt({opType:r,cpuKernelImpl:e,supportsComplex:t=!1,dtype:n}){return({inputs:o,backend:s})=>{let{a,b:i}=o,p=s;if(t&&a.dtype==="complex64"){let m=p.tensorMap.get(a.dataId),c=p.tensorMap.get(i.dataId),d,f;if(r!==17)[d,f]=[[m.complexTensorInfos.real,c.complexTensorInfos.real],[m.complexTensorInfos.imag,c.complexTensorInfos.imag]].map(g=>{let[b,x]=g,T={dataId:b.dataId,dtype:b.dtype,shape:a.shape},C={dataId:x.dataId,dtype:x.dtype,shape:i.shape},v=new ap(r,a.shape,i.shape);return p.runWebGPUProgram(v,[T,C],Nt(b.dtype,x.dtype))});else{let g=new Kg(3,a.shape,i.shape),b=new Kg(2,a.shape,i.shape),x=[{dataId:m.complexTensorInfos.real.dataId,dtype:m.complexTensorInfos.real.dtype,shape:a.shape},{dataId:m.complexTensorInfos.imag.dataId,dtype:m.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:i.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:i.shape}];d=p.runWebGPUProgram(g,x,"float32"),f=p.runWebGPUProgram(b,x,"float32")}let h=Os({inputs:{real:d,imag:f},backend:p});return p.disposeData(d.dataId),p.disposeData(f.dataId),h}let u=n||Nt(a.dtype,i.dtype);if((a.dtype==="string"||i.dtype==="string"||p.shouldExecuteOnCPU([a,i]))&&e!=null){let m=p.tensorMap.get(a.dataId).values,c=p.tensorMap.get(i.dataId).values,d=a.dtype==="string"?I.fromUint8ToStringArray(m):m,f=a.dtype==="string"?I.fromUint8ToStringArray(c):c,[h,g]=e(a.shape,i.shape,d,f,u);return p.makeTensorInfo(g,u,h)}let l=new ap(r,a.shape,i.shape);return p.runWebGPUProgram(l,[a,i],u)}}var{addImpl:oV,castImpl:sV,ceilImpl:aV,concatImpl:iV,equalImpl:uV,expImpl:pV,expm1Impl:lV,floorImpl:mV,floorDivImpl:cV,gatherNdImpl:dV,gatherV2Impl:fV,greaterEqualImpl:hV,greaterImpl:gV,lessEqualImpl:bV,lessImpl:yV,logImpl:xV,maxImpl:TV,maximumImpl:CV,minimumImpl:IV,multiplyImpl:kV,negImpl:vV,notEqualImpl:SV,prodImpl:wV,rangeImpl:AV,rsqrtImpl:NV,scatterImpl:DV,simpleAbsImpl:_V,sliceImpl:RV,stridedSliceImpl:MV,stringNGramsImpl:PV,subImpl:FV,tileImpl:EV,topKImpl:LV,transposeImpl:BV,uniqueImpl:PFr}=_f;var zge=we({opType:0,cpuKernelImpl:_V}),$V={kernelName:Gs,backendName:"webgpu",kernelFunc:zge};var Gge=we({opType:1}),OV={kernelName:xo,backendName:"webgpu",kernelFunc:Gge};var Wge=we({opType:2}),zV={kernelName:To,backendName:"webgpu",kernelFunc:Wge};var Uge=dt({opType:0,cpuKernelImpl:oV,supportsComplex:!0}),GV={kernelName:Dn,backendName:"webgpu",kernelFunc:Uge};var JI=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames;workPerThread=1;workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(o=>{e.push(`let v${o} = get${o}ByOutputCoords(coords);`)});let t=this.variableNames.map(o=>`v${o}`).join(" + ");return`
      ${J("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function Kge(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return lr({inputs:{x:n[0]},backend:t});let o=n.map(i=>i.dtype).reduce((i,p)=>Nt(i,p)),s=n.map(i=>i.shape),a=new JI(s);return t.runWebGPUProgram(a,n,o)}var WV={kernelName:Co,backendName:"webgpu",kernelFunc:Kge};var ek=class{variableNames=["A"];outputShape;shaderKey;dispatchLayout;dispatch;workgroupSize=[16,16,1];constructor(e,t){let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){y.assert(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);let e=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${J()} {
        var x = i32(workgroupId.x) * ${e} + i32(localId.x);
        var y = i32(workgroupId.y) * ${e} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${e} + i32(localId.x);
        y = i32(workgroupId.x) * ${e} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}};var tk=class{variableNames=["A"];shaderKey;outputShape;dispatchLayout;dispatch;workPerThread=1;workgroupSize=[64,1,1];newDim;size=!0;constructor(e,t){let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=rr(this.outputShape.length),t=Vge(this.newDim);return`
      ${J("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function Vge(r){let e=r.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);let t=new Array(e);for(let n=0;n<r.length;n++)t[r[n]]=`resRC.${Ea(n)}`;return t.join()}function An(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,a=t,i=o.shape.length,p=new Array(i);for(let l=0;l<p.length;l++)p[l]=o.shape[s[l]];if(t.shouldExecuteOnCPU([o])){let m=a.tensorMap.get(o.dataId).values,c=BV(m,o.shape,o.dtype,s,p);return t.makeTensorInfo(p,o.dtype,c)}if(o.shape.length===2&&y.arraysEqual(s,[1,0])){let l=new ek(o.shape,s);return a.runWebGPUProgram(l,[o],o.dtype)}let u=new tk(o.shape,s);return a.runWebGPUProgram(u,[o],o.dtype)}var UV={kernelName:Rn,backendName:"webgpu",kernelFunc:An};var rk=class{outputShape;shaderKey;dispatchLayout;dispatch;workgroupSize=[64,1,1];variableNames=["x"];uniforms="reduceSize : i32,";reduceType;inputShape;size=!0;constructor(e,t){this.inputShape=[e.batchSize,e.inSize];let[n]=I.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0",n=this.workgroupSize[0];this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"?(e=" bestValue = bestValue * candidate; ",t="1.0"):this.reduceType==="all"?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):this.reduceType==="any"&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");let o=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${n}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${J("index")} {
         let outputIndex = index / ${n};
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${n}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${n}) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${n}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${o}
        }
       }
     `}};function lo(r,e,t,n,o){let s=r.shape.length,a=[],i=y.parseAxisParam(e,r.shape),p=i,u=I.getAxesPermutation(p,s),l=r;u!=null&&(l=An({inputs:{x:r},attrs:{perm:u},backend:o}),p=I.getInnerMostAxes(p.length,s),a.push(l)),I.assertAxesAreInnerMostDims(n,p,s);let[m,c]=I.computeOutAndReduceShapes(l.shape,p),d=m;t&&(d=I.expandShapeToKeepDim(m,i));let f;if((n==="max"||n==="prod")&&o.shouldExecuteOnCPU([l])){let h=o.tensorMap.get(l.dataId).values;switch(n){case"max":let g=TV(h,y.sizeFromShape(c),d,r.dtype);f=o.makeTensorInfo(d,r.dtype,g);break;case"prod":let{outVals:b,outShape:x,outDtype:T}=wV(l.shape,l.dtype,h,p);f=o.makeTensorInfo(x,T,b);break;default:throw new Error(`${n} CPU implementation is not yet supported.`)}}else{let h=y.sizeFromShape(c),b=y.sizeFromShape(l.shape)/h,x={windowSize:h,inSize:h,batchSize:b,outSize:1},T=n==="mean"?"float32":Pu(r.dtype),C=[{type:"int32",data:[h]}],v=new rk(x,n),A=o.runWebGPUProgram(v,[l],T,C);a.push(A),f=Ie({inputs:{x:A},attrs:{shape:d},backend:o})}return a.forEach(h=>o.disposeData(h.dataId)),f}function Hge(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{keepDims:s,axis:a}=n;return lo(o,a,s,"all",t)}var KV={kernelName:za,backendName:"webgpu",kernelFunc:Hge};function qge(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{keepDims:s,axis:a}=n;return lo(o,a,s,"any",t)}var VV={kernelName:Ga,backendName:"webgpu",kernelFunc:qge};var rh=class{outputShape;shaderKey;dispatchLayout;dispatch;workgroupSize=[64,1,1];variableNames=["x"];uniforms="infinityValue : f32,";inputShape;reductionFactor;op;size=!0;type;constructor(e,t,n){let o=[t];this.op=n==="min"?"<":">";let[s,a]=I.computeOutAndReduceShapes(e,o);this.outputShape=s.length===0?[1]:s,this.dispatchLayout=se(this.outputShape),y.sizeFromShape(a)<32||y.sizeFromShape(s)>1e3?(this.type="plain",this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=Q(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){let e=this.workgroupSize[0],t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${Ea(this.inputShape.length-1)}`,n=()=>{let o="";if(this.outputShape.length===1)this.inputShape.length!==1&&(o+="outputCoords,");else for(let s=0;s<this.outputShape.length;s++)o+=`outputCoords.${Ea(s)},`;return o};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${e}>;
      var<workgroup> xBestValues : array<f32, ${e}>;
    `}

      ${J("index")} {
        let outputIndex = index / ${e};
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${e}) {
          let candidate = getX(${n()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${e}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${J("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${n()} 0);
          let reduceLength = ${t()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${n()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}};function jge(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=An({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(p),a=I.getInnerMostAxes(a.length,p.shape.length)),I.assertAxesAreInnerMostDims("argMax",[a[0]],p.shape.length);let l=new rh(p.shape,a[0],"max"),m=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],c=t.runWebGPUProgram(l,[p],"int32",m);return u.forEach(d=>t.disposeData(d.dataId)),c}var HV={kernelName:Ws,backendName:"webgpu",kernelFunc:jge};function Xge(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=An({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(p),a=I.getInnerMostAxes(a.length,p.shape.length)),I.assertAxesAreInnerMostDims("argMin",[a[0]],p.shape.length);let l=new rh(p.shape,a[0],"min"),m=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],c=t.runWebGPUProgram(l,[p],"int32",m);return u.forEach(d=>t.disposeData(d.dataId)),c}var qV={kernelName:Us,backendName:"webgpu",kernelFunc:Xge};var Yge=we({opType:3}),jV={kernelName:Io,backendName:"webgpu",kernelFunc:Yge};var Zge=we({opType:4}),XV={kernelName:ko,backendName:"webgpu",kernelFunc:Zge};var Qge=we({opType:5}),YV={kernelName:vo,backendName:"webgpu",kernelFunc:Qge};var Jge=dt({opType:1}),ZV={kernelName:wo,backendName:"webgpu",kernelFunc:Jge};var ebe=we({opType:6}),QV={kernelName:So,backendName:"webgpu",kernelFunc:ebe};var nk=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x"];uniforms="strides : vec2<i32>,";workgroupSize=[256,1,1];size=!0;constructor(e){this.outputShape=e.outShape,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};var Cu=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x"];uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,";workgroupSize=[128,1,1];poolType;size=!0;computePositions;flattenPositions;includeBatchIndex;constructor(e,t,n=!1,o=!1,s=!1){if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=n,this.flattenPositions=o,this.includeBatchIndex=s,this.shaderKey=`pool2D_${t}_${n}_${o}_${s}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue = resultValue + value; count = count + 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${e}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}},ul=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x"];uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,";workgroupSize=[128,1,1];poolType;size=!0;computePositions;flattenPositions;includeBatchIndex;constructor(e,t,n=!1,o=!1,s=!1){if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=n,this.flattenPositions=o,this.includeBatchIndex=s,this.shaderKey=`pool3D_${t}_${n}_${o}_${s}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue += value; count += 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${e}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}};function Vg(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n;return lo(o,s,a,"max",t)}var JV={kernelName:Jo,backendName:"webgpu",kernelFunc:Vg};function _2(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{keepDims:s,axis:a}=n;return lo(o,a,s,"mean",t)}var e4={kernelName:rs,backendName:"webgpu",kernelFunc:_2};function ok(r,e,t,n){if(e.filterWidth===1&&e.filterHeight===1&&y.arraysEqual(e.inShape,e.outShape))return lr({inputs:{x:r},backend:n});if(e.filterWidth===e.inWidth&&e.filterHeight===e.inHeight&&e.batchSize===1&&e.padInfo.type==="VALID"){let a=r.shape.length,i=Ie({inputs:{x:r},backend:n,attrs:{shape:[r.shape[a-3]*r.shape[a-2],r.shape[a-1]]}}),p;t==="avg"?p=_2({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}}):(y.assert(t==="max",()=>`Invalid pool type ${t}`),p=Vg({inputs:{x:i},backend:n,attrs:{reductionIndices:0,keepDims:!1}}));let u=Ie({inputs:{x:p},backend:n,attrs:{shape:e.outShape}});return n.disposeData(i.dataId),n.disposeData(p.dataId),u}let o,s=[{type:"int32",data:[e.strideHeight,e.strideWidth]}];return e.filterHeight===1&&e.filterWidth===1?o=new nk(e):(t==="avg"?o=new Cu(e,"avg"):(y.assert(t==="max",()=>`Invalid pool type ${t}`),o=new Cu(e,"max")),s.push({type:"int32",data:[e.padInfo.top,e.padInfo.left]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]},{type:"int32",data:[e.inHeight,e.inWidth]},{type:"int32",data:[e.effectiveFilterHeight,e.effectiveFilterWidth]})),n.runWebGPUProgram(o,[r],r.dtype,s)}function tbe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1,l=I.computePool2DInfo(o.shape,s,a,u,i,p);return ok(o,l,"avg",t)}var t4={kernelName:Ao,backendName:"webgpu",kernelFunc:tbe};function rbe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dataFormat:p,dimRoundingMode:u}=n,l=[1,1,1],m=I.computePool3DInfo(o.shape,s,a,l,i,u,p),c=new ul(m,"avg"),d=[{type:"int32",data:[m.strideDepth,m.strideHeight,m.strideWidth]},{type:"int32",data:[m.padInfo.front,m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inDepth,m.inHeight,m.inWidth]},{type:"int32",data:[m.effectiveFilterDepth,m.effectiveFilterHeight,m.effectiveFilterWidth]}];return t.runWebGPUProgram(c,[o],o.dtype,d)}var r4={kernelName:Ks,backendName:"webgpu",kernelFunc:rbe};var sk=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["dy"];uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`;workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=e.inShape,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},ak=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["dy"];uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`;workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=e.inShape,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};function nbe(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:p,pad:u,dimRoundingMode:l}=n,m=I.computePool3DInfo(a.shape,i,p,1,u,l),c=new ak(m),d=1/(m.filterDepth*m.filterHeight*m.filterWidth),f=[{type:"int32",data:[m.strideDepth,m.strideHeight,m.strideWidth]},{type:"int32",data:[m.effectiveFilterDepth-1-m.padInfo.front,m.effectiveFilterHeight-1-m.padInfo.top,m.effectiveFilterWidth-1-m.padInfo.left]},{type:"int32",data:[m.effectiveFilterDepth,m.effectiveFilterHeight,m.effectiveFilterWidth]},{type:"int32",data:[m.outDepth]},{type:"int32",data:[m.outHeight]},{type:"int32",data:[m.outWidth]},{type:"float32",data:[d]}];return t.runWebGPUProgram(c,[o],a.dtype,f)}var n4={kernelName:Xi,backendName:"webgpu",kernelFunc:nbe};function obe(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s;Wg([o,s],"avgPoolGrad");let{filterSize:i,strides:p,pad:u}=n,l=I.computePool2DInfo(a.shape,i,p,1,u),m=new sk(l),c=1/(l.filterHeight*l.filterWidth),d=[{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.effectiveFilterHeight-1-l.padInfo.top,l.effectiveFilterWidth-1-l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]},{type:"int32",data:[l.outHeight]},{type:"int32",data:[l.outWidth]},{type:"float32",data:[c]}];return t.runWebGPUProgram(m,[o],a.dtype,d)}var o4={kernelName:cp,backendName:"webgpu",kernelFunc:obe};function sbe(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;return Km({a:o,b:s,transposeA:a,transposeB:i,backend:t})}var s4={kernelName:No,backendName:"webgpu",kernelFunc:sbe};var ik=class{variableNames=["source"];uniforms;outputShape;shaderKey;rank;dispatchLayout;dispatch;workPerThread=1;workgroupSize=[64,1,1];start;size=!0;constructor(e,t){this.outputShape=t,this.rank=t.length,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${rr(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e=rr(this.rank),t=abe(this.rank),n;return this.start.length===1?n=this.outputShape.map((s,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((s,a)=>`sourceLoc.${R2[a]} = uniforms.start.${Ea(a)} + coords.${R2[a]};`),`
      ${J("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},R2=["x","y","z","w","u","v"];function abe(r){if(r===1)return"sourceLoc";if(r<=6)return R2.slice(0,r).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}function Vi(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n,[i,p]=vt.parseSliceParams(o,s,a);if(vt.assertParamsValid(o,i,p),t.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=t.tensorMap.get(o.dataId),c=RV(m.values,i,p,o.shape,o.dtype);return t.makeTensorInfo(p,o.dtype,c)}if(y.sizeFromShape(p)===0)return t.makeTensorInfo(p,o.dtype,[]);let u=new ik(i,p),l=[{type:"int32",data:i}];return t.runWebGPUProgram(u,[o],o.dtype,l)}var a4={kernelName:ta,backendName:"webgpu",kernelFunc:Vi};var ibe=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;y.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((x,T)=>x*T),p=I.getReshaped(o.shape,s,i),u=I.getPermuted(p.length,s.length),l=I.getReshapedPermuted(o.shape,s,i),m=I.getSliceBeginCoords(a,s.length),c=I.getSliceSize(l,a,s.length),d=[],f=Ie({inputs:{x:o},backend:t,attrs:{shape:p}}),h=An({inputs:{x:f},backend:t,attrs:{perm:u}}),g=Ie({inputs:{x:h},backend:t,attrs:{shape:l}}),b=Vi({inputs:{x:g},backend:t,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(x=>t.disposeData(x.dataId)),b},i4={kernelName:Vs,backendName:"webgpu",kernelFunc:ibe};var ube=`
  fn bincount_write(index: i32, value: f32) {
    ${op("&result[index]","value","float32")}
  }
`,pbe=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`,nh=class{outputShape=[];shaderKey;dispatchLayout;dispatch;variableNames=["x"];uniforms="binCountSize : i32,";workgroupSize=[64,1,1];atomic=!0;hasWeights=!0;binaryOutput=!1;rank;constructor(e,t,n=!1){this.outputShape=e,this.rank=e.length,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=n,n&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?pbe:ube}
  ${J("index")} {
    ${this.rank===1?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}};function lbe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=y.sizeFromShape(o.shape),u=y.sizeFromShape(s.shape)>0,l=[a],m=s.dtype,c=Dr({backend:t,attrs:{shape:l,value:0,dtype:m}}),d=new nh([i],u),f=[{type:"int32",data:[a]}],h=u?[o,s]:[o];return t.runWebGPUProgram(d,h,m,f,c)}var u4={kernelName:Wa,backendName:"webgpu",kernelFunc:lbe};var uk=class{outputShape=[];shaderKey;dispatchLayout;dispatch;variableNames=["s0","s1"];uniforms="s0Size : i32, s1Size : i32, ";workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=[e],this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${J("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}};function mbe(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e;if(t.shouldExecuteOnCPU([n,o])){let l=t.tensorMap.get(n.dataId),m=t.tensorMap.get(o.dataId),c=l.values,d=m.values,f=I.assertAndGetBroadcastShape(Array.from(c),Array.from(d));return t.makeTensorInfo([f.length],"int32",Int32Array.from(f))}let s=y.sizeFromShape(n.shape),a=y.sizeFromShape(o.shape),i=Math.max(s,a),p=new uk(i),u=[{type:"int32",data:[s]},{type:"int32",data:[a]}];return t.runWebGPUProgram(p,[n,o],"int32",u)}var p4={kernelName:Yi,backendName:"webgpu",kernelFunc:mbe};var M2=dt({opType:18,dtype:"bool",cpuKernelImpl:SV}),l4={kernelName:pi,backendName:"webgpu",kernelFunc:M2};function ip(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.tensorMap.get(n.dataId);return lr({inputs:{x:o.complexTensorInfos.real},backend:t})}var m4={kernelName:vp,backendName:"webgpu",kernelFunc:ip};function c4(r,e){let t=new po(r.shape,40),n=e.runWebGPUProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function P2(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return lr({inputs:{x:o},backend:t});let a=kt(o.shape),i=P2({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),p=Os({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeData(i.dataId),p}if(o.dtype==="complex64"){let a=ip({inputs:{input:o},backend:t}),i=P2({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeData(a.dataId),i}if(!y.hasEncodingLoss(o.dtype,s)){let a=lr({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(t.shouldExecuteOnCPU([o])){let a=t.tensorMap.get(o.dataId).values,[i,p,u]=sV(a,o.shape,o.dtype,s);return t.makeTensorInfo(i,p,u)}if(s==="int32")return c4(o,t);if(s==="bool"){let a=t.makeTensorInfo([],"bool",y.getTypedArrayFromDType("bool",1)),p=M2({inputs:{a:o,b:a},backend:t});return t.disposeData(a.dataId),p}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var d4={kernelName:Hn,backendName:"webgpu",kernelFunc:P2};var cbe=we({opType:7,cpuKernelImpl:aV}),f4={kernelName:Do,backendName:"webgpu",kernelFunc:cbe};var pk=class{outputShape;shaderKey;variableNames=["A"];uniforms="minVal : f32, maxVal : f32,";dispatchLayout;dispatch;workPerThread=4;workgroupSize=[64,1,1];outputComponent=4;size=!0;constructor(e){this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${J("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}};var lk=class{outputShape;shaderKey;variableNames=["A"];uniforms="minVal : f32, maxVal : f32,";dispatchLayout;dispatch;workgroupSize=[64,1,1];minVal;maxVal;size=!0;constructor(e){this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${J("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function dbe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i,p=[{type:"float32",data:[s]},{type:"float32",data:[a]}];return y.sizeFromShape(o.shape)%4===0?i=new pk(o.shape):i=new lk(o.shape),t.runWebGPUProgram(i,[o],o.dtype,p)}var h4={kernelName:qn,backendName:"webgpu",kernelFunc:dbe};var mk=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames;uniforms="";workPerThread=1;workgroupSize=[64,1,1];size=!0;offsetLength;constructor(e){this.outputShape=I.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let s=1;s<this.offsetLength;s++)e.push(`else if (yC < uniforms.offset${[s]}){ setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${s-1})); }`);let n=this.offsetLength,o=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${o})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${J("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function Vm(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.tensorMap.get(n.dataId);return lr({inputs:{x:o.complexTensorInfos.imag},backend:t})}var g4={kernelName:Cp,backendName:"webgpu",kernelFunc:Vm};function oh(r,e,t){let n=r[0].dtype;if(n==="complex64"){let f=r.map(T=>ip({inputs:{input:T},backend:t})),h=r.map(T=>Vm({inputs:{input:T},backend:t})),g=oh(f,e,t),b=oh(h,e,t),x=Os({inputs:{real:g,imag:b},backend:t});return f.forEach(T=>t.disposeData(T.dataId)),h.forEach(T=>t.disposeData(T.dataId)),t.disposeData(g.dataId),t.disposeData(b.dataId),x}let o=t.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let f=r.map(v=>{let _=[-1,y.sizeFromShape(v.shape.slice(e))];return Ie({inputs:{x:v},backend:t,attrs:{shape:_}})}),h=f.map(v=>({vals:t.readSync(v.dataId),shape:v.shape})),g=I.computeOutShape(f.map(v=>v.shape),1),b=f[0].shape[0]===1,x=iV(h,g,n,b),T=I.computeOutShape(r.map(v=>v.shape),e),C=t.makeTensorInfo(T,n,x);return f.forEach(v=>t.disposeData(v.dataId)),C}let s=t.device.limits.maxStorageBuffersPerShaderStage-1;if(r.length>s){let f=[];for(let g=0;g<r.length;g+=s){let b=r.slice(g,g+s);f.push(oh(b,e,t))}let h=oh(f,e,t);for(let g of f)t.disposeData(g.dataId);return h}let{tensors2D:a,outShape:i}=fbe(r,e,t),p=a.map(f=>f.shape),u=new mk(p),l=[],m=new Array(p.length-1);if(m.length>0){m[0]=p[0][1],l.push({type:"int32",data:[m[0]]});for(let f=1;f<m.length;f++)m[f]=m[f-1]+p[f][1],l.push({type:"int32",data:[m[f]]})}let c=t.runWebGPUProgram(u,a,a[0].dtype,l);a.forEach(f=>t.disposeData(f.dataId));let d=Ie({inputs:{x:c},backend:t,attrs:{shape:i}});return t.disposeData(c.dataId),d}function fbe(r,e,t){let n=I.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>Ie({inputs:{x:s},backend:t,attrs:{shape:[y.sizeFromShape(s.shape.slice(0,e)),y.sizeFromShape(s.shape.slice(e))]}})),outShape:n}}function F2(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,e[0].shape)[0],a=e.map(u=>u.shape);I.assertParamsConsistent(a,s);let i=I.computeOutShape(e.map(u=>u.shape),s);if(y.sizeFromShape(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);let p=e.filter(u=>y.sizeFromShape(u.shape)>0);return p.length===1?lr({inputs:{x:p[0]},backend:t}):oh(p,s,t)}var b4={kernelName:Hs,backendName:"webgpu",kernelFunc:F2};function hbe(r,e,t,n,o=!1,s=null,a=!1,i=4,p=4,u=4){let l=M=>{switch(M){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${M} is not supported.`)}},m=M=>{switch(M){case 1:return"return W[row * uniforms.wShape[3] + colIn];";case 4:return"return W[row * uniforms.wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${M} is not supported.`)}},c=r?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,d=r?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=r?"uniforms.xShape[1]":"uniforms.xShape[2]",h=r?"uniforms.xShape[2]":"uniforms.xShape[3]",g=r?"row":"col",b=r?"col":"row",x=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${g} / outWidth;
      let outCol = ${g} % outWidth;

      let WRow = ${b} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${b} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${b} % inChannels;
      var resData = ${Ze(i)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${h}) {
        ${c}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${l(i)}
      }
      return resData;`,T=r?e&&n?`
      let col = colIn * ${i};
      ${x}`:`
      let col = colIn * ${i};
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${x}
      }
      return ${Ze(i)}(0.0);`:n&&t?`
      let col = colIn * ${i};
      ${x}`:`
      let col = colIn * ${i};
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${x}
      }
      return ${Ze(i)}(0.0);`,C=`${m(p)}`,v=Ze(u),A=r?Ze(i):Ze(p),_=r?Ze(p):Ze(i);return`
      ${nn(s,a,u===4,4)}
      fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${A} {
        ${r?T:C}
      }

      fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${_} {
        ${r?C:T}
      }

      fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${v}) {
        let col = colIn * ${u};
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${d}
        ${uo(o,s)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}var ck=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x","W"];variableComponents;uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,";workgroupSize;elementsPerThread;addBias;activation;hasPreluActivationWeights;isChannelsLast;fitAOuter;fitBOuter;fitInner;tileAOuter;tileBOuter;tileInner;innerElementSize;isVec4;outputComponent;sequentialAccessByThreads;constructor(e,t,n,o,s=!1,a=null,i=!1,p=!1){this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=Og(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=zg(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),s&&(this.variableNames.push("bias"),this.variableComponents.push(4)),i&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=p,this.addBias=s,this.activation=a,this.hasPreluActivationWeights=i,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=n%this.tileBOuter===0,this.fitInner=o%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){let e=this.isVec4?Wm(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):Um(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${hbe(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}
    ${e}
  `}};var dk=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x","W"];uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,";workgroupSize=[4,4,8];addBias;activation;hasPreluActivationWeights;isChannelsLast;constructor(e,t=!1,n=null,o=!1){this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=n,this.hasPreluActivationWeights=o,t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${nn(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${uo(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${J("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}};var fk=class{variableNames=["x"];uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`;outputShape;shaderKey;dispatchLayout;dispatch;workgroupSize=[64,1,1];isChannelsLast;size=!0;constructor(e,t){this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?"coords[1]":"coords[2]",o=this.isChannelsLast?"coords[2]":"coords[1]",s=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${J("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${n};
        let col = ${o};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${t}] && xCol >= 0) {
            value = ${s};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}};function hk(r,e){let t=r.length;return t>=3?e?[...r.slice(0,-3),r[t-3]*r[t-2],r[t-1]]:[...r.slice(0,-3),r[t-3],r[t-2]*r[t-1]]:!e&&t===1&&r[0]>1?[r[0],1]:null}function gbe({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let p=t.dataFormat==="channelsLast",u=!p,l=!1,m=p&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",c=[],d,f;if(m){let b=t.inHeight*t.inWidth*t.inChannels;d=Ie({inputs:{x:r},backend:n,attrs:{shape:[1,t.batchSize,b]}}),f=Ie({inputs:{x:e},backend:n,attrs:{shape:[1,b,t.outChannels]}})}else d=Ie({inputs:{x:r},backend:n,attrs:{shape:p?[t.batchSize,t.inHeight*t.inWidth,t.inChannels]:[t.batchSize,t.inChannels,t.inHeight*t.inWidth]}}),f=Ie({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});if(c.push(d),c.push(f),s!=null){let b=hk(s.shape,p);b!=null&&(s=Ie({inputs:{x:s},backend:n,attrs:{shape:b}}),c.push(s))}if(o!=null){let b=hk(o.shape,p);b!=null&&(o=Ie({inputs:{x:o},backend:n,attrs:{shape:b}}),c.push(o))}let h=Km({a:p?d:f,b:p?f:d,transposeA:u,transposeB:l,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),g=Ie({inputs:{x:h},backend:n,attrs:{shape:t.outShape}});c.push(h);for(let b of c)n.disposeData(b.dataId);return g}function bbe({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let{filterWidth:p,filterHeight:u,inChannels:l,strideWidth:m,strideHeight:c,padInfo:d,outWidth:f,outHeight:h,dilationWidth:g,dilationHeight:b,dataFormat:x}=t,T=x==="channelsLast",C=p*u*l,v=h*f,A=T?[t.batchSize,v,C]:[t.batchSize,C,v],_=new fk(A,T),R=[{type:"int32",data:[d.top,d.left]},{type:"int32",data:[c,m]},{type:"int32",data:[b,g]},{type:"int32",data:[f]},{type:"int32",data:[l*p]},{type:"int32",data:[l]}],M=n.runWebGPUProgram(_,[r],r.dtype,R),F=[];F.push(M);let O=Ie({inputs:{x:e},backend:n,attrs:{shape:[1,C,-1]}});if(F.push(O),s!=null){let H=hk(s.shape,T);H!=null&&(s=Ie({inputs:{x:s},backend:n,attrs:{shape:H}}),F.push(s))}if(o!=null){let H=hk(o.shape,T);H!=null&&(o=Ie({inputs:{x:o},backend:n,attrs:{shape:H}}),F.push(o))}let U=Km({a:T?M:O,b:T?O:M,transposeA:!T,transposeB:!1,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),K=Ie({inputs:{x:U},backend:n,attrs:{shape:t.outShape}});F.push(U);for(let H of F)n.disposeData(H.dataId);return K}function gk({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let p=o!=null,u=s!=null,l=t.dataFormat==="channelsLast",m=l&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",c=L().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!c&&(m||t.filterHeight===1&&t.filterWidth===1&&t.dilationHeight===1&&t.dilationWidth===1&&t.strideHeight===1&&t.strideWidth===1&&(t.padInfo.type==="SAME"||t.padInfo.type==="VALID")))return gbe({x:r,filter:e,convInfo:t,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});let d=L().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),f=d>0?d:n.thresholdToIncreaseWorkgroups,h=t.batchSize*Math.ceil(t.outHeight*t.outWidth/32)*Math.ceil(t.outChannels/32);if(L().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||h<=f)return bbe({x:r,filter:e,convInfo:t,backend:n,bias:o,preluActivationWeights:s,leakyreluAlpha:a,activation:i});let g,b=[t.padInfo.top,t.padInfo.left],x=[{type:"int32",data:[t.filterHeight,t.filterWidth]},{type:"int32",data:[...b]},{type:"int32",data:[t.strideHeight,t.strideWidth]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]}];if(c)g=new dk(t,p,i,u);else{let A=l?t.outHeight*t.outWidth:t.outChannels,_=l?t.outChannels:t.outHeight*t.outWidth,R=t.filterHeight*t.filterWidth*t.inChannels;x.push({type:"int32",data:[A]},{type:"int32",data:[_]},{type:"int32",data:[R]});let M=n.adapterInfo.isIntel();g=new ck(t,A,_,R,p,i,u,M)}let T=[],C=[r,e];p&&(!l&&o.shape.length===1&&(o=Ie({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}}),T.push(o)),C.push(o)),u&&(!l&&s.shape.length===1&&(s=Ie({inputs:{x:s},backend:n,attrs:{shape:[s.shape[0],1,1]}}),T.push(s)),C.push(s)),i==="leakyrelu"&&(x.push({type:"float32",data:[a]}),g.uniforms+=" alpha : f32,");let v=n.runWebGPUProgram(g,C,r.dtype,x);for(let A of T)n.disposeData(A.dataId);return v}function ybe(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:p,dilations:u,dimRoundingMode:l}=t,m=I.convertConv2DDataFormat(p),c=I.computeConv2DInfo(o.shape,s.shape,a,u,i,l,!1,m);return gk({x:o,filter:s,convInfo:c,backend:n})}var y4={kernelName:_o,backendName:"webgpu",kernelFunc:ybe};var bk=class{variableNames=["dy","W"];uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,";outputShape;shaderKey;dispatchLayout;dispatch;workgroupSize=[64,1,1];isChannelsLast;size=!1;isVec4=!1;workPerThread=1;outputComponent;constructor(e){this.outputShape=e.inShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=this.isChannelsLast&&e.outChannels%4===0&&e.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1,o=`
    ${J()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${o}
    `:`
    ${J("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}], coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},yk=class{variableNames=["x","dy"];uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,";outputShape;shaderKey;dispatchLayout;dispatch;workgroupSize=[64,1,1];isChannelsLast;size=!0;constructor(e){this.outputShape=e.filterShape,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${J("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},xk=class{variableNames=["x","dy"];uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`;outputShape;shaderKey;dispatchLayout;dispatch;workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=e.filterShape,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${J("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},Tk=class{variableNames=["dy","W"];uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`;outputShape;shaderKey;dispatchLayout;dispatch;workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=e.inShape,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${J("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function xbe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,dataFormat:p,dimRoundingMode:u,filterShape:l}=n,m=I.convertConv2DDataFormat(p),c=I.computeConv2DInfo(o.shape,l,a,1,i,u,!1,m),d=new yk(c),f=[{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"int32",data:[c.inHeight]},{type:"int32",data:[c.inWidth]}];return t.runWebGPUProgram(d,[o,s],o.dtype,f)}var x4={kernelName:hp,backendName:"webgpu",kernelFunc:xbe};function Tbe(r=4){let e=s=>{switch(s){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${s} is not supported.`)}},n=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${Ze(r)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${Ze(r)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${r}];`}
      }
      return ${Ze(r)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${Ze(r)} {
    let col = colIn * ${r};
    ${n}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${Ze(r)} {
    let col = colIn * ${r};
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${e(r)}
    }
    return ${Ze(r)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${Ze(r)}) {
    let col = colIn * ${r};
    if (row < uniforms.dimAOuter && (col + ${r-1}) < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${r}] = value;
    }
  }`}var Ck=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x","W"];variableComponents;uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,";workgroupSize;elementsPerThread;isVec4;outputComponent;constructor(e){this.outputShape=e.inShape,y.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=Og(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=zg(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){let e=this.isVec4?Wm(this.elementsPerThread,this.workgroupSize):Um(this.elementsPerThread,this.workgroupSize);return`
    ${Tbe(this.isVec4?4:1)}
    ${e}
    `}};function Cbe(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:p,dataFormat:u,dimRoundingMode:l}=n,m=I.convertConv2DDataFormat(u),c=I.computeConv2DInfo(a,s.shape,i,1,p,l,!1,m),d=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.filterHeight-1-c.padInfo.top,c.filterWidth-1-c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize,c.outHeight,c.outWidth,c.outChannels]}],f;if(L().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||c.dataFormat!=="channelsLast")f=new bk(c);else{f=new Ck(c);let h=c.inHeight*c.inWidth,g=c.inChannels,b=c.filterHeight*c.filterWidth*c.outChannels;d.push({type:"uint32",data:[h]},{type:"uint32",data:[g]},{type:"uint32",data:[b]})}return t.runWebGPUProgram(f,[o,s],"float32",d)}var T4={kernelName:Ro,backendName:"webgpu",kernelFunc:Cbe};var Ik=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x","W"];uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,";workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=e.outShape,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}};function Ibe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:p}=n,u=I.computeConv3DInfo(o.shape,s.shape,a,p,i),l=[u.padInfo.front,u.padInfo.top,u.padInfo.left],m=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[...l]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationDepth,u.dilationHeight,u.dilationWidth]}],c=new Ik(u),d=Nt(o.dtype,s.dtype);return t.runWebGPUProgram(c,[o,s],d,m)}var C4={kernelName:Mo,backendName:"webgpu",kernelFunc:Ibe};function kbe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:p}=n,u=I.computeConv3DInfo(o.shape,p,a,1,i),l=new xk(u),m=[{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.batchSize]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.inDepth]},{type:"int32",data:[u.inHeight]},{type:"int32",data:[u.inWidth]}];return t.runWebGPUProgram(l,[o,s],s.dtype,m)}var I4={kernelName:Ua,backendName:"webgpu",kernelFunc:kbe};function vbe(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,pad:i,inputShape:p}=n,u=I.computeConv3DInfo(p,s.shape,a,1,i),l=new Tk(u),m=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[u.filterDepth-1-u.padInfo.front,u.filterHeight-1-u.padInfo.top,u.filterWidth-1-u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.outChannels]}];return t.runWebGPUProgram(l,[o,s],o.dtype,m)}var k4={kernelName:Ka,backendName:"webgpu",kernelFunc:vbe};var Sbe=we({opType:8}),v4={kernelName:Po,backendName:"webgpu",kernelFunc:Sbe};var wbe=we({opType:9}),S4={kernelName:Fo,backendName:"webgpu",kernelFunc:wbe};var kk=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["Image","Boxes","BoxInd"];uniforms="extrapolationValue : f32,";workgroupSize=[64,1,1];methodId;cropHeightBiggerThan1;cropWidthBiggerThan1;size=!0;constructor(e,t,n,o){let[s]=t;this.outputShape=[s,n[0],n[1],e],this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId=o==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,o,s]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,i,p]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
    ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${o};
        let width_scale = ${i};
        let in_y = ${s};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${p};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}};var Abe=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:p,extrapolationValue:u}=n,l=new kk(o.shape[3],s.shape,i,p),m=[{type:"float32",data:[u]}];return t.runWebGPUProgram(l,[o,s,a],"float32",m)},w4={kernelName:Ha,backendName:"webgpu",kernelFunc:Abe};var Hg=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x"];workgroupSize;uniforms="index : f32,";size=!0;exclusive;reverse;op;constructor(e,t,n,o){this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=n,this.reverse=o,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let e=this.outputShape.length,t=this.op==="*"?"1.0":"0.0",n=this.exclusive?t:`getX(${A4(e,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],s="",a="";return this.exclusive?(s=this.reverse?`end != ${o-1}`:"end != 0",a=this.reverse?"end + 1":"end - 1"):(s=this.reverse?`end + pow2 < ${o}`:"end >= pow2",a=this.reverse?"end + pow2":"end - pow2"),`
      ${J("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${N4(e,"coords",this.op)};
         var val = ${n};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${s}) {
           let idx = ${a};
           ${N4(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${A4(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function A4(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.x, ${e}.y`;if(r===3)return`${e}.x, ${e}.y, ${e}.z`;if(r===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function N4(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.y`;if(r===3)return`${e}.z`;if(r===4)return`${e}.w`;throw Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function vk(r,e,t,n,o,s){let a=e.shape.length,i=I.getAxesPermutation([n],a),p=e;i!=null&&(p=An({inputs:{x:e},backend:t,attrs:{perm:i}}));let u=I.getInnerMostAxes(1,a)[0];if(u!==a-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${n}`);let l=p.shape[u],m=lr({inputs:{x:p},backend:t});for(let c=0;c<=Math.ceil(Math.log2(l))-1;c++){let d=new Hg(r,p.shape,!1,s),f=m,h=[{type:"float32",data:[c]}];m=t.runWebGPUProgram(d,[m],m.dtype,h),t.disposeData(f.dataId)}if(o){let c=new Hg(r,p.shape,o,s),d=m,f=[{type:"float32",data:[0]}];m=t.runWebGPUProgram(c,[m],m.dtype,f),t.disposeData(d.dataId)}if(i!=null){let c=I.getUndoAxesPermutation(i),d=An({inputs:{x:m},backend:t,attrs:{perm:c}});return t.disposeData(m.dataId),t.disposeData(p.dataId),d}return m}function Dbe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;return vk("*",o,t,s,a,i)}var D4={kernelName:Va,backendName:"webgpu",kernelFunc:Dbe};function _be(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;return vk("+",o,t,s,a,i)}var _4={kernelName:Eo,backendName:"webgpu",kernelFunc:_be};function Rbe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n,p=o.shape.length===1,l=y.sizeFromShape(s.shape)>0,m=s.dtype,c=p?[o.shape[0]]:[o.shape[0],o.shape[1]],d=p?[a]:[o.shape[0],a],f=Dr({backend:t,attrs:{shape:d,value:0,dtype:m}}),h=new nh(c,l,i),g=[{type:"int32",data:[a]}],b=l?[o,s]:[o];return t.runWebGPUProgram(h,b,m,g,f)}var R4={kernelName:Zi,backendName:"webgpu",kernelFunc:Rbe};var Sk=class{variableNames=["x"];outputShape;dataFormat;shaderKey;dispatchLayout;dispatch;workgroupSize=[64,1,1];size=!0;uniforms="blockSize : i32,";constructor(e,t){this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Mbe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n,i=o.shape[0],p=a==="NHWC"?o.shape[1]:o.shape[2],u=a==="NHWC"?o.shape[2]:o.shape[3],l=a==="NHWC"?o.shape[3]:o.shape[1],m=p*s,c=u*s,d=l/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=[{type:"int32",data:[s]}],g=new Sk(f,a);return t.runWebGPUProgram(g,[o],o.dtype,h)}var M4={kernelName:qa,backendName:"webgpu",kernelFunc:Mbe};var wk=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x","W"];uniforms="pads : vec2<i32>, inDims : vec2<i32>,";workgroupSize=[16,16,1];addBias;activation;hasPreluActivation;filterHeight;filterWidth;constructor(e,t,n,o=!1,s=null,a=!1){this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),o&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.addBias=o,this.activation=s,this.hasPreluActivation=a,this.filterHeight=t,this.filterWidth=n,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],n=this.workgroupSize[1]+this.filterHeight-1,o=this.workgroupSize[0]+this.filterWidth-1;return`
      ${nn(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${o}>, ${n}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${J()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${o}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${uo(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};var sh=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x","W"];uniforms="pads : vec2<i32>, inDims : vec2<i32>,";workgroupSize=[4,4,4];workPerThread=4;convInfo;addBias;activation;hasPreluActivation;outputComponent=4;constructor(e,t=!1,n=null,o=!1){this.outputShape=e.outShape,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1]),y.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwiseVec4_${n}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){let e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,n=this.convInfo.strideWidth;return`
      ${nn(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${J()} {
        let batch = i32(globalId.z) / uniforms.outShape[1];
        let r = i32(globalId.z) % uniforms.outShape[1];
        let c = i32(globalId.y) * ${this.workPerThread};
        let d1 = i32(globalId.x) * 4;
        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${t}, ${n}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${e}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${n} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${uo(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}};var ah=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x","W"];uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`;workgroupSize=[256,1,1];convInfo;addBias;activation;hasPreluActivation;isChannelsLast;size=!0;constructor(e,t=!1,n=null,o=!1){this.outputShape=e.outShape,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${nn(this.activation,this.hasPreluActivation,!1,4)}

      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${uo(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};function Pbe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:p,dilations:u,dimRoundingMode:l}=n,m=I.convertConv2DDataFormat(p),c=u;c==null&&(c=[1,1]);let d=I.computeConv2DInfo(o.shape,s.shape,a,c,i,l,!0,m),f=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inHeight,d.inWidth]}],h=d.dataFormat==="channelsLast",g;return!h&&d.inHeight>16&&d.inWidth>16&&d.strideHeight===1&&d.strideWidth===1&&d.dilationWidth===1&&d.dilationHeight===1&&d.inChannels===d.outChannels?g=new wk(d.outShape,d.filterHeight,d.filterWidth):h&&d.outHeight>4&&d.outWidth>4&&d.strideWidth<=2&&d.inChannels===d.outChannels&&d.dilationHeight===1&&d.dilationWidth===1&&d.inChannels%4===0?g=new sh(d):(g=new ah(d),f.push({type:"int32",data:[d.filterHeight]},{type:"int32",data:[d.filterWidth]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]})),t.runWebGPUProgram(g,[o,s],o.dtype,f)}var P4={kernelName:Lo,backendName:"webgpu",kernelFunc:Pbe};var Ak=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x","dy"];uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`;workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=e.filterShape,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},Nk=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["dy","W"];uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`;workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=e.inShape,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};function Fbe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,dilations:i,pad:p,dimRoundingMode:u,filterShape:l}=n,m=I.computeConv2DInfo(o.shape,l,a,i,p,u,!0),c=new Ak(m),d=[{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.filterHeight,m.filterWidth]},{type:"int32",data:[m.outHeight]},{type:"int32",data:[m.outWidth]},{type:"int32",data:[m.inHeight]},{type:"int32",data:[m.inWidth]},{type:"int32",data:[m.batchSize]},{type:"int32",data:[m.outChannels/m.inChannels]}];return t.runWebGPUProgram(c,[o,s],"float32",d)}var F4={kernelName:gp,backendName:"webgpu",kernelFunc:Fbe};function Ebe(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,dilations:i,pad:p,dimRoundingMode:u,inputShape:l}=n,m=I.computeConv2DInfo(l,s.shape,a,i,p,u,!0),c=new Nk(m),d=[{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.filterHeight-1-m.padInfo.top,m.filterWidth-1-m.padInfo.left]},{type:"int32",data:[m.filterHeight,m.filterWidth]},{type:"int32",data:[m.outHeight]},{type:"int32",data:[m.outWidth]},{type:"int32",data:[m.outChannels/m.inChannels]}];return t.runWebGPUProgram(c,[o,s],o.dtype,d)}var E4={kernelName:bp,backendName:"webgpu",kernelFunc:Ebe};var Dk=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x"];workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=[e,e],this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}};function Lbe(r){let{inputs:e,backend:t}=r,{x:n}=e,o=[...n.shape,...n.shape],s=y.sizeFromShape(n.shape),a=Ie({inputs:{x:n},backend:t,attrs:{shape:[s]}}),i=new Dk(s),p=t.runWebGPUProgram(i,[a],a.dtype),u=Ie({inputs:{x:p},backend:t,attrs:{shape:o}});return t.disposeData(a.dataId),t.disposeData(p.dataId),u}var L4={kernelName:Qi,backendName:"webgpu",kernelFunc:Lbe};var _k=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x","w"];uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>";workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=e.outShape,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${J("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}};function Bbe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:p}=n,u=I.computeDilation2DInfo(o.shape,s.shape,a,i,"NHWC",p),l=[u.padInfo.top,u.padInfo.left],m=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[...l]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]}],c=new _k(u);return t.runWebGPUProgram(c,[o,s],o.dtype,m)}var B4={kernelName:Bo,backendName:"webgpu",kernelFunc:Bbe};var Rk=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x","w","dy"];uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,";workgroupSize=[64,1,1];atomic=!0;type;constructor(e,t){if(this.outputShape=e.inShape,this.dispatchLayout=se(e.outShape),this.dispatch=Q(this.dispatchLayout,e.outShape,this.workgroupSize),t!=="float32"&&t!=="int32")throw new Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${t} type.`);this.type=t,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${J("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${op("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}},Mk=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x","w","dy"];uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,";workgroupSize=[64,1,1];atomic=!0;type;constructor(e,t,n){if(this.outputShape=e.filterShape,this.dispatchLayout=se(e.outShape),this.dispatch=Q(this.dispatchLayout,e.outShape,this.workgroupSize),n!=="float32"&&n!=="int32")throw new Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${n} type.`);this.type=n,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${J("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${op("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}};function $be(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,dy:a}=e,{strides:i,pad:p,dilations:u}=n,l=I.computeDilation2DInfo(o.shape,s.shape,i,p,"NHWC",u),m=s.dtype,c=new Mk(l,s.shape,m),d=[{type:"int32",data:[l.filterHeight,l.filterWidth]},{type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[y.sizeFromShape(l.outShape)]}],f=Dr({backend:t,attrs:{shape:s.shape,value:0,dtype:m}});return t.runWebGPUProgram(c,[o,s,a],m,d,f)}var $4={kernelName:eu,backendName:"webgpu",kernelFunc:$be};function Obe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,dy:a}=e,{strides:i,pad:p,dilations:u}=n,l=I.computeDilation2DInfo(o.shape,s.shape,i,p,"NHWC",u),m=o.dtype,c=new Rk(l,m),d=[{type:"int32",data:[l.filterHeight,l.filterWidth]},{type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[y.sizeFromShape(l.outShape)]}],f=Dr({backend:t,attrs:{shape:l.inShape,value:0,dtype:m}});return t.runWebGPUProgram(c,[o,s,a],m,d,f)}var O4={kernelName:Ji,backendName:"webgpu",kernelFunc:Obe};var E2=dt({opType:17,cpuKernelImpl:kV,supportsComplex:!0}),z4={kernelName:as,backendName:"webgpu",kernelFunc:E2};function qg(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return lo(o,s,a,"sum",t)}var G4={kernelName:ws,backendName:"webgpu",kernelFunc:qg};function zbe(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:a,summedDims:i,idDims:p}=I.decodeEinsumEquation(o,s.length);I.checkEinsumDimSizes(a.length,p,s);let{path:u,steps:l}=I.getEinsumComputePath(i,p),m=l.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of l[h]){let{permutationIndices:b,expandDims:x}=I.getEinsumPermutation(d,p[g]),T;I.isIdentityPermutation(b)?T=s[g]:(T=An({inputs:{x:s[g]},backend:t,attrs:{perm:b}}),f.push(T));let C=T.shape.slice();for(let v=0;v<x.length;++v)C.splice(x[v],0,1);y.arraysEqual(T.shape,C)||(T=Ie({inputs:{x:T},backend:t,attrs:{shape:C}}),f.push(T)),c===null?c=T:(c=E2({inputs:{a:T,b:c},backend:t}),f.push(c))}h<m-1&&(u[h]>=0&&(c=qg({inputs:{x:c},backend:t,attrs:{axis:u[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&t.disposeData(h.dataId);return c}var W4={kernelName:yp,backendName:"webgpu",kernelFunc:zbe};var Gbe=we({opType:10}),U4={kernelName:Oo,backendName:"webgpu",kernelFunc:Gbe};var Wbe=r=>{let{inputs:e,backend:t}=r,{dy:n,y:o}=e,s=new ap(5,n.shape,o.shape);return t.runWebGPUProgram(s,[n,o],n.dtype)},K4={kernelName:ja,backendName:"webgpu",kernelFunc:Wbe};var Ube=dt({opType:6,dtype:"bool",cpuKernelImpl:uV}),V4={kernelName:Ya,backendName:"webgpu",kernelFunc:Ube};var Kbe=we({opType:11}),H4={kernelName:Xa,backendName:"webgpu",kernelFunc:Kbe};var Vbe=we({opType:12,cpuKernelImpl:pV,dtype:"float32"}),q4={kernelName:zo,backendName:"webgpu",kernelFunc:Vbe};function Pk(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,a=s.shape.length,i=s.shape.slice(),p=o;return o<0&&(y.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),p=a+o+1),i.splice(p,0,1),Ie({inputs:{x:s},backend:n,attrs:{shape:i}})}var j4={kernelName:qs,backendName:"webgpu",kernelFunc:Pk};var Hbe=we({opType:13,cpuKernelImpl:lV}),X4={kernelName:Go,backendName:"webgpu",kernelFunc:Hbe};var jg=class{variableNames=["real","imag"];outputShape=[];shaderKey;dispatchLayout;dispatch;uniforms="exponentMultiplier : f32, denominator: f32,";workgroupSize=[64,1,1];size=!0;component;constructor(e,t){this.outputShape=t,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${this.component==="real"?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${J("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}};function Fk(r,e,t){let n=t.tensorMap.get(r.dataId),o=y.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],a=o/s,i=[],p=Ie({inputs:{x:r},backend:t,attrs:{shape:[a,s]}});i.push(p);let u=p.shape,l=new jg("real",u),m=new jg("imag",u),c=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:u},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:u}],d=e?2*Math.PI:-2*Math.PI,f=e?u[1]:1,h=[{type:"float32",data:[d]},{type:"float32",data:[f]}],g=t.runWebGPUProgram(l,c,"float32",h);i.push(g);let b=t.runWebGPUProgram(m,c,"float32",h);i.push(b);let x=Os({inputs:{real:g,imag:b},backend:t});i.push(x);let T=Ie({inputs:{x},backend:t,attrs:{shape:r.shape}});return i.forEach(C=>t.disposeData(C.dataId)),T}function qbe(r){let{inputs:e,backend:t}=r,{input:n}=e;return Fk(n,!1,t)}var Y4={kernelName:xp,backendName:"webgpu",kernelFunc:qbe};var Ek=class{outputShape=[];shaderKey;dispatchLayout;dispatch;variableNames=["x"];workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}};var Z4={kernelName:Za,backendName:"webgpu",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new Ek(t.shape);return n.runWebGPUProgram(o,[t],t.dtype)}};var jbe=we({opType:14,cpuKernelImpl:mV}),Q4={kernelName:Wo,backendName:"webgpu",kernelFunc:jbe};var Xbe=dt({opType:9,cpuKernelImpl:cV,dtype:"int32"}),J4={kernelName:Uo,backendName:"webgpu",kernelFunc:Xbe};var Lk=class{dispatch;dispatchLayout;isFromPixels=!0;outputShape=[0];shaderKey;importVideo;variableNames=[];workgroupSize=[256,1,1];constructor(e,t,n=!1){this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=n,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${J("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}};var eH={kernelName:Tl,backendName:"webgpu",kernelFunc:Ybe},ih,L2=L().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU"),Bk=new Map;function Ybe(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n;if(o==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let a=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,p=typeof HTMLCanvasElement<"u"&&o instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&o instanceof OffscreenCanvas,u=typeof ImageBitmap<"u"&&o instanceof ImageBitmap,[l,m]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],c=[m,l,s],d=!1,f=a||i;if(u||p||f){let x;if(d){let F=o;if(!Bk.has(F)||Bk.get(F).expired){let O={source:F};Bk.set(F,t.device.importExternalTexture(O))}x={width:l,height:m,format:null,usage:null,texture:Bk.get(F)}}else{if(f){let W=L().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(ih==null||W!==L2)&&(L2=W,ih=document.createElement("canvas").getContext("2d",{willReadFrequently:L2})),ih.canvas.width=l,ih.canvas.height=m,ih.drawImage(o,0,0,l,m),o=ih.canvas}let F=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,O="rgba8unorm",G=t.textureManager.acquireTexture(c[1],c[0],O,F);t.queue.copyExternalImageToTexture({source:o},{texture:G},[c[1],c[0]]),x={width:l,height:m,format:O,usage:F,texture:G}}let T=y.sizeFromShape(c),C=y.computeStrides(c),v=new Lk(c,s,d),A=[{type:"uint32",data:[T]},{type:"uint32",data:[s]},{type:"uint32",data:[...C]}],_=t.makeTensorInfo([m,l],"int32"),R=t.tensorMap.get(_.dataId);R.resourceInfo=x;let M=t.runWebGPUProgram(v,[_],"int32",A);return t.disposeData(_.dataId),M}let h=o.data,g=h;if(s!=null&&s!==4){g=new Uint8Array(o.width*o.height*s);let x=h.length,T=0;for(let C=0;C<x;C++)C%4<s&&(g[T++]=h[C])}let b=t.makeTensorInfo(c,"int32",new Int32Array(g));return t.uploadToGPU(b.dataId),b}var $k=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames;uniforms="varianceEpsilon : f32,";workgroupSize=[128,1,1];offsetShape;scaleShape;varianceEpsilon;size=!0;constructor(e,t,n,o,s){this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),o!=null&&(I.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset")),s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale")),this.offsetShape=o,this.scaleShape=s,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${J("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}};var tH={kernelName:Ko,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n,scale:o,offset:s,mean:a,variance:i}=r,{varianceEpsilon:p}=e,u=t,l=[n,a,i],m=null;s!=null&&(m=s.shape,l.push(s));let c=null;o!=null&&(c=o.shape,l.push(o));let d=new $k(n.shape,a.shape,i.shape,m,c),f=[{type:"float32",data:[p]}];return u.runWebGPUProgram(d,l,n.dtype,f)}};function Zbe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=I.convertConv2DDataFormat(l),g=I.computeConv2DInfo(o.shape,s.shape,p,m,u,c,!1,h);return gk({x:o,filter:s,convInfo:g,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:f,activation:d})}var rH={kernelName:ia,backendName:"webgpu",kernelFunc:Zbe};function Qbe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dilations:l,dimRoundingMode:m,activation:c,leakyreluAlpha:d}=n,f=l;f==null&&(f=[1,1]),y.assert(I.eitherStridesOrDilationsAreOne(p,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${p} and dilations '${f}'`);let h=I.computeConv2DInfo(o.shape,s.shape,p,f,u,m,!0),g=[o,s],b=a!=null,x=i!=null;b&&g.push(a),x&&g.push(i);let T=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inHeight,h.inWidth]}],C;return h.outHeight>4&&h.outWidth>4&&h.strideWidth<=2&&h.inChannels===h.outChannels&&h.dilationHeight===1&&h.dilationWidth===1&&h.inChannels%4===0?C=new sh(h,b,c,x):(C=new ah(h,b,c,x),T.push({type:"int32",data:[h.filterHeight]},{type:"int32",data:[h.filterWidth]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]})),c==="leakyrelu"&&(T.push({type:"float32",data:[d]}),C.uniforms+=" alpha : f32,"),t.runWebGPUProgram(C,g,"float32",T)}var nH={kernelName:ua,backendName:"webgpu",kernelFunc:Qbe};var Ok=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["A","indices"];uniforms;workgroupSize=[64,1,1];size=!0;sliceDim;constructor(e,t){this.outputShape=t,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${rr(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function Jbe(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,a=s[s.length-1],i=y.sizeFromShape(n.shape),[p,u,l,m]=I.prepareAndValidate(n,o),c=Ie({inputs:{x:o},backend:t,attrs:{shape:[u,a]}}),d=Ie({inputs:{x:n},backend:t,attrs:{shape:[y.sizeFromShape(n.shape)/l,l]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let x=t.readSync(o.dataId),T=t.bufferSync(n),C=dV(x,T,n.dtype,u,a,l,m,n.shape,i);return t.makeTensorInfo(p,n.dtype,C.values)}let f=new Ok(a,[u,l]),h=[{type:"int32",data:[a]},{type:"int32",data:m}],g=t.runWebGPUProgram(f,[d,c],d.dtype,h),b=Ie({inputs:{x:g},backend:t,attrs:{shape:p}});return t.disposeData(c.dataId),t.disposeData(d.dataId),t.disposeData(g.dataId),b}var oH={kernelName:Qa,backendName:"webgpu",kernelFunc:Jbe};var zk=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["A","indices"];workgroupSize=[64,1,1];aShape;size=!0;constructor(e,t){this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){let e=eye(this.aShape);return`
      ${J("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function eye(r){let e=["resRC.x","resRC.y","resRC.z","resRC.w"],t=[];for(let n=0;n<r.length;n++)n===2?t.push("indexZ"):t.push(`${e[n]}`);return t.join()}function B2(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n,p=y.parseAxisParam(a,o.shape)[0],u=I.segment_util.collectGatherOpShapeInfo(o,s,p,i),l=y.sizeFromShape(s.shape),m=[],c=Ie({inputs:{x:o},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),d=Ie({inputs:{x:s},backend:t,attrs:{shape:[u.batchSize,l/u.batchSize]}});m.push(c),m.push(d);let f=[u.batchSize,u.outerSize,l/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([o,s])){let T=t.tensorMap.get(d.dataId).values,C=Ce(d.shape,d.dtype,T),A=t.tensorMap.get(c.dataId).values,_=Ce(c.shape,c.dtype,A),R=fV(_,C,f);return m.forEach(M=>t.disposeData(M.dataId)),t.makeTensorInfo(u.outputShape,R.dtype,R.values)}let h=new zk(c.shape,f),g=t.runWebGPUProgram(h,[c,d],c.dtype);m.push(g);let b=Ie({inputs:{x:g},backend:t,attrs:{shape:u.outputShape}});return m.forEach(x=>t.disposeData(x.dataId)),b}var sH={kernelName:js,backendName:"webgpu",kernelFunc:B2};var tye=dt({opType:7,cpuKernelImpl:gV,dtype:"bool"}),aH={kernelName:Ja,backendName:"webgpu",kernelFunc:tye};var rye=dt({opType:8,dtype:"bool",cpuKernelImpl:hV}),iH={kernelName:Vo,backendName:"webgpu",kernelFunc:rye};function nye(r){let{inputs:e,backend:t}=r,{input:n}=e;return Fk(n,!0,t)}var uH={kernelName:Tp,backendName:"webgpu",kernelFunc:nye};var oye=we({opType:15,dtype:"bool"}),pH={kernelName:Ho,backendName:"webgpu",kernelFunc:oye};var sye=we({opType:16,dtype:"bool"}),lH={kernelName:qo,backendName:"webgpu",kernelFunc:sye};var aye=we({opType:17,dtype:"bool"}),mH={kernelName:jo,backendName:"webgpu",kernelFunc:aye};function iye(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n,a=[{type:"float32",data:[s]}],i=new po(o.shape,25,"alpha : f32,");return t.runWebGPUProgram(i,[o],"float32",a)}var cH={kernelName:Xo,backendName:"webgpu",kernelFunc:iye};var uye=dt({opType:10,dtype:"bool",cpuKernelImpl:yV}),dH={kernelName:ei,backendName:"webgpu",kernelFunc:uye};var pye=dt({opType:11,dtype:"bool",cpuKernelImpl:bV}),fH={kernelName:ti,backendName:"webgpu",kernelFunc:pye};var Gk=class{variableNames=[];outputShape=[];shaderKey;dispatchLayout;dispatch;uniforms="start : f32, step : f32,";workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=[e],this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}};function lye(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,a=(o-n)/(s-1),i=new Gk(s),p=[{type:"float32",data:[n]},{type:"float32",data:[a]}];return e.runWebGPUProgram(i,[],"float32",p)}var hH={kernelName:ri,backendName:"webgpu",kernelFunc:lye};var mye=we({opType:19,cpuKernelImpl:xV}),gH={kernelName:Yo,backendName:"webgpu",kernelFunc:mye};var cye=we({opType:20}),bH={kernelName:Zo,backendName:"webgpu",kernelFunc:cye};var dye=dt({opType:12,dtype:"bool"}),yH={kernelName:ni,backendName:"webgpu",kernelFunc:dye};var fye=we({opType:21}),xH={kernelName:oi,backendName:"webgpu",kernelFunc:fye};var hye=dt({opType:13}),TH={kernelName:si,backendName:"webgpu",kernelFunc:hye};var CH=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`,Wk=class{outputShape=[];shaderKey;dispatchLayout;dispatch;variableNames=["x"];uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,";workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${CH}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}},Uk=class{outputShape=[];shaderKey;dispatchLayout;dispatch;variableNames=["x"];uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,";workgroupSize=[256,1,1];maxAllowRadius=16;elementsPerWorkgroup;constructor(e,t){y.assert(t<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${t}`),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Q(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${J()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${CH}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}};function gye(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:p}=n,u;s>16?u=new Wk(o.shape):u=new Uk(o.shape,s);let l=[{type:"int32",data:[s]},{type:"float32",data:[a]},{type:"float32",data:[i]},{type:"float32",data:[p]}];return t.runWebGPUProgram(u,[o],o.dtype,l)}var IH={kernelName:Qo,backendName:"webgpu",kernelFunc:gye};var Kk=class{outputShape=[];shaderKey;dispatchLayout;dispatch;variableNames=["inputImage","outputImage","dy"];uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,";workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${J("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}};function bye(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:p,alpha:u,beta:l}=n,m=new Kk(o.shape),c=[{type:"int32",data:[i]},{type:"float32",data:[p]},{type:"float32",data:[u]},{type:"float32",data:[l]}];return t.runWebGPUProgram(m,[o,s,a],o.dtype,c)}var kH={kernelName:ai,backendName:"webgpu",kernelFunc:bye};var yye=dt({opType:14,cpuKernelImpl:CV}),vH={kernelName:es,backendName:"webgpu",kernelFunc:yye};function xye(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1,l=I.computePool2DInfo(o.shape,s,a,u,i,p);return ok(o,l,"max",t)}var SH={kernelName:ts,backendName:"webgpu",kernelFunc:xye};function Tye(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dataFormat:p,dimRoundingMode:u}=n,l=[1,1,1],m=I.computePool3DInfo(o.shape,s,a,l,i,u,p),c=new ul(m,"max"),d=[{type:"int32",data:[m.strideDepth,m.strideHeight,m.strideWidth]},{type:"int32",data:[m.padInfo.front,m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inDepth,m.inHeight,m.inWidth]},{type:"int32",data:[m.effectiveFilterDepth,m.effectiveFilterHeight,m.effectiveFilterWidth]}];return t.runWebGPUProgram(c,[o],o.dtype,d)}var wH={kernelName:Xs,backendName:"webgpu",kernelFunc:Tye};var Vk=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["dy","maxPos"];uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`;workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=e.inShape,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},Hk=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["dy","maxPos"];uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`;workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=e.inShape,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${J("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}};function Cye(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:p,pad:u,dimRoundingMode:l}=n,m=[1,1,1],c=I.computePool3DInfo(a.shape,i,p,m,u,l),d=new ul(c,"max",!0),f=[{type:"int32",data:[c.strideDepth,c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.front,c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.inDepth,c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterDepth,c.effectiveFilterHeight,c.effectiveFilterWidth]}],h=t.runWebGPUProgram(d,[a],"int32",f),g=new Hk(c);f=[{type:"int32",data:[c.strideDepth,c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterDepth-1-c.padInfo.front,c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.effectiveFilterDepth,c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outDepth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]}];let b=t.runWebGPUProgram(g,[o,h],a.dtype,f);return t.disposeData(h.dataId),b}var AH={kernelName:ru,backendName:"webgpu",kernelFunc:Cye};function Iye(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:a}=e,i=s;Wg([s,a],"maxPoolGrad");let{filterSize:p,strides:u,pad:l,dimRoundingMode:m}=n,c=I.computePool2DInfo(i.shape,p,u,1,l,m),d=new Cu(c,"max",!0),f=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]}],h=t.runWebGPUProgram(d,[i],"int32",f),g=new Vk(c);f=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]}];let b=t.runWebGPUProgram(g,[o,h],i.dtype,f);return t.disposeData(h.dataId),b}var NH={kernelName:Ip,backendName:"webgpu",kernelFunc:Iye};function kye(r){let{inputs:e,backend:t,attrs:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=n,{x:p}=e;y.assert(p.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${p.shape.length}.`);let u=[1,1];y.assert(I.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let l=I.computePool2DInfo(p.shape,o,s,u,a),m=[{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.inHeight,l.inWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]}],c=new Cu(l,"max",!1),d=t.runWebGPUProgram(c,[p],p.dtype,m);c=new Cu(l,"max",!0,!0,i);let f=t.runWebGPUProgram(c,[p],"int32",m);return[d,f]}var DH={kernelName:kp,backendName:"webgpu",kernelFunc:kye};function vye(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return lo(o,s,a,"min",t)}var _H={kernelName:ns,backendName:"webgpu",kernelFunc:vye};var Sye=dt({opType:15,cpuKernelImpl:IV}),RH={kernelName:os,backendName:"webgpu",kernelFunc:Sye};var qk=class{outputShape;shaderKey;uniforms="";dispatchLayout;dispatch;variableNames=["x"];workgroupSize=[64,1,1];xShape;offset;size=!0;constructor(e,t,n){this.outputShape=t.map((o,s)=>o[0]+e[s]+o[1]),this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map((o,s)=>{this.uniforms+=` pad${s} : vec2<i32>,`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((u,l)=>`uniforms.pad${l}[0]`).join(","),n=this.xShape.map((u,l)=>`uniforms.pad${l}[0] + uniforms.xShape${e>1?`[${l}]`:""}`).join(","),o=e===1?"start":"start[i]",s=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",i=rr(e),p=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${J("index")} {
        if (index < uniforms.size) {
          let start = ${i}(${t});
          let end = ${i}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${o}) {
              ${a} = ${o} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${s}) {
              ${a} = (${s} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${p}));
        }
      }
    `}};var MH={kernelName:ss,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{paddings:o,mode:s}=e,a=t,i=o.map(l=>({type:"int32",data:[l[0],l[1]]})),p=new qk(n.shape,o,s);return a.runWebGPUProgram(p,[n],n.dtype,i)}};var wye=dt({opType:16}),PH={kernelName:ii,backendName:"webgpu",kernelFunc:wye};var jk=class{variableNames=["probs"];outputShape=[];shaderKey;dispatchLayout;dispatch;uniforms="seed : f32, numOutcomes: i32,";workgroupSize=[64,1,1];size=!0;constructor(e,t){this.outputShape=[e,t],this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${J("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}};var Xk=class{variableNames=["a","b"];outputShape;shaderKey;dispatchLayout;dispatch;workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="softmax"}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          let value = a - b;
          setOutputAtIndex(index, exp(value));
        }
      }
    `}};var $2=dt({opType:4}),FH={kernelName:$o,backendName:"webgpu",kernelFunc:$2};function O2(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=y.parseAxisParam([s],o.shape),i=Vg({inputs:{x:o},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),p=I.expandShapeToKeepDim(i.shape,a),u=Ie({inputs:{x:i},backend:t,attrs:{shape:p}}),l=new Xk(o.shape),m=t.runWebGPUProgram(l,[o,u],o.dtype),c=qg({inputs:{x:m},backend:t,attrs:{axis:a,keepDims:!1}}),d=Ie({inputs:{x:c},backend:t,attrs:{shape:p}}),f=$2({inputs:{a:m,b:d},backend:t});return t.disposeData(i.dataId),t.disposeData(u.dataId),t.disposeData(m.dataId),t.disposeData(c.dataId),t.disposeData(d.dataId),f}var EH={kernelName:As,backendName:"webgpu",kernelFunc:O2};function Aye(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n,p=i?o:O2({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),u=p.shape[0],l=p.shape[1],m=new jk(u,s),c=[{type:"float32",data:[a]},{type:"int32",data:[l]}],d=t.runWebGPUProgram(m,[p],"int32",c);return i||t.disposeData(p.dataId),d}var LH={kernelName:ui,backendName:"webgpu",kernelFunc:Aye};function Nye(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.tensorMap.get(n.dataId),[a,i]=vV(s.values,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,a)}let o=new po(n.shape,22);return t.runWebGPUProgram(o,[n],n.dtype)}var BH={kernelName:Ys,backendName:"webgpu",kernelFunc:Nye};function Dye(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p}=n,u=t.readSync(o.dataId),l=t.readSync(s.dataId),{selectedIndices:m}=kr.nonMaxSuppressionV3Impl(u,l,a,i,p);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}var $H={kernelName:li,backendName:"webgpu",kernelFunc:Dye};function _ye(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p,softNmsSigma:u}=n,l=t.readSync(o.dataId),m=t.readSync(s.dataId),c=a,d=i,f=p,h=u,{selectedIndices:g,selectedScores:b}=kr.nonMaxSuppressionV5Impl(l,m,c,d,f,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var OH={kernelName:mi,backendName:"webgpu",kernelFunc:_ye};var Yk=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x"];uniforms="onValue : f32, offValue : f32,";workgroupSize=[64,1,1];size=!0;constructor(e,t){this.outputShape=[e,t],this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${J("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}};function Rye(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{dtype:s,depth:a,onValue:i,offValue:p}=n,u=y.sizeFromShape(o.shape),l=new Yk(u,a),m=Ie({inputs:{x:o},backend:t,attrs:{shape:[u]}}),c=[{type:"float32",data:[i]},{type:"float32",data:[p]}],d=t.runWebGPUProgram(l,[m],s,c);t.disposeData(m.dataId);let f=[...o.shape,a],h=Ie({inputs:{x:d},backend:t,attrs:{shape:f}});return t.disposeData(d.dataId),h}var zH={kernelName:is,backendName:"webgpu",kernelFunc:Rye};function Xg(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=ip({inputs:{input:n},backend:t}),s=Xg({inputs:{x:o},backend:t}),a=Vm({inputs:{input:n},backend:t}),i=Xg({inputs:{x:a},backend:t}),p=Os({inputs:{real:s,imag:i},backend:t});return t.disposeData(o.dataId),t.disposeData(s.dataId),t.disposeData(a.dataId),t.disposeData(i.dataId),p}else return Dr({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var GH={kernelName:sa,backendName:"webgpu",kernelFunc:Xg};function WH(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=ip({inputs:{input:n},backend:t}),s=WH({inputs:{x:o},backend:t}),a=Vm({inputs:{input:n},backend:t}),i=Xg({inputs:{x:a},backend:t}),p=Os({inputs:{real:s,imag:i},backend:t});return t.disposeData(o.dataId),t.disposeData(s.dataId),t.disposeData(a.dataId),t.disposeData(i.dataId),p}else return Dr({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var UH={kernelName:Zs,backendName:"webgpu",kernelFunc:WH};function Mye(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return Pk({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(l=>{y.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],p=e.map(l=>{let m=Pk({inputs:{input:l},backend:t,attrs:{dim:o}});return i.push(m),m}),u=F2({inputs:p,backend:t,attrs:{axis:o}});return i.forEach(l=>t.disposeData(l.dataId)),u}var KH={kernelName:Qs,backendName:"webgpu",kernelFunc:Mye};var Zk=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x"];uniforms="constantValue : f32,";workgroupSize=[64,1,1];xShape;size=!0;constructor(e,t){this.outputShape=t.map((n,o)=>n[0]+e[o]+n[1]),this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map((n,o)=>{this.uniforms+=` pad${o} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=rr(e),n=this.xShape.map((m,c)=>`uniforms.pad${c}[0]`).join(","),o=this.xShape.map((m,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),s=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${o})`:`${o}`,i=e>1?"any(outC < start)":"outC < start",p=e>1?"any(outC >= end)":"outC >= end",u=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${J("index")} {
        if (index < uniforms.size) {
          let start = ${s};
          let end = ${a};
          let outC = getCoordsFromIndex(index);

          if (${i} || ${p}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${u}));
          }
        }
      }
    `}};var z2=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;if(s.every(u=>y.arraysEqual(u,[0,0])))return lr({inputs:{x:o},backend:t});if(y.sizeFromShape(o.shape)===0){let u=s.map((l,m)=>l[0]+o.shape[m]+l[1]);return Dr({backend:t,attrs:{shape:u,value:a,dtype:o.dtype}})}let i=[{type:"float32",data:[a]}];s.map(u=>i.push({type:"int32",data:[u[0],u[1]]}));let p=new Zk(o.shape,s);return t.runWebGPUProgram(p,[o],o.dtype,i)},VH={kernelName:us,backendName:"webgpu",kernelFunc:z2};var Pye=dt({opType:19}),HH={kernelName:ps,backendName:"webgpu",kernelFunc:Pye};function Fye(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=new ap(20,n.shape,o.shape);return t.runWebGPUProgram(s,[n,o],"float32")}var qH={kernelName:ls,backendName:"webgpu",kernelFunc:Fye};function Eye(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return lo(o,s,a,"prod",t)}var jH={kernelName:ms,backendName:"webgpu",kernelFunc:Eye};var Lye=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=AV(n,o,s,a);return e.makeTensorInfo([i.length],a,i)},XH={kernelName:nu,backendName:"webgpu",kernelFunc:Lye};var Bye=we({opType:26}),YH={kernelName:cs,backendName:"webgpu",kernelFunc:Bye};var $ye=we({opType:23}),ZH={kernelName:ds,backendName:"webgpu",kernelFunc:$ye};var Oye=we({opType:24}),QH={kernelName:gs,backendName:"webgpu",kernelFunc:Oye};var Qk=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x"];uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,";workgroupSize=[64,1,1];size=!0;constructor(e,t,n){this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function zye(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,size:a,halfPixelCenters:i}=n,[p,u]=a,l=s&&p>1?1:0,m=s&&u>1?1:0,d=[{type:"float32",data:[l,m]},{type:"float32",data:[i?.5:0]}],f=new Qk(o.shape,p,u);return t.runWebGPUProgram(f,[o],"float32",d)}var JH={kernelName:hs,backendName:"webgpu",kernelFunc:zye};var Jk=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["dy"];uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`;workgroupSize=[64,1,1];alignCorners;size=!0;constructor(e,t){this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeBilinearBackprop_${t}`}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};function Gye(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,[,i,p]=o.shape,[,u,l]=s.shape,m=[a&&u>1?i-1:i,a&&l>1?p-1:p],c=[a&&u>1?u-1:u,a&&l>1?l-1:l],d=m[0]/c[0],f=m[1]/c[1],h=1/d,g=1/f,b=Math.ceil(h)*2+2,x=Math.ceil(g)*2+2,T=new Jk(o.shape,a),C=[{type:"int32",data:m},{type:"int32",data:c},{type:"float32",data:[d]},{type:"float32",data:[f]},{type:"float32",data:[h]},{type:"float32",data:[g]},{type:"int32",data:[b]},{type:"int32",data:[x]}];return t.runWebGPUProgram(T,[s],s.dtype,C)}var eq={kernelName:di,backendName:"webgpu",kernelFunc:Gye};var ev=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x"];uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,";workgroupSize=[64,1,1];halfPixelCenters;size=!0;constructor(e,t,n,o){this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=o,this.shaderKey=`resizeNearest_${o}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Wye(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[p,u]=i,l=s&&p>1?1:0,m=s&&u>1?1:0,d=[{type:"float32",data:[l,m]},{type:"float32",data:[s?.5:0]}],f=new ev(o.shape,p,u,a);return t.runWebGPUProgram(f,[o],o.dtype,d)}var tq={kernelName:fs,backendName:"webgpu",kernelFunc:Wye};var tv=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["dy"];uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`;workgroupSize=[64,1,1];alignCorners;size=!0;constructor(e,t){this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeNearestNeigborBackprop_${t}`}getUserCode(){return`
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};function Uye(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,[,i,p]=o.shape,[,u,l]=s.shape,m=[a&&u>1?i-1:i,a&&l>1?p-1:p],c=[a&&u>1?u-1:u,a&&l>1?l-1:l],d=m[0]/c[0],f=m[1]/c[1],h=1/d,g=1/f,b=Math.ceil(h)*2+2,x=Math.ceil(g)*2+2,T=new tv(o.shape,a),C=[{type:"int32",data:m},{type:"int32",data:c},{type:"float32",data:[h]},{type:"float32",data:[g]},{type:"int32",data:[b]},{type:"int32",data:[x]}];return t.runWebGPUProgram(T,[s],s.dtype,C)}var rq={kernelName:ci,backendName:"webgpu",kernelFunc:Uye};var rv=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x"];uniforms;workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}};function Kye(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,a=o.shape.length;if(a===0)return lr({inputs:{x:o},backend:t});let i=o.shape,p=[1,1,1,1];i.forEach((g,b)=>{let x=b+4-a;p[x]=g});let u=y.parseAxisParam(s,o.shape),l=[0,0,0,0];u.forEach(g=>{let b=g+4-a;l[b]=1});let m=[{type:"int32",data:l}],c=Ie({inputs:{x:o},backend:t,attrs:{shape:p}}),d=new rv(p),f=t.runWebGPUProgram(d,[c],c.dtype,m);t.disposeData(c.dataId);let h=Ie({inputs:{x:f},backend:t,attrs:{shape:i}});return t.disposeData(f.dataId),h}var nq={kernelName:bs,backendName:"webgpu",kernelFunc:Kye};var nv=class{outputShape=[];shaderKey;dispatchLayout;dispatch;variableNames=["x"];uniforms;workgroupSize=[64,1,1];fillSnippet;size=!0;constructor(e,t){this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${J("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}};var oq={kernelName:Ci,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,p=new nv(n.shape,s),[u,l]=I.getImageCenter(a,n.shape[1],n.shape[2]),m=[{type:"float32",data:[u]},{type:"float32",data:[l]},{type:"float32",data:[Math.sin(o)]},{type:"float32",data:[Math.cos(o)]}];return typeof s=="number"?m.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):m.push({type:"float32",data:s}),i.runWebGPUProgram(p,[n],n.dtype,m)}};var Vye=we({opType:27}),sq={kernelName:ys,backendName:"webgpu",kernelFunc:Vye};var Hye=we({opType:28,cpuKernelImpl:NV}),aq={kernelName:xs,backendName:"webgpu",kernelFunc:Hye};var pl=class{variableNames=["updates","indices"];uniforms;outputShape;sumDupeIndices;shaderKey;dispatchLayout;dispatch;workgroupSize=[64,1,1];updatesRank;indicesRank;sliceDimGreaterThanOne;atomic=!0;type;constructor(e,t,n,o,s,a,i,p=!0){this.outputShape=a,this.type=i,this.sumDupeIndices=p,this.dispatchLayout=se(e),this.dispatch=Q(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${o}_${this.sliceDimGreaterThanOne}_${i}_${p}`;let u=rr(s.length);this.uniforms=`sliceDim : i32, strides: ${u}, updatesSize: i32,`,this.updatesRank=o,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",o="",s="";this.dispatchLayout.x.length===1?(o="flattenedIndex",s=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(o="vec2<i32>(flattenedIndex, coords[1])",s=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);let i=`getUpdates(${Array.from({length:this.updatesRank},(u,l)=>`coords[${l}]`).join(", ")})`;return`
    ${s}
      ${J("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue =
              ${zm(this.type)}(${i});
          let flatIndex = getOutputIndexFromCoords(${o});

          ${this.sumDupeIndices?op("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}};function qye(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:p,sliceSize:u,strides:l,outputSize:m}=I.calculateShapes(s,o,a),c=[m/u,u];if(m===0)return t.makeTensorInfo(a,o.dtype);let d=Ie({inputs:{x:o},backend:t,attrs:{shape:[p,i]}}),f=Ie({inputs:{x:s},backend:t,attrs:{shape:[p,u]}}),h=f.dtype,g=Dr({backend:t,attrs:{shape:c,value:0,dtype:h}}),b=y.sizeFromShape(f.shape),x=[{type:"int32",data:[i]},{type:"int32",data:l},{type:"int32",data:[b]}],T=new pl(f.shape,i,d.shape.length,f.shape.length,l,c,h),C=t.runWebGPUProgram(T,[f,d],h,x,g),v=Ie({inputs:{x:C},backend:t,attrs:{shape:a}});return t.disposeData(d.dataId),t.disposeData(f.dataId),t.disposeData(C.dataId),v}var iq={kernelName:fi,backendName:"webgpu",kernelFunc:qye};var ov=class{outputShape=[];shaderKey;dispatchLayout;dispatch;variableNames=["sortedSequence","values"];uniforms="numInputs : i32,";workgroupSize=[64,1,1];size=!0;side;constructor(e,t){this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey=`search_sorted_${t}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${this.side==="left"?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${J("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}};function jye(r){let{inputs:e,backend:t,attrs:n}=r,{sortedSequence:o,values:s}=e,{side:a}=n,i=new ov([s.shape[0],s.shape[1]],a),p=[{type:"int32",data:[o.shape[1]]}];return t.runWebGPUProgram(i,[o,s],"int32",p)}var uq={kernelName:hi,backendName:"webgpu",kernelFunc:jye};var sv=class{variableNames=["c","a","b"];outputShape;shaderKey;dispatchLayout;dispatch;workgroupSize=[64,1,1];cRank;rank;size=!0;constructor(e,t,n){this.outputShape=t,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],a=[];for(let i=0;i<this.outputShape.length;i++)a.push(`${o[i]}`),i<this.cRank&&s.push(`${o[i]}`);e=s.join(),t=a.join()}return`
      ${J("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function Xye(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=new sv(n.shape.length,o.shape,o.shape.length);return t.runWebGPUProgram(a,[n,o,s],Nt(o.dtype,s.dtype))}var pq={kernelName:ea,backendName:"webgpu",kernelFunc:Xye};var Yye=we({opType:29}),lq={kernelName:Ts,backendName:"webgpu",kernelFunc:Yye};var Zye=we({opType:30}),mq={kernelName:ks,backendName:"webgpu",kernelFunc:Zye};var Qye=we({opType:31}),cq={kernelName:Is,backendName:"webgpu",kernelFunc:Qye};var Jye=we({opType:32}),dq={kernelName:Cs,backendName:"webgpu",kernelFunc:Jye};var exe=we({opType:33}),fq={kernelName:gi,backendName:"webgpu",kernelFunc:exe};var txe=we({opType:34}),hq={kernelName:vs,backendName:"webgpu",kernelFunc:txe};var rxe=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;y.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((b,x)=>b*x),p=[[0,0]];p.push(...a);for(let b=1+s.length;b<o.shape.length;++b)p.push([0,0]);let u=[],l=z2({inputs:{x:o},backend:t,attrs:{paddings:p,constantValue:0}}),m=I.getReshaped(l.shape,s,i,!1),c=I.getPermuted(m.length,s.length,!1),d=I.getReshapedPermuted(l.shape,s,i,!1),f=Ie({inputs:{x:l},backend:t,attrs:{shape:m}}),h=An({inputs:{x:f},backend:t,attrs:{perm:c}}),g=Ie({inputs:{x:h},backend:t,attrs:{shape:d}});return u.push(l),u.push(f),u.push(h),u.forEach(b=>t.disposeData(b.dataId)),g},gq={kernelName:ra,backendName:"webgpu",kernelFunc:rxe};var av=class{variableNames=["A"];outputShape;shaderKey;dispatchLayout;dispatch;workgroupSize=[64,1,1];size=!0;rank;constructor(e,t){let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[o]*t[o];this.outputShape=n,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=nxe(this.rank,"uniforms.");return`
      ${J("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function nxe(r,e=""){if(r>=5)throw Error(`Tile for rank ${r} is not yet supported`);if(r===1)return`(resRC % ${e}aShape)`;let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r;o++)n.push(`(${t[o]} % ${e}aShape[${o}])`);return n.join()}function G2(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(t.shouldExecuteOnCPU([o])||o.dtype==="string"||o.shape.length>=5){let p=t.readSync(o.dataId),u=o.dtype==="string"?p.map(c=>y.decodeString(c)):p,l=Ce(o.shape,o.dtype,u),m=EV(l,s);return t.makeTensorInfo(m.shape,m.dtype,m.values)}let a=new av(o.shape,s);return t.runWebGPUProgram(a,[o],o.dtype)}var bq={kernelName:_n,backendName:"webgpu",kernelFunc:G2};function oxe(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:p,numUpdates:u,sliceSize:l,strides:m,outputSize:c}=I.calculateShapes(s,o,i),d=!1;if(s.dtype==="string"){let R=t.bufferSync(o),M=t.bufferSync(s),F=y.decodeString(t.readSync(a.dataId)[0]),O=DV(R,M,i,c,l,u,p,m,F,d);return t.makeTensorInfo(i,O.dtype,O.values)}let f=[c/l,l],h=Ie({inputs:{x:o},backend:t,attrs:{shape:[u,p]}}),g=s.shape.length?Ie({inputs:{x:s},backend:t,attrs:{shape:[u,l]}}):lr({inputs:{x:s},backend:t}),b=g.dtype,x=t.makeTensorInfo([],b,y.makeZerosTypedArray(1,b)),T=Ie({inputs:{x:a},backend:t,attrs:{shape:Array(f.length).fill(1)}}),C=G2({inputs:{x:T},backend:t,attrs:{reps:f}}),v=y.sizeFromShape([u,l]),A=[{type:"int32",data:[p]},{type:"int32",data:m},{type:"int32",data:[v]}];switch(u){case 0:break;case 1:{let R=new pl([u,l],p,h.shape.length,g.shape.length,m,f,b,d);t.runWebGPUProgram(R,[g,h],b,A,C)}break;default:{let R=new pl([u,l],p,h.shape.length,x.shape.length,m,f,b,d);t.runWebGPUProgram(R,[x,h],b,A,C)}{let R=new pl([u,l],p,h.shape.length,g.shape.length,m,f,b);t.runWebGPUProgram(R,[g,h],b,A,C)}}let _=Ie({inputs:{x:C},backend:t,attrs:{shape:i}});return t.disposeData(h.dataId),t.disposeData(g.dataId),t.disposeData(T.dataId),t.disposeData(x.dataId),t.disposeData(C.dataId),_}var yq={kernelName:bi,backendName:"webgpu",kernelFunc:oxe};function sxe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],p=I.prepareSplitSize(o,s,i),u=o.shape.length,l=new Array(u).fill(0),m=o.shape.slice();return p.map(c=>{let d=[...m];d[i]=c;let f=Vi({inputs:{x:o},backend:t,attrs:{begin:l,size:d}});return l[i]+=c,f})}var xq={kernelName:na,backendName:"webgpu",kernelFunc:sxe};var axe=we({opType:35}),Tq={kernelName:Ss,backendName:"webgpu",kernelFunc:axe};var Cq={kernelName:ou,backendName:"webgpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e,o=new po(t.shape,36);return n.runWebGPUProgram(o,[t],t.dtype)}};var ixe=dt({opType:21}),Iq={kernelName:Ns,backendName:"webgpu",kernelFunc:ixe};function uxe({inputs:r,attrs:e,backend:t}){let{x:n}=r,o=new po(n.shape,37,"stepAlpha : f32,"),s=[{type:"float32",data:[e.alpha]}];return t.runWebGPUProgram(o,[n],n.dtype,s)}var kq={kernelName:Xn,backendName:"webgpu",kernelFunc:uxe};var iv=class{variableNames=["x"];uniforms;outputShape;shaderKey;dispatchLayout;dispatch;workPerThread=1;workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);let t=rr(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let o=0;t=this.outputShape.map((s,a)=>(o++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${o-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${J("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function pxe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:p,endMask:u,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:x,end:T,strides:C}=vt.sliceInfo(o.shape,s,a,i,p,u,l,m,c),v;if(h)v=Ie({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let A=vt.computeOutShape(x,T,C),_=Vi({inputs:{x:o},backend:t,attrs:{begin:x,size:A}});v=Ie({inputs:{x:_},backend:t,attrs:{shape:f}}),t.disposeData(_.dataId)}else if(t.shouldExecuteOnCPU([o])){let _=t.readSync(o.dataId),R=Ce(o.shape,o.dtype,_),M=MV(d,R,C,x);v=t.makeTensorInfo(f,o.dtype,M.values)}else{let _=new iv(d),R=[{type:"int32",data:x},{type:"int32",data:C}],M=t.runWebGPUProgram(_,[o],o.dtype,R);v=Ie({inputs:{x:M},backend:t,attrs:{shape:f}}),t.disposeData(M.dataId)}return v}var vq={kernelName:yi,backendName:"webgpu",kernelFunc:pxe};function lxe(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:p,preserveShortSequences:u}=n,{data:l,dataSplits:m}=e,c=t.readSync(l.dataId),d=t.readSync(m.dataId),[f,h]=PV(c,d,o,s,a,i,p,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(m.shape,"int32",h)]}var Sq={kernelName:su,backendName:"webgpu",kernelFunc:lxe};var mxe=dt({opType:22,cpuKernelImpl:FV,supportsComplex:!0}),wq={kernelName:Ds,backendName:"webgpu",kernelFunc:mxe};var cxe=we({opType:38}),Aq={kernelName:_s,backendName:"webgpu",kernelFunc:cxe};var dxe=we({opType:39}),Nq={kernelName:Rs,backendName:"webgpu",kernelFunc:dxe};var uv=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x","indices"];uniforms;workgroupSize=[256,1,1];size=!0;constructor(e){this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${J("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},pv=class{outputShape;shaderKey;dispatchLayout;dispatch;variableNames=["x","indices"];uniforms;workgroupSize=[256,1,1];size=!0;constructor(e){this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${J("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function uh(r,e){e!==null&&r.disposeData(e.dataId)}function Dq(r){let e=1;for(;e<r;)e*=2;return e}function fxe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n,i=o.shape,p=i[i.length-1];if(t.shouldExecuteOnCPU([o])){let v=t.readSync(o.dataId),[A,_]=LV(v,i,o.dtype,s,a);return[t.makeTensorInfo(A.shape,A.dtype,A.values),t.makeTensorInfo(_.shape,_.dtype,_.values)]}if(s===0)return i[i.length-1]=0,[t.makeTensorInfo(i,o.dtype,[]),t.makeTensorInfo(i,"int32",[])];if(p===1)return[o,Dr({attrs:{shape:i,dtype:"int32",value:0},backend:t})];let l=y.sizeFromShape(i)/p,m=Ie({inputs:{x:o},attrs:{shape:[l,p]},backend:t}),c=Dq(s),d=Dq(p),f=null,h=()=>f===null?[m,m]:[m,f],g=(v,A,_)=>{let R=h(),M=new uv(_),O=[{type:"int32",data:[p]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[v]},{type:"int32",data:[A]}],G=f;f=t.runWebGPUProgram(M,R,"int32",O),uh(t,G)};for(let v=1;v<c;v*=2){let A=v*2;for(let _=v;_>=1;_/=2)g(A,_,[l,d])}for(let v=d;v>c;v/=2){let A=h(),_=new pv([l,v/2]),M=[{type:"int32",data:[p]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[c]}],F=f;f=t.runWebGPUProgram(_,A,"int32",M),uh(t,F);let O=c/2,G=O*2;for(let W=O;W>=1;W/=2)g(G,W,f.shape)}let b=f;f=Vi({inputs:{x:f},backend:t,attrs:{begin:0,size:[l,s]}}),uh(t,b);let x=B2({inputs:{x:m,indices:f},backend:t,attrs:{axis:1,batchDims:1}});uh(t,m);let T=i.slice(0,-1);T.push(s),b=f,f=Ie({inputs:{x:f},attrs:{shape:T},backend:t}),uh(t,b);let C=x;return x=Ie({inputs:{x},attrs:{shape:T},backend:t}),uh(t,C),[x,f]}var _q={kernelName:xi,backendName:"webgpu",kernelFunc:fxe};var lv=class{variableNames=["Image","Transforms"];outputShape;uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,";shaderKey;dispatchLayout;dispatch;workgroupSize=[64,1,1];size=!0;constructor(e){this.outputShape=e,this.dispatchLayout=se(this.outputShape),this.dispatch=Q(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${J("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function hxe(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:p,outputShape:u}=n,[l,m,c,d]=o.shape,[f,h]=u??[m,c],g=[l,f,h,d],b=new lv(g),x=a==="nearest"?1:2,T;switch(i){case"constant":T=1;break;case"reflect":T=2;break;case"wrap":T=3;break;case"nearest":T=4;break;default:T=1;break}let C=[{type:"int32",data:[x]},{type:"int32",data:[T]},{type:"float32",data:[p]}];return t.runWebGPUProgram(b,[o,s],"float32",C)}var Rq={kernelName:Ti,backendName:"webgpu",kernelFunc:hxe};function gxe(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,p=o.shape[s],u=new Array(i-1),l=0;for(let h=0;h<i;h++)h!==s&&(u[l++]=a.shape[h]);let m=[],c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let f=new Array(p);for(let h=0;h<f.length;h++){c[s]=h;let g=Vi({inputs:{x:a},backend:t,attrs:{begin:c,size:d}}),b=Ie({inputs:{x:g},backend:t,attrs:{shape:u}});f[h]=b,m.push(g)}return m.forEach(h=>t.disposeData(h.dataId)),f}var Mq={kernelName:oa,backendName:"webgpu",kernelFunc:gxe};var bxe=[tV,$V,OV,zV,GV,WV,KV,VV,HV,qV,jV,XV,YV,ZV,QV,t4,r4,n4,o4,s4,i4,u4,p4,d4,f4,h4,nV,b4,y4,x4,T4,C4,I4,k4,v4,S4,w4,D4,_4,R4,M4,F4,E4,P4,L4,B4,$4,O4,W4,U4,K4,V4,H4,q4,j4,X4,Y4,JK,Z4,eH,Q4,J4,tH,rH,nH,oH,sH,aH,iH,rV,uH,g4,pH,lH,mH,cH,dH,fH,hH,bH,gH,yH,xH,TH,IH,kH,JV,vH,SH,NH,wH,AH,DH,e4,_H,RH,MH,PH,LH,z4,BH,$H,OH,l4,zH,UH,KH,VH,HH,qH,jH,XH,m4,FH,YH,ZH,QH,eV,JH,eq,tq,rq,nq,oq,sq,aq,iq,uq,pq,lq,mq,cq,dq,fq,a4,kq,vq,Sq,EH,hq,gq,yq,xq,Tq,Cq,Iq,wq,G4,Aq,Nq,bq,_q,Rq,UV,Mq,GH];for(let r of bxe)Ru(r);var Pe=(s=>(s[s.float32=0]="float32",s[s.int32=1]="int32",s[s.bool=2]="bool",s[s.string=3]="string",s[s.complex64=4]="complex64",s))(Pe||{}),Hm=(i=>(i[i.linear=0]="linear",i[i.relu=1]="relu",i[i.relu6=2]="relu6",i[i.prelu=3]="prelu",i[i.leakyrelu=4]="leakyrelu",i[i.sigmoid=5]="sigmoid",i[i.elu=6]="elu",i))(Hm||{});var Pq;function yxe(r){Pq=r.wasm.cwrap(aa,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function xxe(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:p,transposeB:u,activation:l,leakyreluAlpha:m}=n,c=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(s.dataId).id,f=0;if(a!=null){let R=t.dataIdMap.get(a.dataId);if(R.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${R.shape.length}.`);f=R.id}let h=i==null?0:t.dataIdMap.get(i.dataId).id,g=Hm[l];if(g==null)throw new Error(`${l} activation not yet supported for FusedConv2D in the wasm backend.`);let b=p?o.shape[2]:o.shape[1],x=u?s.shape[1]:s.shape[2],T=Rr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)),C=t.makeOutput([...T,b,x],o.dtype),v=t.dataIdMap.get(C.dataId).id,A=new Uint8Array(new Int32Array(o.shape).buffer),_=new Uint8Array(new Int32Array(s.shape).buffer);return Pq(c,A,o.shape.length,d,_,s.shape.length,p,u,g,f,h,m||0,v),C}var Fq={kernelName:aa,backendName:"wasm",setupFunc:yxe,kernelFunc:xxe};function Ne(r,e){let t;function n(s){t=s.wasm.cwrap(r,null,["number","number","number"])}function o(s){let{backend:a,inputs:{x:i}}=s,p=a.dataIdMap.get(i.dataId).id,u=a.makeOutput(i.shape,e||i.dtype),l=a.dataIdMap.get(u.dataId).id;return y.sizeFromShape(u.shape)===0||t(p,Pe[i.dtype],l),u}return{kernelName:r,backendName:"wasm",setupFunc:n,kernelFunc:o}}var Eq=Ne(Gs);var Lq=Ne(xo);var Bq=Ne(To);function ft(r,e,t){let n;function o(a){n=a.wasm.cwrap(r,null,["number","array","number","number","array","number","number","number"])}function s(a){let{backend:i,inputs:p}=a,{a:u,b:l}=p,m=i.dataIdMap.get(u.dataId).id,c=i.dataIdMap.get(l.dataId).id,d=t??u.dtype,f=I.assertAndGetBroadcastShape(u.shape,l.shape),h=i.makeOutput(f,d);if(y.sizeFromShape(f)===0)return h;let g=new Uint8Array(new Int32Array(u.shape).buffer),b=new Uint8Array(new Int32Array(l.shape).buffer),x=i.dataIdMap.get(h.dataId).id;return(()=>n(m,g,u.shape.length,c,b,l.shape.length,Pe[u.dtype],x))(),h}return{kernelName:r,backendName:"wasm",setupFunc:o,kernelFunc:s}}var Txe=!0,$q=ft(Dn,Txe);var Oq;function Cxe(r){Oq=r.wasm.cwrap(Co,null,["array","number","number","number"])}function Ixe(r){let{inputs:e,backend:t}=r,n=t.makeOutput(e[0].shape,e[0].dtype);if(y.sizeFromShape(n.shape)===0)return n;let o=e.map(i=>t.dataIdMap.get(i.dataId).id),s=new Uint8Array(new Int32Array(o).buffer),a=t.dataIdMap.get(n.dataId).id;return Oq(s,o.length,Pe[n.dtype],a),n}var zq={kernelName:Co,backendName:"wasm",setupFunc:Cxe,kernelFunc:Ixe};function qm(r){let{inputs:{x:e},backend:t}=r;if(e.dtype==="string")return cr(t.readSync(e.dataId),e.shape,e.dtype);let n=t.makeOutput(e.shape,e.dtype),o=t.typedArrayFromHeap(e);return t.typedArrayFromHeap(n).set(o),n}var Gq={kernelName:jn,backendName:"wasm",kernelFunc:qm};var Wq;function kxe(r){Wq=r.wasm.cwrap(Rn,null,["number","array","number","number","number","array","number"])}function zs(r){let{inputs:e,backend:t,attrs:n}=r,[o,s]=Sxe(e.x.shape,n.perm),a=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(a=!1);let i=vxe(e.x.shape,n.perm),p={dataId:e.x.dataId,shape:o,dtype:e.x.dtype};if(a){let f=qm({inputs:e,backend:t});return f.shape=i,f}let u=t.makeOutput(i,p.dtype),l=t.dataIdMap.get(p.dataId).id,m=t.dataIdMap.get(u.dataId).id,c=new Uint8Array(new Int32Array(s).buffer),d=new Uint8Array(new Int32Array(p.shape).buffer);return Wq(l,d,p.shape.length,Pe[p.dtype],m,c,s.length),u}function vxe(r,e){let t=new Array(r.length);for(let n=0;n<t.length;n++)t[n]=r[e[n]];return t}function Sxe(r,e){let t=[],n=[];for(let o=0;o<r.length;++o)r[o]!==1&&t.push(r[o]),r[e[o]]!==1&&n.push(e[o]);for(let o=0;o<n.length;++o){let s=-1;for(let a=0;a<n.length;++a)n[a]>=o&&(s===-1||n[s]>n[a])&&(s=a);n[s]=o}return[t,n]}var Uq={kernelName:Rn,backendName:"wasm",kernelFunc:zs,setupFunc:kxe};function Nn(r,e,t){let n=r.shape,o=r.shape.length,s=y.parseAxisParam(e,n),a=s,i=I.getAxesPermutation(a,o),p=null,u=!1;if(i!=null){let l=new Array(o);for(let d=0;d<l.length;d++)l[d]=n[i[d]];a=I.getInnerMostAxes(a.length,o),p=zs({inputs:{x:r},attrs:{perm:i},backend:t});let m=t.dataIdMap.get(r.dataId).id;t.dataIdMap.get(p.dataId).id!==m&&(u=!0)}return{transposed:p,originalAxes:s,axes:a,inputWasTransposed:u}}var Kq;function wxe(r){Kq=r.wasm.cwrap(za,null,["number, number, number"])}function Axe(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,p=e.dataIdMap.get(a.dataId).id,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=Nn(a,o,e);if(d){let T=e.dataIdMap.get(l.dataId).id;u=l,p=T}let f=u.shape.length;I.assertAxesAreInnerMostDims("all",m,f);let[h,g]=I.computeOutAndReduceShapes(u.shape,m),b=y.sizeFromShape(g),x=e.makeOutput(h,a.dtype);if(y.sizeFromShape(u.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;Kq(p,b,T)}if(d&&e.disposeData(l.dataId),s){let T=I.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var Vq={kernelName:za,backendName:"wasm",setupFunc:wxe,kernelFunc:Axe};var Hq;function Nxe(r){Hq=r.wasm.cwrap(Ga,null,["number, number, number"])}function Dxe(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,p=e.dataIdMap.get(a.dataId).id,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=Nn(a,o,e);if(d){let T=e.dataIdMap.get(l.dataId).id;u=l,p=T}let f=u.shape.length;I.assertAxesAreInnerMostDims("any",m,f);let[h,g]=I.computeOutAndReduceShapes(u.shape,m),b=y.sizeFromShape(g),x=e.makeOutput(h,a.dtype);if(y.sizeFromShape(u.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;Hq(p,b,T)}if(d&&e.disposeData(l.dataId),s){let T=I.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var qq={kernelName:Ga,backendName:"wasm",setupFunc:Nxe,kernelFunc:Dxe};function mv(r){let e;function t(o){e=o.wasm.cwrap(r,null,["number","number","number","number","number"])}function n(o){let{backend:s,inputs:a,attrs:i}=o,{axis:p}=i,{x:u}=a,l=s.dataIdMap.get(u.dataId).id,m=l,c=u,{transposed:d,axes:f,inputWasTransposed:h}=Nn(u,p,s);if(h){let v=s.dataIdMap.get(d.dataId).id;v!==l&&(c=d,m=v)}let g=c.shape.slice(0,-1),b=s.makeOutput(g,"int32"),x=s.dataIdMap.get(b.dataId).id,T=y.sizeFromShape(b.shape),C=c.shape[f[0]];return e(m,Pe[c.dtype],T,C,x),h&&s.disposeData(d.dataId),b}return{kernelName:r,backendName:"wasm",setupFunc:t,kernelFunc:n}}var jq=mv(Ws);var Xq=mv(Us);var Yq=Ne(Io);var Zq=Ne(ko);var Qq=Ne(vo);var Jq=ft(wo,!1);var ej=Ne(So);var tj;function _xe(r){tj=r.wasm.cwrap(Ao,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Rxe(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:a,strides:i,pad:p,dimRoundingMode:u}=t,l=I.computePool2DInfo(o.shape,a,i,1,p,u),m=l.filterHeight,c=l.filterWidth,d=l.padInfo.top,f=l.padInfo.right,h=l.padInfo.bottom,g=l.padInfo.left,b=l.strideHeight,x=l.strideWidth,T=l.inChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);if(l.dilationWidth!==1||l.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${l.dilationHeight}, ${l.dilationWidth}].`);let C=n.makeOutput(l.outShape,"float32"),v=n.dataIdMap.get(C.dataId).id;return tj(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,b,x,T,v),C}var rj={kernelName:Ao,backendName:"wasm",setupFunc:_xe,kernelFunc:Rxe};var nj;function Mxe(r){nj=r.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Pxe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:p,dataFormat:u}=n,l=I.computePool3DInfo(o.shape,s,a,1,i,p,u),m=t.makeOutput(l.outShape,o.dtype);return nj(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(m.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),m}var oj={kernelName:Ks,backendName:"wasm",setupFunc:Mxe,kernelFunc:Pxe};var sj;function Fxe(r){sj=r.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Exe(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:p,dimRoundingMode:u}=n,l=I.computePool3DInfo(s.shape,a,i,1,p,u),m=t.makeOutput(s.shape,s.dtype);return sj(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(m.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left,l.filterDepth,l.filterHeight,l.filterWidth),m}var aj={kernelName:Xi,backendName:"wasm",setupFunc:Fxe,kernelFunc:Exe};function br(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=y.sizeFromShape(n.shape),a=y.inferFromImplicitShape(o,s);return y.assert(s===y.sizeFromShape(a),()=>`new shape: ${a}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var ij={kernelName:Js,backendName:"wasm",kernelFunc:br};var uj;function Lxe(r){uj=r.wasm.cwrap(No,null,["number","array","number","number","array","number","number","number","number"])}function Bxe(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let p=o.shape.length,u=s.shape.length,l=a?o.shape[p-2]:o.shape[p-1],m=i?s.shape[u-1]:s.shape[u-2],c=a?o.shape[p-1]:o.shape[p-2],d=i?s.shape[u-2]:s.shape[u-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=y.sizeFromShape(f),b=y.sizeFromShape(h),T=Rr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);y.assert(l===m,()=>`Error in matMul: inner shapes (${l}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let C=a?[g,l,c]:[g,c,l],v=i?[b,d,m]:[b,m,d],A=br({inputs:{x:o},backend:t,attrs:{shape:C}}),_=br({inputs:{x:s},backend:t,attrs:{shape:v}}),R=t.dataIdMap.get(A.dataId).id,M=t.dataIdMap.get(_.dataId).id,F=a?A.shape[2]:A.shape[1],O=i?_.shape[1]:_.shape[2],G=Math.max(g,b),W=t.makeOutput([G,F,O],A.dtype),U=t.dataIdMap.get(W.dataId).id,K=new Uint8Array(new Int32Array(A.shape).buffer),H=new Uint8Array(new Int32Array(_.shape).buffer);return uj(R,K,A.shape.length,M,H,_.shape.length,a,i,U),t.disposeData(A.dataId),t.disposeData(_.dataId),W.shape=T,W}var pj={kernelName:No,backendName:"wasm",setupFunc:Lxe,kernelFunc:Bxe};function La(r){let{inputs:{x:e},attrs:{begin:t,size:n},backend:o}=r,[s,a]=vt.parseSliceParams(e,t,n),i=vt.isSliceContinous(e.shape,s,a),p=o.readSync(e.dataId),u=o.makeOutput(a,e.dtype),l=y.computeStrides(e.shape),m=o.dataIdMap.get(u.dataId);if(i){let f=vt.computeFlatOffset(s,l);return e.dtype==="string"?m.stringBytes=p.slice(f,f+y.sizeFromShape(a)):o.typedArrayFromHeap(u).set(p.subarray(f,f+y.sizeFromShape(a))),u}if(e.dtype==="string"){let f=vm(p,s,a,e.shape,e.dtype);return m.stringBytes=f,u}let c=o.typedArrayFromHeap(u),d=e.shape.length;if(d===2)$xe(p,l[0],c,s,a);else if(d===3)Oxe(p,l[0],l[1],c,s,a);else if(d===4)zxe(p,l[0],l[1],l[2],c,s,a);else{let f=vm(p,s,a,e.shape,e.dtype);c.set(f)}return u}function $xe(r,e,t,n,o){let s=0,a=n[0],i=n[1],p=a+o[0];for(let u=a;u<p;u++){let l=u*e+i;t.set(r.subarray(l,l+o[1]),s),s+=o[1]}}function Oxe(r,e,t,n,o,s){let a=0,i=o[0],p=o[1],u=o[2],l=i+s[0],m=p+s[1];for(let c=i;c<l;c++)for(let d=p;d<m;d++){let f=c*e+d*t+u;n.set(r.subarray(f,f+s[2]),a),a+=s[2]}}function zxe(r,e,t,n,o,s,a){let i=0,p=s[0],u=s[1],l=s[2],m=p+a[0],c=u+a[1],d=l+a[2],f=s[3];for(let h=p;h<m;h++)for(let g=u;g<c;g++)for(let b=l;b<d;b++){let x=h*e+g*t+b*n+f;o.set(r.subarray(x,x+a[3]),i),i+=a[3]}}var lj={kernelName:ta,backendName:"wasm",kernelFunc:La};function Gxe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n,i=s.reduce((b,x)=>b*x),p=I.getReshaped(o.shape,s,i),u=I.getPermuted(p.length,s.length),l=I.getReshapedPermuted(o.shape,s,i),m=I.getSliceBeginCoords(a,s.length),c=I.getSliceSize(l,a,s.length),d=br({inputs:{x:o},backend:t,attrs:{shape:p}}),f=zs({inputs:{x:d},backend:t,attrs:{perm:u}}),h=br({inputs:{x:f},backend:t,attrs:{shape:l}}),g=La({inputs:{x:h},backend:t,attrs:{begin:m,size:c}});return t.disposeData(d.dataId),t.disposeData(f.dataId),t.disposeData(d.dataId),g}var mj={kernelName:Vs,backendName:"wasm",kernelFunc:Gxe};var cj;function Wxe(r){cj=r.wasm.cwrap(Wa,null,["number","number","boolean","number","number","number"])}function Uxe(r){let{backend:e,inputs:t,attrs:n}=r,{x:o,weights:s}=t,{size:a}=n,i=s.shape.reduce((m,c)=>m*c,1)!==0,p=o.shape.length===1?[a]:[o.shape[0],a],u=e.makeOutput(p,s.dtype);function l(m){return e.dataIdMap.get(m.dataId).id}return cj(l(o),a,i,l(s),Pe[s.dtype],l(u)),u}var dj={kernelName:Wa,backendName:"wasm",setupFunc:Wxe,kernelFunc:Uxe};function Kxe(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.typedArrayFromHeap(n),a=t.typedArrayFromHeap(o),i=I.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return t.makeOutput([i.length],"int32",void 0,new Int32Array(i))}var fj={kernelName:Yi,backendName:"wasm",kernelFunc:Kxe};function Gn(r){let{inputs:{x:e},attrs:{dtype:t},backend:n}=r,o=n.makeOutput(e.shape,t),s=n.typedArrayFromHeap(e);return n.typedArrayFromHeap(o).set(s),o}var hj={kernelName:Hn,backendName:"wasm",kernelFunc:Gn};var gj=Ne(Do);var bj;function Vxe(r){bj=r.wasm.cwrap(qn,null,["number","number","number","number"])}function Hxe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i=t.dataIdMap.get(o.dataId).id,p=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(p.dataId).id;return bj(i,s,a,u),p}var yj={kernelName:qn,backendName:"wasm",setupFunc:Vxe,kernelFunc:Hxe};function W2(r){let{inputs:e,backend:t}=r,n=y.parseAxisParam(r.attrs.axis,e[0].shape)[0],o=e.map(d=>d.shape);I.assertParamsConsistent(o,n);let s=I.computeOutShape(e.map(d=>d.shape),n),a=e.filter(d=>y.sizeFromShape(d.shape)>0);if(a.length===1)return qm({inputs:{x:a[0]},backend:t});let i=t.makeOutput(s,e[0].dtype);if(y.sizeFromShape(s)===0)return i;if(a[0].dtype==="string"){let d=a.map(T=>{let v=[-1,y.sizeFromShape(T.shape.slice(n))];return br({inputs:{x:T},backend:t,attrs:{shape:v}})}),f=d.map(T=>({vals:t.readSync(T.dataId),shape:T.shape}));s=I.computeOutShape(d.map(T=>T.shape),1);let h=d[0].shape[0]===1,g=Cm(f,s,e[0].dtype,h),b=I.computeOutShape(a.map(T=>T.shape),n);i.shape=b;let x=t.dataIdMap.get(i.dataId);return x.stringBytes=I.fromStringArrayToUint8(g),d.forEach(T=>t.disposeData(T.dataId)),i}let p=y.sizeFromShape(a[0].shape.slice(0,n)),u=0,l=a.map(d=>{let f=y.sizeFromShape(d.shape.slice(n));return u+=f,f}),m=a.map(d=>t.typedArrayFromHeap(d)),c=t.typedArrayFromHeap(i);for(let d=0;d<p;d++){let f=d*u;for(let h=0;h<m.length;h++){let g=l[h],b=d*g,x=m[h].subarray(b,b+g);c.set(x,f),f+=g}}return i}var xj={kernelName:Hs,backendName:"wasm",kernelFunc:W2};var Tj;function qxe(r){Tj=r.wasm.cwrap(_o,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function jxe(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:p,dilations:u,pad:l,dimRoundingMode:m,dataFormat:c}=t,d=I.convertConv2DDataFormat(c),f=I.computeConv2DInfo(o.shape,s.shape,p,u,l,m,!1,d),h=f.filterHeight,g=f.filterWidth,b=f.padInfo.top,x=f.padInfo.right,T=f.padInfo.bottom,C=f.padInfo.left,v=f.dilationHeight,A=f.dilationWidth,_=f.strideHeight,R=f.strideWidth,M=f.inChannels,F=f.outChannels,O=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let G=n.makeOutput(f.outShape,"float32"),W=n.dataIdMap.get(G.dataId).id;return Tj(a,o.shape[0],o.shape[1],o.shape[2],i,h,g,b,x,T,C,O,v,A,_,R,M,F,W),G}var Cj={kernelName:_o,backendName:"wasm",setupFunc:qxe,kernelFunc:jxe};var Ij;function Xxe(r){Ij=r.wasm.cwrap(Ro,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Yxe(r){let{backend:e,inputs:t,attrs:n}=r,{dy:o,filter:s}=t,{strides:a,pad:i,dataFormat:p,dimRoundingMode:u,inputShape:l}=n,m=1,c=I.convertConv2DDataFormat(p),d=I.computeConv2DInfo(l,s.shape,a,m,i,u,!1,c),{batchSize:f,filterHeight:h,filterWidth:g,inChannels:b,inHeight:x,inWidth:T,outChannels:C,outHeight:v,outWidth:A,strideHeight:_,strideWidth:R}=d,M=h-1-d.padInfo.top,F=g-1-d.padInfo.left,O=d.dataFormat==="channelsLast",G=y.computeStrides(d.inShape),W=y.computeStrides(o.shape),[U,K,H]=y.computeStrides(s.shape),X=G[0],j=O?G[1]:G[2],re=O?G[2]:1,ae=O?1:G[1],ie=W[0],me=O?W[1]:W[2],ue=O?W[2]:1,le=O?1:W[1],he=e.makeOutput(d.inShape,"float32"),Te=e.dataIdMap.get(he.dataId).id,Ae=e.dataIdMap.get(o.dataId).id,Oe=e.dataIdMap.get(s.dataId).id;return Ij(Ae,Oe,f,h,g,x,T,b,v,A,C,_,R,M,F,U,K,H,X,j,re,ae,ie,me,ue,le,Te),he}var kj={kernelName:Ro,backendName:"wasm",setupFunc:Xxe,kernelFunc:Yxe};var vj;function Zxe(r){vj=r.wasm.cwrap(Mo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Qxe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:p}=n;if(o.dtype!=="float32")throw new Error(`Tensor x must have dtype float32, got ${o.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=I.computeConv3DInfo(o.shape,s.shape,a,p,i),l=t.makeOutput(u.outShape,o.dtype);return vj(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(s.dataId).id,t.dataIdMap.get(l.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),l}var Sj={kernelName:Mo,backendName:"wasm",setupFunc:Zxe,kernelFunc:Qxe};var wj;function Jxe(r){wj=r.wasm.cwrap(Ua,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function eTe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:p}=n;if(o.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${o.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=I.computeConv3DInfo(o.shape,p,a,1,i),l=t.makeOutput(u.filterShape,s.dtype);return wj(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(s.dataId).id,t.dataIdMap.get(l.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),l}var Aj={kernelName:Ua,backendName:"wasm",setupFunc:Jxe,kernelFunc:eTe};var Nj;function tTe(r){Nj=r.wasm.cwrap(Ka,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function rTe(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:a,strides:i,inputShape:p}=n;if(o.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${o.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=I.computeConv3DInfo(p,s.shape,i,1,a),l=t.makeOutput(u.inShape,o.dtype);return Nj(t.dataIdMap.get(s.dataId).id,t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(l.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),l}var Dj={kernelName:Ka,backendName:"wasm",setupFunc:tTe,kernelFunc:rTe};var _j=Ne(Po);var Rj=Ne(Fo);var Mj=(t=>(t[t.bilinear=0]="bilinear",t[t.nearest=1]="nearest",t))(Mj||{}),Pj;function nTe(r){Pj=r.wasm.cwrap(Ha,null,["number","number","number","number","array","number","number","number","number","number"])}function oTe(r){let{backend:e,inputs:t,attrs:n}=r,{method:o,extrapolationValue:s,cropSize:a}=n,{image:i,boxes:p,boxInd:u}=t,l=p.shape[0],[m,c]=a,d=[l,m,c,i.shape[3]],f=e.dataIdMap.get(i.dataId),h;i.dtype!=="float32"&&(h=Gn({backend:e,inputs:{x:i},attrs:{dtype:"float32"}}),f=e.dataIdMap.get(h.dataId));let g=f.id,b=e.dataIdMap.get(p.dataId).id,x=e.dataIdMap.get(u.dataId).id,T=e.makeOutput(d,"float32"),C=e.dataIdMap.get(T.dataId).id,v=new Uint8Array(new Int32Array(i.shape).buffer);return Pj(g,b,x,l,v,m,c,Mj[o],s,C),h!=null&&e.disposeData(h.dataId),T}var Fj={kernelName:Ha,backendName:"wasm",setupFunc:nTe,kernelFunc:oTe};var Ej;function sTe(r){Ej=r.wasm.cwrap(Va,null,["number","number","number","number","number","number"])}function aTe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n,p=o.shape.length;y.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumprod does not support ${o.dtype} tensors in the WASM backend`);let u=I.getAxesPermutation([s],p),l=o;u!==null&&(l=zs({inputs:{x:o},attrs:{perm:u},backend:t}));let m=I.getInnerMostAxes(1,p)[0];I.assertAxesAreInnerMostDims("cumprod",[m],p);let c=t.makeOutput(l.shape,l.dtype),d=l.shape[m],f=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(c.dataId).id;Ej(f,a?1:0,i?1:0,d,h,Pe[o.dtype]);let g=c;if(u!==null){let b=I.getUndoAxesPermutation(u);g=zs({inputs:{x:c},attrs:{perm:b},backend:t}),t.disposeData(l.dataId),t.disposeData(c.dataId)}return g}var Lj={kernelName:Va,backendName:"wasm",setupFunc:sTe,kernelFunc:aTe};var Bj;function iTe(r){Bj=r.wasm.cwrap(Eo,null,["number","number","number","number","number","number"])}function uTe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n,p=o.shape.length;y.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumsum does not support ${o.dtype} tensors in the WASM backend`);let u=I.getAxesPermutation([s],p),l=o;u!==null&&(l=zs({inputs:{x:o},attrs:{perm:u},backend:t}));let m=I.getInnerMostAxes(1,p)[0];I.assertAxesAreInnerMostDims("cumsum",[m],p);let c=t.makeOutput(l.shape,l.dtype),d=l.shape[m],f=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(c.dataId).id;Bj(f,a?1:0,i?1:0,d,h,Pe[o.dtype]);let g=c;if(u!==null){let b=I.getUndoAxesPermutation(u);g=zs({inputs:{x:c},attrs:{perm:b},backend:t}),t.disposeData(l.dataId),t.disposeData(c.dataId)}return g}var $j={kernelName:Eo,backendName:"wasm",setupFunc:iTe,kernelFunc:uTe};var Oj;function pTe(r){Oj=r.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])}function lTe(r){let{backend:e,inputs:t,attrs:n}=r,{x:o,weights:s}=t,{size:a,binaryOutput:i}=n,p=s.shape.reduce((c,d)=>c*d,1)!==0,u=o.shape.length===1?[a]:[o.shape[0],a],l=e.makeOutput(u,s.dtype);function m(c){return e.dataIdMap.get(c.dataId).id}return Oj(m(o),new Uint8Array(new Int32Array(o.shape).buffer),o.shape.length,a,p,m(s),Pe[s.dtype],i,m(l)),l}var zj={kernelName:Zi,backendName:"wasm",setupFunc:pTe,kernelFunc:lTe};var Gj;function mTe(r){Gj=r.wasm.cwrap(qa,null,["number","number","number","array","number","array","array","number","number"])}function cTe(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n,i=o.shape[0],p=a==="NHWC"?o.shape[1]:o.shape[2],u=a==="NHWC"?o.shape[2]:o.shape[3],l=a==="NHWC"?o.shape[3]:o.shape[1],m=p*s,c=u*s,d=l/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=e.makeOutput(f,"float32"),b=e.dataIdMap.get(o.dataId).id,x=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),T=new Uint8Array(new Int32Array(f).buffer),C=new Uint8Array(new Int32Array(y.computeStrides(f)).buffer),v=e.dataIdMap.get(h.dataId).id;return Gj(b,s,a==="NHWC"?1:0,x,o.shape.length-1,T,C,f.length,v),h}var Wj={kernelName:qa,backendName:"wasm",setupFunc:mTe,kernelFunc:cTe};var Uj;function dTe(r){Uj=r.wasm.cwrap(Lo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function fTe(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:p,dilations:u,pad:l,dimRoundingMode:m}=t,c=u??[1,1],d=I.computeConv2DInfo(o.shape,s.shape,p,c,l,m,!0),f=d.filterHeight,h=d.filterWidth,g=d.padInfo.top,b=d.padInfo.right,x=d.padInfo.bottom,T=d.padInfo.left,C=d.dilationHeight,v=d.dilationWidth,A=d.strideHeight,_=d.strideWidth,R=d.inChannels,M=d.outChannels,F=d.padInfo.type==="SAME"?1:0;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let O=n.makeOutput(d.outShape,"float32"),G=n.dataIdMap.get(O.dataId).id;return Uj(a,o.shape[0],o.shape[1],o.shape[2],i,f,h,g,b,x,T,F,C,v,A,_,R,M,G),O}var Kj={kernelName:Lo,backendName:"wasm",setupFunc:dTe,kernelFunc:fTe};var Vj;function hTe(r){Vj=r.wasm.cwrap("Diag",null,["number","number","number","number"])}function gTe(r){let{inputs:e,backend:t}=r,{x:n}=e,o=y.sizeFromShape(n.shape),s=t.makeOutput([...n.shape,...n.shape],n.dtype);return Vj(t.dataIdMap.get(n.dataId).id,Pe[n.dtype],o,t.dataIdMap.get(s.dataId).id),s}var Hj={kernelName:Qi,backendName:"wasm",setupFunc:hTe,kernelFunc:gTe};var qj;function bTe(r){qj=r.wasm.cwrap(Bo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function yTe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:p}=n;if(o.dtype!==s.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${o.dtype} and ${s.dtype}`);let u=I.computeDilation2DInfo(o.shape,s.shape,a,i,"NHWC",p),l=t.makeOutput(u.outShape,o.dtype);return qj(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(s.dataId).id,t.dataIdMap.get(l.dataId).id,Pe[o.dtype],u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.filterHeight,u.filterWidth,u.padInfo.top,u.padInfo.left),l}var jj={kernelName:Bo,backendName:"wasm",setupFunc:bTe,kernelFunc:yTe};var Xj;function xTe(r){Xj=r.wasm.cwrap(eu,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function TTe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,dy:a}=e,{strides:i,pad:p,dilations:u}=n;if(o.dtype!==s.dtype||o.dtype!==a.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${o.dtype}, ${s.dtype}, and ${a.dtype}`);let l=I.computeDilation2DInfo(o.shape,s.shape,i,p,"NHWC",u),m=t.makeOutput(s.shape,s.dtype);return Xj(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(s.dataId).id,t.dataIdMap.get(a.dataId).id,t.dataIdMap.get(m.dataId).id,Pe[o.dtype],l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.filterHeight,l.filterWidth,l.padInfo.top,l.padInfo.left),m}var Yj={kernelName:eu,backendName:"wasm",setupFunc:xTe,kernelFunc:TTe};var Zj;function CTe(r){Zj=r.wasm.cwrap(Ji,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ITe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,dy:a}=e,{strides:i,pad:p,dilations:u}=n;if(o.dtype!==s.dtype||o.dtype!==a.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${o.dtype}, ${s.dtype}, and ${a.dtype}`);let l=I.computeDilation2DInfo(o.shape,s.shape,i,p,"NHWC",u),m=t.makeOutput(o.shape,o.dtype);return Zj(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(s.dataId).id,t.dataIdMap.get(a.dataId).id,t.dataIdMap.get(m.dataId).id,Pe[o.dtype],l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.filterHeight,l.filterWidth,l.padInfo.top,l.padInfo.left),m}var Qj={kernelName:Ji,backendName:"wasm",setupFunc:CTe,kernelFunc:ITe};var Jj=Ne(Oo);var e6;function kTe(r){e6=r.wasm.cwrap(ja,null,["number","number","number"])}function vTe(r){let{inputs:e,backend:t}=r,{dy:n,y:o}=e,s=t.makeOutput(o.shape,"float32"),a=i=>t.dataIdMap.get(i.dataId).id;return e6(a(o),a(n),a(s)),s}var t6={kernelName:ja,backendName:"wasm",setupFunc:kTe,kernelFunc:vTe};var STe=!1,r6=ft(Ya,STe,"bool");var n6=Ne(zo,"float32");function cv(r){let{inputs:e,attrs:t,backend:n}=r,{input:o}=e,{dim:s}=t,a=o.shape.length,i=o.shape.slice(),p=s;return s<0&&(y.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),p=a+s+1),i.splice(p,0,1),br({inputs:{x:o},backend:n,attrs:{shape:i}})}var o6={kernelName:qs,backendName:"wasm",kernelFunc:cv};var s6=Ne(Go,"float32");function U2(r){let{attrs:{shape:e,value:t,dtype:n},backend:o}=r,s=o.makeOutput(e,n);return o.typedArrayFromHeap(s).fill(t),s}var a6={kernelName:tu,backendName:"wasm",kernelFunc:U2};var i6;function wTe(r){i6=r.wasm.cwrap(Za,null,["number","number","number","number","number","number"])}function ATe(r){let{inputs:e,backend:t}=r,{image:n}=e,o=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,[i,p,u,l]=n.shape;return i6(s,i,p,u,l,a),o}var u6={kernelName:Za,backendName:"wasm",kernelFunc:ATe,setupFunc:wTe};var p6=Ne(Wo);var NTe=!1,l6=ft(Uo,NTe);var m6;function DTe(r){m6=r.wasm.cwrap(Ko,null,["number","number","number","number","number","number","number"])}function _Te(r){let{backend:e,inputs:t,attrs:n}=r,{varianceEpsilon:o}=n,{x:s,mean:a,variance:i,offset:p,scale:u}=t,l=e.dataIdMap.get(s.dataId).id,m=e.dataIdMap.get(a.dataId).id,c=e.dataIdMap.get(i.dataId).id,d=p!=null?e.dataIdMap.get(p.dataId).id:0,f=u!=null?e.dataIdMap.get(u.dataId).id:0,h=e.makeOutput(s.shape,s.dtype);if(y.sizeFromShape(s.shape)===0)return h;let g=e.dataIdMap.get(h.dataId).id;return m6(l,m,c,d,f,o,g),h}var c6={kernelName:Ko,backendName:"wasm",setupFunc:DTe,kernelFunc:_Te};var d6;function RTe(r){d6=r.wasm.cwrap(ia,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function MTe(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dilations:l,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=t,h=I.computeConv2DInfo(o.shape,s.shape,p,l,u,c),g=Hm[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let b=n.dataIdMap.get(o.dataId).id,x=n.dataIdMap.get(s.dataId).id,T=h.outChannels,C=0;if(a!=null){let ue=n.dataIdMap.get(a.dataId);if(ue.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${ue.shape.length}.`);if(ue.shape[0]!==T)throw new Error(`FusedConv2D bias shape (${ue.shape}) does not match the number of output channels (${T})`);C=ue.id}let v=h.filterHeight,A=h.filterWidth,_=h.padInfo.top,R=h.padInfo.right,M=h.padInfo.bottom,F=h.padInfo.left,O=h.dilationHeight,G=h.dilationWidth,W=h.strideHeight,U=h.strideWidth,K=h.inChannels,H=h.padInfo.type==="SAME"?1:0,X=h.batchSize,j=h.inHeight,re=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let ae=n.makeOutput(h.outShape,"float32"),ie=n.dataIdMap.get(ae.dataId).id,me=i==null?0:n.dataIdMap.get(i.dataId).id;return d6(b,X,j,re,x,v,A,C,_,R,M,F,H,O,G,W,U,K,T,g,me,f||0,ie),ae}var f6={kernelName:ia,backendName:"wasm",setupFunc:RTe,kernelFunc:MTe};var h6;function PTe(r){h6=r.wasm.cwrap(ua,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function FTe(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dilations:l,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=t,h=I.computeConv2DInfo(o.shape,s.shape,p,l,u,c,!0),g=Hm[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let b=n.dataIdMap.get(o.dataId).id,x=n.dataIdMap.get(s.dataId).id,T=h.outChannels,C=0;if(a!=null){let ue=n.dataIdMap.get(a.dataId);if(ue.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${ue.shape.length}.`);if(ue.shape[0]!==T)throw new Error(`FusedDepthwiseConv2D bias shape (${ue.shape}) does not match the number of output channels (${T})`);C=ue.id}let v=h.filterHeight,A=h.filterWidth,_=h.padInfo.top,R=h.padInfo.right,M=h.padInfo.bottom,F=h.padInfo.left,O=h.dilationHeight,G=h.dilationWidth,W=h.strideHeight,U=h.strideWidth,K=h.inChannels,H=h.padInfo.type==="SAME"?1:0,X=h.batchSize,j=h.inHeight,re=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let ae=n.makeOutput(h.outShape,"float32"),ie=n.dataIdMap.get(ae.dataId).id,me=i==null?0:n.dataIdMap.get(i.dataId).id;return h6(b,X,j,re,x,v,A,C,_,R,M,F,H,O,G,W,U,K,T,g,me,f||0,ie),ae}var g6={kernelName:ua,backendName:"wasm",setupFunc:PTe,kernelFunc:FTe};var b6;function ETe(r){b6=r.wasm.cwrap(Qa,null,["number","number","number","number","number","number","array","number"])}function LTe(r){let{backend:e,inputs:t}=r,{params:n,indices:o}=t,[s,a,i,p]=Xy.prepareAndValidate(n,o),u=e.makeOutput(s,n.dtype);if(a===0)return u;let l=o.shape,m=l[l.length-1],d=e.dataIdMap.get(n.dataId).id,h=e.dataIdMap.get(o.dataId).id,g=new Uint8Array(new Int32Array(p).buffer),b=e.dataIdMap.get(u.dataId).id;return b6(d,Pe[n.dtype],h,a,m,i,g,b),u}var y6={kernelName:Qa,backendName:"wasm",setupFunc:ETe,kernelFunc:LTe};var x6;function BTe(r){x6=r.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function $Te(r){let{backend:e,inputs:t,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n,p=y.parseAxisParam(a,o.shape)[0],u=e.readSync(s.dataId),l=o.shape[p];for(let M=0;M<u.length;++M){let F=u[M];y.assert(F<=l-1&&F>=0,()=>`GatherV2: the index value ${F} is not in [0, ${l-1}]`)}let m=I.segment_util.collectGatherOpShapeInfo(o,s,p,i),c=br({inputs:{x:o},attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]},backend:e}),d=y.sizeFromShape(s.shape),f=br({inputs:{x:s},attrs:{shape:[m.batchSize,d/m.batchSize]},backend:e}),h=[m.batchSize,m.outerSize,d/m.batchSize,m.sliceSize],g=e.makeOutput(h,o.dtype);if(y.sizeFromShape(o.shape)===0)return g;let b=c.shape.length-1,T=e.dataIdMap.get(c.dataId).id,v=e.dataIdMap.get(f.dataId).id,A=e.dataIdMap.get(g.dataId).id,_=new Uint8Array(new Int32Array(y.computeStrides(c.shape)).buffer),R=new Uint8Array(new Int32Array(y.computeStrides(h)).buffer);return x6(T,Pe[o.dtype],_,b,v,m.batchSize,R,A),e.disposeData(c.dataId),e.disposeData(f.dataId),g.shape=m.outputShape,g}var T6={kernelName:js,backendName:"wasm",setupFunc:BTe,kernelFunc:$Te};var OTe=!1,C6=ft(Ja,OTe,"bool");var zTe=!1,I6=ft(Vo,zTe,"bool");var k6=Ne(Ho,"bool");var v6=Ne(qo,"bool");var S6=Ne(jo,"bool");var w6;function GTe(r){w6=r.wasm.cwrap(Xo,null,["number","number","number","number"])}function WTe(r){let{inputs:{x:e},attrs:{alpha:t},backend:n}=r,o=n.dataIdMap.get(e.dataId).id,s=n.makeOutput(e.shape,"float32");if(y.sizeFromShape(e.shape)!==0){let a=n.dataIdMap.get(s.dataId).id;w6(o,Pe[e.dtype],t,a)}return s}var A6={kernelName:Xo,backendName:"wasm",setupFunc:GTe,kernelFunc:WTe};var UTe=!1,N6=ft(ei,UTe,"bool");var KTe=!1,D6=ft(ti,KTe,"bool");var _6;function VTe(r){_6=r.wasm.cwrap(ri,null,["number","number","number","number"])}function HTe(r){let{attrs:e,backend:t}=r,{start:n,stop:o,num:s}=e,a=Math.floor(s),i=t.makeOutput([a],"float32");return _6(t.dataIdMap.get(i.dataId).id,n,o,a),i}var R6={kernelName:ri,backendName:"wasm",setupFunc:VTe,kernelFunc:HTe};var M6=Ne(Yo);var P6=Ne(Zo);var qTe=!1,F6=ft(ni,qTe,"bool");var E6=Ne(oi);var jTe=!1,L6=ft(si,jTe,"bool");var XTe=!1,B6=ft(x_,XTe,"bool");var $6;function YTe(r){$6=r.wasm.cwrap(Qo,null,["number","number","number","number","number","number","number"])}function ZTe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:p}=n;if(o.dtype!=="float32")throw new Error("LRN error: x must have dtype float32");let u=t.makeOutput(o.shape,o.dtype);return $6(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(u.dataId).id,o.shape[3],s,a,i,p),u}var O6={kernelName:Qo,backendName:"wasm",setupFunc:YTe,kernelFunc:ZTe};var z6;function QTe(r){z6=r.wasm.cwrap(ai,null,["number","number","number","number","number","number","number","number","number"])}function JTe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:p,alpha:u,beta:l}=n;if(o.dtype!=="float32"||s.dtype!=="float32"||a.dtype!=="float32")throw new Error("LRNGrad error: x, y, and dy must have dtype float32");let m=t.makeOutput(o.shape,o.dtype);return z6(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(s.dataId).id,t.dataIdMap.get(a.dataId).id,t.dataIdMap.get(m.dataId).id,a.shape[3],i,p,u,l),m}var G6={kernelName:ai,backendName:"wasm",setupFunc:QTe,kernelFunc:JTe};var W6;function eCe(r){W6=r.wasm.cwrap(Jo,null,["number","number","number","number"])}function tCe(r){let{backend:e,inputs:t,attrs:n}=r,{reductionIndices:o,keepDims:s}=n,{x:a}=t,p=e.dataIdMap.get(a.dataId).id,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=Nn(a,o,e);if(d){let T=e.dataIdMap.get(l.dataId).id;u=l,p=T}let f=u.shape.length;I.assertAxesAreInnerMostDims("max",m,f);let[h,g]=I.computeOutAndReduceShapes(u.shape,m),b=y.sizeFromShape(g),x=e.makeOutput(h,a.dtype);if(y.sizeFromShape(u.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;W6(p,Pe[a.dtype],b,T)}if(d&&e.disposeData(l.dataId),s){let T=I.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var U6={kernelName:Jo,backendName:"wasm",setupFunc:eCe,kernelFunc:tCe};var rCe=!1,K6=ft(es,rCe);var V6;function nCe(r){V6=r.wasm.cwrap(ts,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function oCe(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id;y.assert(o.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${o.dtype}.`);let{filterSize:a,strides:i,pad:p,dimRoundingMode:u}=t,l=I.computePool2DInfo(o.shape,a,i,1,p,u),m=l.filterHeight,c=l.filterWidth,d=l.padInfo.top,f=l.padInfo.right,h=l.padInfo.bottom,g=l.padInfo.left,b=l.dilationHeight,x=l.dilationWidth,T=l.strideHeight,C=l.strideWidth,v=l.inChannels,A=l.outChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);let _=n.makeOutput(l.outShape,"float32"),R=n.dataIdMap.get(_.dataId).id;return V6(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,b,x,T,C,v,A,R),_}var H6={kernelName:ts,backendName:"wasm",setupFunc:nCe,kernelFunc:oCe};var q6;function sCe(r){q6=r.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function aCe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:p,dataFormat:u}=n,l=I.computePool3DInfo(o.shape,s,a,1,i,p,u),m=t.makeOutput(l.outShape,o.dtype);return q6(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(m.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),m}var j6={kernelName:Xs,backendName:"wasm",setupFunc:sCe,kernelFunc:aCe};var X6;function iCe(r){X6=r.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function uCe(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:p,dimRoundingMode:u}=n,l=I.computePool3DInfo(s.shape,a,i,1,p,u),m=t.makeOutput(s.shape,s.dtype);return X6(t.dataIdMap.get(s.dataId).id,t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(m.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),m}var Y6={kernelName:ru,backendName:"wasm",setupFunc:iCe,kernelFunc:uCe};var Z6;function pCe(r){Z6=r.wasm.cwrap(rs,null,["number, number, number"])}function lCe(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,p=i,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=Nn(a,o,e),f=m;if(d){let C=e.dataIdMap.get(l.dataId).id;C!==i&&(u=l,p=C,f=I.getInnerMostAxes(f.length,u.shape.length))}I.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[h,g]=I.computeOutAndReduceShapes(u.shape,f),b=y.sizeFromShape(g),x=u;u.dtype!=="float32"&&(x=Gn({backend:e,inputs:{x:u},attrs:{dtype:"float32"}}),p=e.dataIdMap.get(x.dataId).id);let T=e.makeOutput(h,"float32");if(y.sizeFromShape(u.shape)!==0){let C=e.dataIdMap.get(T.dataId).id;Z6(p,b,C)}if(d&&e.disposeData(l.dataId),s){let C=I.expandShapeToKeepDim(T.shape,c);T.shape=C}return u.dtype!=="float32"&&e.disposeData(x.dataId),T}var Q6={kernelName:rs,backendName:"wasm",setupFunc:pCe,kernelFunc:lCe};var J6;function mCe(r){J6=r.wasm.cwrap(ns,null,["number","number","number","number"])}function cCe(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,p=i,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=Nn(a,o,e);if(d){let T=e.dataIdMap.get(l.dataId).id;T!==i&&(u=l,p=T)}let f=u.shape.length;I.assertAxesAreInnerMostDims("min",m,f);let[h,g]=I.computeOutAndReduceShapes(u.shape,m),b=y.sizeFromShape(g),x=e.makeOutput(h,u.dtype);if(y.sizeFromShape(u.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;J6(p,Pe[a.dtype],b,T)}if(d&&e.disposeData(l.dataId),s){let T=I.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var e8={kernelName:ns,backendName:"wasm",setupFunc:mCe,kernelFunc:cCe};var dCe=!1,t8=ft(os,dCe);var r8=(t=>(t[t.reflect=0]="reflect",t[t.symmetric=1]="symmetric",t))(r8||{}),n8;function fCe(r){n8=r.wasm.cwrap(ss,null,["number","array","number","number","array","array","number","number"])}function hCe(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,mode:o}}=r,s=n.map((f,h)=>f[0]+e.shape[h]+f[1]),a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(s,e.dtype),p=t.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(e.shape).buffer),l=n.map(f=>f[0]),m=n.map(f=>f[1]),c=new Uint8Array(new Int32Array(l).buffer),d=new Uint8Array(new Int32Array(m).buffer);return n8(a,u,e.shape.length,Pe[e.dtype],c,d,r8[o],p),i}var o8={kernelName:ss,backendName:"wasm",kernelFunc:hCe,setupFunc:fCe};var s8;function gCe(r){s8=r.wasm.cwrap(As,null,["number","number","number","number"])}function K2(r){let{backend:e,inputs:{logits:t},attrs:{dim:n}}=r,o=e.dataIdMap.get(t.dataId).id,s=e.makeOutput(t.shape,t.dtype),a=e.dataIdMap.get(s.dataId).id,i=t.shape[n],p=y.sizeFromShape(t.shape)/i;return y.sizeFromShape(s.shape)===0||s8(o,a,i,p),s}var a8={kernelName:As,backendName:"wasm",setupFunc:gCe,kernelFunc:K2};var i8;function bCe(r){i8=r.wasm.cwrap(ui,null,["number","number","number","number","number","number"])}function yCe(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n;if(o.dtype!=="float32")throw new Error(`Tensor logits must have dtype float32, got ${o.dtype}`);let p=i?o:K2({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),[u,l]=p.shape,m=t.makeOutput([u,s],"int32");return i8(t.dataIdMap.get(p.dataId).id,u,l,s,a,t.dataIdMap.get(m.dataId).id),i||t.disposeData(p.dataId),m}var u8={kernelName:ui,backendName:"wasm",setupFunc:bCe,kernelFunc:yCe};var xCe=!0,p8=ft(as,xCe);var l8=Ne(Ys);function ph(r,e){let t=new Int32Array(r.wasm.HEAPU8.buffer,e,4),n=t[0],o=t[1],s=t[2],a=t[3];return r.wasm._free(e),{pSelectedIndices:n,selectedSize:o,pSelectedScores:s,pValidOutputs:a}}var m8;function TCe(r){m8=r.wasm.cwrap(li,"number",["number","number","number","number","number"])}function CCe(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a}=n,{boxes:i,scores:p}=t,u=e.dataIdMap.get(i.dataId).id,l=e.dataIdMap.get(p.dataId).id,m=m8(u,l,s,o,a),{pSelectedIndices:c,selectedSize:d,pSelectedScores:f,pValidOutputs:h}=ph(e,m);return e.wasm._free(f),e.wasm._free(h),e.makeOutput([d],"int32",c)}var c8={kernelName:li,backendName:"wasm",setupFunc:TCe,kernelFunc:CCe};var d8;function ICe(r){d8=r.wasm.cwrap(Nu,"number",["number","number","number","number","number","bool"])}function kCe(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,padToMaxOutputSize:i}=n,{boxes:p,scores:u}=t,l=e.dataIdMap.get(p.dataId).id,m=e.dataIdMap.get(u.dataId).id,c=d8(l,m,s,o,a,i),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=ph(e,c);e.wasm._free(h);let b=e.makeOutput([f],"int32",d),x=e.makeOutput([],"int32",g);return[b,x]}var f8={kernelName:Nu,backendName:"wasm",setupFunc:ICe,kernelFunc:kCe};var h8;function vCe(r){h8=r.wasm.cwrap(mi,"number",["number","number","number","number","number","number"])}function SCe(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,softNmsSigma:i}=n,{boxes:p,scores:u}=t,l=e.dataIdMap.get(p.dataId).id,m=e.dataIdMap.get(u.dataId).id,c=h8(l,m,s,o,a,i),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=ph(e,c);e.wasm._free(g);let b=e.makeOutput([f],"int32",d),x=e.makeOutput([f],"float32",h);return[b,x]}var g8={kernelName:mi,backendName:"wasm",setupFunc:vCe,kernelFunc:SCe};var wCe=!1,b8=ft(pi,wCe,"bool");var y8;function ACe(r){y8=r.wasm.cwrap(is,null,["number","number","number","number","number"])}function NCe(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{dtype:s,depth:a,onValue:i,offValue:p}=n,u=t.makeOutput([...o.shape,a],s),l=t.dataIdMap.get(u.dataId).id,c=t.dataIdMap.get(o.dataId).id;return y8(c,a,i,p,l),u}var x8={kernelName:is,backendName:"wasm",setupFunc:ACe,kernelFunc:NCe};function DCe(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(1),n}var T8={kernelName:Zs,backendName:"wasm",kernelFunc:DCe};function _Ce(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return cv({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(l=>{y.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],p=e.map(l=>{let m=cv({inputs:{input:l},backend:t,attrs:{dim:o}});return i.push(m),m}),u=W2({inputs:p,backend:t,attrs:{axis:o}});return i.forEach(l=>t.disposeData(l.dataId)),u}var C8={kernelName:Qs,backendName:"wasm",kernelFunc:_Ce};var I8;function RCe(r){I8=r.wasm.cwrap(us,null,["number","array","number","number","array","array","number","number"])}function MCe(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,constantValue:o}}=r,s=n.map((h,g)=>h[0]+e.shape[g]+h[1]);if(y.sizeFromShape(e.shape)===0)return U2({backend:t,attrs:{shape:s,value:o,dtype:e.dtype}});let a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(s,e.dtype),u=t.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(e.shape).buffer),m=n.map(h=>h[0]),c=n.map(h=>h[1]),d=new Uint8Array(new Int32Array(m).buffer),f=new Uint8Array(new Int32Array(c).buffer);return I8(a,l,e.shape.length,Pe[e.dtype],d,f,o,u),i}var dv={kernelName:us,backendName:"wasm",kernelFunc:MCe,setupFunc:RCe};var PCe=!1,k8=ft(ps,PCe);var v8;function FCe(r){v8=r.wasm.cwrap(ls,null,["number","number","number"])}function ECe(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,i=s,p=n,u=p;p.dtype!=="float32"&&(u=Gn({backend:t,inputs:{x:n},attrs:{dtype:"float32"}}),i=t.dataIdMap.get(u.dataId).id);let l=t.makeOutput(n.shape,"float32"),m=t.dataIdMap.get(l.dataId).id;return v8(i,a,m),p.dtype!=="float32"&&t.disposeData(u.dataId),l}var S8={kernelName:ls,backendName:"wasm",setupFunc:FCe,kernelFunc:ECe};var w8;function LCe(r){w8=r.wasm.cwrap(ms,null,["number","number","number","number"])}function BCe(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,p=i,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=Nn(a,o,e),f=m;if(d){let T=e.dataIdMap.get(l.dataId).id;T!==i&&(u=l,p=T,f=I.getInnerMostAxes(f.length,u.shape.length))}I.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[h,g]=I.computeOutAndReduceShapes(u.shape,f),b=y.sizeFromShape(g),x=e.makeOutput(h,u.dtype);if(y.sizeFromShape(u.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;w8(p,b,Pe[x.dtype],T)}if(d&&e.disposeData(l.dataId),s){let T=I.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var A8={kernelName:ms,backendName:"wasm",setupFunc:LCe,kernelFunc:BCe};var $Ce=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=km(n,o,s,a),p=e.makeOutput([i.length],a);return e.typedArrayFromHeap(p).set(i),p},N8={kernelName:nu,backendName:"wasm",kernelFunc:$Ce};var OCe=!0,D8=ft($o,OCe);var _8=Ne(cs);var R8=Ne(ds);var M8=Ne(gs);var P8;function zCe(r){P8=r.wasm.cwrap(hs,null,["number","number","number","number","number","number","number","number","number","number"])}function GCe(r){let{backend:e,inputs:t,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[p,u]=i,[l,m,c,d]=o.shape,f=[l,p,u,d],h=e.dataIdMap.get(o.dataId),g;h.dtype!=="float32"&&(g=Gn({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),h=e.dataIdMap.get(g.dataId));let b=h.id,x=e.makeOutput(f,"float32");if(y.sizeFromShape(o.shape)===0)return x;let T=e.dataIdMap.get(x.dataId).id;return P8(b,l,m,c,d,p,u,s?1:0,a?1:0,T),g!=null&&e.disposeData(g.dataId),x}var F8={kernelName:hs,backendName:"wasm",setupFunc:zCe,kernelFunc:GCe};var E8;function WCe(r){E8=r.wasm.cwrap(di,null,["number","number","number","array","array","boolean"])}function UCe(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=t.makeOutput(o.shape,"float32"),p=t.dataIdMap.get(o.dataId),u;return p.dtype!=="float32"&&(u=Gn({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),p=t.dataIdMap.get(u.dataId)),E8(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(s.dataId).id,t.dataIdMap.get(i.dataId).id,new Uint8Array(new Int32Array(o.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),a),u!=null&&t.disposeData(u.dataId),i}var L8={kernelName:di,backendName:"wasm",setupFunc:WCe,kernelFunc:UCe};var B8;function KCe(r){B8=r.wasm.cwrap(fs,null,["number","number","number","number","number","number","number","number","number","number"])}function VCe(r){let{backend:e,inputs:t,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[p,u]=i,[l,m,c,d]=o.shape,f=[l,p,u,d],h=e.makeOutput(f,"float32");if(y.sizeFromShape(o.shape)===0)return h;let g=e.dataIdMap.get(o.dataId),b;g.dtype!=="float32"&&(b=Gn({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),g=e.dataIdMap.get(b.dataId));let x=g.id,T=e.dataIdMap.get(h.dataId).id;return B8(x,l,m,c,d,p,u,s?1:0,a?1:0,T),b!=null&&e.disposeData(b.dataId),h}var $8={kernelName:fs,backendName:"wasm",setupFunc:KCe,kernelFunc:VCe};var O8;function HCe(r){O8=r.wasm.cwrap(ci,null,["number","number","number","array","array","boolean"])}function qCe(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=t.makeOutput(o.shape,"float32"),p=t.dataIdMap.get(o.dataId),u;return p.dtype!=="float32"&&(u=Gn({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),p=t.dataIdMap.get(u.dataId)),O8(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(s.dataId).id,t.dataIdMap.get(i.dataId).id,new Uint8Array(new Int32Array(o.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),a),u!=null&&t.disposeData(u.dataId),i}var z8={kernelName:ci,backendName:"wasm",setupFunc:HCe,kernelFunc:qCe};var G8;function jCe(r){G8=r.wasm.cwrap(bs,null,["number","array","number","array","number","number"])}function XCe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,a=y.parseAxisParam(s,o.shape);if(o.shape.length===0)return qm({inputs:{x:o},backend:t});let i=t.makeOutput(o.shape,o.dtype),p=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(a).buffer),m=new Uint8Array(new Int32Array(o.shape).buffer);G8(p,l,a.length,m,o.shape.length,u);let c=br({inputs:{x:i},attrs:{shape:o.shape},backend:t});return t.disposeData(i.dataId),c}var W8={kernelName:bs,backendName:"wasm",kernelFunc:XCe,setupFunc:jCe};var U8;function YCe(r){U8=r.wasm.cwrap(Ci,null,["number","number","number","number","number","number","number","number","array","number","number"])}function ZCe(r){let{inputs:e,backend:t,attrs:n}=r,{image:o}=e,{radians:s,fillValue:a,center:i}=n,p=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(o.dataId).id,l=t.dataIdMap.get(p.dataId).id,[m,c,d,f]=o.shape,[h,g]=I.getImageCenter(i,c,d),b=a===0,x=255,T=typeof a=="number"?[a,a,a,b?0:x]:[...a,x],C=new Uint8Array(new Int32Array(T).buffer);return U8(u,m,c,d,f,s,h,g,C,T.length,l),p}var K8={kernelName:Ci,backendName:"wasm",kernelFunc:ZCe,setupFunc:YCe};var V8=Ne(ys);var H8=Ne(xs);var q8;function QCe(r){q8=r.wasm.cwrap(fi,null,["number","number","number","number","number","number","array","number","number"])}function JCe(r){let{backend:e,inputs:t,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,i=e.makeOutput(a,s.dtype);if(y.sizeFromShape(a)===0)return i;let{sliceRank:p,numUpdates:u,sliceSize:l,strides:m,outputSize:c}=qp.calculateShapes(s,o,a),f=e.dataIdMap.get(o.dataId).id,g=e.dataIdMap.get(s.dataId).id,b=new Uint8Array(new Int32Array(m).buffer),x=e.dataIdMap.get(i.dataId).id;return q8(f,g,Pe[s.dtype],p,u,l,b,c,x),i}var j8={kernelName:fi,backendName:"wasm",setupFunc:QCe,kernelFunc:JCe};var X8;function eIe(r){X8=r.wasm.cwrap(hi,null,["number","number","number","number","number","number","bool","number"])}function tIe(r){let{inputs:e,backend:t,attrs:n}=r,{sortedSequence:o,values:s}=e,{side:a}=n;if(o.dtype!==s.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${o.dtype} and ${s.dtype}`);let i=t.makeOutput(s.shape,"int32");function p(u){return t.dataIdMap.get(u.dataId).id}return X8(p(o),p(s),o.shape[0],o.shape[1],s.shape[1],Pe[o.dtype],a==="left",p(i)),i}var Y8={kernelName:hi,backendName:"wasm",setupFunc:eIe,kernelFunc:tIe};var Z8;function rIe(r){Z8=r.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function nIe(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(s.dataId).id,u=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(u.dataId).id,m=n.shape.length,c=o.shape.length,d=m===0||m>1||c===1?1:y.sizeFromShape(o.shape.slice(1));return Z8(a,i,p,d,l),u}var Q8={kernelName:ea,backendName:"wasm",kernelFunc:nIe,setupFunc:rIe};var J8=Ne(Ts);var e5;function oIe(r){e5=r.wasm.cwrap(ks,null,["number","number"])}function sIe(r){let{backend:e,inputs:{x:t}}=r,n=e.dataIdMap.get(t.dataId).id,o=e.makeOutput(t.shape,t.dtype),s=e.dataIdMap.get(o.dataId).id;return y.sizeFromShape(o.shape)===0||e5(n,s),o}var t5={kernelName:"Sigmoid",backendName:"wasm",setupFunc:oIe,kernelFunc:sIe};var r5=Ne(Is);var n5=Ne(Cs);var o5=Ne(vs);function aIe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n,i=y.sizeFromShape(s),p=[[0,0]];p.push(...a);for(let A=1+s.length;A<o.shape.length;++A)p.push([0,0]);let u=dv.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:p,constantValue:0}}),l=I.getReshaped(u.shape,s,i,!1),m=I.getPermuted(l.length,s.length,!1),c=I.getReshapedPermuted(u.shape,s,i,!1),h=br({inputs:{x:u},backend:t,attrs:{shape:l}}),x=zs({inputs:{x:h},backend:t,attrs:{perm:m}}),v=br({inputs:{x},backend:t,attrs:{shape:c}});return t.disposeData(u.dataId),t.disposeData(h.dataId),t.disposeData(x.dataId),v}var s5={kernelName:ra,backendName:"wasm",kernelFunc:aIe};var a5;function iIe(r){a5=r.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function uIe(r){let{backend:e,inputs:t}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=t,i=n.shape[0],p=n.shape[1],u=e.readSync(s.dataId)[0],l=[i+u,p],m=e.dataIdMap.get(n.dataId).id,c=e.dataIdMap.get(o.dataId).id,d=e.dataIdMap.get(a.dataId).id,f=e.makeOutput(l,n.dtype),h=e.dataIdMap.get(f.dataId).id,g=e.makeOutput(l.slice(0,1),o.dtype),b=e.dataIdMap.get(g.dataId).id,x=e.makeOutput([u],"bool"),T=e.dataIdMap.get(x.dataId).id,C=e.makeOutput([i],n.dtype),v=e.dataIdMap.get(C.dataId).id,A=e.makeOutput([4],"int32"),_=e.dataIdMap.get(A.dataId).id,R=a5(m,c,Pe[o.dtype],i,u,p,d,h,b,T,v,_),M=e.readSync(A.dataId),F;switch(M[0]){case 1:{F=I.getSparseFillEmptyRowsIndicesDenseShapeMismatch(M[1]);break}case 2:{F=I.getSparseFillEmptyRowsNegativeIndexErrorMessage(M[1],M[2]);break}case 3:F=I.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(M[1],M[2],M[3]);break;default:F=""}if(e.disposeData(A.dataId),F)throw e.disposeData(f.dataId),e.disposeData(g.dataId),e.disposeData(x.dataId),e.disposeData(C.dataId),new Error(F);let O=f,G=g;return R!==l[0]&&(O=La({inputs:{x:f},attrs:{begin:0,size:[R,p]},backend:e}),G=La({inputs:{x:g},attrs:{begin:0,size:R},backend:e}),e.disposeData(f.dataId),e.disposeData(g.dataId)),[O,G,x,C]}var i5={kernelName:Sp,backendName:"wasm",setupFunc:iIe,kernelFunc:uIe};var u5;function pIe(r){u5=r.wasm.cwrap(_u,null,["number","number","number","number","number","number","number"])}function lIe(r){let{backend:e,inputs:t}=r,{inputIndices:n,inputShape:o,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=e.dataIdMap.get(n.dataId).id,i=e.dataIdMap.get(o.dataId).id,p=e.dataIdMap.get(s.dataId).id,u=n.shape[0],l=y.sizeFromShape(s.shape),m=e.makeOutput([u,l],n.dtype),c=e.dataIdMap.get(m.dataId).id,d=e.makeOutput([l],s.dtype),f=e.dataIdMap.get(d.dataId).id,h=e.makeOutput([3],"int32"),g=e.dataIdMap.get(h.dataId).id;u5(a,i,p,u,c,f,g);let b=e.readSync(h.dataId),x;switch(b[0]){case 0:{x=I.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(b[1],b[2]);break}case 1:{x=I.getSparseReshapeNegativeOutputDimErrorMessage(b[1],b[2]);break}case 2:x=I.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let T=Array.from(e.readSync(o.dataId)),C=Array.from(e.readSync(d.dataId));x=I.getSparseReshapeInputOutputMultipleErrorMessage(T,C);break}case 4:{let T=Array.from(e.readSync(o.dataId)),C=Array.from(e.readSync(d.dataId));x=I.getSparseReshapeInputOutputMismatchErrorMessage(T,C);break}default:x=""}if(e.disposeData(h.dataId),x)throw e.disposeData(m.dataId),e.disposeData(d.dataId),new Error(x);return[m,d]}var p5={kernelName:_u,backendName:"wasm",setupFunc:pIe,kernelFunc:lIe};var l5;function fv(r){l5=r.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function hv(r,e){let{backend:t,inputs:n}=r,{data:o,indices:s,segmentIds:a}=n,i=s.shape[0],p=t.readSync(a.dataId,i-1,i)[0],l=i>0?p+1:0;if(l<0)throw new Error(I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=o.shape.slice();m[0]=l;let c=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(s.dataId).id,f=t.dataIdMap.get(a.dataId).id,h=t.makeOutput(m,o.dtype),g=t.dataIdMap.get(h.dataId).id,b=t.makeOutput([4],"int32"),x=t.dataIdMap.get(b.dataId).id;l5(c,Pe[o.dtype],o.shape[0],d,f,g,x,e,0);let T=t.readSync(b.dataId),C;switch(T[0]){case 0:{C=I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{C=I.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:C=I.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(T[1],T[2]);break;case 3:C=I.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(T[1],T[2],T[3]);break;default:C=""}if(t.disposeData(b.dataId),C)throw t.disposeData(h.dataId),new Error(C);return h}function mIe(r){return hv(r,!0)}var m5={kernelName:wp,backendName:"wasm",setupFunc:fv,kernelFunc:mIe};function cIe(r){return hv(r,!1)}var c5={kernelName:Ap,backendName:"wasm",setupFunc:fv,kernelFunc:cIe};var d5;function dIe(r){d5=r.wasm.cwrap(bi,null,["number","number","number","number","number","number","number","number","array","number","number"])}function fIe(r){let{backend:e,inputs:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=t,{outputShape:i}=n,p=e.makeOutput(i,a.dtype);if(y.sizeFromShape(i)===0)return p;let{sliceRank:u,numUpdates:l,sliceSize:m,strides:c,outputSize:d}=I.calculateShapes(s,o,i),f=e.dataIdMap.get(o.dataId).id,h=e.dataIdMap.get(s.dataId).id,g=e.dataIdMap.get(a.dataId).id,b=new Uint8Array(new Int32Array(c).buffer),x=e.dataIdMap.get(p.dataId).id;return d5(f,h,s.shape.length,g,Pe[a.dtype],u,l,m,b,d,x),p}var f5={kernelName:bi,backendName:"wasm",setupFunc:dIe,kernelFunc:fIe};function hIe(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=t,i=y.parseAxisParam(a,o.shape)[0],p=I.prepareSplitSize(o,s,i),u=new Array(o.shape.length).fill(0),l=o.shape.slice();return p.map(m=>{let c=[...l];c[i]=m;let d=La({inputs:{x:o},attrs:{begin:u,size:c},backend:n});return u[i]+=m,d})}var h5={kernelName:na,backendName:"wasm",kernelFunc:hIe};var g5=Ne(Ss);var b5=Ne(ou);var gIe=!0,y5=ft(Ns,gIe);var x5;function bIe(r){x5=r.wasm.cwrap(Xn,null,["number","number","number","number"])}function yIe(r){let{backend:e,inputs:t,attrs:n}=r,{alpha:o}=n,{x:s}=t,a=e.dataIdMap.get(s.dataId).id,i=e.makeOutput(s.shape,s.dtype),p=e.dataIdMap.get(i.dataId).id;return x5(a,o,Pe[s.dtype],p),i}var T5={kernelName:Xn,backendName:"wasm",setupFunc:bIe,kernelFunc:yIe};var C5;function xIe(r){C5=r.wasm.cwrap(yi,null,["number","array","number","array","array","array","array","array","number","number"])}function TIe(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i,beginMask:p,endMask:u,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:x,end:T,strides:C}=vt.sliceInfo(o.shape,s,a,i,p,u,l,m,c),v;if(h)v=br({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let A=vt.computeOutShape(x,T,C),_=La({inputs:{x:o},backend:e,attrs:{begin:x,size:A}});v=br({inputs:{x:_},backend:e,attrs:{shape:f}}),e.disposeData(_.dataId)}else{let A=e.makeOutput(d,"float32"),_=e.dataIdMap.get(o.dataId).id,R=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),M=new Uint8Array(new Int32Array(x).buffer),F=new Uint8Array(new Int32Array(T).buffer),O=new Uint8Array(new Int32Array(C).buffer),G=new Uint8Array(new Int32Array(d).buffer),W=new Uint8Array(new Int32Array(y.computeStrides(d)).buffer),U=e.dataIdMap.get(A.dataId).id;C5(_,R,o.shape.length,M,F,O,G,W,d.length,U),v=br({inputs:{x:A},backend:e,attrs:{shape:f}}),e.disposeData(A.dataId)}return v}var I5={kernelName:yi,backendName:"wasm",setupFunc:xIe,kernelFunc:TIe};function CIe(r){let{backend:e,inputs:t,attrs:n}=r,{data:o,dataSplits:s}=t,{separator:a,nGramWidths:i,leftPad:p,rightPad:u,padWidth:l,preserveShortSequences:m}=n,c=e.readSync(o.dataId),d=e.readSync(s.dataId),[f,h]=Sm(c,d,a,i,p,u,l,m),g=e.makeOutput([f.length],"string"),b=e.dataIdMap.get(g.dataId);b.stringBytes=f;let x=e.makeOutput(s.shape,"int32");return e.typedArrayFromHeap(x).set(h),[g,x]}var k5={kernelName:su,backendName:"wasm",kernelFunc:CIe};function IIe(r){let{backend:e,inputs:t,attrs:n}=r,{input:o,delimiter:s}=t,{skipEmpty:a}=n,i=e.readSync(o.dataId),p=e.readSync(s.dataId),[u,l,m]=wm(i,p[0],a),c=l.length,d=e.makeOutput([c,2],"int32");e.typedArrayFromHeap(d).set(u);let h=e.makeOutput([c],"string"),g=e.dataIdMap.get(h.dataId);g.stringBytes=l;let b=e.makeOutput([2],"int32");return e.typedArrayFromHeap(b).set(m),[d,h,b]}var v5={kernelName:Np,backendName:"wasm",kernelFunc:IIe};function kIe(r){let{backend:e,inputs:t,attrs:n}=r,{input:o}=t,{numBuckets:s}=n,a=e.readSync(o.dataId),i=Am(a,s),p=e.makeOutput(o.shape,"int32");return e.typedArrayFromHeap(p).set(i),p}var S5={kernelName:Dp,backendName:"wasm",kernelFunc:kIe};var vIe=!0,w5=ft(Ds,vIe);var A5;function SIe(r){A5=r.wasm.cwrap(ws,null,["number","number","number","number"])}function wIe(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,p=i,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=Nn(a,o,e),f=m;if(d){let T=e.dataIdMap.get(l.dataId).id;T!==i&&(u=l,p=T,f=I.getInnerMostAxes(f.length,u.shape.length))}I.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[h,g]=I.computeOutAndReduceShapes(u.shape,f),b=y.sizeFromShape(g),x=e.makeOutput(h,u.dtype);if(y.sizeFromShape(u.shape)!==0){let T=e.dataIdMap.get(x.dataId).id;A5(p,b,Pe[x.dtype],T)}if(d&&e.disposeData(l.dataId),s){let T=I.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var N5={kernelName:ws,backendName:"wasm",setupFunc:SIe,kernelFunc:wIe};var D5=Ne(_s);var _5=Ne(Rs);var R5;function AIe(r){R5=r.wasm.cwrap(Du,null,["number","number","number","number","number","number","array","number","number","number"])}function NIe(r){let{backend:e,inputs:t,attrs:n}=r,{tensor:o,indices:s,updates:a}=t,{}=n,i=e.makeOutput(o.shape,o.dtype);if(y.sizeFromShape(o.shape)===0)return i;let{sliceRank:p,numUpdates:u,sliceSize:l,strides:m,outputSize:c}=qp.calculateShapes(a,s,o.shape),f=e.dataIdMap.get(s.dataId).id,g=e.dataIdMap.get(a.dataId).id,x=e.dataIdMap.get(o.dataId).id,T=new Uint8Array(new Int32Array(m).buffer),C=e.dataIdMap.get(i.dataId).id;return R5(f,g,Pe[a.dtype],p,u,l,T,c,C,x),i}var M5={kernelName:Du,backendName:"wasm",setupFunc:AIe,kernelFunc:NIe};var P5;function DIe(r){P5=r.wasm.cwrap(_n,null,["number","array","number","array","number","number"])}function _Ie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,s=t.dataIdMap.get(o.dataId).id,{reps:a}=n,i=new Array(o.shape.length);for(let c=0;c<i.length;c++)i[c]=o.shape[c]*a[c];let p=new Uint8Array(new Int32Array(o.shape).buffer),u=new Uint8Array(new Int32Array(i).buffer),l=t.makeOutput(i,o.dtype),m=t.dataIdMap.get(l.dataId).id;return P5(s,p,o.shape.length,u,i.length,Pe[l.dtype],m),l}var F5={kernelName:_n,backendName:"wasm",setupFunc:DIe,kernelFunc:_Ie};var E5;function RIe(r){E5=r.wasm.cwrap(xi,null,["number","array","number","number","number","bool","number","number"])}var MIe=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{k:o,sorted:s}=t,a=e.dataIdMap.get(n.dataId).id,i=new Uint8Array(new Int32Array(n.shape).buffer),p=n.shape.slice();p[p.length-1]=o;let u=e.makeOutput(p,n.dtype),l=e.dataIdMap.get(u.dataId).id,m=e.makeOutput(p,"int32"),c=e.dataIdMap.get(m.dataId).id;return E5(a,i,n.shape.length,Pe[n.dtype],o,s,l,c),[u,m]},L5={kernelName:xi,backendName:"wasm",setupFunc:RIe,kernelFunc:MIe};var B5;function PIe(r){B5=r.wasm.cwrap(Ti,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function FIe(r){let{backend:e,inputs:t,attrs:n}=r,{image:o,transforms:s}=t,{interpolation:a,fillMode:i,fillValue:p,outputShape:u}=n,[l,m,c,d]=o.shape,[f,h]=u??[m,c],g=[l,f,h,d],b=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),x=new Uint8Array(new Int32Array(y.computeStrides(g)).buffer),T=e.makeOutput(g,o.dtype),C=e.dataIdMap.get(T.dataId).id,A=e.dataIdMap.get(o.dataId).id,R=e.dataIdMap.get(s.dataId).id,M=a==="nearest"?1:2,F;switch(i){case"constant":F=1;break;case"reflect":F=2;break;case"wrap":F=3;break;case"nearest":F=4;break;default:F=1;break}return B5(A,R,s.shape[0]>1,l,f,h,d,c,m,b,o.shape.length-1,x,g.length-1,M,F,p,C),T}var $5={kernelName:Ti,backendName:"wasm",setupFunc:PIe,kernelFunc:FIe};function EIe(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e,{outputValues:a,outputShape:i,indices:p}=Nm(n.readSync(s.dataId),o,s.shape,s.dtype);return[n.makeOutput(i,s.dtype,void 0,a),n.makeOutput([p.length],"int32",void 0,p)]}var O5={kernelName:_p,backendName:"wasm",kernelFunc:EIe};function LIe(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape[s],i=o.shape.length,p=new Array(i-1),u=0;for(let d=0;d<i;d++)d!==s&&(p[u++]=o.shape[d]);let l=new Array(a),m=new Array(i).fill(0),c=o.shape.slice();c[s]=1;for(let d=0;d<l.length;d++)m[s]=d,l[d]=La({inputs:{x:o},attrs:{begin:m,size:c},backend:t});return l.map(({dataId:d,dtype:f})=>({dataId:d,dtype:f,shape:p}))}var z5={kernelName:oa,backendName:"wasm",kernelFunc:LIe};function BIe(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(0),n}var G5={kernelName:sa,backendName:"wasm",kernelFunc:BIe};var $Ie=[Fq,Eq,Lq,Bq,$q,zq,Vq,qq,jq,Xq,Yq,Zq,Qq,Jq,ej,rj,oj,aj,pj,mj,dj,fj,hj,gj,yj,xj,Cj,kj,Sj,Aj,Dj,_j,Rj,Fj,Lj,$j,zj,Wj,Kj,Hj,jj,Yj,Qj,Jj,t6,r6,n6,o6,s6,a6,u6,p6,l6,c6,f6,g6,y6,T6,C6,I6,Gq,k6,v6,S6,A6,N6,D6,R6,P6,M6,F6,E6,L6,B6,O6,G6,U6,K6,H6,j6,Y6,Q6,e8,t8,o8,u8,p8,l8,c8,f8,g8,b8,x8,T8,C8,dv,k8,S8,A8,N8,D8,_8,R8,M8,ij,F8,L8,$8,z8,W8,K8,V8,H8,j8,Y8,Q8,J8,t5,r5,n5,lj,a8,o5,s5,i5,p5,m5,c5,f5,h5,g5,b5,y5,T5,I5,k5,v5,S5,w5,N5,D5,_5,M5,F5,L5,$5,Uq,O5,z5,G5];for(let r of $Ie)Ru(r);var V2=L();V2.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch{return!1}});V2.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(V2.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var Q2=hl(V5());var H5=`var WasmBackendModuleThreadedSimd = (() => {
  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;
  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;
  return (
function(WasmBackendModuleThreadedSimd) {
  WasmBackendModuleThreadedSimd = WasmBackendModuleThreadedSimd || {};

function GROWABLE_HEAP_I8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP8}function GROWABLE_HEAP_U8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU8}function GROWABLE_HEAP_I16(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP16}function GROWABLE_HEAP_I32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP32}function GROWABLE_HEAP_U32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU32}function GROWABLE_HEAP_F32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPF32}function GROWABLE_HEAP_F64(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPF64}var Module=typeof WasmBackendModuleThreadedSimd!="undefined"?WasmBackendModuleThreadedSimd:{};var readyPromiseResolve,readyPromiseReject;Module["ready"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var beforeListeners;if(typeof process!=="undefined"&&process.listeners){beforeListeners={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")}}var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram="./this.program";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window=="object";var ENVIRONMENT_IS_WORKER=typeof importScripts=="function";var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";var ENVIRONMENT_IS_PTHREAD=Module["ENVIRONMENT_IS_PTHREAD"]||false;var scriptDirectory="";function locateFile(path){if(Module["locateFile"]){return Module["locateFile"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err("exiting due to exception: "+toLog)}if(ENVIRONMENT_IS_NODE){var fs=require("fs");var nodePath=require("path");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+"/"}else{scriptDirectory=__dirname+"/"}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:"utf8")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})};if(process["argv"].length>1){thisProgram=process["argv"][1].replace(/\\/g,"/")}arguments_=process["argv"].slice(2);process["on"]("uncaughtException",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process["on"]("unhandledRejection",function(reason){throw reason});quit_=(status,toThrow)=>{if(keepRuntimeAlive()){process["exitCode"]=status;throw toThrow}logExceptionOnExit(toThrow);process["exit"](status)};Module["inspect"]=function(){return"[Emscripten Module object]"};let nodeWorkerThreads;try{nodeWorkerThreads=require("worker_threads")}catch(e){console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?');throw e}global.Worker=nodeWorkerThreads.Worker}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!="undefined"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf("blob:")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,"").lastIndexOf("/")+1)}else{scriptDirectory=""}if(!ENVIRONMENT_IS_NODE){read_=url=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}if(ENVIRONMENT_IS_NODE){if(typeof performance=="undefined"){global.performance=require("perf_hooks").performance}}var defaultPrint=console.log.bind(console);var defaultPrintErr=console.warn.bind(console);if(ENVIRONMENT_IS_NODE){defaultPrint=str=>fs.writeSync(1,str+"
");defaultPrintErr=str=>fs.writeSync(2,str+"
")}var out=Module["print"]||defaultPrint;var err=Module["printErr"]||defaultPrintErr;Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module["arguments"])arguments_=Module["arguments"];if(Module["thisProgram"])thisProgram=Module["thisProgram"];if(Module["quit"])quit_=Module["quit"];var POINTER_SIZE=4;var Atomics_load=Atomics.load;var Atomics_store=Atomics.store;var Atomics_compareExchange=Atomics.compareExchange;var wasmBinary;if(Module["wasmBinary"])wasmBinary=Module["wasmBinary"];var noExitRuntime=Module["noExitRuntime"]||true;if(typeof WebAssembly!="object"){abort("no native wasm support detected")}var wasmMemory;var wasmModule;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var UTF8Decoder=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.buffer instanceof SharedArrayBuffer?heapOrArray.slice(idx,endPtr):heapOrArray.subarray(idx,endPtr))}var str="";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(GROWABLE_HEAP_U8(),ptr,maxBytesToRead):""}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,GROWABLE_HEAP_U8(),outPtr,maxBytesToWrite)}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;if(ENVIRONMENT_IS_PTHREAD){buffer=Module["buffer"]}function updateGlobalBufferAndViews(buf){buffer=buf;Module["HEAP8"]=HEAP8=new Int8Array(buf);Module["HEAP16"]=HEAP16=new Int16Array(buf);Module["HEAP32"]=HEAP32=new Int32Array(buf);Module["HEAPU8"]=HEAPU8=new Uint8Array(buf);Module["HEAPU16"]=HEAPU16=new Uint16Array(buf);Module["HEAPU32"]=HEAPU32=new Uint32Array(buf);Module["HEAPF32"]=HEAPF32=new Float32Array(buf);Module["HEAPF64"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module["INITIAL_MEMORY"]||16777216;if(ENVIRONMENT_IS_PTHREAD){wasmMemory=Module["wasmMemory"];buffer=Module["buffer"]}else{if(Module["wasmMemory"]){wasmMemory=Module["wasmMemory"]}else{wasmMemory=new WebAssembly.Memory({"initial":INITIAL_MEMORY/65536,"maximum":2147483648/65536,"shared":true});if(!(wasmMemory.buffer instanceof SharedArrayBuffer)){err("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag");if(ENVIRONMENT_IS_NODE){err("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)")}throw Error("bad memory")}}}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime}function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(ENVIRONMENT_IS_PTHREAD)return;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(ENVIRONMENT_IS_PTHREAD)return;if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module["onAbort"]){Module["onAbort"](what)}what="Aborted("+what+")";err(what);ABORT=true;EXITSTATUS=1;what+=". Build with -sASSERTIONS for more info.";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix="data:application/octet-stream;base64,";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith("file://")}var wasmBinaryFile;wasmBinaryFile="tfjs-backend-wasm-threaded-simd.wasm";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw"both async and sync fetching of the wasm failed"}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch=="function"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){if(!response["ok"]){throw"failed to load wasm binary file at '"+wasmBinaryFile+"'"}return response["arrayBuffer"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={"env":asmLibraryArg,"wasi_snapshot_preview1":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module["asm"]=exports;registerTLSInit(Module["asm"]["_emscripten_tls_init"]);wasmTable=Module["asm"]["__indirect_function_table"];addOnInit(Module["asm"]["__wasm_call_ctors"]);wasmModule=module;if(!ENVIRONMENT_IS_PTHREAD){var numWorkersToLoad=PThread.unusedWorkers.length;PThread.unusedWorkers.forEach(function(w){PThread.loadWasmModuleToWorker(w,function(){if(!--numWorkersToLoad)removeRunDependency("wasm-instantiate")})})}}if(!ENVIRONMENT_IS_PTHREAD){addRunDependency("wasm-instantiate")}function receiveInstantiationResult(result){receiveInstance(result["instance"],result["module"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err("failed to asynchronously prepare wasm: "+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming=="function"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch=="function"){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err("wasm streaming compile failed: "+reason);err("falling back to ArrayBuffer instantiation");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module["instantiateWasm"]){try{var exports=Module["instantiateWasm"](info,receiveInstance);return exports}catch(e){err("Module.instantiateWasm callback failed with error: "+e);readyPromiseReject(e)}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;var ASM_CONSTS={};function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}function killThread(pthread_ptr){var worker=PThread.pthreads[pthread_ptr];delete PThread.pthreads[pthread_ptr];worker.terminate();__emscripten_thread_free_data(pthread_ptr);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker),1);worker.pthread_ptr=0}function cancelThread(pthread_ptr){var worker=PThread.pthreads[pthread_ptr];worker.postMessage({"cmd":"cancel"})}function cleanupThread(pthread_ptr){var worker=PThread.pthreads[pthread_ptr];assert(worker);PThread.returnWorkerToPool(worker)}function spawnThread(threadParams){var worker=PThread.getNewWorker();if(!worker){return 6}PThread.runningWorkers.push(worker);PThread.pthreads[threadParams.pthread_ptr]=worker;worker.pthread_ptr=threadParams.pthread_ptr;var msg={"cmd":"run","start_routine":threadParams.startRoutine,"arg":threadParams.arg,"pthread_ptr":threadParams.pthread_ptr};worker.runPthread=()=>{if(ENVIRONMENT_IS_NODE){worker.ref()}worker.postMessage(msg,threadParams.transferList);delete worker.runPthread};if(worker.loaded){worker.runPthread()}return 0}var SYSCALLS={varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=GROWABLE_HEAP_I32()[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret}};function _proc_exit(code){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(1,1,code);EXITSTATUS=code;if(!keepRuntimeAlive()){PThread.terminateAllThreads();if(Module["onExit"])Module["onExit"](code);ABORT=true}quit_(code,new ExitStatus(code))}function exitJS(status,implicit){EXITSTATUS=status;if(!implicit){if(ENVIRONMENT_IS_PTHREAD){exitOnMainThread(status);throw"unwind"}else{}}_proc_exit(status)}var _exit=exitJS;function handleException(e){if(e instanceof ExitStatus||e=="unwind"){return EXITSTATUS}quit_(1,e)}var PThread={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){if(ENVIRONMENT_IS_PTHREAD){PThread.initWorker()}else{PThread.initMainThread()}},initMainThread:function(){var pthreadPoolSize=8;while(pthreadPoolSize--){PThread.allocateUnusedWorker()}},initWorker:function(){noExitRuntime=false},setExitStatus:function(status){EXITSTATUS=status},terminateAllThreads:function(){for(var worker of Object.values(PThread.pthreads)){PThread.returnWorkerToPool(worker)}for(var worker of PThread.unusedWorkers){worker.terminate()}PThread.unusedWorkers=[]},returnWorkerToPool:function(worker){var pthread_ptr=worker.pthread_ptr;delete PThread.pthreads[pthread_ptr];PThread.unusedWorkers.push(worker);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker),1);worker.pthread_ptr=0;if(ENVIRONMENT_IS_NODE){worker.unref()}__emscripten_thread_free_data(pthread_ptr)},receiveObjectTransfer:function(data){},threadInitTLS:function(){PThread.tlsInitFunctions.forEach(f=>f())},loadWasmModuleToWorker:function(worker,onFinishedLoading){worker.onmessage=e=>{var d=e["data"];var cmd=d["cmd"];if(worker.pthread_ptr)PThread.currentProxiedOperationCallerThread=worker.pthread_ptr;if(d["targetThread"]&&d["targetThread"]!=_pthread_self()){var targetWorker=PThread.pthreads[d.targetThread];if(targetWorker){targetWorker.postMessage(d,d["transferList"])}else{err('Internal error! Worker sent a message "'+cmd+'" to target pthread '+d["targetThread"]+", but that thread no longer exists!")}PThread.currentProxiedOperationCallerThread=undefined;return}if(cmd==="processProxyingQueue"){executeNotifiedProxyingQueue(d["queue"])}else if(cmd==="spawnThread"){spawnThread(d)}else if(cmd==="cleanupThread"){cleanupThread(d["thread"])}else if(cmd==="killThread"){killThread(d["thread"])}else if(cmd==="cancelThread"){cancelThread(d["thread"])}else if(cmd==="loaded"){worker.loaded=true;if(ENVIRONMENT_IS_NODE){worker.unref()}if(onFinishedLoading)onFinishedLoading(worker);if(worker.runPthread){worker.runPthread()}}else if(cmd==="print"){out("Thread "+d["threadId"]+": "+d["text"])}else if(cmd==="printErr"){err("Thread "+d["threadId"]+": "+d["text"])}else if(cmd==="alert"){alert("Thread "+d["threadId"]+": "+d["text"])}else if(d.target==="setimmediate"){worker.postMessage(d)}else if(cmd==="callHandler"){Module[d["handler"]](...d["args"])}else if(cmd){err("worker sent an unknown command "+cmd)}PThread.currentProxiedOperationCallerThread=undefined};worker.onerror=e=>{var message="worker sent an error!";err(message+" "+e.filename+":"+e.lineno+": "+e.message);throw e};if(ENVIRONMENT_IS_NODE){worker.on("message",function(data){worker.onmessage({data:data})});worker.on("error",function(e){worker.onerror(e)});worker.on("detachedExit",function(){})}var handlers=[];var knownHandlers=["onExit","onAbort","print","printErr"];for(var handler of knownHandlers){if(Module.hasOwnProperty(handler)){handlers.push(handler)}}worker.postMessage({"cmd":"load","handlers":handlers,"urlOrBlob":Module["mainScriptUrlOrBlob"]||_scriptDir,"wasmMemory":wasmMemory,"wasmModule":wasmModule})},allocateUnusedWorker:function(){var worker;var pthreadMainJs=locateFile("tfjs-backend-wasm-threaded-simd.worker.js");worker=new Worker(pthreadMainJs);PThread.unusedWorkers.push(worker)},getNewWorker:function(){if(PThread.unusedWorkers.length==0){PThread.allocateUnusedWorker();PThread.loadWasmModuleToWorker(PThread.unusedWorkers[0])}return PThread.unusedWorkers.pop()}};Module["PThread"]=PThread;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function establishStackSpace(){var pthread_ptr=_pthread_self();var stackTop=GROWABLE_HEAP_I32()[pthread_ptr+52>>2];var stackSize=GROWABLE_HEAP_I32()[pthread_ptr+56>>2];var stackMax=stackTop-stackSize;_emscripten_stack_set_limits(stackTop,stackMax);stackRestore(stackTop)}Module["establishStackSpace"]=establishStackSpace;function exitOnMainThread(returnCode){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(2,0,returnCode);try{_exit(returnCode)}catch(e){handleException(e)}}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function invokeEntryPoint(ptr,arg){var result=getWasmTableEntry(ptr)(arg);if(keepRuntimeAlive()){PThread.setExitStatus(result)}else{__emscripten_thread_exit(result)}}Module["invokeEntryPoint"]=invokeEntryPoint;function registerTLSInit(tlsInitFunc){PThread.tlsInitFunctions.push(tlsInitFunc)}function ___emscripten_init_main_thread_js(tb){__emscripten_thread_init(tb,!ENVIRONMENT_IS_WORKER,1,!ENVIRONMENT_IS_WEB);PThread.threadInitTLS()}function ___emscripten_thread_cleanup(thread){if(!ENVIRONMENT_IS_PTHREAD)cleanupThread(thread);else postMessage({"cmd":"cleanupThread","thread":thread})}function pthreadCreateProxied(pthread_ptr,attr,startRoutine,arg){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(3,1,pthread_ptr,attr,startRoutine,arg);return ___pthread_create_js(pthread_ptr,attr,startRoutine,arg)}function ___pthread_create_js(pthread_ptr,attr,startRoutine,arg){if(typeof SharedArrayBuffer=="undefined"){err("Current environment does not support SharedArrayBuffer, pthreads are not available!");return 6}var transferList=[];var error=0;if(ENVIRONMENT_IS_PTHREAD&&(transferList.length===0||error)){return pthreadCreateProxied(pthread_ptr,attr,startRoutine,arg)}if(error)return error;var threadParams={startRoutine:startRoutine,pthread_ptr:pthread_ptr,arg:arg,transferList:transferList};if(ENVIRONMENT_IS_PTHREAD){threadParams.cmd="spawnThread";postMessage(threadParams,transferList);return 0}return spawnThread(threadParams)}function __emscripten_default_pthread_stack_size(){return 65536}var nowIsMonotonic=true;function __emscripten_get_now_is_monotonic(){return nowIsMonotonic}function executeNotifiedProxyingQueue(queue){Atomics.store(GROWABLE_HEAP_I32(),queue>>2,1);if(_pthread_self()){__emscripten_proxy_execute_task_queue(queue)}Atomics.compareExchange(GROWABLE_HEAP_I32(),queue>>2,1,0)}Module["executeNotifiedProxyingQueue"]=executeNotifiedProxyingQueue;function __emscripten_notify_task_queue(targetThreadId,currThreadId,mainThreadId,queue){if(targetThreadId==currThreadId){setTimeout(()=>executeNotifiedProxyingQueue(queue))}else if(ENVIRONMENT_IS_PTHREAD){postMessage({"targetThread":targetThreadId,"cmd":"processProxyingQueue","queue":queue})}else{var worker=PThread.pthreads[targetThreadId];if(!worker){return}worker.postMessage({"cmd":"processProxyingQueue","queue":queue})}return 1}function __emscripten_set_offscreencanvas_size(target,width,height){return-1}function _abort(){abort("")}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;if(ENVIRONMENT_IS_NODE)text="warning: "+text;err(text)}}function _emscripten_check_blocking_allowed(){if(ENVIRONMENT_IS_NODE)return;if(ENVIRONMENT_IS_WORKER)return;warnOnce("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function _emscripten_date_now(){return Date.now()}function getHeapMax(){return 2147483648}function _emscripten_get_heap_max(){return getHeapMax()}var _emscripten_get_now;if(ENVIRONMENT_IS_NODE){_emscripten_get_now=()=>{var t=process["hrtime"]();return t[0]*1e3+t[1]/1e6}}else _emscripten_get_now=()=>performance.timeOrigin+performance.now();function _emscripten_memcpy_big(dest,src,num){GROWABLE_HEAP_U8().copyWithin(dest,src,src+num)}function _emscripten_num_logical_cores(){if(ENVIRONMENT_IS_NODE)return require("os").cpus().length;return navigator["hardwareConcurrency"]}function withStackSave(f){var stack=stackSave();var ret=f();stackRestore(stack);return ret}function _emscripten_proxy_to_main_thread_js(index,sync){var numCallArgs=arguments.length-2;var outerArgs=arguments;return withStackSave(()=>{var serializedNumCallArgs=numCallArgs;var args=stackAlloc(serializedNumCallArgs*8);var b=args>>3;for(var i=0;i<numCallArgs;i++){var arg=outerArgs[2+i];GROWABLE_HEAP_F64()[b+i]=arg}return _emscripten_run_in_main_runtime_thread_js(index,serializedNumCallArgs,args,sync)})}var _emscripten_receive_on_main_thread_js_callArgs=[];function _emscripten_receive_on_main_thread_js(index,numCallArgs,args){_emscripten_receive_on_main_thread_js_callArgs.length=numCallArgs;var b=args>>3;for(var i=0;i<numCallArgs;i++){_emscripten_receive_on_main_thread_js_callArgs[i]=GROWABLE_HEAP_F64()[b+i]}var isEmAsmConst=index<0;var func=!isEmAsmConst?proxiedFunctionTable[index]:ASM_CONSTS[-index-1];return func.apply(null,_emscripten_receive_on_main_thread_js_callArgs)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=GROWABLE_HEAP_U8().length;requestedSize=requestedSize>>>0;if(requestedSize<=oldSize){return false}var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}function _emscripten_unwind_to_js_event_loop(){throw"unwind"}function _fd_close(fd){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(4,1,fd);return 52}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(5,1,fd,offset_low,offset_high,whence,newOffset);return 70}var printCharBuffers=[null,[],[]];function printChar(stream,curr){var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}function _fd_write(fd,iov,iovcnt,pnum){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(6,1,fd,iov,iovcnt,pnum);var num=0;for(var i=0;i<iovcnt;i++){var ptr=GROWABLE_HEAP_U32()[iov>>2];var len=GROWABLE_HEAP_U32()[iov+4>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,GROWABLE_HEAP_U8()[ptr+j])}num+=len}GROWABLE_HEAP_U32()[pnum>>2]=num;return 0}function getCFunc(ident){var func=Module["_"+ident];return func}function writeArrayToMemory(array,buffer){GROWABLE_HEAP_I8().set(array,buffer)}function ccall(ident,returnType,argTypes,args,opts){var toC={"string":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},"array":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType==="string"){return UTF8ToString(ret)}if(returnType==="boolean")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(type=>type==="number"||type==="boolean");var numericRet=returnType!=="string";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}PThread.init();var proxiedFunctionTable=[null,_proc_exit,exitOnMainThread,pthreadCreateProxied,_fd_close,_fd_seek,_fd_write];var asmLibraryArg={"__emscripten_init_main_thread_js":___emscripten_init_main_thread_js,"__emscripten_thread_cleanup":___emscripten_thread_cleanup,"__pthread_create_js":___pthread_create_js,"_emscripten_default_pthread_stack_size":__emscripten_default_pthread_stack_size,"_emscripten_get_now_is_monotonic":__emscripten_get_now_is_monotonic,"_emscripten_notify_task_queue":__emscripten_notify_task_queue,"_emscripten_set_offscreencanvas_size":__emscripten_set_offscreencanvas_size,"abort":_abort,"emscripten_check_blocking_allowed":_emscripten_check_blocking_allowed,"emscripten_date_now":_emscripten_date_now,"emscripten_get_heap_max":_emscripten_get_heap_max,"emscripten_get_now":_emscripten_get_now,"emscripten_memcpy_big":_emscripten_memcpy_big,"emscripten_num_logical_cores":_emscripten_num_logical_cores,"emscripten_receive_on_main_thread_js":_emscripten_receive_on_main_thread_js,"emscripten_resize_heap":_emscripten_resize_heap,"emscripten_unwind_to_js_event_loop":_emscripten_unwind_to_js_event_loop,"exit":_exit,"fd_close":_fd_close,"fd_seek":_fd_seek,"fd_write":_fd_write,"memory":wasmMemory||Module["wasmMemory"]};var asm=createWasm();var ___wasm_call_ctors=Module["___wasm_call_ctors"]=function(){return(___wasm_call_ctors=Module["___wasm_call_ctors"]=Module["asm"]["__wasm_call_ctors"]).apply(null,arguments)};var _init=Module["_init"]=function(){return(_init=Module["_init"]=Module["asm"]["init"]).apply(null,arguments)};var _init_with_threads_count=Module["_init_with_threads_count"]=function(){return(_init_with_threads_count=Module["_init_with_threads_count"]=Module["asm"]["init_with_threads_count"]).apply(null,arguments)};var _get_threads_count=Module["_get_threads_count"]=function(){return(_get_threads_count=Module["_get_threads_count"]=Module["asm"]["get_threads_count"]).apply(null,arguments)};var _register_tensor=Module["_register_tensor"]=function(){return(_register_tensor=Module["_register_tensor"]=Module["asm"]["register_tensor"]).apply(null,arguments)};var _dispose_data=Module["_dispose_data"]=function(){return(_dispose_data=Module["_dispose_data"]=Module["asm"]["dispose_data"]).apply(null,arguments)};var _dispose=Module["_dispose"]=function(){return(_dispose=Module["_dispose"]=Module["asm"]["dispose"]).apply(null,arguments)};var _Abs=Module["_Abs"]=function(){return(_Abs=Module["_Abs"]=Module["asm"]["Abs"]).apply(null,arguments)};var _Acos=Module["_Acos"]=function(){return(_Acos=Module["_Acos"]=Module["asm"]["Acos"]).apply(null,arguments)};var _Acosh=Module["_Acosh"]=function(){return(_Acosh=Module["_Acosh"]=Module["asm"]["Acosh"]).apply(null,arguments)};var _Add=Module["_Add"]=function(){return(_Add=Module["_Add"]=Module["asm"]["Add"]).apply(null,arguments)};var _AddN=Module["_AddN"]=function(){return(_AddN=Module["_AddN"]=Module["asm"]["AddN"]).apply(null,arguments)};var _All=Module["_All"]=function(){return(_All=Module["_All"]=Module["asm"]["All"]).apply(null,arguments)};var _Any=Module["_Any"]=function(){return(_Any=Module["_Any"]=Module["asm"]["Any"]).apply(null,arguments)};var _ArgMax=Module["_ArgMax"]=function(){return(_ArgMax=Module["_ArgMax"]=Module["asm"]["ArgMax"]).apply(null,arguments)};var _ArgMin=Module["_ArgMin"]=function(){return(_ArgMin=Module["_ArgMin"]=Module["asm"]["ArgMin"]).apply(null,arguments)};var _Asin=Module["_Asin"]=function(){return(_Asin=Module["_Asin"]=Module["asm"]["Asin"]).apply(null,arguments)};var _Asinh=Module["_Asinh"]=function(){return(_Asinh=Module["_Asinh"]=Module["asm"]["Asinh"]).apply(null,arguments)};var _Atan=Module["_Atan"]=function(){return(_Atan=Module["_Atan"]=Module["asm"]["Atan"]).apply(null,arguments)};var _Atan2=Module["_Atan2"]=function(){return(_Atan2=Module["_Atan2"]=Module["asm"]["Atan2"]).apply(null,arguments)};var _Atanh=Module["_Atanh"]=function(){return(_Atanh=Module["_Atanh"]=Module["asm"]["Atanh"]).apply(null,arguments)};var _AvgPool=Module["_AvgPool"]=function(){return(_AvgPool=Module["_AvgPool"]=Module["asm"]["AvgPool"]).apply(null,arguments)};var _AvgPool3D=Module["_AvgPool3D"]=function(){return(_AvgPool3D=Module["_AvgPool3D"]=Module["asm"]["AvgPool3D"]).apply(null,arguments)};var _AvgPool3DGrad=Module["_AvgPool3DGrad"]=function(){return(_AvgPool3DGrad=Module["_AvgPool3DGrad"]=Module["asm"]["AvgPool3DGrad"]).apply(null,arguments)};var _BatchMatMul=Module["_BatchMatMul"]=function(){return(_BatchMatMul=Module["_BatchMatMul"]=Module["asm"]["BatchMatMul"]).apply(null,arguments)};var _Bincount=Module["_Bincount"]=function(){return(_Bincount=Module["_Bincount"]=Module["asm"]["Bincount"]).apply(null,arguments)};var _Ceil=Module["_Ceil"]=function(){return(_Ceil=Module["_Ceil"]=Module["asm"]["Ceil"]).apply(null,arguments)};var _ClipByValue=Module["_ClipByValue"]=function(){return(_ClipByValue=Module["_ClipByValue"]=Module["asm"]["ClipByValue"]).apply(null,arguments)};var _Conv2D=Module["_Conv2D"]=function(){return(_Conv2D=Module["_Conv2D"]=Module["asm"]["Conv2D"]).apply(null,arguments)};var _Conv2DBackpropInput=Module["_Conv2DBackpropInput"]=function(){return(_Conv2DBackpropInput=Module["_Conv2DBackpropInput"]=Module["asm"]["Conv2DBackpropInput"]).apply(null,arguments)};var _Conv3D=Module["_Conv3D"]=function(){return(_Conv3D=Module["_Conv3D"]=Module["asm"]["Conv3D"]).apply(null,arguments)};var _Conv3DBackpropFilterV2=Module["_Conv3DBackpropFilterV2"]=function(){return(_Conv3DBackpropFilterV2=Module["_Conv3DBackpropFilterV2"]=Module["asm"]["Conv3DBackpropFilterV2"]).apply(null,arguments)};var _Conv3DBackpropInputV2=Module["_Conv3DBackpropInputV2"]=function(){return(_Conv3DBackpropInputV2=Module["_Conv3DBackpropInputV2"]=Module["asm"]["Conv3DBackpropInputV2"]).apply(null,arguments)};var _Cos=Module["_Cos"]=function(){return(_Cos=Module["_Cos"]=Module["asm"]["Cos"]).apply(null,arguments)};var _Cosh=Module["_Cosh"]=function(){return(_Cosh=Module["_Cosh"]=Module["asm"]["Cosh"]).apply(null,arguments)};var _CropAndResize=Module["_CropAndResize"]=function(){return(_CropAndResize=Module["_CropAndResize"]=Module["asm"]["CropAndResize"]).apply(null,arguments)};var _Cumprod=Module["_Cumprod"]=function(){return(_Cumprod=Module["_Cumprod"]=Module["asm"]["Cumprod"]).apply(null,arguments)};var _Cumsum=Module["_Cumsum"]=function(){return(_Cumsum=Module["_Cumsum"]=Module["asm"]["Cumsum"]).apply(null,arguments)};var _DenseBincount=Module["_DenseBincount"]=function(){return(_DenseBincount=Module["_DenseBincount"]=Module["asm"]["DenseBincount"]).apply(null,arguments)};var _DepthToSpace=Module["_DepthToSpace"]=function(){return(_DepthToSpace=Module["_DepthToSpace"]=Module["asm"]["DepthToSpace"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module["_DepthwiseConv2dNative"]=function(){return(_DepthwiseConv2dNative=Module["_DepthwiseConv2dNative"]=Module["asm"]["DepthwiseConv2dNative"]).apply(null,arguments)};var _Diag=Module["_Diag"]=function(){return(_Diag=Module["_Diag"]=Module["asm"]["Diag"]).apply(null,arguments)};var _Dilation2D=Module["_Dilation2D"]=function(){return(_Dilation2D=Module["_Dilation2D"]=Module["asm"]["Dilation2D"]).apply(null,arguments)};var _Dilation2DBackpropFilter=Module["_Dilation2DBackpropFilter"]=function(){return(_Dilation2DBackpropFilter=Module["_Dilation2DBackpropFilter"]=Module["asm"]["Dilation2DBackpropFilter"]).apply(null,arguments)};var _Dilation2DBackpropInput=Module["_Dilation2DBackpropInput"]=function(){return(_Dilation2DBackpropInput=Module["_Dilation2DBackpropInput"]=Module["asm"]["Dilation2DBackpropInput"]).apply(null,arguments)};var _Elu=Module["_Elu"]=function(){return(_Elu=Module["_Elu"]=Module["asm"]["Elu"]).apply(null,arguments)};var _EluGrad=Module["_EluGrad"]=function(){return(_EluGrad=Module["_EluGrad"]=Module["asm"]["EluGrad"]).apply(null,arguments)};var _Equal=Module["_Equal"]=function(){return(_Equal=Module["_Equal"]=Module["asm"]["Equal"]).apply(null,arguments)};var _Exp=Module["_Exp"]=function(){return(_Exp=Module["_Exp"]=Module["asm"]["Exp"]).apply(null,arguments)};var _Expm1=Module["_Expm1"]=function(){return(_Expm1=Module["_Expm1"]=Module["asm"]["Expm1"]).apply(null,arguments)};var _FlipLeftRight=Module["_FlipLeftRight"]=function(){return(_FlipLeftRight=Module["_FlipLeftRight"]=Module["asm"]["FlipLeftRight"]).apply(null,arguments)};var _Floor=Module["_Floor"]=function(){return(_Floor=Module["_Floor"]=Module["asm"]["Floor"]).apply(null,arguments)};var _FloorDiv=Module["_FloorDiv"]=function(){return(_FloorDiv=Module["_FloorDiv"]=Module["asm"]["FloorDiv"]).apply(null,arguments)};var _FusedBatchNorm=Module["_FusedBatchNorm"]=function(){return(_FusedBatchNorm=Module["_FusedBatchNorm"]=Module["asm"]["FusedBatchNorm"]).apply(null,arguments)};var _FusedConv2D=Module["_FusedConv2D"]=function(){return(_FusedConv2D=Module["_FusedConv2D"]=Module["asm"]["FusedConv2D"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module["_FusedDepthwiseConv2D"]=function(){return(_FusedDepthwiseConv2D=Module["_FusedDepthwiseConv2D"]=Module["asm"]["FusedDepthwiseConv2D"]).apply(null,arguments)};var _Gather=Module["_Gather"]=function(){return(_Gather=Module["_Gather"]=Module["asm"]["Gather"]).apply(null,arguments)};var _GatherNd=Module["_GatherNd"]=function(){return(_GatherNd=Module["_GatherNd"]=Module["asm"]["GatherNd"]).apply(null,arguments)};var _Greater=Module["_Greater"]=function(){return(_Greater=Module["_Greater"]=Module["asm"]["Greater"]).apply(null,arguments)};var _GreaterEqual=Module["_GreaterEqual"]=function(){return(_GreaterEqual=Module["_GreaterEqual"]=Module["asm"]["GreaterEqual"]).apply(null,arguments)};var _IsFinite=Module["_IsFinite"]=function(){return(_IsFinite=Module["_IsFinite"]=Module["asm"]["IsFinite"]).apply(null,arguments)};var _IsInf=Module["_IsInf"]=function(){return(_IsInf=Module["_IsInf"]=Module["asm"]["IsInf"]).apply(null,arguments)};var _IsNan=Module["_IsNan"]=function(){return(_IsNan=Module["_IsNan"]=Module["asm"]["IsNan"]).apply(null,arguments)};var _LRN=Module["_LRN"]=function(){return(_LRN=Module["_LRN"]=Module["asm"]["LRN"]).apply(null,arguments)};var _LRNGrad=Module["_LRNGrad"]=function(){return(_LRNGrad=Module["_LRNGrad"]=Module["asm"]["LRNGrad"]).apply(null,arguments)};var _LeakyRelu=Module["_LeakyRelu"]=function(){return(_LeakyRelu=Module["_LeakyRelu"]=Module["asm"]["LeakyRelu"]).apply(null,arguments)};var _Less=Module["_Less"]=function(){return(_Less=Module["_Less"]=Module["asm"]["Less"]).apply(null,arguments)};var _LessEqual=Module["_LessEqual"]=function(){return(_LessEqual=Module["_LessEqual"]=Module["asm"]["LessEqual"]).apply(null,arguments)};var _LinSpace=Module["_LinSpace"]=function(){return(_LinSpace=Module["_LinSpace"]=Module["asm"]["LinSpace"]).apply(null,arguments)};var _Log=Module["_Log"]=function(){return(_Log=Module["_Log"]=Module["asm"]["Log"]).apply(null,arguments)};var _Log1p=Module["_Log1p"]=function(){return(_Log1p=Module["_Log1p"]=Module["asm"]["Log1p"]).apply(null,arguments)};var _LogicalAnd=Module["_LogicalAnd"]=function(){return(_LogicalAnd=Module["_LogicalAnd"]=Module["asm"]["LogicalAnd"]).apply(null,arguments)};var _LogicalNot=Module["_LogicalNot"]=function(){return(_LogicalNot=Module["_LogicalNot"]=Module["asm"]["LogicalNot"]).apply(null,arguments)};var _LogicalOr=Module["_LogicalOr"]=function(){return(_LogicalOr=Module["_LogicalOr"]=Module["asm"]["LogicalOr"]).apply(null,arguments)};var _LogicalXor=Module["_LogicalXor"]=function(){return(_LogicalXor=Module["_LogicalXor"]=Module["asm"]["LogicalXor"]).apply(null,arguments)};var _Max=Module["_Max"]=function(){return(_Max=Module["_Max"]=Module["asm"]["Max"]).apply(null,arguments)};var _MaxPool=Module["_MaxPool"]=function(){return(_MaxPool=Module["_MaxPool"]=Module["asm"]["MaxPool"]).apply(null,arguments)};var _MaxPool3D=Module["_MaxPool3D"]=function(){return(_MaxPool3D=Module["_MaxPool3D"]=Module["asm"]["MaxPool3D"]).apply(null,arguments)};var _MaxPool3DGrad=Module["_MaxPool3DGrad"]=function(){return(_MaxPool3DGrad=Module["_MaxPool3DGrad"]=Module["asm"]["MaxPool3DGrad"]).apply(null,arguments)};var _Maximum=Module["_Maximum"]=function(){return(_Maximum=Module["_Maximum"]=Module["asm"]["Maximum"]).apply(null,arguments)};var _Mean=Module["_Mean"]=function(){return(_Mean=Module["_Mean"]=Module["asm"]["Mean"]).apply(null,arguments)};var _Min=Module["_Min"]=function(){return(_Min=Module["_Min"]=Module["asm"]["Min"]).apply(null,arguments)};var _Minimum=Module["_Minimum"]=function(){return(_Minimum=Module["_Minimum"]=Module["asm"]["Minimum"]).apply(null,arguments)};var _MirrorPad=Module["_MirrorPad"]=function(){return(_MirrorPad=Module["_MirrorPad"]=Module["asm"]["MirrorPad"]).apply(null,arguments)};var _Multinomial=Module["_Multinomial"]=function(){return(_Multinomial=Module["_Multinomial"]=Module["asm"]["Multinomial"]).apply(null,arguments)};var _Multiply=Module["_Multiply"]=function(){return(_Multiply=Module["_Multiply"]=Module["asm"]["Multiply"]).apply(null,arguments)};var _Neg=Module["_Neg"]=function(){return(_Neg=Module["_Neg"]=Module["asm"]["Neg"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module["_NonMaxSuppressionV3"]=function(){return(_NonMaxSuppressionV3=Module["_NonMaxSuppressionV3"]=Module["asm"]["NonMaxSuppressionV3"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module["_NonMaxSuppressionV4"]=function(){return(_NonMaxSuppressionV4=Module["_NonMaxSuppressionV4"]=Module["asm"]["NonMaxSuppressionV4"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module["_NonMaxSuppressionV5"]=function(){return(_NonMaxSuppressionV5=Module["_NonMaxSuppressionV5"]=Module["asm"]["NonMaxSuppressionV5"]).apply(null,arguments)};var _NotEqual=Module["_NotEqual"]=function(){return(_NotEqual=Module["_NotEqual"]=Module["asm"]["NotEqual"]).apply(null,arguments)};var _OneHot=Module["_OneHot"]=function(){return(_OneHot=Module["_OneHot"]=Module["asm"]["OneHot"]).apply(null,arguments)};var _PadV2=Module["_PadV2"]=function(){return(_PadV2=Module["_PadV2"]=Module["asm"]["PadV2"]).apply(null,arguments)};var _Pow=Module["_Pow"]=function(){return(_Pow=Module["_Pow"]=Module["asm"]["Pow"]).apply(null,arguments)};var _Prelu=Module["_Prelu"]=function(){return(_Prelu=Module["_Prelu"]=Module["asm"]["Prelu"]).apply(null,arguments)};var _Prod=Module["_Prod"]=function(){return(_Prod=Module["_Prod"]=Module["asm"]["Prod"]).apply(null,arguments)};var _RealDiv=Module["_RealDiv"]=function(){return(_RealDiv=Module["_RealDiv"]=Module["asm"]["RealDiv"]).apply(null,arguments)};var _Reciprocal=Module["_Reciprocal"]=function(){return(_Reciprocal=Module["_Reciprocal"]=Module["asm"]["Reciprocal"]).apply(null,arguments)};var _Relu=Module["_Relu"]=function(){return(_Relu=Module["_Relu"]=Module["asm"]["Relu"]).apply(null,arguments)};var _Relu6=Module["_Relu6"]=function(){return(_Relu6=Module["_Relu6"]=Module["asm"]["Relu6"]).apply(null,arguments)};var _ResizeBilinear=Module["_ResizeBilinear"]=function(){return(_ResizeBilinear=Module["_ResizeBilinear"]=Module["asm"]["ResizeBilinear"]).apply(null,arguments)};var _ResizeBilinearGrad=Module["_ResizeBilinearGrad"]=function(){return(_ResizeBilinearGrad=Module["_ResizeBilinearGrad"]=Module["asm"]["ResizeBilinearGrad"]).apply(null,arguments)};var _ResizeNearestNeighbor=Module["_ResizeNearestNeighbor"]=function(){return(_ResizeNearestNeighbor=Module["_ResizeNearestNeighbor"]=Module["asm"]["ResizeNearestNeighbor"]).apply(null,arguments)};var _ResizeNearestNeighborGrad=Module["_ResizeNearestNeighborGrad"]=function(){return(_ResizeNearestNeighborGrad=Module["_ResizeNearestNeighborGrad"]=Module["asm"]["ResizeNearestNeighborGrad"]).apply(null,arguments)};var _Reverse=Module["_Reverse"]=function(){return(_Reverse=Module["_Reverse"]=Module["asm"]["Reverse"]).apply(null,arguments)};var _RotateWithOffset=Module["_RotateWithOffset"]=function(){return(_RotateWithOffset=Module["_RotateWithOffset"]=Module["asm"]["RotateWithOffset"]).apply(null,arguments)};var _Round=Module["_Round"]=function(){return(_Round=Module["_Round"]=Module["asm"]["Round"]).apply(null,arguments)};var _Rsqrt=Module["_Rsqrt"]=function(){return(_Rsqrt=Module["_Rsqrt"]=Module["asm"]["Rsqrt"]).apply(null,arguments)};var _ScatterNd=Module["_ScatterNd"]=function(){return(_ScatterNd=Module["_ScatterNd"]=Module["asm"]["ScatterNd"]).apply(null,arguments)};var _SearchSorted=Module["_SearchSorted"]=function(){return(_SearchSorted=Module["_SearchSorted"]=Module["asm"]["SearchSorted"]).apply(null,arguments)};var _SelectV2=Module["_SelectV2"]=function(){return(_SelectV2=Module["_SelectV2"]=Module["asm"]["SelectV2"]).apply(null,arguments)};var _Selu=Module["_Selu"]=function(){return(_Selu=Module["_Selu"]=Module["asm"]["Selu"]).apply(null,arguments)};var _Sigmoid=Module["_Sigmoid"]=function(){return(_Sigmoid=Module["_Sigmoid"]=Module["asm"]["Sigmoid"]).apply(null,arguments)};var _Sign=Module["_Sign"]=function(){return(_Sign=Module["_Sign"]=Module["asm"]["Sign"]).apply(null,arguments)};var _Sin=Module["_Sin"]=function(){return(_Sin=Module["_Sin"]=Module["asm"]["Sin"]).apply(null,arguments)};var _Softmax=Module["_Softmax"]=function(){return(_Softmax=Module["_Softmax"]=Module["asm"]["Softmax"]).apply(null,arguments)};var _Softplus=Module["_Softplus"]=function(){return(_Softplus=Module["_Softplus"]=Module["asm"]["Softplus"]).apply(null,arguments)};var _SparseFillEmptyRows=Module["_SparseFillEmptyRows"]=function(){return(_SparseFillEmptyRows=Module["_SparseFillEmptyRows"]=Module["asm"]["SparseFillEmptyRows"]).apply(null,arguments)};var _SparseReshape=Module["_SparseReshape"]=function(){return(_SparseReshape=Module["_SparseReshape"]=Module["asm"]["SparseReshape"]).apply(null,arguments)};var _SparseSegmentReduction=Module["_SparseSegmentReduction"]=function(){return(_SparseSegmentReduction=Module["_SparseSegmentReduction"]=Module["asm"]["SparseSegmentReduction"]).apply(null,arguments)};var _SparseToDense=Module["_SparseToDense"]=function(){return(_SparseToDense=Module["_SparseToDense"]=Module["asm"]["SparseToDense"]).apply(null,arguments)};var _Sqrt=Module["_Sqrt"]=function(){return(_Sqrt=Module["_Sqrt"]=Module["asm"]["Sqrt"]).apply(null,arguments)};var _Square=Module["_Square"]=function(){return(_Square=Module["_Square"]=Module["asm"]["Square"]).apply(null,arguments)};var _SquaredDifference=Module["_SquaredDifference"]=function(){return(_SquaredDifference=Module["_SquaredDifference"]=Module["asm"]["SquaredDifference"]).apply(null,arguments)};var _Step=Module["_Step"]=function(){return(_Step=Module["_Step"]=Module["asm"]["Step"]).apply(null,arguments)};var _StridedSlice=Module["_StridedSlice"]=function(){return(_StridedSlice=Module["_StridedSlice"]=Module["asm"]["StridedSlice"]).apply(null,arguments)};var _Sub=Module["_Sub"]=function(){return(_Sub=Module["_Sub"]=Module["asm"]["Sub"]).apply(null,arguments)};var _Sum=Module["_Sum"]=function(){return(_Sum=Module["_Sum"]=Module["asm"]["Sum"]).apply(null,arguments)};var _Tan=Module["_Tan"]=function(){return(_Tan=Module["_Tan"]=Module["asm"]["Tan"]).apply(null,arguments)};var _Tanh=Module["_Tanh"]=function(){return(_Tanh=Module["_Tanh"]=Module["asm"]["Tanh"]).apply(null,arguments)};var _TensorScatterUpdate=Module["_TensorScatterUpdate"]=function(){return(_TensorScatterUpdate=Module["_TensorScatterUpdate"]=Module["asm"]["TensorScatterUpdate"]).apply(null,arguments)};var _Tile=Module["_Tile"]=function(){return(_Tile=Module["_Tile"]=Module["asm"]["Tile"]).apply(null,arguments)};var _TopK=Module["_TopK"]=function(){return(_TopK=Module["_TopK"]=Module["asm"]["TopK"]).apply(null,arguments)};var _Transform=Module["_Transform"]=function(){return(_Transform=Module["_Transform"]=Module["asm"]["Transform"]).apply(null,arguments)};var _Transpose=Module["_Transpose"]=function(){return(_Transpose=Module["_Transpose"]=Module["asm"]["Transpose"]).apply(null,arguments)};var __FusedMatMul=Module["__FusedMatMul"]=function(){return(__FusedMatMul=Module["__FusedMatMul"]=Module["asm"]["_FusedMatMul"]).apply(null,arguments)};var _malloc=Module["_malloc"]=function(){return(_malloc=Module["_malloc"]=Module["asm"]["malloc"]).apply(null,arguments)};var _free=Module["_free"]=function(){return(_free=Module["_free"]=Module["asm"]["free"]).apply(null,arguments)};var __emscripten_tls_init=Module["__emscripten_tls_init"]=function(){return(__emscripten_tls_init=Module["__emscripten_tls_init"]=Module["asm"]["_emscripten_tls_init"]).apply(null,arguments)};var _pthread_self=Module["_pthread_self"]=function(){return(_pthread_self=Module["_pthread_self"]=Module["asm"]["pthread_self"]).apply(null,arguments)};var ___errno_location=Module["___errno_location"]=function(){return(___errno_location=Module["___errno_location"]=Module["asm"]["__errno_location"]).apply(null,arguments)};var __emscripten_thread_init=Module["__emscripten_thread_init"]=function(){return(__emscripten_thread_init=Module["__emscripten_thread_init"]=Module["asm"]["_emscripten_thread_init"]).apply(null,arguments)};var __emscripten_thread_crashed=Module["__emscripten_thread_crashed"]=function(){return(__emscripten_thread_crashed=Module["__emscripten_thread_crashed"]=Module["asm"]["_emscripten_thread_crashed"]).apply(null,arguments)};var _emscripten_main_thread_process_queued_calls=Module["_emscripten_main_thread_process_queued_calls"]=function(){return(_emscripten_main_thread_process_queued_calls=Module["_emscripten_main_thread_process_queued_calls"]=Module["asm"]["emscripten_main_thread_process_queued_calls"]).apply(null,arguments)};var _emscripten_main_browser_thread_id=Module["_emscripten_main_browser_thread_id"]=function(){return(_emscripten_main_browser_thread_id=Module["_emscripten_main_browser_thread_id"]=Module["asm"]["emscripten_main_browser_thread_id"]).apply(null,arguments)};var _emscripten_run_in_main_runtime_thread_js=Module["_emscripten_run_in_main_runtime_thread_js"]=function(){return(_emscripten_run_in_main_runtime_thread_js=Module["_emscripten_run_in_main_runtime_thread_js"]=Module["asm"]["emscripten_run_in_main_runtime_thread_js"]).apply(null,arguments)};var _emscripten_dispatch_to_thread_=Module["_emscripten_dispatch_to_thread_"]=function(){return(_emscripten_dispatch_to_thread_=Module["_emscripten_dispatch_to_thread_"]=Module["asm"]["emscripten_dispatch_to_thread_"]).apply(null,arguments)};var __emscripten_proxy_execute_task_queue=Module["__emscripten_proxy_execute_task_queue"]=function(){return(__emscripten_proxy_execute_task_queue=Module["__emscripten_proxy_execute_task_queue"]=Module["asm"]["_emscripten_proxy_execute_task_queue"]).apply(null,arguments)};var __emscripten_thread_free_data=Module["__emscripten_thread_free_data"]=function(){return(__emscripten_thread_free_data=Module["__emscripten_thread_free_data"]=Module["asm"]["_emscripten_thread_free_data"]).apply(null,arguments)};var __emscripten_thread_exit=Module["__emscripten_thread_exit"]=function(){return(__emscripten_thread_exit=Module["__emscripten_thread_exit"]=Module["asm"]["_emscripten_thread_exit"]).apply(null,arguments)};var _emscripten_stack_set_limits=Module["_emscripten_stack_set_limits"]=function(){return(_emscripten_stack_set_limits=Module["_emscripten_stack_set_limits"]=Module["asm"]["emscripten_stack_set_limits"]).apply(null,arguments)};var stackSave=Module["stackSave"]=function(){return(stackSave=Module["stackSave"]=Module["asm"]["stackSave"]).apply(null,arguments)};var stackRestore=Module["stackRestore"]=function(){return(stackRestore=Module["stackRestore"]=Module["asm"]["stackRestore"]).apply(null,arguments)};var stackAlloc=Module["stackAlloc"]=function(){return(stackAlloc=Module["stackAlloc"]=Module["asm"]["stackAlloc"]).apply(null,arguments)};var dynCall_iijjiiii=Module["dynCall_iijjiiii"]=function(){return(dynCall_iijjiiii=Module["dynCall_iijjiiii"]=Module["asm"]["dynCall_iijjiiii"]).apply(null,arguments)};var dynCall_jiji=Module["dynCall_jiji"]=function(){return(dynCall_jiji=Module["dynCall_jiji"]=Module["asm"]["dynCall_jiji"]).apply(null,arguments)};Module["keepRuntimeAlive"]=keepRuntimeAlive;Module["wasmMemory"]=wasmMemory;Module["cwrap"]=cwrap;Module["ExitStatus"]=ExitStatus;Module["PThread"]=PThread;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}if(ENVIRONMENT_IS_PTHREAD){readyPromiseResolve(Module);initRuntime();startWorker(Module);return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module["calledRun"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout(function(){setTimeout(function(){Module["setStatus"]("")},1);doRun()},1)}else{doRun()}}if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}run();var listenersAdded;if(beforeListeners){listenersAdded={uncaughtException:process.listeners("uncaughtException").filter(function(listener){return!beforeListeners.uncaughtException.indexOf(listener)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(listener){return!beforeListeners.unhandledRejection.indexOf(listener)>-1})}}var actualModule;if(typeof WasmBackendModule!=="undefined"){actualModule=WasmBackendModule}else if(typeof WasmBackendModuleThreadedSimd!=="undefined"){actualModule=WasmBackendModuleThreadedSimd}else{throw new Error("Could not find wasm module in post.js")}if(listenersAdded){var tmpDispose=actualModule["_dispose"];actualModule["_dispose"]=function(){tmpDispose();listenersAdded.uncaughtException.forEach(function(listener){process.removeListener("uncaughtException",listener)});listenersAdded.unhandledRejection.forEach(function(listener){process.removeListener("unhandledRejection",listener)})}}


  return WasmBackendModuleThreadedSimd.ready
}
);
})();
if (typeof exports === 'object' && typeof module === 'object')
  module.exports = WasmBackendModuleThreadedSimd;
else if (typeof define === 'function' && define['amd'])
  define([], function() { return WasmBackendModuleThreadedSimd; });
else if (typeof exports === 'object')
  exports["WasmBackendModuleThreadedSimd"] = WasmBackendModuleThreadedSimd;`;var J2=hl(q5());var j5=Q2.default||Q2,OIe=J2.default||J2,Jg=class extends bo{constructor(t){super();this.wasm=t;this.wasm.tfjs.initWithThreadsCount(Z5),Z2=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new $a(this,jr())}dataIdNextNumber=1;dataIdMap;write(t,n,o){let s={id:this.dataIdNextNumber++};return this.move(s,t,n,o,1),s}numDataIds(){return this.dataIdMap.numDataIds()}async time(t){let n=y.now();return t(),{kernelMs:y.now()-n}}move(t,n,o,s,a){let i=this.dataIdNextNumber++;if(s==="string"){let m=n;this.dataIdMap.set(t,{id:i,stringBytes:m,shape:o,dtype:s,memoryOffset:null,refCount:a});return}let p=y.sizeFromShape(o),u=p*y.bytesPerElement(s),l=this.wasm._malloc(u);this.dataIdMap.set(t,{id:i,memoryOffset:l,shape:o,dtype:s,refCount:a}),this.wasm.tfjs.registerTensor(i,p,l),n!=null&&this.wasm.HEAPU8.set(new Uint8Array(n.buffer,n.byteOffset,u),l)}async read(t){return this.readSync(t)}readSync(t,n,o){let{memoryOffset:s,dtype:a,shape:i,stringBytes:p}=this.dataIdMap.get(t);if(a==="string")return(n==null||n===0)&&(o==null||o>=p.length)?p:p.slice(n,o);n=n||0,o=o||y.sizeFromShape(i);let u=y.bytesPerElement(a),l=this.wasm.HEAPU8.slice(s+n*u,s+o*u);return GIe(l.buffer,a)}disposeData(t,n=!1){if(this.dataIdMap.has(t)){let o=this.dataIdMap.get(t);if(o.refCount--,!n&&o.refCount>0)return!1;this.wasm._free(o.memoryOffset),this.wasm.tfjs.disposeData(o.id),this.dataIdMap.delete(t)}return!0}refCount(t){return this.dataIdMap.has(t)?this.dataIdMap.get(t).refCount:0}incRef(t){let n=this.dataIdMap.get(t);n!=null&&n.refCount++}floatPrecision(){return 32}getMemoryOffset(t){return this.dataIdMap.get(t).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(t,n,o,s){let a;if(o==null)a=this.write(s??null,t,n);else{let i=this.dataIdNextNumber++;a={id:i},this.dataIdMap.set(a,{id:i,memoryOffset:o,shape:t,dtype:n,refCount:1});let p=y.sizeFromShape(t);this.wasm.tfjs.registerTensor(i,p,o)}return{dataId:a,shape:t,dtype:n}}typedArrayFromHeap({shape:t,dtype:n,dataId:o}){let s=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(o),i=y.sizeFromShape(t);switch(n){case"float32":return new Float32Array(s,a,i);case"int32":return new Int32Array(s,a,i);case"bool":return new Uint8Array(s,a,i);default:throw new Error(`Unknown dtype ${n}`)}}};function zIe(r){return(e,t)=>(y.fetch(r,{credentials:"same-origin"}).then(n=>{n.ok||e.env.a(`failed to load wasm binary file at '${r}'`),n.arrayBuffer().then(o=>{WebAssembly.instantiate(o,e).then(s=>{t(s.instance,s.module)})})}),{})}function X5(r,e,t){if(yv!=null)return yv;let n="tfjs-backend-wasm.wasm";return r&&e?n="tfjs-backend-wasm-threaded-simd.wasm":r&&(n="tfjs-backend-wasm-simd.wasm"),Zg!=null&&Zg[n]!=null?Zg[n]:t+n}async function Y5(){let[r,e]=await Promise.all([L().getAsync("WASM_HAS_SIMD_SUPPORT"),L().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((t,n)=>{let o={};o.locateFile=(i,p)=>{if(i.endsWith(".worker.js")){let u=H5.replace(/\n/g,"\\n"),l=new Blob([u],{type:"application/javascript"});return URL.createObjectURL(l)}return i.endsWith(".wasm")?X5(r,e,Yg??p):p+i},e_&&(o.instantiateWasm=zIe(X5(r,e,Yg??"")));let s=!1;o.onAbort=()=>{if(s||Qg)return;Qg=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let a;e&&r&&yv==null?(o.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+j5.toString()],{type:"text/javascript"}),a=j5(o)):a=OIe(o),a.then(i=>{s=!0,Qg=!1;let p=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",p,["number"]),dispose:i.cwrap("dispose",p,[])},t({wasm:i})}).catch(n)})}function GIe(r,e){switch(e){case"float32":return new Float32Array(r);case"int32":return new Int32Array(r);case"bool":return new Uint8Array(r);default:throw new Error(`Unknown dtype ${e}`)}}var WIe=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],yv=null,Yg=null,Zg={},Qg=!1,e_=!1;function UIe(r,e=!1){if(CA("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Qg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");yv=r,e_=e}function KIe(r,e=!1){if(Qg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof r=="string")Yg=r;else{Zg=r;let t=WIe.filter(n=>Zg[n]==null);if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}e_=e}var Z5=-1,Z2=-1;function VIe(r){Z5=r}function HIe(){if(Z2===-1)throw new Error("WASM backend not initialized.");return Z2}var qIe="0.0.0";var jIe=2;Lp("wasm",async()=>{let{wasm:r}=await Y5();return new Jg(r)},jIe);var ll="4.3.0-20230321",Fvn={tfjs:ll,"tfjs-core":ll,"tfjs-data":ll,"tfjs-layers":ll,"tfjs-converter":ll,"tfjs-backend-cpu":ll,"tfjs-backend-webgl":ll,"tfjs-backend-wasm":ll};export{Gs as Abs,xo as Acos,To as Acosh,Ul as AdadeltaOptimizer,Kl as AdagradOptimizer,Vl as AdamOptimizer,Hl as AdamaxOptimizer,Dn as Add,Co as AddN,za as All,Ga as Any,Ws as ArgMax,Us as ArgMin,Io as Asin,ko as Asinh,vo as Atan,wo as Atan2,So as Atanh,Ao as AvgPool,Ks as AvgPool3D,Xi as AvgPool3DGrad,cp as AvgPoolGrad,Jg as BackendWasm,No as BatchMatMul,Vs as BatchToSpaceND,Wa as Bincount,Yi as BroadcastArgs,y_ as BroadcastTo,rT as Callback,fx as CallbackList,Hn as Cast,Do as Ceil,qn as ClipByValue,dp as Complex,fp as ComplexAbs,Hs as Concat,_o as Conv2D,hp as Conv2DBackpropFilter,Ro as Conv2DBackpropInput,Mo as Conv3D,Ua as Conv3DBackpropFilterV2,Ka as Conv3DBackpropInputV2,Po as Cos,Fo as Cosh,Ha as CropAndResize,Va as Cumprod,Eo as Cumsum,gx as CustomCallback,$a as DataStorage,Zi as DenseBincount,qa as DepthToSpace,Lo as DepthwiseConv2dNative,gp as DepthwiseConv2dNativeBackpropFilter,bp as DepthwiseConv2dNativeBackpropInput,Qi as Diag,Bo as Dilation2D,eu as Dilation2DBackpropFilter,Ji as Dilation2DBackpropInput,Xw as ENV,nT as EarlyStopping,yp as Einsum,Oo as Elu,ja as EluGrad,xh as Environment,Ya as Equal,Xa as Erf,zo as Exp,qs as ExpandDims,Go as Expm1,xp as FFT,tu as Fill,Za as FlipLeftRight,Wo as Floor,Uo as FloorDiv,Tl as FromPixels,Ko as FusedBatchNorm,ia as FusedConv2D,ua as FusedDepthwiseConv2D,Fm as GPGPUContext,Qa as GatherNd,js as GatherV2,fg as GraphModel,Ja as Greater,Vo as GreaterEqual,hx as History,Tp as IFFT,jn as Identity,Cp as Imag,Rt as InputSpec,Ho as IsFinite,qo as IsInf,jo as IsNan,bo as KernelBackend,Qo as LRN,ai as LRNGrad,Zh as LayerVariable,ro as LayersModel,Xo as LeakyRelu,ei as Less,ti as LessEqual,ri as LinSpace,Yo as Log,Zo as Log1p,T_ as LogSoftmax,ni as LogicalAnd,oi as LogicalNot,si as LogicalOr,x_ as LogicalXor,eke as LowerBound,kf as MathBackendCPU,Vf as MathBackendWebGL,tke as MatrixBandPart,Jo as Max,ts as MaxPool,Xs as MaxPool3D,ru as MaxPool3DGrad,Ip as MaxPoolGrad,kp as MaxPoolWithArgmax,es as Maximum,rs as Mean,ns as Min,os as Minimum,ss as MirrorPad,ii as Mod,ql as MomentumOptimizer,ui as Multinomial,as as Multiply,Ys as Neg,li as NonMaxSuppressionV3,Nu as NonMaxSuppressionV4,mi as NonMaxSuppressionV5,pi as NotEqual,mA as OP_SCOPE_SUFFIX,is as OneHot,Zs as OnesLike,Jr as Optimizer,Vh as OptimizerConstructors,Qs as Pack,us as PadV2,rke as Pool,ps as Pow,ls as Prelu,ms as Prod,jl as RMSPropOptimizer,Bs as RNN,oc as RaggedGather,sc as RaggedRange,ac as RaggedTensorToTensor,nu as Range,V_ as Rank,vp as Real,$o as RealDiv,cs as Reciprocal,Ai as Reduction,ds as Relu,gs as Relu6,Js as Reshape,hs as ResizeBilinear,di as ResizeBilinearGrad,fs as ResizeNearestNeighbor,ci as ResizeNearestNeighborGrad,bs as Reverse,Ci as RotateWithOffset,ys as Round,xs as Rsqrt,zu as SGDOptimizer,fi as ScatterNd,hi as SearchSorted,ea as Select,Ts as Selu,pm as Sequential,ks as Sigmoid,Is as Sign,Cs as Sin,gi as Sinh,ta as Slice,As as Softmax,vs as Softplus,ra as SpaceToBatchND,Sp as SparseFillEmptyRows,_u as SparseReshape,wp as SparseSegmentMean,Ap as SparseSegmentSum,bi as SparseToDense,na as SplitV,Ss as Sqrt,ou as Square,Ns as SquaredDifference,xl as StaticRegexReplace,Xn as Step,yi as StridedSlice,su as StringNGrams,Np as StringSplit,Dp as StringToHashBucketFast,Ds as Sub,ws as Sum,mn as SymbolicTensor,_s as Tan,Rs as Tanh,He as Tensor,ht as TensorBuffer,Du as TensorScatterUpdate,_n as Tile,xi as TopK,Ti as Transform,Rn as Transpose,_p as Unique,oa as Unpack,Rp as UnsortedSegmentSum,nke as UpperBound,Mu as Variable,eh as WebGPUBackend,sa as ZerosLike,aa as _FusedMatMul,Wt as abs,C1 as acos,I1 as acosh,Z as add,k1 as addN,jb as all,Rh as any,Bp as argMax,v1 as argMin,S1 as asin,w1 as asinh,A1 as atan,N1 as atan2,D1 as atanh,yc as avgPool,Xb as avgPool3d,T1 as backend,I as backend_util,M1 as basicLSTMCell,Op as batchNorm,Yb as batchNorm2d,Zb as batchNorm3d,Qb as batchNorm4d,xc as batchToSpaceND,Jb as bincount,BJ as booleanMaskAsync,F1 as broadcastArgs,zp as broadcastTo,Rr as broadcast_util,jy as browser,Ce as buffer,Joe as callbacks,ne as cast,E1 as ceil,Xr as clipByValue,bn as clone,Pn as complex,gt as concat,ey as concat1d,ty as concat2d,ry as concat3d,ny as concat4d,WE as constraints,oy as conv1d,Fs as conv2d,sy as conv2dTranspose,ay as conv3d,uy as conv3dTranspose,lke as copyRegisteredKernels,Cc as cos,py as cosh,zh as cosineWindow,Fh as cumprod,ly as cumsum,yn as customGrad,vB as data,Eh as denseBincount,CA as deprecationWarn,L1 as depthToSpace,Gp as depthwiseConv2d,ose as deregisterOp,Fp as device_util,B1 as diag,$1 as dilation2d,swe as disableDeprecationWarnings,Me as dispose,awe as disposeVariables,fe as div,z1 as divNoNan,G1 as dot,$A as dropout,W1 as einsum,Wp as elu,owe as enableDebugMode,nwe as enableProdMode,OA as enclosingPowerOfTwo,jr as engine,L as env,sn as equal,U1 as erf,H1 as euclideanNorm,Tr as exp,Cr as expandDims,q1 as expm1,_l as eye,Rc as fft,ha as fill,cwe as findBackend,dwe as findBackendFactory,Up as floor,qb as floorDiv,cG as forceHalfFloat,jp as fused,Kp as gather,qJ as gatherND,Xy as gather_util,lwe as getBackend,Qw as getGradient,Ih as getKernel,_b as getKernelsForBackend,HIe as getThreadsCount,e2 as gpgpu_util,GQ as grad,WQ as grads,Jt as greater,Jn as greaterEqual,Bl as ifft,Vp as imag,xn as image,YJ as inTopKAsync,UE as initializers,CN as input,Wr as io,_y as irfft,j1 as isFinite,X1 as isInf,Y1 as isNaN,$t as keep,kr as kernel_impls,IL as layers,Ic as leakyRelu,Rl as less,ba as lessEqual,GA as linalg,Z1 as linspace,eae as loadGraphModel,tae as loadGraphModelSync,uL as loadLayersModel,Q1 as localResponseNormalization,Zr as log,kc as log1p,J1 as logSigmoid,dy as logSoftmax,fy as logSumExp,un as logicalAnd,vc as logicalNot,hy as logicalOr,eR as logicalXor,Z9 as losses,tR as lowerBound,qe as matMul,nP as math,Yr as max,Sc as maxPool,by as maxPool3d,rR as maxPoolWithArgmax,Es as maximum,zt as mean,_h as memory,nR as meshgrid,kL as metrics,Nl as min,Si as minimum,oR as mirrorPad,sR as mod,ene as model,vL as models,Ml as moments,zJ as movingAverage,P as mul,aR as multiRNNCell,iR as multinomial,et as neg,Hh as nextFrame,Dl as norm,$u as notEqual,Hp as oneHot,Ir as ones,Gr as onesLike,w as op,uR as outerProduct,eo as pad,pR as pad1d,lR as pad2d,mR as pad3d,cR as pad4d,dR as pool,Qn as pow,Ac as prelu,Hb as print,fR as prod,iwe as profile,hR as raggedGather,gR as raggedRange,bR as raggedTensorToTensor,yR as rand,OR as randomGamma,El as randomNormal,zR as randomStandardNormal,ya as randomUniform,mu as range,pwe as ready,Ou as real,GR as reciprocal,Lp as registerBackend,rne as registerCallbackConstructor,I_ as registerGradient,Ru as registerKernel,nse as registerOp,SL as regularizers,pn as relu,ky as relu6,mwe as removeBackend,E as reshape,Mr as reverse,WR as reverse1d,UR as reverse2d,KR as reverse3d,VR as reverse4d,Mc as rfft,vy as round,Sy as rsqrt,ge as scalar,WJ as scatterND,qp as scatter_util,Bh as searchSorted,wy as selu,Ay as separableConv2d,tne as sequential,ee as serialization,XY as setBackend,fwe as setPlatform,VIe as setThreadsCount,UIe as setWasmPath,KIe as setWasmPaths,f0 as setWebGLContext,HR as setdiff1dAsync,_f as shared,Fn as sigmoid,qR as sign,Y9 as signal,Ny as sin,Dy as sinh,Ue as slice,Nc as slice1d,Oh as slice2d,Dc as slice3d,Ll as slice4d,vt as slice_util,_c as softmax,Bu as softplus,wc as spaceToBatchND,Q9 as sparse,VJ as sparseToDense,X9 as spectral,Pr as split,Ot as sqrt,Xe as square,Ry as squaredDifference,xa as squeeze,dr as stack,cu as step,jR as stridedSlice,J9 as string,ce as sub,be as sum,Pu as sumOutType,XR as tan,$p as tanh,cr as tensor,er as tensor1d,wi as tensor2d,My as tensor3d,YR as tensor4d,ZR as tensor5d,QR as tensor6d,eM as tensorScatterUpdate,ca as tensor_util,$R as test_util,z as tidy,an as tile,uwe as time,tM as topk,Yl as train,je as transpose,Fc as truncatedNormal,rM as unique,pke as unregisterGradient,uke as unregisterKernel,Py as unsortedSegmentSum,Fr as unstack,Nt as upcastType,nM as upperBound,y as util,UQ as valueAndGrad,KQ as valueAndGrads,Fy as variable,my as variableGrads,Fvn as version,nae as version_converter,wee as version_core,Oae as version_cpu,ag as version_layers,qIe as version_wasm,Ple as version_webgl,Hrr as webgl,Lf as webgl_util,A2 as webgpu_util,Et as where,Ly as whereAsync,kt as zeros,_e as zerosLike};
//# sourceMappingURL=tfjs.min.esm.js.map
