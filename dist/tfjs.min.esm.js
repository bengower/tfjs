var Lq=Object.create;var pb=Object.defineProperty;var _q=Object.getOwnPropertyDescriptor;var $q=Object.getOwnPropertyNames;var Bq=Object.getPrototypeOf,Oq=Object.prototype.hasOwnProperty;var zq=r=>pb(r,"__esModule",{value:!0});var Ar=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),Xe=(r,e)=>{for(var t in e)pb(r,t,{get:e[t],enumerable:!0})},Gq=(r,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of $q(e))!Oq.call(r,o)&&(t||o!=="default")&&pb(r,o,{get:()=>e[o],enumerable:!(n=_q(e,o))||n.enumerable});return r},Ap=(r,e)=>Gq(zq(pb(r!=null?Lq(Bq(r)):{},"default",!e&&r&&r.__esModule?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);var J0=Ar((Ufe,Z0)=>{Z0.exports=Jt;var ws=null;try{ws=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Jt(r,e,t){this.low=r|0,this.high=e|0,this.unsigned=!!t}Jt.prototype.__isLong__;Object.defineProperty(Jt.prototype,"__isLong__",{value:!0});function Kn(r){return(r&&r.__isLong__)===!0}Jt.isLong=Kn;var W0={},K0={};function Fp(r,e){var t,n,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(n=K0[r],n)?n:(t=er(r,(r|0)<0?-1:0,!0),o&&(K0[r]=t),t)):(r|=0,(o=-128<=r&&r<128)&&(n=W0[r],n)?n:(t=er(r,r<0?-1:0,!1),o&&(W0[r]=t),t))}Jt.fromInt=Fp;function Ns(r,e){if(isNaN(r))return e?Mp:Ds;if(e){if(r<0)return Mp;if(r>=j0)return Q0}else{if(r<=-H0)return Wn;if(r+1>=H0)return Y0}return r<0?Ns(-r,e).neg():er(r%Rm|0,r/Rm|0,e)}Jt.fromNumber=Ns;function er(r,e,t){return new Jt(r,e,t)}Jt.fromBits=er;var fb=Math.pow;function uC(r,e,t){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return Ds;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var n;if((n=r.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return uC(r.substring(1),e,t).neg();for(var o=Ns(fb(t,8)),s=Ds,a=0;a<r.length;a+=8){var i=Math.min(8,r.length-a),p=parseInt(r.substring(a,a+i),t);if(i<8){var u=Ns(fb(t,i));s=s.mul(u).add(Ns(p))}else s=s.mul(o),s=s.add(Ns(p))}return s.unsigned=e,s}Jt.fromString=uC;function Fa(r,e){return typeof r=="number"?Ns(r,e):typeof r=="string"?uC(r,e):er(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}Jt.fromValue=Fa;var V0=1<<16,mj=1<<24,Rm=V0*V0,j0=Rm*Rm,H0=j0/2,q0=Fp(mj),Ds=Fp(0);Jt.ZERO=Ds;var Mp=Fp(0,!0);Jt.UZERO=Mp;var Em=Fp(1);Jt.ONE=Em;var X0=Fp(1,!0);Jt.UONE=X0;var iC=Fp(-1);Jt.NEG_ONE=iC;var Y0=er(-1,2147483647,!1);Jt.MAX_VALUE=Y0;var Q0=er(-1,-1,!0);Jt.MAX_UNSIGNED_VALUE=Q0;var Wn=er(0,-2147483648,!1);Jt.MIN_VALUE=Wn;var xe=Jt.prototype;xe.toInt=function(){return this.unsigned?this.low>>>0:this.low};xe.toNumber=function(){return this.unsigned?(this.high>>>0)*Rm+(this.low>>>0):this.high*Rm+(this.low>>>0)};xe.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Wn)){var t=Ns(e),n=this.div(t),o=n.mul(t).sub(this);return n.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var s=Ns(fb(e,6),this.unsigned),a=this,i="";;){var p=a.div(s),u=a.sub(p.mul(s)).toInt()>>>0,l=u.toString(e);if(a=p,a.isZero())return l+i;for(;l.length<6;)l="0"+l;i=""+l+i}};xe.getHighBits=function(){return this.high};xe.getHighBitsUnsigned=function(){return this.high>>>0};xe.getLowBits=function(){return this.low};xe.getLowBitsUnsigned=function(){return this.low>>>0};xe.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Wn)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return this.high!=0?t+33:t+1};xe.isZero=function(){return this.high===0&&this.low===0};xe.eqz=xe.isZero;xe.isNegative=function(){return!this.unsigned&&this.high<0};xe.isPositive=function(){return this.unsigned||this.high>=0};xe.isOdd=function(){return(this.low&1)===1};xe.isEven=function(){return(this.low&1)===0};xe.equals=function(e){return Kn(e)||(e=Fa(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};xe.eq=xe.equals;xe.notEquals=function(e){return!this.eq(e)};xe.neq=xe.notEquals;xe.ne=xe.notEquals;xe.lessThan=function(e){return this.comp(e)<0};xe.lt=xe.lessThan;xe.lessThanOrEqual=function(e){return this.comp(e)<=0};xe.lte=xe.lessThanOrEqual;xe.le=xe.lessThanOrEqual;xe.greaterThan=function(e){return this.comp(e)>0};xe.gt=xe.greaterThan;xe.greaterThanOrEqual=function(e){return this.comp(e)>=0};xe.gte=xe.greaterThanOrEqual;xe.ge=xe.greaterThanOrEqual;xe.compare=function(e){if(Kn(e)||(e=Fa(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};xe.comp=xe.compare;xe.negate=function(){return!this.unsigned&&this.eq(Wn)?Wn:this.not().add(Em)};xe.neg=xe.negate;xe.add=function(e){Kn(e)||(e=Fa(e));var t=this.high>>>16,n=this.high&65535,o=this.low>>>16,s=this.low&65535,a=e.high>>>16,i=e.high&65535,p=e.low>>>16,u=e.low&65535,l=0,m=0,c=0,d=0;return d+=s+u,c+=d>>>16,d&=65535,c+=o+p,m+=c>>>16,c&=65535,m+=n+i,l+=m>>>16,m&=65535,l+=t+a,l&=65535,er(c<<16|d,l<<16|m,this.unsigned)};xe.subtract=function(e){return Kn(e)||(e=Fa(e)),this.add(e.neg())};xe.sub=xe.subtract;xe.multiply=function(e){if(this.isZero())return Ds;if(Kn(e)||(e=Fa(e)),ws){var t=ws.mul(this.low,this.high,e.low,e.high);return er(t,ws.get_high(),this.unsigned)}if(e.isZero())return Ds;if(this.eq(Wn))return e.isOdd()?Wn:Ds;if(e.eq(Wn))return this.isOdd()?Wn:Ds;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(q0)&&e.lt(q0))return Ns(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,o=this.high&65535,s=this.low>>>16,a=this.low&65535,i=e.high>>>16,p=e.high&65535,u=e.low>>>16,l=e.low&65535,m=0,c=0,d=0,f=0;return f+=a*l,d+=f>>>16,f&=65535,d+=s*l,c+=d>>>16,d&=65535,d+=a*u,c+=d>>>16,d&=65535,c+=o*l,m+=c>>>16,c&=65535,c+=s*u,m+=c>>>16,c&=65535,c+=a*p,m+=c>>>16,c&=65535,m+=n*l+o*u+s*p+a*i,m&=65535,er(d<<16|f,m<<16|c,this.unsigned)};xe.mul=xe.multiply;xe.divide=function(e){if(Kn(e)||(e=Fa(e)),e.isZero())throw Error("division by zero");if(ws){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?ws.div_u:ws.div_s)(this.low,this.high,e.low,e.high);return er(t,ws.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Mp:Ds;var n,o,s;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Mp;if(e.gt(this.shru(1)))return X0;s=Mp}else{if(this.eq(Wn)){if(e.eq(Em)||e.eq(iC))return Wn;if(e.eq(Wn))return Em;var a=this.shr(1);return n=a.div(e).shl(1),n.eq(Ds)?e.isNegative()?Em:iC:(o=this.sub(e.mul(n)),s=n.add(o.div(e)),s)}else if(e.eq(Wn))return this.unsigned?Mp:Ds;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=Ds}for(o=this;o.gte(e);){n=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),p=i<=48?1:fb(2,i-48),u=Ns(n),l=u.mul(e);l.isNegative()||l.gt(o);)n-=p,u=Ns(n,this.unsigned),l=u.mul(e);u.isZero()&&(u=Em),s=s.add(u),o=o.sub(l)}return s};xe.div=xe.divide;xe.modulo=function(e){if(Kn(e)||(e=Fa(e)),ws){var t=(this.unsigned?ws.rem_u:ws.rem_s)(this.low,this.high,e.low,e.high);return er(t,ws.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};xe.mod=xe.modulo;xe.rem=xe.modulo;xe.not=function(){return er(~this.low,~this.high,this.unsigned)};xe.and=function(e){return Kn(e)||(e=Fa(e)),er(this.low&e.low,this.high&e.high,this.unsigned)};xe.or=function(e){return Kn(e)||(e=Fa(e)),er(this.low|e.low,this.high|e.high,this.unsigned)};xe.xor=function(e){return Kn(e)||(e=Fa(e)),er(this.low^e.low,this.high^e.high,this.unsigned)};xe.shiftLeft=function(e){return Kn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?er(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):er(0,this.low<<e-32,this.unsigned)};xe.shl=xe.shiftLeft;xe.shiftRight=function(e){return Kn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?er(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):er(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};xe.shr=xe.shiftRight;xe.shiftRightUnsigned=function(e){if(Kn(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var n=this.low;return er(n>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?er(t,0,this.unsigned):er(t>>>e-32,0,this.unsigned)};xe.shru=xe.shiftRightUnsigned;xe.shr_u=xe.shiftRightUnsigned;xe.toSigned=function(){return this.unsigned?er(this.low,this.high,!1):this};xe.toUnsigned=function(){return this.unsigned?this:er(this.low,this.high,!0)};xe.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};xe.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};xe.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};Jt.fromBytes=function(e,t,n){return n?Jt.fromBytesLE(e,t):Jt.fromBytesBE(e,t)};Jt.fromBytesLE=function(e,t){return new Jt(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};Jt.fromBytesBE=function(e,t){return new Jt(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}});var G2=Ar(()=>{});var U2=Ar(()=>{});var S1=Ar((k1,vk)=>{(function(r,e,t){function n(i){var p=this,u=a();p.next=function(){var l=2091639*p.s0+p.c*23283064365386963e-26;return p.s0=p.s1,p.s1=p.s2,p.s2=l-(p.c=l|0)},p.c=1,p.s0=u(" "),p.s1=u(" "),p.s2=u(" "),p.s0-=u(i),p.s0<0&&(p.s0+=1),p.s1-=u(i),p.s1<0&&(p.s1+=1),p.s2-=u(i),p.s2<0&&(p.s2+=1),u=null}function o(i,p){return p.c=i.c,p.s0=i.s0,p.s1=i.s1,p.s2=i.s2,p}function s(i,p){var u=new n(i),l=p&&p.state,m=u.next;return m.int32=function(){return u.next()*4294967296|0},m.double=function(){return m()+(m()*2097152|0)*11102230246251565e-32},m.quick=m,l&&(typeof l=="object"&&o(l,u),m.state=function(){return o(u,{})}),m}function a(){var i=4022871197,p=function(u){u=String(u);for(var l=0;l<u.length;l++){i+=u.charCodeAt(l);var m=.02519603282416938*i;i=m>>>0,m-=i,m*=i,i=m>>>0,m-=i,i+=m*4294967296}return(i>>>0)*23283064365386963e-26};return p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(k1,typeof vk=="object"&&vk,typeof define=="function"&&define)});var A1=Ar((v1,Ak)=>{(function(r,e,t){function n(a){var i=this,p="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var l=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^l^l>>>8},a===(a|0)?i.x=a:p+=a;for(var u=0;u<p.length+64;u++)i.x^=p.charCodeAt(u)|0,i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i}function s(a,i){var p=new n(a),u=i&&i.state,l=function(){return(p.next()>>>0)/4294967296};return l.double=function(){do var m=p.next()>>>11,c=(p.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=p.next,l.quick=l,u&&(typeof u=="object"&&o(u,p),l.state=function(){return o(p,{})}),l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(v1,typeof Ak=="object"&&Ak,typeof define=="function"&&define)});var N1=Ar((w1,wk)=>{(function(r,e,t){function n(a){var i=this,p="";i.next=function(){var l=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(l^l<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,a===(a|0)?i.x=a:p+=a;for(var u=0;u<p.length+64;u++)i.x^=p.charCodeAt(u)|0,u==p.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i.v=a.v,i.d=a.d,i}function s(a,i){var p=new n(a),u=i&&i.state,l=function(){return(p.next()>>>0)/4294967296};return l.double=function(){do var m=p.next()>>>11,c=(p.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=p.next,l.quick=l,u&&(typeof u=="object"&&o(u,p),l.state=function(){return o(p,{})}),l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(w1,typeof wk=="object"&&wk,typeof define=="function"&&define)});var P1=Ar((D1,Nk)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.x,l=i.i,m,c,d;return m=u[l],m^=m>>>7,c=m^m<<24,m=u[l+1&7],c^=m^m>>>10,m=u[l+3&7],c^=m^m>>>3,m=u[l+4&7],c^=m^m<<7,m=u[l+7&7],m=m^m<<13,c^=m^m<<9,u[l]=c,i.i=l+1&7,c};function p(u,l){var m,c,d=[];if(l===(l|0))c=d[0]=l;else for(l=""+l,m=0;m<l.length;++m)d[m&7]=d[m&7]<<15^l.charCodeAt(m)+d[m+1&7]<<13;for(;d.length<8;)d.push(0);for(m=0;m<8&&d[m]===0;++m);for(m==8?c=d[7]=-1:c=d[m],u.x=d,u.i=0,m=256;m>0;--m)u.next()}p(i,a)}function o(a,i){return i.x=a.x.slice(),i.i=a.i,i}function s(a,i){a==null&&(a=+new Date);var p=new n(a),u=i&&i.state,l=function(){return(p.next()>>>0)/4294967296};return l.double=function(){do var m=p.next()>>>11,c=(p.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=p.next,l.quick=l,u&&(u.x&&o(u,p),l.state=function(){return o(p,{})}),l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(D1,typeof Nk=="object"&&Nk,typeof define=="function"&&define)});var F1=Ar((M1,Dk)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.w,l=i.X,m=i.i,c,d;return i.w=u=u+1640531527|0,d=l[m+34&127],c=l[m=m+1&127],d^=d<<13,c^=c<<17,d^=d>>>15,c^=c>>>12,d=l[m]=d^c,i.i=m,d+(u^u>>>16)|0};function p(u,l){var m,c,d,f,h,g=[],y=128;for(l===(l|0)?(c=l,l=null):(l=l+"\0",c=0,y=Math.max(y,l.length)),d=0,f=-32;f<y;++f)l&&(c^=l.charCodeAt((f+32)%l.length)),f===0&&(h=c),c^=c<<10,c^=c>>>15,c^=c<<4,c^=c>>>13,f>=0&&(h=h+1640531527|0,m=g[f&127]^=c+h,d=m==0?d+1:0);for(d>=128&&(g[(l&&l.length||0)&127]=-1),d=127,f=4*128;f>0;--f)c=g[d+34&127],m=g[d=d+1&127],c^=c<<13,m^=m<<17,c^=c>>>15,m^=m>>>12,g[d]=c^m;u.w=h,u.X=g,u.i=d}p(i,a)}function o(a,i){return i.i=a.i,i.w=a.w,i.X=a.X.slice(),i}function s(a,i){a==null&&(a=+new Date);var p=new n(a),u=i&&i.state,l=function(){return(p.next()>>>0)/4294967296};return l.double=function(){do var m=p.next()>>>11,c=(p.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=p.next,l.quick=l,u&&(u.X&&o(u,p),l.state=function(){return o(p,{})}),l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(M1,typeof Dk=="object"&&Dk,typeof define=="function"&&define)});var R1=Ar((E1,Pk)=>{(function(r,e,t){function n(a){var i=this,p="";i.next=function(){var l=i.b,m=i.c,c=i.d,d=i.a;return l=l<<25^l>>>7^m,m=m-c|0,c=c<<24^c>>>8^d,d=d-l|0,i.b=l=l<<20^l>>>12^m,i.c=m=m-c|0,i.d=c<<16^m>>>16^d,i.a=d-l|0},i.a=0,i.b=0,i.c=-1640531527,i.d=1367130551,a===Math.floor(a)?(i.a=a/4294967296|0,i.b=a|0):p+=a;for(var u=0;u<p.length+20;u++)i.b^=p.charCodeAt(u)|0,i.next()}function o(a,i){return i.a=a.a,i.b=a.b,i.c=a.c,i.d=a.d,i}function s(a,i){var p=new n(a),u=i&&i.state,l=function(){return(p.next()>>>0)/4294967296};return l.double=function(){do var m=p.next()>>>11,c=(p.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=p.next,l.quick=l,u&&(typeof u=="object"&&o(u,p),l.state=function(){return o(p,{})}),l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(E1,typeof Pk=="object"&&Pk,typeof define=="function"&&define)});var L1=Ar(()=>{});var $1=Ar((_1,$b)=>{(function(r,e,t){var n=256,o=6,s=52,a="random",i=t.pow(n,o),p=t.pow(2,s),u=p*2,l=n-1,m;function c(x,I,k){var N=[];I=I==!0?{entropy:!0}:I||{};var P=g(h(I.entropy?[x,T(e)]:x??y(),3),N),F=new d(N),E=function(){for(var $=F.g(o),U=i,W=0;$<p;)$=($+W)*n,U*=n,W=F.g(1);for(;$>=u;)$/=2,U/=2,W>>>=1;return($+W)/U};return E.int32=function(){return F.g(4)|0},E.quick=function(){return F.g(4)/4294967296},E.double=E,g(T(F.S),e),(I.pass||k||function($,U,W,V){return V&&(V.S&&f(V,F),$.state=function(){return f(F,{})}),W?(t[a]=$,U):$})(E,P,"global"in I?I.global:this==t,I.state)}function d(x){var I,k=x.length,N=this,P=0,F=N.i=N.j=0,E=N.S=[];for(k||(x=[k++]);P<n;)E[P]=P++;for(P=0;P<n;P++)E[P]=E[F=l&F+x[P%k]+(I=E[P])],E[F]=I;(N.g=function($){for(var U,W=0,V=N.i,H=N.j,q=N.S;$--;)U=q[V=l&V+1],W=W*n+q[l&(q[V]=q[H=l&H+U])+(q[H]=U)];return N.i=V,N.j=H,W})(n)}function f(x,I){return I.i=x.i,I.j=x.j,I.S=x.S.slice(),I}function h(x,I){var k=[],N=typeof x,P;if(I&&N=="object")for(P in x)try{k.push(h(x[P],I-1))}catch{}return k.length?k:N=="string"?x:x+"\0"}function g(x,I){for(var k=x+"",N,P=0;P<k.length;)I[l&P]=l&(N^=I[l&P]*19)+k.charCodeAt(P++);return T(I)}function y(){try{var x;return m&&(x=m.randomBytes)?x=x(n):(x=new Uint8Array(n),(r.crypto||r.msCrypto).getRandomValues(x)),T(x)}catch{var I=r.navigator,k=I&&I.plugins;return[+new Date,r,k,r.screen,T(e)]}}function T(x){return String.fromCharCode.apply(0,x)}if(g(t.random(),e),typeof $b=="object"&&$b.exports){$b.exports=c;try{m=L1()}catch{}}else typeof define=="function"&&define.amd?define(function(){return c}):t["seed"+a]=c})(typeof self<"u"?self:_1,[],Math)});var Wd=Ar((uFe,B1)=>{var CX=S1(),kX=A1(),SX=N1(),vX=P1(),AX=F1(),wX=R1(),Qp=$1();Qp.alea=CX;Qp.xor128=kX;Qp.xorwow=SX;Qp.xorshift7=vX;Qp.xor4096=AX;Qp.tychei=wX;B1.exports=Qp});var Pv=Ar(()=>{});var oT=Ar(()=>{});var Ag=Ar(()=>{});var FH=Ar(()=>{});var EH=Ar(()=>{});var RH=Ar(()=>{});var LH=Ar((hx,a0)=>{var s0=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e){e=e||{};function t(){return Be.buffer!=xr&&ea(Be.buffer),Wl}function n(){return Be.buffer!=xr&&ea(Be.buffer),Kl}function o(){return Be.buffer!=xr&&ea(Be.buffer),ed}function s(){return Be.buffer!=xr&&ea(Be.buffer),Pg}function a(){return Be.buffer!=xr&&ea(Be.buffer),Mg}function i(){return Be.buffer!=xr&&ea(Be.buffer),Fg}function p(){return Be.buffer!=xr&&ea(Be.buffer),Eg}var u=typeof e<"u"?e:{},l,m;u.ready=new Promise(function(w,R){l=w,m=R});var c;typeof process<"u"&&process.listeners&&(c={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var d=Object.assign({},u),f=[],h="./this.program",g=(w,R)=>{throw R},y=typeof window=="object",T=typeof importScripts=="function",x=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",I=u.ENVIRONMENT_IS_PTHREAD||!1,k="";function N(w){return u.locateFile?u.locateFile(w,k):k+w}var P,F,E,$;function U(w){if(w instanceof pd)return;j("exiting due to exception: "+w)}var W,V,H;if(x){T?k=Ag().dirname(k)+"/":k=__dirname+"/",H=()=>{V||(W=oT(),V=Ag())},P=function(G,X){return H(),G=V.normalize(G),W.readFileSync(G,X?void 0:"utf8")},E=R=>{var G=P(R,!0);return G.buffer||(G=new Uint8Array(G)),G},F=(R,G,X)=>{H(),R=V.normalize(R),W.readFile(R,function(ge,Se){ge?X(ge):G(Se.buffer)})},process.argv.length>1&&(h=process.argv[1].replace(/\\/g,"/")),f=process.argv.slice(2),process.on("uncaughtException",function(R){if(!(R instanceof pd))throw R}),process.on("unhandledRejection",function(R){throw R}),g=(R,G)=>{if(Ip())throw process.exitCode=R,G;U(G),process.exit(R)},u.inspect=function(){return"[Emscripten Module object]"};let w;try{w=FH()}catch(R){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),R}global.Worker=w.Worker}else(y||T)&&(T?k=self.location.href:typeof document<"u"&&document.currentScript&&(k=document.currentScript.src),typeof r<"u"&&r&&(k=r),k.indexOf("blob:")!==0?k=k.substr(0,k.replace(/[?#].*/,"").lastIndexOf("/")+1):k="",x||(P=w=>{var R=new XMLHttpRequest;return R.open("GET",w,!1),R.send(null),R.responseText},T&&(E=w=>{var R=new XMLHttpRequest;return R.open("GET",w,!1),R.responseType="arraybuffer",R.send(null),new Uint8Array(R.response)}),F=(w,R,G)=>{var X=new XMLHttpRequest;X.open("GET",w,!0),X.responseType="arraybuffer",X.onload=()=>{if(X.status==200||X.status==0&&X.response){R(X.response);return}G()},X.onerror=G,X.send(null)}),$=w=>document.title=w);x&&typeof performance>"u"&&(global.performance=EH().performance);var q=console.log.bind(console),Y=console.warn.bind(console);x&&(H(),q=w=>W.writeSync(1,w+`
`),Y=w=>W.writeSync(2,w+`
`));var ee=u.print||q,j=u.printErr||Y;Object.assign(u,d),d=null,u.arguments&&(f=u.arguments),u.thisProgram&&(h=u.thisProgram),u.quit&&(g=u.quit);var re=4;function se(w){se.shown||(se.shown={}),se.shown[w]||(se.shown[w]=1,j(w))}function ae(w,R){if(typeof WebAssembly.Function=="function"){for(var G={i:"i32",j:"i64",f:"f32",d:"f64"},X={parameters:[],results:R[0]=="v"?[]:[G[R[0]]]},ge=1;ge<R.length;++ge)X.parameters.push(G[R[ge]]);return new WebAssembly.Function(X,w)}var Se=[1,0,1,96],De=R.slice(0,1),We=R.slice(1),ir={i:127,j:126,f:125,d:124};Se.push(We.length);for(var ge=0;ge<We.length;++ge)Se.push(ir[We[ge]]);De=="v"?Se.push(0):Se=Se.concat([1,ir[De]]),Se[1]=Se.length-2;var oa=new Uint8Array([0,97,115,109,1,0,0,0].concat(Se,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),sa=new WebAssembly.Module(oa),ub=new WebAssembly.Instance(sa,{e:{f:w}}),ld=ub.exports.f;return ld}var le=[],ie;function be(){if(le.length)return le.pop();try{to.grow(1)}catch(w){throw w instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":w}return to.length-1}function he(w,R){for(var G=w;G<w+R;G++){var X=Xl(G);X&&ie.set(X,G)}}var Ie=0,we=w=>{Ie=w},Ee=Atomics.load,_e=Atomics.store,Qe=Atomics.compareExchange,J;u.wasmBinary&&(J=u.wasmBinary);var ft=u.noExitRuntime||!0;typeof WebAssembly!="object"&&Hl("no native wasm support detected");var Be,Mt,wt=!1,lt;function Zt(w,R){w||Hl(R)}function zt(w){var R=u["_"+w];return R}function tn(w,R,G,X,ge){var Se={string:function(Bn){var rm=0;if(Bn!=null&&Bn!==0){var F0=(Bn.length<<2)+1;rm=tm(F0),$n(Bn,rm,F0)}return rm},array:function(Bn){var rm=tm(Bn.length);return Nu(Bn,rm),rm}};function De(Bn){return R==="string"?Xr(Bn):R==="boolean"?Boolean(Bn):Bn}var We=zt(w),ir=[],oa=0;if(X)for(var sa=0;sa<X.length;sa++){var ub=Se[G[sa]];ub?(oa===0&&(oa=jI()),ir[sa]=ub(X[sa])):ir[sa]=X[sa]}var ld=We.apply(null,ir);function Rq(Bn){return oa!==0&&ob(oa),De(Bn)}return ld=Rq(ld),ld}function Vt(w,R,G,X){G=G||[];var ge=G.every(function(De){return De==="number"}),Se=R!=="string";return Se&&ge&&!X?zt(w):function(){return tn(w,R,G,arguments,X)}}var Zs=1;function $r(w){var R=new TextDecoder(w);this.decode=G=>(G.buffer instanceof SharedArrayBuffer&&(G=new Uint8Array(G)),R.decode.call(R,G))}var rn=typeof TextDecoder<"u"?new $r("utf8"):void 0;function nn(w,R,G){for(var X=R+G,ge=R;w[ge]&&!(ge>=X);)++ge;if(ge-R>16&&w.subarray&&rn)return rn.decode(w.subarray(R,ge));for(var Se="";R<ge;){var De=w[R++];if(!(De&128)){Se+=String.fromCharCode(De);continue}var We=w[R++]&63;if((De&224)==192){Se+=String.fromCharCode((De&31)<<6|We);continue}var ir=w[R++]&63;if((De&240)==224?De=(De&15)<<12|We<<6|ir:De=(De&7)<<18|We<<12|ir<<6|w[R++]&63,De<65536)Se+=String.fromCharCode(De);else{var oa=De-65536;Se+=String.fromCharCode(55296|oa>>10,56320|oa&1023)}}return Se}function Xr(w,R){return w?nn(n(),w,R):""}function ss(w,R,G,X){if(!(X>0))return 0;for(var ge=G,Se=G+X-1,De=0;De<w.length;++De){var We=w.charCodeAt(De);if(We>=55296&&We<=57343){var ir=w.charCodeAt(++De);We=65536+((We&1023)<<10)|ir&1023}if(We<=127){if(G>=Se)break;R[G++]=We}else if(We<=2047){if(G+1>=Se)break;R[G++]=192|We>>6,R[G++]=128|We&63}else if(We<=65535){if(G+2>=Se)break;R[G++]=224|We>>12,R[G++]=128|We>>6&63,R[G++]=128|We&63}else{if(G+3>=Se)break;R[G++]=240|We>>18,R[G++]=128|We>>12&63,R[G++]=128|We>>6&63,R[G++]=128|We&63}}return R[G]=0,G-ge}function $n(w,R,G){return ss(w,n(),R,G)}function Js(w){for(var R=0,G=0;G<w.length;++G){var X=w.charCodeAt(G);X>=55296&&X<=57343&&(X=65536+((X&1023)<<10)|w.charCodeAt(++G)&1023),X<=127?++R:X<=2047?R+=2:X<=65535?R+=3:R+=4}return R}var as=typeof TextDecoder<"u"?new $r("utf-16le"):void 0;function Nu(w,R){t().set(w,R)}function Tp(w,R,G){for(var X=0;X<w.length;++X)t()[R++>>0]=w.charCodeAt(X);G||(t()[R>>0]=0)}function Ul(w,R){return w%R>0&&(w+=R-w%R),w}var xr,Wl,Kl,ed,Pg,Mg,c0,Fg,Eg;I&&(xr=u.buffer);function ea(w){xr=w,u.HEAP8=Wl=new Int8Array(w),u.HEAP16=ed=new Int16Array(w),u.HEAP32=Mg=new Int32Array(w),u.HEAPU8=Kl=new Uint8Array(w),u.HEAPU16=Pg=new Uint16Array(w),u.HEAPU32=c0=new Uint32Array(w),u.HEAPF32=Fg=new Float32Array(w),u.HEAPF64=Eg=new Float64Array(w)}var Rg=u.INITIAL_MEMORY||16777216;if(I)Be=u.wasmMemory,xr=u.buffer;else if(u.wasmMemory)Be=u.wasmMemory;else if(Be=new WebAssembly.Memory({initial:Rg/65536,maximum:32768,shared:!0}),!(Be.buffer instanceof SharedArrayBuffer))throw j("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),x&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");Be&&(xr=Be.buffer),Rg=xr.byteLength,ea(xr);var to,Vl=[],Du=[],Tx=[],Lg=[],xp=!1,xx=!1,_g=0;function Ip(){return ft||_g>0}function on(){if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)d0(u.preRun.shift());Gg(Vl)}function td(){xp=!0,!I&&Gg(Du)}function Ix(){I||(Ve.terminateAllThreads(),xx=!0)}function Cx(){if(!I){if(u.postRun)for(typeof u.postRun=="function"&&(u.postRun=[u.postRun]);u.postRun.length;)rd(u.postRun.shift());Gg(Lg)}}function d0(w){Vl.unshift(w)}function f0(w){Du.unshift(w)}function rd(w){Lg.unshift(w)}var Pu=0,$g=null,ta=null;function nd(w){Pu++,u.monitorRunDependencies&&u.monitorRunDependencies(Pu)}function h0(w){if(Pu--,u.monitorRunDependencies&&u.monitorRunDependencies(Pu),Pu==0&&($g!==null&&(clearInterval($g),$g=null),ta)){var R=ta;ta=null,R()}}u.preloadedImages={},u.preloadedAudios={};function Hl(w){I?postMessage({cmd:"onAbort",arg:w}):u.onAbort&&u.onAbort(w),w="Aborted("+w+")",j(w),wt=!0,lt=1,w+=". Build with -s ASSERTIONS=1 for more info.";var R=new WebAssembly.RuntimeError(w);throw m(R),R}var kx="data:application/octet-stream;base64,";function Bg(w){return w.startsWith(kx)}function Og(w){return w.startsWith("file://")}var sn;sn="tfjs-backend-wasm-threaded-simd.wasm",Bg(sn)||(sn=N(sn));function zg(w){try{if(w==sn&&J)return new Uint8Array(J);if(E)return E(w);throw"both async and sync fetching of the wasm failed"}catch(R){Hl(R)}}function ql(){if(!J&&(y||T)){if(typeof fetch=="function"&&!Og(sn))return fetch(sn,{credentials:"same-origin"}).then(function(w){if(!w.ok)throw"failed to load wasm binary file at '"+sn+"'";return w.arrayBuffer()}).catch(function(){return zg(sn)});if(F)return new Promise(function(w,R){F(sn,function(G){w(new Uint8Array(G))},R)})}return Promise.resolve().then(function(){return zg(sn)})}function Sx(){var w={env:Jg,wasi_snapshot_preview1:Jg};function R(De,We){var ir=De.exports;if(u.asm=ir,Mx(u.asm.emscripten_tls_init),to=u.asm.__indirect_function_table,f0(u.asm.__wasm_call_ctors),Mt=We,!I){var oa=Ve.unusedWorkers.length;Ve.unusedWorkers.forEach(function(sa){Ve.loadWasmModuleToWorker(sa,function(){--oa||h0("wasm-instantiate")})})}}I||nd("wasm-instantiate");function G(De){R(De.instance,De.module)}function X(De){return ql().then(function(We){return WebAssembly.instantiate(We,w)}).then(function(We){return We}).then(De,function(We){j("failed to asynchronously prepare wasm: "+We),Hl(We)})}function ge(){return!J&&typeof WebAssembly.instantiateStreaming=="function"&&!Bg(sn)&&!Og(sn)&&typeof fetch=="function"?fetch(sn,{credentials:"same-origin"}).then(function(De){var We=WebAssembly.instantiateStreaming(De,w);return We.then(G,function(ir){return j("wasm streaming compile failed: "+ir),j("falling back to ArrayBuffer instantiation"),X(G)})}):X(G)}if(u.instantiateWasm)try{var Se=u.instantiateWasm(w,R);return Se}catch(De){return j("Module.instantiateWasm callback failed with error: "+De),!1}return ge().catch(m),{}}var g0,b0,vx={};function Gg(w){for(;w.length>0;){var R=w.shift();if(typeof R=="function"){R(u);continue}var G=R.func;typeof G=="number"?R.arg===void 0?Xl(G)():Xl(G)(R.arg):G(R.arg===void 0?null:R.arg)}}function jl(w){var R=jI(),G=w();return ob(R),G}function UH(w){return w}function y0(w){var R=/\b_Z[\w\d_]+/g;return w.replace(R,function(G){var X=G;return G===X?G:X+" ["+G+"]"})}function Ax(w){a()[w>>2]=0;var R=Ve.pthreads[w];delete Ve.pthreads[w],R.worker.terminate(),qI(w),Ve.runningWorkers.splice(Ve.runningWorkers.indexOf(R.worker),1),R.worker.pthread=void 0}function wx(w){var R=Ve.pthreads[w];R.worker.postMessage({cmd:"cancel"})}function Ug(w){var R=Ve.pthreads[w];if(R){a()[w>>2]=0;var G=R.worker;Ve.returnWorkerToPool(G)}}function Wg(w){Mq(w)}function Nx(w){if(w instanceof pd||w=="unwind")return lt;g(1,w)}var Ve={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){I?Ve.initWorker():Ve.initMainThread()},initMainThread:function(){for(var w=8,R=0;R<w;++R)Ve.allocateUnusedWorker()},initWorker:function(){ft=!1},pthreads:{},setExitStatus:function(w){lt=w},terminateAllThreads:function(){for(var w in Ve.pthreads){var R=Ve.pthreads[w];R&&R.worker&&Ve.returnWorkerToPool(R.worker)}for(var G=0;G<Ve.unusedWorkers.length;++G){var X=Ve.unusedWorkers[G];X.terminate()}Ve.unusedWorkers=[]},returnWorkerToPool:function(w){Ve.runWithoutMainThreadQueuedCalls(function(){delete Ve.pthreads[w.pthread.threadInfoStruct],Ve.unusedWorkers.push(w),Ve.runningWorkers.splice(Ve.runningWorkers.indexOf(w),1),qI(w.pthread.threadInfoStruct),w.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(w){a()[M0>>2]=0;try{w()}finally{a()[M0>>2]=1}},receiveObjectTransfer:function(w){},threadInit:function(){for(var w in Ve.tlsInitFunctions)Ve.tlsInitFunctions[w]()},loadWasmModuleToWorker:function(w,R){w.onmessage=G=>{var X=G.data,ge=X.cmd;if(w.pthread&&(Ve.currentProxiedOperationCallerThread=w.pthread.threadInfoStruct),X.targetThread&&X.targetThread!=nb()){var Se=Ve.pthreads[X.targetThread];Se?Se.worker.postMessage(X,X.transferList):j('Internal error! Worker sent a message "'+ge+'" to target pthread '+X.targetThread+", but that thread no longer exists!"),Ve.currentProxiedOperationCallerThread=void 0;return}ge==="processQueuedMainThreadWork"?A0():ge==="spawnThread"?Vg(X):ge==="cleanupThread"?Ug(X.thread):ge==="killThread"?Ax(X.thread):ge==="cancelThread"?wx(X.thread):ge==="loaded"?(w.loaded=!0,R&&R(w),w.runPthread&&(w.runPthread(),delete w.runPthread)):ge==="print"?ee("Thread "+X.threadId+": "+X.text):ge==="printErr"?j("Thread "+X.threadId+": "+X.text):ge==="alert"?alert("Thread "+X.threadId+": "+X.text):X.target==="setimmediate"?w.postMessage(X):ge==="onAbort"?u.onAbort&&u.onAbort(X.arg):j("worker sent an unknown command "+ge),Ve.currentProxiedOperationCallerThread=void 0},w.onerror=G=>{var X="worker sent an error!";throw j(X+" "+G.filename+":"+G.lineno+": "+G.message),G},x&&(w.on("message",function(G){w.onmessage({data:G})}),w.on("error",function(G){w.onerror(G)}),w.on("detachedExit",function(){})),w.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||r,wasmMemory:Be,wasmModule:Mt})},allocateUnusedWorker:function(){var w=N("tfjs-backend-wasm-threaded-simd.worker.js");Ve.unusedWorkers.push(new Worker(w))},getNewWorker:function(){return Ve.unusedWorkers.length==0&&(Ve.allocateUnusedWorker(),Ve.loadWasmModuleToWorker(Ve.unusedWorkers[0])),Ve.unusedWorkers.pop()}};function Dx(){var w=nb(),R=a()[w+44>>2],G=a()[w+48>>2],X=R-G;P0(R,X),ob(R)}u.establishStackSpace=Dx;function Kg(w){if(I)return Sp(1,0,w);try{Wg(w)}catch(R){Nx(R)}}var Cp=[];function Xl(w){var R=Cp[w];return R||(w>=Cp.length&&(Cp.length=w+1),Cp[w]=R=to.get(w)),R}function Px(w,R){return Xl(w)(R)}u.invokeEntryPoint=Px;function T0(){var w=new Error;if(!w.stack){try{throw new Error}catch(R){w=R}if(!w.stack)return"(no stack trace available)"}return w.stack.toString()}function Mx(w,R,G){Ve.tlsInitFunctions.push(w)}function x0(w,R){to.set(w,R),Cp[w]=R}var kp;x?kp=()=>{var w=process.hrtime();return w[0]*1e3+w[1]/1e6}:I?kp=()=>performance.now()-u.__performance_now_clock_drift:kp=()=>performance.now();var Fx=!0;function Ex(w){return a()[v0()>>2]=w,w}function Rx(w,R){var G;if(w===0)G=Date.now();else if((w===1||w===4)&&Fx)G=kp();else return Ex(28),-1;return a()[R>>2]=G/1e3|0,a()[R+4>>2]=G%1e3*1e3*1e3|0,0}function Lx(w,R){return Rx(w,R)}function _x(w){w0(w,!T,1,!y),Ve.threadInit()}function $x(w){I?postMessage({cmd:"cleanupThread",thread:w}):Ug(w)}function Vg(w){var R=Ve.getNewWorker();if(!R)return 6;Ve.runningWorkers.push(R);var G=Ve.pthreads[w.pthread_ptr]={worker:R,threadInfoStruct:w.pthread_ptr};R.pthread=G;var X={cmd:"run",start_routine:w.startRoutine,arg:w.arg,threadInfoStruct:w.pthread_ptr};return R.runPthread=()=>{X.time=performance.now(),R.postMessage(X,w.transferList)},R.loaded&&(R.runPthread(),delete R.runPthread),0}function Bx(w,R,G,X){if(typeof SharedArrayBuffer>"u")return j("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var ge=[],Se=0;if(I&&(ge.length===0||Se))return N0(687865856,w,R,G,X);if(Se)return Se;var De={startRoutine:G,pthread_ptr:w,arg:X,transferList:ge};return I?(De.cmd="spawnThread",postMessage(De,ge),0):Vg(De)}function Ox(){return 2097152}function zx(w,R){if(w==R)postMessage({cmd:"processQueuedMainThreadWork"});else if(I)postMessage({targetThread:w,cmd:"processThreadQueue"});else{var G=Ve.pthreads[w],X=G&&G.worker;if(!X)return;X.postMessage({cmd:"processThreadQueue"})}return 1}function Gx(){Hl("")}function Ux(){x||T||se("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Hg(){return 2147483648}function Wx(w,R,G){n().copyWithin(w,R,R+G)}function Kx(){return x?RH().cpus().length:navigator.hardwareConcurrency}function Sp(w,R){var G=arguments.length-2,X=arguments;return jl(function(){for(var ge=G,Se=tm(ge*8),De=Se>>3,We=0;We<G;We++){var ir=X[2+We];p()[De+We]=ir}return D0(w,ge,Se,R)})}var od=[];function Vx(w,R,G){od.length=R;for(var X=G>>3,ge=0;ge<R;ge++)od[ge]=p()[X+ge];var Se=w<0,De=Se?vx[-w-1]:lI[w];return De.apply(null,od)}function Hx(w){try{return Be.grow(w-xr.byteLength+65535>>>16),ea(Be.buffer),1}catch{}}function qx(w){var R=n().length;if(w=w>>>0,w<=R)return!1;var G=Hg();if(w>G)return!1;for(var X=1;X<=4;X*=2){var ge=R*(1+.2/X);ge=Math.min(ge,w+100663296);var Se=Math.min(G,Ul(Math.max(w,ge),65536)),De=Hx(Se);if(De)return!0}return!1}var ot={inEventHandler:0,removeAllEventListeners:function(){for(var w=ot.eventHandlers.length-1;w>=0;--w)ot._removeHandler(w);ot.eventHandlers=[],ot.deferredCalls=[]},registerRemoveEventListeners:function(){ot.removeEventListenersRegistered||(Tx.push(ot.removeAllEventListeners),ot.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(w,R,G){function X(De,We){if(De.length!=We.length)return!1;for(var ir in De)if(De[ir]!=We[ir])return!1;return!0}for(var ge in ot.deferredCalls){var Se=ot.deferredCalls[ge];if(Se.targetFunction==w&&X(Se.argsList,G))return}ot.deferredCalls.push({targetFunction:w,precedence:R,argsList:G}),ot.deferredCalls.sort(function(De,We){return De.precedence<We.precedence})},removeDeferredCalls:function(w){for(var R=0;R<ot.deferredCalls.length;++R)ot.deferredCalls[R].targetFunction==w&&(ot.deferredCalls.splice(R,1),--R)},canPerformEventHandlerRequests:function(){return ot.inEventHandler&&ot.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!ot.canPerformEventHandlerRequests())for(var w=0;w<ot.deferredCalls.length;++w){var R=ot.deferredCalls[w];ot.deferredCalls.splice(w,1),--w,R.targetFunction.apply(null,R.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(w,R){for(var G=0;G<ot.eventHandlers.length;++G)ot.eventHandlers[G].target==w&&(!R||R==ot.eventHandlers[G].eventTypeString)&&ot._removeHandler(G--)},_removeHandler:function(w){var R=ot.eventHandlers[w];R.target.removeEventListener(R.eventTypeString,R.eventListenerFunc,R.useCapture),ot.eventHandlers.splice(w,1)},registerOrRemoveHandler:function(w){var R=function(ge){++ot.inEventHandler,ot.currentEventHandler=w,ot.runDeferredCalls(),w.handlerFunc(ge),ot.runDeferredCalls(),--ot.inEventHandler};if(w.callbackfunc)w.eventListenerFunc=R,w.target.addEventListener(w.eventTypeString,R,w.useCapture),ot.eventHandlers.push(w),ot.registerRemoveEventListeners();else for(var G=0;G<ot.eventHandlers.length;++G)ot.eventHandlers[G].target==w.target&&ot.eventHandlers[G].eventTypeString==w.eventTypeString&&ot._removeHandler(G--)},queueEventHandlerOnThread_iiii:function(w,R,G,X,ge){jl(function(){var Se=tm(12);a()[Se>>2]=G,a()[Se+4>>2]=X,a()[Se+8>>2]=ge,HI(w,637534208,R,X,Se)})},getTargetThreadForEventCallback:function(w){switch(w){case 1:return 0;case 2:return Ve.currentProxiedOperationCallerThread;default:return w}},getNodeNameForTarget:function(w){return w?w==window?"#window":w==screen?"#screen":w&&w.nodeName?w.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function jx(w){var R=Js(w)+1,G=VI(R);return $n(w,G,R),G}function Xx(w,R,G,X){jl(function(){var ge=tm(12),Se=0;R&&(Se=jx(R)),a()[ge>>2]=Se,a()[ge+4>>2]=G,a()[ge+8>>2]=X,HI(w,657457152,0,Se,ge)})}function Yx(w,R,G,X){R=R?Xr(R):"",Xx(w,R,G,X)}function Qx(w){return w>2?Xr(w):w}var Zx=[0,typeof document<"u"?document:0,typeof window<"u"?window:0];function Jx(w){w=Qx(w);var R=Zx[w]||(typeof document<"u"?document.querySelector(w):void 0);return R}function sd(w){return Jx(w)}function qg(w,R,G){var X=sd(w);if(!X)return-4;if(X.canvasSharedPtr&&(a()[X.canvasSharedPtr>>2]=R,a()[X.canvasSharedPtr+4>>2]=G),X.offscreenCanvas||!X.controlTransferredOffscreen){X.offscreenCanvas&&(X=X.offscreenCanvas);var ge=!1;if(X.GLctxObject&&X.GLctxObject.GLctx){var Se=X.GLctxObject.GLctx.getParameter(2978);ge=Se[0]===0&&Se[1]===0&&Se[2]===X.width&&Se[3]===X.height}X.width=R,X.height=G,ge&&X.GLctxObject.GLctx.viewport(0,0,R,G)}else if(X.canvasSharedPtr){var De=a()[X.canvasSharedPtr+8>>2];return Yx(De,w,R,G),1}else return-4;return 0}function jg(w,R,G){return I?Sp(2,1,w,R,G):qg(w,R,G)}function eI(w,R,G){var X=sd(w);return X?qg(w,R,G):jg(w,R,G)}function tI(){throw"unwind"}function rI(w){var R=w.getExtension("ANGLE_instanced_arrays");if(R)return w.vertexAttribDivisor=function(G,X){R.vertexAttribDivisorANGLE(G,X)},w.drawArraysInstanced=function(G,X,ge,Se){R.drawArraysInstancedANGLE(G,X,ge,Se)},w.drawElementsInstanced=function(G,X,ge,Se,De){R.drawElementsInstancedANGLE(G,X,ge,Se,De)},1}function nI(w){var R=w.getExtension("OES_vertex_array_object");if(R)return w.createVertexArray=function(){return R.createVertexArrayOES()},w.deleteVertexArray=function(G){R.deleteVertexArrayOES(G)},w.bindVertexArray=function(G){R.bindVertexArrayOES(G)},w.isVertexArray=function(G){return R.isVertexArrayOES(G)},1}function oI(w){var R=w.getExtension("WEBGL_draw_buffers");if(R)return w.drawBuffers=function(G,X){R.drawBuffersWEBGL(G,X)},1}function sI(w){return!!(w.multiDrawWebgl=w.getExtension("WEBGL_multi_draw"))}var ar={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(R){ar.lastError||(ar.lastError=R)},getNewId:function(w){for(var R=ar.counter++,G=w.length;G<R;G++)w[G]=null;return R},getSource:function(w,R,G,X){for(var ge="",Se=0;Se<R;++Se){var De=X?a()[X+Se*4>>2]:-1;ge+=Xr(a()[G+Se*4>>2],De<0?void 0:De)}return ge},createContext:function(w,R){w.getContextSafariWebGL2Fixed||(w.getContextSafariWebGL2Fixed=w.getContext,w.getContext=function(ge,Se){var De=w.getContextSafariWebGL2Fixed(ge,Se);return ge=="webgl"==De instanceof WebGLRenderingContext?De:null});var G=w.getContext("webgl",R);if(!G)return 0;var X=ar.registerContext(G,R);return X},registerContext:function(w,R){var G=VI(8);a()[G+4>>2]=nb();var X={handle:G,attributes:R,version:R.majorVersion,GLctx:w};return w.canvas&&(w.canvas.GLctxObject=X),ar.contexts[G]=X,(typeof R.enableExtensionsByDefault>"u"||R.enableExtensionsByDefault)&&ar.initExtensions(X),G},makeContextCurrent:function(w){return ar.currentContext=ar.contexts[w],u.ctx=Zg=ar.currentContext&&ar.currentContext.GLctx,!(w&&!Zg)},getContext:function(w){return ar.contexts[w]},deleteContext:function(w){ar.currentContext===ar.contexts[w]&&(ar.currentContext=null),typeof ot=="object"&&ot.removeAllHandlersOnTarget(ar.contexts[w].GLctx.canvas),ar.contexts[w]&&ar.contexts[w].GLctx.canvas&&(ar.contexts[w].GLctx.canvas.GLctxObject=void 0),S0(ar.contexts[w].handle),ar.contexts[w]=null},initExtensions:function(w){if(w||(w=ar.currentContext),!w.initExtensionsDone){w.initExtensionsDone=!0;var R=w.GLctx;rI(R),nI(R),oI(R),R.disjointTimerQueryExt=R.getExtension("EXT_disjoint_timer_query"),sI(R);var G=R.getSupportedExtensions()||[];G.forEach(function(X){!X.includes("lose_context")&&!X.includes("debug")&&R.getExtension(X)})}}},aI=["default","low-power","high-performance"];function iI(w,R){var G=R>>2,X=a()[G+6],ge={alpha:!!a()[G+0],depth:!!a()[G+1],stencil:!!a()[G+2],antialias:!!a()[G+3],premultipliedAlpha:!!a()[G+4],preserveDrawingBuffer:!!a()[G+5],powerPreference:aI[X],failIfMajorPerformanceCaveat:!!a()[G+7],majorVersion:a()[G+8],minorVersion:a()[G+9],enableExtensionsByDefault:a()[G+10],explicitSwapControl:a()[G+11],proxyContextToMainThread:a()[G+12],renderViaOffscreenBackBuffer:a()[G+13]},Se=sd(w);if(!Se||ge.explicitSwapControl)return 0;var De=ar.createContext(Se,ge);return De}function uI(w,R){return iI(w,R)}var Yl={mappings:{},buffers:[null,[],[]],printChar:function(w,R){var G=Yl.buffers[w];R===0||R===10?((w===1?ee:j)(nn(G,0)),G.length=0):G.push(R)},varargs:void 0,get:function(){Yl.varargs+=4;var w=a()[Yl.varargs-4>>2];return w},getStr:function(w){var R=Xr(w);return R},get64:function(w,R){return w}};function Xg(w){return I?Sp(3,1,w):0}function Yg(w,R,G,X,ge){if(I)return Sp(4,1,w,R,G,X,ge)}function Qg(w,R,G,X){if(I)return Sp(5,1,w,R,G,X);for(var ge=0,Se=0;Se<G;Se++){var De=a()[R>>2],We=a()[R+4>>2];R+=8;for(var ir=0;ir<We;ir++)Yl.printChar(w,n()[De+ir]);ge+=We}return a()[X>>2]=ge,0}function pI(w){we(w)}Ve.init();var Zg,lI=[null,Kg,jg,Xg,Yg,Qg],I0=!1,Jg={__clock_gettime:Lx,__emscripten_init_main_thread_js:_x,__emscripten_thread_cleanup:$x,__pthread_create_js:Bx,_emscripten_default_pthread_stack_size:Ox,_emscripten_notify_thread_queue:zx,abort:Gx,emscripten_check_blocking_allowed:Ux,emscripten_get_heap_max:Hg,emscripten_get_now:kp,emscripten_memcpy_big:Wx,emscripten_num_logical_cores:Kx,emscripten_receive_on_main_thread_js:Vx,emscripten_resize_heap:qx,emscripten_set_canvas_element_size:eI,emscripten_unwind_to_js_event_loop:tI,emscripten_webgl_create_context:uI,exit:Wg,fd_close:Xg,fd_seek:Yg,fd_write:Qg,memory:Be||u.wasmMemory,setTempRet0:pI},C0=Sx(),mI=u.___wasm_call_ctors=function(){return(mI=u.___wasm_call_ctors=u.asm.__wasm_call_ctors).apply(null,arguments)},cI=u._init=function(){return(cI=u._init=u.asm.init).apply(null,arguments)},dI=u._init_with_threads_count=function(){return(dI=u._init_with_threads_count=u.asm.init_with_threads_count).apply(null,arguments)},fI=u._get_threads_count=function(){return(fI=u._get_threads_count=u.asm.get_threads_count).apply(null,arguments)},hI=u._register_tensor=function(){return(hI=u._register_tensor=u.asm.register_tensor).apply(null,arguments)},gI=u._dispose_data=function(){return(gI=u._dispose_data=u.asm.dispose_data).apply(null,arguments)},bI=u._dispose=function(){return(bI=u._dispose=u.asm.dispose).apply(null,arguments)},yI=u._Abs=function(){return(yI=u._Abs=u.asm.Abs).apply(null,arguments)},TI=u._Add=function(){return(TI=u._Add=u.asm.Add).apply(null,arguments)},xI=u._AddN=function(){return(xI=u._AddN=u.asm.AddN).apply(null,arguments)},II=u._All=function(){return(II=u._All=u.asm.All).apply(null,arguments)},CI=u._Any=function(){return(CI=u._Any=u.asm.Any).apply(null,arguments)},kI=u._ArgMax=function(){return(kI=u._ArgMax=u.asm.ArgMax).apply(null,arguments)},SI=u._AvgPool=function(){return(SI=u._AvgPool=u.asm.AvgPool).apply(null,arguments)},vI=u._BatchMatMul=function(){return(vI=u._BatchMatMul=u.asm.BatchMatMul).apply(null,arguments)},AI=u._Ceil=function(){return(AI=u._Ceil=u.asm.Ceil).apply(null,arguments)},wI=u._ClipByValue=function(){return(wI=u._ClipByValue=u.asm.ClipByValue).apply(null,arguments)},NI=u._Conv2D=function(){return(NI=u._Conv2D=u.asm.Conv2D).apply(null,arguments)},DI=u._Conv2DBackpropInput=function(){return(DI=u._Conv2DBackpropInput=u.asm.Conv2DBackpropInput).apply(null,arguments)},PI=u._Cos=function(){return(PI=u._Cos=u.asm.Cos).apply(null,arguments)},MI=u._Cosh=function(){return(MI=u._Cosh=u.asm.Cosh).apply(null,arguments)},FI=u._CropAndResize=function(){return(FI=u._CropAndResize=u.asm.CropAndResize).apply(null,arguments)},EI=u._Cumprod=function(){return(EI=u._Cumprod=u.asm.Cumprod).apply(null,arguments)},RI=u._Cumsum=function(){return(RI=u._Cumsum=u.asm.Cumsum).apply(null,arguments)},LI=u._DepthToSpace=function(){return(LI=u._DepthToSpace=u.asm.DepthToSpace).apply(null,arguments)},_I=u._DepthwiseConv2dNative=function(){return(_I=u._DepthwiseConv2dNative=u.asm.DepthwiseConv2dNative).apply(null,arguments)},$I=u._Elu=function(){return($I=u._Elu=u.asm.Elu).apply(null,arguments)},BI=u._Equal=function(){return(BI=u._Equal=u.asm.Equal).apply(null,arguments)},OI=u._Exp=function(){return(OI=u._Exp=u.asm.Exp).apply(null,arguments)},zI=u._FlipLeftRight=function(){return(zI=u._FlipLeftRight=u.asm.FlipLeftRight).apply(null,arguments)},eb=u._Floor=function(){return(eb=u._Floor=u.asm.Floor).apply(null,arguments)},tb=u._FloorDiv=function(){return(tb=u._FloorDiv=u.asm.FloorDiv).apply(null,arguments)},ad=u._FusedBatchNorm=function(){return(ad=u._FusedBatchNorm=u.asm.FusedBatchNorm).apply(null,arguments)},GI=u._FusedConv2D=function(){return(GI=u._FusedConv2D=u.asm.FusedConv2D).apply(null,arguments)},UI=u._FusedDepthwiseConv2D=function(){return(UI=u._FusedDepthwiseConv2D=u.asm.FusedDepthwiseConv2D).apply(null,arguments)},Ql=u._Gather=function(){return(Ql=u._Gather=u.asm.Gather).apply(null,arguments)},id=u._GatherNd=function(){return(id=u._GatherNd=u.asm.GatherNd).apply(null,arguments)},ud=u._Greater=function(){return(ud=u._Greater=u.asm.Greater).apply(null,arguments)},k0=u._GreaterEqual=function(){return(k0=u._GreaterEqual=u.asm.GreaterEqual).apply(null,arguments)},Zl=u._LeakyRelu=function(){return(Zl=u._LeakyRelu=u.asm.LeakyRelu).apply(null,arguments)},Jl=u._Less=function(){return(Jl=u._Less=u.asm.Less).apply(null,arguments)},WI=u._LessEqual=function(){return(WI=u._LessEqual=u.asm.LessEqual).apply(null,arguments)},K=u._Log=function(){return(K=u._Log=u.asm.Log).apply(null,arguments)},Z=u._LogicalAnd=function(){return(Z=u._LogicalAnd=u.asm.LogicalAnd).apply(null,arguments)},Te=u._Max=function(){return(Te=u._Max=u.asm.Max).apply(null,arguments)},Re=u._MaxPool=function(){return(Re=u._MaxPool=u.asm.MaxPool).apply(null,arguments)},yt=u._Maximum=function(){return(yt=u._Maximum=u.asm.Maximum).apply(null,arguments)},It=u._Mean=function(){return(It=u._Mean=u.asm.Mean).apply(null,arguments)},it=u._Min=function(){return(it=u._Min=u.asm.Min).apply(null,arguments)},rt=u._Minimum=function(){return(rt=u._Minimum=u.asm.Minimum).apply(null,arguments)},Ir=u._MirrorPad=function(){return(Ir=u._MirrorPad=u.asm.MirrorPad).apply(null,arguments)},ra=u._Multiply=function(){return(ra=u._Multiply=u.asm.Multiply).apply(null,arguments)},na=u._Neg=function(){return(na=u._Neg=u.asm.Neg).apply(null,arguments)},em=u._NonMaxSuppressionV3=function(){return(em=u._NonMaxSuppressionV3=u.asm.NonMaxSuppressionV3).apply(null,arguments)},vp=u._NonMaxSuppressionV4=function(){return(vp=u._NonMaxSuppressionV4=u.asm.NonMaxSuppressionV4).apply(null,arguments)},KI=u._NonMaxSuppressionV5=function(){return(KI=u._NonMaxSuppressionV5=u.asm.NonMaxSuppressionV5).apply(null,arguments)},an=u._NotEqual=function(){return(an=u._NotEqual=u.asm.NotEqual).apply(null,arguments)},Mu=u._OneHot=function(){return(Mu=u._OneHot=u.asm.OneHot).apply(null,arguments)},rb=u._PadV2=function(){return(rb=u._PadV2=u.asm.PadV2).apply(null,arguments)},WH=u._Pow=function(){return(WH=u._Pow=u.asm.Pow).apply(null,arguments)},KH=u._Prelu=function(){return(KH=u._Prelu=u.asm.Prelu).apply(null,arguments)},VH=u._Prod=function(){return(VH=u._Prod=u.asm.Prod).apply(null,arguments)},HH=u._RealDiv=function(){return(HH=u._RealDiv=u.asm.RealDiv).apply(null,arguments)},qH=u._Relu=function(){return(qH=u._Relu=u.asm.Relu).apply(null,arguments)},jH=u._Relu6=function(){return(jH=u._Relu6=u.asm.Relu6).apply(null,arguments)},XH=u._ResizeBilinear=function(){return(XH=u._ResizeBilinear=u.asm.ResizeBilinear).apply(null,arguments)},YH=u._Reverse=function(){return(YH=u._Reverse=u.asm.Reverse).apply(null,arguments)},QH=u._RotateWithOffset=function(){return(QH=u._RotateWithOffset=u.asm.RotateWithOffset).apply(null,arguments)},ZH=u._Round=function(){return(ZH=u._Round=u.asm.Round).apply(null,arguments)},JH=u._Rsqrt=function(){return(JH=u._Rsqrt=u.asm.Rsqrt).apply(null,arguments)},eq=u._ScatterNd=function(){return(eq=u._ScatterNd=u.asm.ScatterNd).apply(null,arguments)},tq=u._SelectV2=function(){return(tq=u._SelectV2=u.asm.SelectV2).apply(null,arguments)},rq=u._Sigmoid=function(){return(rq=u._Sigmoid=u.asm.Sigmoid).apply(null,arguments)},nq=u._Sin=function(){return(nq=u._Sin=u.asm.Sin).apply(null,arguments)},oq=u._Softmax=function(){return(oq=u._Softmax=u.asm.Softmax).apply(null,arguments)},sq=u._SparseFillEmptyRows=function(){return(sq=u._SparseFillEmptyRows=u.asm.SparseFillEmptyRows).apply(null,arguments)},aq=u._SparseReshape=function(){return(aq=u._SparseReshape=u.asm.SparseReshape).apply(null,arguments)},iq=u._SparseSegmentReduction=function(){return(iq=u._SparseSegmentReduction=u.asm.SparseSegmentReduction).apply(null,arguments)},uq=u._Sqrt=function(){return(uq=u._Sqrt=u.asm.Sqrt).apply(null,arguments)},pq=u._Square=function(){return(pq=u._Square=u.asm.Square).apply(null,arguments)},lq=u._SquaredDifference=function(){return(lq=u._SquaredDifference=u.asm.SquaredDifference).apply(null,arguments)},mq=u._Step=function(){return(mq=u._Step=u.asm.Step).apply(null,arguments)},cq=u._StridedSlice=function(){return(cq=u._StridedSlice=u.asm.StridedSlice).apply(null,arguments)},dq=u._Sub=function(){return(dq=u._Sub=u.asm.Sub).apply(null,arguments)},fq=u._Sum=function(){return(fq=u._Sum=u.asm.Sum).apply(null,arguments)},hq=u._Tan=function(){return(hq=u._Tan=u.asm.Tan).apply(null,arguments)},gq=u._Tanh=function(){return(gq=u._Tanh=u.asm.Tanh).apply(null,arguments)},bq=u._Tile=function(){return(bq=u._Tile=u.asm.Tile).apply(null,arguments)},yq=u._TopK=function(){return(yq=u._TopK=u.asm.TopK).apply(null,arguments)},Tq=u._Transform=function(){return(Tq=u._Transform=u.asm.Transform).apply(null,arguments)},xq=u._Transpose=function(){return(xq=u._Transpose=u.asm.Transpose).apply(null,arguments)},Iq=u.__FusedMatMul=function(){return(Iq=u.__FusedMatMul=u.asm._FusedMatMul).apply(null,arguments)},VI=u._malloc=function(){return(VI=u._malloc=u.asm.malloc).apply(null,arguments)},S0=u._free=function(){return(S0=u._free=u.asm.free).apply(null,arguments)},Cq=u._emscripten_tls_init=function(){return(Cq=u._emscripten_tls_init=u.asm.emscripten_tls_init).apply(null,arguments)},v0=u.___errno_location=function(){return(v0=u.___errno_location=u.asm.__errno_location).apply(null,arguments)},nb=u._pthread_self=function(){return(nb=u._pthread_self=u.asm.pthread_self).apply(null,arguments)},A0=u._emscripten_main_thread_process_queued_calls=function(){return(A0=u._emscripten_main_thread_process_queued_calls=u.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},kq=u.__emscripten_thread_crashed=function(){return(kq=u.__emscripten_thread_crashed=u.asm._emscripten_thread_crashed).apply(null,arguments)},w0=u.__emscripten_thread_init=function(){return(w0=u.__emscripten_thread_init=u.asm._emscripten_thread_init).apply(null,arguments)},Sq=u._emscripten_current_thread_process_queued_calls=function(){return(Sq=u._emscripten_current_thread_process_queued_calls=u.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},vq=u._emscripten_main_browser_thread_id=function(){return(vq=u._emscripten_main_browser_thread_id=u.asm.emscripten_main_browser_thread_id).apply(null,arguments)},Aq=u._emscripten_sync_run_in_main_thread_2=function(){return(Aq=u._emscripten_sync_run_in_main_thread_2=u.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},N0=u._emscripten_sync_run_in_main_thread_4=function(){return(N0=u._emscripten_sync_run_in_main_thread_4=u.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)},D0=u._emscripten_run_in_main_runtime_thread_js=function(){return(D0=u._emscripten_run_in_main_runtime_thread_js=u.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},HI=u._emscripten_dispatch_to_thread_=function(){return(HI=u._emscripten_dispatch_to_thread_=u.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},qI=u.__emscripten_thread_free_data=function(){return(qI=u.__emscripten_thread_free_data=u.asm._emscripten_thread_free_data).apply(null,arguments)},wq=u.__emscripten_thread_exit=function(){return(wq=u.__emscripten_thread_exit=u.asm._emscripten_thread_exit).apply(null,arguments)},Nq=u._memalign=function(){return(Nq=u._memalign=u.asm.memalign).apply(null,arguments)},P0=u._emscripten_stack_set_limits=function(){return(P0=u._emscripten_stack_set_limits=u.asm.emscripten_stack_set_limits).apply(null,arguments)},jI=u.stackSave=function(){return(jI=u.stackSave=u.asm.stackSave).apply(null,arguments)},ob=u.stackRestore=function(){return(ob=u.stackRestore=u.asm.stackRestore).apply(null,arguments)},tm=u.stackAlloc=function(){return(tm=u.stackAlloc=u.asm.stackAlloc).apply(null,arguments)},Dq=u.dynCall_iijjiiii=function(){return(Dq=u.dynCall_iijjiiii=u.asm.dynCall_iijjiiii).apply(null,arguments)},Pq=u.dynCall_jiji=function(){return(Pq=u.dynCall_jiji=u.asm.dynCall_jiji).apply(null,arguments)},M0=u.__emscripten_allow_main_runtime_queued_calls=21456;u.cwrap=Vt,u.keepRuntimeAlive=Ip,u.PThread=Ve,u.PThread=Ve,u.wasmMemory=Be,u.ExitStatus=pd;var sb;function pd(w){this.name="ExitStatus",this.message="Program terminated with exit("+w+")",this.status=w}ta=function w(){sb||XI(),sb||(ta=w)};function XI(w){if(w=w||f,Pu>0)return;if(I){l(u),td(),postMessage({cmd:"loaded"});return}if(on(),Pu>0)return;function R(){sb||(sb=!0,u.calledRun=!0,!wt&&(td(),l(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),Cx()))}u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),R()},1)):R()}u.run=XI;function Mq(w,R){if(lt=w,!R&&I)throw Kg(w),"unwind";Ip()||Ix(),Fq(w)}function Fq(w){lt=w,Ip()||(Ve.terminateAllThreads(),u.onExit&&u.onExit(w),wt=!0),g(w,new pd(w))}if(u.preInit)for(typeof u.preInit=="function"&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();XI();var ab;c&&(ab={uncaughtException:process.listeners("uncaughtException").filter(function(w){return!c.uncaughtException.indexOf(w)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(w){return!c.unhandledRejection.indexOf(w)>-1})});var ib;if(typeof WasmBackendModule<"u")ib=WasmBackendModule;else if(typeof e<"u")ib=e;else throw new Error("Could not find wasm module in post.js");if(ab){var Eq=ib._dispose;ib._dispose=function(){Eq(),ab.uncaughtException.forEach(function(w){process.removeListener("uncaughtException",w)}),ab.unhandledRejection.forEach(function(w){process.removeListener("unhandledRejection",w)})}}return e.ready}})();typeof hx=="object"&&typeof a0=="object"?a0.exports=s0:typeof define=="function"&&define.amd?define([],function(){return s0}):typeof hx=="object"&&(hx.WasmBackendModuleThreadedSimd=s0)});var $H=Ar((gx,u0)=>{var i0=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e){e=e||{};var t=typeof e<"u"?e:{},n,o;t.ready=new Promise(function(K,Z){n=K,o=Z});var s;typeof process<"u"&&process.listeners&&(s={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var a=Object.assign({},t),i=[],p="./this.program",u=(K,Z)=>{throw Z},l=typeof window=="object",m=typeof importScripts=="function",c=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",d="";function f(K){return t.locateFile?t.locateFile(K,d):d+K}var h,g,y,T;function x(K){if(K instanceof id)return;F("exiting due to exception: "+K)}var I,k,N;c?(m?d=Ag().dirname(d)+"/":d=__dirname+"/",N=()=>{k||(I=oT(),k=Ag())},h=function(Z,Te){return N(),Z=k.normalize(Z),I.readFileSync(Z,Te?void 0:"utf8")},y=K=>{var Z=h(K,!0);return Z.buffer||(Z=new Uint8Array(Z)),Z},g=(K,Z,Te)=>{N(),K=k.normalize(K),I.readFile(K,function(Re,yt){Re?Te(Re):Z(yt.buffer)})},process.argv.length>1&&(p=process.argv[1].replace(/\\/g,"/")),i=process.argv.slice(2),process.on("uncaughtException",function(K){if(!(K instanceof id))throw K}),process.on("unhandledRejection",function(K){throw K}),u=(K,Z)=>{if(ed())throw process.exitCode=K,Z;x(Z),process.exit(K)},t.inspect=function(){return"[Emscripten Module object]"}):(l||m)&&(m?d=self.location.href:typeof document<"u"&&document.currentScript&&(d=document.currentScript.src),r&&(d=r),d.indexOf("blob:")!==0?d=d.substr(0,d.replace(/[?#].*/,"").lastIndexOf("/")+1):d="",h=K=>{var Z=new XMLHttpRequest;return Z.open("GET",K,!1),Z.send(null),Z.responseText},m&&(y=K=>{var Z=new XMLHttpRequest;return Z.open("GET",K,!1),Z.responseType="arraybuffer",Z.send(null),new Uint8Array(Z.response)}),g=(K,Z,Te)=>{var Re=new XMLHttpRequest;Re.open("GET",K,!0),Re.responseType="arraybuffer",Re.onload=()=>{if(Re.status==200||Re.status==0&&Re.response){Z(Re.response);return}Te()},Re.onerror=Te,Re.send(null)},T=K=>document.title=K);var P=t.print||console.log.bind(console),F=t.printErr||console.warn.bind(console);Object.assign(t,a),a=null,t.arguments&&(i=t.arguments),t.thisProgram&&(p=t.thisProgram),t.quit&&(u=t.quit);var E=4;function $(K){$.shown||($.shown={}),$.shown[K]||($.shown[K]=1,F(K))}function U(K,Z){if(typeof WebAssembly.Function=="function"){for(var Te={i:"i32",j:"i64",f:"f32",d:"f64"},Re={parameters:[],results:Z[0]=="v"?[]:[Te[Z[0]]]},yt=1;yt<Z.length;++yt)Re.parameters.push(Te[Z[yt]]);return new WebAssembly.Function(Re,K)}var It=[1,0,1,96],it=Z.slice(0,1),rt=Z.slice(1),Ir={i:127,j:126,f:125,d:124};It.push(rt.length);for(var yt=0;yt<rt.length;++yt)It.push(Ir[rt[yt]]);it=="v"?It.push(0):It=It.concat([1,Ir[it]]),It[1]=It.length-2;var ra=new Uint8Array([0,97,115,109,1,0,0,0].concat(It,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),na=new WebAssembly.Module(ra),em=new WebAssembly.Instance(na,{e:{f:K}}),vp=em.exports.f;return vp}var W=[],V;function H(){if(W.length)return W.pop();try{as.grow(1)}catch(K){throw K instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":K}return as.length-1}function q(K,Z){for(var Te=K;Te<K+Z;Te++){var Re=nd(Te);Re&&V.set(Re,Te)}}var Y=0,ee=K=>{Y=K},j;t.wasmBinary&&(j=t.wasmBinary);var re=t.noExitRuntime||!0;typeof WebAssembly!="object"&&xp("no native wasm support detected");var se,ae=!1,le;function ie(K,Z){K||xp(Z)}function be(K){var Z=t["_"+K];return Z}function he(K,Z,Te,Re,yt){var It={string:function(an){var Mu=0;if(an!=null&&an!==0){var rb=(an.length<<2)+1;Mu=ad(rb),ft(an,Mu,rb)}return Mu},array:function(an){var Mu=ad(an.length);return wt(an,Mu),Mu}};function it(an){return Z==="string"?Qe(an):Z==="boolean"?Boolean(an):an}var rt=be(K),Ir=[],ra=0;if(Re)for(var na=0;na<Re.length;na++){var em=It[Te[na]];em?(ra===0&&(ra=eb()),Ir[na]=em(Re[na])):Ir[na]=Re[na]}var vp=rt.apply(null,Ir);function KI(an){return ra!==0&&tb(ra),it(an)}return vp=KI(vp),vp}function Ie(K,Z,Te,Re){Te=Te||[];var yt=Te.every(function(it){return it==="number"}),It=Z!=="string";return It&&yt&&!Re?be(K):function(){return he(K,Z,Te,arguments,Re)}}var we=1,Ee=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function _e(K,Z,Te){for(var Re=Z+Te,yt=Z;K[yt]&&!(yt>=Re);)++yt;if(yt-Z>16&&K.subarray&&Ee)return Ee.decode(K.subarray(Z,yt));for(var It="";Z<yt;){var it=K[Z++];if(!(it&128)){It+=String.fromCharCode(it);continue}var rt=K[Z++]&63;if((it&224)==192){It+=String.fromCharCode((it&31)<<6|rt);continue}var Ir=K[Z++]&63;if((it&240)==224?it=(it&15)<<12|rt<<6|Ir:it=(it&7)<<18|rt<<12|Ir<<6|K[Z++]&63,it<65536)It+=String.fromCharCode(it);else{var ra=it-65536;It+=String.fromCharCode(55296|ra>>10,56320|ra&1023)}}return It}function Qe(K,Z){return K?_e(Vt,K,Z):""}function J(K,Z,Te,Re){if(!(Re>0))return 0;for(var yt=Te,It=Te+Re-1,it=0;it<K.length;++it){var rt=K.charCodeAt(it);if(rt>=55296&&rt<=57343){var Ir=K.charCodeAt(++it);rt=65536+((rt&1023)<<10)|Ir&1023}if(rt<=127){if(Te>=It)break;Z[Te++]=rt}else if(rt<=2047){if(Te+1>=It)break;Z[Te++]=192|rt>>6,Z[Te++]=128|rt&63}else if(rt<=65535){if(Te+2>=It)break;Z[Te++]=224|rt>>12,Z[Te++]=128|rt>>6&63,Z[Te++]=128|rt&63}else{if(Te+3>=It)break;Z[Te++]=240|rt>>18,Z[Te++]=128|rt>>12&63,Z[Te++]=128|rt>>6&63,Z[Te++]=128|rt&63}}return Z[Te]=0,Te-yt}function ft(K,Z,Te){return J(K,Vt,Z,Te)}function Be(K){for(var Z=0,Te=0;Te<K.length;++Te){var Re=K.charCodeAt(Te);Re>=55296&&Re<=57343&&(Re=65536+((Re&1023)<<10)|K.charCodeAt(++Te)&1023),Re<=127?++Z:Re<=2047?Z+=2:Re<=65535?Z+=3:Z+=4}return Z}var Mt=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0;function wt(K,Z){tn.set(K,Z)}function lt(K,Z,Te){for(var Re=0;Re<K.length;++Re)tn[Z++>>0]=K.charCodeAt(Re);Te||(tn[Z>>0]=0)}function Zt(K,Z){return K%Z>0&&(K+=Z-K%Z),K}var zt,tn,Vt,Zs,$r,rn,nn,Xr,ss;function $n(K){zt=K,t.HEAP8=tn=new Int8Array(K),t.HEAP16=Zs=new Int16Array(K),t.HEAP32=rn=new Int32Array(K),t.HEAPU8=Vt=new Uint8Array(K),t.HEAPU16=$r=new Uint16Array(K),t.HEAPU32=nn=new Uint32Array(K),t.HEAPF32=Xr=new Float32Array(K),t.HEAPF64=ss=new Float64Array(K)}var Js=t.INITIAL_MEMORY||16777216,as,Nu=[],Tp=[],Ul=[],xr=!1,Wl=!1,Kl=0;function ed(){return re||Kl>0}function Pg(){if(t.preRun)for(typeof t.preRun=="function"&&(t.preRun=[t.preRun]);t.preRun.length;)Eg(t.preRun.shift());rd(Nu)}function Mg(){xr=!0,rd(Tp)}function c0(){Wl=!0}function Fg(){if(t.postRun)for(typeof t.postRun=="function"&&(t.postRun=[t.postRun]);t.postRun.length;)Rg(t.postRun.shift());rd(Ul)}function Eg(K){Nu.unshift(K)}function ea(K){Tp.unshift(K)}function Rg(K){Ul.unshift(K)}var to=0,Vl=null,Du=null;function Tx(K){to++,t.monitorRunDependencies&&t.monitorRunDependencies(to)}function Lg(K){if(to--,t.monitorRunDependencies&&t.monitorRunDependencies(to),to==0&&(Vl!==null&&(clearInterval(Vl),Vl=null),Du)){var Z=Du;Du=null,Z()}}t.preloadedImages={},t.preloadedAudios={};function xp(K){t.onAbort&&t.onAbort(K),K="Aborted("+K+")",F(K),ae=!0,le=1,K+=". Build with -s ASSERTIONS=1 for more info.";var Z=new WebAssembly.RuntimeError(K);throw o(Z),Z}var xx="data:application/octet-stream;base64,";function _g(K){return K.startsWith(xx)}function Ip(K){return K.startsWith("file://")}var on;on="tfjs-backend-wasm.wasm",_g(on)||(on=f(on));function td(K){try{if(K==on&&j)return new Uint8Array(j);if(y)return y(K);throw"both async and sync fetching of the wasm failed"}catch(Z){xp(Z)}}function Ix(){if(!j&&(l||m)){if(typeof fetch=="function"&&!Ip(on))return fetch(on,{credentials:"same-origin"}).then(function(K){if(!K.ok)throw"failed to load wasm binary file at '"+on+"'";return K.arrayBuffer()}).catch(function(){return td(on)});if(g)return new Promise(function(K,Z){g(on,function(Te){K(new Uint8Array(Te))},Z)})}return Promise.resolve().then(function(){return td(on)})}function Cx(){var K={env:jl,wasi_snapshot_preview1:jl};function Z(it,rt){var Ir=it.exports;t.asm=Ir,se=t.asm.memory,$n(se.buffer),as=t.asm.__indirect_function_table,ea(t.asm.__wasm_call_ctors),Lg("wasm-instantiate")}Tx("wasm-instantiate");function Te(it){Z(it.instance)}function Re(it){return Ix().then(function(rt){return WebAssembly.instantiate(rt,K)}).then(function(rt){return rt}).then(it,function(rt){F("failed to asynchronously prepare wasm: "+rt),xp(rt)})}function yt(){return!j&&typeof WebAssembly.instantiateStreaming=="function"&&!_g(on)&&!Ip(on)&&typeof fetch=="function"?fetch(on,{credentials:"same-origin"}).then(function(it){var rt=WebAssembly.instantiateStreaming(it,K);return rt.then(Te,function(Ir){return F("wasm streaming compile failed: "+Ir),F("falling back to ArrayBuffer instantiation"),Re(Te)})}):Re(Te)}if(t.instantiateWasm)try{var It=t.instantiateWasm(K,Z);return It}catch(it){return F("Module.instantiateWasm callback failed with error: "+it),!1}return yt().catch(o),{}}var d0,f0;function rd(K){for(;K.length>0;){var Z=K.shift();if(typeof Z=="function"){Z(t);continue}var Te=Z.func;typeof Te=="number"?Z.arg===void 0?nd(Te)():nd(Te)(Z.arg):Te(Z.arg===void 0?null:Z.arg)}}function Pu(K){return K}function $g(K){var Z=/\b_Z[\w\d_]+/g;return K.replace(Z,function(Te){var Re=Te;return Te===Re?Te:Re+" ["+Te+"]"})}var ta=[];function nd(K){var Z=ta[K];return Z||(K>=ta.length&&(ta.length=K+1),ta[K]=Z=as.get(K)),Z}function h0(){var K=new Error;if(!K.stack){try{throw new Error}catch(Z){K=Z}if(!K.stack)return"(no stack trace available)"}return K.stack.toString()}function Hl(K,Z){as.set(K,Z),ta[K]=Z}function kx(){xp("")}function Bg(K,Z,Te){Vt.copyWithin(K,Z,Z+Te)}function Og(){return 2147483648}function sn(K){try{return se.grow(K-zt.byteLength+65535>>>16),$n(se.buffer),1}catch{}}function zg(K){var Z=Vt.length;K=K>>>0;var Te=Og();if(K>Te)return!1;for(var Re=1;Re<=4;Re*=2){var yt=Z*(1+.2/Re);yt=Math.min(yt,K+100663296);var It=Math.min(Te,Zt(Math.max(K,yt),65536)),it=sn(It);if(it)return!0}return!1}var ql={mappings:{},buffers:[null,[],[]],printChar:function(K,Z){var Te=ql.buffers[K];Z===0||Z===10?((K===1?P:F)(_e(Te,0)),Te.length=0):Te.push(Z)},varargs:void 0,get:function(){ql.varargs+=4;var K=rn[ql.varargs-4>>2];return K},getStr:function(K){var Z=Qe(K);return Z},get64:function(K,Z){return K}};function Sx(K){return 0}function g0(K,Z,Te,Re,yt){}function b0(K,Z,Te,Re){for(var yt=0,It=0;It<Te;It++){var it=rn[Z>>2],rt=rn[Z+4>>2];Z+=8;for(var Ir=0;Ir<rt;Ir++)ql.printChar(K,Vt[it+Ir]);yt+=rt}return rn[Re>>2]=yt,0}function vx(K){ee(K)}var Gg=!1,jl={abort:kx,emscripten_memcpy_big:Bg,emscripten_resize_heap:zg,fd_close:Sx,fd_seek:g0,fd_write:b0,setTempRet0:vx},UH=Cx(),y0=t.___wasm_call_ctors=function(){return(y0=t.___wasm_call_ctors=t.asm.__wasm_call_ctors).apply(null,arguments)},Ax=t._init=function(){return(Ax=t._init=t.asm.init).apply(null,arguments)},wx=t._init_with_threads_count=function(){return(wx=t._init_with_threads_count=t.asm.init_with_threads_count).apply(null,arguments)},Ug=t._get_threads_count=function(){return(Ug=t._get_threads_count=t.asm.get_threads_count).apply(null,arguments)},Wg=t._register_tensor=function(){return(Wg=t._register_tensor=t.asm.register_tensor).apply(null,arguments)},Nx=t._dispose_data=function(){return(Nx=t._dispose_data=t.asm.dispose_data).apply(null,arguments)},Ve=t._dispose=function(){return(Ve=t._dispose=t.asm.dispose).apply(null,arguments)},Dx=t._Abs=function(){return(Dx=t._Abs=t.asm.Abs).apply(null,arguments)},Kg=t._Add=function(){return(Kg=t._Add=t.asm.Add).apply(null,arguments)},Cp=t._AddN=function(){return(Cp=t._AddN=t.asm.AddN).apply(null,arguments)},Xl=t._All=function(){return(Xl=t._All=t.asm.All).apply(null,arguments)},Px=t._Any=function(){return(Px=t._Any=t.asm.Any).apply(null,arguments)},T0=t._ArgMax=function(){return(T0=t._ArgMax=t.asm.ArgMax).apply(null,arguments)},Mx=t._AvgPool=function(){return(Mx=t._AvgPool=t.asm.AvgPool).apply(null,arguments)},x0=t._BatchMatMul=function(){return(x0=t._BatchMatMul=t.asm.BatchMatMul).apply(null,arguments)},kp=t._Ceil=function(){return(kp=t._Ceil=t.asm.Ceil).apply(null,arguments)},Fx=t._ClipByValue=function(){return(Fx=t._ClipByValue=t.asm.ClipByValue).apply(null,arguments)},Ex=t._Conv2D=function(){return(Ex=t._Conv2D=t.asm.Conv2D).apply(null,arguments)},Rx=t._Conv2DBackpropInput=function(){return(Rx=t._Conv2DBackpropInput=t.asm.Conv2DBackpropInput).apply(null,arguments)},Lx=t._Cos=function(){return(Lx=t._Cos=t.asm.Cos).apply(null,arguments)},_x=t._Cosh=function(){return(_x=t._Cosh=t.asm.Cosh).apply(null,arguments)},$x=t._CropAndResize=function(){return($x=t._CropAndResize=t.asm.CropAndResize).apply(null,arguments)},Vg=t._Cumprod=function(){return(Vg=t._Cumprod=t.asm.Cumprod).apply(null,arguments)},Bx=t._Cumsum=function(){return(Bx=t._Cumsum=t.asm.Cumsum).apply(null,arguments)},Ox=t._DepthToSpace=function(){return(Ox=t._DepthToSpace=t.asm.DepthToSpace).apply(null,arguments)},zx=t._DepthwiseConv2dNative=function(){return(zx=t._DepthwiseConv2dNative=t.asm.DepthwiseConv2dNative).apply(null,arguments)},Gx=t._Elu=function(){return(Gx=t._Elu=t.asm.Elu).apply(null,arguments)},Ux=t._Equal=function(){return(Ux=t._Equal=t.asm.Equal).apply(null,arguments)},Hg=t._Exp=function(){return(Hg=t._Exp=t.asm.Exp).apply(null,arguments)},Wx=t._FlipLeftRight=function(){return(Wx=t._FlipLeftRight=t.asm.FlipLeftRight).apply(null,arguments)},Kx=t._Floor=function(){return(Kx=t._Floor=t.asm.Floor).apply(null,arguments)},Sp=t._FloorDiv=function(){return(Sp=t._FloorDiv=t.asm.FloorDiv).apply(null,arguments)},od=t._FusedBatchNorm=function(){return(od=t._FusedBatchNorm=t.asm.FusedBatchNorm).apply(null,arguments)},Vx=t._FusedConv2D=function(){return(Vx=t._FusedConv2D=t.asm.FusedConv2D).apply(null,arguments)},Hx=t._FusedDepthwiseConv2D=function(){return(Hx=t._FusedDepthwiseConv2D=t.asm.FusedDepthwiseConv2D).apply(null,arguments)},qx=t._Gather=function(){return(qx=t._Gather=t.asm.Gather).apply(null,arguments)},ot=t._GatherNd=function(){return(ot=t._GatherNd=t.asm.GatherNd).apply(null,arguments)},jx=t._Greater=function(){return(jx=t._Greater=t.asm.Greater).apply(null,arguments)},Xx=t._GreaterEqual=function(){return(Xx=t._GreaterEqual=t.asm.GreaterEqual).apply(null,arguments)},Yx=t._LeakyRelu=function(){return(Yx=t._LeakyRelu=t.asm.LeakyRelu).apply(null,arguments)},Qx=t._Less=function(){return(Qx=t._Less=t.asm.Less).apply(null,arguments)},Zx=t._LessEqual=function(){return(Zx=t._LessEqual=t.asm.LessEqual).apply(null,arguments)},Jx=t._Log=function(){return(Jx=t._Log=t.asm.Log).apply(null,arguments)},sd=t._LogicalAnd=function(){return(sd=t._LogicalAnd=t.asm.LogicalAnd).apply(null,arguments)},qg=t._Max=function(){return(qg=t._Max=t.asm.Max).apply(null,arguments)},jg=t._MaxPool=function(){return(jg=t._MaxPool=t.asm.MaxPool).apply(null,arguments)},eI=t._Maximum=function(){return(eI=t._Maximum=t.asm.Maximum).apply(null,arguments)},tI=t._Mean=function(){return(tI=t._Mean=t.asm.Mean).apply(null,arguments)},rI=t._Min=function(){return(rI=t._Min=t.asm.Min).apply(null,arguments)},nI=t._Minimum=function(){return(nI=t._Minimum=t.asm.Minimum).apply(null,arguments)},oI=t._MirrorPad=function(){return(oI=t._MirrorPad=t.asm.MirrorPad).apply(null,arguments)},sI=t._Multiply=function(){return(sI=t._Multiply=t.asm.Multiply).apply(null,arguments)},ar=t._Neg=function(){return(ar=t._Neg=t.asm.Neg).apply(null,arguments)},aI=t._NonMaxSuppressionV3=function(){return(aI=t._NonMaxSuppressionV3=t.asm.NonMaxSuppressionV3).apply(null,arguments)},iI=t._NonMaxSuppressionV4=function(){return(iI=t._NonMaxSuppressionV4=t.asm.NonMaxSuppressionV4).apply(null,arguments)},uI=t._NonMaxSuppressionV5=function(){return(uI=t._NonMaxSuppressionV5=t.asm.NonMaxSuppressionV5).apply(null,arguments)},Yl=t._NotEqual=function(){return(Yl=t._NotEqual=t.asm.NotEqual).apply(null,arguments)},Xg=t._OneHot=function(){return(Xg=t._OneHot=t.asm.OneHot).apply(null,arguments)},Yg=t._PadV2=function(){return(Yg=t._PadV2=t.asm.PadV2).apply(null,arguments)},Qg=t._Pow=function(){return(Qg=t._Pow=t.asm.Pow).apply(null,arguments)},pI=t._Prelu=function(){return(pI=t._Prelu=t.asm.Prelu).apply(null,arguments)},Zg=t._Prod=function(){return(Zg=t._Prod=t.asm.Prod).apply(null,arguments)},lI=t._RealDiv=function(){return(lI=t._RealDiv=t.asm.RealDiv).apply(null,arguments)},I0=t._Relu=function(){return(I0=t._Relu=t.asm.Relu).apply(null,arguments)},Jg=t._Relu6=function(){return(Jg=t._Relu6=t.asm.Relu6).apply(null,arguments)},C0=t._ResizeBilinear=function(){return(C0=t._ResizeBilinear=t.asm.ResizeBilinear).apply(null,arguments)},mI=t._Reverse=function(){return(mI=t._Reverse=t.asm.Reverse).apply(null,arguments)},cI=t._RotateWithOffset=function(){return(cI=t._RotateWithOffset=t.asm.RotateWithOffset).apply(null,arguments)},dI=t._Round=function(){return(dI=t._Round=t.asm.Round).apply(null,arguments)},fI=t._Rsqrt=function(){return(fI=t._Rsqrt=t.asm.Rsqrt).apply(null,arguments)},hI=t._ScatterNd=function(){return(hI=t._ScatterNd=t.asm.ScatterNd).apply(null,arguments)},gI=t._SelectV2=function(){return(gI=t._SelectV2=t.asm.SelectV2).apply(null,arguments)},bI=t._Sigmoid=function(){return(bI=t._Sigmoid=t.asm.Sigmoid).apply(null,arguments)},yI=t._Sin=function(){return(yI=t._Sin=t.asm.Sin).apply(null,arguments)},TI=t._Softmax=function(){return(TI=t._Softmax=t.asm.Softmax).apply(null,arguments)},xI=t._SparseFillEmptyRows=function(){return(xI=t._SparseFillEmptyRows=t.asm.SparseFillEmptyRows).apply(null,arguments)},II=t._SparseReshape=function(){return(II=t._SparseReshape=t.asm.SparseReshape).apply(null,arguments)},CI=t._SparseSegmentReduction=function(){return(CI=t._SparseSegmentReduction=t.asm.SparseSegmentReduction).apply(null,arguments)},kI=t._Sqrt=function(){return(kI=t._Sqrt=t.asm.Sqrt).apply(null,arguments)},SI=t._Square=function(){return(SI=t._Square=t.asm.Square).apply(null,arguments)},vI=t._SquaredDifference=function(){return(vI=t._SquaredDifference=t.asm.SquaredDifference).apply(null,arguments)},AI=t._Step=function(){return(AI=t._Step=t.asm.Step).apply(null,arguments)},wI=t._StridedSlice=function(){return(wI=t._StridedSlice=t.asm.StridedSlice).apply(null,arguments)},NI=t._Sub=function(){return(NI=t._Sub=t.asm.Sub).apply(null,arguments)},DI=t._Sum=function(){return(DI=t._Sum=t.asm.Sum).apply(null,arguments)},PI=t._Tan=function(){return(PI=t._Tan=t.asm.Tan).apply(null,arguments)},MI=t._Tanh=function(){return(MI=t._Tanh=t.asm.Tanh).apply(null,arguments)},FI=t._Tile=function(){return(FI=t._Tile=t.asm.Tile).apply(null,arguments)},EI=t._TopK=function(){return(EI=t._TopK=t.asm.TopK).apply(null,arguments)},RI=t._Transform=function(){return(RI=t._Transform=t.asm.Transform).apply(null,arguments)},LI=t._Transpose=function(){return(LI=t._Transpose=t.asm.Transpose).apply(null,arguments)},_I=t.__FusedMatMul=function(){return(_I=t.__FusedMatMul=t.asm._FusedMatMul).apply(null,arguments)},$I=t._malloc=function(){return($I=t._malloc=t.asm.malloc).apply(null,arguments)},BI=t._free=function(){return(BI=t._free=t.asm.free).apply(null,arguments)},OI=t.___errno_location=function(){return(OI=t.___errno_location=t.asm.__errno_location).apply(null,arguments)},zI=t._emscripten_main_thread_process_queued_calls=function(){return(zI=t._emscripten_main_thread_process_queued_calls=t.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},eb=t.stackSave=function(){return(eb=t.stackSave=t.asm.stackSave).apply(null,arguments)},tb=t.stackRestore=function(){return(tb=t.stackRestore=t.asm.stackRestore).apply(null,arguments)},ad=t.stackAlloc=function(){return(ad=t.stackAlloc=t.asm.stackAlloc).apply(null,arguments)},GI=t.dynCall_iijjiiii=function(){return(GI=t.dynCall_iijjiiii=t.asm.dynCall_iijjiiii).apply(null,arguments)},UI=t.dynCall_jiji=function(){return(UI=t.dynCall_jiji=t.asm.dynCall_jiji).apply(null,arguments)};t.cwrap=Ie;var Ql;function id(K){this.name="ExitStatus",this.message="Program terminated with exit("+K+")",this.status=K}Du=function K(){Ql||ud(),Ql||(Du=K)};function ud(K){if(K=K||i,to>0||(Pg(),to>0))return;function Z(){Ql||(Ql=!0,t.calledRun=!0,!ae&&(Mg(),n(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),Fg()))}t.setStatus?(t.setStatus("Running..."),setTimeout(function(){setTimeout(function(){t.setStatus("")},1),Z()},1)):Z()}t.run=ud;function k0(K){le=K,ed()||(t.onExit&&t.onExit(K),ae=!0),u(K,new id(K))}if(t.preInit)for(typeof t.preInit=="function"&&(t.preInit=[t.preInit]);t.preInit.length>0;)t.preInit.pop()();ud();var Zl;s&&(Zl={uncaughtException:process.listeners("uncaughtException").filter(function(K){return!s.uncaughtException.indexOf(K)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(K){return!s.unhandledRejection.indexOf(K)>-1})});var Jl;if(typeof e<"u")Jl=e;else if(typeof WasmBackendModuleThreadedSimd<"u")Jl=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(Zl){var WI=Jl._dispose;Jl._dispose=function(){WI(),Zl.uncaughtException.forEach(function(K){process.removeListener("uncaughtException",K)}),Zl.unhandledRejection.forEach(function(K){process.removeListener("unhandledRejection",K)})}}return e.ready}})();typeof gx=="object"&&typeof u0=="object"?u0.exports=i0:typeof define=="function"&&define.amd?define([],function(){return i0}):typeof gx=="object"&&(gx.WasmBackendModule=i0)});var Uq=1e-7,Wq=1e-4,ei=class{constructor(e,t){this.backend=e;this.dataMover=t;this.data=new WeakMap;this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},is=class{refCount(e){return ro("refCount")}incRef(e){return ro("incRef")}timerAvailable(){return!0}time(e){return ro("time")}read(e){return ro("read")}readSync(e){return ro("readSync")}readToGPU(e,t){return ro("readToGPU")}numDataIds(){return ro("numDataIds")}disposeData(e,t){return ro("disposeData")}write(e,t,n){return ro("write")}move(e,t,n,o,s){return ro("move")}memory(){return ro("memory")}floatPrecision(){return ro("floatPrecision")}epsilon(){return this.floatPrecision()===32?Uq:Wq}dispose(){return ro("dispose")}};function ro(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function E0(r){let e=r.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,lb(r,e,t)}function Kq(r,e){if(r.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${e.length}`);let t=r.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,lb(r,t,n),lb(e,t,n)}function nm(r,e,t){return Math.max(r,Math.min(e,t))}function Vq(r){return r%2===0?r:r+1}function lb(r,e,t){let n=r[e];r[e]=r[t],r[t]=n}function Hq(r){let e=0;for(let t=0;t<r.length;t++)e+=r[t];return e}function qq(r,e){let t=Math.random();return e*t+(1-t)*r}function jq(r,e){let t=0;for(let n=0;n<r.length;n++){let o=Number(r[n])-Number(e[n]);t+=o*o}return t}function M(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function Gt(r,e,t=""){M(On(r,e),()=>t+` Shapes ${r} and ${e} must match`)}function no(r){M(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function aa(r,e=[],t=!1){if(e==null&&(e=[]),Array.isArray(r)||Cr(r)&&!t)for(let n=0;n<r.length;++n)aa(r[n],e,t);else e.push(r);return e}function st(r){if(r.length===0)return 1;let e=r[0];for(let t=1;t<r.length;t++)e*=r[t];return e}function Xq(r){return r.length===0}function On(r,e){if(r===e)return!0;if(r==null||e==null||r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==e[t])return!1;return!0}function Ni(r){return r%1===0}function Yq(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let e=Math.exp(2*r);return(e-1)/(e+1)}}function Qq(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}function Zq(r){let e=new Uint32Array(r);for(let t=0;t<r;++t)e[t]=t;return E0(e),e}function Np(r,e){return e<=r.length?r:r+" ".repeat(e-r.length)}function Jq(r,e=n=>0,t){return new Promise((n,o)=>{let s=0,a=()=>{if(r()){n();return}s++;let i=e(s);if(t!=null&&s>=t){o();return}setTimeout(a,i)};a()})}function ej(r,e){let t=1,n=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)t*=r[s];else if(r[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(n===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${r}`);return r}if(t===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);let o=r.slice();return o[n]=e/t,o}function hr(r,e){let t=e.length;return r=r==null?e.map((n,o)=>o):[].concat(r),M(r.every(n=>n>=-t&&n<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${r}`),M(r.every(n=>Ni(n)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(n=>n<0?t+n:n)}function YI(r,e){let t=[],n=[],o=e!=null&&Array.isArray(e)&&e.length===0,s=e==null||o?null:hr(e,r).sort(),a=0;for(let i=0;i<r.length;++i){if(s!=null){if(s[a]===i&&r[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${r[i]}' is not 1`);(s[a]==null||s[a]>i)&&r[i]===1&&(t.push(r[i]),n.push(i)),s[a]<=i&&a++}r[i]!==1&&(t.push(r[i]),n.push(i))}return{newShape:t,keptDims:n}}function QI(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${r}`);return t}function ZI(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else if(r==="string")t=new Array(e);else throw new Error(`Unknown data type ${r}`);return t}function JI(r,e){for(let t=0;t<r.length;t++){let n=r[t];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${e} being uploaded contains ${n}.`)}}function eC(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function tj(r,e){return!(e==="complex64"||e==="float32"&&r!=="complex64"||e==="int32"&&r!=="float32"&&r!=="complex64"||e==="bool"&&r==="bool")}function Cr(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}function mb(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function tC(r){if(r==null)return 0;let e=0;return r.forEach(t=>e+=t.length),e}function ia(r){return typeof r=="string"||r instanceof String}function R0(r){return typeof r=="boolean"}function L0(r){return typeof r=="number"}function om(r){return Array.isArray(r)?om(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":L0(r)?"float32":ia(r)?"string":R0(r)?"bool":"float32"}function ti(r){return!!(r&&r.constructor&&r.call&&r.apply)}function sm(r,e){for(let t=e;t<r;++t)if(r%t===0)return t;return r}function ri(r){let e=r.length;if(e<2)return[];let t=new Array(e-1);t[e-2]=r[e-1];for(let n=e-3;n>=0;--n)t[n]=t[n+1]*r[n+1];return t}function _0(r,e,t,n=!1){let o=new Array;if(e.length===1){let s=e[0]*(n?2:1);for(let a=0;a<s;a++)o[a]=t[r+a]}else{let s=e[0],a=e.slice(1),i=a.reduce((p,u)=>p*u)*(n?2:1);for(let p=0;p<s;p++)o[p]=_0(r+p*i,a,t,n)}return o}function wp(r,e,t=!1){if(r.length===0)return e[0];let n=r.reduce((o,s)=>o*s)*(t?2:1);if(n===0)return[];if(n!==e.length)throw new Error(`[${r}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return _0(0,r,e,t)}function md(r,e){let t=am(r,e);for(let n=0;n<t.length;n++)t[n]=1;return t}function am(r,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${e}`)}function rj(r,e){let t=r.reduce((n,o)=>n*o,1);if(e==null||e==="float32")return wp(r,new Float32Array(t));if(e==="int32")return wp(r,new Int32Array(t));if(e==="bool")return wp(r,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function cd(r){r.forEach(e=>{M(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function nj(r,e,t){if(e===0)return 0;if(e===1)return r[0];let n=r[r.length-1];for(let o=0;o<r.length-1;++o)n+=t[o]*r[o];return n}function oj(r,e,t){if(e===0)return[];if(e===1)return[r];let n=new Array(e);for(let o=0;o<n.length-1;++o)n[o]=Math.floor(r/t[o]),r-=n[o]*t[o];return n[n.length-1]=r,n}function dd(r){return r&&r.then&&typeof r.then=="function"}var $0="tfjsflags",cb=class{constructor(e){this.global=e;this.flags={};this.flagRegistry={};this.urlFlags={};this.getQueryParams=aj;this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(B().getBool("IS_TEST")||B().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let o=this.urlFlags[e];B().getBool("IS_TEST")||B().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${o}.`),this.set(e,o)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(dd(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);$0 in e&&e[$0].split(",").forEach(n=>{let[o,s]=n.split(":");this.urlFlags[o]=uj(o,s)})}};function aj(r){let e={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(ij(e,n[0],n[1]),n.join("="))),e}function ij(r,e,t){r[decodeURIComponent(e)]=decodeURIComponent(t||"")}function uj(r,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${r}.`)}function B(){return rC}var rC=null;function B0(r){rC=r}var nC;function oC(){if(nC==null){let r;if(typeof window<"u")r=window;else if(typeof global<"u")r=global;else if(typeof process<"u")r=process;else if(typeof self<"u")r=self;else throw new Error("Could not find a global object");nC=r}return nC}function pj(){let r=oC();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function fd(r,e){let t=pj();if(t.has(r))return t.get(r);{let n=e();return t.set(r,n),t.get(r)}}var us="Abs",Di="Acos",Pi="Acosh",wn="Add",oo="AddN",Mi="All",Fi="Any",so="ArgMax",ni="ArgMin",Ei="Asin",Ri="Asinh",Li="Atan",_i="Atanh",$i="Atan2",ao="AvgPool",im="AvgPoolGrad",Fu="AvgPool3D",um="AvgPool3DGrad",io="BatchMatMul",ps="BatchToSpaceND",pm="Bincount",O0="BroadcastTo",lm="BroadcastArgs",zn="Cast",uo="Ceil",Gn="ClipByValue",Eu="Complex",Ru="ComplexAbs",ls="Concat",po="Conv2D",mm="Conv2DBackpropFilter",lo="Conv2DBackpropInput",Lu="Conv3D",cm="Conv3DBackpropFilterV2",dm="Conv3DBackpropInputV2",mo="Cos",co="Cosh",ua="Cumprod",fo="Cumsum",pa="CropAndResize",fm="DenseBincount",la="DepthToSpace",ho="DepthwiseConv2dNative",hm="DepthwiseConv2dNativeBackpropFilter",gm="DepthwiseConv2dNativeBackpropInput",bm="Diag",_u="Dilation2D",hd="Dilation2DBackpropInput",gd="Dilation2DBackpropFilter",go="RealDiv",$u="Einsum",bo="Elu",ym="EluGrad",Bi="Erf",ma="Equal",yo="Exp",ms="ExpandDims",ca="Expm1",Tm="FFT",oi="Fill",da="FlipLeftRight",To="Floor",xo="FloorDiv",Io="FusedBatchNorm",cs="GatherV2",fa="GatherNd",ha="Greater",Co="GreaterEqual",Un="Identity",xm="IFFT",Bu="Imag",Oi="IsFinite",zi="IsInf",Gi="IsNan",ko="LeakyRelu",ga="Less",ba="LessEqual",Im="LinSpace",So="Log",Ui="Log1p",ya="LogicalAnd",Wi="LogicalNot",Dp="LogicalOr",z0="LogSoftmax",Ou="LRN",Cm="LRNGrad",vo="Max",Ao="Maximum",wo="MaxPool",km="MaxPoolGrad",zu="MaxPool3D",Sm="MaxPool3DGrad",vm="MaxPoolWithArgmax",No="Mean",Do="Min",Po="Minimum",Mo="MirrorPad",Ki="Mod",Am="Multinomial",Fo="Multiply",ds="Neg",Ta="NotEqual",xa="NonMaxSuppressionV3",Vi="NonMaxSuppressionV4",Ia="NonMaxSuppressionV5",fs="OnesLike",Ca="OneHot",hs="Pack",Eo="PadV2",Efe="Pool",Ro="Pow",Lo="Prelu",_o="Prod",si="Range",Gu="Real",Hi="Reciprocal",$o="Relu",gs="Reshape",ai="ResizeNearestNeighbor",wm="ResizeNearestNeighborGrad",Bo="ResizeBilinear",Nm="ResizeBilinearGrad",Oo="Relu6",ka="Reverse",Sa="Round",zo="Rsqrt",va="ScatterNd",bs="Select",qi="Selu",ys="Slice",Go="Sin",Aa="Sinh",ji="Sign",Uo="Sigmoid",Xi="Softplus",Wo="Sqrt",Ko="Sum",Ts="SpaceToBatchND",xs="SplitV",Vo="Softmax",Uu="SparseFillEmptyRows",Yi="SparseReshape",Wu="SparseSegmentMean",Ku="SparseSegmentSum",Vu="SparseToDense",Ho="SquaredDifference",ii="Square",wa="StridedSlice",Hu="StringNGrams",Dm="StringSplit",Pm="StringToHashBucketFast",qo="Sub",Na="Tan",jo="Tanh",Nn="Tile",Da="TopK",Pa="Transform",Xo="Transpose",Mm="Unique",Is="Unpack",qu="UnsortedSegmentSum",Cs="ZerosLike",ks="Step",Pp="FromPixels",Ma="RotateWithOffset",Ss="_FusedMatMul",vs="FusedConv2D",As="FusedDepthwiseConv2D";function ui(...r){B().getBool("IS_TEST")||B().getBool("PROD")||console.warn(...r)}function lj(...r){B().getBool("IS_TEST")||B().getBool("PROD")||console.log(...r)}var Fm=fd("kernelRegistry",()=>new Map),bd=fd("gradRegistry",()=>new Map);function yd(r,e){let t=aC(r,e);return Fm.get(t)}function sC(r){return bd.get(r)}function db(r){let e=Fm.entries(),t=[];for(;;){let{done:n,value:o}=e.next();if(n)break;let[s,a]=o,[i]=s.split("_");i===r&&t.push(a)}return t}function Qi(r){let{kernelName:e,backendName:t}=r,n=aC(e,t);Fm.has(n)&&ui(`The kernel '${e}' for backend '${t}' is already registered`),Fm.set(n,r)}function U0(r){let{kernelName:e}=r;bd.has(e)&&B().getBool("DEBUG")&&ui(`Overriding the gradient for '${e}'`),bd.set(e,r)}function Bfe(r,e){let t=aC(r,e);if(!Fm.has(t))throw new Error(`The kernel '${r}' for backend '${e}' is not registered`);Fm.delete(t)}function Ofe(r){if(!bd.has(r))throw new Error(`The gradient '${r}' for backend is not registered`);bd.delete(r)}function zfe(r,e){db(r).forEach(n=>{let o=Object.assign({},n,{backendName:e});Qi(o)})}function aC(r,e){return`${e}_${r}`}var b={};Xe(b,{arraysEqual:()=>On,assert:()=>M,assertNonNegativeIntegerDimensions:()=>cd,assertNonNull:()=>no,assertShapesMatch:()=>Gt,bytesFromStringArray:()=>tC,bytesPerElement:()=>mb,checkConversionForErrors:()=>JI,clamp:()=>nm,computeStrides:()=>ri,createScalarValue:()=>bj,createShuffledIndices:()=>Zq,decodeString:()=>_m,distSquared:()=>jq,encodeString:()=>Xu,fetch:()=>Tj,fingerPrint64:()=>gj,flatten:()=>aa,getArrayFromDType:()=>ZI,getTypedArrayFromDType:()=>QI,hasEncodingLoss:()=>tj,hexToLong:()=>Td,indexToLoc:()=>oj,inferDtype:()=>om,inferFromImplicitShape:()=>ej,isBoolean:()=>R0,isFunction:()=>ti,isInt:()=>Ni,isNumber:()=>L0,isPromise:()=>dd,isScalarShape:()=>Xq,isString:()=>ia,isTypedArray:()=>Cr,isValidDtype:()=>eC,locToIndex:()=>nj,makeOnesTypedArray:()=>md,makeZerosNestedTypedArray:()=>rj,makeZerosTypedArray:()=>am,nearestDivisor:()=>sm,nearestLargerEven:()=>Vq,now:()=>Lp,parseAxisParam:()=>hr,randUniform:()=>qq,repeatedTry:()=>Jq,rightPad:()=>Np,shuffle:()=>E0,shuffleCombo:()=>Kq,sizeFromShape:()=>st,sizeToSquarishShape:()=>Qq,squeezeShape:()=>YI,sum:()=>Hq,swap:()=>lb,tanh:()=>Yq,toNestedArray:()=>wp,toTypedArray:()=>Lm});var lC=Ap(J0());var Rp=lC.default||lC;function Td(r){return Rp.fromString(r,!0,16)}var t2=Td("c3a5c85c97cb3127"),Ep=Td("b492b66fbe98f273"),un=Td("9ae16a3b2f90404f");function pC(r){return r.xor(r.shru(47))}function r2(r,e,t){let n=r.slice(e,e+t);return Rp.fromBytes(Array.from(n),!0,!0)}function Ht(r,e){return r2(r,e,8)}function e2(r,e){return r2(r,e,4)}function Mr(r,e){return e===0?r:r.shru(e).or(r.shl(64-e))}function ju(r,e,t=Td("9ddfea08eb382d69")){let n=r.xor(e).mul(t);n=n.xor(n.shru(47));let o=e.xor(n).mul(t);return o=o.xor(o.shru(47)),o=o.mul(t),o}function cj(r,e,t,n,o,s){o=o.add(r),s=Mr(s.add(o).add(n),21);let a=o;return o=o.add(e),o=o.add(t),s=s.add(Mr(o,44)),[o.add(n),s.add(a)]}function hb(r,e,t,n){return cj(Ht(r,e),Ht(r,e+8),Ht(r,e+16),Ht(r,e+24),t,n)}function dj(r,e=r.length){if(e>=8){let t=un.add(e*2),n=Ht(r,0).add(un),o=Ht(r,e-8),s=Mr(o,37).mul(t).add(n),a=Mr(n,25).add(o).mul(t);return ju(s,a,t)}if(e>=4){let t=un.add(e*2),n=e2(r,0);return ju(n.shl(3).add(e),e2(r,e-4),t)}if(e>0){let t=r[0],n=r[e>>1],o=r[e-1],s=t+(n<<8),a=e+(o<<2);return pC(un.mul(s).xor(t2.mul(a))).mul(un)}return un}function fj(r,e=r.length){let t=un.add(e*2),n=Ht(r,0).mul(Ep),o=Ht(r,8),s=Ht(r,e-8).mul(t),a=Ht(r,e-16).mul(un);return ju(Mr(n.add(o),43).add(Mr(s,30)).add(a),n.add(Mr(o.add(un),18)).add(s),t)}function hj(r,e=r.length){let t=un.add(e*2),n=Ht(r,0).mul(un),o=Ht(r,8),s=Ht(r,e-8).mul(t),a=Ht(r,e-16).mul(un),i=Mr(n.add(o),43).add(Mr(s,30)).add(a),p=ju(i,n.add(Mr(o.add(un),18)).add(s),t),u=Ht(r,16).mul(t),l=Ht(r,24),m=i.add(Ht(r,e-32)).mul(t),c=p.add(Ht(r,e-24)).mul(t);return ju(Mr(u.add(l),43).add(Mr(m,30)).add(c),u.add(Mr(l.add(n),18)).add(m),t)}function gj(r,e=r.length){let t=Rp.fromNumber(81,!0);if(e<=32)return e<=16?dj(r,e):fj(r,e);if(e<=64)return hj(r,e);let n=t,o=t.mul(Ep).add(113),s=pC(o.mul(un).add(113)).mul(un),a=[Rp.UZERO,Rp.UZERO],i=[Rp.UZERO,Rp.UZERO];n=n.mul(un).add(Ht(r,0));let p=0,u=(e-1>>6)*64,l=u+(e-1&63)-63;do n=Mr(n.add(o).add(a[0]).add(Ht(r,p+8)),37).mul(Ep),o=Mr(o.add(a[1]).add(Ht(r,p+48)),42).mul(Ep),n=n.xor(i[1]),o=o.add(a[0]).add(Ht(r,p+40)),s=Mr(s.add(i[0]),33).mul(Ep),a=hb(r,p,a[1].mul(Ep),n.add(i[0])),i=hb(r,p+32,s.add(i[1]),o.add(Ht(r,p+16))),[s,n]=[n,s],p+=64;while(p!==u);let m=Ep.add(s.and(255).shl(1));return p=l,i[0]=i[0].add(e-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),n=Mr(n.add(o).add(a[0]).add(Ht(r,p+8)),37).mul(m),o=Mr(o.add(a[1]).add(Ht(r,p+48)),42).mul(m),n=n.xor(i[1].mul(9)),o=o.add(a[0].mul(9).add(Ht(r,p+40))),s=Mr(s.add(i[0]),33).mul(m),a=hb(r,p,a[1].mul(m),n.add(i[0])),i=hb(r,p+32,s.add(i[1]),o.add(Ht(r,p+16))),[s,n]=[n,s],ju(ju(a[0],i[0],m).add(pC(o).mul(t2)).add(s),ju(a[1],i[1],m).add(n),m)}function bj(r,e){return e==="string"?Xu(r):Lm([r],e)}function yj(r,e){return r instanceof Float32Array&&e==="float32"||r instanceof Int32Array&&e==="int32"||r instanceof Uint8Array&&e==="bool"}function Lm(r,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=aa(r)),B().getBool("DEBUG")&&JI(r,e),yj(r,e))return r;if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"){let t=new Uint8Array(r.length);for(let n=0;n<t.length;++n)Math.round(r[n])!==0&&(t[n]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Lp(){return B().platform.now()}function Tj(r,e){return B().platform.fetch(r,e)}function Xu(r,e="utf-8"){return e=e||"utf-8",B().platform.encode(r,e)}function _m(r,e="utf-8"){return e=e||"utf-8",B().platform.decode(r,e)}var mC=class{constructor(e,t){this.backendTimer=e;this.logger=t;t==null&&(this.logger=new n2)}profileKernel(e,t,n){let o,s=()=>{o=n()},a,i=Lp();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let u of o)u.dataSync();a=Promise.resolve({kernelMs:Lp()-i})}if(B().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<o.length;u++){let l=o[u];l.data().then(m=>{xj(m,l.dtype,e)})}return{kernelName:e,outputs:o,inputs:t,timeMs:a.then(u=>u.kernelMs),extraInfo:a.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:o,inputs:s,extraInfo:a}=e;n.forEach(i=>{Promise.all([i.data(),o,a]).then(p=>{this.logger.logKernelProfile(t,i,p[0],p[1],s,p[2])})})}};function xj(r,e,t){if(e!=="float32")return!1;for(let n=0;n<r.length;n++){let o=r[n];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${t}'`),!0}return!1}var n2=class{logKernelProfile(e,t,n,o,s,a){let i=typeof o=="number"?Np(`${o}ms`,9):o.error,p=Np(e,25),u=t.rank,l=t.size,m=Np(t.shape.toString(),14),c="";for(let d in s){let f=s[d];if(f!=null){let h=f.shape||t.shape,g=h.length;c+=`${d}: ${g}D ${g>0?h:""} `}}console.log(`%c${p}	%c${i}	%c${u}D ${m}	%c${l}	%c${c}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function o2(r,e,t){let n={},o={};for(let p=0;p<e.length;p++)n[e[p].id]=!0;for(let p=0;p<r.length;p++){let u=r[p],l=u.inputs;for(let m in l){let c=l[m],d=!1;for(let f=0;f<e.length;f++)if(n[c.id]){u.outputs.forEach(h=>n[h.id]=!0),d=!0,o[u.id]=!0;break}if(d)break}}let s={};s[t.id]=!0;let a={};for(let p=r.length-1;p>=0;p--){let u=r[p],l=u.inputs;for(let m=0;m<u.outputs.length;m++)if(s[u.outputs[m].id]){for(let c in l)s[l[c].id]=!0,a[u.id]=!0;break}}let i=[];for(let p=0;p<r.length;p++){let u=r[p];if(o[u.id]&&a[u.id]){let l={};for(let c in u.inputs){let d=u.inputs[c];n[d.id]&&(l[c]=d)}let m=Object.assign({},u);m.inputs=l,m.outputs=u.outputs,i.push(m)}}return i}function s2(r,e,t,n){for(let o=e.length-1;o>=0;o--){let s=e[o],a=[];if(s.outputs.forEach(p=>{let u=r[p.id];u!=null?a.push(u):a.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let i=s.gradient(a);for(let p in s.inputs){if(!(p in i))throw new Error(`Cannot backprop through input ${p}. Available gradients found: ${Object.keys(i)}.`);let u=t(()=>i[p]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${p} must have 'float32' dtype, but has '${u.dtype}'`);let l=s.inputs[p];if(!On(u.shape,l.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${p}' has shape '${u.shape}', which does not match the shape of the input '${l.shape}'`);if(r[l.id]==null)r[l.id]=u;else{let m=r[l.id];r[l.id]=n(m,u),m.dispose()}}}}var a2=20,xd=3,cC=7;function i2(r,e,t,n){let o=ri(e),s=Ij(r,e,t,o),a=e.length,i=gb(r,e,t,o,s),p=["Tensor"];return n&&(p.push(`  dtype: ${t}`),p.push(`  rank: ${a}`),p.push(`  shape: [${e}]`),p.push("  values:")),p.push(i.map(u=>"    "+u).join(`
`)),p.join(`
`)}function Ij(r,e,t,n){let o=st(e),s=n[n.length-1],a=new Array(s).fill(0),i=e.length,p=t==="complex64"?Cd(r):r;if(i>1)for(let u=0;u<o/s;u++){let l=u*s;for(let m=0;m<s;m++)a[m]=Math.max(a[m],Id(p[l+m],0,t).length)}return a}function Id(r,e,t){let n;return Array.isArray(r)?n=`${parseFloat(r[0].toFixed(cC))} + ${parseFloat(r[1].toFixed(cC))}j`:ia(r)?n=`'${r}'`:t==="bool"?n=u2(r):n=parseFloat(r.toFixed(cC)).toString(),Np(n,e)}function u2(r){return r===0?"false":"true"}function gb(r,e,t,n,o,s=!0){let a=t==="complex64"?2:1,i=e[0],p=e.length;if(p===0){if(t==="complex64"){let h=Cd(r);return[Id(h[0],0,t)]}return t==="bool"?[u2(r[0])]:[r[0].toString()]}if(p===1){if(i>a2){let g=xd*a,y=Array.from(r.slice(0,g)),T=Array.from(r.slice((i-xd)*a,i*a));return t==="complex64"&&(y=Cd(y),T=Cd(T)),["["+y.map((x,I)=>Id(x,o[I],t)).join(", ")+", ..., "+T.map((x,I)=>Id(x,o[i-xd+I],t)).join(", ")+"]"]}let h=t==="complex64"?Cd(r):Array.from(r);return["["+h.map((g,y)=>Id(g,o[y],t)).join(", ")+"]"]}let u=e.slice(1),l=n.slice(1),m=n[0]*a,c=[];if(i>a2){for(let h=0;h<xd;h++){let g=h*m,y=g+m;c.push(...gb(r.slice(g,y),u,t,l,o,!1))}c.push("...");for(let h=i-xd;h<i;h++){let g=h*m,y=g+m;c.push(...gb(r.slice(g,y),u,t,l,o,h===i-1))}}else for(let h=0;h<i;h++){let g=h*m,y=g+m;c.push(...gb(r.slice(g,y),u,t,l,o,h===i-1))}let d=p===2?",":"";c[0]="["+c[0]+d;for(let h=1;h<c.length-1;h++)c[h]=" "+c[h]+d;let f=`,
`;for(let h=2;h<p;h++)f+=`
`;return c[c.length-1]=" "+c[c.length-1]+"]"+(s?"":f),c}function Cd(r){let e=[];for(let t=0;t<r.length;t+=2)e.push([r[t],r[t+1]]);return e}var gt=class{constructor(e,t,n){this.dtype=t;if(this.shape=e.slice(),this.size=st(e),n!=null){let o=n.length;M(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ZI(t,this.size),this.strides=ri(e)}set(e,...t){t.length===0&&(t=[0]),M(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let o of e){if(o<0||o>=this.shape[t]){let s=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(s)}t++}let n=e[e.length-1];for(let o=0;o<e.length-1;++o)n+=this.strides[o]*e[o];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ea().makeTensor(this.values,this.shape,this.dtype)}},Ea=null,$m=null,Cj=null;function p2(r){Ea=r}function l2(r){$m=r}function m2(r){Cj=r}var Ye=class{constructor(e,t,n,o){this.kept=!1;this.isDisposedInternal=!1;this.shape=e.slice(),this.dtype=t||"float32",this.size=st(e),this.strides=ri(e),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return $m.buffer(this.shape,this.dtype,e)}bufferSync(){return $m.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return wp(this.shape,e,this.dtype==="complex64")}arraySync(){return wp(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=Ea().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>_m(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Ea().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=Ea().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>_m(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Ea().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ea().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return $m.print(this,e)}clone(){return this.throwIfDisposed(),$m.clone(this)}toString(e=!1){let t=this.dataSync();return i2(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),$m.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ea().makeVariable(this,e,t,n)}};Object.defineProperty(Ye,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function kj(){return fd("Tensor",()=>Ye)}kj();var Yu=class extends Ye{constructor(e,t,n,o){super(e.shape,e.dtype,e.dataId,o);this.trainable=t;this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!On(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ea().disposeTensor(this),this.dataId=e.dataId,Ea().incRef(this,null)}dispose(){Ea().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Yu,Symbol.hasInstance,{value:r=>r instanceof Ye&&r.assign!=null&&r.assign instanceof Function});var Ps={};Xe(Ps,{assertTypesMatch:()=>dC,getTensorsInContainer:()=>kd,isTensorInList:()=>vj,makeTypesMatch:()=>Ze});var c2=(i=>(i.R0="R0",i.R1="R1",i.R2="R2",i.R3="R3",i.R4="R4",i.R5="R5",i.R6="R6",i))(c2||{}),d2=(o=>(o.float32="float32",o.int32="int32",o.bool="int32",o.complex64="complex64",o))(d2||{}),f2=(o=>(o.float32="float32",o.int32="int32",o.bool="bool",o.complex64="complex64",o))(f2||{}),h2=(o=>(o.float32="float32",o.int32="float32",o.bool="float32",o.complex64="complex64",o))(h2||{}),g2=(o=>(o.float32="complex64",o.int32="complex64",o.bool="complex64",o.complex64="complex64",o))(g2||{}),Sj={float32:h2,int32:d2,bool:f2,complex64:g2};function Ft(r,e){if(r==="string"||e==="string"){if(r==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${r} with ${e}`)}return Sj[r][e]}function Zi(r){return Ft(r,"int32")}function Ze(r,e){if(r.dtype===e.dtype)return[r,e];let t=Ft(r.dtype,e.dtype);return[r.cast(t),e.cast(t)]}function dC(r,e){M(r.dtype===e.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${e.dtype}) input must match`)}function vj(r,e){return e.some(t=>t.id===r.id)}function kd(r){let e=[];return b2(r,e,new Set),e}function b2(r,e,t){if(r==null)return;if(r instanceof Ye){e.push(r);return}if(!Aj(r))return;let n=r;for(let o in n){let s=n[o];t.has(s)||(t.add(s),b2(s,e,t))}}function Aj(r){return Array.isArray(r)||typeof r=="object"}function fC(r){return r.kernelName!=null}var hC=class{constructor(){this.registeredVariables={};this.nextTapeNodeId=0;this.numBytes=0;this.numTensors=0;this.numStringTensors=0;this.numDataBuffers=0;this.gradientDepth=0;this.kernelDepth=0;this.scopeStack=[];this.numDataMovesStack=[];this.nextScopeId=0;this.tensorInfo=new WeakMap;this.profiling=!1;this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},yb=class{constructor(e){this.ENV=e;this.registry={};this.registryFactory={};this.pendingBackendInitId=0;this.state=new hC}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ui(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new mC(this.backendInstance),!0}setupRegisteredKernels(){db(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){db(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof is)&&typeof n.then=="function"){let o=++this.pendingBackendInitId,s=n.then(a=>o<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,ui(`Initialization of backend ${e} failed`),ui(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return ui(`Initialization of backend ${e} failed`),ui(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:o,asyncInit:s}=this.initializeBackend(n);if(s||o)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),o=n.backend,s=this.readSync(t),a=o.refCount(t);o.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let o;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(o),()=>(o=t(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(e,t,n){e();try{let o=n();return t(),o}catch(o){throw t(),o}}nextTensorId(){return yb.nextTensorId++}nextVariableId(){return yb.nextVariableId++}clone(e){let t=D.runKernel(Un,{x:e}),n={x:e},o=a=>({x:()=>{let i="float32",p={x:a},u={dtype:i};return D.runKernel(zn,p,u)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[t],o,s,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(yd(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let o=this.backend.numDataIds(),s=0;n.forEach(p=>{s+=p.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=o-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],o=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let p,u=fC(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(fC(e)){let{kernelName:f,inputs:h,attrs:g}=e;this.backendName==null&&this.backend;let y=yd(f,this.backendName);M(y!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{let T=this.backend.numDataIds();p=y.kernelFunc({inputs:h,attrs:g,backend:this.backend});let x=Array.isArray(p)?p:[p];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,T,x);let I=x.map(k=>{if(k.rank!=null)return k;let{dataId:N,shape:P,dtype:F}=k;return this.makeTensorFromDataId(N,P,F)});if(o){let k=this.getTensorsForGradient(f,h,I);n=this.saveTensorsForBackwardMode(k)}return I}}else{let{forwardFunc:f}=e,h=g=>{!o||(n=g.map(y=>this.keep(this.clone(y))))};i=()=>{let g=this.backend.numDataIds();p=this.tidy(()=>f(this.backend,h));let y=Array.isArray(p)?p:[p];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,g,y),y}}let{inputs:l,attrs:m}=e,c=fC(e)?null:e.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(d=this.profiler.profileKernel(u,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs)}),o&&this.addTapeNode(u,l,t,c,n,m),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(f=>l[f]!=null?l[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(p)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let o=sC(e);if(o!=null){let s=o.inputsToSave||[],a=o.outputsToSave||[],i;o.saveAllInputs?(M(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(u=>t[u])):i=s.map(u=>t[u]);let p=n.filter((u,l)=>a[l]);return i.concat(p)}return[]}makeTensor(e,t,n,o){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",o=o||this.backend;let s=e;n==="string"&&ia(e[0])&&(s=e.map(p=>Xu(p)));let a=o.write(s,t,n),i=new Ye(t,n,a,this.nextTensorId());if(this.trackTensor(i,o),n==="string"){let p=this.state.tensorInfo.get(a),u=tC(s);this.state.numBytes+=u-p.bytes,p.bytes=u}return i}makeTensorFromDataId(e,t,n,o){n=n||"float32";let s=new Ye(t,n,e,this.nextTensorId());return this.trackTensor(s,o),s}makeVariable(e,t=!0,n,o){n=n||this.nextVariableId().toString(),o!=null&&o!==e.dtype&&(e=e.cast(o));let s=new Yu(e,t,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*mb(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Yu||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*mb(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,o,s,a){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},p=sC(e);p!=null&&(o=p.gradFunc),o!=null&&(i.gradient=u=>(u=u.map((l,m)=>{if(l==null){let c=n[m],d=am(c.size,c.dtype);return this.makeTensor(d,c.shape,c.dtype)}return l}),o(u.length>1?u:u[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=kd(e),n=new Set(t.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!n.has(a.id)&&a.dispose()}let o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(s=>{!s.kept&&s.scopeId===o.id&&this.track(s)})}gradients(e,t,n,o=!1){if(M(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));M(s instanceof Ye,()=>"The result y returned by f() must be a tensor.");let a=o2(this.state.activeTape,t,s);if(!o&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[s.id]=n??wj(s.shape),s2(i,a,u=>this.tidy(u),Nj);let p=t.map(u=>i[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(let l of u.saved)l.dispose()}),this.state.activeTape=null),{value:s,grads:p}})}customGrad(e){return M(ti(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{M(t.every(i=>i instanceof Ye),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,o={};t.forEach((i,p)=>{o[p]=i});let s=(i,p)=>(n=e(...t,p),M(n.value instanceof Ye,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),M(ti(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(i,p)=>{let u=n.gradFunc(i,p),l=Array.isArray(u)?u:[u];M(l.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),M(l.every(c=>c instanceof Ye),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let m={};return l.forEach((c,d)=>{m[d]=()=>c}),m};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Lp(),n=await this.backend.time(e);return n.wallMs=Lp()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new hC;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},bb=yb;bb.nextTensorId=0,bb.nextVariableId=0;function wj(r){let e=md(st(r),"float32");return D.makeTensor(e,r,"float32")}function gC(){let r=oC();if(r._tfengine==null){let e=new cb(r);r._tfengine=new bb(e)}return B0(r._tfengine.ENV),p2(()=>r._tfengine),r._tfengine}var D=gC();function Nj(r,e){let t={a:r,b:e};return D.runKernel(wn,t)}var Qu={};Xe(Qu,{isBrowser:()=>yC,isMobile:()=>Mj,mockIsMobile:()=>Pj});function Dj(){return typeof navigator<"u"&&navigator!=null}var bC;function Pj(r){bC=r}function Mj(r){if(bC!==void 0)return bC;if(r||Dj()){if(r||(r=navigator),r.product==="ReactNative")return!0;let e=r.userAgent||r.vendor||(typeof window<"u"?window.opera:"");if(!e){let t=r;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function yC(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Ms=B();Ms.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Ms.registerFlag("IS_BROWSER",()=>yC());Ms.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Ms.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Ms.registerFlag("PROD",()=>!1);Ms.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Ms.getBool("DEBUG"));Ms.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Ms.registerFlag("IS_TEST",()=>!1);Ms.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Ms.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Ms.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function Br(r,e){let t=r;if(Cr(r))return e==="string"?[]:[r.length];if(!Array.isArray(r))return[];let n=[];for(;Array.isArray(t)||Cr(t)&&e!=="string";)n.push(t.length),t=t[0];return Array.isArray(r)&&B().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&T2(r,n,[]),n}function T2(r,e,t){if(t=t||[],!Array.isArray(r)&&!Cr(r)){M(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}M(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${r.length} elements`),M(r.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${r.length} elements`);let n=e.slice(1);for(let o=0;o<r.length;++o)T2(r[o],n,t.concat(o))}function y2(r,e,t,n){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==e||r==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${n}' must be ${r} tensor, but got ${e} tensor`)}}function S(r,e,t,n="numeric"){if(r instanceof Ye)return y2(n,r.dtype,e,t),r;let o=om(r);if(o!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(o=n),y2(n,o,e,t),r==null||!Cr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let p=r==null?"null":r.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${p}'`)}let s=Br(r,o);!Cr(r)&&!Array.isArray(r)&&(r=[r]);let i=o!=="string"?Lm(r,o):aa(r,[],!0);return D.makeTensor(i,s,o)}function Ji(r,e,t,n="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,a)=>S(s,`${e}[${a}]`,t,n))}var x2="__op";function A(r){let e=Object.keys(r);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0],n=r[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+x2;let o=(...s)=>{D.startScope(t);try{let a=n(...s);return dd(a)&&console.error("Cannot return a Promise inside of tidy."),D.endScope(a),a}catch(a){throw D.endScope(null),a}};return Object.defineProperty(o,"name",{value:t,configurable:!0}),o}function Fj(r,e){let t=S(r,"real","complex"),n=S(e,"imag","complex");Gt(t.shape,n.shape,`real and imag shapes, ${t.shape} and ${n.shape}, must match in call to tf.complex().`);let o={real:t,imag:n};return D.runKernel(Eu,o)}var Vn=A({complex_:Fj});function pn(r,e,t,n){if(n==null&&(n=om(r)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Cr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){cd(e);let o=st(e),s=st(t);M(o===s,()=>`Based on the provided shape, [${e}], the tensor should have ${o} values but has ${s}`);for(let a=0;a<t.length;++a){let i=t[a],p=a===t.length-1?i!==st(e.slice(a)):!0;M(t[a]===e[a]||!p,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!Cr(r)&&!Array.isArray(r)&&(r=[r]),e=e||t,r=n!=="string"?Lm(r,n):aa(r,[],!0),D.makeTensor(r,e,n)}function Fr(r,e,t){let n=Br(r,t);return pn(r,e,n,t)}var Sd={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var Tb=4;async function C2(r,e){let t=[],n=[],o=Array.isArray(r)?r.map(a=>a.name):Object.keys(r);for(let a=0;a<o.length;++a){let i=o[a],p=Array.isArray(r)?r[a].tensor:r[i];if(p.dtype!=="float32"&&p.dtype!=="int32"&&p.dtype!=="bool"&&p.dtype!=="string"&&p.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${p.dtype}`);let u={name:i,shape:p.shape,dtype:p.dtype};if(p.dtype==="string"){let l=new Promise(async m=>{let c=await p.bytes(),d=c.reduce((g,y)=>g+y.length,0)+Tb*c.length,f=new Uint8Array(d),h=0;for(let g=0;g<c.length;g++){let y=c[g],T=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(T,h),h+=Tb,f.set(y,h),h+=y.length}m(f)});n.push(l)}else n.push(p.data());e!=null&&(u.group=e),t.push(u)}let s=await Promise.all(n);return{data:Ej(s),specs:t}}function xb(r,e){let t={},n,o=0;for(let s of e){let a=s.name,i=s.dtype,p=s.shape,u=st(p),l;if("quantization"in s){let m=s.quantization;if(m.dtype==="uint8"||m.dtype==="uint16"){if(!("min"in m&&"scale"in m))throw new Error(`Weight ${s.name} with quantization ${m.dtype} doesn't have corresponding metadata min and scale.`)}else if(m.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${s.name} is quantized with ${m.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${m.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let c=Sd[m.dtype],d=r.slice(o,o+u*c),f=m.dtype==="uint8"?new Uint8Array(d):new Uint16Array(d);if(i==="float32")if(m.dtype==="uint8"||m.dtype==="uint16"){l=new Float32Array(f.length);for(let h=0;h<f.length;h++){let g=f[h];l[h]=g*m.scale+m.min}}else if(m.dtype==="float16")n===void 0&&(n=$j()),l=n(f);else throw new Error(`Unsupported quantization type ${m.dtype} for weight type float32.`);else if(i==="int32"){if(m.dtype!=="uint8"&&m.dtype!=="uint16")throw new Error(`Unsupported quantization type ${m.dtype} for weight type int32.`);l=new Int32Array(f.length);for(let h=0;h<f.length;h++){let g=f[h];l[h]=Math.round(g*m.scale+m.min)}}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=u*c}else if(i==="string"){let m=st(s.shape);l=[];for(let c=0;c<m;c++){let d=new Uint32Array(r.slice(o,o+Tb))[0];o+=Tb;let f=new Uint8Array(r.slice(o,o+d));l.push(f),o+=d}}else{let m=Sd[i],c=r.slice(o,o+u*m);if(i==="float32")l=new Float32Array(c);else if(i==="int32")l=new Int32Array(c);else if(i==="bool")l=new Uint8Array(c);else if(i==="complex64"){l=new Float32Array(c);let d=new Float32Array(l.length/2),f=new Float32Array(l.length/2);for(let y=0;y<d.length;y++)d[y]=l[y*2],f[y]=l[y*2+1];let h=Fr(d,p,"float32"),g=Fr(f,p,"float32");t[a]=Vn(h,g),h.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=u*m}i!=="complex64"&&(t[a]=Fr(l,p,i))}return t}function Ej(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let e=0,t=[];r.forEach(s=>{if(e+=s.byteLength,t.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(e),o=0;return t.forEach(s=>{n.set(new Uint8Array(s.buffer),o),o+=s.byteLength}),n.buffer}var TC=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function I2(r){return TC?Buffer.byteLength(r):new Blob([r]).size}function k2(r){if(TC)return Buffer.from(r).toString("base64");let e=new Uint8Array(r),t="";for(let n=0,o=e.length;n<o;n++)t+=String.fromCharCode(e[n]);return btoa(t)}function S2(r){if(TC){let n=Buffer.from(r,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let e=atob(r),t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)t.set([e.charCodeAt(n)],n);return t.buffer}function Bm(r){if(r.length===1)return r[0];let e=0;r.forEach(o=>{e+=o.byteLength});let t=new Uint8Array(e),n=0;return r.forEach(o=>{t.set(new Uint8Array(o),n),n+=o.byteLength}),t.buffer}function xC(r){let e="/";for(r=r.trim();r.endsWith(e);)r=r.slice(0,r.length-1);let t=r.split(e);return t[t.length-1]}function Ib(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:e};return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),t}async function Om(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),r.weightsManifest!=null){let[n,o]=await e(r.weightsManifest);t.weightSpecs=n,t.weightData=o}return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),t}function pi(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:I2(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:I2(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:r.weightData.byteLength}}function Rj(){let r=t=>{let n=t<<13,o=0;for(;(n&8388608)===0;)o-=8388608,n<<=1;return n&=-8388609,o+=947912704,n|o},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=r(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function Lj(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let e=1;e<31;e++)r[e]=e<<23;for(let e=33;e<63;e++)r[e]=2147483648+(e-32<<23);return r}function _j(){let r=new Uint32Array(64);for(let e=0;e<64;e++)r[e]=1024;return r[0]=r[32]=0,r}function $j(){let r=Rj(),e=Lj(),t=_j();return n=>{let o=new ArrayBuffer(4*n.length),s=new Uint32Array(o);for(let a=0;a<n.length;a++){let i=n[a],p=r[t[i>>10]+(i&1023)]+e[i>>10];s[a]=p}return new Float32Array(o)}}var Et=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Et.instance==null&&(Et.instance=new Et),Et.instance}static registerSaveRouter(e){Et.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Et.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Et.getHandlers(e,"save")}static getLoadHandlers(e,t){return Et.getHandlers(e,"load",t)}static getHandlers(e,t,n){let o=[];return(t==="load"?Et.getInstance().loadRouters:Et.getInstance().saveRouters).forEach(a=>{let i=a(e,n);i!==null&&o.push(i)}),o}},v2=r=>Et.registerSaveRouter(r),A2=r=>Et.registerLoadRouter(r),w2=r=>Et.getSaveHandlers(r),N2=(r,e)=>Et.getLoadHandlers(r,e);var IC="tensorflowjs",CC=1,_p="models_store",Zu="model_info_store";function D2(){if(!B().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,e=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function kC(r){let e=r.result;e.createObjectStore(_p,{keyPath:"modelPath"}),e.createObjectStore(Zu,{keyPath:"modelPath"})}var eu=class{constructor(e){if(this.indexedDB=D2(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,o)=>{let s=this.indexedDB.open(IC,CC);s.onupgradeneeded=()=>kC(s),s.onsuccess=()=>{let a=s.result;if(t==null){let i=a.transaction(_p,"readonly"),u=i.objectStore(_p).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return a.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(u.result.modelArtifacts)},u.onerror=l=>(a.close(),o(u.error)),i.oncomplete=()=>a.close()}else{let i=pi(t),p=a.transaction(Zu,"readwrite"),u=p.objectStore(Zu),l=u.put({modelPath:this.modelPath,modelArtifactsInfo:i}),m;l.onsuccess=()=>{m=a.transaction(_p,"readwrite");let d=m.objectStore(_p).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});d.onsuccess=()=>n({modelArtifactsInfo:i}),d.onerror=f=>{u=p.objectStore(Zu);let h=u.delete(this.modelPath);h.onsuccess=()=>(a.close(),o(d.error)),h.onerror=g=>(a.close(),o(d.error))}},l.onerror=c=>(a.close(),o(l.error)),p.oncomplete=()=>{m==null?a.close():m.oncomplete=()=>a.close()}}},s.onerror=a=>o(s.error)})}};eu.URL_SCHEME="indexeddb://";var P2=r=>B().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(eu.URL_SCHEME)?Bj(r.slice(eu.URL_SCHEME.length)):null;Et.registerSaveRouter(P2);Et.registerLoadRouter(P2);function Bj(r){return new eu(r)}function Oj(r){return r.startsWith(eu.URL_SCHEME)?r.slice(eu.URL_SCHEME.length):r}var SC=class{constructor(){this.indexedDB=D2()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(IC,CC);n.onupgradeneeded=()=>kC(n),n.onsuccess=()=>{let o=n.result,s=o.transaction(Zu,"readonly"),i=s.objectStore(Zu).getAll();i.onsuccess=()=>{let p={};for(let u of i.result)p[u.modelPath]=u.modelArtifactsInfo;e(p)},i.onerror=p=>(o.close(),t(i.error)),s.oncomplete=()=>o.close()},n.onerror=o=>t(n.error)})}async removeModel(e){return e=Oj(e),new Promise((t,n)=>{let o=this.indexedDB.open(IC,CC);o.onupgradeneeded=()=>kC(o),o.onsuccess=()=>{let s=o.result,a=s.transaction(Zu,"readwrite"),i=a.objectStore(Zu),p=i.get(e),u;p.onsuccess=()=>{if(p.result==null)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let l=i.delete(e),m=()=>{u=s.transaction(_p,"readwrite");let d=u.objectStore(_p).delete(e);d.onsuccess=()=>t(p.result.modelArtifactsInfo),d.onerror=f=>n(p.error)};l.onsuccess=m,l.onerror=c=>(m(),s.close(),n(p.error))}},p.onerror=l=>(s.close(),n(p.error)),a.oncomplete=()=>{u==null?s.close():u.oncomplete=()=>s.close()}},o.onerror=s=>n(o.error)})}};var tu="/",zm="tensorflowjs_models",M2="info",zj="model_topology",Gj="weight_specs",Uj="weight_data",Wj="model_metadata";function F2(r){return{info:[zm,r,M2].join(tu),topology:[zm,r,zj].join(tu),weightSpecs:[zm,r,Gj].join(tu),weightData:[zm,r,Uj].join(tu),modelMetadata:[zm,r,Wj].join(tu)}}function E2(r){for(let e of Object.values(r))window.localStorage.removeItem(e)}function Kj(r){let e=r.split(tu);if(e.length<3)throw new Error(`Invalid key format: ${r}`);return e.slice(1,e.length-1).join(tu)}function Vj(r){return r.startsWith(ru.URL_SCHEME)?r.slice(ru.URL_SCHEME.length):r}var ru=class{constructor(e){if(!B().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=F2(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),o=pi(e);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,k2(e.weightData));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:o}}catch{throw E2(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=o;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let i=JSON.parse(s);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=S2(a),t}};ru.URL_SCHEME="localstorage://";var R2=r=>B().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(ru.URL_SCHEME)?Hj(r.slice(ru.URL_SCHEME.length)):null;Et.registerSaveRouter(R2);Et.registerLoadRouter(R2);function Hj(r){return new ru(r)}var vC=class{constructor(){M(B().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),M(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=zm+tu,n=tu+M2;for(let o=0;o<this.LS.length;++o){let s=this.LS.key(o);if(s.startsWith(t)&&s.endsWith(n)){let a=Kj(s);e[a]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=Vj(e);let t=F2(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return E2(t),n}};var Gm="://",ln=class{constructor(){this.managers={}}static getInstance(){return ln.instance==null&&(ln.instance=new ln),ln.instance}static registerManager(e,t){M(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Gm)&&(e=e.slice(0,e.indexOf(Gm))),M(e.length>0,()=>"scheme must not be an empty string.");let n=ln.getInstance();M(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function Cb(r){if(r.indexOf(Gm)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ln.getSchemes().join(",")}`);return{scheme:r.split(Gm)[0],path:r.split(Gm)[1]}}async function L2(r,e,t=!1){M(r!==e,()=>`Old path and new path are the same: '${r}'`);let n=Et.getLoadHandlers(r);M(n.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),M(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${r}.`);let o=n[0],s=Et.getSaveHandlers(e);M(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),M(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${e}.`);let a=s[0],i=Cb(r).scheme,p=Cb(r).path,u=i===Cb(r).scheme,l=await o.load();t&&u&&await ln.getManager(i).removeModel(p);let m=await a.save(l);return t&&!u&&await ln.getManager(i).removeModel(p),m.modelArtifactsInfo}async function _2(){let r=ln.getSchemes(),e={};for(let t of r){let n=await ln.getManager(t).listModels();for(let o in n){let s=t+Gm+o;e[s]=n[o]}}return e}async function $2(r){let e=Cb(r);return ln.getManager(e.scheme).removeModel(e.path)}async function B2(r,e){return L2(r,e,!1)}async function O2(r,e){return L2(r,e,!0)}var z2=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(B().get("IS_BROWSER")){B().setPlatform("browser",new z2);try{ln.registerManager(ru.URL_SCHEME,new vC)}catch{}try{ln.registerManager(eu.URL_SCHEME,new SC)}catch{}}var qj={importFetch:()=>G2()},AC;var W2=class{constructor(){this.util=U2(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return B().global.fetch!=null?B().global.fetch(e,t):(AC==null&&(AC=qj.importFetch()),AC(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};B().get("IS_NODE")&&!B().get("IS_BROWSER")&&B().setPlatform("node",new W2);function Ce(r,e="float32",t){return e=e||"float32",cd(r),new gt(r,e,t)}function jj(r,e){let t=S(r,"x","cast");if(!eC(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:t},o={dtype:e};return D.runKernel(zn,n,o)}var te=A({cast_:jj});function Xj(r){let t={x:S(r,"x","clone","string_or_numeric")};return D.runKernel(Un,t)}var Dn=A({clone_:Xj});function wC(r,e=!1){console.log(r.toString(e))}gC();var Yj={buffer:Ce,cast:te,clone:Dn,print:wC};l2(Yj);var Or={};Xe(Or,{browserFiles:()=>H2,browserHTTPRequest:()=>X2,concatenateArrayBuffers:()=>Bm,copyModel:()=>B2,decodeWeights:()=>xb,encodeWeights:()=>C2,fromMemory:()=>Q2,getLoadHandlers:()=>N2,getModelArtifactsForJSON:()=>Om,getModelArtifactsInfoForJSON:()=>pi,getSaveHandlers:()=>w2,http:()=>Ab,isHTTPScheme:()=>vb,listModels:()=>_2,loadWeights:()=>q2,moveModel:()=>O2,registerLoadRouter:()=>A2,registerSaveRouter:()=>v2,removeModel:()=>$2,weightsLoaderFactory:()=>PC,withSaveHandler:()=>Z2});var Qj="model",Zj=".json",Jj=".weights.bin";function K2(r){return new Promise(e=>setTimeout(e)).then(r)}var kb=class{constructor(e){if(!B().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(kb.URL_SCHEME)&&(e=e.slice(kb.URL_SCHEME.length)),(e==null||e.length===0)&&(e=Qj),this.modelJsonFileName=e+Zj,this.weightDataFileName=e+Jj}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=Ib(e,n),s=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=s,await K2(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await K2(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:pi(e)}}}},vd=kb;vd.URL_SCHEME="downloads://";var V2=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=o=>{let s=JSON.parse(o.target.result),a=s.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let p=Om(s,u=>this.loadWeights(u));e(p)},n.onerror=o=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let o=this.checkManifestAndWeightFiles(e),s=n.map(a=>this.loadWeightsFile(a,o[a]));return Promise.all(s).then(a=>[t,Bm(a)])}loadWeightsFile(e,t){return new Promise((n,o)=>{let s=new FileReader;s.onload=a=>{let i=a.target.result;n(i)},s.onerror=a=>o(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(s=>xC(s.name)),o={};for(let s of e)s.paths.forEach(a=>{let i=xC(a);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);o[a]=this.weightsFiles[n.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return o}},e6=r=>B().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(vd.URL_SCHEME)?t6(r.slice(vd.URL_SCHEME.length)):null;Et.registerSaveRouter(e6);function t6(r="model"){return new vd(r)}function H2(r){return new V2(r)}function NC(r,e,t,n){a(r),t=t??0,n=n??1,i(t,n);let o=0,s=p=>(p.then(u=>{let l=t+ ++o/r.length*(n-t);return e(l),u}),p);function a(p){M(p!=null&&Array.isArray(p)&&p.length>0,()=>"promises must be a none empty array")}function i(p,u){M(p>=0&&p<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${p}`),M(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),M(u>=p,()=>`startFraction must be no more than endFraction, but got startFraction ${p} and endFraction ${u}`)}return Promise.all(r.map(s))}async function DC(r,e){e==null&&(e={});let t=e.fetchFunc==null?B().platform.fetch:e.fetchFunc,n=r.map(m=>t(m,e.requestInit,{isBinary:!0})),o=0,s=.5,i=(e.onProgress==null?await Promise.all(n):await NC(n,e.onProgress,o,s)).map(m=>m.arrayBuffer()),p=.5,u=1;return e.onProgress==null?await Promise.all(i):await NC(i,e.onProgress,p,u)}async function q2(r,e="",t,n){return PC(a=>DC(a,{requestInit:n}))(r,e,t)}function PC(r){return async(e,t="",n)=>{let o=e.map(()=>!1),s={},a=n!=null?n.map(()=>!1):[],i=[];if(e.forEach((d,f)=>{let h=0;d.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,T=Sd[y]*st(g.shape),x=()=>{o[f]=!0,s[f]==null&&(s[f]=[]),s[f].push({manifestEntry:g,groupOffset:h,sizeBytes:T})};n!=null?n.forEach((I,k)=>{I===g.name&&(x(),a[k]=!0)}):x(),i.push(g.name),h+=T})}),!a.every(d=>d)){let d=n.filter((f,h)=>!a[h]);throw new Error(`Could not find weights in manifest with names: ${d.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let p=o.reduce((d,f,h)=>(f&&d.push(h),d),[]),u=[];p.forEach(d=>{e[d].paths.forEach(f=>{let h=t+(t.endsWith("/")?"":"/")+f;u.push(h)})});let l=await r(u),m={},c=0;return p.forEach(d=>{let f=e[d].paths.length,h=0;for(let I=0;I<f;I++)h+=l[c+I].byteLength;let g=new ArrayBuffer(h),y=new Uint8Array(g),T=0;for(let I=0;I<f;I++){let k=new Uint8Array(l[c+I]);y.set(k,T),T+=k.byteLength}s[d].forEach(I=>{let k=g.slice(I.groupOffset,I.groupOffset+I.sizeBytes),N=xb(k,[I.manifestEntry]);for(let P in N)m[P]=N[P]}),c+=f}),m}}var r6="application/octet-stream",n6="application/json",Sb=class{constructor(e,t){this.DEFAULT_METHOD="POST";if(t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(M(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=B().platform.fetch,M(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&M(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],o=Ib(e,n);t.body.append("model.json",new Blob([JSON.stringify(o)],{type:n6}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:r6}),"model.weights.bin");let s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:pi(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,o=t.weightsManifest;if(n==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Om(t,s=>this.loadWeights(s))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,o]=o6(t),s=this.weightPathPrefix||n,a=[];for(let l of e)a.push(...l.weights);let i=[],p=[];for(let l of e)for(let m of l.paths)this.weightUrlConverter!=null?p.push(this.weightUrlConverter(m)):i.push(s+m+o);this.weightUrlConverter&&i.push(...await Promise.all(p));let u=await DC(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,Bm(u)]}};Sb.URL_SCHEME_REGEX=/^https?:\/\//;function o6(r){let e=r.lastIndexOf("/"),t=r.lastIndexOf("?"),n=r.substring(0,e),o=t>e?r.substring(t):"";return[n+"/",o]}function vb(r){return r.match(Sb.URL_SCHEME_REGEX)!=null}var j2=(r,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(r)?t=r.every(n=>vb(n)):t=vb(r),t)return Ab(r,e)}return null};Et.registerSaveRouter(j2);Et.registerLoadRouter(j2);function Ab(r,e){return new Sb(r,e)}function X2(r,e){return Ab(r,e)}var wb=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},Y2=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function Q2(r,e,t,n){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new wb(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new wb({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new wb({modelTopology:r,weightSpecs:e,weightData:t,trainingConfig:n}))}function Z2(r){return new Y2(r)}var e1={};Xe(e1,{confusionMatrix:()=>J2});function s6(r,e,t=!1,n=!1){let o=S(r,"a","matMul"),s=S(e,"b","matMul");[o,s]=Ze(o,s);let a={a:o,b:s},i={transposeA:t,transposeB:n};return D.runKernel(io,a,i)}var He=A({matMul_:s6});function a6(r,e,t=1,n=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);let s={indices:S(r,"indices","oneHot","int32")},a={depth:e,onValue:t,offValue:n};return D.runKernel(Ca,s,a)}var nu=A({oneHot_:a6});function i6(r,e){let t=S(r,"x","transpose");if(e==null&&(e=t.shape.map((s,a)=>a).reverse()),M(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of perm ${e}.`),e.forEach(s=>{M(s>=0&&s<t.rank,()=>`All entries in 'perm' must be between 0 and ${t.rank-1} but got ${e}`)}),t.rank<=1)return t.clone();let n={x:t},o={perm:e};return D.runKernel(Xo,n,o)}var Ge=A({transpose_:i6});function u6(r,e,t){let n=S(r,"labels","confusionMatrix"),o=S(e,"predictions","confusionMatrix");M(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),M(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),M(o.rank===1,()=>`Expected the rank of predictions to be 1, but got ${o.rank}`),M(n.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),M(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);let s=nu(te(n,"int32"),t),a=nu(te(o,"int32"),t),i=Ge(s),p=He(i,a);return te(p,"int32")}var J2=A({confusionMatrix_:u6});var wr={};Xe(wr,{assertAndGetBroadcastShape:()=>Ue,getBroadcastDims:()=>t1,getReductionAxes:()=>Ct});function t1(r,e){let t=r.length,n=[];for(let o=0;o<t;o++){let s=t-1-o,a=r[s]||1;(e[e.length-1-o]||1)>1&&a===1&&n.unshift(s)}return n}function Ct(r,e){let t=[];for(let n=0;n<e.length;n++){let o=r[r.length-n-1],s=e.length-n-1,a=e[s];(o==null||o===1&&a>1)&&t.unshift(s)}return t}function Ue(r,e){let t=[],n=Math.max(r.length,e.length);for(let o=0;o<n;o++){let s=r[r.length-o-1];s==null&&(s=1);let a=e[e.length-o-1];if(a==null&&(a=1),s===1)t.unshift(a);else if(a===1)t.unshift(s);else if(s!==a){let i=`Operands could not be broadcast together with shapes ${r} and ${e}.`;throw Error(i)}else t.unshift(s)}return t}var Nb={};Xe(Nb,{fromPixels:()=>h6,fromPixelsAsync:()=>d6,toPixels:()=>f6});function MC(r,e,t){if(no(r),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=Br(r,t);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return pn(r,e,n,t)}var $p;function r1(r,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,n=!1,o=!1,s=!1,a=!1,i=!1;if(r.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&r instanceof ImageData)n=!0;else if(typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement)s=!0;else if(r.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&r instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(o&&o&&r.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(yd(Pp,D.backendName)!=null){let f={pixels:r},h={numChannels:e};return D.runKernel(Pp,f,h)}let[u,l]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],m;if(a)m=r.getContext("2d").getImageData(0,0,u,l).data;else if(n||t)m=r.data;else if(s||o||i){if($p==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")$p=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else $p=document.createElement("canvas").getContext("2d");$p.canvas.width=u,$p.canvas.height=l,$p.drawImage(r,0,0,u,l),m=$p.getImageData(0,0,u,l).data}let c;if(e===4)c=new Int32Array(m);else{let f=u*l;c=new Int32Array(f*e);for(let h=0;h<f;h++)for(let g=0;g<e;++g)c[h*e+g]=m[h*4+g]}return MC(c,[l,u,e],"int32")}function p6(r){return r!=null&&r.data instanceof Uint8Array}function l6(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function m6(r){return r!=null&&r.width!==0&&r.height!==0}function c6(r){return l6()&&!(r instanceof ImageBitmap)&&m6(r)&&!p6(r)}async function d6(r,e=3){let t=null;if(B().getBool("WRAP_TO_IMAGEBITMAP")&&c6(r)){let n;try{n=await createImageBitmap(r,{premultiplyAlpha:"none"})}catch{n=null}n!=null&&n.width===r.width&&n.height===r.height?t=n:t=r}else t=r;return r1(t,e)}async function f6(r,e){let t=S(r,"img","toPixels");if(!(r instanceof Ye)){let u=t;t=te(u,"int32"),u.dispose()}if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);let[n,o]=t.shape.slice(0,2),s=t.rank===2?1:t.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`);let a=await t.data(),i=t.dtype==="float32"?255:1,p=new Uint8ClampedArray(o*n*4);for(let u=0;u<n*o;++u){let l=[0,0,0,255];for(let c=0;c<s;c++){let d=a[u*s+c];if(t.dtype==="float32"){if(d<0||d>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${d}.`)}else if(t.dtype==="int32"&&(d<0||d>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${d}.`);s===1?(l[0]=d*i,l[1]=d*i,l[2]=d*i):l[c]=d*i}let m=u*4;p[m+0]=Math.round(l[0]),p[m+1]=Math.round(l[1]),p[m+2]=Math.round(l[2]),p[m+3]=Math.round(l[3])}if(e!=null){e.width=o,e.height=n;let u=e.getContext("2d"),l=new ImageData(p,o,n);u.putImageData(l,0,0)}return t!==r&&t.dispose(),p}var h6=A({fromPixels_:r1});var Db={};Xe(Db,{prepareAndValidate:()=>n1});function n1(r,e){let t=r.shape.length,n=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[n-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[n-1]} vs. ${t}`);if(st(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let o=e.shape,s=o[o.length-1],a=1;for(let m=0;m<o.length-1;++m)a*=o[m];let i=r.shape,p=o.slice();p.pop();let u=1;for(let m=s;m<t;++m)u*=i[m],p.push(i[m]);let l=[...ri(r.shape).map(m=>m/u),1].slice(0,s);return[p,a,u,l]}var Ad={};Xe(Ad,{calculateShapes:()=>o1,validateInput:()=>Pb,validateUpdateShape:()=>FC});function FC(r,e,t){let n=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${r}, sliceDim: ${n}, and batchDim: ${o}.`;if(t.rank<o)throw new Error(s+` update.rank < ${o}. `);if(r.length<n+(t.rank-o))throw new Error(s+` Output shape length < ${n+(t.rank-o)}`);if(t.rank!==o+r.length-n)throw new Error(s+` update.rank != ${o+r.length-n}`);for(let a=0;a<o;++a)if(t.shape[a]!==e.shape[a])throw new Error(s+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-o;++a)if(t.shape[a+o]!==r[a+n])throw new Error(s+` updates.shape[${a+o}] (${t.shape[a+o]}) != shape[${a+o}] (${r[a+o]})`)}function Pb(r,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}FC(t,e,r)}function o1(r,e,t){let n=e.shape.length,o=n>1?e.shape[n-1]:1,s=t.length,a=1;for(let m=o;m<s;++m)a*=t[m];let i=o<1?1:o,p=st(e.shape)/i,u=[...ri(t.slice(0,o)),1],l=st(t);return{sliceRank:o,numUpdates:p,sliceSize:a,strides:u,outputSize:l}}var Tt={};Xe(Tt,{assertParamsValid:()=>b6,computeFlatOffset:()=>C6,computeOutShape:()=>T6,getNormalizedAxes:()=>x6,isSliceContinous:()=>I6,maskToAxes:()=>y6,parseSliceParams:()=>RC,sliceInfo:()=>k6,startForAxis:()=>c1,startIndicesWithElidedDims:()=>p1,stopForAxis:()=>d1,stopIndicesWithElidedDims:()=>l1,stridesForAxis:()=>m1,stridesWithElidedDims:()=>a1});var EC=-2,g6=-1;function b6(r,e,t){let n=r.shape.length;M(n===e.length,()=>`Error in slice${n}D: Length of begin ${e} must match the rank of the array (${n}).`),M(n===t.length,()=>`Error in slice${n}D: Length of size ${t} must match the rank of the array (${n}).`);for(let o=0;o<n;++o)M(e[o]+t[o]<=r.shape[o],()=>`Error in slice${n}D: begin[${o}] + size[${o}] (${e[o]+t[o]}) would overflow input.shape[${o}] (${r.shape[o]})`)}function y6(r){let e=[],t=0;for(;r>0;)r&1&&e.push(t),r/=2,t++;return e}function T6(r,e,t){let n=[];for(let o=0;o<r.length;o++)n[o]=Math.ceil((e[o]-r[o])/t[o]);return n}function a1(r,e,t,n){let o=[...r];for(let s=o.length;s<n.length;s++)o.push(1);for(let s=0;s<t;s++)s===0?o[e]=1:(o.splice(e,0,1),o.pop());return o}function i1(r,e,t){return t<=r?t:t-(e-1)}function u1(r,e){let t=[];for(let n=0;n<r;n++)t.push(e+n);return t}function x6(r,e,t,n,o,s,a,i,p){let u=r.length,l=new Array(u),m=new Array(u),c=new Array(u);if(e.length&&t>0){let d=e[0],f=t+1;l=p1(a,d,f,n,r),m=l1(i,d,f,o,r),c=a1(s,d,f,r)}else for(let d=0;d<u;d++)l[d]=c1(a,n,s,r,d,p),m[d]=d1(i,o,s,r,d,p),c[d]=m1(s,d,p);return{begin:l,end:m,strides:c}}function p1(r,e,t,n,o){let s=[...o],a=u1(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=0;else{let p=i1(e,t,i),u=n[p];r&1<<p&&(u=0),s[i]=u}return s}function l1(r,e,t,n,o){let s=[...o],a=u1(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{let p=i1(e,t,i),u=n[p];r&1<<p&&(u=Number.MAX_SAFE_INTEGER),s[i]=u}for(let i=0;i<s.length;i++){let p=o[i];s[i]<0&&(s[i]+=p),s[i]=nm(0,s[i],o[i])}return s}function m1(r,e,t){let n=r[e];return(t&1<<e||n==null)&&(n=1),n}function c1(r,e,t,n,o,s){let a=e[o],i=t[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);let p=n[o];return a<0&&(a+=p),a=nm(0,a,p-1),a}function d1(r,e,t,n,o,s){let a=e[o],i=t[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);let p=n[o];return a<0&&(a+=p),i>0?a=nm(0,a,p):a=nm(-1,a,p-1),a}function I6(r,e,t){let n=t.length;for(let o=0;o<t.length;o++)if(t[o]>1){n=o;break}for(let o=n+1;o<t.length;o++)if(e[o]>0||t[o]!==r[o])return!1;return!0}function C6(r,e){let t=r.length>0?r[r.length-1]:1;for(let n=0;n<r.length-1;n++)t+=r[n]*e[n];return t}function RC(r,e,t){let n,o=r.shape.length;typeof e=="number"?n=[e,...new Array(o-1).fill(0)]:e.length<o?n=e.concat(new Array(o-e.length).fill(0)):n=e.slice(),n.forEach(a=>{M(a!==-1,()=>"slice() does not support negative begin indexing.")});let s;return t==null?s=new Array(o).fill(-1):typeof t=="number"?s=[t,...new Array(o-1).fill(-1)]:t.length<o?s=t.concat(new Array(o-t.length).fill(-1)):s=t,s=s.map((a,i)=>a>=0?a:(M(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),r.shape[i]-n[i])),[n,s]}function k6(r,e,t,n,o,s,a,i,p){let u;if(n==null?(u=new Array(e.length),u.fill(1)):u=n,a!=null&&(a&a-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1,m={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:u.slice(),beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:p};for(let x=0;x<m.dims;x++)l&&(1<<x&i)!==0&&m.numAddAxisAfterEllipsis++,1<<x&a&&(l=!0);l||(m.ellipsisMask|=1<<m.dims,m.dims++);let c={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};S6(m,c);let d=!0,f=!0,h=!0,g=[],y=[];for(let x=0;x<r.length;++x){if(c.strides[x]===0)throw Error(`strides[${x}] must be non-zero`);let I=!!(c.shrinkAxisMask&1<<x),k=r[x];if(k===-1){g.push(I?1:-1);continue}let N=[c.beginMask&1<<x,c.endMask&1<<x],P=[c.strides[x]>0?0:-1,c.strides[x]>0?k:k-1];if(I&&c.strides[x]<=0)throw Error("only stride 1 allowed on non-range indexing.");h=h&&c.strides[x]===1;let F=!!(c.beginMask&1<<x&&c.endMask&1<<x);if(c.beginValid&&c.endValid){if(I){let W=c.begin[x]<0?k+c.begin[x]:c.begin[x];if(c.begin[x]=W,c.end[x]=c.begin[x]+1,W<0||W>=k)throw Error(`slice index ${c.begin[x]} of dimension ${x} out of bounds.`)}else c.begin[x]=s1(c.begin[x],0,c.strides[x],k,N,P),c.end[x]=s1(c.end[x],1,c.strides[x],k,N,P);let U=c.strides[x]===1&&c.begin[x]===0&&c.end[x]===k;d=d&&U,f=f&&(x===0&&c.strides[x]===1||U)}else d=d&&c.strides[x]===1&&F,f=f&&(x===0&&c.strides[x]===1||F);let E,$=!1;if(c.beginValid&&c.endValid?(E=c.end[x]-c.begin[x],$=!0):I?(E=1,$=!0):F&&k>=0&&(c.strides[x]<0?E=-k:E=k,$=!0),$){let U;E===0||E<0!=c.strides[x]<0?U=0:U=Math.trunc(E/c.strides[x])+(E%c.strides[x]!==0?1:0),g.push(U)}else g.push(-1)}for(let x=0;x<c.finalShapeGatherIndices.length;++x){let I=c.finalShapeGatherIndices[x];I>=0?y.push(g[I]):I===EC&&y.push(1)}return{finalShapeSparse:y.filter((x,I)=>c.finalShapeGatherIndices[I]!==EC),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:h,begin:c.begin,end:c.end,strides:c.strides}}function S6(r,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=r.begin!=null,e.endValid=r.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let n=0;n<r.dims;n++)if(1<<n&r.ellipsisMask){let o=Math.min(e.dims-(r.dims-n)+1+r.numAddAxisAfterEllipsis,e.dims);for(;t<o;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=n}else if(1<<n&r.newAxisMask)e.finalShapeGatherIndices.push(EC),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);r.begin!=null&&(e.begin[t]=r.begin[n]),r.end!=null&&(e.end[t]=r.end[n]),e.strides[t]=r.strides[n],r.beginMask&1<<n&&(e.beginMask|=1<<t),r.endMask&1<<n&&(e.endMask|=1<<t),r.shrinkAxisMask&1<<n?(e.finalShapeGatherIndices.push(g6),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(n)),e.inputShapeGatherIndicesSparse[t]=n,t++}}function s1(r,e,t,n,o,s){if(o[e])return t>0?s[e]:s[e+1&1];{let a=r<0?n+r:r;return a<s[0]?s[0]:a>s[1]?s[1]:a}}var ne={};Xe(ne,{Serializable:()=>Mb,SerializationMap:()=>ou,registerClass:()=>Pn});var Mb=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},ou=class{constructor(){this.classNameMap={}}static getMap(){return ou.instance==null&&(ou.instance=new ou),ou.instance}static register(e){ou.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Pn(r){M(r.className!=null,()=>"Class being registered does not have the static className property defined."),M(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),M(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),ou.register(r)}var b1={};Xe(b1,{TEST_EPSILON_FLOAT16:()=>f1,encodeStrings:()=>g1,expectArrayBuffersEqual:()=>P6,expectArraysClose:()=>A6,expectArraysEqual:()=>N6,expectNumbersClose:()=>h1,expectPromiseToFail:()=>w6,expectValuesInRange:()=>D6,testEpsilon:()=>Fb});var v6=.001,f1=.1;function A6(r,e,t){return t==null&&(t=Fb()),LC(r,e,(n,o)=>_C(n,o,t))}function Fb(){return D.backend.floatPrecision()===32?v6:f1}function LC(r,e,t){let n=!0;if((Cr(r)||Cr(e))&&(n=!1),Cr(r)&&Cr(e)&&(n=!0),n){let a=r.constructor.name,i=e.constructor.name;if(a!==i)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${i}`)}if(Array.isArray(r)&&Array.isArray(e)){let a=Br(r),i=Br(e);if(!On(a,i))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${i}]`)}let o=Cr(r)?r:aa(r),s=Cr(e)?e:aa(e);if(o.length!==s.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${s.length}.
Actual:   ${o}.
Expected: ${s}.`);for(let a=0;a<s.length;++a){let i=o[a],p=s[a];if(!t(i,p))throw new Error(`Arrays differ: actual[${a}] = ${i}, expected[${a}] = ${p}.
Actual:   ${o}.
Expected: ${s}.`)}}function w6(r,e){r().then(()=>e.fail(),()=>e())}function N6(r,e){let t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return ia(r)||ia(r[0])||ia(e)||ia(e[0])?LC(r,t,(n,o)=>n==o):LC(r,e,(n,o)=>_C(n,o,0))}function h1(r,e,t){if(t==null&&(t=Fb()),!_C(r,e,t))throw new Error(`Numbers differ: actual === ${r}, expected === ${e}`)}function _C(r,e,t){return!isFinite(r)&&!isFinite(e)?!0:!(isNaN(r)||isNaN(e)||Math.abs(r-e)>t)}function D6(r,e,t){for(let n=0;n<r.length;n++)if(r[n]<e||r[n]>t)throw new Error(`Value out of range:${r[n]} low: ${e}, high: ${t}`)}function P6(r,e){let t=new Float32Array(r),n=new Float32Array(e);if(t.length!==n.length)throw new Error(`Expected ArrayBuffer to be of length ${n.length}, but it was ${t.length}`);for(let o=0;o<n.length;o++)if(t[o]!==n[o])throw new Error(`Expected ArrayBuffer value at ${o} to be ${n[o]} but got ${t[o]} instead`)}function g1(r){for(let e=0;e<r.length;e++){let t=r[e];Array.isArray(t)?g1(t):r[e]=Xu(t)}return r}var M6="0.0.0";function gTe(){B().set("PROD",!0)}function bTe(){B().set("DEBUG",!0)}function yTe(){B().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function $C(r){B().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}m2($C);function TTe(){D.disposeVariables()}function Hn(){return D}function wd(){return D.memory()}function xTe(r){return D.profile(r)}function z(r,e){return D.tidy(r,e)}function Me(r){kd(r).forEach(t=>t.dispose())}function Ut(r){return D.keep(r)}function ITe(r){return D.time(r)}function F6(r){return D.setBackend(r)}function CTe(){return D.ready()}function kTe(){return D.backendName}function STe(r){D.removeBackend(r)}function vTe(r){return D.findBackend(r)}function ATe(r){return D.findBackendFactory(r)}function Ju(r,e,t=1){return D.registerBackend(r,e,t)}function y1(){return D.backend}function wTe(r,e){B().setPlatform(r,e)}function E6(r,e){let t=S(r,"a","add"),n=S(e,"b","add");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(wn,o)}var Q=A({add_:E6});function R6(r,e){let t=S(r,"a","floorDiv"),n=S(e,"b","floorDiv");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(xo,o)}var Nd=A({floorDiv_:R6});function L6(r,e){let t=S(r,"a","div"),n=S(e,"b","div");if([t,n]=Ze(t,n),t.dtype==="int32"&&n.dtype==="int32")return Nd(t,n);let o={a:t,b:n},s={};return D.runKernel(go,o,s)}var me=A({div_:L6});function _6(r,e){let t=S(r,"a","mul"),n=S(e,"b","mul");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(Fo,o)}var L=A({mul_:_6});function $6(r){let e=S(r,"x","abs");if(e.dtype==="complex64"){let t={x:e};return D.runKernel(Ru,t)}else{let t={x:e};return D.runKernel(us,t)}}var $t=A({abs_:$6});function B6(r){let t={x:S(r,"x","acos")};return D.runKernel(Di,t)}var BC=A({acos_:B6});function O6(r){let t={x:S(r,"x","acosh")};return D.runKernel(Pi,t)}var OC=A({acosh_:O6});function z6(r){M(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),M(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let e=r.map((o,s)=>S(o,`tensors${s}`,"addN")),t=e[0];e.forEach(o=>{if(o.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(o=>{if(!On(o.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=e;return D.runKernel(oo,n)}var zC=A({addN_:z6});function G6(r,e=null,t=!1){let o={x:S(r,"x","all","bool")},s={axis:e,keepDims:t};return D.runKernel(Mi,o,s)}var Dd=A({all_:G6});function U6(r,e=null,t=!1){let o={x:S(r,"x","any","bool")},s={axis:e,keepDims:t};return D.runKernel(Fi,o,s)}var Um=A({any_:U6});function W6(r,e=0){let n={x:S(r,"x","argMax")},o={axis:e};return D.runKernel(so,n,o)}var su=A({argMax_:W6});function K6(r,e=0){let n={x:S(r,"x","argMin")},o={axis:e};return D.runKernel(ni,n,o)}var GC=A({argMin_:K6});function V6(r){let t={x:S(r,"x","asin")};return D.runKernel(Ei,t)}var UC=A({asin_:V6});function H6(r){let t={x:S(r,"x","asinh")};return D.runKernel(Ri,t)}var WC=A({asinh_:H6});function q6(r){let t={x:S(r,"x","atan")};return D.runKernel(Li,t)}var KC=A({atan_:q6});function j6(r,e){let t=S(r,"a","atan2"),n=S(e,"b","atan2");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel($i,o)}var VC=A({atan2_:j6});function X6(r){let t={x:S(r,"x","atanh")};return D.runKernel(_i,t)}var HC=A({atanh_:X6});function Y6(r,e,t,n,o="NHWC",s){let a=r[3],i=[...e,a],p=x1(o);return Op(r,i,t,s,n,null,null,p)}function jC(r,e,t,n,o,s,a="channelsLast"){let[i,p]=Eb(e),u;if(a==="channelsLast")u=[i,p,r[3],r[3]];else if(a==="channelsFirst")u=[i,p,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return Op(r,u,t,n,o,s,!1,a)}function Q6(r,e,t,n,o,s,a="NDHWC"){let[i,p,u]=qC(e),l,m;if(a==="NDHWC")m="channelsLast",l=[i,p,u,r[4],r[4]];else if(a==="NCDHW")m="channelsFirst",l=[i,p,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return T1(r,l,t,n,o,!1,m,s)}function Op(r,e,t,n,o,s,a=!1,i="channelsLast"){let[p,u,l,m]=[-1,-1,-1,-1];if(i==="channelsLast")[p,u,l,m]=r;else if(i==="channelsFirst")[p,m,u,l]=r;else throw new Error(`Unknown dataFormat ${i}`);let[c,d,,f]=e,[h,g]=Eb(t),[y,T]=Eb(n),x=Wm(c,y),I=Wm(d,T),{padInfo:k,outHeight:N,outWidth:P}=e5(o,u,l,h,g,x,I,s,i),F=a?f*m:f,E;return i==="channelsFirst"?E=[p,F,N,P]:i==="channelsLast"&&(E=[p,N,P,F]),{batchSize:p,dataFormat:i,inHeight:u,inWidth:l,inChannels:m,outHeight:N,outWidth:P,outChannels:F,padInfo:k,strideHeight:h,strideWidth:g,filterHeight:c,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:I,dilationHeight:y,dilationWidth:T,inShape:r,outShape:E,filterShape:e}}function T1(r,e,t,n,o,s=!1,a="channelsLast",i){let[p,u,l,m,c]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[p,u,l,m,c]=r;else if(a==="channelsFirst")[p,c,u,l,m]=r;else throw new Error(`Unknown dataFormat ${a}`);let[d,f,h,,g]=e,[y,T,x]=qC(t),[I,k,N]=qC(n),P=Wm(d,I),F=Wm(f,k),E=Wm(h,N),{padInfo:$,outDepth:U,outHeight:W,outWidth:V}=t5(o,u,l,m,y,T,x,P,F,E,i),H=s?g*c:g,q;return a==="channelsFirst"?q=[p,H,U,W,V]:a==="channelsLast"&&(q=[p,U,W,V,H]),{batchSize:p,dataFormat:a,inDepth:u,inHeight:l,inWidth:m,inChannels:c,outDepth:U,outHeight:W,outWidth:V,outChannels:H,padInfo:$,strideDepth:y,strideHeight:T,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:h,effectiveFilterDepth:P,effectiveFilterHeight:F,effectiveFilterWidth:E,dilationDepth:I,dilationHeight:k,dilationWidth:N,inShape:r,outShape:q,filterShape:e}}function Z6(r,e,t,n,o){n==null&&(n=XC(r,e,t));let s=r[0],a=r[1],i=Bp((s-e+2*n)/t+1,o),p=Bp((a-e+2*n)/t+1,o);return[i,p]}function J6(r,e,t,n,o,s){o==null&&(o=XC(r,e,n));let a=r[0],i=r[1],p=r[2],u=Bp((a-e+2*o)/n+1,s),l=Bp((i-e+2*o)/n+1,s),m=Bp((p-e+2*o)/n+1,s);return[u,l,m,t]}function XC(r,e,t,n=1){let o=Wm(e,n);return Math.floor((r[0]*(t-1)-t+o)/2)}function Eb(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function qC(r){return typeof r=="number"?[r,r,r]:r}function Wm(r,e){return e<=1?r:r+(r-1)*(e-1)}function e5(r,e,t,n,o,s,a,i,p){let u,l,m;if(typeof r=="number"){u={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let d=Z6([e,t],s,n,r,i);l=d[0],m=d[1]}else if(r==="same"){l=Math.ceil(e/n),m=Math.ceil(t/o);let c=Math.max(0,(l-1)*n+s-e),d=Math.max(0,(m-1)*o+a-t),f=Math.floor(c/2),h=c-f,g=Math.floor(d/2),y=d-g;u={top:f,bottom:h,left:g,right:y,type:"SAME"}}else if(r==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((e-s+1)/n),m=Math.ceil((t-a+1)/o);else if(typeof r=="object"){let c=p==="channelsLast"?r[1][0]:r[2][0],d=p==="channelsLast"?r[1][1]:r[2][1],f=p==="channelsLast"?r[2][0]:r[3][0],h=p==="channelsLast"?r[2][1]:r[3][1];u={top:c,bottom:d,left:f,right:h,type:c===0&&d===0&&f===0&&h===0?"VALID":"EXPLICIT"},l=Bp((e-s+c+d)/n+1,i),m=Bp((t-a+f+h)/o+1,i)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:u,outHeight:l,outWidth:m}}function t5(r,e,t,n,o,s,a,i,p,u,l){let m,c,d,f;if(typeof r=="number"){m={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=J6([e,t,n,1],i,1,o,r,l);c=g[0],d=g[1],f=g[2]}else if(r==="same"){c=Math.ceil(e/o),d=Math.ceil(t/s),f=Math.ceil(n/a);let h=(c-1)*o+i-e,g=(d-1)*s+p-t,y=(f-1)*a+u-n,T=Math.floor(h/2),x=h-T,I=Math.floor(g/2),k=g-I,N=Math.floor(y/2),P=y-N;m={top:I,bottom:k,left:N,right:P,front:T,back:x,type:"SAME"}}else if(r==="valid")m={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},c=Math.ceil((e-i+1)/o),d=Math.ceil((t-p+1)/s),f=Math.ceil((n-u+1)/a);else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:m,outDepth:c,outHeight:d,outWidth:f}}function Bp(r,e){if(!e)return Math.trunc(r);switch(e){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${e}`)}}function Yo(r){let[e,t,n]=Eb(r);return e===1&&t===1&&n===1}function Er(r,e){return Yo(r)||Yo(e)}function x1(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function Nt(r,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")M(Ni(e),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(n=>{n.forEach(o=>{M(Ni(o),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${o}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${e}`)}}function r5(r,e){let n={x:S(r,"x","reshape","string_or_numeric")},o={shape:e};return D.runKernel(gs,n,o)}var _=A({reshape_:r5});function n5(r,e,t,n,o){let s=S(r,"x","avgPool","float32"),a=1;M(Er(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let i=s,p=!1;s.rank===3&&(p=!0,i=_(s,[1,s.shape[0],s.shape[1],s.shape[2]])),M(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Nt("avgPool",n,o);let u={x:i},l={filterSize:e,strides:t,pad:n,dimRoundingMode:o},m=D.runKernel(ao,u,l);return m=te(m,s.dtype),p?_(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var zp=A({avgPool_:n5});function o5(r,e,t,n,o,s="NDHWC"){let a=S(r,"x","avgPool3d","float32"),i=a,p=!1;a.rank===4&&(p=!0,i=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),M(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),M(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Nt("avgPool3d",n,o);let u={x:i},l={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},m=D.runKernel(Fu,u,l);return m=te(m,i.dtype),p?_(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Pd=A({avgPool3d_:o5});function s5(r,e=0){M(r.length>=1,()=>"Pass at least one tensor to concat");let t=Ji(r,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),t.length===1)return Dn(t[0]);let n=t,o={axis:e};return D.runKernel(ls,n,o)}var pt=A({concat_:s5});function a5(r){let t={x:S(r,"x","sigmoid","float32")};return D.runKernel(Uo,t)}var mn=A({sigmoid_:a5});function i5(r,e,t){let n=S(r,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let o={x:n},s={begin:e,size:t};return D.runKernel(ys,o,s)}var ze=A({slice_:i5});function u5(r){let t={x:S(r,"x","tanh","float32")};return D.runKernel(jo,t)}var au=A({tanh_:u5});function p5(r,e,t,n,o,s){let a=S(r,"forgetBias","basicLSTMCell"),i=S(e,"lstmKernel","basicLSTMCell"),p=S(t,"lstmBias","basicLSTMCell"),u=S(n,"data","basicLSTMCell"),l=S(o,"c","basicLSTMCell"),m=S(s,"h","basicLSTMCell"),c=pt([u,m],1),d=He(c,i),f=Q(d,p),h=f.shape[0],g=f.shape[1]/4,y=[h,g],T=ze(f,[0,0],y),x=ze(f,[0,g],y),I=ze(f,[0,g*2],y),k=ze(f,[0,g*3],y),N=Q(L(mn(T),au(x)),L(l,mn(Q(a,I)))),P=L(au(N),mn(k));return[N,P]}var l5=A({basicLSTMCell_:p5});function m5(r,e,t){let n=S(r,"x","batchToSpaceND"),o=e.reduce((i,p)=>i*p);M(n.rank>=1+e.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${e.length}`),M(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),M(n.shape[0]%o===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${o}`);let s={x:n},a={blockShape:e,crops:t};return D.runKernel(ps,s,a)}var Gp=A({batchToSpaceND_:m5});function I1(r){let e;return r.rank===0||r.rank===1?e=_(r,[1,1,1,r.size]):r.rank===2?e=_(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?e=_(r,[1,r.shape[0],r.shape[1],r.shape[2]]):e=r,e}function c5(r,e,t,n,o,s){s==null&&(s=.001);let a=S(r,"x","batchNorm"),i=S(e,"mean","batchNorm"),p=S(t,"variance","batchNorm"),u;o!=null&&(u=S(o,"scale","batchNorm"));let l;n!=null&&(l=S(n,"offset","batchNorm")),M(i.rank===p.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),M(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),M(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let c={x:I1(a),scale:u,offset:l,mean:i,variance:p},d={varianceEpsilon:s},f=D.runKernel(Io,c,d);return _(f,a.shape)}var li=A({batchNorm_:c5});function d5(r,e,t,n,o,s){let a=S(r,"x","batchNorm"),i=S(e,"mean","batchNorm"),p=S(t,"variance","batchNorm"),u;o!=null&&(u=S(o,"scale","batchNorm"));let l;return n!=null&&(l=S(n,"offset","batchNorm")),M(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),M(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),M(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${p.rank}.`),u!=null&&M(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&M(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),li(a,i,p,l,u,s)}var YC=A({batchNorm2d_:d5});function f5(r,e,t,n,o,s){let a=S(r,"x","batchNorm"),i=S(e,"mean","batchNorm"),p=S(t,"variance","batchNorm"),u;o!=null&&(u=S(o,"scale","batchNorm"));let l;return n!=null&&(l=S(n,"offset","batchNorm")),M(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),M(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),M(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${p.rank}.`),u!=null&&M(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&M(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),li(a,i,p,l,u,s)}var QC=A({batchNorm3d_:f5});function h5(r,e,t,n,o,s){let a=S(r,"x","batchNorm"),i=S(e,"mean","batchNorm"),p=S(t,"variance","batchNorm"),u;o!=null&&(u=S(o,"scale","batchNorm"));let l;return n!=null&&(l=S(n,"offset","batchNorm")),M(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),M(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),M(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${p.rank}.`),u!=null&&M(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&M(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),li(a,i,p,l,u,s)}var ZC=A({batchNorm4d_:h5});function g5(r,e,t){let n=S(r,"x","bincount"),o=S(e,"weights","bincount");M(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),M(t>=0,()=>`size must be non-negative, but got ${t}.`),M(o.size===n.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${o.shape}.`);let s={x:n,weights:o},a={size:t};return D.runKernel(pm,s,a)}var Md=A({bincount_:g5});function b5(r,e){let t=S(r,"s0","broadcastArgs","int32"),n=S(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);let o={s0:t,s1:n};return D.runKernel(lm,o)}var JC=A({broadcastArgs_:b5});function y5(r,e){let t=S(r,"broadcastTo","x"),n=t.shape;if(e.some(u=>!(u>0)||u%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){let u=t.shape.slice();for(;u.length<e.length;)u.unshift(1);t=_(t,u)}let o=t.shape,s=Array.from(e);for(let u=e.length-1;u>=0;u--)if(o[u]===e[u])s[u]=1;else if(t.shape[u]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${e}].`);if(s.map((u,l)=>u>1?l:-1).filter(u=>u>=0).length===0)return Dn(t);let i={x:t},p={reps:s};return D.runKernel(Nn,i,p)}var Up=A({broadcastTo_:y5});function T5(r){let t={x:S(r,"x","ceil","float32")};return D.runKernel(uo,t)}var ek=A({ceil_:T5});function x5(r,e,t){let n=S(r,"x","clipByValue");M(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`);let o={x:n},s={clipValueMin:e,clipValueMax:t};return D.runKernel(Gn,o,s)}var Rr=A({clipByValue_:x5});function I5(r){return pt(r,0)}var tk=A({concat1d_:I5});function C5(r,e){return pt(r,e)}var rk=A({concat2d_:C5});function k5(r,e){return pt(r,e)}var nk=A({concat3d_:k5});function S5(r,e){return pt(r,e)}var ok=A({concat4d_:S5});function v5(r,e,t,n,o="NHWC",s=[1,1],a){let i=S(r,"x","conv2d","float32"),p=S(e,"filter","conv2d","float32"),u=i,l=!1;i.rank===3&&(l=!0,u=_(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),M(p.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${p.rank}.`),Nt("conv2d",n,a);let m=o==="NHWC"?u.shape[3]:u.shape[1];M(m===p.shape[2],()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${p.shape[2]}.`),M(Er(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);let c={x:u,filter:p},d={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},f=D.runKernel(po,c,d);return l?_(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var qn=A({conv2d_:v5});function A5(r,e,t,n,o="NWC",s=1,a){let i=S(r,"x","conv1d"),p=S(e,"filter","conv1d"),u=i,l=!1;i.rank===2&&(l=!0,u=_(i,[1,i.shape[0],i.shape[1]])),M(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),M(p.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${p.rank}.`),Nt("conv1d",n,a),M(u.shape[2]===p.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${p.shape[1]}.`),M(Er(t,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${s}'`),M(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);let m=_(p,[1,p.shape[0],p.shape[1],p.shape[2]]),c=_(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=qn(c,m,[1,t],n,"NHWC",[1,s],a);return l?_(g,[g.shape[2],g.shape[3]]):_(g,[g.shape[0],g.shape[2],g.shape[3]])}var Fd=A({conv1d_:A5});function w5(r,e,t,n,o,s="NHWC",a){M(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let i=r,p=e,u=!1;e.rank===3&&(u=!0,p=_(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,r[0],r[1],r[2]]),M(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),M(p.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${p.rank}`),M(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);let l=s==="NHWC"?i[3]:i[1],m=s==="NHWC"?p.shape[3]:p.shape[1];M(l===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[2]}.`),M(m===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${t.shape[3]}.`),Nt("conv2dDerInput",o,a);let c={dy:p,filter:t},d={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,inputShape:i},f=D.runKernel(lo,c,d);return u?_(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Km=A({conv2DBackpropInput_:w5});function N5(r,e,t,n,o,s){let a=S(r,"x","conv2dTranspose"),i=S(e,"filter","conv2dTranspose");return Km(t,a,i,n,o,"NHWC",s)}var Ed=A({conv2dTranspose_:N5});function D5(r,e,t,n,o="NDHWC",s=[1,1,1]){let a=S(r,"x","conv3d"),i=S(e,"filter","conv3d"),p=a,u=!1;a.rank===4&&(u=!0,p=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),M(p.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${p.rank}.`),M(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),M(p.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${p.shape[4]}) must match input depth for filter ${i.shape[3]}.`),M(Er(t,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),M(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);let l={x:p,filter:i},m={strides:t,pad:n,dataFormat:o,dilations:s},c=D.runKernel(Lu,l,m);return u?_(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Rd=A({conv3d_:D5});function P5(r,e,t,n,o){M(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let s=r,a=e,i=!1;e.rank===4&&(i=!0,a=_(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let p=s[4],u=a.shape[4];M(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),M(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),M(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),M(p===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${p}) must match input depth for filter ${t.shape[3]}.`),M(u===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[4]}.`);let l={dy:a,filter:t},m={pad:o,strides:n,inputShape:s},c=D.runKernel(dm,l,m);return i?_(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Rb=A({conv3DBackpropInput_:P5});function M5(r,e,t,n,o){let s=S(r,"x","conv3dTranspose"),a=S(e,"filter","conv3dTranspose");return Rb(t,s,a,n,o)}var sk=A({conv3dTranspose_:M5});function F5(r){let t={x:S(r,"x","cos","float32")};return D.runKernel(mo,t)}var Wp=A({cos_:F5});function E5(r){let t={x:S(r,"x","cosh","float32")};return D.runKernel(co,t)}var Ld=A({cosh_:E5});function R5(r,e=0,t=!1,n=!1){let s={x:S(r,"x","cumprod")},a={axis:e,exclusive:t,reverse:n};return D.runKernel(ua,s,a)}var Vm=A({cumprod_:R5});function L5(r,e=0,t=!1,n=!1){let s={x:S(r,"x","cumsum")},a={axis:e,exclusive:t,reverse:n};return D.runKernel(fo,s,a)}var _d=A({cumsum_:L5});function _5(r,e,t,n=!1){let o=S(r,"x","denseBincount"),s=S(e,"weights","denseBincount");M(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),M(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),M(t>=0,()=>`size must be non-negative, but got ${t}.`),M(s.size===o.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${s.shape}.`);let a={x:o,weights:s},i={size:t,binaryOutput:n};return D.runKernel(fm,a,i)}var ak=A({denseBincount_:_5});function $5(r,e,t="NHWC"){let n=S(r,"x","depthToSpace","float32"),o=t==="NHWC"?n.shape[1]:n.shape[2],s=t==="NHWC"?n.shape[2]:n.shape[3],a=t==="NHWC"?n.shape[3]:n.shape[1];M(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),M(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e}  for depthToSpace with input shape
    ${n.shape}`),M(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e} for depthToSpace with input shape
        ${n.shape}`),M(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${n.shape}`);let i={x:n},p={blockSize:e,dataFormat:t};return D.runKernel(la,i,p)}var ik=A({depthToSpace_:$5});function B5(r,e,t,n,o="NHWC",s=[1,1],a){let i=S(r,"x","depthwiseConv2d","float32"),p=S(e,"filter","depthwiseConv2d","float32"),u=i,l=!1;i.rank===3&&(l=!0,u=_(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),M(p.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),M(u.shape[3]===p.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),Nt("depthwiseConv2d",n,a);let m={x:u,filter:p},c={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},d=D.runKernel(ho,m,c);return l?_(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var iu=A({depthwiseConv2d_:B5});function O5(r){let t={x:S(r,"x","diag")};return D.runKernel(bm,t)}var z5=A({diag_:O5});function G5(r,e,t,n,o=[1,1],s="NHWC"){let a=S(r,"x","dilation2d"),i=S(e,"filter","dilation2d");M(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),M(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),M(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let p=a,u=!1;a.rank===3&&(p=_(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);let l={x:p,filter:i},m={strides:t,pad:n,dilations:o},c=D.runKernel(_u,l,m);return u?_(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var uk=A({dilation2d_:G5});function U5(r,e){let t=S(r,"a","equal","string_or_numeric"),n=S(e,"b","equal","string_or_numeric");[t,n]=Ze(t,n),Ue(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ma,o)}var zr=A({equal_:U5});function W5(r,e,t){let n=S(e,"a","where"),o=S(t,"b","where"),s=S(r,"condition","where","bool"),a=Ue(Ue(s.shape,n.shape),o.shape),i=Up(s,a),p=Up(n,a),u=Up(o,a),l={condition:i,t:p,e:u};return D.runKernel(bs,l)}var Bt=A({where_:W5});function K5(r){let t={x:S(r,"x","zerosLike")};return D.runKernel(Cs,t)}var Ne=A({zerosLike_:K5});function V5(r,e){let t=S(r,"a","div"),n=S(e,"b","div");[t,n]=Ze(t,n);let o=me(t,n),s=Ne(o),a=zr(n,s);return Bt(a,s,o)}var pk=A({divNoNan_:V5});function H5(r,e){let t=S(r,"t1","dot"),n=S(e,"t2","dot");M((t.rank===1||t.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${n.rank}.`);let o=t.rank===1?t.size:t.shape[1],s=n.rank===1?n.size:n.shape[0];if(M(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),t.rank===1&&n.rank===1){let a=_(t,[1,-1]),i=_(n,[-1,1]),p=He(a,i);return _(p,[])}else if(t.rank===1&&n.rank===2){let a=_(t,[1,-1]),i=_(n,[n.shape[0],n.shape[1]]),p=He(a,i);return _(p,[p.size])}else if(t.rank===2&&n.rank===1){let a=_(n,[-1,1]),i=He(t,a);return _(i,[i.size])}else{let a=_(n,[n.shape[0],n.shape[1]]);return He(t,a)}}var q5=A({dot_:H5});function j5(r,...e){let t=e.map((o,s)=>S(o,`tensors${s}`,"einsum")),n={equation:r};return D.runKernel($u,t,n)}var lk=A({einsum_:j5});function X5(r){let t={x:S(r,"x","elu","float32")};return D.runKernel(bo,t)}var uu=A({elu_:X5});function Y5(r){let e=S(r,"x","erf");M(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=te(e,"float32"));let t={x:e};return D.runKernel(Bi,t)}var mk=A({erf_:Y5});function Q5(r){let t={x:S(r,"x","exp")};return D.runKernel(yo,t)}var pr=A({exp_:Q5});function Z5(r,e=0){let t=S(r,"x","expandDims","string_or_numeric");M(e<=t.rank,()=>"Axis must be <= rank of the tensor");let n={input:t},o={dim:e};return D.runKernel(ms,n,o)}var Nr=A({expandDims_:Z5});function J5(r){let t={x:S(r,"x","expm1")};return D.runKernel(ca,t)}var ck=A({expm1_:J5});function e8(r,e){let t=S(r,"x","tile","string_or_numeric");M(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);let n={x:t},o={reps:e};return D.runKernel(Nn,n,o)}var Gr=A({tile_:e8});function t8(r,e,t,n="float32"){e==null&&(e=r);let o=Ce([r,e],n),s=r<=e?r:e;for(let i=0;i<s;++i)o.set(1,i,i);let a=_(o.toTensor(),[r,e]);if(t==null)return a;if(t.length===1)return Gr(Nr(a,0),[t[0],1,1]);if(t.length===2)return Gr(Nr(Nr(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return Gr(Nr(Nr(Nr(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}var Hm=A({eye_:t8});function Ra(r,e,t){let n={shape:r,value:e,dtype:t};return D.runKernel(oi,{},n)}function r8(r){let t={x:S(r,"x","floor","float32")};return D.runKernel(To,t)}var pu=A({floor_:r8});function n8(r,e,t=0,n=0){let o=S(r,"x","gather"),s=S(e,"indices","gather","int32"),a={x:o,indices:s},i={axis:t,batchDims:n};return D.runKernel(cs,a,i)}var mi=A({gather_:n8});function o8(r,e){let t=S(r,"a","greater","string_or_numeric"),n=S(e,"b","greater","string_or_numeric");[t,n]=Ze(t,n),Ue(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ha,o)}var rr=A({greater_:o8});function s8(r,e){let t=S(r,"a","greaterEqual","string_or_numeric"),n=S(e,"b","greaterEqual","string_or_numeric");[t,n]=Ze(t,n),Ue(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Co,o)}var Zo=A({greaterEqual_:s8});function a8(r){let t={input:S(r,"input","imag")};return D.runKernel(Bu,t)}var Kp=A({imag_:a8});function i8(r){let t={x:S(r,"x","isFinite")};return D.runKernel(Oi,t)}var u8=A({isFinite_:i8});function p8(r){let t={x:S(r,"x","isInf")};return D.runKernel(zi,t)}var l8=A({isInf_:p8});function m8(r){let t={x:S(r,"x","isNaN")};return D.runKernel(Gi,t)}var dk=A({isNaN_:m8});function c8(r,e=.2){let n={x:S(r,"x","leakyRelu")},o={alpha:e};return D.runKernel(ko,n,o)}var Vp=A({leakyRelu_:c8});function d8(r,e){let t=S(r,"a","less","string_or_numeric"),n=S(e,"b","less","string_or_numeric");[t,n]=Ze(t,n),Ue(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ga,o)}var $d=A({less_:d8});function f8(r,e){let t=S(r,"a","lessEqual","string_or_numeric"),n=S(e,"b","lessEqual","string_or_numeric");[t,n]=Ze(t,n),Ue(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ba,o)}var Jo=A({lessEqual_:f8});function fk(r,e,t){if(t<=0)throw new Error("The number of values should be positive.");let n={start:r,stop:e,num:t};return D.runKernel(Im,{},n)}function h8(r,e=5,t=1,n=1,o=.5){let s=S(r,"x","localResponseNormalization");M(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),M(Ni(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=s,i=!1;s.rank===3&&(i=!0,a=_(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let p={x:a},u={depthRadius:e,bias:t,alpha:n,beta:o},l=D.runKernel(Ou,p,u);return i?_(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var hk=A({localResponseNormalization_:h8});function g8(r){let t={x:S(r,"x","log","float32")};return D.runKernel(So,t)}var Lr=A({log_:g8});function b8(r){let t={x:S(r,"x","log1p")};return D.runKernel(Ui,t)}var Hp=A({log1p_:b8});function y8(r){return M(ti(r),()=>"The f passed in grad(f) must be a function"),(e,t)=>{let n=S(e,"x","tf.grad","string_or_numeric"),o=t!=null?S(t,"dy","tf.grad"):null;return D.tidy(()=>{let{value:s,grads:a}=D.gradients(()=>r(n),[n],o);return o!=null&&Gt(s.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),_b(a),a[0]})}}function T8(r){return M(ti(r),()=>"The f passed in grads(f) must be a function"),(e,t)=>{M(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=Ji(e,"args","tf.grads","string_or_numeric"),o=t!=null?S(t,"dy","tf.grads"):null;return D.tidy(()=>{let{value:s,grads:a}=D.gradients(()=>r(...n),n,o);return o!=null&&Gt(s.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),_b(a),a})}}function x8(r){return M(ti(r),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{M(e instanceof Ye,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),M(t==null||t instanceof Ye,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:o}=D.gradients(()=>r(e),[e],t);return _b(n),{grad:n[0],value:o}}}function I8(r){return M(ti(r),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{M(Array.isArray(e)&&e.every(o=>o instanceof Ye),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),M(t==null||t instanceof Ye,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=D.gradients(()=>r(...e),e,t);return t!=null&&Gt(n.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),_b(n.grads),n}}function Lb(r,e){M(ti(r),()=>"The f passed in variableGrads(f) must be a function"),M(e==null||Array.isArray(e)&&e.every(u=>u instanceof Yu),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let t=e!=null;if(!t){e=[];for(let u in D.registeredVariables)e.push(D.registeredVariables[u])}let n=t?e.filter(u=>!u.trainable):null,o=e.length;e=e.filter(u=>u.trainable),M(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let s=!0,{value:a,grads:i}=D.gradients(r,e,null,s);M(i.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),M(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);let p={};return e.forEach((u,l)=>{i[l]!=null&&(p[u.name]=i[l])}),n?.forEach(u=>p[u.name]=null),{value:a,grads:p}}function cn(r){return D.customGrad(r)}function _b(r){if(r.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function C8(r){let t={x:S(r,"x","neg")};return D.runKernel(ds,t)}var et=A({neg_:C8});function k8(r){let t={x:S(r,"x","softplus")};return D.runKernel(Xi,t)}var ci=A({softplus_:k8});function S8(r){let e=S(r,"x","logSigmoid");return cn(n=>({value:et(ci(et(n))),gradFunc:a=>L(a,mn(et(n)))}))(e)}var v8=A({logSigmoid_:S8});function A8(r,e=null,t=!1){let o={x:S(r,"x","max")},s={reductionIndices:e,keepDims:t};return D.runKernel(vo,o,s)}var Yr=A({max_:A8});function w8(r,e){let t=S(r,"a","sub"),n=S(e,"b","sub");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(qo,o)}var pe=A({sub_:w8});function N8(r,e=null,t=!1){let n=S(r,"x","sum");n.dtype==="bool"&&(n=te(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return D.runKernel(Ko,o,s)}var fe=A({sum_:N8});function D8(r,e=-1){let t=S(r,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return cn((o,s)=>{let i=Yr(o,e,!0),p=pe(o,i),u=pe(te(p,"float32"),Lr(fe(pr(p),e,!0)));return s([u]),{value:u,gradFunc:(m,c)=>{let[d]=c,f=!0,h=pr(d);return pe(m,L(fe(m,e,f),h))}}})(t)}var Bd=A({logSoftmax_:D8});function gk(r,e){for(let t=0;t<r.length;++t)if(r[r.length-t-1]!==e-1-t)return!1;return!0}function C1(r,e,t){let n=r.length+e.length,o=[],s=0,a=0;for(let i=0;i<n;i++)t.indexOf(i)===-1?o.push(r[s++]):o.push(e[a++]);return o}function bk(r,e){let t=[],n=r.length;for(let s=0;s<n;s++)e.indexOf(s)===-1&&t.push(r[s]);let o=e.map(s=>r[s]);return[t,o]}function Fs(r,e){let t=e.map(n=>1);return C1(r,t,e)}function P8(r,e,t){M(gk(e,t),()=>`${r} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function yk(r,e){if(gk(r,e))return null;let t=[];for(let n=0;n<e;++n)r.indexOf(n)===-1&&t.push(n);return r.forEach(n=>t.push(n)),t}function Od(r){return r.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function M8(r,e){let t=[];for(let n=e-r;n<e;++n)t.push(n);return t}function F8(r,e=null,t=!1){let n=S(r,"x","logSumExp"),o=hr(e,n.shape),s=Yr(n,o,!0),a=pe(n,s),i=pr(a),p=fe(i,o),u=Lr(p),l=Q(_(s,u.shape),u);if(t){let m=Fs(l.shape,o);return _(l,m)}return l}var xk=A({logSumExp_:F8});function E8(r,e){let t=S(r,"a","logicalAnd","bool"),n=S(e,"b","logicalAnd","bool");Ue(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ya,o)}var Ur=A({logicalAnd_:E8});function R8(r){let t={x:S(r,"x","logicalNot","bool")};return D.runKernel(Wi,t)}var qp=A({logicalNot_:R8});function L8(r,e){let t=S(r,"a","logicalOr","bool"),n=S(e,"b","logicalOr","bool");Ue(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Dp,o)}var zd=A({logicalOr_:L8});function _8(r,e){let t=S(r,"a","logicalXor","bool"),n=S(e,"b","logicalXor","bool");return Ue(t.shape,n.shape),Ur(zd(r,e),qp(Ur(r,e)))}var $8=A({logicalXor_:_8});function B8(r,e,t,n,o){let s=S(r,"x","maxPool"),a=1,i=s,p=!1;s.rank===3&&(p=!0,i=_(s,[1,s.shape[0],s.shape[1],s.shape[2]])),M(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),M(Er(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),Nt("maxPool",n,o);let u={x:i},l={filterSize:e,strides:t,pad:n,dimRoundingMode:o},m=D.runKernel(wo,u,l);return p?_(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var jp=A({maxPool_:B8});function O8(r,e=[1,1,1],t,n,o,s="NDHWC"){let a=S(r,"x","maxPool3d"),i=a,p=!1;a.rank===4&&(p=!0,i=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),M(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),M(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Nt("maxPool3d",n,o);let u={x:i},l={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},m=D.runKernel(zu,u,l);return p?_(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Gd=A({maxPool3d_:O8});function z8(r,e,t,n,o=!1){let a={x:S(r,"x","maxPoolWithArgmax")},i={filterSize:e,strides:t,pad:n,includeBatchInIndex:o},p=D.runKernel(vm,a,i);return{result:p[0],indexes:p[1]}}var Ik=A({maxPoolWithArgmax_:z8});function G8(r,e){let t=S(r,"a","maximum"),n=S(e,"b","maximum");[t,n]=Ze(t,n),t.dtype==="bool"&&(t=te(t,"int32"),n=te(n,"int32")),Ue(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Ao,o)}var jn=A({maximum_:G8});function U8(r,e=null,t=!1){let o={x:S(r,"x","mean")},s={axis:e,keepDims:t};return D.runKernel(No,o,s)}var Rt=A({mean_:U8});function bt(r,e="float32"){if(e==="complex64"){let n=bt(r,"float32"),o=bt(r,"float32");return Vn(n,o)}let t=am(st(r),e);return D.makeTensor(t,r,e)}function lr(r,e="float32"){if(e==="complex64"){let n=lr(r,"float32"),o=bt(r,"float32");return Vn(n,o)}let t=md(st(r),e);return D.makeTensor(t,r,e)}function W8(r,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(r===void 0)return[];let n=S(r,"x","meshgrid",r instanceof Ye?r.dtype:"float32");if(e===void 0)return[n];let o=S(e,"y","meshgrid",e instanceof Ye?e.dtype:"float32"),s=st(n.shape),a=st(o.shape);return t==="xy"?(n=_(n,[1,-1]),o=_(o,[-1,1]),[He(lr([a,1],n.dtype),n),He(o,lr([1,s],o.dtype))]):(n=_(n,[-1,1]),o=_(o,[1,-1]),[He(n,lr([1,a],n.dtype)),He(lr([s,1],o.dtype),o)])}function K8(r,e=null,t=!1){let o={x:S(r,"x","min")},s={axis:e,keepDims:t};return D.runKernel(Do,o,s)}var qm=A({min_:K8});function V8(r,e){let t=S(r,"a","minimum"),n=S(e,"b","minimum");[t,n]=Ze(t,n),t.dtype==="bool"&&(t=te(t,"int32"),n=te(n,"int32")),Ue(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Po,o)}var lu=A({minimum_:V8});function H8(r,e,t){M(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);let n=S(r,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");M(e.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${e.length}.`);let o=t==="reflect"?1:0;for(let i=0;i<n.rank;i++)M(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),M(e[i][0]>=0&&e[i][0]<=n.shape[i]-o&&e[i][1]>=0&&e[i][1]<=n.shape[i]-o,()=>`Padding in dimension ${i} cannot be greater than or equal to ${n.shape[i]-o} or less than 0 for input of shape ${n.shape}`);let s={paddings:e,mode:t},a={x:n};return D.runKernel(Mo,a,s)}var Ck=A({mirrorPad_:H8});function q8(r,e){let t=S(r,"a","mod"),n=S(e,"b","mod");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(Ki,o)}var kk=A({mod_:q8});function j8(r){let e=S(r,"x","square"),t={};return D.runKernel("Square",{x:e},t)}var je=A({square_:j8});function X8(r,e=null,t=!1){r=S(r,"x","moments");let n=hr(e,r.shape),o=Rt(r,n,t),s=o.shape;t||(s=Fs(o.shape,n));let a=je(pe(te(r,"float32"),_(o,s))),i=Rt(a,n,t);return{mean:o,variance:i}}var jm=A({moments_:X8});function Y8(r,e,t,n){let o=S(e,"data","multiRNNCell"),s=Ji(t,"c","multiRNNCell"),a=Ji(n,"h","multiRNNCell"),i=o,p=[];for(let m=0;m<r.length;m++){let c=r[m](i,s[m],a[m]);p.push(c[0]),p.push(c[1]),i=c[1]}let u=[],l=[];for(let m=0;m<p.length;m+=2)u.push(p[m]),l.push(p[m+1]);return[u,l]}var Q8=A({multiRNNCell_:Y8});function Z8(r,e,t,n=!1){let o=S(r,"logits","multinomial"),s=o.size,a=o.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();let p={logits:a===1?_(o,[1,-1]):o},u={numSamples:e,seed:t,normalized:n},l=D.runKernel(Am,p,u);return a===1?_(l,[l.size]):l}var Sk=A({multinomial_:Z8});function J8(r,e){let t=S(r,"a","notEqual","string_or_numeric"),n=S(e,"b","notEqual","string_or_numeric");[t,n]=Ze(t,n),Ue(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Ta,o)}var di=A({notEqual_:J8});function eX(r){let t={x:S(r,"x","onesLike")};return D.runKernel(fs,t)}var Dr=A({onesLike_:eX});function tX(r,e){let t=S(r,"v1","outerProduct"),n=S(e,"v2","outerProduct");M(t.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${n.rank}.`);let o=_(t,[-1,1]),s=_(n,[1,-1]);return He(o,s)}var rX=A({outerProduct_:tX});function nX(r,e,t=0){let n=S(r,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let o={paddings:e,constantValue:t},s={x:n};return D.runKernel(Eo,s,o)}var Mn=A({pad_:nX});function oX(r,e,t=0){return M(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Mn(r,[e],t)}var sX=A({pad1d_:oX});function aX(r,e,t=0){return M(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Mn(r,e,t)}var iX=A({pad2d_:aX});function uX(r,e,t=0){return M(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Mn(r,e,t)}var pX=A({pad3d_:uX});function lX(r,e,t=0){return M(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Mn(r,e,t)}var mX=A({pad4d_:lX});function cX(r,e,t){let n=S(r,"x","spaceToBatchND");M(n.rank>=1+e.length,()=>`input rank ${n.rank} should be > than [blockShape] ${e.length}`),M(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),M(n.shape.reduce((a,i,p)=>p>0&&p<=e.length?a&&(i+t[p-1][0]+t[p-1][1])%e[p-1]===0:a,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);let o={x:n},s={blockShape:e,paddings:t};return D.runKernel(Ts,o,s)}var Xp=A({spaceToBatchND_:cX});function dX(r,e,t,n,o,s,a){o==null&&(o=[1,1]),s==null&&(s=1),n===0&&(n="valid");let i=S(r,"x","maxPool"),p=i,u=!1;i.rank===3&&(u=!0,p=_(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(Er(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);let l=jC(p.shape,e,s,o,n),m=[l.dilationHeight,l.dilationWidth],c;n==="same"?c=hX([l.filterHeight,l.filterWidth],m):c=[[0,0],[0,0]];let d=m[0]===1&&m[1]===1,[f,h]=fX([l.inHeight,l.inWidth],m,c),g=d?n:"valid",y=d?p:Xp(p,m,f),x=(t==="avg"?()=>zp(y,e,s,g,a):()=>jp(y,e,s,g,a))(),I=d?x:Gp(x,m,h);return u?_(I,[I.shape[1],I.shape[2],I.shape[3]]):I}function fX(r,e,t){let n=t.map(l=>l[0]),o=t.map(l=>l[1]),s=r.concat(n,o),a=e.map((l,m)=>(l-s[m]%l)%l),i=o.map((l,m)=>l+a[m]),p=e.map((l,m)=>[n[m],i[m]]),u=e.map((l,m)=>[0,a[m]]);return[p,u]}function hX(r,e){let n=r.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),o=n.map(a=>Math.floor(a/2)),s=n.map((a,i)=>a-o[i]);return n.map((a,i)=>[o[i],s[i]])}var gX=A({pool_:dX});function bX(r,e){let t=S(r,"base","pow"),n=S(e,"exp","pow");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(Ro,o)}var Fn=A({pow_:bX});function yX(r,e){let t=S(r,"x","prelu"),n=S(e,"alpha","prelu"),o={x:t,alpha:n};return D.runKernel(Lo,o)}var Yp=A({prelu_:yX});function TX(r,e=null,t=!1){let n=S(r,"x","prod");n.dtype==="bool"&&(n=te(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return D.runKernel(_o,o,s)}var Ud=A({prod_:TX});function xX(r,e,t){let n=st(r),o=null;if(t==null||t==="float32")o=new Float32Array(n);else if(t==="int32")o=new Int32Array(n);else if(t==="bool")o=new Uint8Array(n);else throw new Error(`Unknown data type ${t}`);for(let s=0;s<n;s++)o[s]=e();return D.makeTensor(o,r,t)}var IX=A({rand_:xX});var Bb=Ap(Wd());var Xm=class{constructor(e,t,n,o,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=s||Math.random();this.random=Bb.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let o=this.nextVal;return this.nextVal=NaN,o}let e,t,n=!1;for(;!n;){let o,s,a;do o=2*this.random()-1,s=2*this.random()-1,a=o*o+s*s;while(a>=1||a===0);let i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*o*i,t=this.mean+this.stdDev*s*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},Mk=class{constructor(e,t,n,o){this.alpha=e,this.beta=1/t,this.dtype=n;let s=o||Math.random();this.randu=Bb.alea(s.toString()),this.randn=new Xm(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,o,s,a;for(;;){do o=this.randn.nextValue(),a=1+this.c*o;while(a<=0);if(a*=a*a,e=o*o,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},Fk=class{constructor(e=0,t=1,n,o){this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32";if(this.min=e,this.range=t-e,this.dtype=n,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Bb.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function NX(r,e,t=1,n="float32",o){if(t==null&&(t=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new Mk(e,t,n,o),a=Ce(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var DX=A({randomGamma_:NX});function PX(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new Xm(e,t,n,!1,o),a=Ce(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var Ob=A({randomNormal_:PX});function MX(r,e=0,t=1,n="float32",o){let s=Ce(r,n),a=new Fk(e,t,null,o);for(let i=0;i<s.values.length;i++)s.values[i]=a.nextValue();return s.toTensor()}var La=A({randomUniform_:MX});function mu(r,e,t=1,n="float32"){if(t===0)throw new Error("Cannot have a step of zero");let o={start:r,stop:e,step:t,dtype:n};return D.runKernel(si,{},o)}function FX(r){let t={input:S(r,"input","real")};return D.runKernel(Gu,t)}var ep=A({real_:FX});function EX(r){let t={x:S(r,"x","reciprocal")};return D.runKernel(Hi,t)}var Ek=A({reciprocal_:EX});function RX(r){let t={x:S(r,"x","relu")};return D.runKernel($o,t)}var Wr=A({relu_:RX});function LX(r){let t={x:S(r,"x","relu6")};return D.runKernel(Oo,t)}var Kd=A({relu6_:LX});function _X(r,e){let n={x:S(r,"x","reverse")},o={dims:e};return D.runKernel(ka,n,o)}var gr=A({reverse_:_X});function $X(r){let e=S(r,"x","reverse");return M(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),gr(e,0)}var BX=A({reverse1d_:$X});function OX(r,e){let t=S(r,"x","reverse");return M(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),gr(t,e)}var zX=A({reverse2d_:OX});function GX(r,e){let t=S(r,"x","reverse");return M(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),gr(t,e)}var UX=A({reverse3d_:GX});function WX(r,e){let t=S(r,"x","reverse");return M(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),gr(t,e)}var KX=A({reverse4d_:WX});function VX(r){let t={x:S(r,"x","round")};return D.runKernel(Sa,t)}var Vd=A({round_:VX});function HX(r){let t={x:S(r,"x","rsqrt","float32")};return D.runKernel(zo,t)}var Hd=A({rsqrt_:HX});function ce(r,e){if((Cr(r)&&e!=="string"||Array.isArray(r))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Cr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return pn(r,[],[],e)}function qX(r){let t={x:S(r,"x","selu")};return D.runKernel(qi,t)}var qd=A({selu_:qX});function jX(r,e,t,n,o,s=[1,1],a="NHWC"){let i=S(r,"x","separableConv2d"),p=S(e,"depthwiseFilter","separableConv2d"),u=S(t,"pointwiseFilter","separableConv2d"),l=i,m=!1;if(i.rank===3&&(m=!0,l=_(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");M(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),M(p.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${p.rank}.`),M(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${p.rank}.`),M(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),M(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let c=p.shape[2],d=p.shape[3];M(u.shape[2]===c*d,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${c*d}, but got ${u.shape[2]}.`);let f=iu(l,p,n,o,a,s),g=qn(f,u,1,"valid",a);return m?_(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var Rk=A({separableConv2d_:jX});async function XX(r,e){let t=S(r,"x","setdiff1d"),n=S(e,"y","setdiff1d");M(t.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${n.dtype}).`),M(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),M(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let o=await t.data(),s=await n.data(),a=new Set(s),i=0;for(let l=0;l<o.length;l++)a.has(o[l])||i++;let p=new gt([i],t.dtype),u=new gt([i],"int32");for(let l=0,m=0;l<o.length;l++)a.has(o[l])||(p.values[m]=o[l],u.values[m]=l,m++);return[p.toTensor(),u.toTensor()]}var Lk=XX;function YX(r){let t={x:S(r,"x","sign")};return D.runKernel(ji,t)}var _k=A({sign_:YX});function QX(r){let t={x:S(r,"x","sin","float32")};return D.runKernel(Go,t)}var jd=A({sin_:QX});function ZX(r){let t={x:S(r,"x","sinh")};return D.runKernel(Aa,t)}var Xd=A({sinh_:ZX});function JX(r,e,t){let n=S(r,"x","slice1d");return M(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),ze(n,[e],[t])}var Yd=A({slice1d_:JX});function eY(r,e,t){let n=S(r,"x","slice2d");return M(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),ze(n,e,t)}var zb=A({slice2d_:eY});function tY(r,e,t){let n=S(r,"x","slice3d");return M(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),ze(n,e,t)}var Qd=A({slice3d_:tY});function rY(r,e,t){let n=S(r,"x","slice4d");return M(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),ze(n,e,t)}var Ym=A({slice4d_:rY});function nY(r,e=-1){let t=S(r,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);let n={logits:t},o={dim:e};return D.runKernel(Vo,n,o)}var Zp=A({softmax_:nY});function oY(r){M(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let e={input:r};return D.runKernel(Tm,e)}var Jp=A({fft_:oY});function sY(r){M(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let e={input:r};return D.runKernel(xm,e)}var tp=A({ifft_:sY});function aY(r){let e=r.shape[r.shape.length-1],t=r.size/e,n;if(e<=2){let o=_(r,[t,e]);n=tp(o)}else{let o=[t,2*(e-1)],s=_(ep(r),[t,e]),a=_(Kp(r),[t,e]),i=gr(ze(s,[0,1],[t,e-2]),1),p=L(gr(ze(a,[0,1],[t,e-2]),1),ce(-1)),u=pt([s,i],1),l=pt([a,p],1),m=_(Vn(u,l),[o[0],o[1]]);n=tp(m)}if(n=ep(n),r.rank===3&&r.shape[0]!==0){let o=n,s=r.shape[0];n=_(n,[s,n.shape[0]/s,n.shape[1]]),o.dispose()}return n}var Zd=A({irfft_:aY});function iY(r,e,t=0){let o={x:S(r,"x","split")},s={numOrSizeSplits:e,axis:t};return D.runKernel(xs,o,s)}var kr=A({split_:iY});function uY(r,e){M(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let t=r.shape[r.shape.length-1],n=r.size/t,o;if(e!=null&&e<t){let f=r.shape.map(g=>0),h=r.shape.map(g=>g);h[r.shape.length-1]=e,o=ze(r,f,h),t=e}else if(e!=null&&e>t){let f=r.shape.map(h=>h);f[r.shape.length-1]=e-t,o=pt([r,bt(f)],r.shape.length-1),t=e}else o=r;let s=Ne(o),a=_(Vn(o,s),[n,t]),i=Jp(a),p=Math.floor(t/2)+1,u=ep(i),l=Kp(i),m=kr(u,[p,t-p],u.shape.length-1),c=kr(l,[p,t-p],l.shape.length-1),d=o.shape.slice();return d[o.shape.length-1]=p,_(Vn(m[0],c[0]),d)}var el=A({rfft_:uY});function pY(r){let t={x:S(r,"x","sqrt","float32")};return D.runKernel(Wo,t)}var Lt=A({sqrt_:pY});function lY(r,e){let t=S(r,"a","squaredDifference"),n=S(e,"b","squaredDifference");[t,n]=Ze(t,n),Ue(t.shape,n.shape);let o={a:t,b:n},s={};return D.runKernel(Ho,o,s)}var Jd=A({squaredDifference_:lY});function mY(r,e){let t=S(r,"x","squeeze");return _(t,YI(t.shape,e).newShape)}var dn=A({squeeze_:mY});function cY(r,e=0){let t=Ji(r,"tensors","stack","string_or_numeric");M(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&M(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");let n=t,o={axis:e};return D.runKernel(hs,n,o)}var mr=A({stack_:cY});function dY(r,e=0){let n={x:S(r,"x","step")},o={alpha:e};return D.runKernel(ks,n,o)}var cu=A({step_:dY});function fY(r,e,t,n,o=0,s=0,a=0,i=0,p=0){let l={x:S(r,"x","stridedSlice","string_or_numeric")},m={begin:e,end:t,strides:n,beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:p};return D.runKernel(wa,l,m)}var $k=A({stridedSlice_:fY});function hY(r){let t={x:S(r,"x","tan","float32")};return D.runKernel(Na,t)}var Bk=A({tan_:hY});function Ot(r,e){no(r);let t=Br(r,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return pn(r,null,t,e)}function fi(r,e,t){if(no(r),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=Br(r,t);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return pn(r,e,n,t)}function gY(r,e,t){if(no(r),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=Br(r,t);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return pn(r,e,n,t)}function bY(r,e,t){if(no(r),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=Br(r,t);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return pn(r,e,n,t)}function yY(r,e,t){if(no(r),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=Br(r,t);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||n,pn(r,e,n,t)}function TY(r,e=1,t=!0){let n=S(r,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let o=n.shape[n.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${e}`);let s={x:n},a={k:e,sorted:t},[i,p]=D.runKernel(Da,s,a);return{values:i,indices:p}}var Ok=A({topk_:TY});function xY(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new Xm(e,t,n,!0,o),a=Ce(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var tl=A({truncatedNormal_:xY});function IY(r,e=0){let t=S(r,"x","unique","string_or_numeric");M(t.rank>0,()=>"The input tensor must be at least 1D");let n={x:t},o={axis:e},[s,a]=D.runKernel(Mm,n,o);return{values:s,indices:a}}var Gb=A({unique_:IY});function CY(r,e,t){let n=S(r,"x","unsortedSegmentSum"),o=S(e,"segmentIds","unsortedSegmentSum","int32");M(Ni(t),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:o},a={numSegments:t};return D.runKernel(qu,s,a)}var zk=A({unsortedSegmentSum_:CY});function kY(r,e=0){let t=S(r,"x","unstack","string_or_numeric");M(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);let n={value:t},o={axis:e};return D.runKernel(Is,n,o)}var _r=A({unstack_:kY});function Gk(r,e=!0,t,n){return D.makeVariable(r,e,t,n)}function Ub(r,e){let t=[];for(let s=0;s<e.length;s++)e[s]&&t.push(s);let n=Ce(r,"int32"),o=Ce([t.length,r.length],"int32");for(let s=0;s<t.length;s++){let a=n.indexToLoc(t[s]),i=s*r.length;o.values.set(a,i)}return o.toTensor()}async function SY(r){let e=S(r,"condition","whereAsync","bool"),t=await e.data(),n=Ub(e.shape,t);return r!==e&&e.dispose(),n}var ef=SY;async function vY(r,e,t){let n=S(r,"tensor","boolMask"),o=S(e,"mask","boolMask","bool"),s=t??0,a=o.rank,i=n.shape;M(a>0,()=>"mask cannot be scalar"),Gt(i.slice(s,s+a),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let p=1;for(let h=s;h<s+a;h++)p*=i[h];let u=i.slice(0,s).concat([p],i.slice(s+a)),l=_(n,u),m=_(o,[-1]),c=await ef(m),d=dn(c,[1]),f=mi(l,d,s);return r!==n&&n.dispose(),e!==o&&o.dispose(),d.dispose(),l.dispose(),m.dispose(),c.dispose(),f}var F$e=vY;function AY(r,e="euclidean",t=null,n=!1){r=S(r,"x","norm");let o=O1(r,e,t),s=o.shape;if(n){let a=hr(t,r.shape);s=Fs(o.shape,a)}return _(o,s)}function O1(r,e,t=null){if(r.rank===0)return $t(r);if(r.rank!==1&&t===null)return O1(_(r,[-1]),e,t);if(r.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return fe($t(r),t);if(e===1/0)return Yr($t(r),t);if(e===-1/0)return qm($t(r),t);if(e==="euclidean"||e===2)return Lt(fe(Fn($t(r),ce(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return Yr(fe($t(r),t[0]),t[1]-1);if(e===1/0)return Yr(fe($t(r),t[1]),t[0]);if(e===-1/0)return qm(fe($t(r),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Lt(fe(je(r),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}var Wb=A({norm_:AY});function wY(r,e,t,n,o=!0){let s=S(r,"v","movingAverage"),a=S(e,"x","movingAverage"),i=S(t,"decay","movingAverage");dC(s,a),M(On(s.shape,a.shape),()=>"Shape mismatch in v and x");let p=ce(1),u=pe(p,i),l=L(pe(a,s),u);if(o){M(n!=null,()=>"When using zeroDebias: true, step is required.");let m=S(n,"step","movingAverage");l=me(l,pe(p,Fn(i,m)))}return Q(s,l)}var rBe=A({movingAverage_:wY});function NY(r,e,t){let n=S(r,"indices","scatterND","int32"),o=S(e,"updates","scatterND");Pb(o,n,t);let s={indices:n,updates:o},a={shape:t};return D.runKernel(va,s,a)}var z1=A({scatterND_:NY});function G1(r,e,t,n){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let o=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(t.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${s}.`);let a=e.size;if(!(e.rank===0||e.rank===1&&a===o))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${o}]`);if(e.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function PY(r,e,t,n=0){let o=S(r,"sparseIndices","sparseToDense","int32"),s=S(e,"sparseValues","sparseToDense"),a=S(n,"defaultValue","sparseToDense",s.dtype);G1(o,s,t,a);let i={sparseIndices:o,sparseValues:s,defaultValue:a},p={outputShape:t};return D.runKernel(Vu,i,p)}var Kb=A({sparseToDense_:PY});function MY(r,e){let t=S(e,"indices","gatherND","int32"),o={params:S(r,"x","gatherND","string_or_numeric"),indices:t};return D.runKernel(fa,o)}var U1=A({gatherND_:MY});function W1(r,e){if(e==null)return r.shape.slice();if(On(r.shape,e))return e;if(r.shape.length===e.length){let t=[];for(let n=0;n<r.shape.length;n++)e[n]==null&&r.shape[n]!=null?t.push(r.shape[n]):t.push(e[n]);return t}return e}function FY(r,e,t,n){let o=S(r,"x","dropout");if(M(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),M(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return r instanceof Ye?o.clone():o;let s=W1(o,t),a=1-e,i=me(pu(Q(La(s,0,1,"float32",n),a)),a);return L(o,i)}var K1=A({dropout_:FY});function V1(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function Vb(r,e,t){let n=1-r%2,o=new Float32Array(r);for(let s=0;s<r;++s){let a=2*Math.PI*s/(r+n-1);o[s]=e-t*Math.cos(a)}return Ot(o,"float32")}async function EY(r,e,t=1){let n=S(r,"predictions","inTopK"),o=S(e,"targets","inTopK");M(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),M(n.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${o.rank}`),Gt(n.shape.slice(0,n.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];M(t>0&&t<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${t}`);let a=await n.data(),i=await o.data(),[p,u]=[a.length/s,s],l=QI("bool",p);for(let m=0;m<p;m++){let c=m*u,d=a.subarray(c,c+u),f=[];for(let h=0;h<d.length;h++)f.push({value:d[h],index:h});f.sort((h,g)=>g.value-h.value),l[m]=0;for(let h=0;h<t;h++)if(f[h].index===i[m]){l[m]=1;break}}return r!==n&&n.dispose(),e!==o&&o.dispose(),Fr(l,o.shape,"bool")}var zBe=EY;var Es={};Xe(Es,{conv2d:()=>H1,depthwiseConv2d:()=>q1,matMul:()=>j1});function RY(r,e,t,n,o,s="NHWC",a){let i=r;r.rank===3&&(i=_(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let p=e;p.rank===3&&(p=_(e,[1,e.shape[0],e.shape[1],e.shape[2]])),M(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),M(p.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${p.shape}.`),M(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);let u=s==="NHWC"?i.shape[3]:i.shape[1],l=s==="NHWC"?p.shape[3]:p.shape[1];M(u===t[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${t[2]}.`),M(l===t[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${t[3]}).`),Nt("conv2dDerFilter",o,a);let m={x:i,dy:p},c={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,filterShape:t};return D.runKernel(mm,m,c)}var Qm=A({conv2DBackpropFilter_:RY});function rl(r,e,t){if(t==null||t==="linear")return r;if(t==="relu")return L(r,cu(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function nl(r,e){let t=e,n=Ct(r.shape,e.shape);return n.length>0&&(t=fe(t,n)),_(t,r.shape)}function ol(r,e,t,n){if(e==="linear")return r;if(e==="relu")return Wr(r);if(e==="elu")return uu(r);if(e==="relu6")return Kd(r);if(e==="prelu")return Yp(r,t);if(e==="leakyrelu")return Vp(r,n);if(e==="sigmoid")return mn(r);throw new Error(`Unknown fused activation ${e}.`)}var sl=(r,e)=>!(r>0)||e==="linear";function LY({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:p="linear",preluActivationWeights:u,leakyreluAlpha:l}){if(p=p||"linear",sl(D.state.gradientDepth,p)===!1){let k=qn(r,e,t,n,o,s,a);return i!=null&&(k=Q(k,i)),ol(k,p,u,l)}let m=S(r,"x","conv2d","float32"),c=S(e,"filter","conv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=_(m,[1,m.shape[0],m.shape[1],m.shape[2]])),M(d.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`),M(c.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`),Nt("fused conv2d",n,a),M(d.shape[3]===c.shape[2],()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${c.shape[2]}.`),M(Er(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),M(o==="NHWC",()=>`Error in conv2d: got dataFormat of ${o} but only NHWC is currently supported.`);let h=Op(d.shape,c.shape,t,s,n,a),g;i!=null&&(g=S(i,"bias","fused conv2d"),[g]=Ze(g,m),Ue(h.outShape,g.shape));let y;u!=null&&(y=S(u,"prelu weights","fused conv2d"));let T=(k,N)=>{let[P,F,E,$]=N,U=rl(k,E,p);M(Yo(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let W=Km(F.shape,U,P,t,n),V=Qm(F,U,P.shape,t,n),H=[W,V];if($!=null){let q=nl($,U);H.push(q)}return H},x={x:d,filter:c,bias:g,preluActivationWeights:y},I={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:p,leakyreluAlpha:l};return i==null?cn((N,P,F)=>{let E=D.runKernel(vs,x,I);return F([P,N,E]),f&&(E=_(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:T}})(d,c):cn((N,P,F,E)=>{let $=D.runKernel(vs,x,I);return E([P,N,$,F]),f&&($=_($,[$.shape[1],$.shape[2],$.shape[3]])),{value:$,gradFunc:T}})(d,c,g)}var H1=A({fusedConv2d_:LY});function _Y(r,e,t,n,o,s=[1,1],a){let i=r;r.rank===3&&(i=_(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let p=e;p.rank===3&&(p=_(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u={x:i,dy:p},l={strides:n,pad:o,dimRoundingMode:a,dilations:s,filterShape:t};return D.runKernel(hm,u,l)}var Hb=A({depthwiseConv2dNativeBackpropFilter_:_Y});function $Y(r,e,t,n,o,s=[1,1],a){let i=e,p=!1;e.rank===3&&(p=!0,i=_(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u={dy:i,filter:t},l={strides:n,pad:o,dimRoundingMode:a,dilations:s,inputShape:r},m=D.runKernel(gm,u,l);return p?_(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var qb=A({depthwiseConv2dNativeBackpropInput_:$Y});function BY({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:p="linear",preluActivationWeights:u,leakyreluAlpha:l}){if(sl(D.state.gradientDepth,p)===!1){let k=iu(r,e,t,n,o,s,a);return i!=null&&(k=Q(k,i)),ol(k,p,u,l)}let m=S(r,"x","depthwiseConv2d","float32"),c=S(e,"filter","depthwiseConv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=_(m,[1,m.shape[0],m.shape[1],m.shape[2]])),M(d.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),M(c.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`),M(d.shape[3]===c.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),s==null&&(s=[1,1]),M(Er(t,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),Nt("fused depthwiseConv2d",n,a);let h=Op(d.shape,c.shape,t,s,n,a,!0),g;i!=null&&(g=S(i,"bias","fused conv2d"),[g]=Ze(g,m),Ue(h.outShape,g.shape));let y;u!=null&&(y=S(u,"prelu weights","fused depthwiseConv2d"));let T=(k,N)=>{M(Yo(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[P,F,E,$]=N,U=rl(k,E,p),W=qb(F.shape,U,P,t,n,s,a),V=Hb(F,U,P.shape,t,n,s,a);if($!=null){let H=nl(g,U);return[W,V,H]}return[W,V]},x={x:d,filter:c,bias:g,preluActivationWeights:y},I={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:p,leakyreluAlpha:l};return i==null?cn((N,P,F)=>{let E=D.runKernel(As,x,I);return F([P,N,E]),f&&(E=_(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:T}})(d,c):cn((N,P,F,E)=>{let $=D.runKernel(As,x,I);return E([P,N,$,F]),f&&($=_($,[$.shape[1],$.shape[2],$.shape[3]])),{value:$,gradFunc:T}})(d,c,g)}var q1=A({fusedDepthwiseConv2d_:BY});function OY({a:r,b:e,transposeA:t=!1,transposeB:n=!1,bias:o,activation:s="linear",preluActivationWeights:a,leakyreluAlpha:i}){if(sl(D.state.gradientDepth,s)===!1){let U=He(r,e,t,n);return o!=null&&(U=Q(U,o)),ol(U,s,a,i)}let p=S(r,"a","fused matMul"),u=S(e,"b","fused matMul");[p,u]=Ze(p,u);let l=t?p.shape[p.rank-2]:p.shape[p.rank-1],m=n?u.shape[u.rank-1]:u.shape[u.rank-2],c=t?p.shape[p.rank-1]:p.shape[p.rank-2],d=n?u.shape[u.rank-2]:u.shape[u.rank-1],f=p.shape.slice(0,-2),h=u.shape.slice(0,-2),g=st(f),y=st(h);M(l===m,()=>`Error in fused matMul: inner shapes (${l}) and (${m}) of Tensors with shapes ${p.shape} and ${u.shape} and transposeA=${t} and transposeB=${n} must match.`);let x=Ue(p.shape.slice(0,-2),u.shape.slice(0,-2)).concat([c,d]),I=t?_(p,[g,l,c]):_(p,[g,c,l]),k=n?_(u,[y,d,m]):_(u,[y,m,d]),N;o!=null&&(N=S(o,"bias","fused matMul"),[N]=Ze(N,p),Ue(x,N.shape));let P;a!=null&&(P=S(a,"prelu weights","fused matMul"));let F=(U,W)=>{let[V,H,q,Y]=W,ee=rl(_(U,q.shape),q,s),j,re;if(!t&&!n?(j=He(ee,H,!1,!0),re=He(V,ee,!0,!1)):!t&&n?(j=He(ee,H,!1,!1),re=He(ee,V,!0,!1)):t&&!n?(j=He(H,ee,!1,!0),re=He(V,ee,!1,!1)):(j=He(H,ee,!0,!0),re=He(ee,V,!0,!0)),o!=null){let se=nl(Y,ee);return[j,re,se]}else return[j,re]},E={a:I,b:k,bias:N,preluActivationWeights:P},$={transposeA:t,transposeB:n,activation:s,leakyreluAlpha:i};return o==null?cn((W,V,H)=>{let q=D.runKernel(Ss,E,$);return H([W,V,q]),{value:_(q,x),gradFunc:F}})(I,k):cn((W,V,H,q)=>{let Y=D.runKernel(Ss,E,$);return q([W,V,Y,H]),{value:_(Y,x),gradFunc:F}})(I,k,N)}var j1=A({fusedMatMul_:OY});function zY(r){return Vb(r,.54,.46)}var X1=A({hammingWindow_:zY});function GY(r){return Vb(r,.5,.5)}var jb=A({hannWindow_:GY});function UY(r,e,t,n=!1,o=0){let s=0,a=[];for(;s+e<=r.size;)a.push(ze(r,s,e)),s+=t;if(n)for(;s<r.size;){let i=s+e-r.size,p=pt([ze(r,s,e-i),Ra([i],o)]);a.push(p),s+=t}return a.length===0?fi([],[0,e]):_(pt(a),[a.length,e])}var Xb=A({frame_:UY});function WY(r,e,t,n,o=jb){n==null&&(n=V1(e));let s=Xb(r,e,t),a=L(s,o(e));return el(a,n)}var Y1=A({stft_:WY});function KY(r,e,t,n,o="bilinear",s=0){let a=S(r,"image","cropAndResize"),i=S(e,"boxes","cropAndResize","float32"),p=S(t,"boxInd","cropAndResize","int32"),u=i.shape[0];M(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),M(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`),M(p.rank===1&&p.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`),M(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),M(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),M(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);let l={image:a,boxes:i,boxInd:p},m={method:o,extrapolationValue:s,cropSize:n};return D.runKernel(pa,l,m)}var Q1=A({cropAndResize_:KY});function VY(r){let e=S(r,"image","flipLeftRight","float32");M(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);let t={image:e};return D.runKernel(da,t,{})}var Z1=A({flipLeftRight_:VY});function HY(r){let e=S(r,"image","grayscaleToRGB"),t=e.rank-1,n=e.shape[t];M(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),M(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let o=new Array(e.rank);return o.fill(1,0,t),o[t]=3,Gr(e,o)}var J1=A({grayscaleToRGB_:HY});function qY(r,e,t=0,n=.5){let o=S(r,"image","rotateWithOffset","float32");M(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);let s={image:o},a={radians:e,fillValue:t,center:n};return D.runKernel(Ma,s,a)}var eP=A({rotateWithOffset_:qY});function Rs(r,e,t,n,o,s){n==null&&(n=.5),o==null&&(o=Number.NEGATIVE_INFINITY),s==null&&(s=0);let a=r.shape[0];return t=Math.min(t,a),M(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),M(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),M(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),M(e.rank===1,()=>"scores must be a 1D tensor"),M(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),M(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s}}function jY(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=S(r,"boxes","nonMaxSuppression","float32"),a=S(e,"scores","nonMaxSuppression","float32"),i=Rs(s,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let p={maxOutputSize:t,iouThreshold:n,scoreThreshold:o};return D.runKernel(xa,{boxes:s,scores:a},p)}var tP=A({nonMaxSuppression_:jY});function rP(r,e,t){let n=XY(r,e,t),o=n<0?-(n+1):n;r.splice(o,0,e)}function XY(r,e,t){return QY(r,e,t||YY)}function YY(r,e){return r>e?1:r<e?-1:0}function QY(r,e,t){let n=0,o=r.length,s=0,a=!1;for(;n<o;){s=n+(o-n>>>1);let i=t(e,r[s]);i>0?n=s+1:(o=s,a=!i)}return a?n:-n-1}function Yb(r,e,t,n,o){return Uk(r,e,t,n,o,0)}function Qb(r,e,t,n,o,s){return Uk(r,e,t,n,o,0,!1,s,!0)}function Zb(r,e,t,n,o,s){return Uk(r,e,t,n,o,s,!0)}function Uk(r,e,t,n,o,s,a=!1,i=!1,p=!1){let u=[];for(let g=0;g<e.length;g++)e[g]>o&&u.push({score:e[g],boxIndex:g,suppressBeginIndex:0});u.sort(nP);let l=s>0?-.5/s:0,m=[],c=[];for(;m.length<t&&u.length>0;){let g=u.pop(),{score:y,boxIndex:T,suppressBeginIndex:x}=g;if(y<o)break;let I=!1;for(let k=m.length-1;k>=x;--k){let N=ZY(r,T,m[k]);if(N>=n){I=!0;break}if(g.score=g.score*JY(n,l,N),g.score<=o)break}g.suppressBeginIndex=m.length,I||(g.score===y?(m.push(T),c.push(g.score)):g.score>o&&rP(u,g,nP))}let d=m.length,f=t-d;i&&f>0&&(m.push(...new Array(f).fill(0)),c.push(...new Array(f).fill(0)));let h={selectedIndices:m};return a&&(h.selectedScores=c),p&&(h.validOutputs=d),h}function ZY(r,e,t){let n=r.subarray(e*4,e*4+4),o=r.subarray(t*4,t*4+4),s=Math.min(n[0],n[2]),a=Math.min(n[1],n[3]),i=Math.max(n[0],n[2]),p=Math.max(n[1],n[3]),u=Math.min(o[0],o[2]),l=Math.min(o[1],o[3]),m=Math.max(o[0],o[2]),c=Math.max(o[1],o[3]),d=(i-s)*(p-a),f=(m-u)*(c-l);if(d<=0||f<=0)return 0;let h=Math.max(s,u),g=Math.max(a,l),y=Math.min(i,m),T=Math.min(p,c),x=Math.max(y-h,0)*Math.max(T-g,0);return x/(d+f-x)}function JY(r,e,t){let n=Math.exp(e*t*t);return t<=r?n:0}function nP(r,e){return r.score-e.score||r.score===e.score&&e.boxIndex-r.boxIndex}async function eQ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=S(r,"boxes","nonMaxSuppressionAsync"),a=S(e,"scores","nonMaxSuppressionAsync"),i=Rs(s,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let p=await Promise.all([s.data(),a.data()]),u=p[0],l=p[1],{selectedIndices:m}=Yb(u,l,t,n,o);return s!==r&&s.dispose(),a!==e&&a.dispose(),Ot(m,"int32")}var oP=eQ;function tQ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=S(r,"boxes","nonMaxSuppression"),i=S(e,"scores","nonMaxSuppression"),p=Rs(a,i,t,n,o,s);t=p.maxOutputSize,n=p.iouThreshold,o=p.scoreThreshold,s=p.softNmsSigma;let u={boxes:a,scores:i},l={maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s},m=D.runKernel(Ia,u,l);return{selectedIndices:m[0],selectedScores:m[1]}}var sP=A({nonMaxSuppressionWithScore_:tQ});async function rQ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=S(r,"boxes","nonMaxSuppressionAsync"),i=S(e,"scores","nonMaxSuppressionAsync"),p=Rs(a,i,t,n,o,s);t=p.maxOutputSize,n=p.iouThreshold,o=p.scoreThreshold,s=p.softNmsSigma;let u=await Promise.all([a.data(),i.data()]),l=u[0],m=u[1],{selectedIndices:c,selectedScores:d}=Zb(l,m,t,n,o,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Ot(c,"int32"),selectedScores:Ot(d)}}var aP=rQ;function nQ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=S(r,"boxes","nonMaxSuppression"),i=S(e,"scores","nonMaxSuppression"),p=Rs(a,i,t,n,o,null),u=p.maxOutputSize,l=p.iouThreshold,m=p.scoreThreshold,c={boxes:a,scores:i},d={maxOutputSize:u,iouThreshold:l,scoreThreshold:m,padToMaxOutputSize:s},f=D.runKernel(Vi,c,d);return{selectedIndices:f[0],validOutputs:f[1]}}var iP=A({nonMaxSuppressionPadded_:nQ});async function oQ(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=S(r,"boxes","nonMaxSuppressionAsync"),i=S(e,"scores","nonMaxSuppressionAsync"),p=Rs(a,i,t,n,o,null),u=p.maxOutputSize,l=p.iouThreshold,m=p.scoreThreshold,[c,d]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:h}=Qb(c,d,u,l,m,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Ot(f,"int32"),validOutputs:ce(h,"int32")}}var uP=oQ;function sQ(r,e,t=!1,n=!1){let o=S(r,"images","resizeBilinear");M(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),M(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),M(n===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=_(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,i={images:s},p={alignCorners:t,halfPixelCenters:n,size:e},u=D.runKernel(Bo,i,p);return a?_(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var pP=A({resizeBilinear_:sQ});function aQ(r,e,t=!1,n=!1){let o=S(r,"images","resizeNearestNeighbor");M(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),M(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),M(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),M(n===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=_(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,i={images:s},p={alignCorners:t,halfPixelCenters:n,size:e},u=D.runKernel(ai,i,p);return a?_(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var lP=A({resizeNearestNeighbor_:aQ});function iQ(r,e="binary",t=!1,n=.5){let o=S(r,"image","threshold"),s=.2989,a=.587,i=.114,p=o.shape[0]*o.shape[1],u=L(Ot([n]),255),l,m,c,d;if(M(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),M(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),M(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),M(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),o.shape[2]===3){[l,m,c]=kr(o,[1,1,1],-1);let g=L(l,s),y=L(m,a),T=L(c,i);d=Q(Q(g,y),T)}else d=r;if(e==="otsu"){let g=Md(te(Vd(d),"int32"),Fr([]),256);u=uQ(g,p)}let f=t?Jo(d,u):rr(d,u);return te(L(f,255),"int32")}function uQ(r,e){let t=Ot([-1]),n=Ot([0]),o=Ot([0]),s,a,i,p,u,l;for(let m=0;m<r.size-1;m++){s=ze(r,0,m+1),a=ze(r,m+1),u=me(fe(s),e),l=me(fe(a),e);let c=fe(L(s,mu(0,s.size)));i=me(c,fe(s));let d=Ra(a.shape,s.size),f=Q(mu(0,a.size),d),h=L(a,f);p=me(fe(h),fe(a));let g=pe(i,p),y=pe(i,p),T=L(u,l);o=L(L(T,g),y);let x=rr(o,n);n=Bt(x,o,n),t=Bt(x,Ot([m]),t)}return t}var mP=A({threshold_:iQ});function pQ(r,e,t="nearest",n="constant",o=0,s){let a=S(r,"image","transform","float32"),i=S(e,"transforms","transform","float32");M(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),M(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),M(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let p={image:a,transforms:i},u={interpolation:t,fillMode:n,fillValue:o,outputShape:s};return D.runKernel(Pa,p,u)}var cP=A({transform_:pQ});function lQ(r,e,t){M(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),M(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);let n=S(r,"a","bandPart");M(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let o=n.shape,[s,a]=n.shape.slice(-2);if(!(e<=s))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`);if(!(t<=a))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`);e<0&&(e=s),t<0&&(t=a);let i=_(mu(0,s,1,"int32"),[-1,1]),p=mu(0,a,1,"int32"),u=pe(i,p),l=Ur(Jo(u,ce(+e,"int32")),Zo(u,ce(-t,"int32"))),m=bt([s,a],n.dtype);return _(mr(_r(_(n,[-1,s,a])).map(c=>Bt(l,c,m))),o)}var dP=A({bandPart_:lQ});function mQ(r){let e;if(Array.isArray(r)){e=!1,M(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let o=r[0].shape[0];for(let s=1;s<r.length;++s)M(r[s].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${o})`)}else e=!0,r=kr(r,r.shape[0],0).map(o=>dn(o,[0]));M(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let t=[],n=r;for(let o=0;o<r.length;++o)t.push(D.tidy(()=>{let s=n[o];if(o>0)for(let a=0;a<o;++a){let i=L(fe(L(t[a],s)),t[a]);s=pe(s,i)}return me(s,Wb(s,"euclidean"))}));return e?mr(t,0):t}var fP=A({gramSchmidt_:mQ});function cQ(r,e=!1){if(M(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return hP(r,e);{let t=r.shape.slice(0,r.shape.length-2).reduce((p,u)=>p*u),n=_r(_(r,[t,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),o=[],s=[];n.forEach(p=>{let[u,l]=hP(p,e);o.push(u),s.push(l)});let a=_(mr(o,0),r.shape),i=_(mr(s,0),r.shape);return[a,i]}}function hP(r,e=!1){return D.tidy(()=>{M(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let t=r.shape[0],n=r.shape[1],o=Hm(t),s=Dn(r),a=fi([[1]],[1,1]),i=Dn(a),p=t>=n?n:t;for(let u=0;u<p;++u){let l=s,m=i,c=o;[i,s,o]=D.tidy(()=>{let d=ze(s,[u,u],[t-u,1]),f=Wb(d),h=ze(s,[u,u],[1,1]),g=Bt(rr(h,0),fi([[-1]]),fi([[1]])),y=pe(h,L(g,f)),T=me(d,y);T.shape[0]===1?i=Dn(a):i=pt([a,ze(T,[1,0],[T.shape[0]-1,T.shape[1]])],0);let x=et(me(He(g,y),f)),I=ze(s,[u,0],[t-u,n]),k=L(x,i),N=Ge(i);if(u===0)s=pe(I,He(k,He(N,I)));else{let E=pe(I,He(k,He(N,I)));s=pt([ze(s,[0,0],[u,n]),E],0)}let P=Ge(k),F=ze(o,[0,u],[t,o.shape[1]-u]);if(u===0)o=pe(F,He(He(F,i),P));else{let E=pe(F,He(He(F,i),P));o=pt([ze(o,[0,0],[t,u]),E],1)}return[i,s,o]}),Me([l,m,c])}return!e&&t>n&&(o=ze(o,[0,0],[t,n]),s=ze(s,[0,0],[n,n])),[o,s]})}var gP=A({qr_:cQ});var _a=(o=>(o[o.NONE=0]="NONE",o[o.MEAN=1]="MEAN",o[o.SUM=2]="SUM",o[o.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",o))(_a||{});function dQ(r,e,t=3){let n=S(r,"losses","computeWeightedLoss"),o=null;e!=null&&(o=S(e,"weights","computeWeightedLoss"));let s=o==null?n:L(n,o);if(t===0)return s;if(t===2)return fe(s);if(t===1){if(o==null)return Rt(s);{let a=n.size/o.size,i=me(fe(s),fe(o));return a>1?me(i,ce(a)):i}}if(t===3){if(o==null)return me(fe(s),ce(n.size));{let a=L(o,lr(n.shape)),i=te(fe(di(a,ce(0))),"float32");return me(fe(s),i)}}throw Error(`Unknown reduction: ${t}`)}var Kr=A({computeWeightedLoss_:dQ});function fQ(r,e,t,n=3){let o=S(r,"labels","absoluteDifference"),s=S(e,"predictions","absoluteDifference"),a=null;t!=null&&(a=S(t,"weights","absoluteDifference")),Gt(o.shape,s.shape,"Error in absoluteDifference: ");let i=$t(pe(o,s));return Kr(i,a,n)}var bP=A({absoluteDifference_:fQ});function hQ(r,e,t,n,o=3){let s=S(r,"labels","cosineDistance"),a=S(e,"predictions","cosineDistance"),i=null;n!=null&&(i=S(n,"weights","cosineDistance")),Gt(s.shape,a.shape,"Error in cosineDistance: ");let p=ce(1),u=pe(p,fe(L(s,a),t,!0));return Kr(u,i,o)}var yP=A({cosineDistance_:hQ});function gQ(r,e,t,n=3){let o=S(r,"labels","hingeLoss"),s=S(e,"predictions","hingeLoss"),a=null;t!=null&&(a=S(t,"weights","hingeLoss")),Gt(o.shape,s.shape,"Error in hingeLoss: ");let i=ce(1);o=pe(L(ce(2),o),i);let p=Wr(pe(i,L(o,s)));return Kr(p,a,n)}var TP=A({hingeLoss_:gQ});function bQ(r,e,t,n=1,o=3){let s=S(r,"labels","huberLoss"),a=S(e,"predictions","huberLoss"),i=null;t!=null&&(i=S(t,"weights","huberLoss")),Gt(s.shape,a.shape,"Error in huberLoss: ");let p=ce(n),u=$t(pe(a,s)),l=lu(u,p),m=pe(u,l),c=Q(L(ce(.5),je(l)),L(p,m));return Kr(c,i,o)}var xP=A({huberLoss_:bQ});function yQ(r,e,t,n=1e-7,o=3){let s=S(r,"labels","logLoss"),a=S(e,"predictions","logLoss"),i=null;t!=null&&(i=S(t,"weights","logLoss")),Gt(s.shape,a.shape,"Error in logLoss: ");let p=ce(1),u=ce(n),l=et(L(s,Lr(Q(a,u)))),m=L(pe(p,s),Lr(Q(pe(p,a),u))),c=pe(l,m);return Kr(c,i,o)}var IP=A({logLoss_:yQ});function TQ(r,e,t,n=3){let o=S(r,"labels","meanSquaredError"),s=S(e,"predictions","meanSquaredError"),a=null;t!=null&&(a=S(t,"weights","meanSquaredError")),Gt(o.shape,s.shape,"Error in meanSquaredError: ");let i=Jd(o,s);return Kr(i,a,n)}var CP=A({meanSquaredError_:TQ});function xQ(r,e){let t=S(r,"labels","sigmoidCrossEntropyWithLogits"),n=S(e,"logits","sigmoidCrossEntropyWithLogits");Gt(t.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let o=Wr(n),s=L(n,t),a=Hp(pr(et($t(n))));return Q(pe(o,s),a)}function IQ(r,e,t,n=0,o=3){let s=S(r,"multiClassLabels","sigmoidCrossEntropy"),a=S(e,"logits","sigmoidCrossEntropy"),i=null;if(t!=null&&(i=S(t,"weights","sigmoidCrossEntropy")),Gt(s.shape,a.shape,"Error in sigmoidCrossEntropy: "),n>0){let u=ce(n),l=ce(1),m=ce(.5);s=Q(L(s,pe(l,u)),L(m,u))}let p=xQ(s,a);return Kr(p,i,o)}var kP=A({sigmoidCrossEntropy_:IQ});function CQ(r,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return cn((o,s,a)=>{let p=xk(s,[t],!0),u=pe(te(s,"float32"),p);a([o,u]);let l=et(L(u,o));return{value:fe(l,[t]),gradFunc:(d,f)=>{let[h,g]=f,y=Fs(d.shape,[t]);return[L(_(d,y),pe(te(h,"float32"),pr(g))),L(_(d,y),pe(pr(g),te(h,"float32")))]}}})(r,e)}function kQ(r,e,t,n=0,o=3){let s=S(r,"onehotLabels","softmaxCrossEntropy"),a=S(e,"logits","softmaxCrossEntropy"),i=null;if(t!=null&&(i=S(t,"weights","softmaxCrossEntropy")),Gt(s.shape,a.shape,"Error in softmaxCrossEntropy: "),n>0){let u=ce(n),l=ce(1),m=ce(s.shape[1]);s=Q(L(s,pe(l,u)),me(u,m))}let p=CQ(s,a);return Kr(p,i,o)}var SP=A({softmaxCrossEntropy_:kQ});function SQ(r,e,t,n){let o=S(r,"indices","sparseFillEmptyRows","int32"),s=S(e,"values","sparseFillEmptyRows"),a=S(t,"denseShape","sparseFillEmptyRows","int32"),i=S(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let p={indices:o,values:s,denseShape:a,defaultValue:i},u=D.runKernel(Uu,p);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var vP=A({sparseFillEmptyRows_:SQ});function vQ(r,e,t){let n=S(r,"inputIndices","sparseReshape","int32"),o=S(e,"inputShape","sparseReshape","int32"),s=S(t,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let a={inputIndices:n,inputShape:o,newShape:s},i=D.runKernel(Yi,a);return{outputIndices:i[0],outputShape:i[1]}}var AP=A({sparseReshape_:vQ});function AQ(r,e,t){let n=S(r,"data","sparseSegmentMean"),o=S(e,"indices","sparseSegmentMean","int32"),s=S(t,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return D.runKernel(Wu,a)}var wP=A({sparseSegmentMean_:AQ});function wQ(r,e,t){let n=S(r,"data","sparseSegmentSum"),o=S(e,"indices","sparseSegmentSum","int32"),s=S(t,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return D.runKernel(Ku,a)}var NP=A({sparseSegmentSum_:wQ});function NQ(r,e,t,n,o,s,a,i){let p=S(r,"data","stringNGrams","string");if(p.dtype!=="string")throw new Error("Data must be of datatype string");if(p.shape.length!==1)throw new Error(`Data must be a vector, saw: ${p.shape}`);let u=S(e,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let l={separator:t,nGramWidths:n,leftPad:o,rightPad:s,padWidth:a,preserveShortSequences:i},m={data:p,dataSplits:u},c=D.runKernel(Hu,m,l);return{nGrams:c[0],nGramsSplits:c[1]}}var DP=A({stringNGrams_:NQ});function DQ(r,e,t=!0){let n=S(r,"input","stringSplit","string"),o=S(e,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);let s={skipEmpty:t},a={input:n,delimiter:o},i=D.runKernel(Dm,a,s);return{indices:i[0],values:i[1],shape:i[2]}}var PP=A({stringSplit_:DQ});function PQ(r,e){let t=S(r,"input","stringToHashBucketFast","string"),n={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");let o={input:t};return D.runKernel(Pm,o,n)}var MP=A({stringToHashBucketFast_:PQ});var SVe={fft:Jp,ifft:tp,rfft:el,irfft:Zd},DVe={hammingWindow:X1,hannWindow:jb,frame:Xb,stft:Y1},fn={flipLeftRight:Z1,grayscaleToRGB:J1,resizeNearestNeighbor:lP,resizeBilinear:pP,rotateWithOffset:eP,cropAndResize:Q1,nonMaxSuppression:tP,nonMaxSuppressionAsync:oP,nonMaxSuppressionWithScore:sP,nonMaxSuppressionWithScoreAsync:aP,nonMaxSuppressionPadded:iP,nonMaxSuppressionPaddedAsync:uP,threshold:mP,transform:cP},FP={bandPart:dP,gramSchmidt:fP,qr:gP},r4e={absoluteDifference:bP,computeWeightedLoss:Kr,cosineDistance:yP,hingeLoss:TP,huberLoss:xP,logLoss:IP,meanSquaredError:CP,sigmoidCrossEntropy:kP,softmaxCrossEntropy:SP},tf={sparseFillEmptyRows:vP,sparseReshape:AP,sparseSegmentMean:wP,sparseSegmentSum:NP},Jb={stringNGrams:DP,stringSplit:PP,stringToHashBucketFast:MP};var Qr=class extends Mb{minimize(e,t=!1,n){let{value:o,grads:s}=this.computeGradients(e,n);if(n!=null){let a=n.map(i=>({name:i.name,tensor:s[i.name]}));this.applyGradients(a)}else this.applyGradients(s);return Me(s),t?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Lb(e,t)}dispose(){this.iterations_!=null&&Me(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ce(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Qr,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var al=class extends Qr{constructor(e,t,n=null){super();this.learningRate=e;this.rho=t;this.epsilon=n;this.accumulatedGrads=[];this.accumulatedUpdates=[];n==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n],a=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accum_grad`,variable:z(()=>Ne(s).variable(a))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${n}/accum_var`,variable:z(()=>Ne(s).variable(a))});let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let p=this.accumulatedGrads[o].variable,u=this.accumulatedUpdates[o].variable;z(()=>{let l=Q(L(p,this.rho),L(je(i),1-this.rho)),m=L(me(Lt(Q(u,this.epsilon)),Lt(Q(p,this.epsilon))),i),c=Q(L(u,this.rho),L(je(m),1-this.rho));p.assign(l),u.assign(c);let d=Q(L(m,-this.learningRate),s);s.assign(d)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Me(this.accumulatedGrads.map(e=>e.variable)),Me(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};al.className="Adadelta";Pn(al);var il=class extends Qr{constructor(e,t=.1){super();this.learningRate=e;this.initialAccumulatorValue=t;this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n];this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accumulator`,variable:z(()=>Ra(s.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[o].tensor:e[n];if(a==null)return;let i=this.accumulatedGrads[o].variable;z(()=>{let p=Q(i,je(a));i.assign(p);let u=Q(L(me(a,Lt(Q(p,D.backend.epsilon()))),-this.learningRate),s);s.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Me(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};il.className="Adagrad";Pn(il);var ul=class extends Qr{constructor(e,t,n,o=null){super();this.learningRate=e;this.beta1=t;this.beta2=n;this.epsilon=o;this.accumulatedFirstMoment=[];this.accumulatedSecondMoment=[];z(()=>{this.accBeta1=ce(t).variable(),this.accBeta2=ce(n).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);z(()=>{let n=pe(1,this.accBeta1),o=pe(1,this.accBeta2);t.forEach((s,a)=>{let i=D.registeredVariables[s],p=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:z(()=>Ne(i).variable(p))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${s}/v`,variable:z(()=>Ne(i).variable(p))});let u=Array.isArray(e)?e[a].tensor:e[s];if(u==null)return;let l=this.accumulatedFirstMoment[a].variable,m=this.accumulatedSecondMoment[a].variable,c=Q(L(l,this.beta1),L(u,1-this.beta1)),d=Q(L(m,this.beta2),L(je(u),1-this.beta2)),f=me(c,n),h=me(d,o);l.assign(c),m.assign(d);let g=Q(L(me(f,Q(Lt(h),this.epsilon)),-this.learningRate),i);i.assign(g)}),this.accBeta1.assign(L(this.accBeta1,this.beta1)),this.accBeta2.assign(L(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Me(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Me(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),z(()=>{this.accBeta1.assign(Fn(this.beta1,this.iterations_+1)),this.accBeta2.assign(Fn(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};ul.className="Adam";Pn(ul);var pl=class extends Qr{constructor(e,t,n,o=null,s=0){super();this.learningRate=e;this.beta1=t;this.beta2=n;this.epsilon=o;this.decay=s;this.accumulatedFirstMoment=[];this.accumulatedWeightedInfNorm=[];z(()=>{this.iteration=ce(0).variable(),this.accBeta1=ce(t).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);z(()=>{let n=pe(1,this.accBeta1),o=me(-this.learningRate,Q(L(this.iteration,this.decay),1));t.forEach((s,a)=>{let i=D.registeredVariables[s],p=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:Ne(i).variable(p)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${s}/v`,variable:Ne(i).variable(p)});let u=Array.isArray(e)?e[a].tensor:e[s];if(u==null)return;let l=this.accumulatedFirstMoment[a].variable,m=this.accumulatedWeightedInfNorm[a].variable,c=Q(L(l,this.beta1),L(u,1-this.beta1)),d=L(m,this.beta2),f=$t(u),h=jn(d,f);l.assign(c),m.assign(h);let g=Q(L(me(o,n),me(c,Q(h,this.epsilon))),i);i.assign(g)}),this.iteration.assign(Q(this.iteration,1)),this.accBeta1.assign(L(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Me(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Me(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};pl.className="Adamax";Pn(pl);var du=class extends Qr{constructor(e){super();this.learningRate=e;this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=Array.isArray(e)?e[o].tensor:e[n];if(s==null)return;let a=D.registeredVariables[n];z(()=>{let i=Q(L(this.c,s),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Ut(ce(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};du.className="SGD";Pn(du);var ll=class extends du{constructor(e,t,n=!1){super(e);this.learningRate=e;this.momentum=t;this.useNesterov=n;this.accumulations=[];this.m=ce(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n];this.accumulations[o]==null&&(this.accumulations[o]={originalName:`${n}/momentum`,variable:z(()=>Ne(s).variable(!1))});let a=this.accumulations[o].variable,i=Array.isArray(e)?e[o].tensor:e[n];i!=null&&z(()=>{let p,u=Q(L(this.m,a),i);this.useNesterov?p=Q(L(this.c,Q(i,L(u,this.m))),s):p=Q(L(this.c,u),s),a.assign(u),s.assign(p)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Me(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};ll.className="Momentum";Pn(ll);var ml=class extends Qr{constructor(e,t=.9,n=0,o=null,s=!1){super();this.learningRate=e;this.decay=t;this.momentum=n;this.epsilon=o;this.accumulatedMeanSquares=[];this.accumulatedMoments=[];this.accumulatedMeanGrads=[];if(this.centered=s,o==null&&(this.epsilon=D.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n],a=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${n}/rms`,variable:z(()=>Ne(s).variable(a))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${n}/momentum`,variable:z(()=>Ne(s).variable(a))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${n}/mg`,variable:z(()=>Ne(s).variable(a))});let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let p=this.accumulatedMeanSquares[o].variable,u=this.accumulatedMoments[o].variable;z(()=>{let l=Q(L(p,this.decay),L(je(i),1-this.decay));if(this.centered){let m=this.accumulatedMeanGrads[o].variable,c=Q(L(m,this.decay),L(i,1-this.decay)),d=me(L(i,this.learningRate),Lt(pe(l,Q(je(c),this.epsilon)))),f=Q(L(u,this.momentum),d);p.assign(l),m.assign(c),u.assign(f);let h=pe(s,f);s.assign(h)}else{let m=Q(L(p,this.decay),L(je(i),1-this.decay)),c=Q(L(u,this.momentum),me(L(i,this.learningRate),Lt(Q(m,this.epsilon))));p.assign(m),u.assign(c);let d=pe(s,c);s.assign(d)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Me(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Me(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Me(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};ml.className="RMSProp";Pn(ml);var hi=class{static sgd(e){return new du(e)}static momentum(e,t,n=!1){return new ll(e,t,n)}static rmsprop(e,t=.9,n=0,o=null,s=!1){return new ml(e,t,n,o,s)}static adam(e=.001,t=.9,n=.999,o=null){return new ul(e,t,n,o)}static adadelta(e=.001,t=.95,n=null){return new al(e,t,n)}static adamax(e=.002,t=.9,n=.999,o=null,s=0){return new pl(e,t,n,o,s)}static adagrad(e,t=.1){return new il(e,t)}};var cl={sgd:hi.sgd,momentum:hi.momentum,adadelta:hi.adadelta,adagrad:hi.adagrad,rmsprop:hi.rmsprop,adamax:hi.adamax,adam:hi.adam};var MQ=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:r=>r())();function rf(){return new Promise(r=>MQ(()=>r()))}var C={};Xe(C,{ERF_A1:()=>UQ,ERF_A2:()=>WQ,ERF_A3:()=>KQ,ERF_A4:()=>VQ,ERF_A5:()=>HQ,ERF_P:()=>GQ,PARALLELIZE_THRESHOLD:()=>ey,SELU_SCALE:()=>Kk,SELU_SCALEALPHA:()=>Wk,applyActivation:()=>ol,assertAndGetBroadcastShape:()=>Ue,assertAxesAreInnerMostDims:()=>P8,assertParamsConsistent:()=>FQ,assignToTypedArray:()=>ZQ,axesAreInnerMostDims:()=>gk,calculateShapes:()=>o1,checkEinsumDimSizes:()=>oZ,checkPadOnDimRoundingMode:()=>Nt,combineLocations:()=>C1,complexWithEvenIndex:()=>XQ,complexWithOddIndex:()=>YQ,computeConv2DInfo:()=>Op,computeConv3DInfo:()=>T1,computeDefaultPad:()=>XC,computeDilation2DInfo:()=>Y6,computeOptimalWindowSize:()=>RQ,computeOutAndReduceShapes:()=>bk,computeOutShape:()=>EQ,computePool2DInfo:()=>jC,computePool3DInfo:()=>Q6,convertConv2DDataFormat:()=>x1,decodeEinsumEquation:()=>rZ,eitherStridesOrDilationsAreOne:()=>Er,expandShapeToKeepDim:()=>Fs,exponent:()=>eZ,exponents:()=>JQ,fromStringArrayToUint8:()=>vZ,fromUint8ToStringArray:()=>SZ,getAxesPermutation:()=>yk,getBroadcastDims:()=>t1,getComplexWithIndex:()=>QQ,getEinsumComputePath:()=>sZ,getEinsumPermutation:()=>nZ,getFusedBiasGradient:()=>nl,getFusedDyActivation:()=>rl,getImageCenter:()=>LQ,getInnerMostAxes:()=>M8,getPermuted:()=>$Q,getReductionAxes:()=>Ct,getReshaped:()=>_Q,getReshapedPermuted:()=>BQ,getSliceBeginCoords:()=>OQ,getSliceSize:()=>zQ,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>pZ,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>lZ,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>mZ,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>fZ,getSparseReshapeInputOutputMismatchErrorMessage:()=>gZ,getSparseReshapeInputOutputMultipleErrorMessage:()=>hZ,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>cZ,getSparseReshapeNegativeOutputDimErrorMessage:()=>dZ,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>xZ,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>bZ,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>yZ,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>TZ,getUndoAxesPermutation:()=>Od,isIdentityPermutation:()=>aZ,log:()=>lj,mergeRealAndImagArrays:()=>qQ,prepareAndValidate:()=>n1,prepareSplitSize:()=>uZ,segment_util:()=>Hk,shouldFuse:()=>sl,slice_util:()=>Tt,splitRealAndImagArrays:()=>jQ,tupleValuesAreOne:()=>Yo,upcastType:()=>Ft,validateInput:()=>Pb,validateUpdateShape:()=>FC,warn:()=>ui});function FQ(r,e){let t=r[0].length;r.forEach((o,s)=>{M(o.length===t,()=>`Error in concat${t}D: rank of tensors[${s}] must be the same as the rank of the rest (${t})`)}),M(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);let n=r[0];r.forEach((o,s)=>{for(let a=0;a<t;a++)M(a===e||o[a]===n[a],()=>`Error in concat${t}D: Shape of tensors[${s}] (${o}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function EQ(r,e){let t=r[0].slice();for(let n=1;n<r.length;n++)t[e]+=r[n][e];return t}var ey=30;function RQ(r){return r<=ey?r:sm(r,Math.floor(Math.sqrt(r)))}function LQ(r,e,t){let n=t*(typeof r=="number"?r:r[0]),o=e*(typeof r=="number"?r:r[1]);return[n,o]}function _Q(r,e,t,n=!0){let o=[];if(n)o=o.concat(e.slice(0)),o.push(r[0]/t),o=o.concat(r.slice(1));else{o=o.concat(r[0]);let s=e.length;for(let a=0;a<s;++a)o=o.concat([r[a+1]/e[a],e[a]]);o=o.concat(r.slice(s+1))}return o}function $Q(r,e,t=!0){let n=[];if(t){n.push(e);for(let o=e+1;o<r;++o)o<=2*e?(n.push(o),n.push(o-(e+1))):n.push(o)}else{let o=[],s=[];for(let a=1;a<r;++a)a>=e*2+1||a%2===1?s.push(a):o.push(a);n.push(...o),n.push(0),n.push(...s)}return n}function BQ(r,e,t,n=!0){let o=[];n?o.push(r[0]/t):o.push(r[0]*t);for(let s=1;s<r.length;++s)s<=e.length?n?o.push(e[s-1]*r[s]):o.push(r[s]/e[s-1]):o.push(r[s]);return o}function OQ(r,e){let t=[0];for(let n=0;n<e;++n)t.push(r[n][0]);return t}function zQ(r,e,t){let n=r.slice(0,1);for(let o=0;o<t;++o)n.push(r[o+1]-e[o][0]-e[o][1]);return n}var Wk=1.7580993408473768,Kk=1.0507009873554805;var GQ=.3275911,UQ=.254829592,WQ=-.284496736,KQ=1.421413741,VQ=-1.453152027,HQ=1.061405429;function qQ(r,e){if(r.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${e.length}.`);let t=new Float32Array(r.length*2);for(let n=0;n<t.length;n+=2)t[n]=r[n/2],t[n+1]=e[n/2];return t}function jQ(r){let e=new Float32Array(r.length/2),t=new Float32Array(r.length/2);for(let n=0;n<r.length;n+=2)e[n/2]=r[n],t[n/2]=r[n+1];return{real:e,imag:t}}function XQ(r){let e=Math.ceil(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=0;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function YQ(r){let e=Math.floor(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=2;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function QQ(r,e){let t=r[e*2],n=r[e*2+1];return{real:t,imag:n}}function ZQ(r,e,t,n){r[n*2]=e,r[n*2+1]=t}function JQ(r,e){let t=new Float32Array(r/2),n=new Float32Array(r/2);for(let o=0;o<Math.ceil(r/2);o++){let s=(e?2:-2)*Math.PI*(o/r);t[o]=Math.cos(s),n[o]=Math.sin(s)}return{real:t,imag:n}}function eZ(r,e,t){let n=(t?2:-2)*Math.PI*(r/e),o=Math.cos(n),s=Math.sin(n);return{real:o,imag:s}}var Vk="->",tZ=/->/g,EP=",",RP="...";function rZ(r,e){r=r.replace(/\s/g,"");let t=(r.length-r.replace(tZ,"").length)/Vk.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${Vk}").`);let[n,o]=r.split(Vk);M(n.indexOf(RP)===-1,()=>`The ellipsis notation ("${RP}") is not supported yet.`);let s=n.split(EP),a=s.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let c=0;c<o.length;++c){let d=o[c];if(!s.some(f=>f.indexOf(d)!==-1))throw new Error(`Output subscripts contain the label ${d} not present in the input subscripts.`);i.indexOf(d)===-1&&i.push(d)}for(let c=0;c<n.length;++c){let d=n[c];i.indexOf(d)===-1&&d!==EP&&i.push(d)}let p=new Array(s.length);for(let c=0;c<a;++c){if(new Set(s[c].split("")).size!==s[c].length)throw new Error(`Found duplicate axes in input component ${s[c]}. Support for duplicate axes in input is not implemented yet.`);p[c]=[];for(let d=0;d<s[c].length;++d)p[c].push(i.indexOf(s[c][d]))}let u=i.length,l=o.length,m=[];for(let c=l;c<u;++c)m.push(c);return{allDims:i,summedDims:m,idDims:p}}function nZ(r,e){let t=new Array(r);t.fill(-1);for(let o=0;o<e.length;++o)t[e[o]]=o;let n=[];for(let o=0;o<r;++o)t[o]===-1&&n.push(o);return t=t.filter(o=>o!==-1),{permutationIndices:t,expandDims:n}}function oZ(r,e,t){let n=new Array(r);for(let o=0;o<t.length;++o){let s=t[o].shape;for(let a=0;a<e[o].length;++a)n[e[o][a]]===void 0?n[e[o][a]]=s[a]:M(n[e[o][a]]===s[a],()=>`Expected dimension ${n[e[o][a]]} at axis ${a} of input shaped ${JSON.stringify(s)}, but got dimension ${s[a]}`)}}function sZ(r,e){let t=r,n=[],o=0;r.length===0&&t.push(-1),o=r.length+1;for(let a=0;a<o;++a)n.push([]);let s=[];for(let a=0;a<t.length;++a){let i=t[a],p=iZ(e,i);for(let u of p)s.indexOf(u)===-1&&(n[a].push(u),s.push(u))}return{path:t,steps:n}}function aZ(r){return r.every((e,t)=>e===t)}function iZ(r,e){let t=[];for(let n=0;n<r.length;++n)(r[n].length===0||r[n].indexOf(e)!==-1||e===-1)&&t.push(n);return t}function uZ(r,e,t=0){let n=[];if(typeof e=="number")M(r.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),n=new Array(e).fill(r.shape[t]/e);else{let o=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);M(o<=1,()=>"There should be only one negative value in split array.");let s=e.indexOf(-1);if(s!==-1){let a=e.reduce((i,p)=>p>0?i+p:i);e[s]=r.shape[t]-a}M(r.shape[t]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),n=e}return n}function pZ(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function lZ(r,e){return`indices(${r}, 0) is invalid: ${e} < 0`}function mZ(r,e,t){return`indices(${r}, 0) is invalid: ${e} >= ${t}`}function cZ(r,e){return`only one output dimension may be -1, not both ${r} and ${e}`}function dZ(r,e){return`size ${r} must be non-negative, not ${e}`}function fZ(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function hZ(r,e){let t=st(r),n=st(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${r} outputShape= ${e}`}function gZ(r,e){let t=st(r),n=st(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${n}. inputShape=${r} outputShape=${e}`}function bZ(){return"segment ids must be >= 0"}function yZ(){return"segment ids are not increasing"}function TZ(r,e){return`Segment id ${r} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function xZ(r,e,t){return`Bad: indices[${r}] == ${e} out of range [0, ${t})`}var Hk={};Xe(Hk,{collectGatherOpShapeInfo:()=>kZ,computeOutShape:()=>CZ,segOpComputeOptimalWindowSize:()=>IZ});function IZ(r,e){let t=!1,n;for(r<=ey?(n=r,t=!0):n=sm(r,Math.floor(Math.sqrt(r)));!t;)n>e||n===r?t=!0:n=sm(r,n+1);return n}function CZ(r,e,t){let n=[],o=r.length;for(let s=0;s<o;s++)s!==e?n.push(r[s]):n.push(t);return n}function kZ(r,e,t,n){let o=e.shape.length,s=r.shape.length;if(n!==0&&(n<-o||n>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${n}`);if(n<0&&(n+=o),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(t<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${t}).`);for(let m=0;m<n;++m)if(r.shape[m]!==e.shape[m])throw new Error(`x.shape[${m}]: ${r.shape[m]} should be equal to indices.shape[${m}]: ${e.shape[m]}.`);let a=r.shape[t],i=[],p=1,u=1,l=1;for(let m=0;m<n;++m)i.push(r.shape[m]),p*=r.shape[m];for(let m=n;m<t;m++)i.push(r.shape[m]),u*=r.shape[m];for(let m=n;m<o;m++)i.push(e.shape[m]);for(let m=t+1;m<s;m++)i.push(r.shape[m]),l*=r.shape[m];return{batchSize:p,sliceSize:l,outerSize:u,dimSize:a,outputShape:i}}function SZ(r){try{return r.map(e=>_m(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function vZ(r){return r.map(e=>Xu(e))}var br={};Xe(br,{nonMaxSuppressionV3Impl:()=>Yb,nonMaxSuppressionV4Impl:()=>Qb,nonMaxSuppressionV5Impl:()=>Zb,whereImpl:()=>Ub});var Xn=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Xn.prototype)}},Zr=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Zr.prototype)}},O=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,O.prototype)}},Pe=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Pe.prototype)}},nf=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,nf.prototype)}};var ty=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=e}};function _s(r,e){if(Array.isArray(r)){let t=[];for(let n=0;n<e;n++)t=t.concat(r);return t}else{let t=new Array(e);return t.fill(r),t}}function es(r,e){if(!r)throw new nf(e)}function jk(r,e){let t=0;for(let n of r)n===e&&t++;return t}function Pr(r){return r.length===1?r[0]:r}function kt(r){return Array.isArray(r)?r:[r]}function $s(r){let t=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function fu(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}var Ls={};function Zm(r){if(r==null)return null;let e={};return e.className=r.getClassName(),e.config=r.getConfig(),e}function qk(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(e=>qk(e));else{let e=Object.keys(r);for(let t of e){let n=r[t];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?r[t]=n.value:qk(n))}}}function gi(r,e={},t={},n="object",o=!1){if(typeof r=="string"){let s=r,a;if(s in t)a=t[s];else if(s in Ls)a=Ls[s];else if(a=e[s],a==null)throw new O(`Unknown ${n}: ${r}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{let s=r;if(s.className==null||s.config==null)throw new O(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let a=s.className,i,p;if(a in t?[i,p]=t[a]:a in Ls?[i,p]=Ls.className:a in e&&([i,p]=e[a]),i==null)throw new O(`Unknown ${n}: ${a}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(p!=null){let u={};for(let d of Object.keys(Ls))u[d]=Ls[d];for(let d of Object.keys(t))u[d]=t[d];let l=s.config;l.customObjects=u;let m={...Ls};for(let d of Object.keys(t))Ls[d]=t[d];qk(s.config);let c=p(i,s.config,t,o);return Ls={...m},c}else{let u={...Ls};for(let m of Object.keys(t))Ls[m]=t[m];let l=new i(s.config);return Ls={...u},l}}}function AZ(r,e){return r<e?-1:r>e?1:0}function of(r,e){return-1*AZ(r,e)}function Bs(r){if(r==null)return r;let e=[];for(let t of r)e.indexOf(t)===-1&&e.push(t);return e}function LP(r){if(r==null)throw new O(`Invalid value in obj: ${JSON.stringify(r)}`);for(let e in r)if(r.hasOwnProperty(e))return!1;return!0}function bi(r,e,t){if(t!=null&&r.indexOf(t)<0)throw new O(`${t} is not a valid ${e}.  Valid values are ${r} or null/undefined.`)}function ry(r,e,t=0,n=1/0){return es(t>=0),es(n>=t),Array.isArray(r)&&r.length>=t&&r.length<=n&&r.every(o=>typeof o===e)}function nr(r,e){Array.isArray(r)?(b.assert(r.length>0,()=>`${e} is unexpectedly an empty array.`),r.forEach((t,n)=>nr(t,`element ${n+1} of ${e}`))):b.assert(Number.isInteger(r)&&r>0,()=>`Expected ${e} to be a positive integer, but got ${_P(r)}.`)}function _P(r){return r===null?"null":Array.isArray(r)?"["+r.map(e=>_P(e)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function $P(r,e,t){let n=t!=null?t():b.now(),o;return(...a)=>{let i=t!=null?t():b.now();return i-n<e||(n=i,o=r(...a)),o}}function ny(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}var wZ=0;function sy(){return wZ++}var oy={};function rp(r=""){return r in oy||(oy[r]=0),oy[r]+=1,r+oy[r].toString()}var BP=["channelsFirst","channelsLast"],OP=["nearest","bilinear"],zP=["valid","same","causal"],GP=["max","avg"],UP=["sum","mul","concat","ave"];var Jm=new Map;function Wt(r){bi(BP,"DataFormat",r)}function KP(r){bi(OP,"InterpolationFormat",r)}function hn(r){bi(zP,"PaddingMode",r)}function Xk(r){bi(GP,"PoolMode",r)}var sf=[],WP="/";function Ba(r,e){sf.push(r);try{let t=e();return sf.pop(),t}catch(t){throw sf.pop(),t}}function NZ(){return sf.length===0?"":sf.join(WP)+WP}function ay(r){if(!VP(r))throw new Error("Not a valid tensor name: '"+r+"'");return NZ()+r}function iy(r){if(!VP(r))throw new Error("Not a valid tensor name: '"+r+"'");Jm.has(r)||Jm.set(r,0);let e=Jm.get(r);if(Jm.set(r,Jm.get(r)+1),e>0){let t=`${r}_${e}`;return Jm.set(t,1),t}else return r}var DZ=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function VP(r){return!!r.match(DZ)}function HP(r){return r===parseInt(r.toString(),10)}function Os(r,e,t){e==null&&(e=0),t==null&&(t=r.length);let n=1;for(let o=e;o<t;++o)n*=r[o];return n}function dl(r){if(r.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n<e&&(e=n)}return e}function Oa(r){if(r.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n>e&&(e=n)}return e}function Jr(r,e){if(e<r)throw new O(`end (${e}) < begin (${r}) is forbidden.`);let t=[];for(let n=r;n<e;++n)t.push(n);return t}var Yk;function cr(){return Yk==null&&(Yk=y1().epsilon()),Yk}function gn(){return"channelsLast"}function fl(r,e){return te(r,e)}function gu(r,e=-1){let t=r.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),_(r,t)}function qP(r,e){return z(()=>{if(r.shape.length!==2)throw new O(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let t=gu(r,1);return py(t,[1,e,1])})}function jP(r){let e=[Os(r.shape)];return _(r,e)}function XP(r){if(r.rank<=1)throw new O(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let e=[r.shape[0],Os(r.shape,1)];return _(r,e)}function hu(r,e,t){return z(()=>{switch(r.rank){case 1:return Yd(r,e,t);case 2:return zb(r,[e,0],[t,r.shape[1]]);case 3:return Qd(r,[e,0,0],[t,r.shape[1],r.shape[2]]);case 4:return Ym(r,[e,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3]]);case 5:return ze(r,[e,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return ze(r,[e,0,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new O(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Qk(r,e,t){return z(()=>{switch(r.rank){case 1:return Yd(r,e,t);case 2:return zb(r,[0,e],[r.shape[0],t]);case 3:return Qd(r,[0,0,e],[r.shape[0],r.shape[1],t]);case 4:return Ym(r,[0,0,0,e],[r.shape[0],r.shape[1],r.shape[2],t]);default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function af(r,e,t,n){return z(()=>{switch(r.rank){case 1:return Yd(r,e,t);case 2:switch(n){case 1:return hu(r,e,t);case 2:return Qk(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return hu(r,e,t);case 2:return Qd(r,[0,e,0],[r.shape[0],t,r.shape[2]]);case 3:return Qk(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return hu(r,e,t);case 2:return Ym(r,[0,e,0,0],[r.shape[0],t,r.shape[2],r.shape[3]]);case 3:return Ym(r,[0,0,e,0],[r.shape[0],r.shape[1],t,r.shape[3]]);case 4:return Qk(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function ec(r,e=-1){let t;return e<0&&(t=r[0].rank,t!==0?e=t:e=0),e===r[0].rank&&(e=-1),pt(r,e)}function Jk(r,e){switch(r.rank){case 1:return tk([r,e]);case 2:return rk([r,e],0);case 3:return nk([r,e],0);case 4:return ok([r,e],0);default:throw new O(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function py(r,e){if(Array.isArray(e)||(e=[e]),r.rank!==e.length)throw new O(`The length of input n (${e.length}) does not match the number of dimensions in input x (${r.rank})`);return Gr(r,e)}function tc(r,e=0,t=1,n,o){return Ob(r,e,t,n,o)}function zs(r,e,t,n){if(r.rank<2||e.rank<2)throw new Pe(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${e.shape}`);if(e.rank>=3){let o=r.shape.slice(-1)[0],s=e.shape.slice(-2)[0];if(o!==s)throw new Pe(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${e.shape}`)}if(r.rank===2&&e.rank===2)return Es.matMul({a:r,b:e,transposeA:!1,transposeB:!1,bias:n?Zk(r.rank,n,gn()):null,activation:t});{let o=r.shape.slice(),s=o.pop();r=_(r,[-1,s]);let a=e.shape.slice(),i=a.pop(),p=a.pop(),u=[...a,i],l=Array.from({length:e.rank},(f,h)=>h===0?e.rank-2:h<=e.rank-2?h-1:h);e=_(Ge(e,l),[p,-1]);let m=[...o,...u],c=!1,d=!1;return _(Es.matMul({a:r,b:e,transposeA:c,transposeB:d,bias:n?Zk(r.rank,n,gn()):null,activation:t}),m)}}function ly(r,e,t){return z(()=>(Array.isArray(e)?e=Ot(e,"int32"):e=te(e,"int32"),mi(r,e,t)))}function hl(r){return L(r,r)}function Zk(r,e,t){let n=e.shape;if(e.rank!==1&&e.rank!==r)throw new O(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${r}`);if(r===5){if(t==="channelsFirst")return n.length===1?_(e,[1,n[0],1,1,1]):_(e,[1,n[3],n[0],n[1],n[2]]);if(t==="channelsLast")return n.length===1?_(e,[1,1,1,1,n[0]]):_(e,[1].concat(n))}else if(r===4){if(t==="channelsFirst")return n.length===1?_(e,[1,n[0],1,1]):_(e,[1,n[2],n[0],n[1]]);if(t==="channelsLast")return n.length===1?_(e,[1,1,1,n[0]]):_(e,[1].concat(n))}else if(r===3){if(t==="channelsFirst")return n.length===1?_(e,[1,n[0],1]):_(e,[1,n[1],n[0]]);if(t==="channelsLast")return n.length===1?_(e,[1,1,n[0]]):_(e,[1].concat(n))}else if(r<3)return e;throw new O(`Unsupported input rank by biasAdd: ${e.rank}`)}function bn(r,e,t){return z(()=>(t==null&&(t=gn()),Wt(t),Q(r,Zk(r.rank,e,t))))}function YP(r,e=1){if(e!==1)throw new Pe(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return uu(r)}function QP(r){return z(()=>me(r,Q($t(r),1)))}function my(r,e,t,n){return z(()=>K1(r,e,t,n))}function ZP(r){return z(()=>{let e=Q(.5,L(.2,r));return Rr(e,0,1)})}function np(r,e,t=!1){return t?r():e()}var JP=["fanIn","fanOut","fanAvg"],eM=["normal","uniform","truncatedNormal"];function PZ(r){bi(JP,"FanMode",r)}function MZ(r){bi(eM,"Distribution",r)}var En=class extends ne.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},uf=class extends En{apply(e,t){return bt(e,t)}};uf.className="Zeros";ne.registerClass(uf);var gl=class extends En{apply(e,t){return lr(e,t)}};gl.className="Ones";ne.registerClass(gl);var pf=class extends En{constructor(e){super();if(typeof e!="object")throw new O(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new O(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return z(()=>L(ce(this.value),lr(e,t)))}getConfig(){return{value:this.value}}};pf.className="Constant";ne.registerClass(pf);var lf=class extends En{constructor(e){super();this.DEFAULT_MINVAL=-.05;this.DEFAULT_MAXVAL=.05;this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return La(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};lf.className="RandomUniform";ne.registerClass(lf);var mf=class extends En{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Pe(`randomNormal does not support dType ${t}.`);return tc(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};mf.className="RandomNormal";ne.registerClass(mf);var cf=class extends En{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Pe(`truncatedNormal does not support dType ${t}.`);return tl(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};cf.className="TruncatedNormal";ne.registerClass(cf);var df=class extends En{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return z(()=>{if(e.length!==2||e[0]!==e[1])throw new O("Identity matrix initializer can only be used for 2D square matrices.");return L(this.gain,Hm(e[0]))})}getConfig(){return{gain:this.gain}}};df.className="Identity";ne.registerClass(df);function FZ(r,e="channelsLast"){let t,n;if(Wt(e),r.length===2)t=r[0],n=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(e==="channelsFirst"){let o=Os(r,2);t=r[1]*o,n=r[0]*o}else if(e==="channelsLast"){let o=Os(r,0,r.length-2);t=r[r.length-2]*o,n=r[r.length-1]*o}}else{let o=Os(r);t=Math.sqrt(o),n=Math.sqrt(o)}return[t,n]}var en=class extends En{constructor(e){super();if(e.scale<0)throw new O(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,PZ(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,MZ(this.distribution),this.seed=e.seed}apply(e,t){let n=FZ(e),o=n[0],s=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,o):this.mode==="fanOut"?a/=Math.max(1,s):a/=Math.max(1,(o+s)/2),this.distribution==="normal"){let i=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Pe(`${this.getClassName()} does not support dType ${t}.`);return tl(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*a);return La(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};en.className="VarianceScaling";ne.registerClass(en);var rc=class extends en{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return en.className}};rc.className="GlorotUniform";ne.registerClass(rc);var nc=class extends en{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return en.className}};nc.className="GlorotNormal";ne.registerClass(nc);var oc=class extends en{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return en.className}};oc.className="HeNormal";ne.registerClass(oc);var sc=class extends en{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return en.className}};sc.className="HeUniform";ne.registerClass(sc);var ac=class extends en{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return en.className}};ac.className="LeCunNormal";ne.registerClass(ac);var ic=class extends en{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return en.className}};ic.className="LeCunNormal";ne.registerClass(ic);var ff=class extends En{constructor(e){super();this.DEFAULT_GAIN=1;if(this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Pe("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return z(()=>{if(e.length<2)throw new Pe("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,o=tc(n,0,1,"float32"),s=FP.gramSchmidt(o);return e[0]>e[1]&&(s=Ge(s)),L(this.gain,s)})}getConfig(){return{gain:this.gain,seed:this.seed}}};ff.className="Orthogonal";ne.registerClass(ff);var tM={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function rM(r,e={}){return gi(r,ne.SerializationMap.getMap().classNameMap,e,"initializer")}function Dt(r){return Zm(r)}function xt(r){if(typeof r=="string"){let e=r in tM?tM[r]:r;if(e==="GlorotNormal")return new nc;if(e==="GlorotUniform")return new rc;if(e==="HeNormal")return new oc;if(e==="HeUniform")return new sc;if(e==="LeCunNormal")return new ac;if(e==="LeCunUniform")return new ic;{let t={};return t.className=e,t.config={},rM(t)}}else return r instanceof En?r:rM(r)}function cy(r){return Array.isArray(r)&&Array.isArray(r[0])}function uc(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function Oe(r){let e;if(Array.isArray(r)){if(r.length!==1)throw new O(`Expected Tensor length to be 1; got ${r.length}`);e=r[0]}else e=r;return e}function tt(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new O(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function pc(r){let e=0;for(let t of r)t.shape.length===0?e+=1:e+=t.shape.reduce((n,o)=>n*o);return e}var oM="Variable",dy=class{constructor(e,t="float32",n=oM,o=!0,s=null){this.dtype=t??"float32",this.shape=e.shape,this.id=sy(),n=n??oM,this.originalName=ay(n),this.name=iy(this.originalName),this.trainable_=o,this.constraint=s,this.val=Gk(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),RZ(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function RZ(r,e){if(r.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(e.shape))}function hf(r){return r.map(e=>e.read())}function lc(r){r.forEach(e=>{e[0].write(e[1])})}var Pt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Tn=class{constructor(e,t,n,o,s,a,i){this.dtype=e;this.shape=t;this.sourceLayer=n;this.inputs=o;this.callArgs=s;this.outputTensorIndex=i;this.id=sy(),a!=null&&(this.originalName=ay(a),this.name=iy(this.originalName)),this.rank=t.length}},LZ=0,op=class{constructor(e,t){this.callArgs=t;this.id=LZ++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},_Z=0,Ke=class extends ne.Serializable{constructor(e={}){super();this._callHook=null;this._addedWeightNames=[];this._stateful=!1;this.id=_Z++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=$s(n)+"_"+rp(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let s=null;e.batchSize!=null&&(s=e.batchSize),n=[s].concat(e.inputShape)}this.batchInputShape=n;let o=e.dtype;o==null&&(o=e.inputDType),o==null&&(o="float32"),this.dtype=o}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Zr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new O(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Pr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Pr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Xn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Xn(`Layer ${this.name} is not connected, no input to return.`);return Pr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Xn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Xn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Pr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=kt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=kt(this.inputSpec);if(e.length!==t.length)throw new O(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let o=e[n],s=t[n];if(s==null)continue;let a=o.rank;if(s.ndim!=null&&a!==s.ndim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(s.maxNDim!=null&&a>s.maxNDim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(s.minNDim!=null&&a<s.minNDim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(s.dtype!=null&&o.dtype!==s.dtype)throw new O(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${o.dtype}.`);if(s.axes){let i=o.shape;for(let p in s.axes){let u=Number(p),l=s.axes[p],m=u>=0?i[u]:i[i.length+u];if(l!=null&&[l,null].indexOf(m)===-1)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${l} but got shape ${i}.`)}}if(s.shape!=null)for(let i=0;i<s.shape.length;++i){let p=s.shape[i],u=o.shape[i];if(p!=null&&u!=null&&p!==u)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=kt(e),o=!0;for(let a of n)if(!(a instanceof Tn)){o=!1;break}let s=!0;for(let a of n)if(a instanceof Tn){s=!1;break}if(o===s)throw new O("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ba(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let i of kt(e))a.push(i.shape);this.build(Pr(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let a=this.call(e,t),i=kt(a),p=[];for(let u of i)n.indexOf(u)!==-1&&(u=u.clone()),p.push(u);if(a=Pr(p),this.activityRegularizer!=null)throw new Pe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=$Z(e),i=this.computeOutputShape(a),p,u=BZ(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?p=i.map((l,m)=>new Tn(u,l,this,kt(e),t,this.name,m)):p=new Tn(u,i,this,kt(e),t,this.name),this.addInboundNode(e,p,null,null,a,i,t),this._refCount++,this.activityRegularizer!=null)throw new Pe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return p}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,o)=>{n!=null&&e[o]!=null&&e[o]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Xn(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Xn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Zr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return pc(this.weights)}build(e){this.built=!0}getWeights(e=!1){return hf(e?this.trainableWeights:this.weights)}setWeights(e){z(()=>{let t=this.weights;if(t.length!==e.length)throw new O(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],o=hf(t);for(let s=0;s<o.length;++s){let a=o[s],i=t[s],p=e[s];if(!b.arraysEqual(a.shape,p.shape))throw new O(`Layer weight shape ${a.shape} not compatible with provided weight shape ${p.shape}`);n.push([i,p])}lc(n)})}addWeight(e,t,n,o,s,a,i,p){if(this._addedWeightNames.indexOf(e)!==-1)throw new O(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(o=p!=null?p():xt("zeros"));let u=o.apply(t,n),l=new dy(u,n,e,a,i);return u.dispose(),s!=null&&this.addLoss(()=>s.apply(l.read())),a==null&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=kt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,o,s,a,i=null){let p=kt(e);t=kt(t),n=kt(n),o=kt(o),s=uc(s),a=uc(a);let u=[],l=[],m=[];for(let c of p)u.push(c.sourceLayer),l.push(c.nodeIndex),m.push(c.tensorIndex);new op({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:m,inputTensors:p,outputTensors:t,inputMasks:n,outputMasks:o,inputShapes:s,outputShapes:a},i);for(let c=0;c<t.length;c++)t[c].sourceLayer=this,t[c].nodeIndex=this.inboundNodes.length-1,t[c].tensorIndex=c}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function $Z(r){r=kt(r);let e=[];for(let t of r)e.push(t.shape);return Pr(e)}function BZ(r){return"float32"}function eS(r,e,t){if((e==null||t!=null&&t>0)&&(e=r.sourceLayer,t=r.nodeIndex),e.inboundNodes.length===0)return[r];{let n=e.inboundNodes[t];if(n.inboundLayers.length===0)return n.inputTensors;{let o=[];for(let s=0;s<n.inboundLayers.length;s++){let a=n.inputTensors[s],i=n.inboundLayers[s],p=n.nodeIndices[s],u=eS(a,i,p);for(let l of u)o.indexOf(l)===-1&&o.push(l)}return o}}}var yi=class extends Ke{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:rp("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new O("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new O("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new O("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let o=new Tn(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new op({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new O(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};yi.className="InputLayer";ne.registerClass(yi);function fy(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new O("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=r.batchShape;r.shape!=null&&e==null&&(e=[null].concat(r.shape));let t=r.dtype;return t==null&&(t="float32"),new yi({batchInputShape:e,name:r.name,dtype:t,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}function OZ(r,e){if(r.dtype==null||r.dtype===e.dtype)return e;try{return te(e,r.dtype)}catch{throw new O(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var za=class{constructor(e){this.id2Value={};this.id2Mask={};this.name2Id={};if(e instanceof za)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=OZ(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new O(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Tn){if(this.id2Value[e.id]==null)throw new O(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new O(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Tn){if(this.id2Value[e.id]==null)throw new O(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new O(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Me(this.id2Mask)}},hy=new ty,gy=new ty;function aM(r){hy?.setMaxEntries(r),gy?.setMaxEntries(r)}function bl(r,e,t,n){let o=t==null?!1:t.training,s=Array.isArray(r),a=s?r:[r],i=a.map(f=>f.name),p=[],u=e.names();for(let f of i)u.indexOf(f)!==-1?p.push(e.getValue(f)):p.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);let l=i.join(",")+"|"+e.names().join(","),m=hy.get(l),c;if(m==null){let f=zZ(a,e);m=f.sorted,c=f.recipientCounts,hy.put(l,m),gy.put(l,c)}c={},o||Object.assign(c,gy.get(l));let d=new za(e);for(let f=0;f<m.length;++f){if(n!=null){let E=wd().numTensors;E>n.maxNumTensors&&(n.maxNumTensors=E),E<n.minNumTensors&&(n.minNumTensors=E)}let h=m[f],g=h.sourceLayer;if(g instanceof yi)continue;let y=[],T=[],x=[],I=!1;for(let E of h.inputs){let $=d.getValue(E),U=d.getMask(E);y.push($),T.push(U),U!=null&&(I=!0),o||(c[E.name]--,c[E.name]===0&&!e.hasKey(E)&&i.indexOf(E.name)===-1&&!$.isDisposed&&E.sourceLayer.stateful!==!0&&x.push($))}I&&(t=t||{},t.mask=T[0]);let k=kt(g.apply(y,t)),N=null;g.supportsMasking&&(N=g.computeMask(y,T));let P=UZ(h),F=Array.isArray(P)?P:[P];for(let E=0;E<F.length;++E){d.hasKey(F[E])||d.add(F[E],k[E],Array.isArray(N)?N[0]:N);let $=i.indexOf(F[E].name);$!==-1&&(p[$]=k[E])}o||Me(x)}return d.disposeMasks(),s?p:p[0]}function zZ(r,e){b.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let t=[],n={};if(r.length===1){let o=sM(r[0],e);t=o.sorted,n=o.recipientMap}else{let o=new Set;for(let s of r){let{sorted:a,recipientMap:i}=sM(s,e);for(let p of a)o.has(p.name)||(t.push(p),o.add(p.name));for(let p in i)n[p]==null&&(n[p]=new Set),i[p].forEach(u=>n[p].add(u))}}return{sorted:t,recipientCounts:GZ(n)}}function GZ(r){let e={};for(let t in r)e[t]=r[t].size;return e}function sM(r,e){let t=new Set,n=[],o={};for(let i of e.names())t.add(i);let s=[],a=[];for(s.push(r);s.length>0;){let i=s[s.length-1];if(t.has(i.name)){s.pop();continue}let p=a[a.length-1]===s.length-1;if(i.inputs.length===0||p)s.pop(),n.push(i),t.add(i.name),p&&a.pop();else{a.push(s.length-1);for(let u of i.inputs)o[u.name]==null&&(o[u.name]=new Set),o[u.name].add(i.name),!t.has(u.name)&&s.push(u)}}return{sorted:n,recipientMap:o}}function UZ(r){let e;if(r.sourceLayer.inboundNodes.length===1)e=r.sourceLayer.output;else{let t=null;for(let n=0;n<r.sourceLayer.inboundNodes.length;++n)for(let o of r.sourceLayer.inboundNodes[n].outputTensors)if(o.id===r.id){t=n;break}e=r.sourceLayer.getOutputAt(t)}return e}var WZ=B();WZ.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,aM);var by={kernelName:us,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,cu(te(t,"float32"),-1))}}};var iM={kernelName:Di,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=je(te(t,"float32")),o=Lt(pe(ce(1),n));return et(me(r,o))}}}};var uM={kernelName:Pi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Lt(pe(je(te(t,"float32")),1));return me(r,n)}}}};var pM={kernelName:wn,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ue(t.shape,n.shape);return{a:()=>{let i=r,p=Ct(t.shape,o);return p.length>0&&(i=fe(i,p)),_(i,t.shape)},b:()=>{let i=r,p=Ct(n.shape,o);return p.length>0&&(i=fe(i,p)),_(i,n.shape)}}}};var lM={kernelName:oo,saveAllInputs:!0,gradFunc:(r,e)=>{let t={};return e.forEach((n,o)=>{t[o]=()=>r.clone()}),t}};var mM={kernelName:so,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Ne(t)}}};var cM={kernelName:ni,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Ne(t)}}};var dM={kernelName:Ei,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,Lt(pe(ce(1),je(te(t,"float32")))))}}};var fM={kernelName:Ri,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Lt(Q(ce(1),je(te(t,"float32"))));return me(r,n)}}}};var hM={kernelName:$i,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ue(t.shape,n.shape);return{a:()=>{let i=Q(je(t),je(n)),p=L(r,me(n,i)),u=Ct(t.shape,o);return u.length>0&&(p=fe(p,u)),_(p,t.shape)},b:()=>{let i=Q(je(t),je(n)),p=et(L(r,me(t,i))),u=Ct(n.shape,o);return u.length>0&&(p=fe(p,u)),_(p,n.shape)}}}};var gM={kernelName:Li,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,Q(je(te(t,"float32")),1))}}};var bM={kernelName:_i,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,pe(ce(1),je(te(t,"float32"))))}}};function KZ(r,e,t,n,o,s){let a=S(r,"dy","avgPool3dGrad"),i=S(e,"input","avgPool3dGrad"),p=a,u=i,l=!1;i.rank===4&&(l=!0,p=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=_(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),M(p.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),M(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),Nt("avgPool3dGrad",o,s);let m={dy:p,input:u},c={filterSize:t,strides:n,pad:o,dimRoundingMode:s},d=D.runKernel(um,m,c);return l?_(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var yM=A({avgPool3dGrad_:KZ});var TM={kernelName:Fu,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:a,dimRoundingMode:i}=t;return{x:()=>yM(r,n,o,s,a,i)}}};function VZ(r,e,t,n,o){let s=S(r,"dy","avgPoolGrad"),a=S(e,"input","avgPoolGrad");M(a.rank===s.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${s.rank})`);let i=a,p=s,u=!1;a.rank===3&&(u=!0,i=_(a,[1,a.shape[0],a.shape[1],a.shape[2]]),p=_(s,[1,s.shape[0],s.shape[1],s.shape[2]])),M(p.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${p.rank}.`),M(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let l={dy:p,input:i},m={filterSize:t,strides:n,pad:o},c=D.runKernel(im,l,m);return u?_(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var xM=A({avgPoolGrad_:VZ});var IM={kernelName:ao,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:a}=t;return{x:()=>xM(r,n,o,s,a)}}};var CM={kernelName:io,inputsToSave:["a","b"],gradFunc:(r,e,t)=>{let[n,o]=e,{transposeA:s,transposeB:a}=t;return!s&&!a?{a:()=>He(r,o,!1,!0),b:()=>He(n,r,!0,!1)}:!s&&a?{a:()=>He(r,o,!1,!1),b:()=>He(r,n,!0,!1)}:s&&!a?{a:()=>He(o,r,!1,!0),b:()=>He(n,r,!1,!1)}:{a:()=>He(o,r,!0,!0),b:()=>He(r,n,!0,!0)}}};var kM={kernelName:ps,gradFunc:(r,e,t)=>{let{blockShape:n,crops:o}=t;return{x:()=>Xp(r,n,o)}}};var SM={kernelName:O0,gradFunc:(r,e,t)=>{let n=t,o=n.inputShape,s=n.shape,a=Array.from(s);for(let p=o.length-1;p>=0;p--)if(o[p]===s[p])a[p]=1;else if(o[p]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);let i=[];for(let p=0;p<a.length;p++)a[p]>1&&i.push(p);return{x:()=>fe(r,i,!0)}}};var vM={kernelName:zn,gradFunc:r=>({x:()=>r.clone()})};var AM={kernelName:uo,gradFunc:r=>({x:()=>Ne(r)})};var wM={kernelName:Gn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{clipValueMin:o,clipValueMax:s}=t;return{x:()=>Bt(Ur(Zo(n,o),Jo(n,s)),r,Ne(r))}}};var NM={kernelName:Ru,inputsToSave:["x"],gradFunc:by.gradFunc};var DM={kernelName:ls,saveAllInputs:!0,gradFunc:(r,e,t)=>{let n=e.map(p=>p.shape),{axis:o}=t,s=hr(o,e[0].shape)[0],a=n.map(p=>p[s]);return kr(r,a,s).map(p=>()=>p)}};var PM={kernelName:po,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{dilations:s,strides:a,pad:i,dataFormat:p}=t;return M(Yo(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Km(n.shape,r,o,a,i,p),filter:()=>Qm(n,r,o.shape,a,i,p)}}};var MM={kernelName:lo,inputsToSave:["dy","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{strides:s,pad:a,dataFormat:i,dimRoundingMode:p}=t;return{dy:()=>qn(r,o,s,a,i,1,p),filter:()=>Qm(r,n,o.shape,s,a,i,p)}}};function HZ(r,e,t,n,o){let s=r;r.rank===4&&(s=_(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let a=e;a.rank===4&&(a=_(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),M(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),M(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),M(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),M(s.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${t[3]}.`),M(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);let i={x:s,dy:a},p={strides:n,pad:o,filterShape:t};return D.runKernel(cm,i,p)}var FM=A({conv3DBackpropFilter_:HZ});var EM={kernelName:Lu,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s}=t;M(Yo(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[a,i]=e;return{x:()=>Rb(a.shape,r,i,o,s),filter:()=>FM(a,r,i.shape,o,s)}}};var RM={kernelName:mo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(et(jd(te(t,"float32"))),r)}}};var LM={kernelName:co,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(Xd(te(t,"float32")),r)}}};var _M={kernelName:fo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o,exclusive:s,reverse:a}=t;return{x:()=>{let i=yk([o],n.rank),p=_d(r,o,s,!a);return i!=null&&(p=Ge(p,i)),p}}}};var $M={kernelName:ho,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s,dimRoundingMode:a}=t,i=n??[1,1];M(Yo(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[p,u]=e;return M(p.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${p.rank}.`),M(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),M(p.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),M(Er(o,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${i}'.`),Nt("depthwiseConv2d",s,a),{x:()=>qb(p.shape,r,u,o,s,i,a),filter:()=>Hb(p,r,u.shape,o,s,i,a)}}};var BM={kernelName:_u,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,s={x:n,filter:o,dy:r},a={x:n,filter:o,dy:r};return{x:()=>D.runKernel(hd,s,t),filter:()=>D.runKernel(gd,a,t)}}};var OM={kernelName:bo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e,n={dy:r,y:t};return{x:()=>D.runKernel(ym,n)}}};var zM={kernelName:Bi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=L(pr(et(je(t))),2/Math.sqrt(Math.PI));return{x:()=>L(r,n)}}};var GM={kernelName:yo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,t)}}};var UM={kernelName:ms,inputsToSave:["input"],gradFunc:(r,e)=>{let[t]=e;return{input:()=>_(r,t.shape)}}};var WM={kernelName:ca,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,pr(t))}}};var KM={kernelName:To,gradFunc:r=>({x:()=>Ne(r)})};var VM={kernelName:xo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ue(t.shape,n.shape);return{a:()=>{let i=me(r,te(n,"float32")),p=Ct(t.shape,o);return p.length>0?_(fe(i,p),t.shape):i},b:()=>{let i=L(r,te(t,"float32")),p=Ct(n.shape,o);p.length>0&&(i=_(fe(i,p),n.shape));let u=je(n);return et(me(i,te(u,"float32")))}}}};var HM={kernelName:Io,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,e,t)=>{let{varianceEpsilon:n}=t,[o,s,a,i]=e,p=i??ce(1),u=Ct(s.shape,o.shape),l=[];if(s.rank===1){for(let I=0;I<o.shape.length-1;++I)l.push(o.shape[I]);l.push(1)}let m=pe(o,s),c=L(r,p),d=Hd(Q(a,ce(n))),f=L(L(L(d,d),d),ce(-.5));return{x:()=>s.rank===1?_(L(L(r,Gr(_(d,[1,1,1,s.shape[0]]),l)),p),o.shape):_(L(L(r,d),p),o.shape),mean:()=>{let I=L(L(d,ce(-1)),c);return s.rank===1&&(I=fe(I,u)),_(I,s.shape)},variance:()=>{let I=L(L(f,m),c);return s.rank===1&&(I=fe(I,u)),_(I,s.shape)},scale:()=>{let I=L(m,d),k=L(r,I);return s.rank===1&&(k=fe(k,u)),_(k,s.shape)},offset:()=>{let I=r;return s.rank===1&&(I=fe(I,u)),_(I,s.shape)}}}};var XM={kernelName:cs,inputsToSave:["x","indices"],gradFunc:(r,e,t)=>{let[n,o]=e,{axis:s}=t,a=hr(s,n.shape)[0];return{x:()=>{let p=n.shape,u=o.size,l=p.slice(0,a),m=l.length,c=p.slice(s,p.length).slice(1),d=c.length,f=qM(0,m),h=qM(m+1,m+1+d),g=jM([l,[u],c]),y=_(r,g),T=_(o,[u]),x=jM([[m],f,h]),I=Ge(y,x),k=zk(I,T,n.shape[a]),N=Od(x);return k=Ge(k,N),k},indices:()=>o}}};function qM(r,e){let t=[];for(let n=r;n<e;++n)t.push(n);return t}function jM(r){let e=[];for(let t=0;t<r.length;++t)for(let n=0;n<r[t].length;++n)e.push(r[t][n]);return e}var YM={kernelName:Co,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>Ne(t),b:()=>Ne(n)}}};var QM={kernelName:Un,gradFunc:r=>({x:()=>te(r,"float32")})};var ZM={kernelName:Oi,gradFunc:r=>({x:()=>Ne(r)})};var JM={kernelName:zi,gradFunc:r=>({x:()=>Ne(r)})};var eF={kernelName:Gi,gradFunc:r=>({x:()=>Ne(r)})};var tF={kernelName:ko,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{alpha:o}=t,s=rr(n,0);return{x:()=>Bt(s,r,L(r,o))}}};var rF={kernelName:Ui,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,Q(t,1))}}};var nF={kernelName:So,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,te(t,"float32"))}}};var oF={kernelName:z0,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t;return{logits:()=>{let a=pr(n);return pe(r,L(fe(r,o,!0),a))}}}};function qZ(r,e,t,n=5,o=1,s=1,a=.5){let i={x:r,y:e,dy:t},p={depthRadius:n,bias:o,alpha:s,beta:a};return D.runKernel(Cm,i,p)}var sF=A({localResponseNormalizationBackprop_:qZ});var aF={kernelName:Ou,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{depthRadius:s,bias:a,alpha:i,beta:p}=t;return{x:()=>sF(n,o,r,s,a,i,p)}}};function yy(r,e,t,n){return e.rank<t.rank&&(e=_(e,Fs(e.shape,n))),r.rank<t.rank&&(r=_(r,Fs(r.shape,n))),{x:()=>L(r,te(zr(t,e),r.dtype))}}var tS={kernelName:vo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{reductionIndices:o}=n,s=e[0],a=e[1],i=hr(o,s.shape),p=yy(r,a,s,i);return{x:()=>p.x()}}};var iF={kernelName:Ao,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>L(r,te(Zo(t,n),"float32")),b:()=>L(r,te($d(t,n),"float32"))}}};function jZ(r,e,t,n,o,s,a){let i=S(r,"dy","maxPool3dGrad"),p=S(e,"input","maxPool3dGrad"),u=S(t,"output","maxPool3dGrad"),l=i,m=p,c=u,d=!1;p.rank===4&&(d=!0,l=_(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),m=_(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]]),c=_(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),M(l.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),M(m.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${m.rank}.`),M(c.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${c.rank}.`),Nt("maxPool3dGrad",s,a);let f={dy:l,input:m,output:c},h={filterSize:n,strides:o,pad:s,dimRoundingMode:a},g=D.runKernel(Sm,f,h);return d?_(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var uF=A({maxPool3dGrad_:jZ});var pF={kernelName:zu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=t;return{x:()=>uF(r,n,o,s,a,i,p)}}};function XZ(r,e,t,n,o,s,a){let i=S(r,"dy","maxPoolGrad"),p=S(e,"input","maxPoolGrad"),u=S(t,"output","maxPoolGrad");M(p.rank===i.rank,()=>`Rank of input (${p.rank}) does not match rank of dy (${i.rank})`),M(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),M(p.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${p.rank}.`),Nt("maxPoolGrad",s,a);let l={dy:i,input:p,output:u},m={filterSize:n,strides:o,pad:s,dimRoundingMode:a};return D.runKernel(km,l,m)}var lF=A({maxPoolGrad_:XZ});var mF={kernelName:wo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:a,pad:i}=t;return{x:()=>lF(r,n,o,s,a,i)}}};var cF={kernelName:No,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t,s=hr(o,n.shape),i=bk(n.shape,s)[1],p=st(i);return{x:()=>{let l=n.shape.slice();s.forEach(d=>{l[d]=1});let m=_(r,l);return me(L(m,lr(n.shape,"float32")),p)}}}};var dF={kernelName:Do,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{axis:o}=n,[s,a]=e,i=hr(o,s.shape),p=yy(r,a,s,i);return{x:()=>p.x()}}};var fF={kernelName:Po,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>L(r,te(Jo(t,n),"float32")),b:()=>L(r,te(rr(t,n),"float32"))}}};var hF={kernelName:Mo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(a=>a[0]);return{x:()=>ze(r,s,n.shape)}}};var gF={kernelName:Ki,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ue(t.shape,n.shape);return{a:()=>{let i=Ct(t.shape,o);return i.length>0?_(fe(r,i),t.shape):r},b:()=>{let i=L(r,et(pu(me(t,n)))),p=Ct(n.shape,o);return p.length>0?_(fe(i,p),n.shape):i}}}};var bF={kernelName:Fo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ue(t.shape,n.shape);return{a:()=>{let i=L(r,te(n,"float32")),p=Ct(t.shape,o);return p.length>0?_(fe(i,p),t.shape):i},b:()=>{let i=L(r,te(t,"float32")),p=Ct(n.shape,o);return p.length>0?_(fe(i,p),n.shape):i}}}};var yF={kernelName:ds,gradFunc:r=>({x:()=>et(r)})};var TF={kernelName:Ca,inputsToSave:["indices"],gradFunc:(r,e)=>{let t=e[0];return{indices:()=>bt(t.shape,"float32")}}};var xF={kernelName:fs,gradFunc:r=>({x:()=>Ne(r)})};var IF={kernelName:hs,saveAllInputs:!0,gradFunc:(r,e,t)=>{let{axis:n}=t;return _r(r,n).map(s=>()=>s)}};var rS={kernelName:Eo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(a=>a[0]);return{x:()=>ze(r,s,n.shape)}}};var CF={kernelName:Ro,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,e)=>{let[t,n,o]=e,s=t,a=n,i=Ue(s.shape,a.shape);return{a:()=>{let l=te(a,"float32"),m=L(r,L(l,Fn(s,pe(l,ce(1))))),c=Ct(s.shape,i);return c.length>0&&(m=fe(m,c)),_(m,s.shape)},b:()=>{let l=rr(s,0),m=Bt(l,Lr(s),Ne(s)),c=L(r,L(o,m)),d=Ct(a.shape,i);return d.length>0&&(c=fe(c,d)),_(c,a.shape)}}}};var kF={kernelName:Lo,inputsToSave:["x","alpha"],gradFunc:(r,e)=>{let[t,n]=e,o=rr(t,0);return{x:()=>Bt(o,r,L(r,n)),alpha:()=>{let s=Bt(o,Ne(r),L(r,t)),a=Ct(n.shape,r.shape);return a.length>0&&(s=fe(s,a)),_(s,n.shape)}}}};function YZ(r,e,t){let n=r.shape.slice();n[t]=1;let o=_(e,n),s=Vm(r,t,!0,!1),a=Vm(r,t,!0,!0),i=L(s,a);return L(o,i)}function QZ(r,e,t){let n=r.shape.length,o=n-t.length,s=C.getAxesPermutation(t,n),a=r;s!=null&&(a=Ge(r,s));let i=a.shape.slice(),u=i.splice(n-t.length,t.length).reduce((c,d)=>c*d,1);i.push(u);let l=a.reshape(i),m=YZ(l,e,o);if(m=m.reshape(a.shape),s!=null){let c=C.getUndoAxesPermutation(s);m=Ge(m,c)}return m}var SF={kernelName:_o,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t,s=[];return o==null?s=n.shape.map((a,i)=>i):typeof o=="number"?s=[o]:s=o,{x:()=>QZ(n,r,s)}}};var vF={kernelName:go,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ue(t.shape,n.shape);return{a:()=>{let i=me(r,te(n,"float32")),p=Ct(t.shape,o);return p.length>0?_(fe(i,p),t.shape):i},b:()=>{let i=L(r,te(t,"float32")),p=Ct(n.shape,o);p.length>0&&(i=_(fe(i,p),n.shape));let u=je(n);return et(me(i,te(u,"float32")))}}}};var AF={kernelName:Hi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,et(je(t)))}}};var wF={kernelName:Oo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=L(Jo(t,6),cu(t));return{x:()=>L(r,te(n,"float32"))}}};var NF={kernelName:$o,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,te(cu(t),"float32"))}}};var DF={kernelName:gs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>_(r,t.shape)}}};var PF={kernelName:Bo,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>D.runKernel(Nm,o,t)}}};var MF={kernelName:ai,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>D.runKernel(wm,o,t)}}};var FF={kernelName:ka,gradFunc:(r,e,t)=>{let{dims:n}=t,o=hr(n,r.shape);return{x:()=>gr(r,o)}}};var EF={kernelName:Sa,gradFunc:r=>({x:()=>Ne(r)})};var RF={kernelName:zo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>et(me(r,L(Fn(t,1.5),2)))}}};var LF={kernelName:bs,inputsToSave:["condition"],gradFunc:(r,e)=>{let[t]=e;return{condition:()=>te(Ne(t),"float32"),t:()=>L(r,te(t,r.dtype)),e:()=>L(r,te(qp(t),r.dtype))}}};var _F={kernelName:qi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=rr(t,ce(0)),o=ce(Wk),s=ce(Kk),a=L(r,s),i=L(L(r,o),pr(te(t,"float32")));return Bt(n,a,i)}}}};var $F={kernelName:Uo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,L(t,pe(ce(1),t)))}}};var BF={kernelName:ji,gradFunc:r=>({x:()=>Ne(r)})};var OF={kernelName:Go,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(Wp(te(t,"float32")),r)}}};var zF={kernelName:Aa,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(Ld(te(t,"float32")),r)}}};var GF={kernelName:ys,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{begin:o,size:s}=t,a=n.shape,[i,p]=RC(n,o,s),u=[];for(let l=0;l<r.rank;l++)u.push([i[l],a[l]-i[l]-p[l]]);return{x:()=>Mn(r,u)}}};var UF={kernelName:Vo,outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{dim:o}=t,s=!0,a=L(r,n);return{logits:()=>pe(a,L(fe(a,[o],s),n))}}};var WF={kernelName:Xi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,mn(t))}}};var nS={kernelName:Ts,gradFunc:(r,e,t)=>{let{blockShape:n,paddings:o}=t;return{x:()=>Gp(r,n,o)}}};var oS={kernelName:xs,gradFunc:(r,e,t)=>{let{axis:n}=t;return{x:()=>pt(r,n)}}};var KF={kernelName:Wo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,L(Lt(te(t,"float32")),2))}}};var VF={kernelName:ii,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,L(te(t,"float32"),2))}}};var HF={kernelName:Ho,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ce(2);return{a:()=>L(r,L(o,pe(t,n))),b:()=>L(r,L(o,pe(n,t)))}}};var qF={kernelName:ks,gradFunc:r=>({x:()=>Ne(r)})};var jF={kernelName:qo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ue(t.shape,n.shape);return{a:()=>{let i=r,p=Ct(t.shape,o);return p.length>0&&(i=fe(i,p)),_(i,t.shape)},b:()=>{let i=r,p=Ct(n.shape,o);return p.length>0&&(i=fe(i,p)),_(et(i),n.shape)}}}};var XF={kernelName:Ko,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,o=n.shape.slice(),{axis:s}=t;hr(s,n.shape).forEach(u=>{o[u]=1});let i=_(r,o),p=L(i,lr(n.shape,"float32"));return{x:()=>p}}};var YF={kernelName:Na,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>me(r,je(Wp(t)))}}};var QF={kernelName:jo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(pe(ce(1),je(t)),r)}}};var ZF={kernelName:Nn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{reps:o}=t;return{x:()=>{let a=Ne(n);if(n.rank===1)for(let i=0;i<o[0];++i)a=Q(a,ze(r,[i*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let i=0;i<o[0];++i)for(let p=0;p<o[1];++p)a=Q(a,ze(r,[i*n.shape[0],p*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let i=0;i<o[0];++i)for(let p=0;p<o[1];++p)for(let u=0;u<o[2];++u)a=Q(a,ze(r,[i*n.shape[0],p*n.shape[1],u*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let i=0;i<o[0];++i)for(let p=0;p<o[1];++p)for(let u=0;u<o[2];++u)for(let l=0;l<o[3];++l)a=Q(a,ze(r,[i*n.shape[0],p*n.shape[1],u*n.shape[2],l*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return a}}}};var JF={kernelName:Xo,gradFunc:(r,e,t)=>{let n=t,{perm:o}=n,s=Od(o);return{x:()=>Ge(r,s)}}};var eE={kernelName:Is,gradFunc:(r,e,t)=>{let n=t,{axis:o}=n;return{value:()=>mr(r,o)}}};var tE={kernelName:qu,inputsToSave:["segmentIds"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>ZZ(r,t)}}};function ZZ(r,e){let t=jn(e,Ne(e)),n=mi(r,t),o=Zo(e,ce(0,"int32")),s=n.rank-o.rank;for(let i=0;i<s;++i)o=Nr(o,i+1);o=Ur(o,lr(n.shape,"bool"));let a=Ne(n);return Bt(o,n,a)}var rE={kernelName:Cs,gradFunc:r=>({x:()=>Ne(r)})};var JZ=[by,iM,uM,pM,lM,mM,cM,dM,fM,hM,gM,bM,TM,IM,CM,kM,SM,vM,AM,wM,NM,DM,MM,PM,EM,RM,LM,_M,$M,BM,vF,OM,zM,GM,UM,WM,VM,KM,HM,XM,YM,QM,ZM,JM,eF,tF,rF,nF,oF,aF,tS,tS,iF,pF,mF,cF,dF,fF,hF,gF,bF,yF,TF,xF,IF,rS,rS,CF,kF,SF,AF,wF,NF,DF,PF,MF,FF,EF,RF,LF,_F,$F,BF,OF,zF,GF,UF,WF,nS,nS,oS,oS,KF,HF,VF,qF,jF,XF,YF,QF,ZF,JF,eE,tE,rE];for(let r of JZ)U0(r);var sE={};Xe(sE,{maxNorm:()=>e7,minMaxNorm:()=>n7,nonNeg:()=>r7,unitNorm:()=>t7});function sS(r,e){return z(()=>Lt(fe(L(r,r),e,!0)))}var mc=class extends ne.Serializable{getConfig(){return{}}},gf=class extends mc{constructor(e){super();this.defaultMaxValue=2;this.defaultAxis=0;this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return z(()=>{let t=sS(e,this.axis),n=Rr(t,0,this.maxValue);return L(e,me(n,Q(cr(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};gf.className="MaxNorm";ne.registerClass(gf);var bf=class extends mc{constructor(e){super();this.defaultAxis=0;this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return z(()=>me(e,Q(cr(),sS(e,this.axis))))}getConfig(){return{axis:this.axis}}};bf.className="UnitNorm";ne.registerClass(bf);var yf=class extends mc{apply(e){return Wr(e)}};yf.className="NonNeg";ne.registerClass(yf);var Tf=class extends mc{constructor(e){super();this.defaultMinValue=0;this.defaultMaxValue=1;this.defaultRate=1;this.defaultAxis=0;this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return z(()=>{let t=sS(e,this.axis),n=Q(L(this.rate,Rr(t,this.minValue,this.maxValue)),L(1-this.rate,t));return L(e,me(n,Q(cr(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Tf.className="MinMaxNorm";ne.registerClass(Tf);var nE={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function qt(r){return Zm(r)}function oE(r,e={}){return gi(r,ne.SerializationMap.getMap().classNameMap,e,"constraint")}function jt(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in nE?nE[r]:r,config:{}};return oE(t)}else return r instanceof mc?r:oE(r)}function e7(r){return new gf(r)}function t7(r){return new bf(r)}function r7(){return new yf}function n7(r){return new Tf(r)}var aE={};Xe(aE,{constant:()=>a7,glorotNormal:()=>d7,glorotUniform:()=>c7,heNormal:()=>f7,heUniform:()=>h7,identity:()=>l7,leCunNormal:()=>g7,leCunUniform:()=>b7,ones:()=>s7,orthogonal:()=>y7,randomNormal:()=>u7,randomUniform:()=>i7,truncatedNormal:()=>p7,varianceScaling:()=>m7,zeros:()=>o7});function o7(){return new uf}function s7(){return new gl}function a7(r){return new pf(r)}function i7(r){return new lf(r)}function u7(r){return new mf(r)}function p7(r){return new cf(r)}function l7(r){return new df(r)}function m7(r){return new en(r)}function c7(r){return new rc(r)}function d7(r){return new nc(r)}function f7(r){return new oc(r)}function h7(r){return new sc(r)}function g7(r){return new ac(r)}function b7(r){return new ic(r)}function y7(r){return new ff(r)}var BE={};Xe(BE,{Layer:()=>Ke,RNN:()=>Us,RNNCell:()=>pp,activation:()=>FJ,add:()=>GJ,alphaDropout:()=>S9,average:()=>UJ,averagePooling1d:()=>jS,averagePooling2d:()=>XS,averagePooling3d:()=>YS,avgPool1d:()=>QJ,avgPool2d:()=>JJ,avgPool3d:()=>t9,avgPooling1d:()=>ZJ,avgPooling2d:()=>e9,avgPooling3d:()=>r9,batchNormalization:()=>jJ,bidirectional:()=>g9,concatenate:()=>WJ,conv1d:()=>kJ,conv2d:()=>SJ,conv2dTranspose:()=>vJ,conv3d:()=>AJ,conv3dTranspose:()=>wJ,convLstm2d:()=>c9,convLstm2dCell:()=>d9,cropping2D:()=>DJ,dense:()=>EJ,depthwiseConv2d:()=>MJ,dot:()=>qJ,dropout:()=>RJ,elu:()=>bJ,embedding:()=>zJ,flatten:()=>_J,gaussianDropout:()=>k9,gaussianNoise:()=>C9,globalAveragePooling1d:()=>n9,globalAveragePooling2d:()=>o9,globalMaxPool1d:()=>y9,globalMaxPool2d:()=>T9,globalMaxPooling1d:()=>RE,globalMaxPooling2d:()=>LE,gru:()=>a9,gruCell:()=>i9,input:()=>gS,inputLayer:()=>gJ,layerNormalization:()=>XJ,leakyReLU:()=>TJ,lstm:()=>u9,lstmCell:()=>p9,masking:()=>v9,maxPool1d:()=>x9,maxPool2d:()=>I9,maxPooling1d:()=>_E,maxPooling2d:()=>$E,maxPooling3d:()=>s9,maximum:()=>KJ,minimum:()=>VJ,multiply:()=>HJ,permute:()=>OJ,prelu:()=>xJ,reLU:()=>yJ,repeatVector:()=>$J,reshape:()=>BJ,rnn:()=>f9,separableConv2d:()=>NJ,simpleRNN:()=>l9,simpleRNNCell:()=>m9,softmax:()=>IJ,spatialDropout1d:()=>LJ,stackedRNNCells:()=>h9,thresholdedReLU:()=>CJ,timeDistributed:()=>b9,upSampling2d:()=>PJ,zeroPadding2d:()=>YJ});async function Ti(r){if(r==null)return;let e=[],t=[],n=[];for(let o in r){let s=r[o];if(typeof s!="number"){let a=s;e.push(a.data()),t.push(o),n.push(a)}}if(e.length>0){let o=await Promise.all(e);for(let s=0;s<o.length;++s)r[t[s]]=o[s][0];Me(n)}}function Ty(r){if(r!=null)for(let e in r){let t=r[e];typeof t!="number"&&t.dispose()}}var T7=125,sp=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},aS=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},iE=class extends sp{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let o in t){let s=t[o];if(typeof s=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+s*n;else{let a;o in this.totals?a=this.totals[o]:this.totals[o]=0;let i=z(()=>Q(this.totals[o],L(s,n)));this.totals[o]=i,a?.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:z(()=>{let o=L(me(1,this.seen),this.totals[n]);t[n]=o,this.totals[n].dispose(),Ut(t[n])}))}},iS=class extends sp{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let s in this.history){let a=this.history[s];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){let p=a[i];e.push(p.data()),t.push(s),n.push(i)}}let o=await Promise.all(e);for(let s=0;s<o.length;++s)this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=o[s][0]}},uS=class extends sp{constructor(e,t){super();this.currentEpoch=0;if(this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||rf,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=T7),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");b.isNumber(this.yieldEvery)&&(this.maybeWait=$P(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let o=[];this.yield!=null&&(await Ti(n),o.push(this.yield(e,t,n))),o.push(this.nextFrameFunc()),await Promise.all(o)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Ti(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await Ti(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Ti(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await Ti(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):b.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await Ti(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Ti(e),await this.trainEnd(e))}};function xy(r,e){return r==null&&(r={}),r instanceof sp?[r]:Array.isArray(r)&&r[0]instanceof sp?r:kt(r).map(n=>new uS(n,e))}var Ga=class{constructor(){}static registerCallbackConstructor(e,t){b.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Ga.checkForDuplicate(t),Ga.constructors[e]==null&&(Ga.constructors[e]=[]),Ga.constructors[e].push(t)}static checkForDuplicate(e){for(let t in Ga.constructors)Ga.constructors[+t].forEach(o=>{if(o===e)throw new O("Duplicate callback constructor.")})}static clear(){Ga.constructors={}}static createCallbacks(e){let t=[];for(let n in Ga.constructors){let o=+n;e>=o&&t.push(...Ga.constructors[o])}return t.map(n=>new n)}},xf=Ga;xf.constructors={};function Iy(r,e,t,n,o,s,a,i,p){let u=new iS,l=[new iE,...xf.createCallbacks(e)];r!=null&&l.push(...r),l.push(u);let m=new aS(l);return m.setParams({epochs:t,initialEpoch:n,samples:o,steps:s,batchSize:a,verbose:e,doValidation:i,metrics:p}),{callbackList:m,history:u}}function xn(r,e={},t=!1){return gi(r,ne.SerializationMap.getMap().classNameMap,e,"layer",t)}function If(r,e){return z(()=>{r.dtype!=="float32"&&(r=te(r,"float32"));let t=fe(hl(r),e,!0),n=Ra(t.shape,cr()),o=Lt(jn(t,n));return me(r,o)})}function xi(r,e){return z(()=>Rt(hl(pe(e,r)),-1))}function cc(r,e){return z(()=>Rt($t(pe(e,r)),-1))}function ap(r,e){return z(()=>{let t=pe(r,e),n=Rr($t(r),cr(),Number.MAX_VALUE),o=$t(me(t,n));return L(100,Rt(o,-1))})}function x7(r,e){return z(()=>{let t=Rr(e,cr(),Number.MAX_VALUE),n=Lr(Q(1,t)),o=Rr(r,cr(),Number.MAX_VALUE),s=Lr(Q(1,o));return Rt(hl(pe(n,s)),-1)})}function I7(r,e){return z(()=>{let t=jn(0,pe(1,L(r,e)));return Rt(hl(t),-1)})}function C7(r,e){return z(()=>{let t=jn(0,pe(1,L(r,e)));return Rt(t,-1)})}function k7(r,e){return z(()=>{let t=fe(L(r,e),-1),n=Yr(L(pe(1,r),e),-1);return jn(0,Q(1,pe(n,t)))})}function S7(r,e){return z(()=>{let t=Math.log(2),n=pe(e,r),o=pe(Q(n,ci(L(-2,n))),t);return Rt(o,-1)})}function yl(r,e,t=!1){return z(()=>{if(t)e=Zp(e);else{let n=fe(e,e.shape.length-1,!0);e=me(e,n)}return e=Rr(e,cr(),1-cr()),et(fe(L(te(r,"float32"),Lr(e)),e.shape.length-1))})}function dc(r,e,t=!1){return z(()=>{let n=te(pu(jP(r)),"int32");e=Rr(e,cr(),1-cr());let o=e.shape,s=_(nu(n,o[o.length-1]),o);return yl(s,e,t)})}function v7(r,e){if(!b.arraysEqual(r.shape,e.shape))throw new O(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(e.shape)}`);return z(()=>{let t=Wr(e),n=et($t(e));return Q(pe(t,L(e,r)),Hp(pr(n)))})}function fc(r,e){return z(()=>{let t;return t=Rr(e,cr(),1-cr()),t=Lr(me(t,pe(1,t))),Rt(v7(r,t),-1)})}function A7(r,e){return z(()=>{let t=Rr(r,cr(),1),n=Rr(e,cr(),1);return fe(L(r,Lr(me(t,n))),-1)})}function w7(r,e){return z(()=>{let t=Lr(Q(cr(),e));return Rt(pe(e,L(r,t)),-1)})}function kf(r,e){return z(()=>{let t=If(r,-1),n=If(e,-1),o=L(t,n);return et(fe(o,-1))})}var Cf={meanSquaredError:xi,meanAbsoluteError:cc,meanAbsolutePercentageError:ap,meanSquaredLogarithmicError:x7,squaredHinge:I7,hinge:C7,categoricalHinge:k7,logcosh:S7,categoricalCrossentropy:yl,sparseCategoricalCrossentropy:dc,binaryCrossentropy:fc,kullbackLeiblerDivergence:A7,poisson:w7,cosineProximity:kf};function Cy(r){if(typeof r=="string"){if(r in Cf)return Cf[r];let e=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new O(e)}else return r}function Sf(r,e){return z(()=>{let t=L(.5,Dr(e)),n=fl(rr(e,t),r.dtype);return Rt(zr(r,n),-1)})}function vf(r,e){return z(()=>fl(zr(su(r,-1),su(e,-1)),"float32"))}function pE(r,e){return z(()=>te(fe(Ur(zr(r,1),zr(e,1))),"float32"))}function N7(r,e){return z(()=>te(fe(Ur(zr(r,1),zr(e,0))),"float32"))}function D7(r,e){return z(()=>te(fe(Ur(zr(r,0),zr(e,1))),"float32"))}function pS(r,e){return z(()=>{let t=pE(r,e),n=D7(r,e),o=Q(t,n);return te(Bt(rr(o,0),me(t,o),0),"float32")})}function lE(r,e){return z(()=>{let t=pE(r,e),n=N7(r,e),o=Q(t,n);return te(Bt(rr(o,0),me(t,o),0),"float32")})}function Sy(r,e){return fc(r,e)}function vy(r,e){return r.rank===e.rank&&(r=dn(r,[r.rank-1])),e=su(e,-1),e.dtype!==r.dtype&&(e=te(e,r.dtype)),te(zr(r,e),"float32")}var P7=xi,M7=xi,F7=cc,E7=cc,R7=ap,L7=ap,Af=yl,_7=kf,lS=dc,ky={binaryAccuracy:Sf,categoricalAccuracy:vf,precision:pS,categoricalCrossentropy:Af,sparseCategoricalCrossentropy:lS,mse:P7,MSE:M7,mae:F7,MAE:E7,mape:R7,MAPE:L7,cosine:_7};function mE(r){if(typeof r=="string"&&r in ky)return ky[r];if(typeof r!="string"&&r!=null)return r;throw new O(`Unknown metric ${r}`)}function wf(r){if(es(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let e;for(let t of Object.keys(Cf))if(Cf[t]===r){e=t;break}if(e!==void 0)return e;for(let t of Object.keys(ky))if(ky[t]===r){e=t;break}return e!==void 0?e:r.name}}function dE(r){let e={Adagrad:()=>cl.adagrad(.01),Adadelta:()=>cl.adadelta(1,.95,cr()),Adam:()=>cl.adam(.001,.9,.999,cr()),Adamax:()=>cl.adamax(.002,.9,.999,cr(),0),RMSProp:()=>cl.rmsprop(.001,.9,0,cr()),SGD:()=>cl.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,r in e)return e[r]();throw new O(`Unknown Optimizer ${r}`)}function cS(r,e,t=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!mS(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){let n=JSON.stringify(r);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${1048576}.`)}}function mS(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let e=Object.keys(r);for(let t of e)if(typeof t!="string"||!mS(r[t]))return!1;return!0}else if(Array.isArray(r)){for(let e of r)if(!mS(e))return!1;return!0}else return!1;else{let e=typeof r;return e==="string"||e==="number"||e==="boolean"}}function fE(r,e,t,n=console.log){let o=O7(r),s=["Layer (type)","Input Shape","Output shape","Param #"];o?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(l=>Math.floor(e*l)));let a;if(!o){s.push("Receives inputs"),a=[];for(let l in r.nodesByDepth)a.push(...r.nodesByDepth[l])}n("_".repeat(e)),Ay(s,t,n),n("=".repeat(e));let i=r.layers;for(let l=0;l<i.length;++l)o?z7(i[l],t,n):G7(i[l],t,a,n),n((l===i.length-1?"=":"_").repeat(e));r.checkTrainableWeightsConsistency();let p=B7(r),u=pc(r.nonTrainableWeights);n(`Total params: ${p+u}`),n(`Trainable params: ${p}`),n(`Non-trainable params: ${u}`),n("_".repeat(e))}function B7(r){let e;return r.collectedTrainableWeights!=null?e=pc(r.collectedTrainableWeights):e=pc(r.trainableWeights),e}function O7(r){let e=!0,t=[],n=[];for(let o in r.nodesByDepth)t.push(r.nodesByDepth[o]);for(let o of t){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){e=!1;break}n.push(...o)}if(e)for(let o of r.layers){let s=!1;for(let a of o.inboundNodes)if(n.indexOf(a)!==-1)if(s){e=!1;break}else s=!0;if(!e)break}return e}function Ay(r,e,t=console.log){let n="";for(let o=0;o<r.length;++o)o>0&&(n=n.slice(0,n.length-1)+" "),n+=r[o],n=n.slice(0,e[o]),n+=" ".repeat(e[o]-n.length);t(n)}function z7(r,e,t){let n,o;try{o=r.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch{o="multiple"}try{n=JSON.stringify(r.outputShape)}catch{n="multiple"}let s=r.name,a=r.getClassName(),i=[`${s} (${a})`,o,n,r.countParams().toString()];Ay(i,e,t)}function G7(r,e,t,n){let o,s;try{s=r.inboundNodes.map(m=>JSON.stringify(m.inputShapes)).join(",")}catch{s="multiple"}try{o=JSON.stringify(r.outputShape)}catch{o="multiple"}let a=[];for(let m of r.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(m)===-1))for(let c=0;c<m.inboundLayers.length;++c){let d=m.inboundLayers[c].name,f=m.nodeIndices[c],h=m.tensorIndices[c];a.push(`${d}[${f}][${h}]`)}let i=r.name,p=r.getClassName(),u=a.length===0?"":a[0],l=[`${i} (${p})`,s,o,r.countParams().toString(),u];Ay(l,e,n);for(let m=1;m<a.length;++m)Ay(["","","","",a[m]],e,n)}function hE(r,e,t){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&e===0&&typeof t=="string"}function Tl(r,e){if(r===null)return null;if(typeof r=="string")return fu(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];hE(e,o,s)?t.push(s):t.push(Tl(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n];if(n==="name"&&typeof o=="string")t[n]=o;else{let s=fu(n);t[s]=Tl(o,s)}}return t}}function wy(r,e){if(r==null)return null;if(typeof r=="string")return $s(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];hE(e,o,s)?t.push(s):t.push(wy(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n],s=$s(n);(n==="name"||n==="className")&&typeof o=="string"?t[s]=o:t[s]=wy(o,n)}return t}}var Nf="0.0.0";var ts=class extends Ke{constructor(e){super({});this.containerNodes=new Set;if(this.name=e.name,this.name==null){let T=this.getClassName().toLowerCase();this.name=rp(T)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Bs(this.inputs).length!==this.inputs.length)throw new O(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(T=>T.name)}`);Bs(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(T=>T.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let T of this.outputs){let x=T.sourceLayer,I=T.nodeIndex,k=T.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(I),this.outputLayersTensorIndices.push(k)}for(let T of this.inputs){let x=T.sourceLayer,I=T.nodeIndex,k=T.tensorIndex;es(I===0,"input layer has >1 nodes"),es(k===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(I),this.inputLayersTensorIndices.push(k)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let T=0;T<this.inputLayers.length;T++){let x=this.inputLayers[T];if(!(x instanceof yi))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${T} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(let T of this.outputLayers)this.outputNames.push(T.name);this.internalInputShapes=this.inputs.map(T=>T.shape),this.internalOutputShapes=this.outputs.map(T=>T.shape);let t={},n={},o={},s={},a={},i=[],p=(T,x,I,k,N,P)=>{(k==null||N==null||P==null)&&(k=T.sourceLayer,N=T.nodeIndex,P=T.tensorIndex);let F=k.inboundNodes[N];if(I.indexOf(F)!==-1)throw new Zr(`The tensor ${T.name} at layer "${k.name}" is part of a cycle.`);if(x.indexOf(F)!==-1)return;this.containerNodes.add(ts.nodeKey(k,N)),k.id in a||(a[k.id]=Object.keys(a).length),I.indexOf(F)===-1&&I.push(F);let E=F.inboundLayers.length;for(let $=0;$<E;$++){let U=F.inputTensors[$],W=F.inboundLayers[$],V=F.nodeIndices[$],H=F.tensorIndices[$];p(U,x,I,W,V,H)}for(x.push(F);I.indexOf(F)>=0;)I.splice(I.indexOf(F),1);i.push(F)},u=[],l=[];for(let T of this.outputs)p(T,u,l);let m=i.slice().reverse();for(let T of m){n[T.id]=T,T.id in t||(t[T.id]=0);let x=t[T.id],I=o[T.outboundLayer.id]==null?0:o[T.outboundLayer.id];x=Math.max(x,I),o[T.outboundLayer.id]=x,s[T.outboundLayer.id]=T.outboundLayer,t[T.id]=x;for(let k=0;k<T.inboundLayers.length;k++){let N=T.inboundLayers[k],P=T.nodeIndices[k],F=N.inboundNodes[P],E=t[F.id]==null?0:t[F.id];t[F.id]=Math.max(x+1,E),n[F.id]=F}}let c={};for(let T in t){let x=t[T];x in c||(c[x]=[]),c[x].push(n[T])}let d={};for(let T in o){let x=o[T];x in d||(d[x]=[]),d[x].push(s[T])}let f=Object.keys(d).map(T=>parseInt(T,10)).sort(of);this.layers=[];for(let T of f){let x=d[T];x.sort((I,k)=>{let N=a[I.id],P=a[k.id];return N<P?-1:N>P?1:0});for(let I of x)I instanceof ts&&this.internalContainerRefs.push(I),this.layers.push(I)}this.layersByDepth=d,f=Object.keys(c).map(T=>parseInt(T,10)).sort(of);let h=this.inputs.slice(),g=[];for(let T of f)for(let x of c[T]){let I=x.outboundLayer;if(I!=null){for(let k of x.inputTensors)if(h.indexOf(k)===-1)throw new Zr(`Graph disconnected: cannot obtain value for tensor ${k} at layer "${I.name}". The following previous layers were accessed without issue: ${g}`);for(let k of x.outputTensors)h.push(k);g.push(I.name)}}this.nodesByDepth=c;let y=this.layers.map(T=>T.name);for(let T of y){let x=y.filter(I=>I===T).length;if(x!==1)throw new Zr(`The name "${T}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new op({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(T=>null),outputMasks:this.outputs.map(T=>null),inputShapes:this.inputs.map(T=>T.shape),outputShapes:this.outputs.map(T=>T.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new O("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},o=0;for(let a of this.layers)for(let i of a.weights){if(n[i.originalName]!=null)throw new O(`Duplicate weight name: ${i.originalName}`);n[i.originalName]=i,o++}let s=[];for(let a in e){let i=a;if(n[a]==null){let p=a.split("/");i=p.slice(0,-2).concat([p[p.length-1]]).join("/")}if(n[i]!=null)s.push([n[i],e[a]]);else if(t)throw new O(`Provided weight data has no target variable: ${a}`);delete n[i]}if(t){let a=[];for(let i in n)a.push(i);if(a.length>0)throw new O(`${a.length} of ${o} weights are not set: ${a}`)}lc(s)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Nf}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=wy(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return z(()=>{e=kt(e);let n=new za;for(let o=0;o<this.inputs.length;++o)n.add(this.inputs[o],e[o]);return bl(this.outputs,n,t)})}computeMask(e,t){return z(()=>{e=kt(e);let n;return t==null?n=_s(null,e.length):n=kt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=uc(e);if(t.length!==this.inputLayers.length)throw new O(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let p=this.inputLayers[i],u=t[i],l=p.name+"_0_0";n[l]=u}let o=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(of);if(o.length>1)for(let i of o){let p=this.nodesByDepth[i];for(let u of p){let l=u.outboundLayer;if(this.inputLayers.map(h=>h.id).indexOf(l.id)!==-1)continue;let m=[];for(let h=0;h<u.inboundLayers.length;h++){let g=u.inboundLayers[h],y=u.nodeIndices[h],T=u.tensorIndices[h],x=`${g.name}_${y}_${T}`,I=n[x];m.push(I)}let c=l.computeOutputShape(Pr(m)),d=uc(c),f=l.inboundNodes.indexOf(u);for(let h=0;h<d.length;h++){let g=`${l.name}_${f}_${h}`;n[g]=d[h]}}}let s=[],a=[];for(let i=0;i<this.outputLayers.length;i++){let p=this.outputLayers[i],u=this.outputLayersNodeIndices[i],l=this.outputLayersTensorIndices[i],m=`${p.name}_${u}_${l}`;a.push(m)}for(let i=0;i<a.length;i++){let p=a[i];es(p in n),s.push(n[p])}return Pr(s)}runInternalGraph(e,t){t==null&&(t=_s(null,e.length));let n={};for(let p=0;p<this.inputs.length;++p){let u=this.inputs[p],l=e[p],m=t[p];n[u.id]=[l,m]}let o=Object.keys(this.nodesByDepth).map(p=>parseInt(p,10)).sort(of);for(let p of o){let u=this.nodesByDepth[p];for(let l of u){let m=l.outboundLayer,c=l.inputTensors,d=l.outputTensors,f=new Array;for(let h of c)h.id in n&&f.push(n[h.id]);if(f.length===c.length){let h={},g,y,T,x;if(l.callArgs!=null&&(h=l.callArgs),f.length===1){let[I,k]=f[0];h.mask==null&&(h.mask=k),T=kt(m.call(I,h)),x=kt(m.computeMask(I,k)),g=[I],y=[k]}else g=f.map(I=>I[0]),y=f.map(I=>I[1]),h.mask==null&&(h.mask=y),T=kt(m.call(g,h)),x=kt(m.computeMask(g,y));if(m.activityRegularizer)throw new Pe("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let I=0;I<d.length;++I){let k=d[I],N=T[I],P=x[I];n[k.id]=[N,P]}}}}let s=[],a=[],i=[];for(let p of this.outputs){es(p.id in n,`Could not compute output ${p.name} : ${p.id}`);let[u,l]=n[p.id];i.push(u.shape),s.push(u),a.push(l)}return[s,a,i]}buildNodeConversionMap(e){let t={},n;for(let o of this.layers){n=o instanceof ts?1:0;for(let s=0;s<o.inboundNodes.length;s++){let a=ts.nodeKey(o,s);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new O(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new O("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new O(`No such layer: ${e}`)}calculateLosses(){return z(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let o=ts.nodeKey(t,n);this.containerNodes.has(o)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let i=a.getClassName(),p=a.getConfig(),u=[];for(let m=0;m<a.inboundNodes.length;m++){let c=a.inboundNodes[m],d=ts.nodeKey(a,m),f={};if(this.containerNodes.has(d)){if(c.callArgs)try{JSON.stringify(c.callArgs),f=c.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${c.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(c.inboundLayers.length>0){let h=[];for(let g=0;g<c.inboundLayers.length;g++){let y=c.inboundLayers[g],T=c.nodeIndices[g],x=c.tensorIndices[g],I=ts.nodeKey(y,T),k=t[I];k==null&&(k=0),h.push([y.name,k,x,f])}u.push(h)}}}let l={};l.name=a.name,l.className=i,l.config=p,l.inboundNodes=u,n.push(l)}e.layers=n;let o=[];for(let a=0;a<this.inputLayers.length;a++){let i=this.inputLayers[a],p=this.inputLayersNodeIndices[a],u=ts.nodeKey(i,p);if(!this.containerNodes.has(u))continue;let l=t[u];l==null&&(l=0);let m=this.inputLayersTensorIndices[a];o.push([i.name,l,m])}e.inputLayers=o;let s=[];for(let a=0;a<this.outputLayers.length;a++){let i=this.outputLayers[a],p=this.outputLayersNodeIndices[a],u=ts.nodeKey(i,p);if(!this.containerNodes.has(u))continue;let l=t[u];l==null&&(l=0);let m=this.outputLayersTensorIndices[a];s.push([i.name,l,m])}return e.outputLayers=s,e}static fromConfig(e,t,n={},o=!1){let s={},a={};function i(g,y){g.name in a?a[g.name].push(y):a[g.name]=[y]}function p(g,y){let T=[],x;for(let I of y){let k=I[0],N=I[1],P=I[2];if(x=I[3]==null?{}:I[3],!(k in s)){i(g,y);return}let F=s[k];if(F.inboundNodes.length<=N){i(g,y);return}let E=F.inboundNodes[N];T.push(E.outputTensors[P])}T.length>0&&g.apply(Pr(T),x)}function u(g){let y=g.name,T=xn(g,t.customObjects!=null?t.customObjects:{});T.setFastWeightInitDuringBuild(o),s[y]=T,g.inboundNodes.forEach(I=>{if(!(I instanceof Array))throw new O(`Corrupted configuration, expected array for nodeData: ${I}`);i(T,I)})}let l=t.name,m=t.layers;for(let g of m)u(g);for(;!LP(a);)for(let g of m){let y=s[g.name];if(y.name in a){let T=a[y.name];delete a[y.name];for(let x of T)p(y,x)}}let c=[],d=[],f=t.inputLayers;for(let g of f){let y=g[0],T=g[1],x=g[2];es(y in s);let k=s[y].inboundNodes[T].outputTensors;c.push(k[x])}let h=t.outputLayers;for(let g of h){let y=g[0],T=g[1],x=g[2];es(y in s);let k=s[y].inboundNodes[T].outputTensors;d.push(k[x])}return new e({inputs:c,outputs:d,name:l})}get stateful(){if(this._stateful)throw new O("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){z(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function U7(r,e,t){let n=e.length;if(r==null||Array.isArray(r)&&r.length===0)return e.map(o=>null);if(n===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&e[0]in r?[r[e[0]]]:[r];if(Array.isArray(r)){if(r.length!==n)throw new Error(`Provided ${t} is an array of ${r.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let o=[];return e.forEach(s=>{s in r?o.push(r[s]):o.push(null)}),o}else throw new Error(`The model has multiple (${n}) outputs, so ${t} must be either an array with ${n} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(r)}`)}function Ny(r,e){return U7(r,e,"classWeight")}async function Dy(r,e,t,n){if(e!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){let o=z(()=>{if(r.shape.length===1)return Dn(r);if(r.shape.length===2){if(r.shape[1]>1)return su(r,1);if(r.shape[1]===1)return _(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await o.data());Me(o);let a=[];return s.forEach(i=>{if(t[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(t[i])}),Ot(a,"float32")}else return null}function gE(r,e){return L(r,e)}var W7=32;function TE(r,e){let t,n,o=e;t=o.xs,n=o.ys,b.assert(t!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);let s=bE("input",r.inputNames,t),a=bE("output",r.outputNames,n),i=s[0].shape[0];b.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),b.assert(a.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let p=0;p<s.length;p++)b.assert(s[p].shape[0]===i,()=>`Batch size mismatch: input ${r.inputNames[p]} has ${s[p].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);for(let p=0;p<a.length;p++)b.assert(a[p].shape[0]===i,()=>`Batch size mismatch: output ${r.outputNames[p]} has ${a[p].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);return{xs:s,ys:a}}function bE(r,e,t){if(t instanceof Ye)return[t];if(Array.isArray(t))return b.assert(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${r} keys ${e}.`),t;{let n=[];for(let o of e){if(t[o]==null)throw new O(`The feature data generated by the dataset lacks the required ${r} key '${o}'.`);n.push(t[o])}return n}}function K7(r){if(r.length===3)throw new Pe("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}async function xE(r,e,t){let n=t.batchesPerEpoch!=null;if(b.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),b.assert(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),b.assert(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),b.assert(!n||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),b.assert(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let o=t.validationData!=null,s,a;if(o)if(yE(t.validationData))b.assert(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{let g=K7(t.validationData);s=g.xs,a=g.ys}let i=r.makeTrainFunction(),p=r.getDedupedMetricsNames(),u;o?u=p.slice().concat(p.map(g=>"val_"+g)):u=p.slice();let l=xy(t.callbacks,t.yieldEvery),m=t.verbose==null?1:t.verbose,{callbackList:c,history:d}=Iy(l,m,t.epochs,null,null,V7(e,t),null,o,u);c.setModel(r),r.history=d,await c.onTrainBegin(),r.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,h=await e.iterator();for(;f<t.epochs;){let g={};await c.onEpochBegin(f);let y=0,T=0;for(n||(h=await e.iterator());!n||y<t.batchesPerEpoch;){let x=await h.next();if(n&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:I,ys:k}=TE(r,x.value),N={};N.batch=T,N.size=I[0].shape[0],await c.onBatchBegin(T,N);let P=[];if(t.classWeight!=null){let $=Ny(t.classWeight,r.outputNames);for(let U=0;U<$.length;++U)P.push(await Dy(k[U],null,$[U]))}let F=I.concat(k).concat(P),E=i(F);Me(F);for(let $=0;$<p.length;++$){let U=p[$],W=E[$];N[U]=W,Ut(W)}await c.onBatchEnd(T,N),Ty(N),T++,y++}if(n?y>=t.batchesPerEpoch:x.done){if(o){let I;yE(t.validationData)?I=kt(await r.evaluateDataset(t.validationData,{batches:t.validationBatches})):I=kt(r.evaluate(s,a,{batchSize:t.validationBatchSize==null?W7:t.validationBatchSize,verbose:0}));for(let k=0;k<r.metricsNames.length;++k)g[`val_${r.metricsNames[k]}`]=I[k]}break}if(r.stopTraining_)break}if(await c.onEpochEnd(f,g),f++,r.stopTraining_)break}return await c.onTrainEnd(),await r.history.syncData(),r.history}finally{r.isTraining=!1}}function V7(r,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(r.size)&&(t=r.size),t}function yE(r){return typeof r.iterator=="function"}function H7(r){return typeof r.next=="function"}async function IE(r,e,t){t=t||{};let n=t.batches!=null,o=r.testFunction,s=[];if(t.verbose>0)throw new Pe("Verbose mode is not implemented yet.");b.assert(!n||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);let a=H7(e)?e:await e.iterator(),i=0,p=0;for(;!n||p<t.batches;){let u=await a.next();if(s=z(()=>{if(u.value){let{xs:l,ys:m}=TE(r,u.value),c=l.concat(m),d=z(()=>o(c));if(Me(c),p===0)for(let h=0;h<d.length;++h)s.push(ce(0));let f=c[0].shape[0];for(let h=0;h<d.length;++h){let g=d[h],y=s[h];s[h]=z(()=>Q(s[h],L(f,g))),p>0&&Me(y)}Me(d),i+=f,++p}return s}),u.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let l=s[u];s[u]=me(s[u],i),Me(l)}return Pr(s)}function Py(r){b.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function hc(r,e,t){return r==null?[null]:Array.isArray(r)?r.map(n=>hu(n,e,t-e)):hu(r,e,t-e)}function My(r,e){return z(()=>r==null?null:Array.isArray(r)?r.map(t=>My(t,e)):ly(r,e.dtype==="int32"?e:te(e,"int32")))}function Fy(r,e){let t=[],n=0,o=null;for(;n<r;)o=n+e,o>=r&&(o=r),t.push([n,o]),n=o;return t}async function q7(r,e,t,n,o,s,a,i,p,u,l,m,c,d,f){o==null&&(o=32),s==null&&(s=1),l==null&&(l=!0),c==null&&(c=0);let h=!1;if(p!=null&&u!=null&&(h=!0),f!=null&&(h=!0,d==null))throw new O("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=r.checkNumSamples(t,o,d,"steps_per_epoch"),y;g!=null&&(y=Jr(0,g)),a==null&&(a=1);let{callbackList:T,history:x}=Iy(i,a,s,c,g,d,o,h,m);T.setModel(r),r.history=x,await T.onTrainBegin(),r.stopTraining_=!1;for(let I=c;I<s;++I){await T.onEpochBegin(I);let k={};if(d!=null)throw new Pe("stepsPerEpoch mode is not implemented yet.");{if(l==="batch")throw new Pe("batch shuffling is not implemneted yet");l&&b.shuffle(y);let N=Ot(y),P=Fy(g,o);for(let F=0;F<P.length;++F){let E={};if(await T.onBatchBegin(F,E),z(()=>{let $=P[F][0],U=P[F][1],W=hu(N,$,U-$);E.batch=F,E.size=U-$;let V=My(t,W),H=e(V);for(let q=0;q<n.length;++q){let Y=n[q],ee=H[q];E[Y]=ee,Ut(ee)}if(F===P.length-1&&h){let q=r.testLoop(p,u,o);for(let Y=0;Y<n.length;++Y){let ee=n[Y],j=q[Y];Ut(j),k["val_"+ee]=j}}}),await T.onBatchEnd(F,E),Ty(E),r.stopTraining_)break}N.dispose()}if(await T.onEpochEnd(I,k),r.stopTraining_)break}return await T.onTrainEnd(),await r.history.syncData(),r.history}async function CE(r,e,t,n={}){if(r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;let o,s,a,i,p,u,l,m,c;try{let d=n.batchSize==null?32:n.batchSize;Py(d);let f=!1,h=await r.standardizeUserData(e,t,n.sampleWeight,n.classWeight,f,d);o=h[0],s=h[1],c=h[2];let g=!1,y;if(n.validationData!=null&&n.validationData.length>0){if(g=!0,n.validationData.length===2)p=n.validationData[0],u=n.validationData[1];else throw n.validationData.length===3?new Pe("validationData including sample weights is not supported yet."):new O(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let E=!0,$=await r.standardizeUserData(p,u,null,null,E,d);l=$[0],m=$[1],y=l.concat(m)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){g=!0;let E=Math.floor(o[0].shape[0]*(1-n.validationSplit)),$=o[0].shape[0];l=hc(o,E,$),a=o,o=hc(o,0,E),m=hc(s,E,$),i=s,s=hc(s,0,E),y=l.concat(m)}else n.validationSteps!=null&&(g=!0);let T=o.concat(s).concat(c);r.checkTrainableWeightsConsistency();let x=r.makeTrainFunction(),I=r.getDedupedMetricsNames(),k,N;g?(r.makeTestFunction(),k=r.testFunction,N=I.slice().concat(I.map(E=>"val_"+E))):(k=null,y=[],N=I.slice());let P=xy(n.callbacks,n.yieldEvery);return await q7(r,x,T,I,d,n.epochs,n.verbose,P,k,y,n.shuffle,N,n.initialEpoch,null,null)}finally{r.isTraining=!1,Gs(o,e),Gs(s,t),Gs(a,e),Gs(i,t),Gs(l,p),Gs(m,u),c!=null&&Me(c)}}function dS(r){let e=[];r instanceof Ye&&(r=[r]);for(let t=0;t<r.length;++t){let n=r[t];if(n.rank===1)e.push(gu(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(n)}}return e}function Gs(r,e){if(r==null)return;let t=[];if(e instanceof Ye)t.push(e.id);else if(Array.isArray(e))e.forEach(o=>t.push(o.id));else if(e!=null)for(let o in e){let s=e[o];t.push(s.id)}let n=[];if(r instanceof Ye)t.indexOf(r.id)===-1&&n.push(r);else if(Array.isArray(r))r.forEach(o=>{t.indexOf(o.id)===-1&&n.push(o)});else if(r!=null)for(let o in r){let s=r[o];t.indexOf(s.id)===-1&&n.push(s)}n.forEach(o=>{o.isDisposed||o.dispose()})}function j7(r){return r instanceof Ye}function fS(r){return Array.isArray(r)}function kE(r){return!j7(r)&&!fS(r)}function SE(r,e,t,n=!0,o=""){if(e==null||e.length===0){if(r!=null){let a=!1;if(fS(r)&&r.length>0)a=!0;else if(kE(r)){for(let i in r)if(r.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new O(`Error when checking model ${o} expected no data, but got ${r}`)}return[]}if(r==null)return e.map(a=>null);let s;if(kE(r)){r=r,s=[];for(let a of e){if(r[a]==null)throw new O(`No data provided for "${a}". Need data for each key in: ${e}`);s.push(r[a])}}else if(fS(r)){if(r=r,r.length!==e.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,e.length>1)throw new O(`The model ${o} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=dS(s),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new O(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${i.shape}`);for(let p=0;p<t[a].length;++p){if(p===0&&!n)continue;let u=i.shape[p],l=t[a][p];if(l!=null&&l>=0&&u!==l)throw new O(`${o} expected a batch of elements where each example has shape [${t[a].slice(1,t[a].length)}] (i.e.,tensor shape [*,${t[a].slice(1,t[a].length)}]) but the ${o} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function X7(r,e,t){let n=Bs(r.map(s=>s.shape[0]));n.sort();let o=Bs(e.map(s=>s.shape[0]));if(o.sort(),n.length>1)throw new O(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(o.length>1)throw new O(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(n.length>0&&o.length>0&&!b.arraysEqual(n,o))throw new O(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${o[0]} target sample(s).`)}function Y7(r,e,t){let n=[xi,fc,yl];for(let o=0;o<r.length;++o){let s=r[o],a=e[o],i=t[o];if(a!=null){if(a===yl&&s.shape[s.shape.length-1]===1)throw new O(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(a)!==-1){let p=s.shape.slice(1),u=i.slice(1);for(let l=0;l<p.length;++l){let m=p[l],c=u[l];if(c!=null&&m!==c)throw new O(`A target Tensor with shape ${s.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function vE(r,e,t,n=!0,o=""){let s;if(Array.isArray(r)){if(r.length!==e.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(e.length>1)throw new O(`The model expects ${e.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new O(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let p=0;p<t[a].length;++p){if(p===0&&!n)continue;let u=i.shape[p],l=t[a][p];if(l!=null&&l!==u)throw new O(`Error when checking ${o}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function Q7(r,e){if(r==null||Array.isArray(r)&&r.length===0)return e.map(n=>[]);let t;if(typeof r=="string"||typeof r=="function")t=[r];else if(Array.isArray(r)||typeof r=="object")t=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(t))return e.map(n=>t);{let n=[];for(let o of e){let s=t.hasOwnProperty(o)?t[o]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var Z7="layers-model",rs=class extends ts{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new O("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");fE(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=dE(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Qr))throw new O("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new O(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(Cy(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new O(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>Cy(i))}else{let a=Cy(e.loss);this.outputs.forEach(i=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let i=this.internalOutputShapes[a],p=this.outputNames[a];this.feedOutputNames.push(p),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ba("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let o=Q7(e.metrics,this.outputNames),s=(a,i,p)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([p,a])};Ba("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=o[a];(u=>{let l="",m,c,d;for(let f of u){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){let g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===fc?["accuracy","acc"].indexOf(f)!==-1?c=Sf:["crossentropy","ce"].indexOf(f)!==-1&&(c=Sy):this.lossFunctions[a]===dc?["accuracy","acc"].indexOf(f)!==-1?c=vy:["crossentropy","ce"].indexOf(f)!==-1&&(c=lS):["accuracy","acc"].indexOf(f)!==-1?c=vf:["crossentropy","ce"].indexOf(f)!==-1&&(c=Af);let y;["accuracy","acc"].indexOf(f)!==-1?y="acc":["crossentropy","ce"].indexOf(f)!==-1&&(y="ce"),d=c,m=l+y}else d=mE(f),m=l+wf(f);let h;Ba(m,()=>{h=d}),s(a,m,h)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let o=n.batchSize==null?32:n.batchSize;Py(o);let s=!0,a=this.standardizeUserDataXY(e,t,s,o);try{let i=a[0].concat(a[1]);this.makeTestFunction();let p=this.testFunction,u=this.testLoop(p,i,o,n.verbose,n.steps);return Pr(u)}finally{Gs(a[0],e),Gs(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),IE(this,e,t)}checkNumSamples(e,t,n,o="steps"){let s;if(n!=null){if(s=null,t!=null)throw new O(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?s=e[0].shape[0]:s=e.shape[0];else throw new O(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return s}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new O("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),o=n?t:[t],s=this.retrieveSymbolicTensors(o),a=new za;if(e instanceof Ye&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new O(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let p=0;p<this.inputs.length;++p)a.add(this.inputs[p],e[p])}else for(let p of this.inputs){let u=e[p.name];if(u==null)throw new O(`No value is provided for the model's input ${p.name}`);a.add(p,u)}let i=bl(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){let t=_s(null,e.length),n=e.length;for(let o of this.layers){let s=Array.isArray(o.output)?o.output:[o.output],a=s.map(i=>i.name);for(let i=0;i<e.length;++i){let p=a.indexOf(e[i]);if(p!==-1&&(t[i]=s[p],n--),n===0)break}if(n===0)break}if(n>0){let o=[];throw t.forEach((s,a)=>{s==null&&o.push(e[a])}),new O(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return t}predictLoop(e,t=32,n=!1){return z(()=>{let o=this.checkNumSamples(e);if(n)throw new Pe("Verbose predictLoop() is not implemented yet.");let s=Fy(o,t),a=this.outputs.map(i=>[]);for(let i=0;i<s.length;++i)z(()=>{let u=s[i][0],l=s[i][1],m=hc(e,u,l),c=[];if(Array.isArray(m))for(let f=0;f<m.length;++f)c.push({key:this.inputs[f],value:m[f]});else c.push({key:this.inputs[0],value:m});let d=new za(c);return bl(this.outputs,d)}).forEach((u,l)=>a[l].push(u));return Pr(a.map(i=>pt(i,0)))})}predict(e,t={}){let n=dS(e);vE(n,this.inputNames,this.feedInputShapes,!1);try{let o=t.batchSize==null?32:t.batchSize;return Py(o),this.predictLoop(n,o)}finally{Gs(n,e)}}predictOnBatch(e){vE(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,o){if(this.optimizer_==null)throw new Zr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let a=0;a<this.feedOutputShapes.length;++a){let i=this.feedOutputShapes[a];this.feedLossFns[a]===dc?s.push(i.slice(0,i.length-1).concat([1])):s.push(i)}if(e=SE(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=SE(t,this.feedOutputNames,s,!1,"target"),X7(e,t,null),Y7(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&e[0].shape[0]%o!==0)throw new O(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,o,s=!0,a){let[i,p]=this.standardizeUserDataXY(e,t,s,a);if(n!=null)throw new Error("sample weight is not supported yet.");let u=null;if(o!=null){let l=Ny(o,this.outputNames);u=[];for(let m=0;m<l.length;++m)u.push(await Dy(p[m],null,l[m]))}return[i,p,u]}testLoop(e,t,n,o=0,s){return z(()=>{let a=this.checkNumSamples(t,n,s,"steps"),i=[];if(o>0)throw new Pe("Verbose mode is not implemented yet.");if(s!=null)throw new Pe("steps mode in testLoop() is not implemented yet");{let p=Fy(a,n),u=Ot(Jr(0,a));for(let l=0;l<p.length;++l){let m=p[l][0],c=p[l][1],d=hu(u,m,c-m),f=My(t,d),h=e(f);if(l===0)for(let g=0;g<h.length;++g)i.push(ce(0));for(let g=0;g<h.length;++g){let y=h[g];i[g]=Q(i[g],L(c-m,y))}}for(let l=0;l<i.length;++l)i[l]=me(i[l],a)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let o=e[n],s=o;jk(e,o)>1&&(s+=`_${jk(e.slice(0,n),o)}`),t.push(s)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{let m=[];for(let h=0;h<this.inputs.length;++h)m.push({key:this.inputs[h],value:n[h]});let c=new za(m),d=bl(this.outputs,c,{training:!0}),f;for(let h=0;h<this.lossFunctions.length;++h){let y=this.lossFunctions[h](o[h],d[h]);s[h]!=null&&(y=gE(y,s[h]));let T=Rt(y);t.push(T),h===0?f=y:f=Q(f,y)}for(let h=0;h<this.metricsTensors.length;++h){let g;if(this.outputs.length>1&&h<this.outputs.length)g=t[h];else{let y=this.metricsTensors[h][0],T=this.metricsTensors[h][1];g=Rt(y(o[T],d[T]))}Ut(g),a.push(g)}return f=Rt(f),this.calculateLosses().forEach(h=>{f=Q(f,h)}),f},p=this.collectedTrainableWeights.map(m=>m.read()),u=!0;return[this.optimizer_.minimize(i,u,p)].concat(a)}}makeTestFunction(){this.testFunction=e=>z(()=>{let t=[],n,o=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let u=0;u<this.inputs.length;++u)a.push({key:this.inputs[u],value:o[u]});let i=new za(a),p=bl(this.outputs,i);for(let u=0;u<this.lossFunctions.length;++u){let l=this.lossFunctions[u],m=Rt(l(s[u],p[u]));u===0?n=m:n=Q(n,m),t.push(n)}for(let u=0;u<this.metricsTensors.length;++u){let l=this.metricsTensors[u][0],m=this.metricsTensors[u][1],c=Rt(l(s[m],p[m]));t.push(c)}return t})}async fit(e,t,n={}){return CE(this,e,t,n)}async fitDataset(e,t){return xE(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),o=n[0],s=n[1],i=this.makeTrainFunction()(o.concat(s)),p=[];for(let u of i){let l=await u.data();p.push(l[0])}return Me(i),Gs(n[0],e),Gs(n[1],t),Pr(p)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,o=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<o.length;++a)n&&!o[a].trainable||t.push({name:o[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=wd().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-wd().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=$s(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>$s(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let o of t)if(typeof n[o]=="string")e[o]=$s(n[o]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[$s(wf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>$s(wf(e)));{let e={};for(let t in this.metrics)e[t]=$s(wf(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=Tl(e.optimizer_config),n=xn(t),o;if(typeof e.loss=="string")o=fu(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(a=>fu(a));else if(e.loss!=null){o={};for(let a in e.loss)o[a]=fu(e.loss[a])}let s;if(Array.isArray(e.metrics))s=e.metrics.map(a=>fu(a));else if(e.metrics!=null){s={};for(let a in e.metrics)s[a]=fu(e.metrics[a])}this.compile({loss:o,metrics:s,optimizer:n})}async save(e,t){if(typeof e=="string"){let u=Or.getSaveHandlers(e);if(u.length===0)throw new O(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new O(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new O("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Or.encodeWeights(this.getNamedWeights(t)),o=!1,s=null,i={modelTopology:this.toJSON(s,o),format:Z7,generatedBy:`TensorFlow.js tfjs-layers v${Nf}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();let u="optimizer",{data:l,specs:m}=await Or.encodeWeights(await this.optimizer.getWeights(),u);n.specs.push(...m),n.data=Or.concatenateArrayBuffers([n.data,l])}return this.userDefinedMetadata!=null&&(cS(this.userDefinedMetadata,this.name,!0),i.userDefinedMetadata=this.userDefinedMetadata),i.weightData=n.data,i.weightSpecs=n.specs,e.save(i)}setUserDefinedMetadata(e){cS(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};rs.className="Model";ne.registerClass(rs);var hS=class extends rs{};hS.className="Functional";ne.registerClass(hS);async function AE(r,e){"modelTopology"in r||(r={modelTopology:r}),r=r;let t=r.modelTopology;t.model_config!=null&&(t=t.model_config);let n=Tl(t),o=xn(n,e);if(r.weightsManifest!=null){let s=await Or.loadWeights(r.weightsManifest,r.pathPrefix,o.weights.map(i=>i.originalName)),a={};for(let i of o.weights)a[i.originalName]=s[i.originalName];o.loadWeights(a),Me(s)}return o}async function wE(r,e){if(e==null&&(e={}),typeof r=="string"){let t=Or.getLoadHandlers(r,e);if(t.length===0)t.push(Or.browserHTTPRequest(r,e));else if(t.length>1)throw new O(`Found more than one (${t.length}) load handlers for URL '${r}'`);r=t[0]}return J7(r,void 0,e)}async function J7(r,e,t){if(t==null&&(t={}),r.load==null)throw new O("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let n=await r.load(),o=n.modelTopology;o.model_config!=null&&(o=o.model_config);let s=t.strict==null?!0:t.strict,a=n.weightData!=null&&n.weightSpecs!=null&&s,i=xn(Tl(o),e,a),p=n.trainingConfig;if(p!=null&&i.loadTrainingConfig(p),n.userDefinedMetadata!=null&&i.setUserDefinedMetadata(n.userDefinedMetadata),n.weightData!=null){if(n.weightSpecs==null)throw new O("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:u,optimizerWeights:l}=eJ(n.weightData,n.weightSpecs);i.loadWeights(u,s),i.optimizer!=null&&l.length>0&&await i.optimizer.setWeights(l),Me(u),Me(l.map(m=>m.tensor))}return i}function eJ(r,e){let t=Or.decodeWeights(r,e),n={},o=[];return e.forEach(s=>{s.group==="optimizer"?o.push({name:s.name,tensor:t[s.name]}):n[s.name]=t[s.name]}),{modelWeights:n,optimizerWeights:o}}var Ey=class extends rs{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:rp("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new O(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof Ey||e instanceof rs,n;if(t){if(n=e,n.outputs.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new O("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new O("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let o=fy({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new O(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=eS(this.outputs[0])}this.inboundNodes=[],new op({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:_s(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{let o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(tt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new rs({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Zr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Zr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Zr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Zr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},o=!1){let s,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new O("Legacy serialization format not supported yet.");s=t}else b.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,a=t;let i=new e(a);if(!(i instanceof Ey))throw new Pe(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let p of s){let l=xn(p,void 0,o);o&&l.setFastWeightInitDuringBuild(!0),i.add(l)}return i}set stopTraining(e){if(this.model==null)throw new O("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new O("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},gc=Ey;gc.className="Sequential";ne.registerClass(gc);function tJ(r){return new rs(r)}function rJ(r){return new gc(r)}function nJ(r,e){return e==null&&(e={}),wE(r,e)}function gS(r){return fy(r)}function oJ(r,e){xf.registerCallbackConstructor(r,e)}var In=class extends ne.Serializable{getConfig(){return{}}},yS=class extends In{apply(e,t=1){return YP(e,t)}};yS.className="elu";ne.registerClass(yS);var TS=class extends In{apply(e){return qd(e)}};TS.className="selu";ne.registerClass(TS);var xS=class extends In{apply(e){return Wr(e)}};xS.className="relu";ne.registerClass(xS);var IS=class extends In{apply(e){return z(()=>lu(6,Wr(e)))}};IS.className="relu6";ne.registerClass(IS);var CS=class extends In{apply(e){return e}};CS.className="linear";ne.registerClass(CS);var kS=class extends In{apply(e){return mn(e)}};kS.className="sigmoid";ne.registerClass(kS);var SS=class extends In{apply(e){return ZP(e)}};SS.className="hardSigmoid";ne.registerClass(SS);var vS=class extends In{apply(e){return ci(e)}};vS.className="softplus";ne.registerClass(vS);var AS=class extends In{apply(e){return QP(e)}};AS.className="softsign";ne.registerClass(AS);var wS=class extends In{apply(e){return au(e)}};wS.className="tanh";ne.registerClass(wS);var Df=class extends In{apply(e,t=-1){return Zp(e,t)}};Df.className="softmax";ne.registerClass(Df);var NS=class extends In{apply(e,t=-1){return Bd(e,t)}};NS.className="logSoftmax";ne.registerClass(NS);var DS=class extends In{apply(e,t=1){return z(()=>L(mn(L(e,t)),e))}};DS.className="swish";ne.registerClass(DS);var PS=class extends In{apply(e){return z(()=>L(e,au(ci(e))))}};PS.className="mish";ne.registerClass(PS);function Ua(r){return r.getClassName()}function bS(r,e={}){return gi(r,ne.SerializationMap.getMap().classNameMap,e,"activation")}function Wa(r){if(r==null){let e={};return e.className="linear",e.config={},bS(e)}if(typeof r=="string"){let e={};return e.className=r,e.config={},bS(e)}else return r instanceof In?r:bS(r)}function MS(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var FS=class extends ne.Serializable{},xl=class extends FS{constructor(e){super();MS(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return z(()=>{let t=bt([1]);return this.hasL1&&(t=Q(t,fe(L(this.l1,$t(e))))),this.hasL2&&(t=Q(t,fe(L(this.l2,hl(e))))),_(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};xl.className="L1L2";ne.registerClass(xl);function PE(r){return MS(r),new xl({l1:r!=null?r.l1:null,l2:0})}function ME(r){return MS(r),new xl({l2:r!=null?r.l2:null,l1:0})}var NE={l1l2:"L1L2"};function ht(r){return Zm(r)}function DE(r,e={}){return gi(r,ne.SerializationMap.getMap().classNameMap,e,"regularizer")}function St(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in NE?NE[r]:r,config:{}};return DE(t)}else return r instanceof FS?r:DE(r)}var Pf=class extends Ke{constructor(e){super(e??{});this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Oe(e);let n=Wr(e);return this.maxValue!=null&&(n=Rr(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Pf.className="ReLU";ne.registerClass(Pf);var Mf=class extends Ke{constructor(e){super(e??{});this.DEFAULT_ALPHA=.3;e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Oe(e);return Vp(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Mf.className="LeakyReLU";ne.registerClass(Mf);var Ff=class extends Ke{constructor(e){super(e??{});this.DEFAULT_ALPHA_INITIALIZER="zeros";if(e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=xt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=St(e.alphaRegularizer),this.alphaConstraint=jt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new O(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=tt(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let o of this.sharedAxes)t[o-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let o=1;o<e.length;++o)n[o]=e[o];this.inputSpec=[new Pt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Oe(e),Yp(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Dt(this.alphaInitializer),alphaRegularizer:ht(this.alphaRegularizer),alphaConstraint:qt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Ff.className="PReLU";ne.registerClass(Ff);var Ef=class extends Ke{constructor(e){super(e??{});this.DEFAULT_ALPHA=1;if(e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Pe(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Oe(e);return uu(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Ef.className="ELU";ne.registerClass(Ef);var Rf=class extends Ke{constructor(e){super(e??{});this.DEFAULT_THETA=1;e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Oe(e);return L(n,te(rr(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Rf.className="ThresholdedReLU";ne.registerClass(Rf);var Lf=class extends Ke{constructor(e){super(e??{});this.DEFAULT_AXIS=1;e==null&&(e={}),this.softmax=new Df().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Oe(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Lf.className="Softmax";ne.registerClass(Lf);function ip(r,e,t){if(typeof r=="number")return _s(r,e);if(r.length!==e)throw new O(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${r.length} elements.`);for(let n=0;n<e;++n){let o=r[n];if(!HP(o))throw new O(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(r)} including a non-integer number ${o}`)}return r}function Rn(r,e,t,n,o=1){if(r==null)return r;let s=e+(e-1)*(o-1),a;return t==="same"?a=r:a=r-s+1,Math.floor((a+n-1)/n)}function Ka(r,e,t,n){if(r==null)return null;if(n==="valid")r=r*e+Oa([t-e,0]);else if(n==="same")r=r*e;else throw new O(`Unsupport padding mode: ${n}.`);return r}function Uf(r,e){return z(()=>(Wt(e),e==="channelsFirst"?Ge(r,[0,2,3,1]):r))}function RS(r,e){return z(()=>(Wt(e),e==="channelsFirst"?Ge(r,[0,2,3,4,1]):r))}function aJ(r,e,t,n=1,o="valid",s,a=1){return z(()=>{if(s==null&&(s=gn()),Wt(s),r.shape.length!==3)throw new O(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(e.shape.length!==3)throw new O(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new O(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(s==="channelsFirst"&&(r=Ge(r,[0,2,1])),o==="causal")throw new Pe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Fd(r,e,n,o==="same"?"same":"valid","NWC",a);return t!=null&&(i=bn(i,t)),i})}function FE(r,e,t,n=[1,1],o="valid",s,a,i=null){return z(()=>{if(s==null&&(s=gn()),Wt(s),r.rank!==3&&r.rank!==4)throw new O(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(e.rank!==3&&e.rank!==4)throw new O(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let p=Uf(r,s);if(o==="causal")throw new Pe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return p=Es.conv2d({x:p,filter:e,strides:n,pad:o==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:i}),s==="channelsFirst"&&(p=Ge(p,[0,3,1,2])),p})}function iJ(r,e,t,n=[1,1,1],o="valid",s,a){return z(()=>{if(s==null&&(s=gn()),Wt(s),r.rank!==4&&r.rank!==5)throw new O(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(e.rank!==4&&e.rank!==5)throw new O(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let i=RS(r,s);if(o==="causal")throw new Pe("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Rd(i,e,n,o==="same"?"same":"valid","NDHWC",a),t!=null&&(i=bn(i,t)),s==="channelsFirst"&&(i=Ge(i,[0,4,1,2,3])),i})}var Tc=class extends Ke{constructor(e,t){super(t);this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(Tc.verifyArgs(t),this.rank=e,nr(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Pe(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ip(t.kernelSize,e,"kernelSize"),this.strides=ip(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,hn(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Wt(this.dataFormat),this.activation=Wa(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=xt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=jt(t.biasConstraint),this.biasRegularizer=St(t.biasRegularizer),this.activityRegularizer=St(t.activityRegularizer),this.dilationRate=ip(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new O(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new O(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new O(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(es("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!ry(e.kernelSize,"number",1,3))throw new O(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ua(this.activation),useBias:this.useBias,biasInitializer:Dt(this.biasInitializer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),biasConstraint:qt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Il=class extends Tc{constructor(e,t){super(e,t);this.kernel=null;Il.verifyArgs(t),this.filters=t.filters,nr(this.filters,"filters"),this.kernelInitializer=xt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=jt(t.kernelConstraint),this.kernelRegularizer=St(t.kernelRegularizer)}build(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return z(()=>{e=Oe(e);let n,o=this.bias==null?null:this.bias.read(),s=ny(this.activation.getClassName());if(s!=null&&this.rank===2)n=FE(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)n=aJ(e,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=FE(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=iJ(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Pe("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=tt(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){let a=Rn(n[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);t.push(a)}let o=[e[0]];return this.dataFormat==="channelsLast"?(o=o.concat(t),o.push(this.filters)):(o.push(this.filters),o=o.concat(t)),o}getConfig(){let e={filters:this.filters,kernelInitializer:Dt(this.kernelInitializer),kernelRegularizer:ht(this.kernelRegularizer),kernelConstraint:qt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new O(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},LS=class extends Il{constructor(e){super(2,e);LS.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!ry(e.kernelSize,"number",1,2))throw new O(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},bc=LS;bc.className="Conv2D";ne.registerClass(bc);var _S=class extends Il{constructor(e){super(3,e);_S.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new O(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},yc=_S;yc.className="Conv3D";ne.registerClass(yc);var _f=class extends bc{constructor(e){super(e);if(this.inputSpec=[new Pt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=tt(e),e.length!==4)throw new O("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Pt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return z(()=>{let n=Oe(e);if(n.shape.length!==4)throw new O(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);let p=o[a],u=o[i],l=this.kernelSize[0],m=this.kernelSize[1],c=this.strides[0],d=this.strides[1],f=Ka(p,c,l,this.padding),h=Ka(u,d,m,this.padding),g=[s,f,h,this.filters];this.dataFormat!=="channelsLast"&&(n=Ge(n,[0,2,3,1]));let y=Ed(n,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=Ge(y,[0,3,1,2])),this.bias!=null&&(y=bn(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(e){e=tt(e);let t=e.slice(),n,o,s;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3):(n=3,o=1,s=2);let a=this.kernelSize[0],i=this.kernelSize[1],p=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[o]=Ka(t[o],p,a,this.padding),t[s]=Ka(t[s],u,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};_f.className="Conv2DTranspose";ne.registerClass(_f);var $f=class extends yc{constructor(e){super(e);if(this.inputSpec=[new Pt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=tt(e),e.length!==5)throw new O("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Pt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return z(()=>{let n=Oe(e);if(n.shape.length!==5)throw new O(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],a,i,p;this.dataFormat==="channelsFirst"?(p=2,a=3,i=4):(p=1,a=2,i=3);let u=o[p],l=o[a],m=o[i],c=this.kernelSize[0],d=this.kernelSize[1],f=this.kernelSize[2],h=this.strides[0],g=this.strides[1],y=this.strides[2],T=Ka(u,h,c,this.padding),x=Ka(l,g,d,this.padding),I=Ka(m,y,f,this.padding),k=[s,T,x,I,this.filters];this.dataFormat!=="channelsLast"&&(n=Ge(n,[0,2,3,4,1]));let N=sk(n,this.kernel.read(),k,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(N=Ge(N,[0,4,1,2,3])),this.bias!==null&&(N=bn(N,this.bias.read(),this.dataFormat)),this.activation!==null&&(N=this.activation.apply(N)),N})}computeOutputShape(e){e=tt(e);let t=e.slice(),n,o,s,a;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3,a=4):(n=4,o=1,s=2,a=3);let i=this.kernelSize[0],p=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],m=this.strides[1],c=this.strides[2];return t[n]=this.filters,t[o]=Ka(t[o],l,i,this.padding),t[s]=Ka(t[s],m,p,this.padding),t[a]=Ka(t[a],c,u,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};$f.className="Conv3DTranspose";ne.registerClass($f);var ES=class extends Il{constructor(e,t){super(e,t);this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform";this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform";this.depthwiseKernel=null;this.pointwiseKernel=null;if(t.filters==null)throw new O("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new O("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new O(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=xt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=St(t.depthwiseRegularizer),this.depthwiseConstraint=jt(t.depthwiseConstraint),this.pointwiseInitializer=xt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=St(t.pointwiseRegularizer),this.pointwiseConstraint=jt(t.pointwiseConstraint)}build(e){if(e=tt(e),e.length<this.rank+2)throw new O(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new O(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],o=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let i=0;i<this.rank;++i)s.push(1);s.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Pt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return z(()=>{e=Oe(e);let n;if(this.rank===1)throw new Pe("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Ge(e,[0,2,3,1])),n=Rk(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=bn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Ge(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Dt(this.depthwiseInitializer),e.pointwiseInitializer=Dt(this.pointwiseInitializer),e.depthwiseRegularizer=ht(this.depthwiseRegularizer),e.pointwiseRegularizer=ht(this.pointwiseRegularizer),e.depthwiseConstraint=qt(this.depthwiseConstraint),e.pointwiseConstraint=qt(this.pointwiseConstraint),e}};ES.className="SeparableConv";var Bf=class extends ES{constructor(e){super(2,e)}};Bf.className="SeparableConv2D";ne.registerClass(Bf);var $S=class extends Il{constructor(e){super(1,e);$S.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!ry(e.kernelSize,"number",1,1))throw new O(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},Of=$S;Of.className="Conv1D";ne.registerClass(Of);var zf=class extends Ke{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return z(()=>{if(e=Oe(e),this.dataFormat==="channelsLast"){let n=af(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return af(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=af(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return af(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};zf.className="Cropping2D";ne.registerClass(zf);var Gf=class extends Ke{constructor(e){super(e);this.DEFAULT_SIZE=[2,2];this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Wt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,KP(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return z(()=>{let n=Oe(e),o=n.shape;if(this.dataFormat==="channelsFirst"){n=Ge(n,[0,2,3,1]);let s=this.size[0]*o[2],a=this.size[1]*o[3],i=this.interpolation==="nearest"?fn.resizeNearestNeighbor(n,[s,a]):fn.resizeBilinear(n,[s,a]);return Ge(i,[0,3,1,2])}else{let s=this.size[0]*o[1],a=this.size[1]*o[2];return this.interpolation==="nearest"?fn.resizeNearestNeighbor(n,[s,a]):fn.resizeBilinear(n,[s,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Gf.className="UpSampling2D";ne.registerClass(Gf);function uJ(r,e,t=[1,1],n="valid",o,s){return z(()=>{o==null&&(o=gn()),Wt(o);let a=Uf(r,o);if(r.rank!==4)throw new O(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(e.rank!==4)throw new O(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=iu(a,e,t,n==="same"?"same":"valid","NHWC",s),o==="channelsFirst"&&(a=Ge(a,[0,3,1,2])),a})}var Wf=class extends Tc{constructor(e){super(2,e);this.depthwiseKernel=null;this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=xt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=jt(e.depthwiseConstraint),this.depthwiseRegularizer=St(e.depthwiseRegularizer)}build(e){if(e=tt(e),e.length<4)throw new O(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new O(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],o=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return z(()=>{e=Oe(e);let n=uJ(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=bn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Rn(t,this.kernelSize[0],this.padding,this.strides[0]),a=Rn(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],o,s,a]:[e[0],s,a,o]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Dt(this.depthwiseInitializer),e.depthwiseRegularizer=ht(this.depthwiseRegularizer),e.depthwiseConstraint=qt(this.depthwiseRegularizer),e}};Wf.className="DepthwiseConv2D";ne.registerClass(Wf);function BS(r,e,t,n){if(Array.isArray(r)){if(e!=null||t!=null)throw new O("When inputs is an array, neither initialState or constants should be provided");n!=null&&(t=r.slice(r.length-n,r.length),r=r.slice(0,r.length-n)),r.length>1&&(e=r.slice(1,r.length)),r=r[0]}function o(s){return s==null||Array.isArray(s)?s:[s]}return e=o(e),t=o(t),{inputs:r,initialState:e,constants:t}}function OS(r,e,t,n=!1,o,s,a=!1,i=!1){return z(()=>{let p=e.shape.length;if(p<3)throw new O(`Input should be at least 3D, but is ${p}D.`);let u=[1,0].concat(Jr(2,p));if(e=Ge(e,u),s!=null)throw new Pe("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=te(te(o,"bool"),"float32"),o.rank===p-1&&(o=Nr(o,-1)),o=Ge(o,u)),n&&(e=gr(e,0),o!=null&&(o=gr(o,0)));let l=[],m,c=t,d=e.shape[0],f=_r(e),h;o!=null&&(h=_r(o));for(let y=0;y<d;++y){let T=f[y],x=z(()=>r(T,c));if(o==null)m=x[0],c=x[1];else{let I=z(()=>{let k=h[y],N=pe(Dr(k),k),P=Q(L(x[0],k),L(c[0],N)),F=c.map((E,$)=>Q(L(x[1][$],k),L(E,N)));return{output:P,newStates:F}});m=I.output,c=I.newStates}i&&l.push(m)}let g;return i&&(g=mr(l,1)),[m,g,c]})}var zS=class extends Ke{constructor(e){super(e);let t;if(e.cell==null)throw new O("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Cc({cells:e.cell}):t=e.cell,t.stateSize==null)throw new O("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Pt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Jr(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){cy(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],o;if(this.returnSequences?o=[e[0],e[1],n]:o=[e[0],n],this.returnState){let s=[];for(let a of t)s.push([e[0],a]);return[o].concat(s)}else return o}computeMask(e,t){return z(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let o=this.states.map(s=>null);return[n].concat(o)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Pe("Constants support is not implemented in RNN yet.");cy(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,o=e.slice(2);this.inputSpec[0]=new Pt({shape:[n,null,...o]});let s=[e[0]].concat(e.slice(2));this.cell.build(s);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!b.arraysEqual(this.stateSpec.map(i=>i.shape[i.shape.length-1]),a))throw new O(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(i=>new Pt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){z(()=>{if(!this.stateful)throw new Xn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>bt([n,o])):this.states_=[bt([n,this.cell.stateSize])];else if(e==null)Me(this.states_),this.keptStates!=null&&(Me(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>bt([n,o])):this.states_[0]=bt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Me(this.states_);for(let o=0;o<this.states_.length;++o){let s=e[o],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,i=[n,a];if(!b.arraysEqual(s.shape,i))throw new O(`State ${o} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[o]=s}}this.states_=this.states_.map(o=>Ut(o.clone()))})}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=BS(e,n,o,this.numConstants);e=s.inputs,n=s.initialState,o=s.constants;let a=[],i=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let u of n)this.stateSpec.push(new Pt({shape:u.shape}));i=i.concat(this.stateSpec)}if(o!=null&&(t.constants=o,a=a.concat(o),this.numConstants=o.length),a[0]instanceof Tn){let u=[e].concat(a),l=this.inputSpec.concat(i),m=this.inputSpec;this.inputSpec=l;let c=super.apply(u,t);return this.inputSpec=m,c}else return super.apply(e,t)}call(e,t){return z(()=>{let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;e=Oe(e),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new O(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:o},u=OS((f,h)=>{let g=this.cell.call([f].concat(h),i);return[g[0],g.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=u[0],m=u[1],c=u[2];this.stateful&&this.resetStates(c,o);let d=this.returnSequences?m:l;return this.returnState?[d].concat(c):d})}getInitialState(e){return z(()=>{let t=bt(e.shape);return t=fe(t,[1,2]),t=gu(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?py(t,[1,n]):t):this.cell.stateSize>1?[py(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===zS.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let o=t.cell,s=xn(o,n);return new e(Object.assign(t,{cell:s}))}},Us=zS;Us.className="RNN";ne.registerClass(Us);var pp=class extends Ke{},xc=class extends pp{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,nr(this.units,"units"),this.activation=Wa(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=xt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=St(e.kernelRegularizer),this.recurrentRegularizer=St(e.recurrentRegularizer),this.biasRegularizer=St(e.biasRegularizer),this.kernelConstraint=jt(e.kernelConstraint),this.recurrentConstraint=jt(e.recurrentConstraint),this.biasConstraint=jt(e.biasConstraint),this.dropout=dl([1,Oa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=dl([1,Oa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=tt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return z(()=>{if(e=e,e.length!==2)throw new O(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let o=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=bu({ones:()=>Dr(e),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=bu({ones:()=>Dr(n),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));let s,a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?s=zs(L(e,a),this.kernel.read()):s=zs(e,this.kernel.read()),this.bias!=null&&(s=bn(s,this.bias.read())),i!=null&&(n=L(n,i));let p=Q(s,zs(n,this.recurrentKernel.read()));return this.activation!=null&&(p=this.activation.apply(p)),[p,p]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ua(this.activation),useBias:this.useBias,kernelInitializer:Dt(this.kernelInitializer),recurrentInitializer:Dt(this.recurrentInitializer),biasInitializer:Dt(this.biasInitializer),kernelRegularizer:ht(this.kernelRegularizer),recurrentRegularizer:ht(this.recurrentRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:qt(this.kernelConstraint),recurrentConstraint:qt(this.recurrentConstraint),biasConstraint:qt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};xc.className="SimpleRNNCell";ne.registerClass(xc);var Kf=class extends Us{constructor(e){e.cell=new xc(e);super(e)}call(e,t){return z(()=>{this.cell.dropoutMask!=null&&(Me(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return new e(t)}};Kf.className="SimpleRNN";ne.registerClass(Kf);var Ic=class extends pp{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.resetAfter)throw new O("GRUCell does not support reset_after parameter set to true.");this.units=e.units,nr(this.units,"units"),this.activation=Wa(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Wa(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=xt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=St(e.kernelRegularizer),this.recurrentRegularizer=St(e.recurrentRegularizer),this.biasRegularizer=St(e.biasRegularizer),this.kernelConstraint=jt(e.kernelConstraint),this.recurrentConstraint=jt(e.recurrentConstraint),this.biasConstraint=jt(e.biasConstraint),this.dropout=dl([1,Oa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=dl([1,Oa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=tt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return z(()=>{if(e=e,e.length!==2)throw new O(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=bu({ones:()=>Dr(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=bu({ones:()=>Dr(o),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,a=this.recurrentDropoutMask,i,p,u;0<this.dropout&&this.dropout<1&&(e=L(e,s[0]));let l=zs(e,this.kernel.read());this.useBias&&(l=bn(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=L(o,a[0]));let m=this.recurrentKernel.read(),[c,d]=kr(m,[2*this.units,this.units],m.rank-1),f=zs(o,c),[h,g,y]=kr(l,3,l.rank-1),[T,x]=kr(f,2,f.rank-1);i=this.recurrentActivation.apply(Q(h,T)),p=this.recurrentActivation.apply(Q(g,x));let I=zs(L(p,o),d);u=this.activation.apply(Q(y,I));let k=Q(L(i,o),L(Q(1,et(i)),u));return[k,k]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ua(this.activation),recurrentActivation:Ua(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Dt(this.kernelInitializer),recurrentInitializer:Dt(this.recurrentInitializer),biasInitializer:Dt(this.biasInitializer),kernelRegularizer:ht(this.kernelRegularizer),recurrentRegularizer:ht(this.recurrentRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:qt(this.kernelConstraint),recurrentConstraint:qt(this.recurrentConstraint),biasConstraint:qt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};Ic.className="GRUCell";ne.registerClass(Ic);var Vf=class extends Us{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ic(e);super(e)}call(e,t){return z(()=>{this.cell.dropoutMask!=null&&(Me(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Vf.className="GRU";ne.registerClass(Vf);var up=class extends pp{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,nr(this.units,"units"),this.activation=Wa(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Wa(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=xt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=St(e.kernelRegularizer),this.recurrentRegularizer=St(e.recurrentRegularizer),this.biasRegularizer=St(e.biasRegularizer),this.kernelConstraint=jt(e.kernelConstraint),this.recurrentConstraint=jt(e.recurrentConstraint),this.biasConstraint=jt(e.biasConstraint),this.dropout=dl([1,Oa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=dl([1,Oa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var o;e=tt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let n;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,a=this.units;n=new(o=class extends En{apply(p,u){let l=s.apply([a]),m=new gl().apply([a]),c=s.apply([a*2]);return Jk(Jk(l,m),c)}},o.className="CustomInit",o)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return z(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new O(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1],s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=bu({ones:()=>Dr(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=bu({ones:()=>Dr(o),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,i=this.recurrentDropoutMask,p,u,l,m;0<this.dropout&&this.dropout<1&&(e=L(e,a[0]));let c=zs(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=L(o,i[0])),c=Q(c,zs(o,this.recurrentKernel.read())),this.useBias&&(c=bn(c,this.bias.read()));let[d,f,h,g]=kr(c,4,c.rank-1);p=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(f),l=Q(L(u,s),L(p,this.activation.apply(h))),m=this.recurrentActivation.apply(g);let y=L(m,this.activation.apply(l));return[y,y,l]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ua(this.activation),recurrentActivation:Ua(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Dt(this.kernelInitializer),recurrentInitializer:Dt(this.recurrentInitializer),biasInitializer:Dt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ht(this.kernelRegularizer),recurrentRegularizer:ht(this.recurrentRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:qt(this.kernelConstraint),recurrentConstraint:qt(this.recurrentConstraint),biasConstraint:qt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};up.className="LSTMCell";ne.registerClass(up);var Hf=class extends Us{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new up(e);super(e)}call(e,t){return z(()=>{this.cell.dropoutMask!=null&&(Me(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Hf.className="LSTM";ne.registerClass(Hf);var Cc=class extends pp{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return z(()=>{e=e;let n=e.slice(1),o=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?o.push(n.splice(0,i.stateSize.length)):o.push(n.splice(0,1));o.reverse();let s=[],a;for(let i=0;i<this.cells.length;++i){let p=this.cells[i];n=o[i],i===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=p.call(a,t),s.push(a.slice(1))}n=[];for(let i of s.slice().reverse())n.push(...i);return[a[0]].concat(n)})}build(e){cy(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,o)=>{Ba(`RNNCell_${o}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=s=>({className:s.getClassName(),config:s.getConfig()}),o={cells:this.cells.map(t)};return{...e,...o}}static fromConfig(e,t,n={}){let o=[];for(let s of t.cells)o.push(xn(s,n));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return hf(e)}setWeights(e){let t=[];for(let n of this.cells){let o=n.weights.length,s=e.splice(o);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],s[a]])}lc(t)}};Cc.className="StackedRNNCells";ne.registerClass(Cc);function bu(r){let{ones:e,rate:t,training:n=!1,count:o=1,dropoutFunc:s}=r,a=()=>s!=null?s(e(),t):my(e(),t),i=()=>np(a,e,n);return!o||o<=1?Ut(i().clone()):Array(o).fill(void 0).map(i).map(u=>Ut(u.clone()))}var GS=class extends Us{constructor(e){if(e.unroll)throw new Pe("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Pe("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Pt({ndim:5})]}call(e,t){return z(()=>{if(this.cell.dropoutMask!=null&&(Me(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Me(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new O("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return z(()=>{let{stateSize:t}=this.cell,n=e.shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)],a=bt(s);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){z(()=>{if(!this.stateful)throw new Xn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)];if(n[0]==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>bt(s)):this.states_=[bt(s)];else if(e==null)Me(this.states_),this.keptStates!=null&&(Me(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>bt(s)):this.states_[0]=bt(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Me(this.states_);for(let i=0;i<this.states_.length;++i){let p=e[i],u=s;if(!b.arraysEqual(p.shape,u))throw new O(`State ${i} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${p.shape}`);this.states_[i]=p}}this.states_=this.states_.map(i=>Ut(i.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:o,padding:s,strides:a,dilationRate:i}=this.cell,p=t==="channelsFirst",u=e[p?3:2],l=e[p?4:3],m=Rn(u,o[0],s,a[0],i[0]),c=Rn(l,o[1],s,a[1],i[1]);return[...e.slice(0,2),...p?[n,m,c]:[m,c,n]]}};GS.className="ConvRNN2D";var kc=class extends up{constructor(e){let{filters:t,kernelSize:n,strides:o,padding:s,dataFormat:a,dilationRate:i}=e;super({...e,units:t});this.filters=t,nr(this.filters,"filters"),this.kernelSize=ip(n,2,"kernelSize"),this.kernelSize.forEach(p=>nr(p,"kernelSize")),this.strides=ip(o||1,2,"strides"),this.strides.forEach(p=>nr(p,"strides")),this.padding=s||"valid",hn(this.padding),this.dataFormat=a||"channelsLast",Wt(this.dataFormat),this.dilationRate=ip(i||1,2,"dilationRate"),this.dilationRate.forEach(p=>nr(p,"dilationRate"))}build(e){var i;e=tt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=4,s=this.kernelSize.concat([n,this.filters*o]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let a=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let p;if(this.unitForgetBias){let u=this.biasInitializer,l=this.filters;p=new(i=class extends En{apply(c,d){let f=u.apply([l]),h=lr([l]),g=u.apply([l*2]);return ec([f,h,g])}},i.className="CustomInit",i)}else p=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,p,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return z(()=>{if(e.length!==3)throw new O(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,o=e[0],s=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=bu({ones:()=>Dr(o),rate:this.dropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let p=this.dropoutMask,u=(se,ae,le)=>!ae||!ae[le]?se:L(ae[le],se),l=u(o,p,0),m=u(o,p,1),c=u(o,p,2),d=u(o,p,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=bu({ones:()=>Dr(s),rate:this.recurrentDropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let f=this.recurrentDropoutMask,h=u(s,f,0),g=u(s,f,1),y=u(s,f,2),T=u(s,f,3),x=3,[I,k,N,P]=kr(this.kernel.read(),i,x),[F,E,$,U]=this.useBias?kr(this.bias.read(),i):[null,null,null,null];l=this.inputConv(l,I,F,this.padding),m=this.inputConv(m,k,E,this.padding),c=this.inputConv(c,N,$,this.padding),d=this.inputConv(d,P,U,this.padding);let[W,V,H,q]=kr(this.recurrentKernel.read(),i,x);h=this.recurrentConv(h,W),g=this.recurrentConv(g,V),y=this.recurrentConv(y,H),T=this.recurrentConv(T,q);let Y=this.recurrentActivation.apply(Q(l,h)),ee=this.recurrentActivation.apply(Q(m,g)),j=Q(L(ee,a),L(Y,this.activation.apply(Q(c,y)))),re=L(this.recurrentActivation.apply(Q(d,T)),this.activation.apply(j));return[re,re,j]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,o){let s=qn(e,t,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?bn(s,n,this.dataFormat):s}recurrentConv(e,t){return qn(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};kc.className="ConvLSTM2DCell";ne.registerClass(kc);var qf=class extends GS{constructor(e){let t=new kc(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};qf.className="ConvLSTM2D";ne.registerClass(qf);var Sc=class extends Ke{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let o=0;o<this.noiseShape.length;++o)n.push(this.noiseShape[o]==null?t[o]:this.noiseShape[o]);return n}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=Oe(e);if(0<this.rate&&this.rate<1){let o=t.training==null?!1:t.training,s=this.getNoiseShape(n);return np(()=>my(n,this.rate,s,this.seed),()=>n,o)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Sc.className="Dropout";ne.registerClass(Sc);var jf=class extends Sc{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};jf.className="SpatialDropout1D";ne.registerClass(jf);var Xf=class extends Ke{constructor(e){super(e);this.activation=null;this.useBias=!0;this.kernel=null;this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,nr(this.units,"units"),this.activation=Wa(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=xt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=xt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=jt(e.kernelConstraint),this.biasConstraint=jt(e.biasConstraint),this.kernelRegularizer=St(e.kernelRegularizer),this.biasRegularizer=St(e.biasRegularizer),this.activityRegularizer=St(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=tt(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=tt(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=ny(this.activation.getClassName()),s;return o!=null?s=zs(n,this.kernel.read(),o,this.bias?this.bias.read():null):(s=zs(n,this.kernel.read()),this.bias!=null&&(s=bn(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let e={units:this.units,activation:Ua(this.activation),useBias:this.useBias,kernelInitializer:Dt(this.kernelInitializer),biasInitializer:Dt(this.biasInitializer),kernelRegularizer:ht(this.kernelRegularizer),biasRegularizer:ht(this.biasRegularizer),activityRegularizer:ht(this.activityRegularizer),kernelConstraint:qt(this.kernelConstraint),biasConstraint:qt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Xf.className="Dense";ne.registerClass(Xf);var Yf=class extends Ke{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=tt(e);for(let t of e.slice(1))if(t==null)throw new O(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Os(e,1)]}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=Oe(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let o=[0];for(let s=2;s<n.rank;++s)o.push(s);o.push(1),n=Ge(n,o)}return XP(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Yf.className="Flatten";ne.registerClass(Yf);var Qf=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.activation=Wa(e.activation)}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=Oe(e);return this.activation.apply(n)})}getConfig(){let e={activation:Ua(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Qf.className="Activation";ne.registerClass(Qf);var Zf=class extends Ke{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return z(()=>(e=Oe(e),qP(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Zf.className="RepeatVector";ne.registerClass(Zf);var Jf=class extends Ke{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",o=t.slice(),s=1,a=null;for(let p=0;p<o.length;++p){let u=o[p];if(this.isUnknown(u))if(a===null)a=p;else throw new O("Can only specifiy one unknown dimension.");else s*=u}let i=Os(e);if(a!==null){if(s===0||i%s!==0)throw new O(n);o[a]=i/s}else if(i!==s)throw new O(n);return o}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=n.shape,s=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return _(n,s)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Jf.className="Reshape";ne.registerClass(Jf);var eh=class extends Ke{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Jr(1,e.dims.length+1);if(!b.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Pt({ndim:this.dims.length+1})]}computeOutputShape(e){e=tt(e);let t=e.slice();return this.dims.forEach((n,o)=>{t[o+1]=e[n]}),t}call(e,t){return Ge(Oe(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};eh.className="Permute";ne.registerClass(eh);var th=class extends Ke{constructor(e){super(e??{});this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Oe(e),o=-1;return Um(di(n,this.maskValue),o)}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=Oe(e),o=-1,s=!0,a=Um(di(n,this.maskValue),o,s);return L(n,te(a,n.dtype))})}};th.className="Masking";ne.registerClass(th);var rh=class extends Ke{constructor(e){super(e);this.embeddings=null;this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform";if(e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(kt(e.inputLength))}this.inputDim=e.inputDim,nr(this.inputDim,"inputDim"),this.outputDim=e.outputDim,nr(this.outputDim,"outputDim"),this.embeddingsInitializer=xt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=St(e.embeddingsRegularizer),this.activityRegularizer=St(e.activityRegularizer),this.embeddingsConstraint=jt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return z(()=>this.maskZero?(e=Oe(e),di(e,Ne(e))):null)}computeOutputShape(e){if(e=tt(e),this.inputLength==null)return[...e,this.outputDim];let t=kt(this.inputLength);if(t.length!==e.length-1)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let o=0;o<t.length;++o){let s=t[o],a=e[o+1];if(s!=null&&a!=null&&s!==a)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);s==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=Oe(e);n.dtype!=="int32"&&(n=fl(n,"int32"));let o=ly(this.embeddings.read(),_(n,[n.size]));return _(o,tt(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Dt(this.embeddingsInitializer),embeddingsRegularizer:ht(this.embeddingsRegularizer),activityRegularizer:ht(this.activityRegularizer),embeddingsConstraint:qt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};rh.className="Embedding";ne.registerClass(rh);var lp=class extends Ke{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Pe}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let o=0;o<t.length;++o){let s=e[e.length-t.length+o],a=t[o];if(s==null||a==null||s<0||a<0)n.push(null);else if(s===1)n.push(a);else if(a===1)n.push(s);else{if(s!==a)throw new O("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[tt(e)]),e=e,e.length<2)throw new O(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let s of e)s!=null&&s[0]!==null&&t.push(s[0]);if(t=Bs(t),t.length>1)throw new O(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let s=1;s<e.length;++s){let a=e[s]==null?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let o=e.map(s=>s.length);e.indexOf(null)===-1&&Bs(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return z(()=>{if(e=e,this.reshapeRequired){let n=[],o=e.map(s=>s.rank);if(o.indexOf(null)===-1){let s=Oa(o);for(let a of e){let i=a.rank;for(let p=0;p<s-i;++p)a=gu(a,1);n.push(a)}return this.mergeFunction(n)}else{let s=!1;for(let p of e){let u=p.rank;if(u==null){let l=p.shape,m=l[0],c=l.slice(1).concat([m]),d=_(p,[m].concat(Os(l.slice(1))));d=Ge(d,[1,0]),d=_(d,c),n.push(d),s=!0}else if(u>1){let l=Jr(1,u).concat([0]);n.push(Ge(p,l)),s=!0}else n.push(p)}let a=this.mergeFunction(n),i=a.rank;if(s){if(i==null){let p=a.shape,u=p.length,l=p[u-1],m=[l].concat(p.slice(0,p.length-1));a=_(Ge(_(a,[-1,l]),[1,0]),m)}else if(i>1){let p=[i-1].concat(Jr(0,i-1));a=Ge(a,p)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let o=1;o<e.length;++o){let s=e[o]==null?null:e[o].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(let o of e)o!=null&&o[0]!==null&&n.push(o[0]);return n=Bs(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return z(()=>{if(t==null)return null;if(!Array.isArray(t))throw new O("`mask` should be an Array");if(!Array.isArray(e))throw new O("`inputs` should be an Array");if(t.length!==e.length)throw new O(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(o=>o==null))return null;t=t.map(o=>o==null?o:Nr(o,0));let n=t[0];for(let o=1;o<t.length-1;++o)n=Ur(n,t[o]);return n})}},oh=class extends lp{constructor(e){super(e)}mergeFunction(e){return z(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Q(t,e[n]);return t})}};oh.className="Add";ne.registerClass(oh);var sh=class extends lp{constructor(e){super(e)}mergeFunction(e){return z(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=L(t,e[n]);return t})}};sh.className="Multiply";ne.registerClass(sh);var ah=class extends lp{constructor(e){super(e)}mergeFunction(e){return z(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Q(t,e[n]);return L(1/e.length,t)})}};ah.className="Average";ne.registerClass(ah);var ih=class extends lp{constructor(e){super(e)}mergeFunction(e){return z(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=jn(t,e[n]);return t})}};ih.className="Maximum";ne.registerClass(ih);var uh=class extends lp{constructor(e){super(e)}mergeFunction(e){return z(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=lu(t,e[n]);return t})}};uh.className="Minimum";ne.registerClass(uh);var ph=class extends lp{constructor(e){super(e);this.DEFAULT_AXIS=-1;e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new O("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let o of e)if(o!=null){t=!1;break}if(t)return;let n=[];for(let o=0;o<e.length;++o){let s=e[o].slice();s.splice(this.axis,1);let a=!1;for(let i of n)if(b.arraysEqual(i,s)){a=!0;break}a||n.push(s)}if(n.length>1)throw new O("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return z(()=>ec(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new O("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),o=this.axis<0?n.length+this.axis:this.axis;for(let s of t.slice(1)){if(n[o]==null||s[o]==null){n[o]=null;break}n[o]+=s[o]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new O("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new O("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new O(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return z(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let o=[];for(let a=0;a<e.length;++a)t[a]==null?o.push(te(Dr(e[a]),"bool")):t[a].rank<e[a].rank?o.push(Nr(t[a],-1)):o.push(t[a]);let s=pt(o,this.axis);return Dd(s,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};ph.className="Concatenate";ne.registerClass(ph);function nh(r,e){for(;r<0;)r+=e;return r}function pJ(r,e,t){if(r.shape.length>3||e.shape.length>3)throw new Pe("batchDot is not implemented for tensors of 4D or higher rank yet");if(b.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),b.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),r.dtype==="complex64"||e.dtype==="complex64")throw new Pe("batchDot is not implemented for complex64-type Tensors yet.");let n=r.shape.length,o=e.shape.length;t==null&&(t=[n-1,o-2]);let s=t;return z(()=>{let a;if(n>o){a=n-o;let p=[];for(let u=0;u<a;++u)p.push(1);e=_(e,e.shape.concat(p))}else if(o>n){a=o-n;let p=[];for(let u=0;u<a;++u)p.push(1);r=_(r,r.shape.concat(p))}else a=0;let i;if(r.shape.length===2&&e.shape.length===2)s[0]===s[1]?i=fe(L(r,e),s[0]):i=fe(L(Ge(r,[1,0]),e),s[1]);else{let p=s[0]!==r.shape.length-1,u=s[1]===e.shape.length-1;i=He(r,e,p,u)}if(a>0){let p;n>o?p=n+o-3:p=n-1;let u=[];for(let l=p;l<p+a;++l)u.push(l);i=dn(i,u)}return i.shape.length===1&&(i=Nr(i,1)),i})}var lh=class extends lp{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){b.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Pe("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);if(t[o[0]]!==n[o[1]])throw new O(`Dimension incompatibility: ${t[o[0]]} !== ${n[o[1]]}`)}mergeFunction(e){if(e.length!==2)throw new O(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],o;return Array.isArray(this.axes)?o=this.axes.map((s,a)=>nh(s,e[a].shape.length)):o=[nh(this.axes,t.shape.length),nh(this.axes,n.shape.length)],this.normalize&&(t=If(t,o[0]),n=If(n,o[1])),pJ(t,n,o)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[nh(this.axes,e.length),nh(this.axes,t.length)],n}computeOutputShape(e){b.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Pe("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);t.splice(o[0],1),n.splice(o[1],1),n.splice(0,1);let s=t.concat(n);return s.length===1&&s.push(1),s}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};lh.className="Dot";ne.registerClass(lh);var mh=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=Oe(e);return np(()=>Q(tc(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};mh.className="GaussianNoise";ne.registerClass(mh);var ch=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return z(()=>{this.invokeCallHook(e,t);let n=Oe(e);return this.rate>0&&this.rate<1?np(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return L(n,tc(n.shape,1,s))},()=>n,t.training||!1):n})}};ch.className="GaussianDropout";ne.registerClass(ch);var dh=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Oe(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return z(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return np(()=>{let s=Oe(e),a=1.6732632423543772,i=1.0507009873554805,p=-a*i,u=Zo(La(n),this.rate);u=fl(u,"float32");let l=((1-this.rate)*(1+this.rate*p**2))**-.5,m=-l*p*this.rate,c=Q(L(s,u),L(Q(u,-1),p));return Q(L(c,l),m)},()=>Oe(e),t.training||!1)}return e})}};dh.className="AlphaDropout";ne.registerClass(dh);function fh(r,e,t,n,o,s=.001){let a;if(r.rank===2)a=YC(r,e,t,n,o,s);else if(r.rank===3)a=QC(r,e,t,n,o,s);else if(r.rank===4)a=ZC(r,e,t,n,o,s);else throw new Pe(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return a}function lJ(r,e,t,n,o=.001){return z(()=>{let s=jm(r,n),a=s.mean,i=s.variance;return[fh(r,a,i,t,e,o),a,i]})}function mJ(r,e,t,n,o=.001){return z(()=>{let s=jm(r,n),a=s.mean,i=s.variance,p=[];for(let f of Jr(0,r.rank))n.indexOf(f)!==-1?p.push(1):p.push(r.shape[f]);let u=_(a,p),l=_(i,p),m=e==null?null:_(e,p),c=t==null?null:_(t,p);return[fh(r,u,l,c,m,o),a,i]})}function cJ(r,e,t,n,o=.001){return b.arraysEqual(n.slice().sort(),Jr(0,r.rank-1))?lJ(r,e,t,n,o):mJ(r,e,t,n,o)}var hh=class extends Ke{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=xt(e.betaInitializer||"zeros"),this.gammaInitializer=xt(e.gammaInitializer||"ones"),this.movingMeanInitializer=xt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=xt(e.movingVarianceInitializer||"ones"),this.betaConstraint=jt(e.betaConstraint),this.gammaConstraint=jt(e.gammaConstraint),this.betaRegularizer=St(e.betaRegularizer),this.gammaRegularizer=St(e.gammaRegularizer)}build(e){e=tt(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new O(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Pt({ndim:e.length,axes:{[t]:n}})];let o=[n];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return z(()=>{let n=t.training==null?!1:t.training,o=Oe(e),s=o.shape,a=s.length,i=Jr(0,a),p=this.axis>=0?this.axis:this.axis+a;i.splice(p,1);let u=_s(1,a);u[p]=s[p];let l=i.slice();l.sort();let m=!b.arraysEqual(l,Jr(0,a).slice(0,a-1)),c=()=>{if(m){let T=_(this.movingMean.read(),u),x=_(this.movingVariance.read(),u),I=this.center?_(this.beta.read(),u):null,k=this.scale?_(this.gamma.read(),u):null;return fh(o,T,x,I,k,this.epsilon)}else return fh(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return c();let[d,f,h]=cJ(o,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(T,x,I)=>{z(()=>{let k=1-I,N=T.read(),P=L(pe(N,x),k);T.write(pe(N,P))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,h,this.momentum)})(),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Dt(this.betaInitializer),gammaInitializer:Dt(this.gammaInitializer),movingMeanInitializer:Dt(this.movingMeanInitializer),movingVarianceInitializer:Dt(this.movingVarianceInitializer),betaRegularizer:ht(this.betaRegularizer),gammaRegularizer:ht(this.gammaRegularizer),betaConstraint:qt(this.betaConstraint),gammaConstraint:qt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};hh.className="BatchNormalization";ne.registerClass(hh);var gh=class extends Ke{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=xt(e.betaInitializer||"zeros"),this.gammaInitializer=xt(e.gammaInitializer||"ones"),this.betaRegularizer=St(e.betaRegularizer),this.gammaRegularizer=St(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=tt(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(let s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==Bs(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(s=>e[s]),o=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(e,t){let n=Oe(e),o=n.shape,s=o.length;return z(()=>{let{mean:i,variance:p}=jm(n,this.axis,!0),u=_s(1,s);for(let h of this.axis)u[h]=o[h];let l=h=>h!=null&&h.shape.length!==s?_(h,u):h,m=l(this.gamma.read()),c=l(this.beta.read()),d=[],f=[];for(let h=0;h<s;++h)this.axis.indexOf(h)!==-1?(d.push(o[h]),f.push(1)):(d.push(1),f.push(o[h]));return i=Gr(i,d),p=Gr(p,d),m=Gr(m,f),c=Gr(c,f),fh(n,i,p,c,m,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Dt(this.betaInitializer),gammaInitializer:Dt(this.gammaInitializer),betaRegularizer:ht(this.betaRegularizer),gammaRegularizer:ht(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};gh.className="LayerNormalization";ne.registerClass(gh);function dJ(r,e,t){return z(()=>{if(r.rank!==4)throw new O(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new O("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=gn()),t!=="channelsLast"&&t!=="channelsFirst")throw new O(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return t==="channelsFirst"?n=[[0,0],[0,0],e[0],e[1]]:n=[[0,0],e[0],e[1],[0,0]],Mn(r,n)})}var bh=class extends Ke{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?gn():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new O(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new O(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new O(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Pt({ndim:4})]}computeOutputShape(e){e=tt(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return z(()=>dJ(Oe(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};bh.className="ZeroPadding2D";ne.registerClass(bh);function Ry(r,e,t,n,o,s){return z(()=>{Wt(o),Xk(s),hn(n),t==null&&(t=[1,1]),n==null&&(n="valid"),o==null&&(o=gn()),s==null&&(s="max"),r=Uf(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=jp(r,e,t,i):a=zp(r,e,t,i),o==="channelsFirst"&&(a=Ge(a,[0,3,1,2])),a})}function EE(r,e,t,n,o,s){return z(()=>{Wt(o),Xk(s),hn(n),t==null&&(t=[1,1,1]),n==null&&(n="valid"),o==null&&(o=gn()),s==null&&(s="max"),r=RS(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=Gd(r,e,t,i):a=Pd(r,e,t,i),o==="channelsFirst"&&(a=Ge(a,[0,4,1,2,3])),a})}var US=class extends Ke{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new O(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(nr(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new O(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);nr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,hn(this.padding),this.inputSpec=[new Pt({ndim:3})]}computeOutputShape(e){e=tt(e);let t=Rn(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return z(()=>{this.invokeCallHook(e,t),e=gu(Oe(e),2);let n=this.poolingFunction(Oe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return dn(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},yh=class extends US{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Wt(s),hn(o),Ry(e,t,n,o,s,"max")}};yh.className="MaxPooling1D";ne.registerClass(yh);var Th=class extends US{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Wt(s),hn(o),Ry(e,t,n,o,s,"avg")}};Th.className="AveragePooling1D";ne.registerClass(Th);var WS=class extends Ke{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new O(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];nr(this.poolSize,"poolSize"),nr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Wt(this.dataFormat),hn(this.padding),this.inputSpec=[new Pt({ndim:4})]}computeOutputShape(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Rn(t,this.poolSize[0],this.padding,this.strides[0]),n=Rn(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return z(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},xh=class extends WS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Wt(s),hn(o),Ry(e,t,n,o,s,"max")}};xh.className="MaxPooling2D";ne.registerClass(xh);var Ih=class extends WS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Wt(s),hn(o),Ry(e,t,n,o,s,"avg")}};Ih.className="AveragePooling2D";ne.registerClass(Ih);var KS=class extends Ke{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new O(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];nr(this.poolSize,"poolSize"),nr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Wt(this.dataFormat),hn(this.padding),this.inputSpec=[new Pt({ndim:5})]}computeOutputShape(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Rn(t,this.poolSize[0],this.padding,this.strides[0]),n=Rn(n,this.poolSize[1],this.padding,this.strides[1]),o=Rn(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,o]:[e[0],t,n,o,e[4]]}call(e,t){return z(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Ch=class extends KS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Wt(s),hn(o),EE(e,t,n,o,s,"max")}};Ch.className="MaxPooling3D";ne.registerClass(Ch);var kh=class extends KS{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Wt(s),hn(o),EE(e,t,n,o,s,"avg")}};kh.className="AveragePooling3D";ne.registerClass(kh);var VS=class extends Ke{constructor(e){super(e);this.inputSpec=[new Pt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Pe}},Sh=class extends VS{constructor(e){super(e||{})}call(e,t){return z(()=>{let n=Oe(e);return Rt(n,1)})}};Sh.className="GlobalAveragePooling1D";ne.registerClass(Sh);var vh=class extends VS{constructor(e){super(e||{})}call(e,t){return z(()=>{let n=Oe(e);return Yr(n,1)})}};vh.className="GlobalMaxPooling1D";ne.registerClass(vh);var HS=class extends Ke{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Wt(this.dataFormat),this.inputSpec=[new Pt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Pe}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Ah=class extends HS{call(e,t){return z(()=>{let n=Oe(e);return this.dataFormat==="channelsLast"?Rt(n,[1,2]):Rt(n,[2,3])})}};Ah.className="GlobalAveragePooling2D";ne.registerClass(Ah);var wh=class extends HS{call(e,t){return z(()=>{let n=Oe(e);return this.dataFormat==="channelsLast"?Yr(n,[1,2]):Yr(n,[2,3])})}};wh.className="GlobalMaxPooling2D";ne.registerClass(wh);var qS=class extends Ke{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let o=t.layer,s=xn(o,n);delete t.layer;let a={layer:s};return Object.assign(a,t),new e(a)}},Nh=class extends qS{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=tt(e),e.length<3)throw new O(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=tt(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),o=e[1];return[n[0],o].concat(n.slice(1))}call(e,t){return z(()=>(e=Oe(e),OS((a,i)=>[Oe(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};Nh.className="TimeDistributed";ne.registerClass(Nh);function fJ(r){bi(UP,"BidirectionalMergeMode",r)}var hJ="concat",Dh=class extends qS{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=xn(n),t.goBackwards=t.goBackwards!==!0;let o={};if(o.className=e.layer.getClassName(),o.config=t,this.backwardLayer=xn(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?hJ:e.mergeMode,fJ(this.mergeMode),e.weights)throw new Pe("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,o,s;return this.returnState&&(s=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,o=[n]):this.mergeMode==null?o=[n,n.slice()]:o=[n],this.returnState?this.mergeMode==null?o.concat(s).concat(s.slice()):[n].concat(s).concat(s.slice()):Pr(o)}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=BS(e,n,o,this.numConstants);if(e=s.inputs,n=s.initialState,o=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&o==null)return super.apply(e,t);let a=[],i=[];if(n!=null){let u=n.length;if(u%2>0)throw new O("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let l=n.map(m=>new Pt({shape:m.shape}));this.forwardLayer.stateSpec=l.slice(0,u/2),this.backwardLayer.stateSpec=l.slice(u/2),i.push(...l)}if(o!=null)throw new Pe("Support for constants in Bidirectional layers is not implemented yet.");let p=a[0]instanceof Tn;for(let u of a)if(u instanceof Tn!==p)throw new O("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(p){let u=[e].concat(a),l=this.inputSpec.concat(i),m=this.inputSpec;this.inputSpec=l;let c=super.apply(u,t);return this.inputSpec=m,c}else return super.apply(e,t)}call(e,t){return z(()=>{let n=t.initialState,o,s;if(n==null)o=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{let p=n.slice(0,n.length/2),u=n.slice(n.length/2);o=this.forwardLayer.call(e,Object.assign(t,{initialState:p})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let a;this.returnState&&(Array.isArray(o)&&(a=o.slice(1).concat(s.slice(1))),o=o[0],s=s[0]),this.returnSequences&&(s=gr(s,1));let i;return this.mergeMode==="concat"?i=ec([o,s]):this.mergeMode==="sum"?i=Q(o,s):this.mergeMode==="ave"?i=L(.5,Q(o,s)):this.mergeMode==="mul"?i=L(o,s):this.mergeMode==null&&(i=[o,s]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ba(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Ba(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let s=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(s).concat(s):[n].concat(s).concat(s)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=xn(t.layer);if(delete t.layer,t.numConstants!=null)throw new Pe("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let o=t;return o.layer=n,new e(o)}};Dh.className="Bidirectional";ne.registerClass(Dh);function gJ(r){return new yi(r)}function bJ(r){return new Ef(r)}function yJ(r){return new Pf(r)}function TJ(r){return new Mf(r)}function xJ(r){return new Ff(r)}function IJ(r){return new Lf(r)}function CJ(r){return new Rf(r)}function kJ(r){return new Of(r)}function SJ(r){return new bc(r)}function vJ(r){return new _f(r)}function AJ(r){return new yc(r)}function wJ(r){return new $f(r)}function NJ(r){return new Bf(r)}function DJ(r){return new zf(r)}function PJ(r){return new Gf(r)}function MJ(r){return new Wf(r)}function FJ(r){return new Qf(r)}function EJ(r){return new Xf(r)}function RJ(r){return new Sc(r)}function LJ(r){return new jf(r)}function _J(r){return new Yf(r)}function $J(r){return new Zf(r)}function BJ(r){return new Jf(r)}function OJ(r){return new eh(r)}function zJ(r){return new rh(r)}function GJ(r){return new oh(r)}function UJ(r){return new ah(r)}function WJ(r){return new ph(r)}function KJ(r){return new ih(r)}function VJ(r){return new uh(r)}function HJ(r){return new sh(r)}function qJ(r){return new lh(r)}function jJ(r){return new hh(r)}function XJ(r){return new gh(r)}function YJ(r){return new bh(r)}function jS(r){return new Th(r)}function QJ(r){return jS(r)}function ZJ(r){return jS(r)}function XS(r){return new Ih(r)}function JJ(r){return XS(r)}function e9(r){return XS(r)}function YS(r){return new kh(r)}function t9(r){return YS(r)}function r9(r){return YS(r)}function n9(r){return new Sh(r)}function o9(r){return new Ah(r)}function RE(r){return new vh(r)}function LE(r){return new wh(r)}function _E(r){return new yh(r)}function $E(r){return new xh(r)}function s9(r){return new Ch(r)}function a9(r){return new Vf(r)}function i9(r){return new Ic(r)}function u9(r){return new Hf(r)}function p9(r){return new up(r)}function l9(r){return new Kf(r)}function m9(r){return new xc(r)}function c9(r){return new qf(r)}function d9(r){return new kc(r)}function f9(r){return new Us(r)}function h9(r){return new Cc(r)}function g9(r){return new Dh(r)}function b9(r){return new Nh(r)}var y9=RE,T9=LE,x9=_E,I9=$E;function C9(r){return new mh(r)}function k9(r){return new ch(r)}function S9(r){return new dh(r)}function v9(r){return new th(r)}var OE={};Xe(OE,{MAPE:()=>_9,MSE:()=>O9,binaryAccuracy:()=>A9,binaryCrossentropy:()=>w9,categoricalAccuracy:()=>D9,categoricalCrossentropy:()=>P9,cosineProximity:()=>E9,mape:()=>$9,meanAbsoluteError:()=>R9,meanAbsolutePercentageError:()=>L9,meanSquaredError:()=>B9,mse:()=>z9,precision:()=>M9,recall:()=>F9,sparseCategoricalAccuracy:()=>N9});function A9(r,e){return Sf(r,e)}function w9(r,e){return Sy(r,e)}function N9(r,e){return vy(r,e)}function D9(r,e){return vf(r,e)}function P9(r,e){return Af(r,e)}function M9(r,e){return pS(r,e)}function F9(r,e){return lE(r,e)}function E9(r,e){return kf(r,e)}function R9(r,e){return cc(r,e)}function L9(r,e){return ap(r,e)}function _9(r,e){return ap(r,e)}function $9(r,e){return ap(r,e)}function B9(r,e){return xi(r,e)}function O9(r,e){return xi(r,e)}function z9(r,e){return xi(r,e)}var zE={};Xe(zE,{modelFromJSON:()=>AE});var GE={};Xe(GE,{l1:()=>U9,l1l2:()=>G9,l2:()=>W9});function G9(r){return new xl(r)}function U9(r){return PE(r)}function W9(r){return ME(r)}var QS=class extends sp{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof rs))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Ly(r,e){return r<e}function UE(r,e){return r>e}var ZS=class extends QS{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Pe("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Ly:this.mode==="max"?this.monitorFunc=UE:this.monitor.indexOf("acc")!==-1?this.monitorFunc=UE:this.monitorFunc=Ly,this.monitorFunc===Ly&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Ly?1/0:-1/0}async onEpochEnd(e,t){await Ti(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function K9(r){return new ZS(r)}var V9={earlyStopping:K9};var H9=B();H9.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var JS=(J=>(J[J.DT_INVALID=0]="DT_INVALID",J[J.DT_FLOAT=1]="DT_FLOAT",J[J.DT_DOUBLE=2]="DT_DOUBLE",J[J.DT_INT32=3]="DT_INT32",J[J.DT_UINT8=4]="DT_UINT8",J[J.DT_INT16=5]="DT_INT16",J[J.DT_INT8=6]="DT_INT8",J[J.DT_STRING=7]="DT_STRING",J[J.DT_COMPLEX64=8]="DT_COMPLEX64",J[J.DT_INT64=9]="DT_INT64",J[J.DT_BOOL=10]="DT_BOOL",J[J.DT_QINT8=11]="DT_QINT8",J[J.DT_QUINT8=12]="DT_QUINT8",J[J.DT_QINT32=13]="DT_QINT32",J[J.DT_BFLOAT16=14]="DT_BFLOAT16",J[J.DT_QINT16=15]="DT_QINT16",J[J.DT_QUINT16=16]="DT_QUINT16",J[J.DT_UINT16=17]="DT_UINT16",J[J.DT_COMPLEX128=18]="DT_COMPLEX128",J[J.DT_HALF=19]="DT_HALF",J[J.DT_RESOURCE=20]="DT_RESOURCE",J[J.DT_VARIANT=21]="DT_VARIANT",J[J.DT_UINT32=22]="DT_UINT32",J[J.DT_UINT64=23]="DT_UINT64",J[J.DT_FLOAT_REF=101]="DT_FLOAT_REF",J[J.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",J[J.DT_INT32_REF=103]="DT_INT32_REF",J[J.DT_UINT8_REF=104]="DT_UINT8_REF",J[J.DT_INT16_REF=105]="DT_INT16_REF",J[J.DT_INT8_REF=106]="DT_INT8_REF",J[J.DT_STRING_REF=107]="DT_STRING_REF",J[J.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",J[J.DT_INT64_REF=109]="DT_INT64_REF",J[J.DT_BOOL_REF=110]="DT_BOOL_REF",J[J.DT_QINT8_REF=111]="DT_QINT8_REF",J[J.DT_QUINT8_REF=112]="DT_QUINT8_REF",J[J.DT_QINT32_REF=113]="DT_QINT32_REF",J[J.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",J[J.DT_QINT16_REF=115]="DT_QINT16_REF",J[J.DT_QUINT16_REF=116]="DT_QUINT16_REF",J[J.DT_UINT16_REF=117]="DT_UINT16_REF",J[J.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",J[J.DT_HALF_REF=119]="DT_HALF_REF",J[J.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",J[J.DT_VARIANT_REF=121]="DT_VARIANT_REF",J[J.DT_UINT32_REF=122]="DT_UINT32_REF",J[J.DT_UINT64_REF=123]="DT_UINT64_REF",J))(JS||{}),q9;(e=>{let r;(s=>(s[s.LEGACY=0]="LEGACY",s[s.V1=1]="V1",s[s.V2=2]="V2"))(r=e.CheckpointFormatVersion||={})})(q9||={});var ev={};function X9(r,e){let t={tfOpName:r,category:"custom",inputs:[],attrs:[],customExecutor:e};ev[r]=t}function _y(r){return ev[r]}function Y9(r){delete ev[r]}function v(r,e,t,n,o){let s=e.inputParams[r];if(s&&s.inputIndexStart!==void 0){let i=s.inputIndexStart,p=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?i+1:s.inputIndexEnd;if(s.type==="tensor")return Sr(e.inputNames[s.inputIndexStart],t,n,o);if(s.type==="tensors")return e.inputNames.slice(i,p).map(c=>Sr(c,t,n,o));let u=Sr(e.inputNames.slice(i)[0],t,n,o),l=u.dataSync();return s.type==="number"?l[0]:b.toNestedArray(u.shape,l)}let a=e.attrParams[r];return a&&a.value}function Sr(r,e,t,n){let[o,s]=Cn(r);if(n!=null){let i=n.getHashTableHandleByName(o);if(i!=null)return i}let a=t.currentContextIds.find(i=>!!e[$y(o,i)]);return a!==void 0?e[$y(o,a)][s]:void 0}function WE(r,e,t){return e[$y(r,t.currentContextId)]}function Ws(r,e){let[t,n,o]=Cn(r);return[$y(t,e&&e.currentContextId),n,o]}function $y(r,e){return e?`${r}-${e}`:r}function Cn(r){let e=r.split(":");if(e.length===1)return[r,0,void 0];let t=e[0],n=e.length===3?e[1]:void 0,o=Number(e[e.length-1]);return[t,o,n]}function Ph(r,e,t){let n=v("pad",r,e,t);if(n==="explicit"){n=v("explicitPaddings",r,e,t);let o=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)o[s][0]=n[s*2],o[s][1]=n[s*2+1];return o}return n}function Va(r){return r.kept?r:Dn(r)}var tv={};Xe(tv,{json:()=>Q9});var Q9=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var rv={};Xe(rv,{json:()=>Z9});var Z9=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var nv={};Xe(nv,{json:()=>J9});var J9=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var ov={};Xe(ov,{json:()=>eee});var eee=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var sv={};Xe(sv,{json:()=>tee});var tee=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var av={};Xe(av,{json:()=>ree});var ree=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var iv={};Xe(iv,{json:()=>nee});var nee=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var uv={};Xe(uv,{json:()=>oee});var oee=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var pv={};Xe(pv,{json:()=>see});var see=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}];var lv={};Xe(lv,{json:()=>aee});var aee=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var mv={};Xe(mv,{json:()=>iee});var iee=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var cv={};Xe(cv,{json:()=>uee});var uee=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}];var dv={};Xe(dv,{json:()=>pee});var pee=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var fv={};Xe(fv,{json:()=>lee});var lee=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var hv={};Xe(hv,{json:()=>mee});var mee=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var gv={};Xe(gv,{json:()=>cee});var cee=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var bv={};Xe(bv,{json:()=>dee});var dee=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var yv={};Xe(yv,{json:()=>fee});var fee=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var Tv={};Xe(Tv,{json:()=>hee});var hee=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var jy=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[tv,rv,nv,ov,sv,av,iv,uv,pv,lv,mv,cv,dv,fv,hv,gv,bv,yv,Tv],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,o)=>(n[o.tfOpName]=o,n),{})}transformGraph(e,t={}){let n=e.node,o=[],s=[],a=[],i=n.reduce((h,g)=>(h[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?o.push(h[g.name]):g.op==="Const"?s.push(h[g.name]):(g.input==null||g.input.length===0)&&a.push(h[g.name]),h),{}),p=[],u=[],l={},m={};t!=null&&(l=this.mapSignatureEntries(t.inputs),m=this.mapSignatureEntries(t.outputs));let c=Object.keys(i);c.forEach(h=>{let g=i[h];g.inputNames.forEach((y,T)=>{let[x,,I]=Ws(y),k=i[x];if(k.outputs!=null){let N=k.outputs.indexOf(I);if(N!==-1){let P=`${x}:${N}`;g.inputNames[T]=P}}g.inputs.push(k),k.children.push(g)})}),Object.keys(m).length===0?c.forEach(h=>{let g=i[h];g.children.length===0&&u.push(g)}):Object.keys(m).forEach(h=>{let[g]=Ws(h),y=i[g];y!=null&&(y.signatureKey=m[h],u.push(y))}),Object.keys(l).length>0?Object.keys(l).forEach(h=>{let[g]=Ws(h),y=i[g];y&&(y.signatureKey=l[h],p.push(y))}):p=o;let d={};e.library!=null&&e.library.function!=null&&(d=e.library.function.reduce((h,g)=>(h[g.signature.name]=this.mapFunction(g),h),{}));let f={nodes:i,inputs:p,outputs:u,weights:s,placeholders:o,signature:t,functions:d};return a.length>0&&(f.initNodes=a),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=_y(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(o=>o.startsWith("^")?o.slice(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((o,s)=>(o[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},o),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((o,s)=>{let a=s.type,i;switch(s.type){case"string":i=By(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=By(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":i=Vy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Vy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":i=zy(e.attr,s.tfName,s.defaultValue||0),i===void 0&&!!s.tfDeprecatedName&&(i=zy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":i=Ky(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Ky(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":i=Oy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Oy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":i=qy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=qy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":i=Wy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Wy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":i=Hy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Hy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":i=Gy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Gy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":i=Uy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Uy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":i=KE(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=KE(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${e.op}`)}return o[s.name]={value:i,type:a},o},{})),n}mapFunction(e){let t=e.nodeDef,n=[],o=[],s={};t!=null&&(s=t.reduce((m,c)=>(m[c.name]=this.mapNode(c),c.op==="Const"&&o.push(m[c.name]),m),{}));let a=[],i=[];e.signature.inputArg.forEach(m=>{let[c]=Ws(m.name),d={name:c,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:xv(m.type),type:"dtype"}},children:[]};d.signatureKey=m.name,a.push(d),s[c]=d}),Object.keys(s).forEach(m=>{let c=s[m];c.inputNames.forEach((d,f)=>{let[h,,g]=Ws(d),y=s[h];if(y.outputs!=null){let T=y.outputs.indexOf(g);if(T!==-1){let x=`${h}:${T}`;c.inputNames[f]=x}}c.inputs.push(y),y.children.push(c)})});let u=e.ret;e.signature.outputArg.forEach(m=>{let[c,d]=Ws(u[m.name]),f=s[c];f!=null&&(f.defaultOutput=d,i.push(f))});let l=this.mapArgsToSignature(e);return{nodes:s,inputs:a,outputs:i,weights:o,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function gee(r){let e=B().global;if(typeof e.atob<"u")return e.atob(r);if(typeof Buffer<"u")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function VE(r,e){let t=Array.isArray(r)?String.fromCharCode.apply(null,r):gee(r);return e?t:t.toLowerCase()}function By(r,e,t,n=!1){let o=r[e];return o!=null?VE(o.s,n):t}function Oy(r,e,t){let n=r[e];return n?n.b:t}function zy(r,e,t){let n=r[e]||{},o=n.i!=null?n.i:n.f!=null?n.f:t;return typeof o=="number"?o:parseInt(o,10)}function xv(r){switch(typeof r=="string"&&(r=JS[r]),r){case 1:case 19:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 2:return"float32";case 7:return"string";default:return null}}function KE(r,e,t){let n=r[e];return n&&n.func?n.func.name:t}function Gy(r,e,t){let n=r[e];return n&&n.type?xv(n.type):t}function Uy(r,e,t){let n=r[e];return n&&n.list&&n.list.type?n.list.type.map(o=>xv(o)):t}function HE(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function Wy(r,e,t){let n=r[e];return n&&n.shape?HE(n.shape):t}function Ky(r,e,t){let n=r[e];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):t}function Vy(r,e,t,n=!1){let o=r[e];return o&&o.list&&o.list.s?o.list.s.map(s=>VE(s,n)):t}function Hy(r,e,t){let n=r[e];return n&&n.list&&n.list.shape?n.list.shape.map(o=>HE(o)):t}function qy(r,e,t){let n=r[e];return n&&n.list&&n.list.b?n.list.b:t}var Iv=class{constructor(e,t,n){this.node=e;this.tensorMap=t;this.context=n;this.inputs=[];this.attrs={};this.inputs=e.inputNames.map(o=>this.getInput(o)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((o,s)=>(o[s]=this.getAttr(s),o),{}))}getInput(e){return Sr(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return Sr(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return zy(this.node.rawAttrs,e,t);if(n.s!=null)return By(this.node.rawAttrs,e,t);if(n.b!=null)return Oy(this.node.rawAttrs,e,t);if(n.shape!=null)return Wy(this.node.rawAttrs,e,t);if(n.type!=null)return Gy(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return Ky(this.node.rawAttrs,e,t);if(n.list.s!=null)return Vy(this.node.rawAttrs,e,t);if(n.list.shape!=null)return Hy(this.node.rawAttrs,e,t);if(n.list.b!=null)return qy(this.node.rawAttrs,e,t);if(n.list.type!=null)return Uy(this.node.rawAttrs,e,t)}return t}};var qE=(r,e,t)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[Q(v("a",r,e,t),v("b",r,e,t))];case"AddN":return[zC(v("tensors",r,e,t))];case"FloorMod":case"Mod":return[kk(v("a",r,e,t),v("b",r,e,t))];case"Mul":return[L(v("a",r,e,t),v("b",r,e,t))];case"RealDiv":case"Div":return[me(v("a",r,e,t),v("b",r,e,t))];case"DivNoNan":return[pk(v("a",r,e,t),v("b",r,e,t))];case"FloorDiv":return[Nd(v("a",r,e,t),v("b",r,e,t))];case"Sub":return[pe(v("a",r,e,t),v("b",r,e,t))];case"Minimum":return[lu(v("a",r,e,t),v("b",r,e,t))];case"Maximum":return[jn(v("a",r,e,t),v("b",r,e,t))];case"Pow":return[Fn(v("a",r,e,t),v("b",r,e,t))];case"SquaredDifference":return[Jd(v("a",r,e,t),v("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var jE=(r,e,t)=>{switch(r.op){case"Abs":case"ComplexAbs":return[$t(v("x",r,e,t))];case"Acos":return[BC(v("x",r,e,t))];case"Acosh":return[OC(v("x",r,e,t))];case"Asin":return[UC(v("x",r,e,t))];case"Asinh":return[WC(v("x",r,e,t))];case"Atan":return[KC(v("x",r,e,t))];case"Atan2":return[VC(v("x",r,e,t),v("y",r,e,t))];case"Atanh":return[HC(v("x",r,e,t))];case"Ceil":return[ek(v("x",r,e,t))];case"Complex":return[Vn(v("real",r,e,t),v("imag",r,e,t))];case"Cos":return[Wp(v("x",r,e,t))];case"Cosh":return[Ld(v("x",r,e,t))];case"Elu":return[uu(v("x",r,e,t))];case"Erf":return[mk(v("x",r,e,t))];case"Exp":return[pr(v("x",r,e,t))];case"Expm1":return[ck(v("x",r,e,t))];case"Floor":return[pu(v("x",r,e,t))];case"Log":return[Lr(v("x",r,e,t))];case"Log1p":return[Hp(v("x",r,e,t))];case"Imag":return[Kp(v("x",r,e,t))];case"Neg":return[et(v("x",r,e,t))];case"Reciprocal":return[Ek(v("x",r,e,t))];case"Real":return[ep(v("x",r,e,t))];case"Relu":return[Wr(v("x",r,e,t))];case"Round":return[Vd(v("x",r,e,t))];case"Selu":return[qd(v("x",r,e,t))];case"Sigmoid":return[mn(v("x",r,e,t))];case"Sin":return[jd(v("x",r,e,t))];case"Sign":return[_k(v("x",r,e,t))];case"Sinh":return[Xd(v("x",r,e,t))];case"Softplus":return[ci(v("x",r,e,t))];case"Sqrt":return[Lt(v("x",r,e,t))];case"Square":return[je(v("x",r,e,t))];case"Tanh":return[au(v("x",r,e,t))];case"Tan":return[Bk(v("x",r,e,t))];case"ClipByValue":return[Rr(v("x",r,e,t),v("clipValueMin",r,e,t),v("clipValueMax",r,e,t))];case"Relu6":return[Kd(v("x",r,e,t))];case"Rsqrt":return[Hd(Sr(r.inputNames[0],e,t))];case"Prod":return[Ud(v("x",r,e,t),v("axes",r,e,t))];case"LeakyRelu":return[Vp(v("x",r,e,t),v("alpha",r,e,t))];case"Prelu":return[Yp(v("x",r,e,t),v("alpha",r,e,t))];case"IsNan":return[dk(Sr(r.inputNames[0],e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Yn(r,e,t=""){if(!(typeof r=="number"||typeof e=="number")){b.assert(r.length===e.length,()=>t+` Shapes ${r} and ${e} must match`);for(let n=0;n<r.length;n++){let o=r[n],s=e[n];b.assert(o<0||s<0||o===s,()=>t+` Shapes ${r} and ${e} must match`)}}}function XE(r){return!(typeof r=="number"||r.some(e=>e<0))}function vc(r,e,t){let n=Xy(r,t),o=!XE(n);if(o&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(o&&e.forEach(s=>{n=Xy(s.shape,n)}),!XE(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function Xy(r,e){if(typeof r=="number")return e;if(typeof e=="number")return r;if(r.length!==e.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${e}`);let t=[];for(let n=0;n<r.length;++n){let o=r[n],s=e[n];if(o>=0&&s>=0&&o!==s)throw new Error(`Incompatible shape during merge: ${r} vs. ${e}`);t[n]=o>=0?o:s}return t}var Cv=class{constructor(e,t,n,o,s,a,i){this.name=e;this.dtype=t;this.maxSize=n;this.elementShape=o;this.identicalElementShapes=s;this.dynamicSize=a;this.clearAfterRead=i;this.tensors=[];this.closed_=!1;this.idTensor=ce(0),Ut(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Yn(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Ut(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,o)=>this.write(n,t[o]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let o=0;o<this.size();o++)e.push(o)}if(e.length===0)return Fr([],[0].concat(this.elementShape));let n=this.readMany(e);return Yn(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),mr(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Fr([],[0].concat(this.elementShape));let t=[];for(let o=0;o<this.size();o++)t.push(o);let n=this.readMany(t);return Yn(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),pt(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,_r(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,o=e.map(p=>(n+=p,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:t.size/n,a=[];z(()=>{t=_(t,[1,n,s]);for(let p=0;p<e.length;++p){let u=p===0?0:o[p-1],l=[0,u,0],m=[1,e[p],s];a[p]=_(ze(t,l,m),this.elementShape)}return a});let i=[];for(let p=0;p<e.length;p++)i[p]=p;this.writeMany(i,a)}};var mp=class{constructor(e,t,n,o=-1){this.tensors=e;this.elementShape=t;this.elementDtype=n;e?.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);Yn(t,s.shape,"TensorList shape mismatch: "),Ut(s)}),this.idTensor=ce(0),this.maxNumElements=o,Ut(this.idTensor)}get id(){return this.idTensor.id}copy(){return new mp([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Yn(e,this.elementShape,"TensorList shape mismatch: ");let o=vc(this.elementShape,this.tensors,e);return z(()=>{let s=this.tensors.map(a=>_(a,o));return mr(s,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=vc(this.elementShape,this.tensors,e),o=this.tensors.pop();return Yn(o.shape,e,"TensorList shape mismatch: "),_(o,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Yn(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ut(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new mp([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Yn(this.tensors[e].shape,t,"TensorList shape mismatch: ");let o=vc(this.elementShape,this.tensors,t);return _(this.tensors[e],o)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Yn(this.elementShape,t.shape,"TensorList shape mismatch: "),Ut(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Yn(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let o=vc(this.elementShape,this.tensors,n);return e.length===0?Fr([],[0].concat(o)):z(()=>{let s=e.map(a=>_(this.tensors[a],o));return mr(s,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Yn(this.elementShape,t,"TensorList shape mismatch: ");let n=vc(this.elementShape,this.tensors,t);return this.size()===0?Fr([],[0].concat(n)):z(()=>{let o=this.tensors.map(s=>_(s,n));return pt(o,0)})}};function YE(r,e,t){let n=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==t)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${t}`);let o=r.shape.slice(1);Yn(o,e,"TensorList shape mismatch: ");let s=_r(r);return new mp(s,e,n)}function QE(r,e,t){return new mp([],r,e,t)}function ZE(r,e,t,n){if(e.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${r.shape[0]}`);let o=Math.max(...e);if(n!=null&&n!==-1&&o>=n)throw new Error(`Max index must be < array size (${o}  vs. ${n})`);let s=new mp([],t,r.dtype,n),a=_r(r,0);return e.forEach((i,p)=>{s.setItem(i,a[p])}),s}function JE(r,e,t){let n=0,o=e.map(l=>(n+=l,n));if(n!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${r.shape}`);let s=r.shape.slice(1),a=Xy(s,t),i=n===0?0:r.size/n,p=z(()=>{let l=[];r=_(r,[1,n,i]);for(let m=0;m<e.length;++m){let c=m===0?0:o[m-1],d=[0,c,0],f=[1,e[m],i];l[m]=_(ze(r,d,f),a)}return r.dispose(),l}),u=new mp([],t,r.dtype,e.length);for(let l=0;l<p.length;l++)u.setItem(l,p[l]);return u}var eR=async(r,e,t)=>{switch(r.op){case"If":case"StatelessIf":{let n=v("thenBranch",r,e,t),o=v("elseBranch",r,e,t),s=v("cond",r,e,t),a=v("args",r,e,t);return(await s.data())[0]?t.functionMap[n].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[o].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{let n=v("body",r,e,t),o=v("cond",r,e,t),s=v("args",r,e,t),a=await t.functionMap[o].executeFunctionAsync(s,t.tensorArrayMap,t.tensorListMap),i=s.map(l=>l.id),p=await a[0].data();a.forEach(l=>{!l.kept&&i.indexOf(l.id)===-1&&l.dispose()});let u=s;for(;p[0];){let l=u;u=await t.functionMap[n].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);let m=u.map(d=>d.id);l.forEach(d=>{!d.kept&&i.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()});let c=await t.functionMap[o].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);p=await c[0].data(),c.forEach(d=>{!d.kept&&i.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()})}return u}case"LoopCond":{let n=v("pred",r,e,t);return[Va(n)]}case"Switch":{let n=v("pred",r,e,t),o=v("data",r,e,t);return o.kept||(o=Va(o)),(await n.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{let n=r.inputNames.find(o=>Sr(o,e,t)!==void 0);if(n){let o=Sr(n,e,t);return[Va(o)]}return}case"Enter":{let n=v("frameName",r,e,t),o=v("tensor",r,e,t);return t.enterFrame(n),[Va(o)]}case"Exit":{let n=v("tensor",r,e,t);return t.exitFrame(),[Va(n)]}case"NextIteration":{let n=v("tensor",r,e,t);return t.nextIteration(),[Va(n)]}case"TensorArrayV3":{let n=v("size",r,e,t),o=v("dtype",r,e,t),s=v("elementShape",r,e,t),a=v("dynamicSize",r,e,t),i=v("clearAfterRead",r,e,t),p=v("identicalElementShapes",r,e,t),u=v("name",r,e,t),l=new Cv(u,o,n,s,p,a,i);return t.addTensorArray(l),[l.idTensor,ce(1)]}case"TensorArrayWriteV3":{let n=v("tensorArrayId",r,e,t),o=v("index",r,e,t),s=v("tensor",r,e,t),a=t.getTensorArray(n.id);return a.write(o,s),[a.idTensor]}case"TensorArrayReadV3":{let n=v("tensorArrayId",r,e,t),o=v("index",r,e,t);return[t.getTensorArray(n.id).read(o)]}case"TensorArrayGatherV3":{let n=v("tensorArrayId",r,e,t),o=v("indices",r,e,t),s=v("dtype",r,e,t);return[t.getTensorArray(n.id).gather(o,s)]}case"TensorArrayScatterV3":{let n=v("tensorArrayId",r,e,t),o=v("indices",r,e,t),s=v("tensor",r,e,t),a=t.getTensorArray(n.id);return a.scatter(o,s),[a.idTensor]}case"TensorArrayConcatV3":{let n=v("tensorArrayId",r,e,t),o=t.getTensorArray(n.id),s=v("dtype",r,e,t);return[o.concat(s)]}case"TensorArraySplitV3":{let n=v("tensorArrayId",r,e,t),o=v("tensor",r,e,t),s=v("lengths",r,e,t),a=t.getTensorArray(n.id);return a.split(s,o),[a.idTensor]}case"TensorArraySizeV3":{let n=v("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return[ce(o.size(),"int32")]}case"TensorArrayCloseV3":{let n=v("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{let n=v("tensorListId",r,e,t),o=v("index",r,e,t),s=v("tensor",r,e,t),a=t.getTensorList(n.id);return a.setItem(o,s),[a.idTensor]}case"TensorListGetItem":{let n=v("tensorListId",r,e,t),o=v("index",r,e,t),s=v("elementShape",r,e,t),a=v("elementDType",r,e,t);return[t.getTensorList(n.id).getItem(o,s,a)]}case"TensorListScatterV2":case"TensorListScatter":{let n=v("indices",r,e,t),o=v("tensor",r,e,t),s=v("elementShape",r,e,t),a=v("numElements",r,e,t),i=ZE(o,n,s,a);return t.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=v("elementShape",r,e,t),o=v("elementDType",r,e,t),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let a=v(s,r,e,t),i=QE(n,o,a);return t.addTensorList(i),[i.idTensor]}case"TensorListGather":{let n=v("tensorListId",r,e,t),o=v("indices",r,e,t),s=v("elementShape",r,e,t),a=v("elementDType",r,e,t);return[t.getTensorList(n.id).gather(o,a,s)]}case"TensorListStack":{let n=v("tensorListId",r,e,t),o=v("elementShape",r,e,t),s=v("elementDType",r,e,t),a=v("numElements",r,e,t);return[t.getTensorList(n.id).stack(o,s,a)]}case"TensorListFromTensor":{let n=v("tensor",r,e,t),o=v("elementShape",r,e,t),s=v("elementDType",r,e,t),a=YE(n,o,s);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":{let n=v("tensorListId",r,e,t),o=t.getTensorList(n.id),s=v("dtype",r,e,t),a=v("elementShape",r,e,t);return[o.concat(s,a)]}case"TensorListPushBack":{let n=v("tensorListId",r,e,t),o=v("tensor",r,e,t),s=t.getTensorList(n.id);return s.pushBack(o),[s.idTensor]}case"TensorListPopBack":{let n=v("tensorListId",r,e,t),o=v("elementShape",r,e,t),s=v("elementDType",r,e,t);return[t.getTensorList(n.id).popBack(o,s)]}case"TensorListSplit":{let n=v("tensor",r,e,t),o=v("elementShape",r,e,t),s=v("lengths",r,e,t),a=JE(n,s,o);return t.addTensorList(a),[a.idTensor]}case"TensorListLength":{let n=v("tensorListId",r,e,t),o=t.getTensorList(n.id);return[ce(o.size(),"int32")]}case"TensorListResize":{let n=v("tensorListId",r,e,t),o=v("size",r,e,t),a=t.getTensorList(n.id).resize(o);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};function tR(r,e,t){let[n,o]=v("fusedOps",r,e,t),s=n==="biasadd",a=!s,i=o==="prelu",p=n==="fusedbatchnorm",u=v("numArgs",r,e,t);if(s){if(i&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(p)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let l=v("strides",r,e,t),m=Ph(r,e,t),c=v("dataFormat",r,e,t).toUpperCase(),d=v("dilations",r,e,t),[f,h]=v("args",r,e,t);a&&(h=f,f=void 0);let g=v("leakyreluAlpha",r,e,t);return{stride:l,pad:m,dataFormat:c,dilations:d,biasArg:f,preluArg:h,activationFunc:o,leakyreluAlpha:g}}var rR=(r,e,t)=>{switch(r.op){case"Conv1D":{let n=v("stride",r,e,t),o=v("pad",r,e,t),s=v("dataFormat",r,e,t).toUpperCase(),a=v("dilation",r,e,t);return[Fd(v("x",r,e,t),v("filter",r,e,t),n,o,s,a)]}case"Conv2D":{let n=v("strides",r,e,t),o=Ph(r,e,t),s=v("dataFormat",r,e,t).toUpperCase(),a=v("dilations",r,e,t);return[qn(v("x",r,e,t),v("filter",r,e,t),[n[1],n[2]],o,s,[a[1],a[2]])]}case"_FusedConv2D":{let{stride:n,pad:o,dataFormat:s,dilations:a,biasArg:i,preluArg:p,activationFunc:u,leakyreluAlpha:l}=tR(r,e,t);return[Es.conv2d({x:v("x",r,e,t),filter:v("filter",r,e,t),strides:[n[1],n[2]],pad:o,dataFormat:s,dilations:[a[1],a[2]],bias:i,activation:u,preluActivationWeights:p,leakyreluAlpha:l})]}case"FusedDepthwiseConv2dNative":{let{stride:n,pad:o,dataFormat:s,dilations:a,biasArg:i,preluArg:p,activationFunc:u,leakyreluAlpha:l}=tR(r,e,t);return[Es.depthwiseConv2d({x:v("x",r,e,t),filter:v("filter",r,e,t),strides:[n[1],n[2]],pad:o,dataFormat:s,dilations:[a[1],a[2]],bias:i,activation:u,preluActivationWeights:p,leakyreluAlpha:l})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let n=v("outputShape",r,e,t),o=v("strides",r,e,t),s=Ph(r,e,t);return[Ed(v("x",r,e,t),v("filter",r,e,t),n,[o[1],o[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let n=v("strides",r,e,t),o=Ph(r,e,t),s=v("dilations",r,e,t),a=v("dataFormat",r,e,t).toUpperCase();return[iu(v("input",r,e,t),v("filter",r,e,t),[n[1],n[2]],o,a,[s[1],s[2]])]}case"Conv3D":{let n=v("strides",r,e,t),o=v("pad",r,e,t),s=v("dataFormat",r,e,t).toUpperCase(),a=v("dilations",r,e,t);return[Rd(v("x",r,e,t),v("filter",r,e,t),[n[1],n[2],n[3]],o,s,[a[1],a[2],a[3]])]}case"AvgPool":{let n=v("strides",r,e,t),o=v("pad",r,e,t),s=v("kernelSize",r,e,t);return[zp(v("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o)]}case"MaxPool":{let n=v("strides",r,e,t),o=v("pad",r,e,t),s=v("kernelSize",r,e,t);return[jp(v("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o)]}case"MaxPoolWithArgmax":{let n=v("strides",r,e,t),o=v("pad",r,e,t),s=v("kernelSize",r,e,t),a=v("includeBatchInIndex",r,e,t),{result:i,indexes:p}=Ik(v("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o,a);return[i,p]}case"AvgPool3D":{let n=v("strides",r,e,t),o=v("pad",r,e,t),s=v("kernelSize",r,e,t);return[Pd(v("x",r,e,t),[s[1],s[2],s[3]],[n[1],n[2],n[3]],o)]}case"MaxPool3D":{let n=v("strides",r,e,t),o=v("pad",r,e,t),s=v("kernelSize",r,e,t);return[Gd(v("x",r,e,t),[s[1],s[2],s[3]],[n[1],n[2],n[3]],o)]}case"Dilation2D":{let n=v("strides",r,e,t),o=v("pad",r,e,t),s=v("dilations",r,e,t),a=n[1],i=n[2],p=s[1],u=s[2];return[uk(v("x",r,e,t),v("filter",r,e,t),[a,i],o,[p,u],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var nR=(r,e,t)=>{switch(r.op){case"Fill":{let n=v("shape",r,e,t),o=v("dtype",r,e,t),s=v("value",r,e,t);return[Ra(n,s,o)]}case"LinSpace":{let n=v("start",r,e,t),o=v("stop",r,e,t),s=v("num",r,e,t);return[fk(n,o,s)]}case"Multinomial":{let n=v("logits",r,e,t),o=v("numSamples",r,e,t),s=v("seed",r,e,t);return[Sk(n,o,s)]}case"OneHot":{let n=v("indices",r,e,t),o=v("depth",r,e,t),s=v("onValue",r,e,t),a=v("offValue",r,e,t);return[nu(n,o,s,a)]}case"Ones":return[lr(v("shape",r,e,t),v("dtype",r,e,t))];case"OnesLike":return[Dr(v("x",r,e,t))];case"RandomUniform":return[La(v("shape",r,e,t),v("minval",r,e,t),v("maxval",r,e,t),v("dtype",r,e,t))];case"Range":{let n=v("start",r,e,t),o=v("stop",r,e,t),s=v("step",r,e,t);return[mu(n,o,s,v("dtype",r,e,t))]}case"TruncatedNormal":{let n=v("shape",r,e,t),o=v("mean",r,e,t),s=v("stdDev",r,e,t),a=v("seed",r,e,t);return[tl(n,o,s,v("dtype",r,e,t),a)]}case"Zeros":return[bt(v("shape",r,e,t),v("dtype",r,e,t))];case"ZerosLike":return[Ne(v("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function kv(r,e,t){let n=v("boxes",r,e,t),o=v("scores",r,e,t),s=v("maxOutputSize",r,e,t),a=v("iouThreshold",r,e,t),i=v("scoreThreshold",r,e,t),p=v("softNmsSigma",r,e,t);return{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:p}}var oR=async(r,e,t)=>{switch(r.op){case"NonMaxSuppressionV5":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:p}=kv(r,e,t),u=await fn.nonMaxSuppressionWithScoreAsync(n,o,s,a,i,p);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i}=kv(r,e,t),p=v("padToMaxOutputSize",r,e,t),u=await fn.nonMaxSuppressionPaddedAsync(n,o,s,a,i,p);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i}=kv(r,e,t);return[await fn.nonMaxSuppressionAsync(n,o,s,a,i)]}case"Where":{let n=te(v("condition",r,e,t),"bool"),o=[await ef(n)];return n.dispose(),o}case"ListDiff":return Lk(v("x",r,e,t),v("y",r,e,t));default:throw TypeError(`Node type ${r.op} is not implemented`)}};var sR=(r,e,t)=>{switch(r.op){case"TopKV2":{let n=v("x",r,e,t),o=v("k",r,e,t),s=v("sorted",r,e,t),a=Ok(n,o,s);return[a.values,a.indices]}case"Unique":{let n=v("x",r,e,t),o=Gb(n);return[o.values,o.indices]}case"UniqueV2":{let n=v("x",r,e,t),o=v("axis",r,e,t),s=Gb(n,o);return[s.values,s.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var aR=(r,e,t)=>{switch(r.op){case"Const":return e[r.name];case"PlaceholderWithDefault":let n=v("default",r,e,t);return[Sr(r.name,e,t)||n];case"Placeholder":return[Sr(r.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let u=v("x",r,e,t);return[Va(u)]}case"IdentityN":return v("x",r,e,t).map(u=>Va(u));case"Snapshot":let o=v("x",r,e,t);return[Va(o)];case"Shape":return[Ot(v("x",r,e,t).shape,"int32")];case"ShapeN":return v("x",r,e,t).map(u=>Ot(u.shape));case"Size":return[ce(v("x",r,e,t).size,"int32")];case"Rank":return[ce(v("x",r,e,t).rank,"int32")];case"NoOp":return[ce(1)];case"Print":let s=v("x",r,e,t),a=v("data",r,e,t),i=v("message",r,e,t),p=v("summarize",r,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let u=0;u<a.length;u++)console.log(Array.prototype.slice.call(a[u].dataSync()).slice(0,p));return[s];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Sv=class{constructor(e,t){this.keyDType=e;this.valueDType=t;this.handle=ce(0),this.tensorMap=new Map,Ut(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ce(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),z(()=>{let o=_r(t),s=n.length,a=o.length;b.assert(s===a,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${a} elements.`);for(let i=0;i<s;i++){let p=n[i],u=o[i];Ut(u),this.tensorMap.set(p,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return z(()=>{let o=[];for(let s=0;s<n.length;s++){let a=n[s],i=this.findWithDefault(a,t);o.push(i)}return mr(o)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};var iR=async(r,e,t,n)=>{switch(r.op){case"HashTable":case"HashTableV2":{let o=v("keyDType",r,e,t),s=v("valueDType",r,e,t),a=new Sv(o,s);return n.addHashTable(r.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{let o=v("tableHandle",r,e,t,n),s=v("keys",r,e,t),a=v("values",r,e,t);return[await n.getHashTableById(o.id).import(s,a)]}case"LookupTableFind":case"LookupTableFindV2":{let o=v("tableHandle",r,e,t,n),s=v("keys",r,e,t),a=v("defaultValue",r,e,t);return[await n.getHashTableById(o.id).find(s,a)]}case"LookupTableSize":case"LookupTableSizeV2":{let o=v("tableHandle",r,e,t,n);return[n.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var uR=(r,e,t)=>{switch(r.op){case"ResizeBilinear":{let n=v("images",r,e,t),o=v("size",r,e,t),s=v("alignCorners",r,e,t),a=v("halfPixelCenters",r,e,t);return[fn.resizeBilinear(n,[o[0],o[1]],s,a)]}case"ResizeNearestNeighbor":{let n=v("images",r,e,t),o=v("size",r,e,t),s=v("alignCorners",r,e,t),a=v("halfPixelCenters",r,e,t);return[fn.resizeNearestNeighbor(n,[o[0],o[1]],s,a)]}case"CropAndResize":{let n=v("image",r,e,t),o=v("boxes",r,e,t),s=v("boxInd",r,e,t),a=v("cropSize",r,e,t),i=v("method",r,e,t),p=v("extrapolationValue",r,e,t);return[fn.cropAndResize(n,o,s,a,i,p)]}case"ImageProjectiveTransformV3":{let n=v("images",r,e,t),o=v("transforms",r,e,t),s=v("outputShape",r,e,t),a=v("fillValue",r,e,t),i=v("interpolation",r,e,t),p=v("fillMode",r,e,t);return[fn.transform(n,o,i.toLowerCase(),p.toLowerCase(),a,s)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var pR=(r,e,t)=>{switch(r.op){case"Equal":return[zr(v("a",r,e,t),v("b",r,e,t))];case"NotEqual":return[di(v("a",r,e,t),v("b",r,e,t))];case"Greater":return[rr(v("a",r,e,t),v("b",r,e,t))];case"GreaterEqual":return[Zo(v("a",r,e,t),v("b",r,e,t))];case"Less":return[$d(v("a",r,e,t),v("b",r,e,t))];case"LessEqual":return[Jo(v("a",r,e,t),v("b",r,e,t))];case"LogicalAnd":return[Ur(v("a",r,e,t),v("b",r,e,t))];case"LogicalNot":return[qp(v("a",r,e,t))];case"LogicalOr":return[zd(v("a",r,e,t),v("b",r,e,t))];case"Select":case"SelectV2":return[Bt(v("condition",r,e,t),v("a",r,e,t),v("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var lR=(r,e,t)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[He(v("a",r,e,t),v("b",r,e,t),v("transposeA",r,e,t),v("transposeB",r,e,t))];case"Einsum":return[lk(v("equation",r,e,t),...v("tensors",r,e,t))];case"Transpose":return[Ge(v("x",r,e,t),v("perm",r,e,t))];case"_FusedMatMul":let[n,o]=v("fusedOps",r,e,t),s=n==="biasadd",a=o==="prelu",i=v("numArgs",r,e,t),p=v("leakyreluAlpha",r,e,t);if(s){if(a&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,l]=v("args",r,e,t);return[Es.matMul({a:v("a",r,e,t),b:v("b",r,e,t),transposeA:v("transposeA",r,e,t),transposeB:v("transposeB",r,e,t),bias:u,activation:o,preluActivationWeights:l,leakyreluAlpha:p})];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var mR=(r,e,t)=>{switch(r.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[li(v("x",r,e,t),v("mean",r,e,t),v("variance",r,e,t),v("offset",r,e,t),v("scale",r,e,t),v("epsilon",r,e,t))];case"FusedBatchNormV3":return[li(v("x",r,e,t),v("mean",r,e,t),v("variance",r,e,t),v("offset",r,e,t),v("scale",r,e,t),v("epsilon",r,e,t))];case"LRN":return[hk(v("x",r,e,t),v("radius",r,e,t),v("bias",r,e,t),v("alpha",r,e,t),v("beta",r,e,t))];case"Softmax":return[Zp(v("x",r,e,t))];case"LogSoftmax":return[Bd(v("x",r,e,t))];case"SparseToDense":return[Kb(v("sparseIndices",r,e,t),v("outputShape",r,e,t),v("sparseValues",r,e,t),v("defaultValue",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var cR=(r,e,t)=>{switch(r.op){case"Max":{let a=v("axis",r,e,t),i=v("keepDims",r,e,t);return[Yr(v("x",r,e,t),a,i)]}case"Mean":{let a=v("axis",r,e,t),i=v("keepDims",r,e,t);return[Rt(v("x",r,e,t),a,i)]}case"Min":{let a=v("axis",r,e,t),i=v("keepDims",r,e,t);return[qm(v("x",r,e,t),a,i)]}case"Sum":{let a=v("axis",r,e,t),i=v("keepDims",r,e,t);return[fe(v("x",r,e,t),a,i)]}case"All":{let a=v("axis",r,e,t),i=v("keepDims",r,e,t);return[Dd(v("x",r,e,t),a,i)]}case"Any":{let a=v("axis",r,e,t),i=v("keepDims",r,e,t);return[Um(v("x",r,e,t),a,i)]}case"ArgMax":{let a=v("axis",r,e,t);return[su(v("x",r,e,t),a)]}case"ArgMin":{let a=v("axis",r,e,t);return[GC(v("x",r,e,t),a)]}case"Prod":{let a=v("axis",r,e,t),i=v("keepDims",r,e,t);return[Ud(v("x",r,e,t),a,i)]}case"Cumprod":{let a=v("axis",r,e,t),i=v("exclusive",r,e,t),p=v("reverse",r,e,t);return[Vm(v("x",r,e,t),a,i,p)]}case"Cumsum":{let a=v("axis",r,e,t),i=v("exclusive",r,e,t),p=v("reverse",r,e,t);return[_d(v("x",r,e,t),a,i,p)]}case"Bincount":let n=v("x",r,e,t),o=v("weights",r,e,t),s=v("size",r,e,t);return[Md(n,o,s)];case"DenseBincount":{let a=v("x",r,e,t),i=v("weights",r,e,t),p=v("size",r,e,t),u=v("binaryOutput",r,e,t);return[ak(a,i,p,u)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var dR=(r,e,t)=>{switch(r.op){case"ConcatV2":case"Concat":{let n=v("n",r,e,t),o=v("axis",r,e,t),s=v("tensors",r,e,t);return s=s.slice(0,n),[pt(s,o)]}case"Gather":{let n=v("x",r,e,t),o=v("indices",r,e,t);return[mi(n,te(o,"int32"),0)]}case"GatherV2":{let n=v("axis",r,e,t),o=v("batchDims",r,e,t),s=v("x",r,e,t),a=v("indices",r,e,t);return[mi(s,te(a,"int32"),n,o)]}case"Reverse":{let n=v("dims",r,e,t),o=[];for(let a=0;a<n.length;a++)n[a]&&o.push(a);let s=v("x",r,e,t);return[gr(s,o)]}case"ReverseV2":{let n=v("axis",r,e,t),o=v("x",r,e,t);return[gr(o,n)]}case"Slice":{let n=v("begin",r,e,t),o=v("size",r,e,t);return[ze(v("x",r,e,t),n,o)]}case"StridedSlice":{let n=v("begin",r,e,t),o=v("end",r,e,t),s=v("strides",r,e,t),a=v("beginMask",r,e,t),i=v("endMask",r,e,t),p=v("ellipsisMask",r,e,t),u=v("newAxisMask",r,e,t),l=v("shrinkAxisMask",r,e,t),m=v("x",r,e,t);return[$k(m,n,o,s,a,i,p,u,l)]}case"Pack":return z(()=>{let n=v("axis",r,e,t),o=v("tensors",r,e,t),s=o[0].shape,a=dn(o[0]).shape,i=o.map(p=>{let u=b.arraysEqual(p.shape,s);if(!u&&!b.arraysEqual(dn(p).shape,a))throw new Error("the input tensors shape does not match");return u?p:_(p,s)});return[mr(i,n)]});case"Unpack":{let n=v("axis",r,e,t),o=v("tensor",r,e,t);return _r(o,n)}case"Tile":{let n=v("reps",r,e,t);return[Gr(v("x",r,e,t),n)]}case"Split":case"SplitV":{let n=v("axis",r,e,t),o=v("numOrSizeSplits",r,e,t),s=v("x",r,e,t);return kr(s,o,n)}case"ScatterNd":{let n=v("indices",r,e,t),o=v("values",r,e,t),s=v("shape",r,e,t);return[z1(n,o,s)]}case"GatherNd":{let n=v("x",r,e,t),o=v("indices",r,e,t);return[U1(n,o)]}case"SparseToDense":{let n=v("sparseIndices",r,e,t),o=v("outputShape",r,e,t),s=v("sparseValues",r,e,t),a=v("defaultValue",r,e,t);return[Kb(n,s,o,s.dtype===a.dtype?a:te(a,s.dtype))]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var fR=(r,e,t)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:n,outputValues:o,emptyRowIndicator:s,reverseIndexMap:a}=tf.sparseFillEmptyRows(v("indices",r,e,t),v("values",r,e,t),v("denseShape",r,e,t),v("defaultValue",r,e,t));return[n,o,s,a]}case"SparseReshape":{let{outputIndices:n,outputShape:o}=tf.sparseReshape(v("inputIndices",r,e,t),v("inputShape",r,e,t),v("newShape",r,e,t));return[n,o]}case"SparseSegmentMean":return[tf.sparseSegmentMean(v("data",r,e,t),v("indices",r,e,t),v("segmentIds",r,e,t))];case"SparseSegmentSum":return[tf.sparseSegmentSum(v("data",r,e,t),v("indices",r,e,t),v("segmentIds",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var hR=(r,e,t)=>{switch(r.op){case"FFT":return[Jp(v("x",r,e,t))];case"IFFT":return[tp(v("x",r,e,t))];case"RFFT":return[el(v("x",r,e,t))];case"IRFFT":return[Zd(v("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var gR=(r,e,t)=>{switch(r.op){case"StringNGrams":{let{nGrams:n,nGramsSplits:o}=Jb.stringNGrams(v("data",r,e,t),v("dataSplits",r,e,t),v("separator",r,e,t),v("nGramWidths",r,e,t),v("leftPad",r,e,t),v("rightPad",r,e,t),v("padWidth",r,e,t),v("preserveShortSequences",r,e,t));return[n,o]}case"StringSplit":{let{indices:n,values:o,shape:s}=Jb.stringSplit(v("input",r,e,t),v("delimiter",r,e,t),v("skipEmpty",r,e,t));return[n,o,s]}case"StringToHashBucketFast":return[Jb.stringToHashBucketFast(v("input",r,e,t),v("numBuckets",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var bR=(r,e,t)=>{switch(r.op){case"Cast":return[te(v("x",r,e,t),v("dtype",r,e,t))];case"ExpandDims":{let n=v("axis",r,e,t);return[Nr(v("x",r,e,t),n)]}case"Squeeze":{let n=v("axis",r,e,t);return[dn(v("x",r,e,t),n)]}case"Reshape":return[_(v("x",r,e,t),v("shape",r,e,t))];case"MirrorPad":return[Ck(v("x",r,e,t),v("padding",r,e,t),v("mode",r,e,t))];case"PadV2":case"Pad":return[Mn(v("x",r,e,t),v("padding",r,e,t),v("constantValue",r,e,t))];case"SpaceToBatchND":{let n=v("blockShape",r,e,t),o=v("paddings",r,e,t);return[Xp(v("x",r,e,t),n,o)]}case"BatchToSpaceND":{let n=v("blockShape",r,e,t),o=v("crops",r,e,t);return[Gp(v("x",r,e,t),n,o)]}case"DepthToSpace":{let n=v("blockSize",r,e,t),o=v("dataFormat",r,e,t).toUpperCase();return[ik(v("x",r,e,t),n,o)]}case"BroadcastTo":return[Up(v("x",r,e,t),v("shape",r,e,t))];case"BroadcastArgs":return[JC(v("s0",r,e,t),v("s1",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function vv(r,e,t,n){let o=((s,a,i)=>{switch(s.category){case"arithmetic":return z(()=>qE(s,a,i));case"basic_math":return z(()=>jE(s,a,i));case"control":return eR(s,a,i);case"convolution":return z(()=>rR(s,a,i));case"creation":return z(()=>nR(s,a,i));case"dynamic":return oR(s,a,i);case"evaluation":return z(()=>sR(s,a,i));case"image":return z(()=>uR(s,a,i));case"graph":return z(()=>aR(s,a,i));case"logical":return z(()=>pR(s,a,i));case"matrices":return z(()=>lR(s,a,i));case"normalization":return z(()=>mR(s,a,i));case"reduction":return z(()=>cR(s,a,i));case"slice_join":return z(()=>dR(s,a,i));case"sparse":return z(()=>fR(s,a,i));case"spectral":return z(()=>hR(s,a,i));case"string":return z(()=>gR(s,a,i));case"transformation":return z(()=>bR(s,a,i));case"hash_table":return iR(s,a,i,n);case"custom":let p=_y(s.op);if(p&&p.customExecutor)return p.customExecutor(new Iv(s,a,i));throw TypeError(`Custom op ${s.op} is not registered.`);default:throw TypeError(`Unknown op '${s.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,e,t);return b.isPromise(o)?o.then(s=>[].concat(s)):[].concat(o)}var Yy=class{constructor(e={},t={},n={},o={}){this.weightMap=e;this.tensorArrayMap=t;this.tensorListMap=n;this.functionMap=o;this.rootContext={id:0,frameName:"",iterationId:0};this.contexts=[this.rootContext];this.lastId=0;this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function Av(r,e,t,n){let o=new Set,s=[],a=null,i=null,p=new Set,u=Object.keys(r).map(c=>Cn(c)[0]),l=[];n!=null&&(l=n.map(c=>Cn(c.name)[0]));let m=[...e];for(;m.length>0;){let c=m.pop();if((wv(c)||Oee(c)||zee(c))&&a==null&&(a=c,i=a.children.map(d=>d.name).filter(d=>o.has(d))),o.add(c.name),t[c.name]==null&&u.indexOf(c.name)===-1&&l.indexOf(c.name)===-1){if(c.inputs.length===0){s.push(c.name);continue}c.inputs.forEach(d=>{p.has(d.name)||(p.add(d.name),m.push(d))})}}return{inputs:r,outputs:e,usedNodes:o,missingInputs:s,dynamicNode:a,syncInputs:i}}function yR(r,e,t){let{usedNodes:n,inputs:o}=t,s=[],a=Object.keys(o).map(l=>Cn(l)[0]).map(l=>r.nodes[l]),i=r.initNodes;a.forEach(l=>{n.has(l.name)&&s.push(l)}),r.weights.forEach(l=>{n.has(l.name)&&s.push(l)}),i?.forEach(l=>{n.has(l.name)&&s.push(l)});let p=new Set,u=[];for(;s.length>0;){let l=s.pop();p.add(l.name),e[l.name]||u.push(l),l.children.forEach(m=>{!p.has(m.name)&&n.has(m.name)&&m.inputs.every(c=>p.has(c.name))&&s.push(m)})}return u}var _ee=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],$ee=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Bee=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function wv(r){return _ee.indexOf(r.op)>=0}function Oee(r){return $ee.indexOf(r.op)>=0}function zee(r){return Bee.indexOf(r.op)>=0}var Ac=class{constructor(e,t){this.graph=e;this.parent=t;this.compiledMap=new Map;this._weightMap={};this.SEPERATOR=",";this._functions={};this._functionExecutorMap={};this.intermediateTensors={};this.keepTensorForDebug=!1;this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new Ac(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(o=>o.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(s=>s.name).sort(),o=t.map(s=>s.name).sort();return n.join(this.SEPERATOR)+"--"+o.join(this.SEPERATOR)}compile(e,t){let n=Av(e,t,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:s,syncInputs:a}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(o.length>0){let i=t.map(u=>u.name),p=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${p}]. Missing the following inputs: [${o}]`)}return yR(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let o=n.map(m=>this.graph.nodes[Cn(m)[0]]),s=t.map(m=>Cn(m)[0]),a=s.map(m=>this.graph.nodes[m]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);let i=this.getCompilationKey(o,a),p=this.compiledMap.get(i);p==null&&(p=this.compile(e,a),this.compiledMap.set(i,p));let u={},l={};return z(()=>{let m=new Yy(this.weightMap,u,l,this.functionExecutorMap),c={...this.weightMap};Object.keys(e).forEach(h=>{let[g,y]=Cn(h),T=[];T[y]=e[h],c[g]=T});let d=this.getFrozenTensorIds(c),f={};for(let h=0;h<p.length;h++){let g=p[h];if(!c[g.name]){let y=vv(g,c,m,this._resourceManager);if(b.isPromise(y))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);c[g.name]=y,this.checkTensorForDisposal(g.name,g,c,m,d,s,f)}}return this.parent==null&&m.dispose(d),t.map(h=>Sr(h,c,m))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(o=>o.id)));return new Set(t)}checkTensorForDisposal(e,t,n,o,s,a,i){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(p=>{p!=null&&(i[p.id]=(i[p.id]||0)+t.children.length)}),t.inputs.forEach(p=>{if(p.category!=="control"){let u=WE(p.name,n,o);u?.forEach(l=>{if(l&&!l.kept&&!s.has(l.id)){let m=i[l.id];if(m===1){if(!this.keepTensorForDebug)l.dispose();else{let[c,d]=Ws(t.name,o);this.intermediateTensors[c]?this.intermediateTensors[c][d]=l:(this.intermediateTensors[c]=[],this.intermediateTensors[c][d]=l)}delete i[l.id]}else m!=null&&i[l.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,o={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=B().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(l){console.warn(l.message)}this.resetIntermediateTensors();let a=new Yy(this.weightMap,o,s,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);let i=t.map(l=>Sr(l,this.tensorsMap,a)),p=i.map(l=>l.id),u=Object.keys(e).map(l=>e[l].id);return this.keepIds=new Set([...p,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){let o=e.reduce((s,a,i)=>(s[this.inputs[i].name]=a,s),{});return this._executeAsync(o,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,o){let s=Object.keys(e),a=s.map(x=>this.graph.nodes[Cn(x)[0]]),i=n.map(x=>Cn(x)[0]),p=i.map(x=>this.graph.nodes[x]);p.length===0&&(p=this._outputs);let{usedNodes:u,missingInputs:l,dynamicNode:m,syncInputs:c}=Av(e,p,this.weightMap,this._initNodes),d=[...a,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:t.currentContext})),f={...this.weightMap};Object.keys(e).forEach(x=>{let[I,k]=Cn(x),N=[];N[k]=e[x],f[I]=N});let h={},g=this.getFrozenTensorIds(f),y={};for(;d.length>0;){let x=this.processStack(a,d,t,f,y,g,i,h,u);await Promise.all(x)}m==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let T=p.filter(x=>!wv(x)&&!Sr(x.name,f,t)).map(x=>x.name);if(T.length>0){let x="";throw m!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${T}] from the provided inputs [${s}]. Consider providing the following inputs: [${l}]. ${x}`)}return f}processStack(e,t,n,o,s,a,i,p,u){let l=[];for(;t.length>0;){let m=t.pop();n.currentContext=m.contexts;let c="";if(m.node.op==="Enter"&&v("isConstant",m.node,o,n)&&([c]=Ws(m.node.name,n)),o[m.node.name]==null){let d=vv(m.node,o,n,this._resourceManager);c||([c]=Ws(m.node.name,n));let f=n.currentContext;b.isPromise(d)?l.push(d.then(h=>(o[c]=h,n.currentContext=f,this.checkTensorForDisposal(c,m.node,o,n,a,i,p),this.processChildNodes(m.node,t,n,o,s,u),h))):(o[c]=d,this.checkTensorForDisposal(c,m.node,o,n,a,i,p),this.processChildNodes(m.node,t,n,o,s,u))}else this.processChildNodes(m.node,t,n,o,s,u)}return l}processChildNodes(e,t,n,o,s,a){e.children.forEach(i=>{let[p]=Ws(i.name,n);s[p]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(u=>!!Sr(u,o,n))&&(s[p]=!0,t.push({contexts:n.currentContext,node:i})):i.inputNames.every(u=>!!Sr(u,o,n))&&(s[p]=!0,t.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[o]=Cn(t),s=this.graph.nodes[o];if(s.attrParams.shape&&s.attrParams.shape.value){let a=s.attrParams.shape.value,i=a.length===n.shape.length&&n.shape.every((p,u)=>a[u]===-1||a[u]===p);b.assert(i,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&b.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let o=this._signature.inputs[n];t[o.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[o]=Cn(n);return this.graph.nodes[o]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=Cn(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}};var Nv=class{constructor(e={},t={}){this.hashTableNameToHandle=e;this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}};var Gee="?tfjs-format=file",Uee="model.json",Dv=class{constructor(e,t={}){this.modelUrl=e;this.loadOptions=t;this.version="n/a";t==null&&(this.loadOptions={}),this.resourceManager=new Nv}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=Or.browserHTTPRequest(e,this.loadOptions);else{let t=Or.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(Or.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let o=Or.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Ac(jy.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let s=jy.Instance.transformGraph(e.modelInitializer);this.initializer=new Ac(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=Or.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Ye)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,o)=>(t[n]=e[o],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function Wee(r,e={}){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&r.load==null&&(r.endsWith("/")||(r=r+"/"),r=`${r}${Uee}${Gee}`);let t=new Dv(r,e);return await t.load(),t}var Kee="0.0.0";var tL={};Xe(tL,{CSVDataset:()=>Lh,Dataset:()=>Ii,FileDataSource:()=>zh,TextLineDataset:()=>Eh,URLDataSource:()=>Gh,array:()=>zR,csv:()=>XR,func:()=>YR,generator:()=>QR,microphone:()=>JR,version_data:()=>eL,webcam:()=>ZR,zip:()=>GR});var OR=Ap(Wd());var SR=Ap(Wd());function TR(r,e){return Qy(r,e)}function Qy(r,e,t=new Map,n=new Set){if(r==null)return null;if(typeof Blob=="function"&&r instanceof Blob)return r.slice();if(n.has(r))throw new Error("Circular references are not supported.");if(t.has(r))return t.get(r);let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(cp(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let a in r){let i=r[a],p=Qy(i,e,t,n);s[a]=p}return n.delete(r),r.__proto__&&(s.__proto__=r.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return t.set(r,o.value),o.value}function xR(r,e=Mv){return IR(r,e)}function IR(r,e,t=new Set){let n=r[0];if(t.has(n))throw new Error("Circular references are not supported.");let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(cp(n)){let s=Array.isArray(n)?[]:{};t.add(n);for(let a in n){let i=r.map(u=>u[a]),p=IR(i,e,t);s[a]=p}return t.delete(n),s}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return o.value}function Mv(r){return r===null?null:cp(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}async function Zy(r,e){let t=new Map;Qy(r,e,t);for(let o of Array.from(t.keys())){let s=t.get(o);if(b.isPromise(s)){let a=await s;t.set(o,a)}}return Qy(r,e,t)}function cp(r){let e=!1;if(B().get("IS_BROWSER"))e=r instanceof TextDecoder;else{let{StringDecoder:t}=Pv();e=r instanceof t}return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof Ye)&&!(r instanceof Promise)&&!e)}function CR(r){return r==null||Vee(r)||Array.isArray(r)||typeof r=="object"&&r instanceof Ye||b.isTypedArray(r)}function Vee(r){return r===null||typeof r!="object"&&typeof r!="function"}function kR(r){return TR(r,Hee)}function Hee(r){return r instanceof Ye?{value:r.clone(),recurse:!1}:cp(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var Mh=class{constructor(e){this.capacity=e;this.begin=0;this.end=0;if(e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}};var Fv=class extends Mh{constructor(){super(Fv.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let o=0;o<n;o++)t[o]=this.get(this.wrap(this.begin+o));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},Jy=Fv;Jy.INITIAL_CAPACITY=32;function Rv(r){return new wR(r)}function Fh(r){return new NR(r)}function vR(r,e){return new Lv(r,e)}function AR(r,e=_v.FAIL){return new $R(r,e)}var ur=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new LR(this,e)}filter(e){return new ER(this,e)}map(e){return new RR(this,e)}mapAsync(e){return new Ev(this,e)}serialMapAsync(e){return new Ev(this,e).serial()}flatmap(e){return new _R(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new FR(this,e,t)}columnMajorBatch(e,t=!0,n=Mv){return this.rowMajorBatch(e,t).map(s=>xR(s,n))}concatenate(e,t){return new Lv(Rv([this,e]),t)}take(e){return e<0||e==null?this:new MR(this,e)}skip(e){return e<0||e==null?this:new PR(this,e)}prefetch(e){return new $v(this,e)}shuffle(e,t){return new BR(this,e,t)}serial(){return new DR(this)}},wR=class extends ur{constructor(e){super();this.items=e;this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:kR(e),done:!1}}},NR=class extends ur{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},DR=class extends ur{constructor(e){super();this.upstream=e;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},PR=class extends ur{constructor(e,t){super();this.upstream=e;this.maxCount=t;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Me(e.value)}return this.upstream.next()}},MR=class extends ur{constructor(e,t){super();this.upstream=e;this.maxCount=t;this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},FR=class extends ur{constructor(e,t,n=!0){super();this.upstream=e;this.batchSize=t;this.enableSmallLastBatch=n;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},ER=class extends ur{constructor(e,t){super();this.upstream=e;this.predicate=t;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Me(e.value)}}},RR=class extends ur{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ps.getTensorsInContainer(e.value),n=this.transform(e.value),o=Ps.getTensorsInContainer(n);for(let s of t)Ps.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},LR=class extends ur{constructor(e,t){super();this.upstream=e;this.handler=t;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},Ev=class extends ur{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ps.getTensorsInContainer(e.value),n=await this.transform(e.value),o=Ps.getTensorsInContainer(n);for(let s of t)Ps.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},wc=class extends ur{constructor(){super();this.outputQueue=new Jy,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},_R=class extends wc{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Ps.getTensorsInContainer(e.value),n=this.transform(e.value),o=Ps.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let s of t)Ps.isTensorInList(s,o)||s.dispose();return!0}},Lv=class extends ur{constructor(e,t){super();this.baseErrorHandler=t;this.lastRead=null;this.iterator=null;this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},_v=(n=>(n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST",n))(_v||{}),$R=class extends ur{constructor(e,t=0){super();this.iterators=e;this.mismatchMode=t;this.count=0;this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function o(a){return a instanceof ur?{value:a.next().then(p=>(t++,p.done&&n++,p.value)),recurse:!1}:{value:null,recurse:!0}}let s=await Zy(this.iterators,o);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},$v=class extends ur{constructor(e,t){super();this.upstream=e;this.bufferSize=t;this.buffer=new Mh(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},BR=class extends $v{constructor(e,t,n){super(e,t);this.upstream=e;this.windowSize=t;this.upstreamExhausted=!1;this.random=SR.alea(n||b.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}};var Ii=class{constructor(){this.size=null}batch(e,t=!0){let n=this;b.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let o;return this.size===1/0||this.size==null?o=this.size:t?o=Math.ceil(this.size/e):o=Math.floor(this.size/e),Ln(async()=>(await n.iterator()).columnMajorBatch(e,t,qee),o)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,Ln(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,Ln(async()=>(await t.iterator()).filter(o=>z(()=>e(o))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Ln(async()=>(await t.iterator()).map(n=>z(()=>e(n))),this.size)}mapAsync(e){let t=this;return Ln(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Ln(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,Ln(async()=>{let o=Fh(async()=>({value:await t.iterator(),done:!1}));return vR(o.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,Ln(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let o=this,s=OR.alea(t||b.now().toString());return Ln(async()=>{let a=s.int32();return n&&(a+=s.int32()),(await o.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,Ln(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Ii.MAX_BUFFER_SIZE=1e4;function Ln(r,e=null){return new class extends Ii{constructor(){super(...arguments);this.size=e}async iterator(){return r()}}}function zR(r){return Ln(async()=>Rv(r),r.length)}function GR(r){if(!cp(r))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(r))for(let t=0;t<r.length;t++)e=e==null?r[t].size:Math.min(e,r[t].size);else if(r instanceof Object)for(let t in r)e=e==null?r[t].size:Math.min(e,r[t].size);return Ln(async()=>{let t=await Zy(r,n=>{if(n instanceof Ii)return{value:n.iterator(),recurse:!1};if(cp(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return AR(t,1)},e)}function qee(r){if(r===null)return null;let e=r[0];return CR(e)?{value:jee(r),recurse:!1}:{value:null,recurse:!0}}function jee(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof Ye?mr(r):Fr(r)}var Eh=class extends Ii{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(o=>(o.endsWith("\r")&&(o=o.slice(0,-1)),o))}};var eT='"',Rh=Symbol("out"),UR=Symbol("field"),tT=Symbol("quote"),Bv=Symbol("quoteafterquote"),WR=Symbol("quoteinquote"),Lh=class extends Ii{constructor(e,t){super();this.input=e;this.hasHeader=!0;this.fullColumnNames=null;this.columnNamesValidated=!1;this.columnConfigs=null;this.configuredColumnsOnly=!1;this.delimiter=",";this.delimWhitespace=!1;this.base=new Eh(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(b.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&b.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((o,s)=>(o[s]=o[s]+1||1,o),{}),n=Object.keys(t).filter(o=>t[o]>1);if(b.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let o of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(o)===-1)throw new Error('The key "'+o+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},o={};for(let s=0;s<this.fullColumnNames.length;s++){let a=this.fullColumnNames[s],i=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!i)){let p=t[s],u=null;if(p==="")if(i&&i.default!==void 0)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{let l=Number(p);if(isNaN(l))i&&i.dtype==="bool"?u=this.getBoolean(p):u=p;else if(!i||!i.dtype)u=l;else switch(i.dtype){case"float32":u=l;break;case"int32":u=Math.floor(l);break;case"bool":u=this.getBoolean(p);break;default:u=l}}i&&i.isLabel?o[a]=u:n[a]=u}}return Object.keys(o).length===0?n:{xs:n,ys:o}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],o=0,s=e.length,a=Rh;for(let i=0;i<s;i++)switch(a){case Rh:switch(e.charAt(i)){case eT:o=i+1,a=tT;break;case this.delimiter:if(o=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=Rh;break;default:a=UR,o=i;break}break;case UR:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(o,i)),a=Rh,o=i+1;break;default:}break;case tT:switch(e.charAt(i)){case eT:a=Bv;break;default:}break;case Bv:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(o,i-1)),a=Rh,o=i+1;break;case eT:a=tT;break;default:a=WR;break}break;case WR:switch(e.charAt(i)){case eT:a=tT;break;default:}break;default:}if(a===Bv?n.push(e.substring(o,s-1)):n.push(e.substring(o)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}};var _h=class extends ur{constructor(e){super();this.microphoneConfig=e;this.isClosed=!1;this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!B().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new _h(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let o=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(o,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let o=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(o,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(o=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&o({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),o({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((o,s)=>n.set(o,s*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(b.sizeFromShape(t));return n.set(e,n.length-e.length),Fr(n,t)}};var $h=class extends ur{constructor(e,t){super();this.webcamVideoElement=e;this.webcamConfig=t;this.isClosed=!0;this.resize=!1;if(this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Ot([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,o=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-n)/2,a=(1-o)/2,i=s+n,p=o+a;this.cropBox=fi([a,s,p,i],[1,4])}else this.cropBox=fi([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!B().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new $h(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&b.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Nb.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return z(()=>{let t=Nr(te(e,"float32"),0),n;n=fn.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let o=n.shape;return _(n,o.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}};var Bh=class{};var rT=class extends ur{split(e){return new KR(this,e)}},KR=class extends rT{constructor(e,t){super();this.upstream=e;this.impl=new VR(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},VR=class extends wc{constructor(e,t){super();this.upstream=e;this.separator=t;this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}};var Ov=class extends ur{decodeUTF8(){return new HR(this)}},HR=class extends rT{constructor(e){super();this.upstream=e;this.impl=new qR(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},qR=class extends wc{constructor(e){super();this.upstream=e;if(B().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=Pv();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return B().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}};var Oh=class extends Ov{constructor(e,t={}){super();this.file=e;this.options=t;b.assert(e instanceof Uint8Array||(B().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let o=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,o)));else{let s=new FileReader;s.onload=i=>{let p=s.result;if(p instanceof ArrayBuffer&&(p=new Uint8Array(p)),!(p instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(p)},s.onabort=i=>n(new Error("Aborted")),s.onerror=i=>n(new Error(i.type));let a=this.file.slice(this.offset,o);s.readAsArrayBuffer(a)}this.offset=o}),done:!1}}};async function jR(r,e={},t){let n,o;typeof r=="string"?n=r:(n=r.url,o=Xee(r));let s=await(t||b.fetch)(n,o);if(s.ok){let a=new Uint8Array(await s.arrayBuffer());return new Oh(a,e)}else throw new Error(s.statusText)}var Xee=r=>({method:r.method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:r.referrer,integrity:r.integrity});function nT(r){return typeof r=="string"&&r.slice(0,7)==="file://"}var zh=class extends Bh{constructor(e,t={}){super();this.input=e;this.options=t}async iterator(){if(nT(this.input)&&B().get("IS_NODE")){let e=oT();this.input=e.readFileSync(this.input.slice(7))}return new Oh(this.input,this.options)}};var Gh=class extends Bh{constructor(e,t={}){super();this.url=e;this.fileOptions=t}async iterator(){return nT(this.url)?new zh(this.url,this.fileOptions).iterator():jR(this.url,this.fileOptions)}};function XR(r,e={}){return new Lh(new Gh(r),e)}function YR(r){let e=Fh(r);return Ln(async()=>e)}function QR(r){return Ln(async()=>{let e=await r();return Fh(()=>e.next())})}async function ZR(r,e){return $h.create(r,e)}async function JR(r){return _h.create(r)}var eL="0.0.0";function oe(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&b.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}var Yee=br.whereImpl,zv=class extends is{constructor(){super();this.blockSize=48;this.firstUse=!0;this.data=new ei(this,Hn())}nextDataId(){return zv.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,B().get("IS_NODE")&&C.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let o={id:this.nextDataId()};return this.data.set(o,{values:e,dtype:n,refCount:1}),o}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(a=>b.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return{dataId:o,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,o,s){this.data.set(e,{values:t,dtype:o,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let o=this.readSync(n.real.dataId),s=this.readSync(n.imag.dataId);return C.mergeRealAndImagArrays(o,s)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>b.decodeString(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}makeOutput(e,t,n){let o=this.write(e,t,n);return Hn().makeTensorFromDataId(o,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=b.now();return e(),{kernelMs:b.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){oe([e],"where");let t=this.readSync(e.dataId);return Yee(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},Uh=zv;Uh.nextDataId=0;var Ec={};Xe(Ec,{addImpl:()=>Uv,bincountImpl:()=>Pc,bincountReduceImpl:()=>sT,ceilImpl:()=>Wv,concatImpl:()=>Cl,equalImpl:()=>Kv,expImpl:()=>Hv,expm1Impl:()=>jv,floorImpl:()=>Xv,gatherNdImpl:()=>aT,gatherV2Impl:()=>iT,greaterEqualImpl:()=>Qv,greaterImpl:()=>Yv,lessEqualImpl:()=>Jv,lessImpl:()=>Zv,linSpaceImpl:()=>uT,logImpl:()=>eA,maxImpl:()=>pT,maximumImpl:()=>tA,minimumImpl:()=>rA,multiplyImpl:()=>Wh,negImpl:()=>nA,notEqualImpl:()=>oA,prodImpl:()=>sA,rangeImpl:()=>Sl,rsqrtImpl:()=>aA,sigmoidImpl:()=>AL,simpleAbsImpl:()=>Gv,sliceImpl:()=>vl,sparseFillEmptyRowsImpl:()=>lT,sparseReshapeImpl:()=>mT,sparseSegmentReductionImpl:()=>Fc,sqrtImpl:()=>DL,squaredDifferenceImpl:()=>uA,stridedSliceImpl:()=>cT,stringNGramsImpl:()=>dT,stringSplitImpl:()=>fT,stringToHashBucketFastImpl:()=>hT,subImpl:()=>pA,tileImpl:()=>gT,topKImpl:()=>bT,transposeImpl:()=>Mc,uniqueImpl:()=>yT});function Gv(r){let e=new Float32Array(r.length);for(let t=0;t<r.length;++t)e[t]=Math.abs(r[t]);return e}var Qee=r=>{let{x:e}=r.inputs,t=r.backend;oe(e,"abs");let n=new Float32Array(b.sizeFromShape(e.shape)),o=t.data.get(e.dataId).values;return n=Gv(o),t.makeOutput(n,e.shape,e.dtype)},rL={kernelName:us,backendName:"cpu",kernelFunc:Qee};function nt(r){return(e,t,n,o,s)=>{let a=C.assertAndGetBroadcastShape(e,t),i=a.length,p=b.computeStrides(a),u=b.sizeFromShape(a),l=b.getTypedArrayFromDType(s,u),m=e.length,c=t.length,d=b.computeStrides(e),f=b.computeStrides(t),h=C.getBroadcastDims(e,a),g=C.getBroadcastDims(t,a);if(h.length+g.length===0)for(let y=0;y<l.length;++y)l[y]=r(n[y%n.length],o[y%o.length]);else for(let y=0;y<l.length;++y){let T=b.indexToLoc(y,i,p),x=T.slice(-m);h.forEach(P=>x[P]=0);let I=b.locToIndex(x,m,d),k=T.slice(-c);g.forEach(P=>k[P]=0);let N=b.locToIndex(k,c,f);l[y]=r(n[I],o[N])}return[l,a]}}function vr(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,i=t.makeTensorInfo(n.shape,"complex64"),p=t.data.get(i.dataId);return p.complexTensorInfos={real:t.makeTensorInfo(n.shape,"float32",s),imag:t.makeTensorInfo(o.shape,"float32",a)},i}var nL={kernelName:Eu,backendName:"cpu",kernelFunc:vr};function Nc(r,e,t="float32"){if(t==="complex64"){let o=Nc(r,e,"float32"),s=Nc(r,e,"float32");return vr({inputs:{real:o,imag:s},backend:r})}let n=b.makeZerosTypedArray(b.sizeFromShape(e),t);return r.makeTensorInfo(e,t,n)}function Hr(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var oL={kernelName:Un,backendName:"cpu",kernelFunc:Hr};function Ks(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.real,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var sL={kernelName:Gu,backendName:"cpu",kernelFunc:Ks};function Vs(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return Hr({inputs:{x:o},backend:t});let a=Nc(t,o.shape,o.dtype),i=Vs({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),p=vr({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),p}if(o.dtype==="complex64"){let a=Ks({inputs:{input:o},backend:t}),i=Vs({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),i}if(!b.hasEncodingLoss(o.dtype,s)){let a=Hr({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32"){let a=t.data.get(o.dataId).values,i=Int32Array.from(a);return t.makeTensorInfo(o.shape,"int32",i)}if(s==="bool"){let a=t.data.get(o.dataId).values,i=b.toTypedArray([0],o.dtype),[p,u]=nt((l,m)=>l!==m?1:0)(o.shape,[],a,i,"bool");return t.makeTensorInfo(u,"bool",p)}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var aL={kernelName:zn,backendName:"cpu",kernelFunc:Vs};function ut(r,e,t,n){return t==null?({inputs:o,backend:s})=>{let{a,b:i}=o,p=s;oe([a,i],r);let u=p.data.get(a.dataId).values,l=p.data.get(i.dataId).values,m=a.dtype==="string"?C.fromUint8ToStringArray(u):u,c=a.dtype==="string"?C.fromUint8ToStringArray(l):l,d=n||a.dtype,[f,h]=e(a.shape,i.shape,m,c,d);return p.makeTensorInfo(h,d,f)}:({inputs:o,backend:s})=>{let{a,b:i}=o,p=s;if(a.dtype==="complex64"||i.dtype==="complex64"){let u=Vs({inputs:{x:a},backend:p,attrs:{dtype:"complex64"}}),l=p.data.get(u.dataId),m=l.complexTensorInfos.real,c=l.complexTensorInfos.imag,d=p.data.get(m.dataId).values,f=p.data.get(c.dataId).values,h=Vs({inputs:{x:i},backend:p,attrs:{dtype:"complex64"}}),g=p.data.get(h.dataId),y=g.complexTensorInfos.real,T=g.complexTensorInfos.imag,x=p.data.get(y.dataId).values,I=p.data.get(T.dataId).values,[k,N,P]=t(a.shape,i.shape,d,f,x,I),F=p.makeTensorInfo(P,"float32",k),E=p.makeTensorInfo(P,"float32",N),$=vr({inputs:{real:F,imag:E},backend:p});return p.disposeIntermediateTensorInfo(u),p.disposeIntermediateTensorInfo(h),p.disposeIntermediateTensorInfo(F),p.disposeIntermediateTensorInfo(E),$}else{let u=p.data.get(a.dataId).values,l=p.data.get(i.dataId).values,m=n||a.dtype,[c,d]=e(a.shape,i.shape,u,l,m);return p.makeTensorInfo(d,m,c)}}}function Dc(r){return(e,t,n,o,s,a)=>{let i=C.assertAndGetBroadcastShape(e,t),p=b.sizeFromShape(i),u=i.length,l=b.computeStrides(i),m=b.getTypedArrayFromDType("float32",p),c=b.getTypedArrayFromDType("float32",p),d=C.getBroadcastDims(e,i),f=C.getBroadcastDims(t,i),h=C.mergeRealAndImagArrays(n,o),g=C.mergeRealAndImagArrays(s,a),y=e.length,T=b.computeStrides(e),x=t.length,I=b.computeStrides(t);if(d.length+f.length===0)for(let k=0;k<m.length;k++){let N=k%h.length,P=k%g.length,F=r(h[N*2],h[N*2+1],g[P*2],g[P*2+1]);m[k]=F.real,c[k]=F.imag}else for(let k=0;k<m.length;k++){let N=b.indexToLoc(k,u,l),P=N.slice(-y);d.forEach(W=>P[W]=0);let F=b.locToIndex(P,y,T),E=N.slice(-x);f.forEach(W=>E[W]=0);let $=b.locToIndex(E,x,I),U=r(h[F*2],h[F*2+1],g[$*2],g[$*2+1]);m[k]=U.real,c[k]=U.imag}return[m,c,i]}}var Uv=nt((r,e)=>r+e),Zee=Dc((r,e,t,n)=>({real:r+t,imag:e+n})),yu=ut(wn,Uv,Zee),iL={kernelName:wn,backendName:"cpu",kernelFunc:yu};function Pc(r,e,t,n,o){let s=b.sizeFromShape(n),a=b.makeZerosTypedArray(o,t);for(let i=0;i<r.length;i++){let p=r[i];if(p<0)throw new Error("Input x must be non-negative!");p>=o||(s>0?a[p]+=e[i]:a[p]+=1)}return a}function sT(r,e,t,n=!1){let o=r.shape[0],s=r.shape[1],a=Ce([o,t],e.dtype);for(let i=0;i<o;i++)for(let p=0;p<s;p++){let u=r.get(i,p);if(u<0)throw new Error("Input x must be non-negative!");u>=t||(n?a.set(1,i,u):e.size>0?a.set(a.get(i,u)+e.get(i,p),i,u):a.set(a.get(i,u)+1,i,u))}return a}function kn(r){return(e,t,n)=>{let o=b.getTypedArrayFromDType(t,e.length);for(let s=0;s<e.length;++s)o[s]=r(e[s],n);return o}}function Fe(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(oe(a,r),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,p=i.data.get(a.dataId).values,u=b.sizeFromShape(a.shape),l=t||a.dtype,m=b.getArrayFromDType(l,u);for(let c=0;c<u;++c)m[c]=e(p[c],o);return i.makeTensorInfo(a.shape,l,m)}}function Hs(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(oe(a,r),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,p=i.data.get(a.dataId).values,u=t||a.dtype,l=e(p,u,o);return i.makeTensorInfo(a.shape,u,l)}}var Wv=kn(r=>Math.ceil(r)),Jee=Hs(uo,Wv),uL={kernelName:uo,backendName:"cpu",kernelFunc:Jee};function Cl(r,e,t,n){let o=b.getArrayFromDType(t,b.sizeFromShape(e));if(n&&t!=="string"){let s=0;r.forEach(a=>{let i=b.sizeFromShape(a.shape);o.set(a.vals,s),s+=i})}else{let s=0;r.forEach(a=>{let i=t==="string"?C.fromUint8ToStringArray(a.vals):a.vals,p=0;for(let u=0;u<a.shape[0];++u){let l=u*e[1]+s;for(let m=0;m<a.shape[1];++m)o[l+m]=i[p++]}s+=a.shape[1]})}return o}var Kv=nt((r,e)=>r===e?1:0),Vv=ut(ma,Kv,null,"bool"),pL={kernelName:ma,backendName:"cpu",kernelFunc:Vv};var Hv=kn(r=>Math.exp(r)),qv=Hs(yo,Hv,"float32"),lL={kernelName:yo,backendName:"cpu",kernelFunc:qv};var jv=kn(r=>Math.expm1(r)),ete=Hs(ca,jv),mL={kernelName:ca,backendName:"cpu",kernelFunc:ete};var Xv=kn(r=>Math.floor(r)),tte=Hs(To,Xv),cL={kernelName:To,backendName:"cpu",kernelFunc:tte};function aT(r,e,t,n,o,s,a,i,p){let u=Ce([n,s],t);for(let l=0;l<n;l++){let m=[],c=0;for(let d=0;d<o;d++){let f=r[l*o+d];c+=f*a[d],m.push(f)}if(c<0||c>=p/s)throw new Error(`Invalid indices: ${m} does not index into ${i}`);for(let d=0;d<s;d++)u.values[l*s+d]=e.get(...e.indexToLoc(c*s+d))}return u}function iT(r,e,t){let n=Ce(t,r.dtype);for(let o=0;o<n.size;++o){let a=n.indexToLoc(o).slice(),i=a[0],p=a[2],u=e.locToIndex([i,p]);a[2]=e.values[u];let l=r.locToIndex(a);0<=l&&l<r.values.length&&(n.values[o]=r.values[l])}return n}var Yv=nt((r,e)=>r>e?1:0),rte=ut(ha,Yv,null,"bool"),dL={kernelName:ha,backendName:"cpu",kernelFunc:rte};var Qv=nt((r,e)=>r>=e?1:0),nte=ut(Co,Qv,null,"bool"),fL={kernelName:Co,backendName:"cpu",kernelFunc:nte};var Zv=nt((r,e)=>r<e?1:0),ote=ut(ga,Zv,null,"bool"),hL={kernelName:ga,backendName:"cpu",kernelFunc:ote};var Jv=nt((r,e)=>r<=e?1:0),ste=ut(ba,Jv,null,"bool"),gL={kernelName:ba,backendName:"cpu",kernelFunc:ste};function uT(r,e,t){let n=(e-r)/(t-1),o=b.makeZerosTypedArray(t,"float32");o[0]=r;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}var eA=kn(r=>Math.log(r)),ate=Hs(So,eA),bL={kernelName:So,backendName:"cpu",kernelFunc:ate};function pT(r,e,t,n){let o=b.getTypedArrayFromDType(n,b.sizeFromShape(t));for(let s=0;s<o.length;++s){let a=s*e,i=r[a];for(let p=0;p<e;++p){let u=r[a+p];(Number.isNaN(u)||u>i)&&(i=u)}o[s]=i}return o}var tA=nt((r,e)=>Math.max(r,e)),ite=ut(Ao,tA),yL={kernelName:Ao,backendName:"cpu",kernelFunc:ite};var rA=nt((r,e)=>Math.min(r,e)),ute=ut(Po,rA),TL={kernelName:Po,backendName:"cpu",kernelFunc:ute};var Wh=nt((r,e)=>r*e),pte=Dc((r,e,t,n)=>({real:r*t-e*n,imag:r*n+e*t})),kl=ut(Fo,Wh,pte),xL={kernelName:Fo,backendName:"cpu",kernelFunc:kl};function nA(r,e,t){let n=b.createScalarValue(-1,t);return Wh([],e,n,r,t)}function lte(r){let{inputs:e,backend:t}=r,{x:n}=e;oe(n,"neg");let o=t.data.get(n.dataId).values,[s,a]=nA(o,n.shape,n.dtype);return t.makeTensorInfo(a,n.dtype,s)}var IL={kernelName:ds,backendName:"cpu",kernelFunc:lte};var oA=nt((r,e)=>r!==e?1:0),mte=ut(Ta,oA,null,"bool"),CL={kernelName:Ta,backendName:"cpu",kernelFunc:mte};function Mc(r,e,t,n,o){let s=e.length,a=b.sizeFromShape(e),i=b.computeStrides(e),p=b.computeStrides(o),u=b.getTypedArrayFromDType(t,b.sizeFromShape(o));for(let l=0;l<a;++l){let m=b.indexToLoc(l,s,i),c=new Array(m.length);for(let f=0;f<c.length;f++)c[f]=m[n[f]];let d=b.locToIndex(c,s,p);u[d]=r[l]}return u}function Xt(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{perm:s}=t;oe(o,"transpose");let a=o.shape.length,i=new Array(a);for(let m=0;m<i.length;m++)i[m]=o.shape[s[m]];let p=n.data.get(o.dataId).values,u=Mc(p,o.shape,o.dtype,s,i);return{dataId:n.write(u,i,o.dtype),shape:i,dtype:o.dtype}}var kL={kernelName:Xo,backendName:"cpu",kernelFunc:Xt};function sA(r,e,t,n){let[o,s]=C.computeOutAndReduceShapes(r,n),a=Ft(e,"int32"),i=b.makeZerosTypedArray(b.sizeFromShape(o),a),p=b.sizeFromShape(s);for(let u=0;u<i.length;++u){let l=u*p,m=1;for(let c=0;c<p;++c)m*=t[l+c];i[u]=m}return{outVals:i,outShape:o,outDtype:a}}function cte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;oe(o,"prod");let i=o.shape.length,p=b.parseAxisParam(s,o.shape),u=C.getAxesPermutation(p,i),l=p,m=o,c=[];u!=null&&(m=Xt({inputs:{x:o},backend:t,attrs:{perm:u}}),c.push(m),l=C.getInnerMostAxes(l.length,i));let d=t.data.get(m.dataId).values,{outVals:f,outShape:h,outDtype:g}=sA(m.shape,m.dtype,d,l),y=h;return a&&(y=C.expandShapeToKeepDim(h,p)),c.forEach(T=>t.disposeIntermediateTensorInfo(T)),t.makeTensorInfo(y,g,f)}var SL={kernelName:_o,backendName:"cpu",kernelFunc:cte};function Sl(r,e,t,n){let o=r===e,s=r<e&&t<0,a=e<r&&t>1;if(o||s||a)return b.makeZerosTypedArray(0,n);let i=Math.abs(Math.ceil((e-r)/t)),p=b.makeZerosTypedArray(i,n);e<r&&t===1&&(t=-1),p[0]=r;for(let u=1;u<p.length;u++)p[u]=p[u-1]+t;return p}var aA=kn(r=>1/Math.sqrt(r)),dte=Hs(zo,aA),vL={kernelName:zo,backendName:"cpu",kernelFunc:dte};var AL=kn(r=>1/(1+Math.exp(-r))),iA=Fe(Uo,r=>1/(1+Math.exp(-r))),wL={kernelName:Uo,backendName:"cpu",kernelFunc:iA};function vl(r,e,t,n,o){let s=Tt.isSliceContinous(n,e,t),a=b.sizeFromShape(t),i=b.computeStrides(n);if(s){let m=Tt.computeFlatOffset(e,i);return o==="string"?r.slice(m,m+a):r.subarray(m,m+a)}let p=o==="string"?C.fromUint8ToStringArray(r):r,u=Ce(n,o,p),l=Ce(t,o);for(let m=0;m<l.size;++m){let c=l.indexToLoc(m),d=c.map((f,h)=>f+e[h]);l.set(u.get(...d),...c)}return o==="string"?C.fromStringArrayToUint8(l.values):l.values}function qs(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n;oe(o,"slice");let[i,p]=Tt.parseSliceParams(o,s,a);Tt.assertParamsValid(o,i,p);let u=t.data.get(o.dataId).values,l=vl(u,i,p,o.shape,o.dtype);return t.makeTensorInfo(p,o.dtype,l)}var NL={kernelName:ys,backendName:"cpu",kernelFunc:qs};function lT(r,e,t,n,o,s,a){let i=e[0],p=s[0],u=new Array(p),l=new Array(i),m=e[1];if(p===0){if(i!==0)throw new Error(C.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));let g=b.getArrayFromDType(t,0),y=b.getArrayFromDType(o,0);return[g,[0,m],y,u,l]}let c=!0,d=0,f=new Array(p).fill(0);for(let g=0;g<i;++g){let y=r[g*m];if(y<0)throw new Error(C.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=p)throw new Error(C.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,p));++f[y],c=c&&y>=d,d=y}let h=!0;for(let g=0;g<p;++g){let y=f[g]===0;u[g]=y,h=h&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(h&&c){let g=r,y=n;for(let T=0;T<i;++T)l[T]=T;return[g,[i,m],y,u,l]}else{let g=f[p-1],y=b.getArrayFromDType(t,g*m),T=b.getArrayFromDType(o,g),x=new Array(p).fill(0);for(let I=0;I<i;++I){let k=r[I*m],N=x[k],P=(k===0?0:f[k-1])+N;x[k]++;for(let F=0;F<m;++F)y[P*m+F]=r[I*m+F];T[P]=n[I],l[I]=P}for(let I=0;I<p;++I)if(x[I]===0){let N=I===0?0:f[I-1];y[N*m+0]=I;for(let P=1;P<m;++P)y[N*m+P]=0;T[N]=a}return[y,[g,m],T,u,l]}}function mT(r,e,t,n,o){let s=b.sizeFromShape(n),a=e[0],i=o.length,p=[],u=1,l=-1;for(let g=0;g<i;++g){let y=o[g];if(y===-1){if(l!==-1)throw new Error(C.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(l,g));l=g,p.push(1)}else{if(y<0)throw new Error(C.getSparseReshapeNegativeOutputDimErrorMessage(g,y));u*=y,p.push(y)}}if(l!==-1){if(u<=0)throw new Error(C.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(s/u);if(u*g!==s)throw new Error(C.getSparseReshapeInputOutputMultipleErrorMessage(n,p));p[l]=g}if(b.sizeFromShape(p)!==s)throw new Error(C.getSparseReshapeInputOutputMismatchErrorMessage(n,p));let c=n.length,d=[];if(c>0){d[c-1]=1;for(let g=c-2;g>=0;--g)d[g]=d[g+1]*n[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*p[g+1]}let h=b.getArrayFromDType(t,a*i);for(let g=0;g<a;++g){let y=0;for(let T=0;T<c;++T)y+=r[g*c+T]*d[T];for(let T=0;T<i;++T)h[g*i+T]=Math.trunc(y/f[T]),y%=f[T]}return[h,[a,i],p]}function Fc(r,e,t,n,o,s=!1,a=0){let i=n.length,p=[e[0],r.length/e[0]],u=p[1],m=i>0?o[i-1]+1:0;if(m<0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let c=e.slice();c[0]=m;let d=c.reduce((x,I)=>x*I,1),f=b.getArrayFromDType(t,d);if(i===0)return m>0&&f.fill(a),[f,c];if(m<=0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=0,g=1,y=0,T=o[h];for(;;){let x=0;if(g<i){if(x=o[g],T===x){++g;continue}if(T>=x)throw new Error(C.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(T<0||T>=m)throw new Error(C.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(T,m));T>y&&f.fill(a,y*u,T*u);for(let I=h;I<g;++I){let k=n[I];if(k<0||k>=p[0])throw new Error(C.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(I,n[I],p[0]));for(let N=0;N<u;N++)f[T*u+N]+=r[k*u+N]}if(s)for(let I=0;I<u;I++)f[T*u+I]/=g-h;if(h=g,++g,y=T+1,T=x,g>i)break}return y<m&&f.fill(a,y*u,m*u),[f,c]}var DL=kn(r=>Math.sqrt(r)),fte=Fe(Wo,r=>Math.sqrt(r)),PL={kernelName:Wo,backendName:"cpu",kernelFunc:fte};var uA=nt((r,e)=>{let t=r-e;return t*t}),hte=ut(Ho,uA),ML={kernelName:Ho,backendName:"cpu",kernelFunc:hte};function cT(r,e,t,n){let o=Ce(r,e.dtype);for(let s=0;s<o.size;s++){let a=o.indexToLoc(s),i=new Array(a.length);for(let p=0;p<i.length;p++)i[p]=a[p]*t[p]+n[p];o.set(e.get(...i),...a)}return o}var FL=class{constructor(e,t,n,o,s,a){this.separator=b.encodeString(e),this.nGramWidths=t,this.leftPad=b.encodeString(n),this.rightPad=b.encodeString(o),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,o,s,a){for(let i=0;i<s;++i){let p=this.getPadWidth(a),u=Math.max(0,p-i),l=Math.max(0,p-(s-(i+1))),m=a-(u+l),c=t+(u>0?0:i-p),d=0;d+=u*this.leftPad.length;for(let T=0;T<m;++T)d+=e[c+T].length;d+=l*this.rightPad.length,d+=(u+l+m-1)*this.separator.length,n[o+i]=new Uint8Array(d);let h=n[o+i],g=0,y=T=>T.forEach(x=>h[g++]=x);for(let T=0;T<u;++T)y(this.leftPad),y(this.separator);for(let T=0;T<m-1;++T)y(e[c+T]),y(this.separator);if(m>0){y(e[c+m-1]);for(let T=0;T<l;++T)y(this.separator),y(this.rightPad)}else{for(let T=0;T<l-1;++T)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(e,t){let n=e.length,o=t.length;if(o>0){let p=t[0];if(p!==0)throw new Error(`First split value must be 0, got ${p}`);for(let u=1;u<o;++u){let l=t[u]>=p;if(l=l&&t[u]<=n,!l)throw new Error(`Invalid split value ${t[u]}, must be in [${p}, ${n}]`);p=t[u]}if(p!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${p}`)}let s=o-1,a=b.getArrayFromDType("int32",o);if(n===0||o===0){let p=new Array(n);for(let u=0;u<=s;++u)a[u]=0;return[p,a]}a[0]=0;for(let p=1;p<=s;++p){let u=t[p]-t[p-1],l=0;this.nGramWidths.forEach(m=>{l+=this.getNumNGrams(u,m)}),this.preserveShort&&u>0&&l===0&&(l=1),a[p]=a[p-1]+l}let i=new Array(a[s]);for(let p=0;p<s;++p){let u=t[p],l=a[p];if(this.nGramWidths.forEach(m=>{let c=t[p+1]-t[p],d=this.getNumNGrams(c,m);this.createNGrams(e,u,i,l,d,m),l+=d}),this.preserveShort&&l===a[p]){let m=t[p+1]-t[p];if(m===0)continue;let c=m+2*this.padWidth,d=1;this.createNGrams(e,u,i,l,d,c)}}return[i,a]}};function dT(r,e,t,n,o,s,a,i){return new FL(t,n,o,s,a,i).compute(r,e)}function gte(r,e,t,n){if(!r.length)return;if(e.length===0){for(let s=0;s<r.length;++s)n.push(r.subarray(s,s+1));return}if(e.length===1){let s=e[0],a=r.indexOf(s);for(;a!==-1;){let i=r.subarray(0,a);(!t||i.length!==0)&&n.push(i),r=r.subarray(a+1),a=r.indexOf(s)}(!t||r.length!==0)&&n.push(r);return}let o=0;for(let s=0;s<r.length+1;s++)if(s===r.length||e.indexOf(r[s])!==-1){let a=r.subarray(o,s);(!t||a.length!==0)&&n.push(a),o=s+1}}function fT(r,e,t){let n=r.length,o=[],s=0,a=0,i=new Array(n);for(let c=0;c<n;++c){let d=o.length;gte(r[c],e,t,o);let f=o.length-d;i[c]=f,s+=f,a=Math.max(a,f)}let p=b.getArrayFromDType("int32",s*2),u=new Array(s),l=[n,a],m=0;for(let c=0;c<n;++c)for(let d=0;d<i[c];++d)p[m*2]=c,p[m*2+1]=d,u[m]=o[m],++m;return[p,u,l]}function hT(r,e){let t=b.getArrayFromDType("int32",r.length);for(let n=0;n<r.length;++n)t[n]=b.fingerPrint64(r[n]).modulo(e).getLowBitsUnsigned();return t}var pA=nt((r,e)=>r-e),bte=Dc((r,e,t,n)=>({real:r-t,imag:e-n})),Kh=ut(qo,pA,bte),EL={kernelName:qo,backendName:"cpu",kernelFunc:Kh};function gT(r,e){let t=new Array(r.rank);for(let o=0;o<t.length;o++)t[o]=r.shape[o]*e[o];let n=Ce(t,r.dtype);for(let o=0;o<n.values.length;++o){let s=n.indexToLoc(o),a=new Array(r.rank);for(let p=0;p<a.length;p++)a[p]=s[p]%r.shape[p];let i=r.locToIndex(a);n.values[o]=r.values[i]}return n}var Vh=(r,e)=>{let t=e.value-r.value;return t===0?r.index-e.index:t};function RL(r,e,t=0,n=r.length-1){for(;n>t;){if(n-t>600){let i=n-t+1,p=e-t+1,u=Math.log(i),l=.5*Math.exp(2*u/3),m=.5*Math.sqrt(u*l*(i-l)/i)*Math.sign(p-i/2),c=Math.max(t,Math.floor(e-p*l/i+m)),d=Math.min(n,Math.floor(e+(i-p)*l/i+m));RL(r,e,c,d)}let o=r[e],s=t,a=n;for(b.swap(r,t,e),Vh(r[n],o)>0&&b.swap(r,t,n);s<a;){for(b.swap(r,s,a),s++,a--;Vh(r[s],o)<0;)s=s+1;for(;Vh(r[a],o)>0;)a=a-1}Vh(r[t],o)===0?b.swap(r,t,a):(a=a+1,b.swap(r,a,n)),a<=e&&(t=a+1),e<=a&&(n=a-1)}}function bT(r,e,t,n,o){let s=e[e.length-1],[a,i]=[r.length/s,s],p=b.getTypedArrayFromDType(t,a*n),u=b.getTypedArrayFromDType("int32",a*n);for(let m=0;m<a;m++){let c=m*i,d=r.subarray(c,c+i),f=new Array(d.length);d.forEach((T,x)=>f[x]={value:T,index:x}),n<f.length&&(RL(f,n),f=f.slice(0,n)),o&&f.sort(Vh);let h=m*n,g=p.subarray(h,h+n),y=u.subarray(h,h+n);for(let T=0;T<n;T++)g[T]=f[T].value,y[T]=f[T].index}let l=e.slice();return l[l.length-1]=n,[Ce(l,t,p),Ce(l,"int32",u)]}function yT(r,e,t,n){let o=b.parseAxisParam(e,t)[0],s=[1,t[0],1];for(let f=0;f<o;f++)s[0]*=t[f];s[1]=t[o];for(let f=o+1;f<t.length;f++)s[2]*=t[f];let a={},i=new Int32Array(t[o]),p=new gt(s,n,r),u=[],l=s[0]===1&&s[2]===1;for(let f=0;f<t[o];f++){let h;if(l)h=r[f].toString();else{let g=[];for(let y=0;y<s[0];y++)for(let T=0;T<s[2];T++)g.push(p.get(y,f,T));h=g.join(",")}if(a[h]!==void 0)i[f]=a[h];else{let g=Object.keys(a).length;a[h]=g,i[f]=g,u.push(f)}}let m=s.slice();m[1]=Object.keys(a).length;let c=new gt(m,n);u.forEach((f,h)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)c.set(p.get(g,f,y),g,h,y)});let d=t.slice();return d[o]=m[1],{outputValues:c.values,outputShape:d,indices:i}}var yte="0.0.0";Ju("cpu",()=>new Uh,1);var lA=Fe(bo,r=>r>=0?r:Math.exp(r)-1),LL={kernelName:bo,backendName:"cpu",kernelFunc:lA};function mA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n;oe([o],"leakyRelu");let a=b.sizeFromShape(o.shape),i=t.data.get(o.dataId).values,p=b.getTypedArrayFromDType("float32",a);for(let u=0;u<i.length;u++)p[u]=i[u]<0?s*i[u]:i[u];return t.makeTensorInfo(o.shape,"float32",p)}var _L={kernelName:ko,backendName:"cpu",kernelFunc:mA};var Tte=nt((r,e)=>r<0?e*r:r);function cA(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e;oe([n,o],"prelu");let s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,[i,p]=Tte(n.shape,o.shape,s,a,"float32");return t.makeTensorInfo(p,"float32",i)}var $L={kernelName:Lo,backendName:"cpu",kernelFunc:cA};var dA=Fe($o,r=>Math.max(0,r)),BL={kernelName:$o,backendName:"cpu",kernelFunc:dA};var fA=Fe(Oo,r=>Math.min(Math.max(0,r),6)),OL={kernelName:Oo,backendName:"cpu",kernelFunc:fA};function Rc(r,e,t,n,o){if(t==="linear")return Hr({inputs:{x:e},backend:r});if(t==="relu")return dA({inputs:{x:e},backend:r});if(t==="elu")return lA({inputs:{x:e},backend:r});if(t==="relu6")return fA({inputs:{x:e},backend:r});if(t==="prelu")return cA({inputs:{x:e,alpha:n},backend:r});if(t==="leakyrelu")return mA({inputs:{x:e},backend:r,attrs:{alpha:o}});if(t==="sigmoid")return iA({inputs:{x:e},backend:r});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}function at(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,a=b.sizeFromShape(o.shape),i=b.inferFromImplicitShape(s,a),p=b.sizeFromShape(i);b.assert(a===p,()=>`The new shape (${i}) has ${p} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(o.dataId);let u=t.data.get(o.dataId);if(u.complexTensorInfos!=null){let l=u.complexTensorInfos.real,m=u.complexTensorInfos.imag;l.shape=i,m.shape=i}return{dataId:o.dataId,shape:i,dtype:o.dtype}}var zL={kernelName:gs,backendName:"cpu",kernelFunc:at};function hA(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;oe([o,s],"matMul");let p=o.shape.length,u=s.shape.length,l=a?o.shape[p-2]:o.shape[p-1],m=i?s.shape[u-1]:s.shape[u-2],c=a?o.shape[p-1]:o.shape[p-2],d=i?s.shape[u-2]:s.shape[u-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=b.sizeFromShape(f),y=b.sizeFromShape(h),x=wr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);b.assert(l===m,()=>`Error in matMul: inner shapes (${l}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let I=a?[g,l,c]:[g,c,l],k=i?[y,d,m]:[y,m,d],N=at({inputs:{x:o},backend:t,attrs:{shape:I}}),P=at({inputs:{x:s},backend:t,attrs:{shape:k}}),F=a?N.shape[1]:N.shape[2],E=a?N.shape[2]:N.shape[1],$=i?P.shape[1]:P.shape[2],U=Math.max(g,y),W=t.data.get(N.dataId).values,V=t.data.get(P.dataId).values,H=b.computeStrides(N.shape),q=b.computeStrides(P.shape),[Y,ee,j]=a?[H[0],1,H[1]]:[H[0],H[1],1],[re,se,ae]=i?[1,q[1],q[0]]:[q[1],1,q[0]],le=E*$,ie=Ce([U,E,$],N.dtype),be=ie.values,he=t.blockSize;for(let Ie=0;Ie<U;Ie++)for(let we=0;we<E;we+=he)for(let Ee=0;Ee<$;Ee+=he)for(let _e=0;_e<F;_e+=he){let Qe=Math.min(we+he,E),J=Math.min(Ee+he,$),ft=Math.min(_e+he,F);for(let Be=we;Be<Qe;Be++)for(let Mt=Ee;Mt<J;Mt++){let wt=0;for(let lt=_e;lt<ft;lt++){let Zt=Math.min(Ie,g-1)*Y,zt=Math.min(Ie,y-1)*ae,tn=W[Zt+Be*ee+lt*j],Vt=V[lt*re+Mt*se+zt];wt+=tn*Vt}be[Ie*le+(Be*$+Mt)]+=wt}}return t.disposeIntermediateTensorInfo(N),t.disposeIntermediateTensorInfo(P),t.makeTensorInfo(x,ie.dtype,ie.values)}var GL={kernelName:io,backendName:"cpu",kernelFunc:hA};function xte(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:p,transposeB:u,activation:l,leakyreluAlpha:m}=n,c,d,f,h=[];c=hA({inputs:{a:o,b:s},attrs:{transposeA:p,transposeB:u},backend:t}),a&&(d=yu({inputs:{a:c,b:a},backend:t}),h.push(c),c=d),l&&(f=Rc(t,c,l,i,m),h.push(c),c=f);for(let y of h)t.disposeIntermediateTensorInfo(y);return c}var UL={kernelName:Ss,backendName:"cpu",kernelFunc:xte};var Ite=Fe(Di,r=>Math.acos(r)),WL={kernelName:Di,backendName:"cpu",kernelFunc:Ite};var Cte=Fe(Pi,r=>Math.acosh(r)),KL={kernelName:Pi,backendName:"cpu",kernelFunc:Cte};function kte(r){let{inputs:e,backend:t}=r,n=e;oe(e,"addN");let o=n.map(i=>t.data.get(i.dataId).values),s=Ce(n[0].shape,n[0].dtype),a=s.values;for(let i=0;i<n.length;i++){let p=o[i];for(let u=0;u<a.length;u++)a[u]+=p[u]}return t.makeTensorInfo(s.shape,s.dtype,s.values)}var VL={kernelName:oo,backendName:"cpu",kernelFunc:kte};function Ste(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;oe(o,"all");let i=b.parseAxisParam(s,o.shape),p=i,u=C.getAxesPermutation(p,o.shape.length),l=o;u!=null&&(l=Xt({inputs:{x:o},backend:t,attrs:{perm:u}}),p=C.getInnerMostAxes(p.length,o.shape.length)),C.assertAxesAreInnerMostDims("all",p,l.shape.length);let[m,c]=C.computeOutAndReduceShapes(l.shape,p),d=b.sizeFromShape(c),f=b.makeZerosTypedArray(b.sizeFromShape(m),l.dtype),h=t.data.get(l.dataId).values;for(let y=0;y<f.length;++y){let T=y*d,x=h[T];for(let I=0;I<d;++I){let k=h[T+I];x=x&&k}f[y]=x}u!=null&&t.disposeIntermediateTensorInfo(l);let g=t.makeTensorInfo(m,l.dtype,f);if(a){let y=C.expandShapeToKeepDim(m,i),T=at({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),T}return g}var HL={kernelName:Mi,backendName:"cpu",kernelFunc:Ste};function vte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;oe(o,"any");let i=b.parseAxisParam(s,o.shape),p=i,u=C.getAxesPermutation(p,o.shape.length),l=o;u!=null&&(l=Xt({inputs:{x:o},backend:t,attrs:{perm:u}}),p=C.getInnerMostAxes(p.length,o.shape.length)),C.assertAxesAreInnerMostDims("any",p,l.shape.length);let[m,c]=C.computeOutAndReduceShapes(l.shape,p),d=b.sizeFromShape(c),f=b.makeZerosTypedArray(b.sizeFromShape(m),l.dtype),h=t.data.get(l.dataId).values;for(let y=0;y<f.length;++y){let T=y*d,x=h[T];for(let I=0;I<d;++I){let k=h[T+I];x=x||k}f[y]=x}u!=null&&t.disposeIntermediateTensorInfo(l);let g=t.makeTensorInfo(m,l.dtype,f);if(a){let y=C.expandShapeToKeepDim(m,i),T=at({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),T}return g}var qL={kernelName:Fi,backendName:"cpu",kernelFunc:vte};function Ate(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;oe(o,"argMax");let a=b.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=Xt({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(p),a=C.getInnerMostAxes(a.length,p.shape.length)),a=[a[0]],C.assertAxesAreInnerMostDims("argMax",a,p.shape.length);let[l,m]=C.computeOutAndReduceShapes(p.shape,a),c=b.sizeFromShape(l),d=b.makeZerosTypedArray(c,"int32"),f=b.sizeFromShape(m),h=t.data.get(p.dataId).values;for(let g=0;g<d.length;++g){let y=g*f,T=h[y],x=0;for(let I=0;I<f;++I){let k=h[y+I];k>T&&(T=k,x=I)}d[g]=x}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(l,"int32",d)}var jL={kernelName:so,backendName:"cpu",kernelFunc:Ate};function wte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;oe(o,"argMin");let a=b.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=Xt({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(p),a=C.getInnerMostAxes(a.length,p.shape.length)),a=[a[0]],C.assertAxesAreInnerMostDims("argMin",a,p.shape.length);let[l,m]=C.computeOutAndReduceShapes(p.shape,a),c=b.sizeFromShape(l),d=b.makeZerosTypedArray(c,"int32"),f=b.sizeFromShape(m),h=t.data.get(p.dataId).values;for(let g=0;g<d.length;++g){let y=g*f,T=h[y],x=0;for(let I=0;I<f;++I){let k=h[y+I];k<T&&(T=k,x=I)}d[g]=x}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(l,"int32",d)}var XL={kernelName:ni,backendName:"cpu",kernelFunc:wte};var Nte=Fe(Ei,r=>Math.asin(r)),YL={kernelName:Ei,backendName:"cpu",kernelFunc:Nte};var Dte=Fe(Ri,r=>Math.asinh(r)),QL={kernelName:Ri,backendName:"cpu",kernelFunc:Dte};var Pte=Fe(Li,r=>Math.atan(r)),ZL={kernelName:Li,backendName:"cpu",kernelFunc:Pte};var Mte=nt((r,e)=>Math.atan2(r,e)),Fte=ut($i,Mte),JL={kernelName:$i,backendName:"cpu",kernelFunc:Fte};var Ete=Fe(_i,r=>Math.atanh(r)),e_={kernelName:_i,backendName:"cpu",kernelFunc:Ete};function Lc(r,e,t,n,o,s){let a=o.strideHeight,i=o.strideWidth,p=o.dilationHeight,u=o.dilationWidth,l=o.effectiveFilterHeight,m=o.effectiveFilterWidth,c=o.padInfo.top,d=o.padInfo.left,f=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=Ce(o.outShape,t),g=h.values,y=o.outShape[1]*o.outShape[2]*o.outShape[3],T=o.outShape[2]*o.outShape[3],x=o.outShape[3];for(let I=0;I<o.batchSize;++I){let k=I*y,N=I*n[0];for(let P=0;P<o.inChannels;++P)for(let F=0;F<o.outHeight;++F){let E=F*a-c,$=Math.max(0,E),U=Math.min(o.inHeight,l+E),W=k+F*T;for(let V=0;V<o.outWidth;++V){let H=V*i-d,q=Math.max(0,H),Y=Math.min(o.inWidth,m+H),ee=f,j=0,re=0;for(let ae=$;ae<U;ae+=p){let le=N+ae*n[1];for(let ie=q;ie<Y;ie+=u){let be=le+ie*n[2],he=r[be+P];s==="max"&&he>ee?ee=he:s==="avg"&&(j+=he,re++)}if(isNaN(ee))break}let se=W+V*x+P;g[se]=s==="avg"?j/re:ee}}}return h}function TT(r,e,t,n,o=!1,s=!1){let a=Ce(n.outShape,"int32"),i=n.strideHeight,p=n.strideWidth,u=n.dilationHeight,l=n.dilationWidth,m=n.effectiveFilterHeight,c=n.effectiveFilterWidth,d=n.padInfo.top,f=n.padInfo.left,h=Ce(e,t,r);for(let g=0;g<n.batchSize;++g)for(let y=0;y<n.inChannels;++y)for(let T=0;T<n.outHeight;++T){let x=T*i-d,I=x;for(;I<0;)I+=u;let k=Math.min(n.inHeight,m+x);for(let N=0;N<n.outWidth;++N){let P=N*p-f,F=P;for(;F<0;)F+=l;let E=Math.min(n.inWidth,c+P),$=Number.NEGATIVE_INFINITY,U=-1;for(let W=I;W<k;W+=u){let V=W-x;for(let H=F;H<E;H+=l){let q=H-P,Y=h.get(g,W,H,y);Y>$&&($=Y,o?U=s?((g*n.inHeight+W)*n.inWidth+H)*n.inChannels+y:(W*n.inWidth+H)*n.inChannels+y:U=V*c+q)}}a.set(U,g,T,N,y)}}return a}function xT(r,e,t,n,o,s){let a=o.strideDepth,i=o.strideHeight,p=o.strideWidth,u=o.dilationDepth,l=o.dilationHeight,m=o.dilationWidth,c=o.effectiveFilterDepth,d=o.effectiveFilterHeight,f=o.effectiveFilterWidth,h=o.padInfo.front,g=o.padInfo.top,y=o.padInfo.left,T=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Ce(o.outShape,t),I=x.values,k=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],N=o.outShape[2]*o.outShape[3]*o.outShape[4],P=o.outShape[3]*o.outShape[4],F=o.outShape[4];for(let E=0;E<o.batchSize;++E){let $=E*k,U=E*n[0];for(let W=0;W<o.inChannels;++W)for(let V=0;V<o.outDepth;++V){let H=V*a-h,q=H;for(;q<0;)q+=u;let Y=Math.min(o.inDepth,c+H),ee=$+V*N;for(let j=0;j<o.outHeight;++j){let re=j*i-g,se=re;for(;se<0;)se+=l;let ae=Math.min(o.inHeight,d+re),le=ee+j*P;for(let ie=0;ie<o.outWidth;++ie){let be=ie*p-y,he=be;for(;he<0;)he+=m;let Ie=Math.min(o.inWidth,f+be),we=le+ie*F,Ee=T,_e=0,Qe=0;for(let ft=q;ft<Y;ft+=u){let Be=U+ft*n[1];for(let Mt=se;Mt<ae;Mt+=l){let wt=Be+Mt*n[2];for(let lt=he;lt<Ie;lt+=m){let Zt=wt+lt*n[3],zt=r[Zt+W];if(s==="max"&&zt>Ee?Ee=zt:s==="avg"&&(_e+=zt,Qe++),isNaN(Ee))break}if(isNaN(Ee))break}if(isNaN(Ee))break}let J=we+W;I[J]=s==="avg"?_e/Qe:Ee}}}}return x}function t_(r,e){let t=Ce(e.outShape,"int32"),n=e.strideDepth,o=e.strideHeight,s=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,p=e.dilationWidth,u=e.effectiveFilterDepth,l=e.effectiveFilterHeight,m=e.effectiveFilterWidth,c=e.padInfo.front,d=e.padInfo.top,f=e.padInfo.left;for(let h=0;h<e.batchSize;++h)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){let T=y*n-c,x=T;for(;x<0;)x+=a;let I=Math.min(e.inDepth,u+T);for(let k=0;k<e.outHeight;++k){let N=k*o-d,P=N;for(;P<0;)P+=i;let F=Math.min(e.inHeight,l+N);for(let E=0;E<e.outWidth;++E){let $=E*s-f,U=$;for(;U<0;)U+=p;let W=Math.min(e.inWidth,m+$),V=Number.NEGATIVE_INFINITY,H=-1;for(let q=x;q<I;q+=a){let Y=q-T;for(let ee=P;ee<F;ee+=i){let j=ee-N;for(let re=U;re<W;re+=p){let se=re-$,ae=r.get(h,q,ee,re,g);ae>=V&&(V=ae,H=Y*l*m+j*l+se)}}}t.set(H,h,y,k,E,g)}}}return t}function Rte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;oe(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1;b.assert(C.eitherStridesOrDilationsAreOne(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let l=C.computePool2DInfo(o.shape,s,a,u,i,p),m;if(l.filterWidth===1&&l.filterHeight===1&&b.arraysEqual(l.inShape,l.outShape))m=Hr({inputs:{x:o},backend:t});else{let c=t.data.get(o.dataId).values,d=b.computeStrides(o.shape),f=Lc(c,o.shape,o.dtype,d,l,"avg");m=t.makeTensorInfo(l.outShape,o.dtype,f.values)}return m}var r_={kernelName:ao,backendName:"cpu",kernelFunc:Rte};function Lte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:p,dataFormat:u}=n;oe(o,"avgPool3d");let l=C.computePool3DInfo(o.shape,s,a,1,i,p,u),m=t.data.get(o.dataId).values,c=xT(m,o.shape,o.dtype,b.computeStrides(o.shape),l,"avg");return t.makeTensorInfo(c.shape,"float32",c.values)}var n_={kernelName:Fu,backendName:"cpu",kernelFunc:Lte};function _te(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:p,dimRoundingMode:u}=n;oe([o,s],"avgPool3DGrad");let l=C.computePool3DInfo(s.shape,a,i,1,p,u),m=l.strideDepth,c=l.strideHeight,d=l.strideWidth,f=l.filterDepth,h=l.filterHeight,g=l.filterWidth,y=l.dilationDepth,T=l.dilationHeight,x=l.dilationWidth,I=l.effectiveFilterDepth,k=l.effectiveFilterHeight,N=l.effectiveFilterWidth,P=I-1-l.padInfo.front,F=N-1-l.padInfo.left,E=k-1-l.padInfo.top,$=Ce(s.shape,"float32"),U=1/(f*h*g),W=t.bufferSync(o);for(let V=0;V<l.batchSize;++V)for(let H=0;H<l.inChannels;++H)for(let q=0;q<l.inDepth;++q)for(let Y=0;Y<l.inHeight;++Y)for(let ee=0;ee<l.inWidth;++ee){let j=q-P,re=Y-E,se=ee-F,ae=0;for(let le=0;le<I;le+=y){let ie=(j+le)/m;if(!(ie<0||ie>=l.outDepth||Math.floor(ie)!==ie))for(let be=0;be<k;be+=T){let he=(re+be)/c;if(!(he<0||he>=l.outHeight||Math.floor(he)!==he))for(let Ie=0;Ie<N;Ie+=x){let we=(se+Ie)/d;if(we<0||we>=l.outWidth||Math.floor(we)!==we)continue;ae+=W.get(V,ie,he,we,H)}}}$.set(ae*U,V,q,Y,ee,H)}return t.makeTensorInfo($.shape,$.dtype,$.values)}var o_={kernelName:um,backendName:"cpu",kernelFunc:_te};function $te(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s;oe([o,s],"avgPoolGrad");let{filterSize:i,strides:p,pad:u}=n,l=C.computePool2DInfo(a.shape,i,p,1,u),m=l.strideHeight,c=l.strideWidth,d=l.filterHeight,f=l.filterWidth,h=l.dilationHeight,g=l.dilationWidth,y=l.effectiveFilterHeight,T=l.effectiveFilterWidth,x=T-1-l.padInfo.left,I=y-1-l.padInfo.top,k=Ce(a.shape,"float32"),N=1/(d*f),P=t.data.get(o.dataId).values,F=Ce(o.shape,"float32",P);for(let E=0;E<l.batchSize;++E)for(let $=0;$<l.inChannels;++$)for(let U=0;U<l.inHeight;++U)for(let W=0;W<l.inWidth;++W){let V=U-I,H=W-x,q=0;for(let Y=0;Y<y;Y+=h){let ee=(V+Y)/m;if(!(ee<0||ee>=l.outHeight||Math.floor(ee)!==ee))for(let j=0;j<T;j+=g){let re=(H+j)/c;if(re<0||re>=l.outWidth||Math.floor(re)!==re)continue;q+=F.get(E,ee,re,$)}}k.set(q*N,E,U,W,$)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}var s_={kernelName:im,backendName:"cpu",kernelFunc:$te};function Bte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,scale:s,offset:a,mean:i,variance:p}=e;b.assert(i.shape.length===p.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(s==null||i.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),oe([o,i,p,s,a],"batchNorm");let{varianceEpsilon:u}=n;u==null&&(u=.001);let l=t.data.get(o.dataId).values,m=t.data.get(i.dataId).values,c=t.data.get(p.dataId).values,d=s?t.data.get(s.dataId).values:new Float32Array([1]),f=a?t.data.get(a.dataId).values:new Float32Array([0]),h=new Float32Array(l.length),g=f.length,y=d.length,T=c.length,x=m.length,I=0,k=0,N=0,P=0;for(let F=0;F<l.length;++F)h[F]=f[I++]+(l[F]-m[k++])*d[N++]/Math.sqrt(c[P++]+u),I>=g&&(I=0),k>=x&&(k=0),N>=y&&(N=0),P>=T&&(P=0);return t.makeTensorInfo(o.shape,o.dtype,h)}var a_={kernelName:Io,backendName:"cpu",kernelFunc:Bte};function Ote(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;oe([o],"batchToSpaceND");let i=s.reduce((y,T)=>y*T),p=C.getReshaped(o.shape,s,i),u=C.getPermuted(p.length,s.length),l=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(l,a,s.length),d=at({inputs:{x:o},backend:t,attrs:{shape:p}}),f=Xt({inputs:{x:d},backend:t,attrs:{perm:u}}),h=at({inputs:{x:f},backend:t,attrs:{shape:l}}),g=qs({inputs:{x:h},backend:t,attrs:{begin:m,size:c}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),g}var i_={kernelName:ps,backendName:"cpu",kernelFunc:Ote};function zte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,u=Pc(i,p,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,u)}var u_={kernelName:pm,backendName:"cpu",kernelFunc:zte};function Gte(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,i=C.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var p_={kernelName:lm,backendName:"cpu",kernelFunc:Gte};var Ute=Fe(Gn,(r,e)=>{let t=e;return r>t.clipValueMax?t.clipValueMax:r<t.clipValueMin?t.clipValueMin:r}),l_={kernelName:Gn,backendName:"cpu",kernelFunc:Ute};var Wte=r=>{let{x:e}=r.inputs,t=r.backend,n=new Float32Array(b.sizeFromShape(e.shape)),o=t.data.get(e.dataId),s=o.complexTensorInfos.real,a=o.complexTensorInfos.imag,i=t.data.get(s.dataId).values,p=t.data.get(a.dataId).values;for(let u=0;u<i.length;u++){let l=i[u],m=p[u];n[u]=Math.hypot(l,m)}return t.makeOutput(n,e.shape,"float32")},m_={kernelName:Ru,backendName:"cpu",kernelFunc:Wte};function Ci(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.imag,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var c_={kernelName:Bu,backendName:"cpu",kernelFunc:Ci};function dp(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],a=C.computeOutShape(e.map(h=>h.shape),s);if(b.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(h=>b.sizeFromShape(h.shape)>0);if(i.length===1)return Hr({inputs:{x:i[0]},backend:t});let p=i.map(h=>h.shape);if(C.assertParamsConsistent(p,s),i[0].dtype==="complex64"){let h=i.map(I=>Ks({inputs:{input:I},backend:t})),g=i.map(I=>Ci({inputs:{input:I},backend:t})),y=dp({inputs:h,backend:t,attrs:{axis:s}}),T=dp({inputs:g,backend:t,attrs:{axis:s}}),x=vr({inputs:{real:y,imag:T},backend:t});return h.forEach(I=>t.disposeIntermediateTensorInfo(I)),g.forEach(I=>t.disposeIntermediateTensorInfo(I)),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(T),x}let u=i.map(h=>{let g=b.sizeFromShape(h.shape.slice(s));return at({inputs:{x:h},backend:t,attrs:{shape:[-1,g]}})}),l=u.map(h=>({vals:t.data.get(h.dataId).values,shape:h.shape}));a=C.computeOutShape(u.map(h=>h.shape),1);let m=u[0].shape[0]===1,c=Cl(l,a,e[0].dtype,m),d=C.computeOutShape(i.map(h=>h.shape),s),f=t.makeTensorInfo(d,e[0].dtype,c);return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),f}var d_={kernelName:ls,backendName:"cpu",kernelFunc:dp};function gA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:p,dilations:u,dimRoundingMode:l}=n;oe([o,s],"conv2d");let m=C.convertConv2DDataFormat(p),c=C.computeConv2DInfo(o.shape,s.shape,a,u,i,l,!1,m),d=c.filterHeight,f=c.filterWidth,h=c.dilationHeight,g=c.dilationWidth,y=c.padInfo.left,T=c.padInfo.top,x=c.dataFormat==="channelsLast",I=new gt(c.outShape,o.dtype),k=b.computeStrides(o.shape),N=b.computeStrides(s.shape),P=k[0],F=x?k[1]:k[2],E=x?k[2]:1,$=x?1:k[1],U=I.strides[0],W=x?I.strides[1]:I.strides[2],V=x?I.strides[2]:1,H=x?1:I.strides[1],q=t.data.get(o.dataId).values,Y=t.data.get(s.dataId).values,ee=I.values;for(let j=0;j<c.batchSize;++j){let re=j*P,se=j*U;for(let ae=0;ae<c.outHeight;++ae){let le=se+ae*W,ie=ae*c.strideHeight-T;for(let be=0;be<d;++be){let he=ie+be*h;if(he<0||he>=c.inHeight)continue;let Ie=be*N[0],we=re+he*F;for(let Ee=0;Ee<c.outWidth;++Ee){let _e=le+Ee*V,Qe=Ee*c.strideWidth-y;for(let J=0;J<f;++J){let ft=Qe+J*g;if(ft<0||ft>=c.inWidth)continue;let Be=Ie+J*N[1],Mt=we+ft*E,wt=Be;for(let lt=0;lt<c.inChannels;++lt){let Zt=q[Mt+lt*$];for(let zt=0;zt<c.outChannels;++zt)ee[_e+zt*H]+=Zt*Y[wt+zt];wt+=c.outChannels}}}}}}return t.makeTensorInfo(I.shape,I.dtype,ee)}var f_={kernelName:po,backendName:"cpu",kernelFunc:gA};function Kte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,dataFormat:p,dimRoundingMode:u,filterShape:l}=n;oe([o,s],"conv2dBackpropFilter");let m=C.convertConv2DDataFormat(p),c=C.computeConv2DInfo(o.shape,l,a,1,i,u,!1,m),{strideHeight:d,strideWidth:f,filterHeight:h,filterWidth:g}=c,y=c.dataFormat==="channelsLast",T=new gt(c.filterShape,"float32"),x=c.padInfo.left,I=c.padInfo.top,k=t.data.get(o.dataId).values,N=t.data.get(s.dataId).values,P=new gt(o.shape,o.dtype,k),F=new gt(s.shape,s.dtype,N);for(let E=0;E<h;++E){let $=Math.max(0,Math.ceil((I-E)/d)),U=Math.min(c.outHeight,(c.inHeight+I-E)/d);for(let W=0;W<g;++W){let V=Math.max(0,Math.ceil((x-W)/f)),H=Math.min(c.outWidth,(c.inWidth+x-W)/f);for(let q=0;q<c.inChannels;++q)for(let Y=0;Y<c.outChannels;++Y){let ee=0;for(let j=0;j<c.batchSize;++j)for(let re=$;re<U;++re){let se=E+re*d-I;for(let ae=V;ae<H;++ae){let le=W+ae*f-x;y?ee+=P.get(j,se,le,q)*F.get(j,re,ae,Y):ee+=P.get(j,q,se,le)*F.get(j,Y,re,ae)}}T.set(ee,E,W,q,Y)}}}return t.makeTensorInfo(T.shape,T.dtype,T.values)}var h_={kernelName:mm,backendName:"cpu",kernelFunc:Kte};function Vte(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:p,dataFormat:u,dimRoundingMode:l}=n;oe([o,s],"conv2dBackpropInput");let m=b.computeStrides(s.shape),c=b.computeStrides(o.shape),d=C.convertConv2DDataFormat(u),f=C.computeConv2DInfo(a,s.shape,i,1,p,l,!1,d),h=new gt(f.inShape,"float32"),g=h.values,y=t.data.get(o.dataId).values,T=t.data.get(s.dataId).values,[x,I,k]=m,{batchSize:N,filterHeight:P,filterWidth:F,inChannels:E,inHeight:$,inWidth:U,outChannels:W,outHeight:V,outWidth:H,strideHeight:q,strideWidth:Y}=f;d=f.dataFormat;let ee=P-1-f.padInfo.top,j=F-1-f.padInfo.left,re=d==="channelsLast",se=h.strides[0],ae=re?h.strides[1]:h.strides[2],le=re?h.strides[2]:1,ie=re?1:h.strides[1],be=c[0],he=re?c[1]:c[2],Ie=re?c[2]:1,we=re?1:c[1];for(let Ee=0;Ee<N;++Ee)for(let _e=0;_e<E;++_e)for(let Qe=0;Qe<$;++Qe){let J=Qe-ee,ft=Math.max(0,Math.ceil(J/q)),Be=Math.min(V,(P+J)/q);for(let Mt=0;Mt<U;++Mt){let wt=Mt-j,lt=Math.max(0,Math.ceil(wt/Y)),Zt=Math.min(H,(F+wt)/Y),zt=0;for(let Vt=ft;Vt<Be;++Vt){let Zs=Vt*q-J;for(let $r=lt;$r<Zt;++$r){let rn=$r*Y-wt,nn=be*Ee+he*Vt+Ie*$r,Xr=x*(P-1-Zs)+I*(F-1-rn)+k*_e;for(let ss=0;ss<W;++ss){let $n=y[nn+we*ss],Js=T[Xr+ss];zt+=$n*Js}}}let tn=se*Ee+ae*Qe+le*Mt+ie*_e;g[tn]=zt}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}var g_={kernelName:lo,backendName:"cpu",kernelFunc:Vte};function Hte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:p}=n;oe([o,s],"conv3d");let u=C.computeConv3DInfo(o.shape,s.shape,a,p,i),{filterDepth:l,filterHeight:m,filterWidth:c,dilationDepth:d,dilationHeight:f,dilationWidth:h,padInfo:g}=u,y=g.front,T=g.left,x=g.top,I=new gt(u.outShape,o.dtype),k=t.data.get(o.dataId).values,N=t.data.get(s.dataId).values,P=I.values,F=b.computeStrides(o.shape),E=b.computeStrides(s.shape);for(let $=0;$<u.batchSize;++$){let U=$*F[0],W=$*I.strides[0];for(let V=0;V<u.outDepth;++V){let H=W+V*I.strides[1],q=V*u.strideDepth-y;for(let Y=0;Y<l;++Y){let ee=q+Y*d;if(ee<0||ee>=u.inDepth)continue;let j=Y*E[0],re=U+ee*F[1];for(let se=0;se<u.outHeight;++se){let ae=H+se*I.strides[2],le=se*u.strideHeight-x;for(let ie=0;ie<m;++ie){let be=le+ie*f;if(be<0||be>=u.inHeight)continue;let he=j+ie*E[1],Ie=re+be*F[2];for(let we=0;we<u.outWidth;++we){let Ee=ae+we*u.outChannels,_e=we*u.strideWidth-T;for(let Qe=0;Qe<c;++Qe){let J=_e+Qe*h;if(J<0||J>=u.inWidth)continue;let ft=he+Qe*E[2],Be=Ie+J*u.inChannels,Mt=ft;for(let wt=0;wt<u.inChannels;++wt){let lt=k[Be+wt];for(let Zt=0;Zt<u.outChannels;++Zt)P[Ee+Zt]+=lt*N[Mt+Zt];Mt+=u.outChannels}}}}}}}}return t.makeTensorInfo(I.shape,I.dtype,I.values)}var b_={kernelName:Lu,backendName:"cpu",kernelFunc:Hte};function qte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:p}=n;oe([o,s],"conv3dBackpropFilterV2");let u=b.computeStrides(o.shape),l=b.computeStrides(s.shape),m=C.computeConv3DInfo(o.shape,p,a,1,i),c=m.strideDepth,d=m.strideHeight,f=m.strideWidth,h=m.filterDepth,g=m.filterHeight,y=m.filterWidth,T=new gt(m.filterShape,"float32"),x=T.values,[I,k,N,P]=T.strides,F=t.data.get(s.dataId).values,[E,$,U,W]=l,V=t.data.get(o.dataId).values,[H,q,Y,ee]=u,j=m.padInfo.front,re=m.padInfo.left,se=m.padInfo.top;for(let ae=0;ae<h;++ae){let le=Math.max(0,Math.ceil((j-ae)/c)),ie=Math.min(m.outDepth,(m.inDepth+j-ae)/c),be=ae*I;for(let he=0;he<g;++he){let Ie=Math.max(0,Math.ceil((se-he)/d)),we=Math.min(m.outHeight,(m.inHeight+se-he)/d),Ee=he*k+be;for(let _e=0;_e<y;++_e){let Qe=Math.max(0,Math.ceil((re-_e)/f)),J=Math.min(m.outWidth,(m.inWidth+re-_e)/f),ft=_e*N+Ee;for(let Be=0;Be<m.inChannels;++Be){let Mt=Be*P+ft;for(let wt=0;wt<m.outChannels;++wt){let lt=0;for(let Zt=0;Zt<m.batchSize;++Zt){let zt=Zt*H,tn=Zt*E;for(let Vt=le;Vt<ie;++Vt){let $r=(ae+Vt*c-j)*q+zt,rn=Vt*$+tn;for(let nn=Ie;nn<we;++nn){let ss=(he+nn*d-se)*Y+$r,$n=nn*U+rn;for(let Js=Qe;Js<J;++Js){let Nu=(_e+Js*f-re)*ee+ss,Tp=Js*W+$n;lt+=V[Nu+Be]*F[Tp+wt]}}}}x[Mt+wt]=lt}}}}}return t.makeTensorInfo(T.shape,T.dtype,T.values)}var y_={kernelName:cm,backendName:"cpu",kernelFunc:qte};function jte(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:a,strides:i,inputShape:p}=n;oe([o],"conv3dBackpropInputV2");let u=b.computeStrides(o.shape),l=b.computeStrides(s.shape),m=C.computeConv3DInfo(p,s.shape,i,1,a),c=new gt(m.inShape,"float32"),d=c.values,[f,h,g,y]=c.strides,T=t.data.get(o.dataId).values,[x,I,k,N]=u,P=t.data.get(s.dataId).values,[F,E,$,U]=l,{batchSize:W,filterDepth:V,filterHeight:H,filterWidth:q,inChannels:Y,inDepth:ee,inHeight:j,inWidth:re,outChannels:se,outDepth:ae,outHeight:le,outWidth:ie,strideDepth:be,strideHeight:he,strideWidth:Ie}=m,we=V-1-m.padInfo.front,Ee=H-1-m.padInfo.top,_e=q-1-m.padInfo.left;for(let Qe=0;Qe<W;++Qe)for(let J=0;J<Y;++J)for(let ft=0;ft<ee;++ft){let Be=ft-we,Mt=Math.max(0,Math.ceil(Be/be)),wt=Math.min(ae,(V+Be)/be);for(let lt=0;lt<j;++lt){let Zt=lt-Ee,zt=Math.max(0,Math.ceil(Zt/he)),tn=Math.min(le,(H+Zt)/he);for(let Vt=0;Vt<re;++Vt){let Zs=Vt-_e,$r=Math.max(0,Math.ceil(Zs/Ie)),rn=Math.min(ie,(q+Zs)/Ie),nn=0;for(let Xr=Mt;Xr<wt;++Xr){let ss=Xr*be-Be;for(let $n=zt;$n<tn;++$n){let Js=$n*he-Zt;for(let as=$r;as<rn;++as){let Nu=as*Ie-Zs,Tp=x*Qe+I*Xr+k*$n+N*as,Ul=F*(V-1-ss)+E*(H-1-Js)+$*(q-1-Nu)+U*J;for(let xr=0;xr<se;++xr){let Wl=T[Tp+xr],Kl=P[Ul+xr];nn+=Wl*Kl}}}}d[f*Qe+h*ft+g*lt+y*Vt+J]=nn}}}return t.makeTensorInfo(c.shape,c.dtype,c.values)}var T_={kernelName:dm,backendName:"cpu",kernelFunc:jte};var Xte=Fe(mo,r=>Math.cos(r)),x_={kernelName:mo,backendName:"cpu",kernelFunc:Xte};var Yte=Fe(co,r=>Math.cosh(r)),I_={kernelName:co,backendName:"cpu",kernelFunc:Yte};function Qte(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:p,extrapolationValue:u}=n,[l,m,c,d]=o.shape,f=s.shape[0],[h,g]=i,y=Ce([f,h,g,d],"float32"),T=t.data.get(s.dataId).values,x=t.data.get(a.dataId).values,I=t.data.get(o.dataId).values,k=b.computeStrides(o.shape),N=b.computeStrides(y.shape);for(let P=0;P<f;P++){let F=P*4,E=T[F],$=T[F+1],U=T[F+2],W=T[F+3],V=x[P];if(V>=l)continue;let H=h>1?(U-E)*(m-1)/(h-1):0,q=g>1?(W-$)*(c-1)/(g-1):0;for(let Y=0;Y<h;Y++){let ee=h>1?E*(m-1)+Y*H:.5*(E+U)*(m-1);if(ee<0||ee>m-1){for(let j=0;j<g;j++)for(let re=0;re<d;re++){let se=re+j*N[2]+Y*N[1]+P*N[0];y.values[se]=u}continue}if(p==="bilinear"){let j=Math.floor(ee),re=Math.ceil(ee),se=ee-j;for(let ae=0;ae<g;ae++){let le=g>1?$*(c-1)+ae*q:.5*($+W)*(c-1);if(le<0||le>c-1){for(let Ie=0;Ie<d;Ie++){let we=Ie+ae*N[2]+Y*N[1]+P*N[0];y.values[we]=u}continue}let ie=Math.floor(le),be=Math.ceil(le),he=le-ie;for(let Ie=0;Ie<d;Ie++){let we=Ie+ie*k[2]+j*k[1]+V*k[0],Ee=I[we];we=Ie+be*k[2]+j*k[1]+V*k[0];let _e=I[we];we=Ie+ie*k[2]+re*k[1]+V*k[0];let Qe=I[we];we=Ie+be*k[2]+re*k[1]+V*k[0];let J=I[we],ft=Ee+(_e-Ee)*he,Be=Qe+(J-Qe)*he;we=Ie+ae*N[2]+Y*N[1]+P*N[0],y.values[we]=ft+(Be-ft)*se}}}else for(let j=0;j<g;++j){let re=g>1?$*(c-1)+j*q:.5*($+W)*(c-1);if(re<0||re>c-1){for(let le=0;le<d;le++){let ie=le+j*N[2]+Y*N[1]+P*N[0];y.values[ie]=u}continue}let se=Math.round(re),ae=Math.round(ee);for(let le=0;le<d;le++){let ie=le+se*k[2]+ae*k[1]+V*k[0],be=le+j*N[2]+Y*N[1]+P*N[0];y.values[be]=I[ie]}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}var C_={kernelName:pa,backendName:"cpu",kernelFunc:Qte};function Zte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;oe(o,"cumprod");let p=C.getAxesPermutation([s],o.shape.length),u=o;p!=null&&(u=Xt({inputs:{x:o},backend:t,attrs:{perm:p}}));let l=C.getInnerMostAxes(1,o.shape.length)[0];if(l!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${l}`);let m=Ft(u.dtype,"int32"),c=b.makeOnesTypedArray(b.sizeFromShape(u.shape),m),d=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],h=i?(y,T)=>y+f-T-1:(y,T)=>y+T;for(let y=0;y<d.length;y+=f)for(let T=0;T<f;T++){let x=h(y,T);if(T===0)c[x]=a?1:d[x];else{let I=h(y,T-1);c[x]=a?d[I]*c[I]:d[x]*c[I]}}let g=t.makeTensorInfo(u.shape,m,c);if(p!=null){let y=C.getUndoAxesPermutation(p),T=Xt({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),T}return g}var k_={kernelName:ua,backendName:"cpu",kernelFunc:Zte};function Jte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;oe(o,"cumsum");let p=C.getAxesPermutation([s],o.shape.length),u=o;p!=null&&(u=Xt({inputs:{x:o},backend:t,attrs:{perm:p}}));let l=C.getInnerMostAxes(1,o.shape.length)[0];if(l!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${l}`);let m=Ft(u.dtype,"int32"),c=b.makeZerosTypedArray(b.sizeFromShape(u.shape),m),d=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],h=i?(y,T)=>y+f-T-1:(y,T)=>y+T;for(let y=0;y<d.length;y+=f)for(let T=0;T<f;T++){let x=h(y,T);if(T===0)c[x]=a?0:d[x];else{let I=h(y,T-1);c[x]=a?d[I]+c[I]:d[x]+c[I]}}let g=t.makeTensorInfo(u.shape,m,c);if(p!=null){let y=C.getUndoAxesPermutation(p),T=Xt({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),T}return g}var S_={kernelName:fo,backendName:"cpu",kernelFunc:Jte};function ere(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let p=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,l=Pc(p,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,l)}else if(o.shape.length===2){let p=t.bufferSync(o),u=t.bufferSync(s),l=sT(p,u,a,i);return t.makeTensorInfo(l.shape,s.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var v_={kernelName:fm,backendName:"cpu",kernelFunc:ere};function tre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n;b.assert(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);let i=o.shape[0],p=o.shape[1],u=o.shape[2],l=o.shape[3],m=p*s,c=u*s,d=l/(s*s),f=t.data.get(o.dataId).values,h=new Float32Array(i*m*c*d),g=0;for(let y=0;y<i;++y)for(let T=0;T<m;++T){let x=Math.floor(T/s),I=T%s;for(let k=0;k<c;++k){let N=Math.floor(k/s),P=k%s,F=(I*s+P)*d;for(let E=0;E<d;++E){let U=E+F+l*(N+u*(x+p*y));h[g++]=f[U]}}}return t.makeTensorInfo([i,m,c,d],o.dtype,h)}var A_={kernelName:la,backendName:"cpu",kernelFunc:tre};function bA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:p,dimRoundingMode:u}=n;oe([o,s],"depthwiseConv2DNative");let l=b.computeStrides(o.shape),m=b.computeStrides(s.shape),c=p;c==null&&(c=[1,1]),b.assert(C.eitherStridesOrDilationsAreOne(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let d=C.computeConv2DInfo(o.shape,s.shape,a,c,i,u,!0),{filterHeight:f,filterWidth:h,dilationHeight:g,dilationWidth:y,padInfo:T}=d,x=T.left,I=T.top,k=d.outChannels/d.inChannels,N=new gt(d.outShape,o.dtype),P=t.data.get(o.dataId).values,F=t.data.get(s.dataId).values,E=N.values;for(let $=0;$<d.batchSize;++$){let U=$*l[0],W=$*N.strides[0];for(let V=0;V<d.outHeight;++V){let H=W+V*N.strides[1],q=V*d.strideHeight-I;for(let Y=0;Y<f;++Y){let ee=q+Y*g;if(ee<0||ee>=d.inHeight)continue;let j=Y*m[0],re=U+ee*l[1];for(let se=0;se<d.outWidth;++se){let ae=H+se*N.strides[2],le=se*d.strideWidth-x;for(let ie=0;ie<h;++ie){let be=le+ie*y;if(be<0||be>=d.inWidth)continue;let he=j+ie*m[1],Ie=re+be*d.inChannels,we=ae,Ee=he;for(let _e=0;_e<d.inChannels;++_e){let Qe=P[Ie+_e];for(let J=0;J<k;++J)E[we+J]+=Qe*F[Ee+J];we+=k,Ee+=k}}}}}}return t.makeTensorInfo(N.shape,N.dtype,N.values)}var w_={kernelName:ho,backendName:"cpu",kernelFunc:bA};function rre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,dilations:i,pad:p,dimRoundingMode:u,filterShape:l}=n;oe([o,s],"depthwiseConv2dNativeBackpropFilter");let m=C.computeConv2DInfo(o.shape,l,a,i,p,u,!0),{strideHeight:c,strideWidth:d,filterHeight:f,filterWidth:h}=m,g=new gt(m.filterShape,"float32"),y=m.padInfo.left,T=m.padInfo.top,x=m.outChannels/m.inChannels,I=t.data.get(o.dataId).values,k=new gt(o.shape,o.dtype,I),N=t.data.get(s.dataId).values,P=new gt(s.shape,s.dtype,N);for(let F=0;F<f;++F){let E=Math.max(0,Math.ceil((T-F)/c)),$=Math.min(m.outHeight,(m.inHeight+T-F)/c);for(let U=0;U<h;++U){let W=Math.max(0,Math.ceil((y-U)/d)),V=Math.min(m.outWidth,(m.inWidth+y-U)/d);for(let H=0;H<m.outChannels;++H){let q=Math.trunc(H/x),Y=H%x,ee=0;for(let j=0;j<m.batchSize;++j)for(let re=E;re<$;++re){let se=F+re*c-T;for(let ae=W;ae<V;++ae){let le=U+ae*d-y;ee+=k.get(j,se,le,q)*P.get(j,re,ae,H)}}g.set(ee,F,U,q,Y)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}var N_={kernelName:hm,backendName:"cpu",kernelFunc:rre};function nre(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,dilations:i,pad:p,dimRoundingMode:u,inputShape:l}=n;oe([o,s],"depthwiseConv2DNativeBackpropInput");let m=b.computeStrides(o.shape),c=b.computeStrides(s.shape),d=C.computeConv2DInfo(l,s.shape,a,i,p,u,!0),f=new gt(d.inShape,"float32"),h=f.values,[g,y,T]=f.strides,x=t.data.get(o.dataId).values,[I,k,N]=m,P=t.data.get(s.dataId).values,[F,E,$]=c,{batchSize:U,filterHeight:W,filterWidth:V,inChannels:H,inHeight:q,inWidth:Y,outChannels:ee,outHeight:j,outWidth:re,strideHeight:se,strideWidth:ae}=d,le=W-1-d.padInfo.top,ie=V-1-d.padInfo.left,be=ee/H;for(let he=0;he<U;++he)for(let Ie=0;Ie<H;++Ie)for(let we=0;we<q;++we){let Ee=we-le,_e=Math.max(0,Math.ceil(Ee/se)),Qe=Math.min(j,(W+Ee)/se);for(let J=0;J<Y;++J){let ft=J-ie,Be=Math.max(0,Math.ceil(ft/ae)),Mt=Math.min(re,(V+ft)/ae),wt=0;for(let lt=_e;lt<Qe;++lt){let Zt=lt*se-Ee;for(let zt=Be;zt<Mt;++zt){let tn=zt*ae-ft,Vt=I*he+k*lt+N*zt,Zs=F*(W-1-Zt)+E*(V-1-tn)+$*Ie;for(let $r=0;$r<be;++$r){let rn=Ie*be+$r,nn=x[Vt+rn],Xr=P[Zs+$r];wt+=nn*Xr}}}h[g*he+y*we+T*J+Ie]=wt}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}var D_={kernelName:gm,backendName:"cpu",kernelFunc:nre};function ore(r){let{inputs:e,backend:t}=r,{x:n}=e,o=b.sizeFromShape(n.shape),s=t.data.get(n.dataId).values,a=Ce([o,o],n.dtype),i=a.values;for(let u=0;u<s.length;u++)i[u*o+u]=s[u];let p=[...n.shape,...n.shape];return t.makeTensorInfo(p,a.dtype,a.values)}var P_={kernelName:bm,backendName:"cpu",kernelFunc:ore};var M_={kernelName:_u,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o}=r,{strides:s,pad:a,dilations:i}=t,p=e,u=p.data.get(n.dataId).values,l=n.shape.length,m=p.data.get(o.dataId).values,c=o.shape.length,{batchSize:d,inHeight:f,inWidth:h,inChannels:g,outHeight:y,outWidth:T,padInfo:x,strideHeight:I,strideWidth:k,filterHeight:N,filterWidth:P,dilationHeight:F,dilationWidth:E,outShape:$}=C.computeDilation2DInfo(n.shape,o.shape,s,a,"NHWC",i),U=b.sizeFromShape($),W=$.length,V=b.getArrayFromDType(n.dtype,U);for(let q=0;q<d;++q)for(let Y=0;Y<y;++Y){let ee=Y*I-x.top;for(let j=0;j<T;++j){let re=j*k-x.left;for(let se=0;se<g;++se){let ae=Number.MIN_SAFE_INTEGER;for(let ie=0;ie<N;++ie){let be=ee+ie*F;if(be>=0&&be<f)for(let he=0;he<P;++he){let Ie=re+he*E;if(Ie>=0&&Ie<h){let we=b.locToIndex([q,be,Ie,se],l,b.computeStrides(n.shape)),Ee=b.locToIndex([ie,he,se],c,b.computeStrides(o.shape)),_e=u[we]+m[Ee];_e>ae&&(ae=_e)}}}let le=b.locToIndex([q,Y,j,se],W,b.computeStrides($));V[le]=ae}}}return{dataId:p.write(b.toTypedArray(V,n.dtype),$,n.dtype),shape:$,dtype:n.dtype}}};var F_={kernelName:gd,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:p}=t,u=e,l=b.toNestedArray(n.shape,u.data.get(n.dataId).values),m=b.toNestedArray(o.shape,u.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:y,padInfo:T,strideHeight:x,strideWidth:I,filterHeight:k,filterWidth:N,dilationHeight:P,dilationWidth:F,outShape:E}=C.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",p);b.assert(s.rank===E.length,()=>`Error in ${gd}, dy must have the same rank as output ${E.length}, but got ${s.rank}`);let $=b.toNestedArray(E,u.data.get(s.dataId).values),U=b.makeZerosNestedTypedArray(o.shape,o.dtype);for(let V=0;V<c;++V)for(let H=0;H<g;++H){let q=H*x-T.top;for(let Y=0;Y<y;++Y){let ee=Y*I-T.left;for(let j=0;j<h;++j){let re=Number.MIN_SAFE_INTEGER,se=0,ae=0;for(let le=0;le<k;++le){let ie=q+le*P;if(ie>=0&&ie<d)for(let be=0;be<N;++be){let he=ee+be*F;if(he>=0&&he<f){let Ie=l[V][ie][he][j]+m[le][be][j];Ie>re&&(re=Ie,se=le,ae=be)}}}U[se][ae][j]+=$[V][H][Y][j]}}}return{dataId:u.write(b.toTypedArray(U,n.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var E_={kernelName:hd,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:p}=t,u=e,l=b.toNestedArray(n.shape,u.data.get(n.dataId).values),m=b.toNestedArray(o.shape,u.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:y,padInfo:T,strideHeight:x,strideWidth:I,filterHeight:k,filterWidth:N,dilationHeight:P,dilationWidth:F,outShape:E}=C.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",p);b.assert(s.rank===E.length,()=>`Error in ${hd}, dy must have the same rank as output ${E.length}, but got ${s.rank}`);let $=b.toNestedArray(E,u.data.get(s.dataId).values),U=b.makeZerosNestedTypedArray(n.shape,n.dtype);for(let V=0;V<c;++V)for(let H=0;H<g;++H){let q=H*x-T.top;for(let Y=0;Y<y;++Y){let ee=Y*I-T.left;for(let j=0;j<h;++j){let re=Number.MIN_SAFE_INTEGER,se=q<0?0:q,ae=ee<0?0:ee;for(let le=0;le<k;++le){let ie=q+le*P;if(ie>=0&&ie<d)for(let be=0;be<N;++be){let he=ee+be*F;if(he>=0&&he<f){let Ie=l[V][ie][he][j]+m[le][be][j];Ie>re&&(re=Ie,se=ie,ae=he)}}}U[V][se][ae][j]+=$[V][H][Y][j]}}}return{dataId:u.write(b.toTypedArray(U,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function Tu(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;oe(o,"sum");let i;o.dtype==="bool"?i=Vs({inputs:{x:o},backend:t,attrs:{dtype:"int32"}}):i=Hr({inputs:{x:o},backend:t});let p=i.shape.length,u=b.parseAxisParam(s,i.shape),l=C.getAxesPermutation(u,p),m=u,c=i;l!=null&&(c=Xt({inputs:{x:i},backend:t,attrs:{perm:l}}),m=C.getInnerMostAxes(m.length,p)),C.assertAxesAreInnerMostDims("sum",m,c.shape.length);let[d,f]=C.computeOutAndReduceShapes(c.shape,m),h=C.upcastType(c.dtype,"int32"),g=Nc(t,d,h),y=b.sizeFromShape(f),T=t.data.get(g.dataId).values,x=t.data.get(c.dataId).values;for(let I=0;I<T.length;++I){let k=I*y,N=0;for(let P=0;P<y;++P)N+=x[k+P];T[I]=N}if(a){let I=C.expandShapeToKeepDim(g.shape,u),k=g;g=at({inputs:{x:g},backend:t,attrs:{shape:I}}),t.disposeIntermediateTensorInfo(k)}return t.disposeIntermediateTensorInfo(i),l!=null&&t.disposeIntermediateTensorInfo(c),g}var R_={kernelName:Ko,backendName:"cpu",kernelFunc:Tu};function sre(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:a,summedDims:i,idDims:p}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(a.length,p,s);let{path:u,steps:l}=C.getEinsumComputePath(i,p),m=l.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of l[h]){let{permutationIndices:y,expandDims:T}=C.getEinsumPermutation(d,p[g]),x;C.isIdentityPermutation(y)?x=s[g]:(x=Xt({inputs:{x:s[g]},backend:t,attrs:{perm:y}}),f.push(x));let I=x.shape.slice();for(let k=0;k<T.length;++k)I.splice(T[k],0,1);b.arraysEqual(x.shape,I)||(x=at({inputs:{x},backend:t,attrs:{shape:I}}),f.push(x)),c===null?c=x:(c=kl({inputs:{a:x,b:c},backend:t}),f.push(c))}h<m-1&&(u[h]>=0&&(c=Tu({inputs:{x:c},backend:t,attrs:{axis:u[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&t.disposeIntermediateTensorInfo(h);return c}var L_={kernelName:$u,backendName:"cpu",kernelFunc:sre};function are(r){let{inputs:e,backend:t}=r,{dy:n,y:o}=e;oe([n,o],"eluGrad");let s=new Float32Array(b.sizeFromShape(o.shape)),a=t.data.get(o.dataId).values,i=t.data.get(n.dataId).values;for(let p=0;p<a.length;++p){let u=a[p];u>=1?s[p]=i[p]:s[p]=i[p]*(u+1)}return t.makeTensorInfo(o.shape,"float32",s)}var __={kernelName:ym,backendName:"cpu",kernelFunc:are};var ire=C.ERF_P,ure=C.ERF_A1,pre=C.ERF_A2,lre=C.ERF_A3,mre=C.ERF_A4,cre=C.ERF_A5,dre=Fe(Bi,r=>{let e=Math.sign(r),t=Math.abs(r),n=1/(1+ire*t);return e*(1-((((cre*n+mre)*n+lre)*n+pre)*n+ure)*n*Math.exp(-t*t))}),$_={kernelName:Bi,backendName:"cpu",kernelFunc:dre};function _c(r){let{inputs:e,backend:t,attrs:n}=r,{input:o}=e,{dim:s}=n,a=o.shape.length,i=o.shape.slice(),p=s;return s<0&&(b.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),p=a+s+1),i.splice(p,0,1),at({inputs:{x:o},backend:t,attrs:{shape:i}})}var B_={kernelName:ms,backendName:"cpu",kernelFunc:_c};var fre=nt((r,e)=>r/e),Hh=ut(go,fre),qh={kernelName:go,backendName:"cpu",kernelFunc:Hh};function IT(r,e,t){let n=r.shape,o=n[0],s=n[1],a=t.data.get(r.dataId),i=a.complexTensorInfos.real,p=a.complexTensorInfos.imag,u=[o,s],l=b.sizeFromShape(u),m=b.getTypedArrayFromDType("float32",l),c=b.getTypedArrayFromDType("float32",l);for(let g=0;g<o;g++){let y=qs({inputs:{x:i},backend:t,attrs:{begin:[g,0],size:[1,s]}}),T=qs({inputs:{x:p},backend:t,attrs:{begin:[g,0],size:[1,s]}}),x=vr({inputs:{real:y,imag:T},backend:t}),{real:I,imag:k}=hre(x,e,t),N=C.mergeRealAndImagArrays(I,k);for(let P=0;P<s;P++){let F=C.getComplexWithIndex(N,P);m[g*s+P]=F.real,c[g*s+P]=F.imag}t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(T),t.disposeIntermediateTensorInfo(x)}let d=t.makeTensorInfo(u,"float32",m),f=t.makeTensorInfo(u,"float32",c),h=vr({inputs:{real:d,imag:f},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),h}function hre(r,e,t){let n=b.sizeFromShape(r.shape),o=t.data.get(r.dataId),s=t.data.get(o.complexTensorInfos.real.dataId).values,a=t.data.get(o.complexTensorInfos.imag.dataId).values;if(gre(n)){let i=yA(s,a,n,e,t),p=[r.shape[0],r.shape[1]];if(e){let u=t.makeTensorInfo(p,"float32",i.real),l=t.makeTensorInfo(p,"float32",i.imag),m=t.makeTensorInfo([],"float32",b.createScalarValue(n,"float32")),c=Hr({inputs:{x:m},backend:t}),d=qh.kernelFunc({inputs:{a:u,b:m},backend:t}),f=qh.kernelFunc({inputs:{a:l,b:c},backend:t}),h=t.data.get(d.dataId).values,g=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),{real:h,imag:g}}return i}else{let i=C.mergeRealAndImagArrays(s,a),p=bre(i,n,e);return C.splitRealAndImagArrays(p)}}function gre(r){return(r&r-1)===0}function yA(r,e,t,n,o){if(t===1)return{real:r,imag:e};let s=C.mergeRealAndImagArrays(r,e),a=t/2,i=C.complexWithEvenIndex(s),p=i.real,u=i.imag,l=[p.length],m=o.makeTensorInfo(l,"float32",p),c=o.makeTensorInfo(l,"float32",u),d=vr({inputs:{real:m,imag:c},backend:o}),f=C.complexWithOddIndex(s),h=f.real,g=f.imag,y=[h.length],T=o.makeTensorInfo(y,"float32",h),x=o.makeTensorInfo(y,"float32",g),I=vr({inputs:{real:T,imag:x},backend:o}),k=yA(p,u,a,n,o),N=k.real,P=k.imag,F=[N.length],E=o.makeTensorInfo(F,"float32",N),$=o.makeTensorInfo(F,"float32",P),U=vr({inputs:{real:E,imag:$},backend:o}),W=yA(h,g,a,n,o),V=W.real,H=W.imag,q=[V.length],Y=o.makeTensorInfo(q,"float32",V),ee=o.makeTensorInfo(q,"float32",H),j=vr({inputs:{real:Y,imag:ee},backend:o}),re=C.exponents(t,n),se=[re.real.length],ae=o.makeTensorInfo(se,"float32",re.real),le=o.makeTensorInfo(se,"float32",re.imag),ie=vr({inputs:{real:ae,imag:le},backend:o}),be=kl({inputs:{a:ie,b:j},backend:o}),he=yu({inputs:{a:U,b:be},backend:o}),Ie=Kh({inputs:{a:U,b:be},backend:o}),we=Ks({inputs:{input:he},backend:o}),Ee=Ks({inputs:{input:Ie},backend:o}),_e=Ci({inputs:{input:he},backend:o}),Qe=Ci({inputs:{input:Ie},backend:o}),J=dp({inputs:[we,Ee],backend:o,attrs:{axis:0}}),ft=dp({inputs:[_e,Qe],backend:o,attrs:{axis:0}}),Be=o.data.get(J.dataId).values,Mt=o.data.get(ft.dataId).values;return o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(I),o.disposeIntermediateTensorInfo(E),o.disposeIntermediateTensorInfo($),o.disposeIntermediateTensorInfo(U),o.disposeIntermediateTensorInfo(Y),o.disposeIntermediateTensorInfo(ee),o.disposeIntermediateTensorInfo(j),o.disposeIntermediateTensorInfo(ae),o.disposeIntermediateTensorInfo(le),o.disposeIntermediateTensorInfo(ie),o.disposeIntermediateTensorInfo(be),o.disposeIntermediateTensorInfo(he),o.disposeIntermediateTensorInfo(Ie),o.disposeIntermediateTensorInfo(we),o.disposeIntermediateTensorInfo(_e),o.disposeIntermediateTensorInfo(Ee),o.disposeIntermediateTensorInfo(Qe),o.disposeIntermediateTensorInfo(J),o.disposeIntermediateTensorInfo(ft),{real:Be,imag:Mt}}function bre(r,e,t){let n=new Float32Array(e*2);for(let o=0;o<e;o++){let s=0,a=0;for(let i=0;i<e;i++){let p=C.exponent(o*i,e,t),u=C.getComplexWithIndex(r,i);s+=u.real*p.real-u.imag*p.imag,a+=u.real*p.imag+u.imag*p.real}t&&(s/=e,a/=e),C.assignToTypedArray(n,s,a,o)}return n}function yre(r){let{inputs:e,backend:t}=r,{input:n}=e,o=b.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=at({inputs:{x:n},backend:t,attrs:{shape:[a,s]}}),p=IT(i,!1,t),u=at({inputs:{x:p},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(p),u}var O_={kernelName:Tm,backendName:"cpu",kernelFunc:yre};function jh(r){let{backend:e,attrs:t}=r,{shape:n,value:o,dtype:s}=t,a=s||b.inferDtype(o),i=b.getArrayFromDType(a,b.sizeFromShape(n));return Tre(i,o,a),e.makeTensorInfo(n,a,i)}var z_={kernelName:oi,backendName:"cpu",kernelFunc:jh};function Tre(r,e,t){r.fill(e)}var G_={kernelName:da,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,o=t,s=b.getTypedArrayFromDType(n.dtype,b.sizeFromShape(n.shape)),[a,i,p,u]=n.shape,l=o.data.get(n.dataId).values;for(let c=0;c<a;c++){let d=c*p*i*u;for(let f=0;f<i;f++){let h=f*(p*u);for(let g=0;g<p;g++){let y=g*u;for(let T=0;T<u;T++){let x=Math.round(p-g-1),I=d+h+y+T,k=l[I];if(x>=0&&x<p){let N=x*u,P=d+h+N+T;k=l[P]}s[I]=k}}}}return{dataId:o.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var xre=nt((r,e)=>Math.floor(r/e)),Ire=ut(xo,xre,null,"int32"),U_={kernelName:xo,backendName:"cpu",kernelFunc:Ire};function Cre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=gA({inputs:{x:o,filter:s},backend:t,attrs:{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c}});if(a){let g=h;h=yu({inputs:{a:h,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(d){let g=h;h=Rc(t,h,d,i,f),t.disposeIntermediateTensorInfo(g)}return h}var W_={kernelName:vs,backendName:"cpu",kernelFunc:Cre};function kre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=bA({inputs:{x:o,filter:s},backend:t,attrs:{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c}});if(a){let g=h;h=yu({inputs:{a:h,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(d){let g=h;h=Rc(t,h,d,i,f),t.disposeIntermediateTensorInfo(g)}return h}var K_={kernelName:As,backendName:"cpu",kernelFunc:kre};function Sre(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=b.sizeFromShape(n.shape),a=o.shape,i=a[a.length-1],[p,u,l,m]=C.prepareAndValidate(n,o);if(u===0)return t.makeTensorInfo(p,n.dtype,[]);let c=t.data.get(o.dataId).values,d=t.bufferSync(n),f=aT(c,d,n.dtype,u,i,l,m,n.shape,s);return t.makeTensorInfo(p,n.dtype,f.values)}var V_={kernelName:fa,backendName:"cpu",kernelFunc:Sre};function vre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n;oe([o,s],"gatherV2");let p=b.parseAxisParam(a,o.shape)[0],u=t.data.get(s.dataId).values,l=o.shape[p];for(let I=0;I<u.length;++I){let k=u[I];b.assert(k<=l-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${l-1}]`)}let m=i;i==null&&(m=0);let c=b.sizeFromShape(s.shape),d=C.segment_util.collectGatherOpShapeInfo(o,s,p,m),f=at({inputs:{x:o},backend:t,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),h=at({inputs:{x:s},backend:t,attrs:{shape:[d.batchSize,c/d.batchSize]}}),g=[d.batchSize,d.outerSize,c/d.batchSize,d.sliceSize],y=t.bufferSync(h),T=t.bufferSync(f),x=iT(T,y,g);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),t.makeTensorInfo(d.outputShape,x.dtype,x.values)}var H_={kernelName:cs,backendName:"cpu",kernelFunc:vre};function Are(r){let{inputs:e,backend:t}=r,{input:n}=e,o=b.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=at({inputs:{x:n},backend:t,attrs:{shape:[a,s]}}),p=IT(i,!0,t),u=at({inputs:{x:p},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(p),u}var q_={kernelName:xm,backendName:"cpu",kernelFunc:Are};var wre=Fe(Oi,r=>Number.isFinite(r)?1:0,"bool"),j_={kernelName:Oi,backendName:"cpu",kernelFunc:wre};var Nre=Fe(zi,r=>Math.abs(r)===1/0?1:0,"bool"),X_={kernelName:zi,backendName:"cpu",kernelFunc:Nre};var Dre=Fe(Gi,r=>Number.isNaN(r)?1:0,"bool"),Y_={kernelName:Gi,backendName:"cpu",kernelFunc:Dre};function Pre(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,a=uT(n,o,s);return e.makeTensorInfo([a.length],"float32",a)}var Q_={kernelName:Im,backendName:"cpu",kernelFunc:Pre};var Mre=Fe(Ui,r=>Math.log1p(r)),Z_={kernelName:Ui,backendName:"cpu",kernelFunc:Mre};var Fre=nt((r,e)=>r&&e),Ere=ut(ya,Fre,null,"bool"),J_={kernelName:ya,backendName:"cpu",kernelFunc:Ere};var Rre=Fe(Wi,r=>r?0:1,"bool"),e$={kernelName:Wi,backendName:"cpu",kernelFunc:Rre};var Lre=nt((r,e)=>r||e),_re=ut(Dp,Lre,null,"bool"),t$={kernelName:Dp,backendName:"cpu",kernelFunc:_re};function $re(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:p}=n;oe(o,"LRN");let u=o.shape[3],l=u-1,m=t.data.get(o.dataId).values,c=b.sizeFromShape(o.shape),d=new Float32Array(c);function f(h){let g=h%u,y=h-g+Math.max(0,g-s),T=h-g+Math.min(g+s,l),x=0;for(;y<=T;y++){let I=m[y];x+=I*I}return x}for(let h=0;h<c;h++){let g=f(h),y=m[h]*Math.pow(a+i*g,-p);d[h]=y}return t.makeTensorInfo(o.shape,o.dtype,d)}var r$={kernelName:Ou,backendName:"cpu",kernelFunc:$re};function Bre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:p,alpha:u,beta:l}=n;oe(a,"LRNGrad");let m=b.sizeFromShape(a.shape),c=a.shape[3],d=t.data.get(a.dataId).values,f=t.data.get(o.dataId).values,h=t.data.get(s.dataId).values,g=new Float32Array(m),y=m;for(let T=0;T<y;T++){let x=T%c,I=T-x+Math.max(0,x-i),k=T-x+Math.min(c,x+i+1),N=0;for(let P=I;P<k;P++)N+=Math.pow(f[P],2);N=u*N+p;for(let P=I;P<k;P++){let F=-2*u*l*f[P]*h[T]/N;T===P&&(F+=Math.pow(N,-l)),F*=d[T],g[P]+=F}}return t.makeTensorInfo(a.shape,o.dtype,g)}var n$={kernelName:Cm,backendName:"cpu",kernelFunc:Bre};function TA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n,i=t,p=o.shape,u=p.length,l=b.parseAxisParam(s,p),m=l,c=C.getAxesPermutation(m,u),d=i.data.get(o.dataId).values;if(c!=null){let I=new Array(u);for(let k=0;k<I.length;k++)I[k]=p[c[k]];d=Mc(d,p,o.dtype,c,I),m=C.getInnerMostAxes(m.length,u),p=I}oe(o,"max"),C.assertAxesAreInnerMostDims("max",m,u);let[f,h]=C.computeOutAndReduceShapes(p,m),g=b.sizeFromShape(h),y=pT(d,g,f,o.dtype),T=i.write(y,f,o.dtype),x=f;return a&&(x=C.expandShapeToKeepDim(f,l)),{dataId:T,shape:x,dtype:o.dtype}}var o$={kernelName:vo,backendName:"cpu",kernelFunc:TA};function Ore(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;oe(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1;b.assert(C.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let l=C.computePool2DInfo(o.shape,s,a,u,i,p),m;if(l.filterWidth===1&&l.filterHeight===1&&b.arraysEqual(l.inShape,l.outShape))m=Hr({inputs:{x:o},backend:t});else{let c=t.data.get(o.dataId).values,d=b.computeStrides(o.shape),f=Lc(c,o.shape,o.dtype,d,l,"max");m=t.makeTensorInfo(l.outShape,o.dtype,f.values)}return m}var s$={kernelName:wo,backendName:"cpu",kernelFunc:Ore};function zre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:p,dataFormat:u}=n;oe(o,"maxPool3d");let l=C.computePool3DInfo(o.shape,s,a,1,i,p,u),m=t.data.get(o.dataId).values,c=xT(m,o.shape,o.dtype,b.computeStrides(o.shape),l,"max");return t.makeTensorInfo(c.shape,"float32",c.values)}var a$={kernelName:zu,backendName:"cpu",kernelFunc:zre};function Gre(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:p,dimRoundingMode:u}=n;oe([o,s],"maxPool3DGrad");let l=C.computePool3DInfo(s.shape,a,i,1,p,u),m=t.bufferSync(s),c=t_(m,l),d=l.strideDepth,f=l.strideHeight,h=l.strideWidth,g=l.dilationDepth,y=l.dilationHeight,T=l.dilationWidth,x=l.effectiveFilterDepth,I=l.effectiveFilterHeight,k=l.effectiveFilterWidth,N=x-1-l.padInfo.front,P=k-1-l.padInfo.left,F=I-1-l.padInfo.top,E=Ce(s.shape,"float32"),$=t.bufferSync(o);for(let U=0;U<l.batchSize;++U)for(let W=0;W<l.inChannels;++W)for(let V=0;V<l.inDepth;++V)for(let H=0;H<l.inHeight;++H)for(let q=0;q<l.inWidth;++q){let Y=V-N,ee=H-F,j=q-P,re=0;for(let se=0;se<x;se+=g){let ae=(Y+se)/d;if(!(ae<0||ae>=l.outDepth||Math.floor(ae)!==ae))for(let le=0;le<I;le+=y){let ie=(ee+le)/f;if(!(ie<0||ie>=l.outHeight||Math.floor(ie)!==ie))for(let be=0;be<k;be+=T){let he=(j+be)/h;if(he<0||he>=l.outWidth||Math.floor(he)!==he)continue;let Ie=x*I*k-1-c.get(U,ae,ie,he,W),we=se*I*k+le*k+be,Ee=Ie===we?1:0;if(Ee===0)continue;re+=$.get(U,ae,ie,he,W)*Ee}}}E.set(re,U,V,H,q,W)}return t.makeTensorInfo(E.shape,E.dtype,E.values)}var i$={kernelName:Sm,backendName:"cpu",kernelFunc:Gre};function Ure(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:a}=e,i=s;oe([s,a],"maxPoolGrad");let{filterSize:p,strides:u,pad:l,dimRoundingMode:m}=n,c=C.computePool2DInfo(i.shape,p,u,1,l,m),d=t.data.get(i.dataId).values,f=Ce(c.outShape,i.dtype,TT(d,i.shape,i.dtype,c).values),h=c.strideHeight,g=c.strideWidth,y=c.dilationHeight,T=c.dilationWidth,x=c.effectiveFilterHeight,I=c.effectiveFilterWidth,k=I-1-c.padInfo.left,N=x-1-c.padInfo.top,P=Ce(i.shape,"float32"),F=t.data.get(o.dataId).values,E=Ce(o.shape,"float32",F);for(let $=0;$<c.batchSize;++$)for(let U=0;U<c.inChannels;++U)for(let W=0;W<c.inHeight;++W)for(let V=0;V<c.inWidth;++V){let H=W-N,q=V-k,Y=0;for(let ee=0;ee<x;ee+=y){let j=(H+ee)/h;if(!(j<0||j>=c.outHeight||Math.floor(j)!==j))for(let re=0;re<I;re+=T){let se=(q+re)/g;if(se<0||se>=c.outWidth||Math.floor(se)!==se)continue;let ae=x*I-1-f.get($,j,se,U),le=ee*I+re,ie=ae===le?1:0;if(ie===0)continue;Y+=E.get($,j,se,U)*ie}}P.set(Y,$,W,V,U)}return t.makeTensorInfo(P.shape,P.dtype,P.values)}var u$={kernelName:km,backendName:"cpu",kernelFunc:Ure};function p$(r,e,t,n,o){let s=b.computeStrides(e),a=Lc(r,e,t,s,o,"max"),i=TT(r,e,t,o,!0,n);return[a.values,i.values]}var l$={kernelName:vm,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=e,p=t;oe(n,"MaxPoolWithArgmax");let u=p.data.get(n.dataId).values,l=C.computePool2DInfo(n.shape,o,s,[1,1],a),[m,c]=p$(u,n.shape,n.dtype,i,l),d=p.write(m,l.outShape,n.dtype),f=p.write(c,l.outShape,n.dtype);return[{dataId:d,shape:l.outShape,dtype:n.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}};function Wre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=b.parseAxisParam(s,o.shape),u=C.computeOutAndReduceShapes(o.shape,i)[1],l=b.sizeFromShape(u),m=[],c=t.makeTensorInfo([],"float32",new Float32Array([l]));m.push(c);let d=Vs({inputs:{x:o},backend:t,attrs:{dtype:"float32"}});m.push(d);let f=Hh({inputs:{a:d,b:c},backend:t});m.push(f);let h=Tu({inputs:{x:f},backend:t,attrs:{axis:s,keepDims:a}});return m.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}var m$={kernelName:No,backendName:"cpu",kernelFunc:Wre};function Kre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;oe(o,"min");let i=b.parseAxisParam(s,o.shape),p=i,u=C.getAxesPermutation(p,o.shape.length),l=o;u!=null&&(l=Xt({inputs:{x:o},backend:t,attrs:{perm:u}}),p=C.getInnerMostAxes(p.length,o.shape.length)),C.assertAxesAreInnerMostDims("min",p,l.shape.length);let[m,c]=C.computeOutAndReduceShapes(l.shape,p),d=b.sizeFromShape(c),f=b.makeZerosTypedArray(b.sizeFromShape(m),l.dtype),h=t.data.get(l.dataId).values;for(let y=0;y<f.length;++y){let T=y*d,x=h[T];for(let I=0;I<d;++I){let k=h[T+I];(Number.isNaN(k)||k<x)&&(x=k)}f[y]=x}u!=null&&t.disposeIntermediateTensorInfo(l);let g=t.makeTensorInfo(m,l.dtype,f);if(a){let y=C.expandShapeToKeepDim(m,i),T=at({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),T}return g}var c$={kernelName:Do,backendName:"cpu",kernelFunc:Kre};function Vre(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,mode:a}=n;oe(o,"mirrorPad");let i=s.map((x,I)=>x[0]+o.shape[I]+x[1]),p=s.map(x=>x[0]),u=s.map((x,I)=>x[0]+o.shape[I]),l=a==="reflect"?0:1,m=t.data.get(o.dataId).values,c=o.shape.length,d=b.computeStrides(o.shape),f=b.sizeFromShape(i),h=i.length,g=b.computeStrides(i),y=b.getTypedArrayFromDType(o.dtype,f);for(let x=0;x<f;x++){let I=b.indexToLoc(x,h,g);for(let N=0;N<h;N++)I[N]<p[N]?I[N]=p[N]*2-I[N]-l:I[N]>=u[N]&&(I[N]=(u[N]-1)*2-I[N]+l);I=I.map((N,P)=>N-p[P]);let k=b.locToIndex(I,c,d);y[x]=m[k]}return{dataId:t.write(y,i,o.dtype),shape:i,dtype:o.dtype}}var d$={kernelName:Mo,backendName:"cpu",kernelFunc:Vre};var Hre=nt((r,e)=>{let t=r%e;return r<0&&e<0||r>=0&&e>=0?t:(t+e)%e}),qre=ut(Ki,Hre),f$={kernelName:Ki,backendName:"cpu",kernelFunc:qre};var g$=Ap(Wd());function xA(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=o.shape.length,i=s;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);let p=b.parseAxisParam([i],o.shape),u=TA({inputs:{x:o},backend:t,attrs:{reductionIndices:p,keepDims:!1}}),l=C.expandShapeToKeepDim(u.shape,p),m=at({inputs:{x:u},backend:t,attrs:{shape:l}}),c=Kh({inputs:{a:o,b:m},backend:t}),d=qv({inputs:{x:c},backend:t}),f=Tu({inputs:{x:d},backend:t,attrs:{axis:p,keepDims:!1}}),h=at({inputs:{x:f},backend:t,attrs:{shape:l}}),g=Hh({inputs:{a:d,b:h},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),g}var h$={kernelName:Vo,backendName:"cpu",kernelFunc:xA};function jre(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n;oe(o,"multinomial");let p=i?o:xA({inputs:{logits:o},backend:t,attrs:{dim:-1}}),u=p.shape[0],l=p.shape[1],m=t.data.get(p.dataId).values,c=[u,s],d=b.makeZerosTypedArray(b.sizeFromShape(c),"int32");for(let f=0;f<u;++f){let h=f*l,g=new Float32Array(l-1);g[0]=m[h];for(let x=1;x<g.length;++x)g[x]=g[x-1]+m[h+x];let y=g$.alea(a.toString()),T=f*s;for(let x=0;x<s;++x){let I=y();d[T+x]=g.length;for(let k=0;k<g.length;k++)if(I<g[k]){d[T+x]=k;break}}}return i||t.disposeIntermediateTensorInfo(p),t.makeTensorInfo(c,"int32",d)}var b$={kernelName:Am,backendName:"cpu",kernelFunc:jre};var Xre=br.nonMaxSuppressionV3Impl;function Yre(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p}=n;oe(o,"NonMaxSuppression");let u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,{selectedIndices:m}=Xre(u,l,a,i,p);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}var y$={kernelName:xa,backendName:"cpu",kernelFunc:Yre};var Qre=br.nonMaxSuppressionV4Impl;function Zre(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p,padToMaxOutputSize:u}=n;oe(o,"NonMaxSuppressionPadded");let l=t.data.get(o.dataId).values,m=t.data.get(s.dataId).values,{selectedIndices:c,validOutputs:d}=Qre(l,m,a,i,p,u);return[t.makeTensorInfo([c.length],"int32",new Int32Array(c)),t.makeTensorInfo([],"int32",new Int32Array([d]))]}var T$={kernelName:Vi,backendName:"cpu",kernelFunc:Zre};var Jre=br.nonMaxSuppressionV5Impl;function ene(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p,softNmsSigma:u}=n;oe(o,"NonMaxSuppressionWithScore");let l=t.data.get(o.dataId).values,m=t.data.get(s.dataId).values,c=a,d=i,f=p,h=u,{selectedIndices:g,selectedScores:y}=Jre(l,m,c,d,f,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var x$={kernelName:Ia,backendName:"cpu",kernelFunc:ene};function tne(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n;oe(o,"oneHot");let p=b.sizeFromShape(o.shape),u=new Float32Array(p*s);u.fill(i);let l=t.data.get(o.dataId).values;for(let m=0;m<p;++m)l[m]>=0&&l[m]<s&&(u[m*s+l[m]]=a);return t.makeTensorInfo([...o.shape,s],"int32",u)}var I$={kernelName:Ca,backendName:"cpu",kernelFunc:tne};function Xh(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Ks({inputs:{input:n},backend:t}),s=Xh({inputs:{x:o},backend:t}),a=Ci({inputs:{input:n},backend:t}),i=Xh({inputs:{x:a},backend:t}),p=vr({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),p}else return jh({backend:t,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var C$={kernelName:Cs,backendName:"cpu",kernelFunc:Xh};function k$(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Ks({inputs:{input:n},backend:t}),s=k$({inputs:{x:o},backend:t}),a=Ci({inputs:{input:n},backend:t}),i=Xh({inputs:{x:a},backend:t}),p=vr({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),p}else return jh({backend:t,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var S$={kernelName:fs,backendName:"cpu",kernelFunc:k$};function IA(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return _c({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(l=>{b.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),b.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],p=e.map(l=>{let m=_c({inputs:{input:l},backend:t,attrs:{dim:o}});return i.push(m),m}),u=dp({inputs:p,backend:t,attrs:{axis:o}});return i.forEach(l=>t.disposeIntermediateTensorInfo(l)),u}var v$={kernelName:hs,backendName:"cpu",kernelFunc:IA};function rne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;oe(o,"pad");let i=s.map((T,x)=>T[0]+o.shape[x]+T[1]),p=s.map(T=>T[0]),u=t.data.get(o.dataId).values,l=b.sizeFromShape(o.shape),m=o.shape.length,c=b.computeStrides(o.shape),d=b.sizeFromShape(i),f=i.length,h=b.computeStrides(i),g=b.getTypedArrayFromDType(o.dtype,d);a!==0&&g.fill(a);for(let T=0;T<l;T++){let I=b.indexToLoc(T,m,c).map((N,P)=>N+p[P]),k=b.locToIndex(I,f,h);g[k]=u[T]}return{dataId:t.write(g,i,o.dtype),shape:i,dtype:o.dtype}}var CT={kernelName:Eo,backendName:"cpu",kernelFunc:rne};var nne=nt((r,e)=>Math.pow(r,e)),one=ut(Ro,nne),A$={kernelName:Ro,backendName:"cpu",kernelFunc:one};function sne(r){let{backend:e,attrs:t}=r,{start:n,stop:o,dtype:s,step:a}=t,i=Sl(n,o,a,s);return e.makeTensorInfo([i.length],s,i)}var w$={kernelName:si,backendName:"cpu",kernelFunc:sne};var ane=Fe(Hi,r=>1/r),N$={kernelName:Hi,backendName:"cpu",kernelFunc:ane};function ine(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n;oe(o,"resizeBilinear");let p=b.computeStrides(o.shape),[u,l]=i,[m,c,d,f]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(b.sizeFromShape([m,u,l,f])),y=[s&&u>1?c-1:c,s&&l>1?d-1:d],T=[s&&u>1?u-1:u,s&&l>1?l-1:l],x=0,I=y[0]/T[0],k=y[1]/T[1];for(let N=0;N<m;N++)for(let P=0;P<u;P++){let F;a?F=I*(P+.5)-.5:F=I*P;let E=Math.max(0,Math.floor(F)),$=F-E,U=Math.min(c-1,Math.ceil(F)),W=N*p[0]+E*p[1],V=N*p[0]+U*p[1];for(let H=0;H<l;H++){let q;a?q=k*(H+.5)-.5:q=k*H;let Y=Math.max(0,Math.floor(q)),ee=q-Y,j=Math.min(d-1,Math.ceil(q)),re=W+Y*p[2],se=V+Y*p[2],ae=W+j*p[2],le=V+j*p[2];for(let ie=0;ie<f;ie++){let be=h[re+ie],he=h[se+ie],Ie=h[ae+ie],we=h[le+ie],Ee=be+(Ie-be)*ee,_e=he+(we-he)*ee,Qe=Ee+(_e-Ee)*$;g[x++]=Qe}}}return t.makeTensorInfo([m,u,l,f],"float32",g)}var D$={kernelName:Bo,backendName:"cpu",kernelFunc:ine};function une(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n;oe([s,o],"resizeBilinearGrad");let i=b.computeStrides(o.shape),[p,u,l,m]=o.shape,[,c,d]=s.shape,f=new Float32Array(p*u*l*m),h=[a&&c>1?u-1:u,a&&d>1?l-1:l],g=[a&&c>1?c-1:c,a&&d>1?d-1:d],y=h[0]/g[0],T=h[1]/g[1],x=t.data.get(s.dataId).values,I=0;for(let k=0;k<p;k++){let N=k*i[0];for(let P=0;P<c;P++){let F=P*y,E=Math.floor(F),$=Math.min(Math.ceil(F),u-1),U=N+E*i[1],W=N+$*i[1],V=F-E,H=1-V;for(let q=0;q<d;q++){let Y=q*T,ee=Math.floor(Y),j=Math.min(Math.ceil(Y),l-1),re=Y-ee,se=1-re,ae=U+ee*i[2],le=U+j*i[2],ie=W+ee*i[2],be=W+j*i[2],he=H*se,Ie=H*re,we=V*se,Ee=V*re;for(let _e=0;_e<m;_e++){let Qe=x[I++];f[ae+_e]+=Qe*he,f[le+_e]+=Qe*Ie,f[ie+_e]+=Qe*we,f[be+_e]+=Qe*Ee}}}}return t.makeTensorInfo([p,l,u,m],"float32",f)}var P$={kernelName:Nm,backendName:"cpu",kernelFunc:une};function pne(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n;oe(o,"resizeNearestNeighbor");let p=b.computeStrides(o.shape),[u,l]=i,[m,c,d,f]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(m*u*l*f),y=[s&&u>1?c-1:c,s&&l>1?d-1:d],T=[s&&u>1?u-1:u,s&&l>1?l-1:l],x=y[0]/T[0],I=y[1]/T[1],k=0;for(let N=0;N<m;N++){let P=N*p[0];for(let F=0;F<u;F++){let E=a?x*(F+.5):x*F,$=Math.min(c-1,s?Math.round(E):Math.floor(E));a&&($=Math.max(0,$));let U=P+$*p[1];for(let W=0;W<l;W++){let V=a?I*(W+.5):I*W,H=Math.min(d-1,s?Math.round(V):Math.floor(V));a&&(H=Math.max(0,H));let q=U+H*p[2];for(let Y=0;Y<f;Y++){let ee=h[q+Y];g[k++]=ee}}}}return t.makeTensorInfo([m,u,l,f],o.dtype,g)}var M$={kernelName:ai,backendName:"cpu",kernelFunc:pne};function lne(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n;oe([s,o],"resizeNearestNeighborGrad");let i=b.computeStrides(o.shape),p=b.computeStrides(s.shape),[u,l,m,c]=o.shape,[,d,f]=s.shape,h=new Float32Array(u*l*m*c),g=t.data.get(s.dataId).values,y=[a&&d>1?l-1:l,a&&f>1?m-1:m],T=[a&&d>1?d-1:d,a&&f>1?f-1:f],x=y[0]/T[0],I=y[1]/T[1],k=1/x,N=1/I,P=Math.ceil(k)*2+2,F=Math.ceil(N)*2+2;for(let E=0;E<u;E++){let $=E*i[0];for(let U=0;U<l;U++){let W=$+U*i[1],V=Math.floor(U*k),H=Math.floor(V-P/2);for(let q=0;q<m;q++){let Y=W+q*i[2],ee=Math.floor(q*N),j=Math.floor(ee-F/2);for(let re=0;re<c;re++){let se=0;for(let ae=0;ae<P;ae++){let le=ae+H;if(le<0||le>=d)continue;let ie=$+le*p[1],be=le*x,he=Math.min(l-1,a?Math.round(be):Math.floor(be));if(U===he)for(let Ie=0;Ie<F;Ie++){let we=Ie+j;if(we<0||we>=f)continue;let Ee=ie+we*p[2],_e=we*I,Qe=Math.min(m-1,a?Math.round(_e):Math.floor(_e));q===Qe&&(se+=g[Ee+re])}}h[Y+re]=se}}}}return t.makeTensorInfo(o.shape,o.dtype,h)}var F$={kernelName:wm,backendName:"cpu",kernelFunc:lne};function mne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n;oe(o,"reverse");let a=o.shape.length,i=b.parseAxisParam(s,o.shape);if(a===0)return Hr({inputs:{x:o},backend:t});let p=new gt(o.shape,o.dtype),u=t.bufferSync(o);for(let l=0;l<p.size;l++){let m=p.indexToLoc(l),c=m.slice();i.forEach(d=>c[d]=o.shape[d]-1-c[d]),p.set(u.get(...c),...m)}return t.makeTensorInfo(p.shape,p.dtype,p.values)}var E$={kernelName:ka,backendName:"cpu",kernelFunc:mne};var R$={kernelName:Ma,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,p=b.getTypedArrayFromDType(n.dtype,b.sizeFromShape(n.shape)),[u,l,m,c]=n.shape,[d,f]=C.getImageCenter(a,l,m),h=255,g=Math.sin(o),y=Math.cos(o),T=i.data.get(n.dataId).values;for(let I=0;I<u;I++){let k=I*m*l*c;for(let N=0;N<l;N++){let P=N*(m*c);for(let F=0;F<m;F++){let E=F*c;for(let $=0;$<c;$++){let U=[u,N,F,$],W=U[2],V=U[1],H=(W-d)*y-(V-f)*g,q=(W-d)*g+(V-f)*y;H=Math.round(H+d),q=Math.round(q+f);let Y=s;if(typeof s!="number"&&($===3?Y=h:Y=s[$]),H>=0&&H<m&&q>=0&&q<l){let j=q*(m*c),re=H*c,se=k+j+re+$;Y=T[se]}let ee=k+P+E+$;p[ee]=Y}}}}return{dataId:i.write(p,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var cne=Fe(Sa,r=>{let e=Math.floor(r);return r-e<.5?Math.floor(r):r-e>.5?Math.ceil(r):e%2===0?e:e+1}),L$={kernelName:Sa,backendName:"cpu",kernelFunc:cne};function kT(r,e,t,n,o,s,a,i,p,u){let l=[n/o,o],m=r.values,c=e.values;if(n===0)return Ce(t,e.dtype);let d=Ce(l,e.dtype);d.values.fill(p);for(let f=0;f<s;f++){let h=[],g=0;for(let y=0;y<a;y++){let T=m[f*a+y];h.push(T),g+=T*i[y]}if(g<0||g>=n/o)throw new Error(`Invalid indices: ${h} does not index into ${t}`);for(let y=0;y<o;y++)u?d.values[g*o+y]+=c[f*o+y]:d.values[g*o+y]=e.rank===0?c[0]:c[f*o+y]}return d}function dne(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:p,sliceSize:u,strides:l,outputSize:m}=C.calculateShapes(s,o,a),c=!0,d=t.bufferSync(o),f=t.bufferSync(s),h=kT(d,f,a,m,u,p,i,l,0,c);return t.makeTensorInfo(a,h.dtype,h.values)}var _$={kernelName:va,backendName:"cpu",kernelFunc:dne};function fne(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e;oe([n,o,s],"select");let a=n.shape.length,i=t.data.get(n.dataId).values,p=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,l=Ft(o.dtype,s.dtype),m=b.makeZerosTypedArray(b.sizeFromShape(o.shape),l),c=0,d=a===0||a>1||o.shape.length===1?1:b.sizeFromShape(o.shape.slice(1));for(let f=0;f<i.length;f++)for(let h=0;h<d;h++)i[f]===1?m[c++]=p[f]:m[c++]=u[f];return t.makeTensorInfo(o.shape,l,m)}var $$={kernelName:bs,backendName:"cpu",kernelFunc:fne};var hne=C.SELU_SCALEALPHA,gne=C.SELU_SCALE,bne=Fe(qi,r=>r>=0?gne*r:hne*(Math.exp(r)-1)),B$={kernelName:qi,backendName:"cpu",kernelFunc:bne};var yne=Fe(ji,r=>r<0?-1:r>0?1:0),O$={kernelName:ji,backendName:"cpu",kernelFunc:yne};var Tne=Fe(Go,r=>Math.sin(r)),z$={kernelName:Go,backendName:"cpu",kernelFunc:Tne};var xne=Fe(Aa,r=>Math.sinh(r)),G$={kernelName:Aa,backendName:"cpu",kernelFunc:xne};var Ine=11920928955078125e-23,U$=Math.log(Ine)+2,Cne=Fe(Xi,r=>{let e=r>-U$,t=r<U$,n=Math.exp(r),o;return t?o=n:e?o=r:o=Math.log(1+n),o}),W$={kernelName:Xi,backendName:"cpu",kernelFunc:Cne};function kne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;oe([o],"spaceToBatchND");let i=b.sizeFromShape(s),p=[[0,0]];p.push(...a);for(let N=1+s.length;N<o.shape.length;++N)p.push([0,0]);let u=CT.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:p,constantValue:0}}),l=C.getReshaped(u.shape,s,i,!1),m=C.getPermuted(l.length,s.length,!1),c=C.getReshapedPermuted(u.shape,s,i,!1),h=at({inputs:{x:u},backend:t,attrs:{shape:l}}),T=Xt({inputs:{x:h},backend:t,attrs:{perm:m}}),k=at({inputs:{x:T},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(T),k}var K$={kernelName:Ts,backendName:"cpu",kernelFunc:kne};function Sne(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=t.data.get(n.dataId).values,p=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,l=t.data.get(a.dataId).values[0],[m,c,d,f,h]=lT(i,n.shape,n.dtype,p,o.dtype,u,l);return[t.makeTensorInfo(c,n.dtype,m),t.makeTensorInfo([c[0]],o.dtype,d),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var V$={kernelName:Uu,backendName:"cpu",kernelFunc:Sne};function vne(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(t.data.get(o.dataId).values),i=t.data.get(n.dataId).values,p=Array.from(t.data.get(s.dataId).values),[u,l,m]=mT(i,n.shape,n.dtype,a,p);return[t.makeTensorInfo(l,n.dtype,u),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var H$={kernelName:Yi,backendName:"cpu",kernelFunc:vne};function Ane(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let a=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,[u,l]=Fc(a,n.shape,n.dtype,i,p,!0);return t.makeTensorInfo(l,n.dtype,u)}var q$={kernelName:Wu,backendName:"cpu",kernelFunc:Ane};function wne(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let a=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,[u,l]=Fc(a,n.shape,n.dtype,i,p);return t.makeTensorInfo(l,n.dtype,u)}var j$={kernelName:Ku,backendName:"cpu",kernelFunc:wne};function Nne(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:p,numUpdates:u,sliceSize:l,strides:m,outputSize:c}=C.calculateShapes(s,o,i),d=!1,f=t.bufferSync(o),h=t.bufferSync(s),g=t.data.get(a.dataId).values[0],y=kT(f,h,i,c,l,u,p,m,g,d);return t.makeTensorInfo(i,y.dtype,y.values)}var X$={kernelName:Vu,backendName:"cpu",kernelFunc:Nne};function Dne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=b.parseAxisParam(a,o.shape)[0],p=C.prepareSplitSize(o,s,i),u=new Array(o.shape.length).fill(0),l=o.shape.slice();return p.map(m=>{let c=[...l];c[i]=m;let d=qs({inputs:{x:o},backend:t,attrs:{begin:u,size:c}});return u[i]+=m,d})}var Y$={kernelName:xs,backendName:"cpu",kernelFunc:Dne};var Q$={kernelName:ii,backendName:"cpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e;oe(t,"square");let o=n.data.get(t.dataId).values,s=new Float32Array(o.length);for(let i=0;i<o.length;++i){let p=o[i];s[i]=p*p}return{dataId:n.write(s,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};var Pne=Fe(ks,(r,e)=>{let t=e;return isNaN(r)?NaN:r>0?1:t.alpha}),Z$={kernelName:ks,backendName:"cpu",kernelFunc:Pne};function Mne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:p,endMask:u,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n;oe(o,"stridedSlice");let{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:T,end:x,strides:I}=Tt.sliceInfo(o.shape,s,a,i,p,u,l,m,c),k;if(h)k=at({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let N=Tt.computeOutShape(T,x,I),P=qs({inputs:{x:o},backend:t,attrs:{begin:T,size:N}});k=at({inputs:{x:P},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(P)}else{let N=t.bufferSync(o),P=cT(d,N,I,T);k=t.makeTensorInfo(f,P.dtype,P.values)}return k}var J$={kernelName:wa,backendName:"cpu",kernelFunc:Mne};function Fne(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:p,preserveShortSequences:u}=n,{data:l,dataSplits:m}=e,c=t.data.get(l.dataId).values,d=t.data.get(m.dataId).values,[f,h]=dT(c,d,o,s,a,i,p,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(m.shape,"int32",h)]}var eB={kernelName:Hu,backendName:"cpu",kernelFunc:Fne};function Ene(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=t.data.get(s.dataId).values,p=t.data.get(a.dataId).values[0],[u,l,m]=fT(i,p,o),c=l.length;return[t.makeTensorInfo([c,2],"int32",u),t.makeTensorInfo([c],"string",l),t.makeTensorInfo([2],"int32",new Int32Array(m))]}var tB={kernelName:Dm,backendName:"cpu",kernelFunc:Ene};function Rne(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=t.data.get(s.dataId).values,i=hT(a,o);return t.makeTensorInfo(s.shape,"int32",i)}var rB={kernelName:Pm,backendName:"cpu",kernelFunc:Rne};var Lne=Fe(Na,r=>Math.tan(r)),nB={kernelName:Na,backendName:"cpu",kernelFunc:Lne};var _ne=Fe(jo,r=>Math.tanh(r)),oB={kernelName:jo,backendName:"cpu",kernelFunc:_ne};function $ne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;oe(o,"tile");let a=gT(t.bufferSync(o),s);return t.makeTensorInfo(a.shape,a.dtype,a.values)}var sB={kernelName:Nn,backendName:"cpu",kernelFunc:$ne};function Bne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n;oe(o,"topk");let i=t.data.get(o.dataId).values,[p,u]=bT(i,o.shape,o.dtype,s,a);return[t.makeTensorInfo(p.shape,p.dtype,p.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}var aB={kernelName:Da,backendName:"cpu",kernelFunc:Bne};function One(r){let{inputs:e,attrs:t,backend:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:p,outputShape:u}=t,[l,m,c,d]=o.shape,[f,h]=u??[m,c],g=[l,f,h,d],y=b.computeStrides(o.shape),T=y[0],x=y[1],I=y[2],k=b.getTypedArrayFromDType(o.dtype,b.sizeFromShape(g));k.fill(p);let N=n.data.get(o.dataId).values,P=n.data.get(s.dataId).values;for(let E=0;E<l;++E){let $=s.shape[0]===1?P:P.subarray(E*8,E*8+8);for(let U=0;U<f;++U)for(let W=0;W<h;++W)for(let V=0;V<d;++V){let H,q=$[6]*W+$[7]*U+1;if(q===0)continue;let Y=($[0]*W+$[1]*U+$[2])/q,ee=($[3]*W+$[4]*U+$[5])/q,j=iB(Y,c,i),re=iB(ee,m,i);switch(a){case"nearest":H=Kne(N,m,c,T,x,I,E,re,j,V,p);break;case"bilinear":H=Vne(N,m,c,T,x,I,E,re,j,V,p);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}let se=E*T+U*x+W*I+V;k[se]=H}return n.makeTensorInfo(g,o.dtype,k)}return{dataId:n.write(k,g,o.dtype),shape:o.shape,dtype:o.dtype}}var uB={kernelName:Pa,backendName:"cpu",kernelFunc:One};function iB(r,e,t){switch(t){case"reflect":return zne(r,e);case"wrap":return Gne(r,e);case"nearest":return Wne(r,e);case"constant":default:return Une(r,e)}}function zne(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=2*e;t<n&&(t=n*Math.trunc(-t/n)+t),t=t<-e?t+n:-t-1}else if(t>e-1)if(e<=1)t=0;else{let n=2*e;t-=n*Math.trunc(t/n),t>=e&&(t=n-t-1)}return b.clamp(0,t,e-1)}function Gne(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=e-1;t+=e*(Math.trunc(-t/n)+1)}else if(t>e-1)if(e<=1)t=0;else{let n=e-1;t-=e*Math.trunc(t/n)}return b.clamp(0,t,e-1)}function Une(r,e){return r}function Wne(r,e){return b.clamp(0,r,e-1)}function Yh(r,e,t,n,o,s,a,i,p,u,l){let m=a*n+i*o+p*s+u;return 0<=i&&i<e&&0<=p&&p<t?r[m]:l}function Kne(r,e,t,n,o,s,a,i,p,u,l){let m=Math.round(i),c=Math.round(p);return Yh(r,e,t,n,o,s,a,m,c,u,l)}function Vne(r,e,t,n,o,s,a,i,p,u,l){let m=Math.floor(i),c=Math.floor(p),d=m+1,f=c+1,h=(f-p)*Yh(r,e,t,n,o,s,a,m,c,u,l)+(p-c)*Yh(r,e,t,n,o,s,a,m,f,u,l),g=(f-p)*Yh(r,e,t,n,o,s,a,d,c,u,l)+(p-c)*Yh(r,e,t,n,o,s,a,d,f,u,l);return(d-i)*h+(i-m)*g}function Hne(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;oe(s,"unique");let a=n.data.get(s.dataId).values,{outputValues:i,outputShape:p,indices:u}=yT(a,o,s.shape,s.dtype);return[n.makeTensorInfo(p,s.dtype,i),n.makeTensorInfo([u.length],"int32",u)]}var pB={kernelName:Mm,backendName:"cpu",kernelFunc:Hne};function qne(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape.length,i=o.shape[s],p=new Array(a-1),u=0;for(let d=0;d<a;d++)d!==s&&(p[u++]=o.shape[d]);let l=new Array(a).fill(0),m=o.shape.slice();m[s]=1;let c=new Array(i);for(let d=0;d<c.length;d++){l[s]=d;let f=qs({inputs:{x:o},backend:t,attrs:{begin:l,size:m}});c[d]=at({inputs:{x:f},backend:t,attrs:{shape:p}}),t.disposeIntermediateTensorInfo(f)}return c}var lB={kernelName:Is,backendName:"cpu",kernelFunc:qne};function jne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:a}=n;oe(o,"unsortedSegmentSum");let i=o.shape.length,p=s.shape.length,u=[],l=[],m=i-p,c=s;for(let f=0;f<m;++f){let h=_c({inputs:{input:c},backend:t,attrs:{dim:f+1}});c=h,l.push(h)}for(let f=0;f<a;++f){let h=b.createScalarValue(f,"int32"),g=t.makeTensorInfo([],"int32",h),y=Vv({inputs:{a:g,b:c},backend:t}),T=Vs({inputs:{x:y},backend:t,attrs:{dtype:"float32"}}),x=kl({inputs:{a:T,b:o},backend:t}),I=Tu({inputs:{x},backend:t,attrs:{axis:0,keepDims:!1}});u.push(I),l.push(g),l.push(y),l.push(T),l.push(x),l.push(I)}let d=IA({inputs:u,backend:t,attrs:{axis:0}});return l.forEach(f=>t.disposeIntermediateTensorInfo(f)),d}var mB={kernelName:qu,backendName:"cpu",kernelFunc:jne};var Xne=[UL,rL,WL,KL,iL,VL,HL,qL,jL,XL,YL,QL,ZL,JL,e_,r_,n_,o_,s_,GL,a_,i_,u_,p_,aL,uL,l_,nL,m_,d_,f_,h_,g_,b_,y_,T_,x_,I_,C_,k_,S_,v_,A_,w_,N_,D_,P_,M_,F_,E_,L_,LL,__,pL,$_,lL,B_,mL,O_,z_,G_,cL,U_,W_,K_,V_,H_,dL,fL,oL,q_,c_,j_,X_,Y_,_L,hL,gL,Q_,bL,Z_,J_,e$,t$,r$,n$,o$,yL,s$,a$,i$,u$,l$,m$,c$,TL,d$,f$,b$,xL,IL,y$,T$,x$,CL,I$,S$,v$,CT,A$,$L,SL,w$,sL,qh,N$,BL,OL,zL,D$,P$,M$,F$,E$,R$,L$,vL,_$,$$,B$,wL,O$,z$,G$,NL,h$,W$,K$,V$,H$,q$,j$,X$,Y$,PL,Q$,ML,Z$,J$,eB,tB,rB,EL,R_,nB,oB,sB,aB,uB,kL,pB,lB,mB,C$];for(let r of Xne)Qi(r);var Oc={};Xe(Oc,{assertNotComplex:()=>Ha,bindCanvasToFramebuffer:()=>ooe,bindColorTextureToFramebuffer:()=>eg,bindTextureToProgramUniformSampler:()=>BA,bindTextureUnit:()=>hB,bindVertexBufferToProgramAttribute:()=>NT,callAndCheck:()=>ve,canBeRepresented:()=>AA,createFragmentShader:()=>NA,createFramebuffer:()=>LA,createProgram:()=>DA,createStaticIndexBuffer:()=>FA,createStaticVertexBuffer:()=>MA,createTexture:()=>EA,createVertexShader:()=>wA,getBatchDim:()=>Iu,getExtensionOrThrow:()=>$c,getFramebufferErrorMessage:()=>gB,getMaxTexturesInShader:()=>GA,getNumChannels:()=>roe,getProgramUniformLocation:()=>$A,getProgramUniformLocationOrThrow:()=>_A,getRowsCols:()=>Cu,getShapeAs3D:()=>tg,getTextureShapeFromLogicalShape:()=>OA,getWebGLDisjointQueryTimerVersion:()=>UA,getWebGLErrorMessage:()=>fB,getWebGLMaxTextureSize:()=>zA,hasExtension:()=>Zn,isCapableOfRenderingToFloatTexture:()=>WA,isDownloadFloatTextureEnabled:()=>KA,isReshapeFree:()=>fp,isWebGLFenceEnabled:()=>VA,isWebGLVersionEnabled:()=>PT,linkProgram:()=>PA,logShaderSourceAndInfoLog:()=>wT,resetMaxTextureSize:()=>soe,resetMaxTexturesInShader:()=>aoe,unbindColorTextureFromFramebuffer:()=>DT,unbindTextureUnit:()=>noe,validateFramebuffer:()=>Bc,validateProgram:()=>Jh,validateTextureSize:()=>RA});var Al={},CA={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function kA(r,e){Al[r]=e}function Qn(r,e){if(!(r in Al)||e!=null){let n=Qne(r,e);if(n!==null)Al[r]=n;else return console.log("Could not get context for WebGL version",r),null}let t=Al[r];return t==null||t.isContextLost()?(delete Al[r],Qn(r)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Al[r])}function Yne(r){if(typeof OffscreenCanvas<"u"&&r===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function Qne(r,e){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=e??Yne(r);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete Al[r]},!1),r===1?t.getContext("webgl",CA)||t.getContext("experimental-webgl",CA):t.getContext("webgl2",CA)}function wl(r,e){return[e,r]}function cB(r,e){return r*e}function Qh(r){let e=b.sizeFromShape(r),t=Math.ceil(e/4);return b.sizeToSquarishShape(t)}function ki(r,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(r/2))]}function dB(r,e){let[t,n]=ki(r,e);return t*n*4}function Zh(r,e){let t=r,n,o,s,a,i,p,u,l,m,c;return B().getNumber("WEBGL_VERSION")===2?(n=t.R32F,o=t.R16F,s=t.RGBA16F,a=t.RGBA32F,i=t.RED,u=4,l=1,m=t.HALF_FLOAT,c=t.FLOAT,p=t.RGBA8):(n=r.RGBA,o=r.RGBA,s=r.RGBA,a=t.RGBA,i=r.RGBA,u=4,l=4,m=e!=null?e.HALF_FLOAT_OES:null,c=r.FLOAT,p=r.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:p,downloadUnpackNumChannels:u,defaultNumChannels:l,textureTypeHalfFloat:m,textureTypeFloat:c}}function ve(r,e){let t=e();return B().getBool("DEBUG")&&Zne(r),t}function Zne(r){let e=r.getError();if(e!==r.NO_ERROR)throw new Error("WebGL Error: "+fB(r,e))}var Jne=596e-10,eoe=65504;function AA(r){return!!(B().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||Jne<Math.abs(r)&&Math.abs(r)<eoe)}function fB(r,e){switch(e){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function $c(r,e){return xu(r,()=>r.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function wA(r,e){let t=xu(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ve(r,()=>r.shaderSource(t,e)),ve(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function NA(r,e){let t=xu(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ve(r,()=>r.shaderSource(t,e)),ve(r,()=>r.compileShader(t)),B().get("ENGINE_COMPILE_ONLY"))return t;if(r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw wT(e,r.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}var toe=/ERROR: [0-9]+:([0-9]+):/g;function wT(r,e){let t=toe.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(r);return}let n=+t[1],o=r.split(`
`),s=o.length.toString().length+2,a=o.map((m,c)=>b.rightPad((c+1).toString(),s)+m),i=0;for(let m=0;m<a.length;m++)i=Math.max(a[m].length,i);let p=a.slice(0,n-1),u=a.slice(n-1,n),l=a.slice(n);console.log(p.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${b.rightPad(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function DA(r){return xu(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function PA(r,e){if(ve(r,()=>r.linkProgram(e)),!B().get("ENGINE_COMPILE_ONLY")&&r.getProgramParameter(e,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Jh(r,e){if(ve(r,()=>r.validateProgram(e)),r.getProgramParameter(e,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function MA(r,e){let t=xu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return ve(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),ve(r,()=>r.bufferData(r.ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function FA(r,e){let t=xu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return ve(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t)),ve(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function roe(){return B().getNumber("WEBGL_VERSION")===2?1:4}function EA(r){return xu(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function RA(r,e){let t=B().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||e<=0){let n=`[${r}x${e}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(r>t||e>t){let n=`[${r}x${e}]`,o=`[${t}x${t}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+o+".")}}function LA(r){return xu(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function NT(r,e,t,n,o,s,a){let i=r.getAttribLocation(e,t);return i===-1?!1:(ve(r,()=>r.bindBuffer(r.ARRAY_BUFFER,n)),ve(r,()=>r.vertexAttribPointer(i,o,r.FLOAT,!1,s,a)),ve(r,()=>r.enableVertexAttribArray(i)),!0)}function hB(r,e,t){bB(r,t),ve(r,()=>r.activeTexture(r.TEXTURE0+t)),ve(r,()=>r.bindTexture(r.TEXTURE_2D,e))}function noe(r,e){bB(r,e),ve(r,()=>r.activeTexture(r.TEXTURE0+e)),ve(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function _A(r,e,t){return xu(r,()=>r.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function $A(r,e,t){return r.getUniformLocation(e,t)}function BA(r,e,t,n){ve(r,()=>hB(r,e,n)),ve(r,()=>r.uniform1i(t,n))}function ooe(r){ve(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,null)),ve(r,()=>r.viewport(0,0,r.canvas.width,r.canvas.height)),ve(r,()=>r.scissor(0,0,r.canvas.width,r.canvas.height))}function eg(r,e,t){ve(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),ve(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0))}function DT(r,e){ve(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),ve(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function Bc(r){let e=r.checkFramebufferStatus(r.FRAMEBUFFER);if(e!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+gB(r,e))}function gB(r,e){switch(e){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function xu(r,e,t){let n=ve(r,()=>e());if(n==null)throw new Error(t);return n}function bB(r,e){let t=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=e+r.TEXTURE0;if(n<r.TEXTURE0||n>t){let o=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${o}.`)}}function Iu(r,e=2){return b.sizeFromShape(r.slice(0,r.length-e))}function Cu(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function tg(r){let e=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(e=[Iu(r),...Cu(r)]),e}function OA(r,e=!1){let t=B().getNumber("WEBGL_MAX_TEXTURE_SIZE");e&&(t=t*2,r=r.map((o,s)=>s>=r.length-2?b.nearestLargerEven(r[s]):r[s]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=b.squeezeShape(r).newShape);let n=b.sizeFromShape(r);if(r.length<=1&&n<=t)return[1,n];if(r.length===2&&r[0]<=t&&r[1]<=t)return r;if(r.length===3&&r[0]*r[1]<=t&&r[2]<=t)return[r[0]*r[1],r[2]];if(r.length===3&&r[0]<=t&&r[1]*r[2]<=t)return[r[0],r[1]*r[2]];if(r.length===4&&r[0]*r[1]*r[2]<=t&&r[3]<=t)return[r[0]*r[1]*r[2],r[3]];if(r.length===4&&r[0]<=t&&r[1]*r[2]*r[3]<=t)return[r[0],r[1]*r[2]*r[3]];if(e){let o=Iu(r),s=2,a=2;return r.length&&([s,a]=Cu(r)),n=o*(s/2)*(a/2),b.sizeToSquarishShape(n).map(i=>i*2)}return b.sizeToSquarishShape(n)}function ST(r){return r%2===0}function fp(r,e){if(r=r.slice(-2),e=e.slice(-2),b.arraysEqual(r,e)||!r.length||!e.length||r[0]===0||r[1]===0||e[0]===0||e[1]===0)return!0;if(r.length!==e.length){let t=r.slice(-1)[0],n=e.slice(-1)[0];if(t===n||ST(t)&&ST(n)&&(r[0]===1||e[0]===1))return!0}return r[1]===e[1]&&ST(r[0])&&ST(e[0])}var vT,AT;function zA(r){if(vT==null){let e=Qn(r);vT=e.getParameter(e.MAX_TEXTURE_SIZE)}return vT}function soe(){vT=null}function aoe(){AT=null}function GA(r){if(AT==null){let e=Qn(r);AT=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,AT)}function UA(r){if(r===0)return 0;let e,t=Qn(r);return Zn(t,"EXT_disjoint_timer_query_webgl2")&&r===2?e=2:Zn(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Zn(r,e){return r.getExtension(e)!=null}function PT(r){try{if(Qn(r)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function WA(r){if(r===0)return!1;let e=Qn(r);if(r===1){if(!Zn(e,"OES_texture_float"))return!1}else if(!Zn(e,"EXT_color_buffer_float"))return!1;return vA(e)}function KA(r){if(r===0)return!1;let e=Qn(r);if(r===1){if(!Zn(e,"OES_texture_float")||!Zn(e,"WEBGL_color_buffer_float"))return!1}else{if(Zn(e,"EXT_color_buffer_float"))return vA(e);let n="EXT_color_buffer_half_float";if(Zn(e,n)){let o=e.getExtension(n);return ioe(e,o)}return!1}return vA(e)}function vA(r){let e=Zh(r),t=r.createTexture();r.bindTexture(r.TEXTURE_2D,t);let n=1,o=1;r.texImage2D(r.TEXTURE_2D,0,e.internalFormatFloat,n,o,0,e.textureFormatFloat,e.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(t),r.deleteFramebuffer(s),a}function ioe(r,e){let t=Zh(r,e),n=r.createTexture();r.bindTexture(r.TEXTURE_2D,n);let o=1,s=1;r.texImage2D(r.TEXTURE_2D,0,t.internalFormatHalfFloat,o,s,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);let a=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,a),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,n,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(n),r.deleteFramebuffer(a),i}function VA(r){return r!==2?!1:Qn(r).fenceSync!=null}function Ha(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&b.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}var $e=B();$e.registerFlag("HAS_WEBGL",()=>$e.getNumber("WEBGL_VERSION")>0);$e.registerFlag("WEBGL_VERSION",()=>PT(2)?2:PT(1)?1:0);$e.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);$e.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>$e.get("WEBGL_VERSION")===2);$e.registerFlag("WEBGL_CPU_FORWARD",()=>!0);$e.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);$e.registerFlag("WEBGL_PACK",()=>$e.getBool("HAS_WEBGL"));$e.registerFlag("WEBGL_PACK_NORMALIZATION",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_CLIP",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_REDUCE",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_LAZILY_UNPACK",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_CONV_IM2COL",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>zA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>GA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=$e.getNumber("WEBGL_VERSION");return r===0?0:UA(r)});$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>$e.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Qu.isMobile());$e.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>WA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>$e.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:$e.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));$e.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>KA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_FENCE_API_ENABLED",()=>VA($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>$e.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);$e.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});$e.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Qu.isMobile()?1:-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});$e.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);$e.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);$e.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);$e.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function Yt(){let r,e,t,n,o,s,a,i,p,u;return B().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",e="in",t="out",n="in",o="texture",s="outputColor",a="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,p="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",e="attribute",t="varying",n="varying",o="texture2D",s="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,p=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:e,varyingVs:t,varyingFs:n,texture2D:o,output:s,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:p,defineRound:u}}function qa(r,e,t="index"){let n=b.computeStrides(e);return n.map((o,s)=>{let a=`int ${r[s]} = ${t} / ${o}`,i=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * ${o}`:`index -= ${r[s]} * ${o}`;return`${a}; ${i};`}).join("")}function Nl(r,e,t="index"){let n=b.computeStrides(e);return n.map((o,s)=>{let a=`int ${r[s]} = ${t} / outShapeStrides[${s}]`,i=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * outShapeStrides[${s}]`:`index -= ${r[s]} * outShapeStrides[${s}]`;return`${a}; ${i};`}).join("")}function uoe(r,e){let t=r.length,n=r.map(s=>`${e}[${s}]`),o=new Array(t-1);o[t-2]=n[t-1];for(let s=t-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function yB(r,e,t="index"){let n=r.map((s,a)=>a),o=uoe(n,e);return o.map((s,a)=>{let i=`int ${r[a]} = ${t} / ${o[a]}`,p=a===o.length-1?`int ${r[a+1]} = ${t} - ${r[a]} * ${o[a]}`:`index -= ${r[a]} * ${o[a]}`;return`${i}; ${p};`}).join("")}function zc(r){let e=b.computeStrides(r).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Gc(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var MT=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:TB}=C;function xB(r,e,t){let n=[];if(r.forEach(d=>{let f=b.sizeFromShape(d.shapeInfo.logicalShape);if(d.shapeInfo.isUniform?n.push(`uniform float ${d.name}${f>1?`[${f}]`:""};`):(n.push(`uniform sampler2D ${d.name};`),n.push(`uniform int offset${d.name};`)),t.enableShapeUniforms){let{uniformShape:h}=FT(t.packedInputs,d.shapeInfo.logicalShape,d.shapeInfo.texShape);switch(h.length){case 1:n.push(`uniform int ${d.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${d.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${d.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${d.name}Shape;`);break;default:break}n.push(`uniform ivec2 ${d.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break;default:break}n.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(d=>{n.push(`uniform ${d.type} ${d.name}${d.arrayIndex?`[${d.arrayIndex}]`:""};`)});let o=n.join(`
`),s=r.map(d=>poe(d,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,i=Yt(),p=coe(i),u,l,m=hoe(i);return e.isPacked?(u=loe(e.logicalShape,a,t.enableShapeUniforms),l=foe(i)):(u=moe(e.logicalShape,a,t.enableShapeUniforms),l=doe(i)),t.packedInputs&&(m+=Toe),[m,p,l,o,u,s,t.userCode].join(`
`)}function Wc(r,e=!1){let t=r.shapeInfo.logicalShape;switch(t.length){case 0:return Moe(r,e);case 1:return Eoe(r,e);case 2:return Loe(r,e);case 3:return $oe(r,e);case 4:return Ooe(r,e);case 5:return zoe(r);case 6:return Goe(r);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function IB(r,e){switch(r.shapeInfo.logicalShape.length){case 0:return Poe(r);case 1:return Foe(r,e);case 2:return Roe(r,e);case 3:return _oe(r,e);default:return Boe(r,e)}}function poe(r,e,t=!1,n){let o="";t?o+=IB(r,n):o+=Wc(r,n);let s=r.shapeInfo.logicalShape,a=e.logicalShape;return s.length<=a.length&&(t?o+=Uoe(r,e):o+=Woe(r,e)),o}function loe(r,e,t){switch(r.length){case 0:return CB();case 1:return xoe(r,e,t);case 2:return Noe(r,e,t);case 3:return Coe(r,e,t);default:return Soe(r,e,t)}}function moe(r,e,t){switch(r.length){case 0:return CB();case 1:return Ioe(r,e,t);case 2:return Doe(r,e,t);case 3:return koe(r,e,t);case 4:return voe(r,e,t);case 5:return Aoe(r,e);case 6:return woe(r,e);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function coe(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function doe(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function foe(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function hoe(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${goe}
    ${boe}
    ${yoe}
  `}var goe=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,boe=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,yoe=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Toe=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function CB(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function xoe(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return n[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function Ioe(r,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function Coe(r,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[2]/2),s=o*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function koe(r,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Nl(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let n=qa(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function Soe(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[r.length-1]/2),s=o*Math.ceil(r[r.length-2]/2),a=s,i="",p="b, r, c";for(let u=2;u<r.length-1;u++)a*=r[r.length-u-1],i=`
      int b${u} = index / ${a};
      index -= b${u} * ${a};
    `+i,p=`b${u}, `+p;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${i}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${r.length}(${p});
    }
  `}function voe(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Nl(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let n=qa(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function Aoe(r,e){let t=qa(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function woe(r,e){let t=qa(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Noe(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(b.arraysEqual(r,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let o=Math.ceil(r[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function Doe(r,e,t){return b.arraysEqual(r,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:r[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function Dl(r){return`offset${r}`}function Poe(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),n=Yt();return`
    vec4 ${t}() {
      return ${n.texture2D}(${e}, halfCR);
    }
  `}function Moe(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;let[o,s]=r.shapeInfo.texShape;if(o===1&&s===1)return`
      float ${n}() {
        return sampleTexture(${t}, halfCR);
      }
    `;let a=Dl(t);if(e)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;let[i,p]=r.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${i}, ${p}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function Foe(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=r.shapeInfo.texShape,s=Yt();if(e)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${t}, uv);
    }
  `;let a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${s.texture2D}(${t}, uv);
    }
  `}function Eoe(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${Kc(r)}
      }
    `;let o=r.shapeInfo.texShape,s=o[0],a=o[1];if(a===1&&s===1)return`
      float ${n}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;let i=Dl(t);return a===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);
        return sampleTexture(${t}, uv);
      }
    `:s===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${i});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});
      return sampleTexture(${t}, uv);
    }
  `}function Roe(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=s[0],i=s[1],p=Yt();if(s!=null&&b.arraysEqual(t,s))return e?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${p.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${p.texture2D}(${n}, uv);
      }
    `;if(e)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${p.texture2D}(${n}, uv);
    }
  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],l=Math.ceil(t[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${u[0]}, ${u[1]}, row, col);
      return ${p.texture2D}(${n}, uv);
    }
  `}function Loe(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape;if(s!=null&&b.arraysEqual(t,s)){if(e)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;let c=s[0],d=s[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${d}.0, ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:a,keptDims:i}=b.squeezeShape(t),p=a;if(p.length<t.length){let c=Vc(r,p),d=["row","col"];return`
      ${Wc(c,e)}
      float ${o}(int row, int col) {
        return ${o}(${Hc(d,i)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Kc(r)}
      }
    `;let u=s[0],l=s[1],m=Dl(n);return l===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${n}, uv);
    }
  `:u===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:e?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${m};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${m};
    vec2 uv = uvFromFlat(${u}, ${l}, index);
    return sampleTexture(${n}, uv);
  }
`}function _oe(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(t[0]===1){let c=t.slice(1),d=[1,2],f=Vc(r,c),h=["b","row","col"];return`
        ${IB(f,e)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${Hc(h,d)});
        }
      `}let i=Yt();if(e)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `;let p=a[0],u=a[1],l=Math.ceil(t[2]/2),m=l*Math.ceil(t[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${p}, ${u}, ${m}, ${l}, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `}function $oe(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],a=t[2],{newShape:i,keptDims:p}=b.squeezeShape(t),u=i;if(u.length<t.length){let h=Vc(r,u),g=["row","col","depth"];return`
        ${Wc(h,e)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${Hc(g,p)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${a}, 1)));
        ${Kc(r)}
      }
    `;let l=r.shapeInfo.texShape,m=l[0],c=l[1],d=r.shapeInfo.flatOffset;if(c===s&&d==null)return e?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${c}.0, ${m}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(c===a&&d==null)return e?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${m}.0);
      return sampleTexture(${n}, uv);
    }
  `;let f=Dl(n);return e?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * ${s} + col * ${a} + depth + ${f};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${a} + depth + ${f};
        vec2 uv = uvFromFlat(${m}, ${c}, index);
        return sampleTexture(${n}, uv);
      }
  `}function Boe(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=Yt();if(e)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${t}, uv);
    }
  `;let s=r.shapeInfo.logicalShape,a=s.length,i=r.shapeInfo.texShape,p=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=p[0],l=p[1],m=Math.ceil(s[a-1]/2),c=m*Math.ceil(s[a-2]/2),d="int b, int row, int col",f=`b * ${c} + (row / 2) * ${m} + (col / 2)`;for(let h=2;h<a-1;h++)d=`int b${h}, `+d,c*=s[a-h-1],f=`b${h} * ${c} + `+f;return`
    vec4 ${n}(${d}) {
      int index = ${f};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${u});
      return ${o.texture2D}(${t}, uv);
    }
  `}function Ooe(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],a=t[2]*s,i=t[1]*a,{newShape:p,keptDims:u}=b.squeezeShape(t);if(p.length<t.length){let T=Vc(r,p),x=["row","col","depth","depth2"];return`
      ${Wc(T,e)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${Hc(x,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${s}, 1)));
        ${Kc(r)}
      }
    `;let l=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1],f=`int stride2 = ${n}Shape[3];`,h=`int stride1 = ${n}Shape[2] * stride2;`,g=`int stride0 = ${n}Shape[1] * stride1;`;if(d===i&&l==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${f}
        ${h}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(d===s&&l==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;let y=Dl(n);return e?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${h}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${y});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${c}, ${d}, index + ${y});
      return sampleTexture(${n}, uv);
    }
  `}function zoe(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[4],s=e[3]*o,a=e[2]*s,i=e[1]*a,{newShape:p,keptDims:u}=b.squeezeShape(e);if(p.length<e.length){let h=Vc(r,p),g=["row","col","depth","depth2","depth3"];return`
      ${Wc(h)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${Hc(g,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${s}, ${o})) +
          depth3;
        ${Kc(r)}
      }
    `;let l=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1];if(d===i&&l==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(d===o&&l==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${t}, uv);
      }
    `;let f=Dl(t);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${s} +
          depth2 * ${o} + depth3 + ${f};
      vec2 uv = uvFromFlat(${c}, ${d}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Goe(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:o,keptDims:s}=b.squeezeShape(e);if(o.length<e.length){let g=Vc(r,o),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Wc(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${Hc(y,s)});
      }
    `}let a=e[5],i=e[4]*a,p=e[3]*i,u=e[2]*p,l=e[1]*u;if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${u}, ${p}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${Kc(r)}
      }
    `;let m=r.shapeInfo.flatOffset,c=r.shapeInfo.texShape,d=c[0],f=c[1];if(f===l&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${p}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===a&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;let h=Dl(t);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${u} + depth * ${p} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${h};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Kc(r){let e=r.name,t=b.sizeFromShape(r.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function Uoe(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=r.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=TB(r.shapeInfo.logicalShape,e.logicalShape),p=qe(a),u=a-s,l,m=["x","y","z","w","u","v"];s===0?l="":a<2&&i.length>=1?l="coords = 0;":l=i.map(T=>`coords.${m[T+u]} = 0;`).join(`
`);let c="";a<2&&s>0?c="coords":c=r.shapeInfo.logicalShape.map((T,x)=>`coords.${m[x+u]}`).join(", ");let d="return outputValue;",h=b.sizeFromShape(r.shapeInfo.logicalShape)===1,y=b.sizeFromShape(e.logicalShape)===1;if(s===1&&!h&&!y)d=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(h&&!y)a===1?d=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:d=`
        return vec4(outputValue.x);
      `;else if(i.length){let T=s-2,x=s-1;i.indexOf(T)>-1&&i.indexOf(x)>-1?d="return vec4(outputValue.x);":i.indexOf(T)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(x)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${p} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${n}(${c});
      ${d}
    }
  `}function Woe(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=e.texShape,a=r.shapeInfo.texShape,i=r.shapeInfo.logicalShape.length,p=e.logicalShape.length;if(!r.shapeInfo.isUniform&&i===p&&r.shapeInfo.flatOffset==null&&b.arraysEqual(a,s))return`
      float ${o}() {
        return sampleTexture(${t}, resultUV);
      }
    `;let u=qe(p),l=TB(r.shapeInfo.logicalShape,e.logicalShape),m=p-i,c,d=["x","y","z","w","u","v"];i===0?c="":p<2&&l.length>=1?c="coords = 0;":c=l.map(h=>`coords.${d[h+m]} = 0;`).join(`
`);let f="";return p<2&&i>0?f="coords":f=r.shapeInfo.logicalShape.map((h,g)=>`coords.${d[g+m]}`).join(", "),`
    float ${o}() {
      ${u} coords = getOutputCoords();
      ${c}
      return get${n}(${f});
    }
  `}function qe(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function FT(r,e,t){let{newShape:n,keptDims:o}=b.squeezeShape(e),s=e.length,a=r&&s===3&&e[0]===1,i=a?e.slice(1):n,p=!r&&s>1&&!b.arraysEqual(e,t)&&n.length<s||a;return{useSqueezeShape:p,uniformShape:p?i:e,keptDims:o}}function Vc(r,e){let t=JSON.parse(JSON.stringify(r));return t.shapeInfo.logicalShape=e,t}function Hc(r,e){return e.map(t=>r[t]).join(", ")}function SB(r,e,t,n){let o=t.map((l,m)=>{let c={logicalShape:l.shape,texShape:l.isUniform?null:l.texData.texShape,isUniform:l.isUniform,isPacked:l.isUniform?!1:l.texData.isPacked,flatOffset:null};return l.texData!=null&&l.texData.slice!=null&&l.texData.slice.flatOffset>0&&(c.flatOffset=l.texData.slice.flatOffset),{name:e.variableNames[m],shapeInfo:c}}),s=o.map(l=>l.shapeInfo),a={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},i=xB(o,a,e),p=NA(r.gl,i),u=r.createProgram(p);return B().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:p,source:i,webGLProgram:u,inShapeInfos:s,outShapeInfo:a,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:{program:e,fragmentShader:p,source:i,webGLProgram:u,inShapeInfos:s,outShapeInfo:a,...HA(r,e,u)}}function HA(r,e,t){let n={},o={},s={},a=[],i,p,u,l=null,m=null;m=r.getUniformLocation(t,"NAN",!1),B().getNumber("WEBGL_VERSION")===1&&(l=r.getUniformLocation(t,"INFINITY",!1));let c=!1;for(let d=0;d<e.variableNames.length;d++){let f=e.variableNames[d];n[f]=r.getUniformLocation(t,f,c),n[`offset${f}`]=r.getUniformLocation(t,`offset${f}`,c),e.enableShapeUniforms&&(o[`${f}Shape`]=r.getUniformLocation(t,`${f}Shape`,c),s[`${f}TexShape`]=r.getUniformLocation(t,`${f}TexShape`,c))}return e.enableShapeUniforms&&(i=r.getUniformLocation(t,"outShape",c),u=r.getUniformLocation(t,"outShapeStrides",c),p=r.getUniformLocation(t,"outTexShape",c)),e.customUniforms&&e.customUniforms.forEach((d,f)=>{a[f]=r.getUniformLocation(t,d.name,c)}),{uniformLocations:n,customUniformLocations:a,infLoc:l,nanLoc:m,inShapesLocations:o,inTexShapesLocations:s,outShapeLocation:i,outShapeStridesLocation:u,outTexShapeLocation:p}}function kB(r,e){if(r.length!==e.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${e.length} inputs`);r.forEach((t,n)=>{let o=t.logicalShape,s=e[n],a=s.shape;if(!b.arraysEqual(o,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${a} must match`);if(t.isUniform&&s.isUniform)return;let i=t.texShape,p=s.isUniform?null:s.texData.texShape;if(!b.arraysEqual(i,p))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${p} must match`)})}function vB(r,e,t,n,o){e.program.enableShapeUniforms||(kB(e.inShapeInfos,t),kB([e.outShapeInfo],[n]));let s=n.texData.texture,a=n.texData.texShape;n.texData.isPacked?r.setOutputPackedMatrixTexture(s.texture,a[0],a[1]):r.setOutputMatrixTexture(s.texture,a[0],a[1]),r.setProgram(e.webGLProgram),B().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&r.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&r.gl.uniform1f(e.nanLoc,NaN),t.forEach((p,u)=>{let l=e.program.variableNames[u],m=e.uniformLocations[l],c=e.uniformLocations[`offset${l}`],d=e.inShapesLocations[`${l}Shape`],f=e.inTexShapesLocations[`${l}TexShape`];if(d){let{uniformShape:h}=FT(e.program.packedInputs,p.shape,p.texData.texShape);switch(h.length){case 1:r.gl.uniform1iv(d,new Int32Array(h));break;case 2:r.gl.uniform2iv(d,new Int32Array(h));break;case 3:r.gl.uniform3iv(d,new Int32Array(h));break;case 4:r.gl.uniform4iv(d,new Int32Array(h));break;default:break}}if(f&&r.gl.uniform2i(f,p.texData.texShape[0],p.texData.texShape[1]),m!=null){if(p.isUniform){if(b.sizeFromShape(p.shape)<2)r.gl.uniform1f(m,p.uniformValues[0]);else{let h=p.uniformValues;h instanceof Float32Array||(h=new Float32Array(h)),r.gl.uniform1fv(m,h)}return}p.texData.slice!=null&&c!=null&&r.gl.uniform1i(c,p.texData.slice.flatOffset),r.setInputMatrixTexture(p.texData.texture.texture,m,u)}});let i=e.outShapeLocation;if(i)switch(n.shape.length){case 1:r.gl.uniform1iv(i,new Int32Array(n.shape));break;case 2:r.gl.uniform2iv(i,new Int32Array(n.shape));break;case 3:r.gl.uniform3iv(i,new Int32Array(n.shape));break;case 4:r.gl.uniform4iv(i,new Int32Array(n.shape));break;default:break}if(e.outShapeStridesLocation){let p=b.computeStrides(n.shape);switch(n.shape.length){case 2:r.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(p));break;case 3:r.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(p));break;case 4:r.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(p));break;default:break}}e.outTexShapeLocation&&r.gl.uniform2i(e.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),e.program.customUniforms&&o&&e.program.customUniforms.forEach((p,u)=>{let l=e.customUniformLocations[u],m=o[u];if(p.type==="float")r.gl.uniform1fv(l,m);else if(p.type==="vec2")r.gl.uniform2fv(l,m);else if(p.type==="vec3")r.gl.uniform3fv(l,m);else if(p.type==="vec4")r.gl.uniform4fv(l,m);else if(p.type==="int")r.gl.uniform1iv(l,m);else if(p.type==="ivec2")r.gl.uniform2iv(l,m);else if(p.type==="ivec3")r.gl.uniform3iv(l,m);else if(p.type==="ivec4")r.gl.uniform4iv(l,m);else throw Error(`uniform type ${p.type} is not supported yet.`)}),r.executeProgram()}function AB(r,e,t){let n="";e.concat(t).forEach(a=>{let i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!a.isUniform){let p=a.texData.texShape,{useSqueezeShape:u,uniformShape:l,keptDims:m}=FT(r.packedInputs,a.shape,p),c="",d="",f="";if(l.length===1&&r.packedInputs){let k=[Math.ceil(p[0]/2),Math.ceil(p[1]/2)];c=`${k[0]>1}_${k[1]>1}`}else if(l.length===2&&!r.packedInputs)d=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!r.packedInputs){let k=b.computeStrides(l);f=`${k[0]===p[1]}_${k[k.length-1]===p[1]}`}let h=a.shape.length,g=l.length===2&&b.arraysEqual(a.shape,p),y=b.sizeFromShape(a.shape)===1,T=C.getBroadcastDims(a.shape,t.shape),x=!r.packedInputs&&h===t.shape.length&&b.arraysEqual(p,t.texData.texShape),I=r.packedInputs||l.length>2?"":`${p[0]>1}_${p[1]>1}`;n+=`${h}_${x}_${u?m:""}_${l.length}_${y}_${T}_${g}_${c}_${d}_${f}_${I}_${i}`}else{let p=a.isUniform?"uniform":a.texData.texShape;n+=`${a.shape}_${p}_${i}`}});let o=r.userCode,s=r.constructor.name;return s+="_"+n+"_"+o+`${B().getNumber("WEBGL_VERSION")}`,s}function _t(r){return B().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var qA=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.outPackingScheme=0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Yt();this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Nl(["r","c","d"],e):qa(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}};var jA=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outPackingScheme=0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Yt();this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Nl(["r","c","d"],e):qa(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}};var XA=class{constructor(e){this.variableNames=["A"];this.outTexUsage=3;let t=Yt();this.outputShape=e,this.userCode=`
      ${MT}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}};var YA=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outTexUsage=3;let t=Yt();this.outputShape=e,this.userCode=`
      ${MT}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}};var QA=class{constructor(e,t=!1){this.variableNames=["A"];this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Yt();this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?Gc():zc(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${o}, 0., 0., 0.);
      }
    `}};var ZA=class{constructor(e,t=!1){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Yt();this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length);let o="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){let p=a*2+i;o+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${p}] = values[0];
            } else if (offset == 1) {
              result[${p}] = values[1];
            } else if (offset == 2) {
              result[${p}] = values[2];
            } else {
              result[${p}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Gc():zc(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${n.output} = ${s};
        }
    `}};var hw={};Xe(hw,{bindVertexProgramAttributeStreams:()=>iw,createBufferFromOutputTexture:()=>lw,createFloat16MatrixTexture:()=>nw,createFloat16PackedMatrixTexture:()=>aw,createFloat32MatrixTexture:()=>rw,createIndexBuffer:()=>tw,createPackedMatrixTexture:()=>sw,createUnsignedBytesMatrixTexture:()=>ow,createVertexBuffer:()=>ew,createVertexShader:()=>JA,downloadByteEncodedFloatMatrixFromOutputTexture:()=>cw,downloadFloat32MatrixFromBuffer:()=>mw,downloadMatrixFromPackedOutputTexture:()=>fw,downloadPackedMatrixFromBuffer:()=>dw,getInternalFormatForFloat16MatrixTexture:()=>LT,getInternalFormatForFloat16PackedMatrixTexture:()=>BT,getInternalFormatForFloat32MatrixTexture:()=>RT,getInternalFormatForPackedMatrixTexture:()=>$T,getInternalFormatForUnsignedBytesMatrixTexture:()=>_T,uploadDenseMatrixToTexture:()=>uw,uploadPixelDataToTexture:()=>pw});function JA(r){let e=Yt(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return wA(r,t)}function ew(r){let e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return MA(r,e)}function tw(r){let e=new Uint16Array([0,1,2,2,1,3]);return FA(r,e)}function rg(r,e,t,n,o,s){RA(e,t);let a=EA(r),i=r.TEXTURE_2D;return ve(r,()=>r.bindTexture(i,a)),ve(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),ve(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),ve(r,()=>r.texParameteri(i,r.TEXTURE_MIN_FILTER,r.NEAREST)),ve(r,()=>r.texParameteri(i,r.TEXTURE_MAG_FILTER,r.NEAREST)),B().getNumber("WEBGL_VERSION")===1?ve(r,()=>r.texImage2D(i,0,n,e,t,0,o,s,null)):ve(r,()=>r.texStorage2D(i,1,n,e,t)),ve(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:a,texShape:[t,e]}}function RT(r){return r.internalFormatFloat}function rw(r,e,t,n){let[o,s]=wl(e,t);return rg(r,o,s,RT(n),n.textureFormatFloat,r.FLOAT)}function LT(r){return r.internalFormatHalfFloat}function nw(r,e,t,n){let[o,s]=wl(e,t);return rg(r,o,s,LT(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function _T(r){return r.downloadTextureFormat}function ow(r,e,t,n){let[o,s]=wl(e,t);return rg(r,o,s,_T(n),r.RGBA,r.UNSIGNED_BYTE)}function $T(r){return r.internalFormatPackedFloat}function sw(r,e,t,n){let[o,s]=ki(e,t);return rg(r,o,s,$T(n),r.RGBA,r.FLOAT)}function BT(r){return r.internalFormatPackedHalfFloat}function aw(r,e,t,n){let[o,s]=ki(e,t);return rg(r,o,s,BT(n),r.RGBA,n.textureTypeHalfFloat)}function iw(r,e,t){return ve(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),NT(r,e,"clipSpacePos",t,3,20,0)&&NT(r,e,"uv",t,2,20,12)}function uw(r,e,t,n,o,s){ve(r,()=>r.bindTexture(r.TEXTURE_2D,e));let a,i,p;o instanceof Uint8Array?(a=new Uint8Array(t*n*4),i=r.UNSIGNED_BYTE,p=r.RGBA):(a=new Float32Array(t*n*4),i=r.FLOAT,p=s.internalFormatPackedFloat),a.set(o),B().getNumber("WEBGL_VERSION")===2?ve(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t,n,r.RGBA,i,a)):ve(r,()=>r.texImage2D(r.TEXTURE_2D,0,p,t,n,0,r.RGBA,i,a)),ve(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function pw(r,e,t){ve(r,()=>r.bindTexture(r.TEXTURE_2D,e)),t.data instanceof Uint8Array?B().getNumber("WEBGL_VERSION")===2?ve(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t.width,t.height,r.RGBA,r.UNSIGNED_BYTE,t.data)):ve(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t.width,t.height,0,r.RGBA,r.UNSIGNED_BYTE,t.data)):B().getNumber("WEBGL_VERSION")===2?ve(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,t)):ve(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t)),ve(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function lw(r,e,t,n){let o=r.createBuffer();ve(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,o));let i=4*4*e*t;return ve(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,i,r.STREAM_READ)),ve(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,0)),ve(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),o}function mw(r,e,t){let n=r,o=new Float32Array(t);return n.bindBuffer(n.PIXEL_PACK_BUFFER,e),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,o),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),o}function cw(r,e,t,n){let[o,s]=wl(e,t),a=4,i=new Uint8Array(cB(e*t,a));return ve(r,()=>r.readPixels(0,0,o,s,n.downloadTextureFormat,r.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function dw(r,e,t,n,o,s,a,i){let p=r,u=new Float32Array(dB(s,a));return p.bindBuffer(p.PIXEL_PACK_BUFFER,e),p.getBufferSubData(p.PIXEL_PACK_BUFFER,0,u),p.bindBuffer(p.PIXEL_PACK_BUFFER,null),u}function fw(r,e,t){let n=new Float32Array(e*t*4);return ve(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,n)),n}var qc=class{constructor(e){this.outputTexture=null;this.program=null;this.disposed=!1;this.vertexAttrsAreBound=!1;this.itemsToPoll=[];let t=B().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,kA(t,e)):this.gl=Qn(t);let n="WEBGL_color_buffer_float",o="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),B().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=$c(this.gl,s),Zn(this.gl,a))this.textureHalfFloatExtension=$c(this.gl,a);else if(B().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Zn(this.gl,o))this.colorBufferHalfFloatExtension=$c(this.gl,o);else if(B().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Zn(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Zn(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=ew(this.gl),this.indexBuffer=tw(this.gl),this.framebuffer=LA(this.gl),this.textureConfig=Zh(this.gl,this.textureHalfFloatExtension)}get debug(){return B().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;ve(e,()=>e.finish()),ve(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ve(e,()=>e.deleteFramebuffer(this.framebuffer)),ve(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ve(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ve(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),rw(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),nw(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),ow(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),pw(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,o){this.throwIfDisposed(),uw(this.gl,e,t,n,o,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),aw(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),sw(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(DT(this.gl,this.framebuffer),this.outputTexture=null),ve(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>cw(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,o,s,a){return dw(this.gl,e,t,n,o,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return mw(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let o=lw(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(B().getBool("WEBGL_FENCE_API_ENABLED")){let o=e,s=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=o.clientWaitSync(s,0,0);return a===o.ALREADY_SIGNALED||a===o.CONDITION_SATISFIED},t=s}else B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>fw(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=JA(t));let n=DA(t);return ve(t,()=>t.attachShader(n,this.vertexShader)),ve(t,()=>t.attachShader(n,e)),PA(t,n),this.debug&&Jh(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=iw(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&ve(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Jh(this.gl,this.program),ve(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?_A(this.gl,e,t):$A(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ve(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),BA(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[o,s]=ki(t,n);this.setOutputMatrixTextureDriver(e,o,s)}setOutputMatrixWriteRegion(e,t,n,o){this.setOutputMatrixWriteRegionDriver(n,e,o,t)}setOutputPackedMatrixWriteRegion(e,t,n,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Jh(this.gl,this.program),Bc(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),ve(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ve(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=$c(this.gl,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,s),s}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await b.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),o=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=Hoe(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&b.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),eg(this.gl,e,this.framebuffer),this.debug&&Bc(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(eg(this.gl,this.outputTexture,this.framebuffer),this.debug&&Bc(this.gl)):DT(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let o=this.gl;eg(o,e,this.framebuffer),this.debug&&Bc(o),this.outputTexture=e,ve(o,()=>o.viewport(0,0,t,n)),ve(o,()=>o.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,o){this.throwIfDisposed(),ve(this.gl,()=>this.gl.scissor(e,t,n,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function Hoe(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var{addImpl:NB,bincountImpl:OT,bincountReduceImpl:DB,ceilImpl:PB,concatImpl:MB,equalImpl:FB,expImpl:EB,expm1Impl:RB,floorImpl:LB,gatherNdImpl:_B,gatherV2Impl:$B,greaterImpl:BB,greaterEqualImpl:OB,lessImpl:zB,lessEqualImpl:GB,linSpaceImpl:UB,logImpl:WB,maxImpl:KB,maximumImpl:VB,minimumImpl:HB,multiplyImpl:qB,negImpl:jB,notEqualImpl:XB,prodImpl:YB,rangeImpl:QB,rsqrtImpl:ZB,sigmoidImpl:JB,simpleAbsImpl:zT,sliceImpl:eO,sparseFillEmptyRowsImpl:tO,sparseReshapeImpl:rO,sparseSegmentReductionImpl:GT,sqrtImpl:nO,stridedSliceImpl:oO,stringNGramsImpl:sO,stringSplitImpl:aO,stringToHashBucketFastImpl:iO,subImpl:uO,tileImpl:pO,topKImpl:lO,transposeImpl:Pl,uniqueImpl:mO}=Ec;function gw(r,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${r}.${t}`)}function or(r,e){return e===1?[r]:gw(r,e)}function cO(r,e){if(r===1)return"rc";let t="";for(let n=0;n<r;n++)t+=e[n],n<r-1&&(t+=",");return t}var bw=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;if(this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=_t(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=or("rc",this.rank),n=qe(this.rank),o=this.getOutOfBoundsCondition(t),s=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let o=0;o<=1;o++){let s=`${n===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)s=`${e[e.length-1-a]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${o};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}};var ng=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec3"}];this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length);let n="";for(let o=0;o<4;o++){let s="thisRC = rc;";o%2===1&&(s+="thisRC.z += 1;"),o>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${qoe(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Gc():zc(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function qoe(r,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?yB(["r","c","d"],"inputShape"):qa(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var yw=class{constructor(e){this.gpgpu=e;this.numUsedTextures=0;this.numFreeTextures=0;this._numBytesAllocated=0;this._numBytesFree=0;this.freeTextures={};this.logEnabled=!1;this.usedTextures={}}acquireTexture(e,t,n){let o=fO(t,n),s=hO(e,o,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let a=dO(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let p=this.freeTextures[s].shift();return this.usedTextures[s].push(p),p}let i;return o===3?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===4?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===1?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===0?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===2&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,o){if(this.freeTextures==null)return;let s=fO(n,o),a=hO(t,s,o);a in this.freeTextures||(this.freeTextures[a]=[]);let i=dO(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,o),p=B().get("WEBGL_DELETE_TEXTURE_THRESHOLD");p!==-1&&this._numBytesAllocated>p?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let u=this.usedTextures[a],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function joe(r,e){let t=r;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===r.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function dO(r,e,t,n,o){let s=Xoe(e,n),a;if(o){let[p,u]=ki(r[0],r[1]);a=p*u}else{let[p,u]=wl(r[0],r[1]);a=p*u}let i=joe(t,s);return a*i}function Xoe(r,e){switch(r){case 3:return $T(e);case 4:return BT(e);case 1:return RT(e);case 0:return LT(e);case 2:return _T(e);default:throw new Error(`Unknown physical texture type ${r}`)}}function Yoe(r){return B().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?3:1:r?4:0}function fO(r,e){if(r===1)return 3;if(r===0||r==null)return Yoe(e);if(r===3||r===2)return 2;throw new Error(`Unknown logical texture type ${r}`)}function hO(r,e,t){return`${r[0]}_${r[1]}_${e}_${t}`}var Sn=class{constructor(e,t){this.variableNames=["A"];this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},yr="if (isnan(x)) return x;",gO="return x;",Tw="return abs(x);";var bO="return (x >= 0.0) ? x : (exp(x) - 1.0);",yO=yr+`
  return (x < 0.0) ? 0.0 : x;
`,TO=yr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Ml="return x;",xO="return 1.0 / (1.0 + exp(-1.0 * x));";var CO="return x;",kO=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,SO=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,vO=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,AO="return 1.0 / (1.0 + exp(-1.0 * x));",js=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var xw=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length);let t=e.length,n=or("rc",t),o=qe(t),s=cO(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}};var Zoe=br.whereImpl,Joe=1e-7,ese=1e-4,UT={};function tse(r){return r in UT||(UT[r]={}),UT[r]}var rse=B().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),nse=600;function ose(){return B().global.screen==null?1024:B().global.screen.height*B().global.screen.width*window.devicePixelRatio*nse/1024/1024}var Iw=class extends is{constructor(e){super();this.pendingRead=new WeakMap;this.pendingDisposal=new WeakSet;this.dataRefCount=new WeakMap;this.numBytesInGPU=0;this.uploadWaitMs=0;this.downloadWaitMs=0;this.lastGlFlushTime=0;this.warnedAboutMemory=!1;this.pendingDeletes=0;this.disposed=!1;if(!B().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof qc)t=e;else{let n=Qn(B().getNumber("WEBGL_VERSION"),e);t=new qc(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=Qn(B().getNumber("WEBGL_VERSION"));t=new qc(n),this.binaryCache=tse(B().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new yw(this.gpgpu),this.numMBBeforeWarning=ose(),this.texData=new ei(this,Hn())}nextDataId(){return Iw.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((B().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||B().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()};return this.texData.set(o,{shape:t,dtype:n,values:e,usage:1,refCount:1}),o}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,o,s){if(B().getBool("DEBUG")&&this.checkNumericalProblems(t),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:o,values:t,usage:1,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:o,complexTensorInfos:s,slice:a,shape:i,isPacked:p}=t;if(a!=null){let c;p?c=new js(i,Ml):c=new Sn(i,Ml);let d=this.runWebGLProgram(c,[{dataId:e,shape:i,dtype:o}],o),f=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),f}if(n!=null)return this.convertAndCacheOnCPU(e);if(o==="string")return n;let u=this.activeTimers!=null,l;u&&(l=b.now());let m;if(o==="complex64"){let c=this.readSync(s.real.dataId),d=this.readSync(s.imag.dataId);m=C.mergeRealAndImagArrays(c,d)}else m=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=b.now()-l),this.convertAndCacheOnCPU(e,m)}async read(e){if(this.pendingRead.has(e)){let f=this.pendingRead.get(e);return new Promise(h=>f.push(h))}let t=this.texData.get(e),{values:n,shape:o,slice:s,dtype:a,complexTensorInfos:i,isPacked:p}=t;if(s!=null){let f;p?f=new js(o,Ml):f=new Sn(o,Ml);let h=this.runWebGLProgram(f,[{dataId:e,shape:o,dtype:a}],a),g=this.read(h.dataId);return this.disposeIntermediateTensorInfo(h),g}if(n!=null)return this.convertAndCacheOnCPU(e);if(B().getBool("DEBUG")&&!B().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&B().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,l;if(a!=="complex64"&&B().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let f=this.texData.get(l.dataId);u=this.gpgpu.createBufferFromTexture(f.texture.texture,...Qh(o))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let m;if(a==="complex64"){let f=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),h=f[0],g=f[1];m=C.mergeRealAndImagArrays(h,g)}else if(u==null)m=this.getValuesFromTexture(e);else{let f=b.sizeFromShape(o);m=this.gpgpu.downloadFloat32MatrixFromBuffer(u,f)}if(l!=null&&this.disposeIntermediateTensorInfo(l),u!=null){let f=this.gpgpu.gl;ve(f,()=>f.deleteBuffer(u))}let c=this.convertAndCacheOnCPU(e,m),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(f=>f(c)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Hn().removeDataId(e,this),this.pendingDeletes--),c}readToGPU(e,t={}){let n=this.texData.get(e),{values:o,shape:s,slice:a,dtype:i,isPacked:p,texture:u}=n;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let d;p?d=new js(s,Ml):d=new Sn(s,Ml);let f=this.runWebGLProgram(d,[{dataId:e,shape:s,dtype:i}],i),h=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),h}if(u==null)throw o!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let l=this.decode(e,t.customTexShape),m=Hn().makeTensorFromDataId(l.dataId,l.shape,l.dtype),c=this.texData.get(l.dataId);return{tensorRef:m,...c.texture}}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>b.decodeString(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!AA(n))throw B().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:o}=this.texData.get(e),s=b.sizeFromShape(t);if(B().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let c=this.decode(e),d=this.texData.get(c.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...Qh(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(c),f}let a=B().getBool("WEBGL_PACK")&&o===!0,i=a?tg(t):t,p=a?new YA(i):new XA(i),u=this.runWebGLProgram(p,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),m=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),m}timerAvailable(){return B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=b.flatten(this.activeTimers.map(p=>p.query)).filter(p=>p!=null),a=b.flatten(this.activeTimers.map(p=>p.name)).filter(p=>p!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let p=await Promise.all(s);i.kernelMs=b.sum(p),i.getExtraProfileInfo=()=>p.map((u,l)=>({name:a[l],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:b.now(),endMs:null}}endTimer(e){return B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=b.now(),e)}async getQueryTime(e){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:o,usage:s,isPacked:a,slice:i}=this.texData.get(e),p=i&&i.origDataId||e,u=this.dataRefCount.get(p);u>1?this.dataRefCount.set(p,u-1):(this.dataRefCount.delete(p),t!=null&&(this.numBytesInGPU-=this.computeBytes(o,n),this.textureManager.releaseTexture(t,o,s,a)));let l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=rse){return B().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&b.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){C.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return Zoe(e.shape,t)}packedUnaryOp(e,t,n){let o=new js(e.shape,t),s=this.compileAndRun(o,[e],n);return Hn().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let o=zT(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,o)}if(B().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Tw,e.dtype);let t=new Sn(e.shape,Tw),n=this.compileAndRun(t,[e]);return Hn().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(a=>b.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:o}=this.makeTensorInfo(e,t,n);return Hn().makeTensorFromDataId(o,e,t,this)}unpackTensor(e){let t=new xw(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new bw(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[Iu(e.shape),...Cu(e.shape)],o={dtype:e.dtype,shape:n,dataId:e.dataId},s=[Iu(t),...Cu(t)],a=new ng(s,n),i=!0,p=[n],u=this.runWebGLProgram(a,[o],e.dtype,p,i);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:o,shape:s,dtype:a}=n;if(t!=null){let c=b.sizeFromShape(s),d=t[0]*t[1]*4;b.assert(c<=d,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let i=tg(s),p;o?p=new jA(i):p=new qA(i);let u=!0,l=[t??Qh(i)],m=this.runWebGLProgram(p,[{shape:i,dtype:a,dataId:e}],a,l,u,t);return{dtype:a,shape:s,dataId:m.dataId}}runWebGLProgram(e,t,n,o,s=!1,a){let i=this.makeTensorInfo(e.outputShape,n),p=this.texData.get(i.dataId);if(e.packedOutput&&(p.isPacked=!0),e.outPackingScheme===0){let y=a??Qh(e.outputShape);p.texShape=y.map(T=>T*2)}if(e.outTexUsage!=null&&(p.usage=e.outTexUsage),b.sizeFromShape(i.shape)===0)return p.values=b.getTypedArrayFromDType(i.dtype,0),i;let u=[],l=t.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let T=this.texData.get(y.dataId);if(T.texture==null){if(!e.packedInputs&&b.sizeFromShape(y.shape)<=B().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:T.values};e.packedInputs&&(T.isPacked=!0,T.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!T.isPacked!=!!e.packedInputs)y=T.isPacked?this.unpackTensor(y):this.packTensor(y),u.push(y),T=this.texData.get(y.dataId);else if(T.isPacked&&!fp(T.shape,y.shape)){let x=y,I=y.shape;y.shape=T.shape,y=this.packedReshape(y,I),u.push(y),T=this.texData.get(y.dataId),x.shape=I}return{shape:y.shape,texData:T,isUniform:!1}});this.uploadToGPU(i.dataId);let m={shape:i.shape,texData:p,isUniform:!1},c=AB(e,l,m),d=this.getAndSaveBinary(c,()=>SB(this.gpgpu,e,l,m)),f=this.activeTimers!=null,h;f&&(h=this.startTimer()),B().get("ENGINE_COMPILE_ONLY")||vB(this.gpgpu,d,l,m,o),u.forEach(y=>this.disposeIntermediateTensorInfo(y)),f&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));let g=B().get("WEBGL_FLUSH_THRESHOLD");if(g>0){let y=b.now();y-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!B().getBool("WEBGL_LAZILY_UNPACK")&&p.isPacked&&s===!1){let y=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),y}return i}compileAndRun(e,t,n,o,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,o,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(B().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=z(()=>{if(!B().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=B().getBool("DEBUG");B().set("DEBUG",!1);let t=this.abs(ce(1e-8)).dataSync()[0];if(B().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Joe:ese}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:o,values:s,texture:a,usage:i,isPacked:p}=t;if(a!=null)return;let u=this.activeTimers!=null,l;u&&(l=b.now());let m=t.texShape;if(m==null&&(m=OA(n,p),t.texShape=m),s!=null){let c=tg(n),d,f=m[1],h=m[0],g=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(p||!g)&&([f,h]=ki(m[0],m[1])),p?d=new ZA(c,g):d=new QA(c,g);let y=g?[h,f]:m,T=this.makeTensorInfo(y,o),x=this.texData.get(T.dataId);g?x.usage=2:x.usage=1,x.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(T.dataId),f,h,s);let I=[[h,f]],k=!0,N=this.runWebGLProgram(d,[T],o,I,k),P=this.texData.get(N.dataId);t.texShape=P.texShape,t.isPacked=P.isPacked,t.usage=P.usage,B().get("ENGINE_COMPILE_ONLY")?this.disposeData(N.dataId):(t.texture=P.texture,t.values=null,this.texData.delete(N.dataId)),this.disposeIntermediateTensorInfo(T),u&&(this.uploadWaitMs+=b.now()-l)}else{let c=this.acquireTexture(m,i,o,p);t.texture=c}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:o}=n;return this.releaseGPUData(e),t!=null&&(n.values=sse(t,o)),n.values}acquireTexture(e,t,n,o){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,o)}computeBytes(e,t){return e[0]*e[1]*b.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise(o=>{try{this.checkCompletion_(t),o(!0)}catch(s){throw s}});e.push(n)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await rf(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(wT(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:o,nanLoc:s,inShapesLocations:a,inTexShapesLocations:i,outShapeLocation:p,outShapeStridesLocation:u,outTexShapeLocation:l}=HA(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=o,e.nanLoc=s,e.inShapesLocations=a,e.inTexShapesLocations=i,e.outShapeLocation=p,e.outShapeStridesLocation=u,e.outTexShapeLocation=l}}},og=Iw;og.nextDataId=0;function sse(r,e){if(e==="float32"||e==="complex64")return r;if(e==="int32"||e==="bool"){let t=e==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let n=0;n<t.length;++n)t[n]=Math.round(r[n]);return t}else throw new Error(`Unknown dtype ${e}`)}var ase="0.0.0";function wO(){B().set("WEBGL_FORCE_F16_TEXTURES",!0)}Qu.isBrowser()&&Ju("webgl",()=>new og,2);var Rjt={forceHalfFloat:wO};var WT=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var Xs=class{constructor(e,t,n){this.variableNames=["A","B"];this.outputShape=C.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=_t(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var hp=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;var ja=class{constructor(e,t,n,o=!1){this.variableNames=["A","B"];this.supportsBroadcasting=!0;this.packedInputs=!0;this.packedOutput=!0;this.outputShape=C.assertAndGetBroadcastShape(t,n);let s=this.outputShape.length;this.enableShapeUniforms=_t(s);let a="";if(o)if(s===0||b.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${qe(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let p=or("coords",s);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${p[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${p[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${p[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${p[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function sr(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var NO={kernelName:Un,backendName:"webgl",kernelFunc:sr};function _n(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),a=t.texData.get(s.dataId),i=sr({inputs:{x:n},backend:t}),p=sr({inputs:{x:o},backend:t});return a.complexTensorInfos={real:i,imag:p},s}var DO={kernelName:Eu,backendName:"webgl",kernelFunc:_n};var Cw="return (a < 0.) ? b * a : a;",kw=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function ise(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n,a=t.makeTensorInfo([],"float32",b.createScalarValue(s,"float32")),i=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ja(kw,o.shape,a.shape):new Xs(Cw,o.shape,a.shape),p=t.runWebGLProgram(i,[o,a],"float32");return t.disposeIntermediateTensorInfo(a),p}var PO={kernelName:ko,backendName:"webgl",kernelFunc:ise};var Sw="return (a < 0.) ? b * a : a;",vw=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function use(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ja(vw,n.shape,o.shape):new Xs(Sw,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],"float32")}var MO={kernelName:Lo,backendName:"webgl",kernelFunc:use};var Ys="if (isnan(x)) return x;",FO=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,EO=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Ae({opSnippet:r,packedOpSnippet:e,cpuKernelImpl:t,dtype:n}){return({inputs:o,backend:s})=>{let{x:a}=o,i=s,p=n||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){let m=i.texData.get(a.dataId),c=t(m.values,p);return i.makeTensorInfo(a.shape,p,c)}let u=B().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null,l;return u?l=new js(a.shape,e):l=new Sn(a.shape,r),i.runWebGLProgram(l,[a],p)}}function mt({opSnippet:r,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:n=!1,cpuKernelImpl:o,dtype:s}){return({inputs:a,backend:i})=>{let{a:p,b:u}=a,l=i;if(n&&p.dtype==="complex64"){let f=l.texData.get(p.dataId),h=l.texData.get(u.dataId),[g,y]=[[f.complexTensorInfos.real,h.complexTensorInfos.real],[f.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(x=>{let[I,k]=x,N={dataId:I.dataId,dtype:I.dtype,shape:p.shape},P={dataId:k.dataId,dtype:k.dtype,shape:u.shape},F=new Xs(r,p.shape,u.shape);return l.runWebGLProgram(F,[N,P],Ft(I.dtype,k.dtype))}),T=_n({inputs:{real:g,imag:y},backend:l});return l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(y),T}let m=s||Ft(p.dtype,u.dtype);if((p.dtype==="string"||u.dtype==="string"||l.shouldExecuteOnCPU([p,u]))&&o!=null){let f=l.texData.get(p.dataId).values,h=l.texData.get(u.dataId).values,g=p.dtype==="string"?C.fromUint8ToStringArray(f):f,y=p.dtype==="string"?C.fromUint8ToStringArray(h):h,[T,x]=o(p.shape,u.shape,g,y,m),I=l.makeTensorInfo(x,m),k=l.texData.get(I.dataId);return k.values=T,I}let c=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null,d;return c?d=new ja(e,p.shape,u.shape,t):d=new Xs(r,p.shape,u.shape),l.runWebGLProgram(d,[p,u],m)}}function gp(r,e=!1){if(r==="linear")return e?CO:gO;if(r==="relu")return e?SO:yO;if(r==="elu")return e?kO:bO;if(r==="relu6")return e?vO:TO;if(r==="prelu")return e?vw:Sw;if(r==="leakyrelu")return e?kw:Cw;if(r==="sigmoid")return e?AO:xO;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var sg=class{constructor(e,t,n,o=!1,s=!1,a=!1,i=null,p=!1,u=!1){this.variableNames=["matrixA","matrixB"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=n,this.enableShapeUniforms=_t(this.outputShape.length);let l=o?e[1]:e[2],m=Math.ceil(l/2),c=o?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",f=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",y="";i&&(p?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:u?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,y="result = activation(result);");let T=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),p&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let x="rc.x",I="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(I=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${m}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${m}; i++) {
          int batchA = ${x};
          int batchB = ${I};
          vec4 a = getMatrixA(batchA, ${c});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${h[0]});
          result += (${f[1]} * ${h[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${T}

        ${y}

        setOutput(result);
      }
    `}};var Aw={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},KT=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.outputShape=C.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var RO="return a * b;";function ag(r){let{inputs:e,backend:t}=r,{a:n,b:o}=e,s=C.upcastType(n.dtype,o.dtype);if(n.dtype==="complex64"){let i=t.texData.get(n.dataId),p=t.texData.get(o.dataId),u=new KT(Aw.REAL,n.shape,o.shape),l=new KT(Aw.IMAG,n.shape,o.shape),m=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:n.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:o.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:o.shape}],c=t.runWebGLProgram(u,m,"float32"),d=t.runWebGLProgram(l,m,"float32"),f=_n({inputs:{real:c,imag:d},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),f}if(t.shouldExecuteOnCPU([n,o])){let i=t.texData.get(n.dataId),p=t.texData.get(o.dataId),[u,l]=qB(n.shape,o.shape,i.values,p.values,s),m=t.makeTensorInfo(l,s),c=t.texData.get(m.dataId);return c.values=u,m}let a;return B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new ja(RO,n.shape,o.shape):a=new Xs(RO,n.shape,o.shape),t.runWebGLProgram(a,[n,o],s)}var LO={kernelName:Fo,backendName:"webgl",kernelFunc:ag};function _O(r,e,t){let n=[Iu(r.shape),...Cu(r.shape)],o={dtype:r.dtype,shape:n,dataId:r.dataId},s=[Iu(e),...Cu(e)],a=new ng(s,n),i=!0,p=[n],u=t.runWebGLProgram(a,[o],r.dtype,p,i);return{dataId:u.dataId,shape:e,dtype:u.dtype}}function ue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,a=t,i=b.sizeFromShape(o.shape),p=b.inferFromImplicitShape(s,i),u=b.sizeFromShape(p);b.assert(i===u,()=>`The new shape (${p}) has ${u} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let l=a.texData.get(o.dataId);return l.isPacked&&!fp(o.shape,p)&&!(l.texture!==null&&fp(l.shape,p))?_O(o,p,a):(a.incRef(o.dataId),{dataId:o.dataId,shape:p,dtype:o.dtype})}var $O={kernelName:gs,backendName:"webgl",kernelFunc:ue};var VT=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=e;this.outputShape=[o,a];let i=Math.floor(n/4)*4,p=n%4,u="sumValue += dot(values, ones);";if(t!=null){let m=1/t;u=`sumValue += dot(values * ${b.isInt(m)?m.toPrecision(2):m}, ones);`}let l="";s%n>0&&(l=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${i};
        if (${p===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}};var ww=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=e;this.outputShape=[o,a];let i="0.0",p="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",p="min"):t==="max"&&(i="-1.0 / 1e-20",p="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");let l=Math.floor(n/4)*4,m=n%4,c=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${p}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${p}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";t==="all"?(i="1.0",c=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):t==="any"&&(i="0.0",c=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${l};
        if (${m===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${c}
        }
        setOutput(${u});
      }
    `}};function lse(r){let e=[];for(;e.length===0||e[e.length-1].outSize!==1;){let t=e.length?e[e.length-1].outSize:r[1],n=C.computeOptimalWindowSize(t);e.push({inSize:t,windowSize:n,outSize:Math.ceil(t/n)})}return e}function Jn(r,e,t,n){let o=lse(r.shape),s=r;for(let a=0;a<o.length;a++){let{inSize:i,windowSize:p,outSize:u}=o[a],l,m;t==="mean"?l=a===0?new VT({windowSize:p,inSize:i,batchSize:r.shape[0],outSize:u},i):new VT({windowSize:p,inSize:i,batchSize:r.shape[0],outSize:u}):l=new ww({windowSize:p,inSize:i,batchSize:r.shape[0],outSize:u},t),m=s,s=n.runWebGLProgram(l,[s],e),m.dataId!==r.dataId&&n.disposeIntermediateTensorInfo(m)}return s}var Nw=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let o=qe(this.rank),s=mse(t);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function mse(r){let e=r.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(e);for(let o=0;o<r.length;o++)n[r[o]]=t[o];return n.join()}var Dw=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;let n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let o=qe(this.rank),s=gw("rc",this.rank),a=new Array(this.rank);for(let l=0;l<t.length;l++)a[t[l]]=s[l];let i=`vec2(${a.slice(-2).join()})`,p=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${p}) {
        result[1] = ${u};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${u};
        if(${p}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function bp(r,e,t){let n=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Dw(r.shape,e):new Nw(r.shape,e);return t.runWebGLProgram(n,[r],r.dtype)}function BO(r,e,t,n){let o=e,s=r.shape.length,a=b.parseAxisParam(o,r.shape),i=a,p=C.getAxesPermutation(i,s),u=p!=null,l=r;u&&(l=bp(r,p,n),i=C.getInnerMostAxes(i.length,s)),C.assertAxesAreInnerMostDims("sum",i,s);let[m,c]=C.computeOutAndReduceShapes(l.shape,i),d=m;t&&(d=C.expandShapeToKeepDim(m,a));let f=b.sizeFromShape(c),g=b.sizeFromShape(r.shape)/f,y=ue({inputs:{x:l},attrs:{shape:[g,f]},backend:n}),T=Zi(r.dtype),x=Jn(y,T,"sum",n),I=ue({inputs:{x},attrs:{shape:d},backend:n});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),u&&n.disposeIntermediateTensorInfo(l),I}function Fl(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return BO(o,s,a,t)}var OO={kernelName:Ko,backendName:"webgl",kernelFunc:Fl};function Kt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,a=t,i=o.shape.length,p=new Array(i);for(let l=0;l<p.length;l++)p[l]=o.shape[s[l]];let u;if(a.shouldExecuteOnCPU([o])){let m=a.texData.get(o.dataId).values,c=Pl(m,o.shape,o.dtype,s,p);u=a.makeTensorInfo(p,o.dtype);let d=a.texData.get(u.dataId);d.values=c}else u=bp(o,s,a);return u}var zO={kernelName:Xo,backendName:"webgl",kernelFunc:Kt};var Pw=1e3;function El({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:p=null}){let u=r.shape.length,l=e.shape.length,m=t?r.shape[u-2]:r.shape[u-1],c=n?e.shape[l-1]:e.shape[l-2],d=t?r.shape[u-1]:r.shape[u-2],f=n?e.shape[l-2]:e.shape[l-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),y=b.sizeFromShape(h),T=b.sizeFromShape(g),I=wr.assertAndGetBroadcastShape(r.shape.slice(0,-2),e.shape.slice(0,-2)).concat([d,f]);b.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let k=t?[y,m,d]:[y,d,m],N=n?[T,f,c]:[T,c,f],P=ue({inputs:{x:r},backend:o,attrs:{shape:k}}),F=ue({inputs:{x:e},backend:o,attrs:{shape:N}}),E=[P,F],$=Math.max(y,T),U=t?P.shape[1]:P.shape[2],W=s!=null,V=a!=null,H=p==="leakyrelu",q=p!=null?gp(p,!0):null,Y=W||V||H||q!=null,ee;if((d===1||f===1)&&U>Pw&&Y===!1){let re=P,se=F;t&&(re=Kt({inputs:{x:P},backend:o,attrs:{perm:[0,2,1]}}),E.push(re)),n&&(se=Kt({inputs:{x:F},backend:o,attrs:{perm:[0,2,1]}}),E.push(se));let ae=f!==1,le=f===1,ie=re;ae&&(ie=ue({inputs:{x:re},backend:o,attrs:{shape:[$,U,1]}}),E.push(ie));let be=f===1?2:1,he=se;le&&(he=ue({inputs:{x:se},backend:o,attrs:{shape:[$,1,U]}}),E.push(he));let Ie=ag({inputs:{a:ie,b:he},backend:o});ee=Fl({inputs:{x:Ie},backend:o,attrs:{axis:be,keepDims:!0}}),E.push(Ie)}else{let re=Ft(r.dtype,e.dtype),se=new sg(k,N,[$,d,f],t,n,W,q,V,H),ae=[P,F];if(s!=null&&ae.push(s),V&&ae.push(a),H){let le=o.makeTensorInfo([],"float32",b.createScalarValue(i,"float32"));ae.push(le),E.push(le)}ee=o.runWebGLProgram(se,ae,re)}let j=ue({inputs:{x:ee},backend:o,attrs:{shape:I}});E.push(ee);for(let re of E)o.disposeIntermediateTensorInfo(re);return j}function cse(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:p,transposeB:u,activation:l,leakyreluAlpha:m}=n;return El({a:o,b:s,transposeA:p,transposeB:u,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:m,activation:l})}var GO={kernelName:Ss,backendName:"webgl",kernelFunc:cse};var UO="return abs(x);";function dse(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=t.texData.get(n.dataId),a=zT(s.values);return t.makeTensorInfo(n.shape,n.dtype,a)}let o;return B().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new js(n.shape,UO):o=new Sn(n.shape,UO),t.runWebGLProgram(o,[n],n.dtype)}var WO={kernelName:us,backendName:"webgl",kernelFunc:dse};var fse=yr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,hse=Ae({opSnippet:fse}),KO={kernelName:Di,backendName:"webgl",kernelFunc:hse};var gse=yr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,bse=Ae({opSnippet:gse}),VO={kernelName:Pi,backendName:"webgl",kernelFunc:bse};var HO="return a + b;",yse=mt({opSnippet:HO,packedOpSnippet:HO,supportsComplex:!0,cpuKernelImpl:NB}),qO={kernelName:wn,backendName:"webgl",kernelFunc:yse};var Mw=class{constructor(e,t){this.outputShape=[];this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}};var Fw=class{constructor(e,t){this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}};function HT(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return sr({inputs:{x:n[0]},backend:t});if(n.length>B().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let p=Math.floor(n.length/2),u=HT({inputs:n.slice(0,p),backend:t}),l=HT({inputs:n.slice(p),backend:t});return HT({inputs:[u,l],backend:t})}let o=n.map(p=>p.dtype).reduce((p,u)=>Ft(p,u)),s=n.map(p=>p.shape),i=B().getBool("WEBGL_PACK")?new Fw(n[0].shape,s):new Mw(n[0].shape,s);return t.runWebGLProgram(i,n,o)}var jO={kernelName:oo,backendName:"webgl",kernelFunc:HT};function Tse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,p=b.parseAxisParam(s,o.shape),u=p,l=C.getAxesPermutation(u,i),m=o;l!=null&&(m=Kt({inputs:{x:o},backend:t,attrs:{perm:l}}),u=C.getInnerMostAxes(u.length,i)),C.assertAxesAreInnerMostDims("all",u,i);let[c,d]=C.computeOutAndReduceShapes(m.shape,u),f=b.sizeFromShape(d),h=ue({inputs:{x:m},backend:t,attrs:{shape:[-1,f]}}),g=Jn(h,h.dtype,"all",t),y;if(a){let T=C.expandShapeToKeepDim(c,p);y=ue({inputs:{x:g},backend:t,attrs:{shape:T}})}else y=ue({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(m),y}var XO={kernelName:Mi,backendName:"webgl",kernelFunc:Tse};function xse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,p=b.parseAxisParam(s,o.shape),u=p,l=C.getAxesPermutation(u,i),m=o;l!=null&&(m=Kt({inputs:{x:o},backend:t,attrs:{perm:l}}),u=C.getInnerMostAxes(u.length,i)),C.assertAxesAreInnerMostDims("any",u,i);let[c,d]=C.computeOutAndReduceShapes(m.shape,u),f=b.sizeFromShape(d),h=ue({inputs:{x:m},backend:t,attrs:{shape:[-1,f]}}),g=Jn(h,h.dtype,"any",t),y;if(a){let T=C.expandShapeToKeepDim(c,p);y=ue({inputs:{x:g},backend:t,attrs:{shape:T}})}else y=ue({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(m),y}var YO={kernelName:Fi,backendName:"webgl",kernelFunc:xse};var Ew=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:o,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];let i=t==="max"?">":"<",p=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${p};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var Rw=class{constructor(e,t,n,o){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;b.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),o||this.variableNames.push("bestIndicesA");let i=this.outputShape,p=i.length,u=qe(p),l=or("coords",p),m,c;if(a===1){c=p+1;let F=qe(c);m=`
        ${F} sourceLocR = ${F}(${l.join()}, 0);
        ++${l[p-1]};
        ${F} sourceLocG = ${F}(${l.join()}, 0);
        ++${l[p-2]};
        ${F} sourceLocA = ${F}(${l.join()}, 0);
        --${l[p-1]};
        ${F} sourceLocB = ${F}(${l.join()}, 0);
        --${l[p-2]};`}else c=p,m=`
        ${u} sourceLocR = coords;
        ++${l[p-1]};
        ${u} sourceLocG = coords;
        ++${l[p-2]};
        ${u} sourceLocA = coords;
        --${l[p-1]};
        ${u} sourceLocB = coords;
        --${l[p-2]};`;let d=["x","y","z","w","u","v"].slice(0,c),f="."+d[c-1],h=d.map(F=>"int "+F),g=or("sourceLocR",c-1).concat("inIdx.r"),y=or("sourceLocG",c-1).concat("inIdx.g"),T=or("sourceLocB",c-1).concat("inIdx.b"),x=or("sourceLocA",c-1).concat("inIdx.a"),I=n==="max"?"greaterThan":"lessThan",k=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${T.join()}),
                             getBestIndicesAChannel(${x.join()})));`,N=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${T.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,P=o?"":`
      float getBestIndicesAChannel(${h.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${h.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${P}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${l[p-1]} < ${i[p-1]-1};
        bool hasNextRow = ${l[p-2]} < ${i[p-2]-1};
        ${m}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${N};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${k}
          vec4 candidate = ${N};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${I}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function QO(r,e,t,n=null){let o=e.shape[0],s=e.shape[1];n!=null&&(o=n.shape[0],s=n.shape[1]);let a=C.computeOptimalWindowSize(s),i={windowSize:a,inSize:s,batchSize:o,outSize:Math.ceil(s/a)},p=new Ew(i,t,n==null),u=[e];n!=null&&u.push(n);let l=r.runWebGLProgram(p,u,"int32");if(l.shape[1]===1)return l;let m=QO(r,e,t,l);return r.disposeIntermediateTensorInfo(l),m}function ZO(r,e,t,n=null){let o=n!=null?n.shape:e.shape,s=o[o.length-1],a=C.computeOptimalWindowSize(s),i=new Rw(o,a,t,n==null),p=n==null?[e]:[e,n],u=r.runWebGLProgram(i,p,"int32");if(u.shape.length===e.shape.length){let l=ZO(r,e,t,u);return r.disposeIntermediateTensorInfo(u),l}return u}function qT(r,e,t,n){let o=[t];if(C.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.shape.length),!B().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){let s=[],a=r.texData.get(e.dataId),i=a!==null&&a.isPacked,p=e;i&&(p=r.unpackTensor(e),s.push(p));let[u,l]=C.computeOutAndReduceShapes(p.shape,o),m=b.sizeFromShape(l),c=ue({inputs:{x:p},backend:r,attrs:{shape:[-1,m]}});s.push(c);let d=QO(r,c,n);s.push(d);let f=ue({inputs:{x:d},backend:r,attrs:{shape:u}});return s.forEach(h=>r.disposeIntermediateTensorInfo(h)),f}return ZO(r,e,n)}function Ise(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=b.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=Kt({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(p),a=C.getInnerMostAxes(a.length,p.shape.length)),C.assertAxesAreInnerMostDims("argMax",[a[0]],p.shape.length);let l=qT(t,p,a[0],"max");return u.forEach(m=>t.disposeIntermediateTensorInfo(m)),l}var JO={kernelName:so,backendName:"webgl",kernelFunc:Ise};function Cse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=b.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=Kt({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(p),a=C.getInnerMostAxes(a.length,p.shape.length)),C.assertAxesAreInnerMostDims("argMin",[a[0]],p.shape.length);let l=qT(t,p,a[0],"min");return u.forEach(m=>t.disposeIntermediateTensorInfo(m)),l}var ez={kernelName:ni,backendName:"webgl",kernelFunc:Cse};var kse=yr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Sse=Ae({opSnippet:kse}),tz={kernelName:Ei,backendName:"webgl",kernelFunc:Sse};var vse=yr+"return log(x + sqrt(x * x + 1.0));",Ase=Ae({opSnippet:vse}),rz={kernelName:Ri,backendName:"webgl",kernelFunc:Ase};var wse=yr+`
  return atan(x);
`,Nse=Ae({opSnippet:wse}),nz={kernelName:Li,backendName:"webgl",kernelFunc:Nse};var Dse=FO+`
  return atan(a, b);
`,Pse=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+EO+`
  return result;
`,Mse=mt({opSnippet:Dse,packedOpSnippet:Pse}),oz={kernelName:$i,backendName:"webgl",kernelFunc:Mse};var Fse=yr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Ese=Ae({opSnippet:Fse}),sz={kernelName:_i,backendName:"webgl",kernelFunc:Ese};var Si=class{constructor(e,t,n,o=!1,s=!1){this.variableNames=["x"];if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideHeight,p=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,m=e.effectiveFilterHeight,c=e.effectiveFilterWidth,d=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;let h=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,y=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,T="0.0";if(h||(T="-1.0 / 1e-20"),n){let F=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${p});
        const ivec2 pads = ivec2(${d}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${m};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${c};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${F} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?s?g:y:`wR * ${c} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",I=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(I="avgValue / count");let k=Math.floor(a/4)*4,N=a%4,P=`
      if (${h}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${p});
      const ivec2 pads = ivec2(${d}, ${f});
      const float initializationValue = ${T};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${T});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${m};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${k}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${P}
          }

          int xC = xCCorner + ${k};
          if (${N===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${P}
          } else if (${N===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${P}
          } else if (${N===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${P}
          }
        }
        setOutput(${I});
      }
    `}},Rl=class{constructor(e,t,n,o=!1,s=!1){this.variableNames=["x"];if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideDepth,p=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,m=e.dilationHeight,c=e.dilationWidth,d=e.effectiveFilterDepth,f=e.effectiveFilterHeight,h=e.effectiveFilterWidth,g=e.padInfo.front,y=e.padInfo.top,T=e.padInfo.left;this.outputShape=e.outShape;let x=t==="avg",I="0.0";if(x||(I="-1.0 / 1e-20"),n){let $=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${p}, ${u});
        const ivec3 pads = ivec3(${g}, ${y}, ${T});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${m}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${h};
                  wC += ${c}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${$} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${h} +
                      wR * ${h} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let k="max",N=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(N="avgValue / count");let P=Math.floor(a/4)*4,F=a%4,E=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${k}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${p}, ${u});
      const ivec3 pads = ivec3(${g}, ${y}, ${T});
      const float initializationValue = ${I};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${I});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${m}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${P}; wC += 4) {
              int xC = xCCorner + wC * ${c};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                getValue(batch, xD, xR, xC + 3 * ${c}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${P};
            if (${F===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${F===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${F===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                initializationValue
              );

              ${E}
            }
          }
          setOutput(${N});
        }
      }
    `}};function Rse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;Ha(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1;b.assert(C.eitherStridesOrDilationsAreOne(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let l=C.computePool2DInfo(o.shape,s,a,u,i,p);if(l.filterWidth===1&&l.filterHeight===1&&b.arraysEqual(l.inShape,l.outShape))return sr({inputs:{x:o},backend:t});let m=new Si(l,"avg",!1);return t.runWebGLProgram(m,[o],"float32")}var az={kernelName:ao,backendName:"webgl",kernelFunc:Rse};function Lse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:p,dataFormat:u}=n,l=[1,1,1],m=C.computePool3DInfo(o.shape,s,a,l,i,p,u),c=new Rl(m,"avg",!1);return t.runWebGLProgram(c,[o],"float32")}var iz={kernelName:Fu,backendName:"webgl",kernelFunc:Lse};var Lw=class{constructor(e){this.variableNames=["dy"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,p=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=p-1-e.padInfo.top,m=u-1-e.padInfo.left,c=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${m});
      const float avgMultiplier = float(${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},_w=class{constructor(e){this.variableNames=["dy"];this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,p=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,m=e.effectiveFilterDepth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,f=m-1-e.padInfo.front,h=c-1-e.padInfo.top,g=d-1-e.padInfo.left,y=1/(t*n*o);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${h}, ${g});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${m};
            wD += ${p}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function _se(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:p,pad:u,dimRoundingMode:l}=n,m=[1,1,1],c=C.computePool3DInfo(a.shape,i,p,m,u,l),d=new _w(c);return t.runWebGLProgram(d,[o],a.dtype)}var uz={kernelName:um,backendName:"webgl",kernelFunc:_se};function $se(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s;Ha([o,s],"avgPoolGrad");let{filterSize:i,strides:p,pad:u}=n,l=C.computePool2DInfo(a.shape,i,p,1,u),m=new Lw(l);return t.runWebGLProgram(m,[o],a.dtype)}var pz={kernelName:im,backendName:"webgl",kernelFunc:$se};function Bse(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;return El({a:o,b:s,transposeA:a,transposeB:i,backend:t})}var lz={kernelName:io,backendName:"webgl",kernelFunc:Bse};var $w=class{constructor(e,t,n,o,s,a){this.outputShape=[];this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(e,t),C.assertAndGetBroadcastShape(e,n);let i="0.0";o!=null&&(C.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let p="1.0";s!=null&&(C.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),p="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${p};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var Bw=class{constructor(e,t,n,o,s,a){this.packedInputs=!0;this.packedOutput=!0;this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(e,t),C.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";o!=null&&(C.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let p="vec4(1.0)";s!=null&&(C.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),p="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${p};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var Ose=({inputs:r,backend:e,attrs:t})=>{let{x:n,mean:o,variance:s,offset:a,scale:i}=r;b.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:p}=t;p==null&&(p=.001);let u=[n,o,s],l=null;a!=null&&(l=a.shape,u.push(a));let m=null;i!=null&&(m=i.shape,u.push(i));let c=B().getBool("WEBGL_PACK_NORMALIZATION")?new Bw(n.shape,o.shape,s.shape,l,m,p):new $w(n.shape,o.shape,s.shape,l,m,p);return e.runWebGLProgram(c,u,u[0].dtype)},mz={kernelName:Io,backendName:"webgl",kernelFunc:Ose};var zw=class{constructor(e){this.variableNames=["source"];this.outputShape=e,this.rank=e.length;let t=qe(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=zse(this.rank),o,s=e.map((a,i)=>`sourceLoc.${Ow[i]} = start[${i}] + coords.${Ow[i]};`);o=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${n}));
      }
    `}},Ow=["x","y","z","w","u","v"];function zse(r){if(r===1)return"sourceLoc";if(r<=6)return Ow.slice(0,r).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var Gw=class{constructor(e){this.variableNames=["source"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=qe(this.rank),n=or("coords",this.rank),o=or("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,a=`getChannel(getSource(${o.join()}), ${s})`,i=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${a};
        --${o[this.rank-1]};
      }
    `,p=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${a};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((l,m)=>`start[${m}]`).join()});`:e.map((l,m)=>`${o[m]} = ${n[m]} + start[${m}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${i}
        ${p}
        setOutput(result);
      }
    `}};function Gse(r,e,t,n){let o=n.texData.get(r.dataId),s=n.makeTensorInfo(t,r.dtype),a=n.texData.get(s.dataId);Object.assign(a,o),a.refCount=1,a.shape=t,a.dtype=r.dtype;let i=Tt.computeFlatOffset(e,b.computeStrides(r.shape));o.slice&&(i+=o.slice.flatOffset),a.slice={flatOffset:i,origDataId:o.slice&&o.slice.origDataId||r.dataId};let p=n.dataRefCount.get(a.slice.origDataId)||1;return n.dataRefCount.set(a.slice.origDataId,p+1),s}function Xa(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n,[i,p]=Tt.parseSliceParams(o,s,a);if(Tt.assertParamsValid(o,i,p),b.sizeFromShape(p)===0)return t.makeTensorInfo(p,o.dtype,[]);if(t.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=t.texData.get(o.dataId),c=eO(m.values,i,p,o.shape,o.dtype);return t.makeTensorInfo(p,o.dtype,c)}let{isPacked:u}=t.texData.get(o.dataId),l=Tt.isSliceContinous(o.shape,i,p);if(u||!l){let m=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Gw(p):new zw(p),c=[i];return t.runWebGLProgram(m,[o],o.dtype,c)}return t.uploadToGPU(o.dataId),Gse(o,i,p,t)}var cz={kernelName:ys,backendName:"webgl",kernelFunc:Xa};var Use=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;b.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((T,x)=>T*x),p=C.getReshaped(o.shape,s,i),u=C.getPermuted(p.length,s.length),l=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(l,a,s.length),d=[],f=ue({inputs:{x:o},backend:t,attrs:{shape:p}}),h=Kt({inputs:{x:f},backend:t,attrs:{perm:u}}),g=ue({inputs:{x:h},backend:t,attrs:{shape:l}}),y=Xa({inputs:{x:g},backend:t,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(T=>t.disposeIntermediateTensorInfo(T)),y},dz={kernelName:ps,backendName:"webgl",kernelFunc:Use};function Wse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=t.readSync(o.dataId),p=t.readSync(s.dataId),u=OT(i,p,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,u)}var fz={kernelName:pm,backendName:"webgl",kernelFunc:Wse};function Kse(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.readSync(n.dataId),a=t.readSync(o.dataId),i=C.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var hz={kernelName:lm,backendName:"webgl",kernelFunc:Kse};var Vse="return float(a != b);",Uw=mt({opSnippet:Vse,cpuKernelImpl:XB,dtype:"bool"}),gz={kernelName:Ta,backendName:"webgl",kernelFunc:Uw};function ku(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return sr({inputs:{x:o.complexTensorInfos.real},backend:t})}var bz={kernelName:Gu,backendName:"webgl",kernelFunc:ku};var Hse="return float(int(x));";function yz(r,e){let t=new Sn(r.shape,Hse),n=e.runWebGLProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function Ww(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return sr({inputs:{x:o},backend:t});let a=bt(o.shape),i=Ww({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),p=_n({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(i),p}if(o.dtype==="complex64"){let a=ku({inputs:{input:o},backend:t}),i=Ww({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),i}if(!b.hasEncodingLoss(o.dtype,s)){let a=sr({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32")return yz(o,t);if(s==="bool"){let a=t.makeTensorInfo([],"bool",b.getTypedArrayFromDType("bool",1)),p=Uw({inputs:{a:o,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),p}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var Tz={kernelName:zn,backendName:"webgl",kernelFunc:Ww};var xz="return ceil(x);",qse=Ae({opSnippet:xz,packedOpSnippet:xz,cpuKernelImpl:PB}),Iz={kernelName:uo,backendName:"webgl",kernelFunc:qse};var Kw=class{constructor(e){this.variableNames=["A"];this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var Vw=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function jse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i;B().getBool("WEBGL_PACK_CLIP")?i=new Vw(o.shape):i=new Kw(o.shape);let p=[[s],[a]];return t.runWebGLProgram(i,[o],o.dtype,p)}var Cz={kernelName:Gn,backendName:"webgl",kernelFunc:jse};var Hw=class{constructor(e){this.variableNames=["real","imag"];this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function kz(r,e){return{dataId:e.dataId,dtype:e.dtype,shape:r.shape}}function Xse(r){let{inputs:e,backend:t}=r,{x:n}=e,o=t.texData.get(n.dataId),s=new Hw(n.shape),a=[kz(n,o.complexTensorInfos.real),kz(n,o.complexTensorInfos.imag)];return t.runWebGLProgram(s,a,a[0].dtype)}var Sz={kernelName:Ru,backendName:"webgl",kernelFunc:Xse};var qw=class{constructor(e){this.outputShape=[];this.outputShape=C.computeOutShape(e,1),this.variableNames=e.map((a,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let i=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}let o=t.length,s=t[t.length-1];n.push(`else setOutput(getT${o}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}};var jw=class{constructor(e,t){this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];this.outputShape=C.computeOutShape(e,t);let n=this.outputShape,o=n.length,s=qe(o),a=or("coords",o),i=["x","y","z","w","u","v"].slice(0,o);this.variableNames=e.map((h,g)=>`T${g}`);let p=new Array(e.length-1);p[0]=e[0][t];for(let h=1;h<p.length;h++)p[h]=p[h-1]+e[h][t];let u=i[t],l=i.slice(-2),m=i.join(),c=`if (${u} < ${p[0]}) {
        return getChannel(
            getT0(${m}), vec2(${l.join()}));
        }`;for(let h=1;h<p.length;h++){let g=p[h-1];c+=`
        if (${u} < ${p[h]}  && ${u} >= ${p[h-1]}) {
          return getChannel(
            getT${h}(${jT(i,u,g)}),
            vec2(${jT(l,u,g)}));
        }`}let d=p.length,f=p[p.length-1];c+=`
        return getChannel(
          getT${d}(${jT(i,u,f)}),
          vec2(${jT(l,u,f)}));`,this.userCode=`
      float getValue(${i.map(h=>"int "+h)}) {
        ${c}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[o-1]} = ${a[o-1]} + 1;
        if (${a[o-1]} < ${n[o-1]}) {
          result.g = getValue(${a});
        }

        ${a[o-2]} = ${a[o-2]} + 1;
        if (${a[o-2]} < ${n[o-2]}) {
          result.a = getValue(${a});
        }

        ${a[o-1]} = ${a[o-1]} - 1;
        if (${a[o-2]} < ${n[o-2]} &&
            ${a[o-1]} < ${n[o-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function jT(r,e,t){let n=r.indexOf(e);return r.map((s,a)=>a===n?`${s} - ${t}`:s).join()}function Ll(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return sr({inputs:{x:o.complexTensorInfos.imag},backend:t})}var vz={kernelName:Bu,backendName:"webgl",kernelFunc:Ll};function _l(r,e,t){let n=r[0].dtype;if(n==="complex64"){let l=r.map(h=>ku({inputs:{input:h},backend:t})),m=r.map(h=>Ll({inputs:{input:h},backend:t})),c=_l(l,e,t),d=_l(m,e,t),f=_n({inputs:{real:c,imag:d},backend:t});return l.forEach(h=>t.disposeIntermediateTensorInfo(h)),m.forEach(h=>t.disposeIntermediateTensorInfo(h)),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),f}let o=t.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let l=r.map(y=>{let T=b.sizeFromShape(y.shape.slice(e));return ue({inputs:{x:y},backend:t,attrs:{shape:[-1,T]}})}),m=l.map(y=>({vals:t.readSync(y.dataId),shape:y.shape})),c=C.computeOutShape(l.map(y=>y.shape),1),d=l[0].shape[0]===1,f=MB(m,c,n,d),h=C.computeOutShape(r.map(y=>y.shape),e),g=t.makeTensorInfo(h,n,f);return l.forEach(y=>t.disposeIntermediateTensorInfo(y)),g}if(r.length>B().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(r.length/2),m=_l(r.slice(0,l),e,t),c=_l(r.slice(l),e,t),d=_l([m,c],e,t);return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),d}if(B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1){let l=new jw(r.map(m=>m.shape),e);return t.runWebGLProgram(l,r,n)}let{tensors2D:s,outShape:a}=Yse(r,e,t),i=new qw(s.map(l=>l.shape)),p=t.runWebGLProgram(i,s,n);s.forEach(l=>t.disposeIntermediateTensorInfo(l));let u=ue({inputs:{x:p},attrs:{shape:a},backend:t});return t.disposeIntermediateTensorInfo(p),u}function Yse(r,e,t){let n=C.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>ue({inputs:{x:s},attrs:{shape:[-1,b.sizeFromShape(s.shape.slice(e))]},backend:t})),outShape:n}}function Xw(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],a=C.computeOutShape(e.map(u=>u.shape),s);if(b.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(u=>b.sizeFromShape(u.shape)>0);if(i.length===1)return sr({inputs:{x:i[0]},backend:t});let p=i.map(u=>u.shape);return C.assertParamsConsistent(p,s),_l(i,s,t)}var Az={kernelName:ls,backendName:"webgl",kernelFunc:Xw};var ig=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.outputShape=e.outShape;let a=e.padInfo.top,i=e.padInfo.left,p=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,m=e.dilationWidth,c=e.filterHeight,d=e.filterWidth,f=Math.floor(e.inChannels/4)*4,h=e.inChannels%4,g=e.dataFormat==="channelsLast",y=g?1:2,T=g?2:3,x=g?3:1,I="",k="";n&&(o?I=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?I=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:I=`
          float activation(float x) {
            ${n}
          }
        `,k="result = activation(result);");let N=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${I}

      const ivec2 strides = ivec2(${p}, ${u});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${T}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${m};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${h===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${h===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${h===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${N}
        ${k}
        setOutput(result);
      }
    `}},Yw=class{constructor(e){this.variableNames=["x","W"];this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,o=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,p=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,m=e.filterDepth,c=e.filterHeight,d=e.filterWidth,f=Math.floor(e.inChannels/4)*4,h=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${m}; wF++) {
          int xF = xFCorner + wF * ${p};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${h===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${h===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${h===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var Qw=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}];this.outputShape=e,this.enableShapeUniforms=_t(this.outputShape.length);let{dataFormat:n}=t,o=Yt(),s=n==="channelsLast",a=s?0:1,i=s?1:2,p=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,u="";for(let l=0;l<=1;l++)for(let m=0;m<=1;m++)u+=`
          blockIndex = rc.y + ${m};
          pos = rc.x + ${l};

          ${p}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+m}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+m}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${o.output} = result;
      }
    `}};function XT({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let p=r.shape,u=n.texData.get(r.dataId),l=t.inChannels,m=p[0]*p[1]*p[2],c=t.outChannels,d=t.dataFormat==="channelsLast",f=!1,h=!1,g,y=[];if(!((m===1||c===1)&&l>Pw)&&u.isPacked&&d&&u.texture!=null&&p[2]%2!==0&&b.arraysEqual(u.shape.slice(-3),p.slice(-3))){let I=p[0]*p[1]*(p[2]+1),k={dataId:r.dataId,shape:[1,I,t.inChannels],dtype:r.dtype},N=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,b.assert(fp(u.shape,k.shape),()=>`packed reshape ${u.shape} to ${k.shape} isn't free`);let P=ue({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});y.push(P);let F=El({a:k,b:P,backend:n,transposeA:f,transposeB:h,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),E=n.texData.get(F.dataId);b.assert(E.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=N,E.shape=t.outShape,g=sr({inputs:{x:F},backend:n}),g.shape=t.outShape,y.push(F)}else{let I=d?p[0]*p[1]*p[2]:p[0]*p[2]*p[3],k=ue({inputs:{x:r},backend:n,attrs:{shape:[1,I,t.inChannels]}}),N=ue({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),P=El({a:k,b:N,transposeA:f,transposeB:h,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});g=ue({inputs:{x:P},backend:n,attrs:{shape:t.outShape}}),y.push(k),y.push(N),y.push(P)}for(let I of y)n.disposeIntermediateTensorInfo(I);return g}function YT({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let{filterWidth:p,filterHeight:u,inChannels:l,outWidth:m,outHeight:c,dataFormat:d}=t,f=d==="channelsLast",h=p*u*l,g=c*m,y=[h,g],T=!0,x=!1,I=[],k=ue({inputs:{x:r},backend:n,attrs:{shape:r.shape.slice(1)}}),N=ue({inputs:{x:e},backend:n,attrs:{shape:[1,h,b.sizeFromShape(e.shape)/h]}});I.push(k),I.push(N);let P=new Qw(y,t),F=[k.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],E=n.runWebGLProgram(P,[k],"float32",F),$=ue({inputs:{x:E},backend:n,attrs:{shape:[1,y[0],y[1]]}});I.push(E),I.push($);let U=o!=null,W=s!=null,V=i==="leakyrelu",H=i?gp(i,!0):null,q=new sg($.shape,N.shape,[1,g,t.outChannels],T,x,U,H,W,V),Y=[$,N];if(o&&Y.push(o),W&&Y.push(s),V){let se=n.makeTensorInfo([],"float32",b.createScalarValue(a,"float32"));Y.push(se),I.push(se)}let ee=n.runWebGLProgram(q,Y,"float32"),j=f?[1,c,m,t.outChannels]:[1,t.outChannels,c,m],re=ue({inputs:{x:ee},backend:n,attrs:{shape:j}});I.push(ee);for(let se of I)n.disposeIntermediateTensorInfo(se);return re}function Qse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:p,dilations:u,dimRoundingMode:l}=n,m=C.convertConv2DDataFormat(p),c=C.computeConv2DInfo(o.shape,s.shape,a,u,i,l,!1,m),d;if(c.filterHeight===1&&c.filterWidth===1&&c.dilationHeight===1&&c.dilationWidth===1&&c.strideHeight===1&&c.strideWidth===1&&(c.padInfo.type==="SAME"||c.padInfo.type==="VALID"))d=XT({x:o,filter:s,convInfo:c,backend:t});else if(B().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)d=YT({x:o,filter:s,convInfo:c,backend:t});else{let h=new ig(c);d=t.runWebGLProgram(h,[o,s],"float32")}let f=ue({inputs:{x:d},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(d),f}var wz={kernelName:po,backendName:"webgl",kernelFunc:Qse};var Zw=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Jw=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,p=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,m=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${m}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},eN=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${s};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},tN=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,p=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=o-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${u}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Zse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,dataFormat:p,dimRoundingMode:u,filterShape:l}=n,m=C.convertConv2DDataFormat(p),c=C.computeConv2DInfo(o.shape,l,a,1,i,u,!1,m),d=new Zw(c);return t.runWebGLProgram(d,[o,s],"float32")}var Nz={kernelName:mm,backendName:"webgl",kernelFunc:Zse};function Jse(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:p,dataFormat:u,dimRoundingMode:l}=n,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(a,s.shape,i,1,p,l,!1,m),d=new Jw(c);return t.runWebGLProgram(d,[o,s],"float32")}var Dz={kernelName:lo,backendName:"webgl",kernelFunc:Jse};function eae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:p}=n,u=C.computeConv3DInfo(o.shape,s.shape,a,p,i),l=new Yw(u);return t.runWebGLProgram(l,[o,s],"float32")}var Pz={kernelName:Lu,backendName:"webgl",kernelFunc:eae};function tae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:p}=n,u=C.computeConv3DInfo(o.shape,p,a,1,i),l=new eN(u);return t.runWebGLProgram(l,[o,s],"float32")}var Mz={kernelName:cm,backendName:"webgl",kernelFunc:tae};function rae(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:a,strides:i,inputShape:p}=n,u=C.computeConv3DInfo(p,s.shape,i,1,a),l=new tN(u);return t.runWebGLProgram(l,[o,s],"float32")}var Fz={kernelName:dm,backendName:"webgl",kernelFunc:rae};var nae=Ys+`
  return cos(x);
`,oae=Ae({opSnippet:nae}),Ez={kernelName:mo,backendName:"webgl",kernelFunc:oae};var sae=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,aae=Ae({opSnippet:sae}),Rz={kernelName:co,backendName:"webgl",kernelFunc:aae};var rN=class{constructor(e,t,n,o,s){this.variableNames=["Image","Boxes","BoxInd"];this.outputShape=[];let[a,i,p,u]=e,[l]=t,[m,c]=n;this.outputShape=[l,m,c,u];let d=o==="bilinear"?1:0,[f,h]=[`${i-1}.0`,`${p-1}.0`],[g,y,T]=m>1?[`${(i-1)/(m-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[x,I,k]=c>1?[`${(p-1)/(c-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${I};

        float in_y = ${T};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${k};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var iae=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:p,extrapolationValue:u}=n,l=new rN(o.shape,s.shape,i,p,u);return t.runWebGLProgram(l,[o,s,a],"float32")},Lz={kernelName:pa,backendName:"webgl",kernelFunc:iae};var QT=class{constructor(e,t,n,o){this.variableNames=["x"];this.customUniforms=[{name:"index",type:"float"}];this.op=e,this.outputShape=t;let s=t.length,a=this.op==="*"?"1.0":"0.0",i=n?a:`getX(${_z(s,"coords",this.op)})`,p=t[t.length-1],u="",l="";n?(u=o?`end != ${p-1}`:"end != 0",l=o?"end + 1":"end - 1"):(u=o?`end + pow2 < ${p}`:"end >= pow2",l=o?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${qe(s)} coords = getOutputCoords();
        int end = ${$z(s,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${l};
          ${$z(s,"coords",this.op)} = idx;
          val ${this.op}= getX(${_z(s,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function _z(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.x, ${e}.y`;if(r===3)return`${e}.x, ${e}.y, ${e}.z`;if(r===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function $z(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.y`;if(r===3)return`${e}.z`;if(r===4)return`${e}.w`;throw Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function ZT(r,e,t,n,o,s){let a=e.shape.length,i=C.getAxesPermutation([n],a),p=e;i!=null&&(p=Kt({inputs:{x:e},backend:t,attrs:{perm:i}}));let u=C.getInnerMostAxes(1,a)[0];if(u!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${n}`);let l=p.shape[u],m=sr({inputs:{x:p},backend:t});for(let c=0;c<=Math.ceil(Math.log2(l))-1;c++){let d=new QT(r,p.shape,!1,s),f=[[c]],h=m;m=t.runWebGLProgram(d,[m],m.dtype,f),t.disposeIntermediateTensorInfo(h)}if(o){let c=new QT(r,p.shape,o,s),d=m;m=t.runWebGLProgram(c,[m],m.dtype),t.disposeIntermediateTensorInfo(d)}if(i!=null){let c=C.getUndoAxesPermutation(i),d=Kt({inputs:{x:m},backend:t,attrs:{perm:c}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(p),d}return m}function pae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;return ZT("*",o,t,s,a,i)}var Bz={kernelName:ua,backendName:"webgl",kernelFunc:pae};function lae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;return ZT("+",o,t,s,a,i)}var Oz={kernelName:fo,backendName:"webgl",kernelFunc:lae};function mae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let p=t.readSync(o.dataId),u=t.readSync(s.dataId),l=OT(p,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,l)}else if(o.shape.length===2){let p=t.bufferSync(o),u=t.bufferSync(s),l=DB(p,u,a,i);return t.makeTensorInfo(l.shape,s.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var zz={kernelName:fm,backendName:"webgl",kernelFunc:mae};var nN=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=[];this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function cae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n,i=o.shape[0],p=a==="NHWC"?o.shape[1]:o.shape[2],u=a==="NHWC"?o.shape[2]:o.shape[3],l=a==="NHWC"?o.shape[3]:o.shape[1],m=p*s,c=u*s,d=l/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=new nN(f,s,a);return t.runWebGLProgram(h,[o],o.dtype)}var Gz={kernelName:la,backendName:"webgl",kernelFunc:cae};var ug=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=e.outShape,this.enableShapeUniforms=_t(this.outputShape.length);let a=e.filterHeight,i=e.filterWidth,p=e.outChannels/e.inChannels,u="",l="";n&&(o?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:u=`
          float activation(float x) {
            ${n}
          }
        `,l="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${p};
        int q = d2 - d1 * ${p};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${m}
        ${l}
        setOutput(result);
      }
    `}};var pg=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=e.outShape,this.enableShapeUniforms=_t(this.outputShape.length);let a=e.outChannels/e.inChannels,i=e.padInfo.left,p=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,m=e.filterWidth,c=m,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<m;y++)d+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;d+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let y=0;y<m;y++)d+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(c+1)/2;y++){let T=y*2;if(d+=`
          xC = xCCorner + ${T*u};
          `,p===1){if(T<m&&(i%2===1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }
              `,u===1&&T>0?d+=`
                xC${T} = vec4(xTexelC${T-2}.zw, xTexelC${T}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${T} = vec4(previous.zw, xTexelC${T}.xy);
                  } else {
                    xC${T} = vec4(0.0, 0.0, xTexelC${T}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                xC${T} = xTexelC${T};
                `,T+1<m)){let x=i%2===0?b.nearestLargerEven(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                    xTexelC${T+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${T+1}.zw = vec2(0.0);
                    }
                    xTexelC${T+1}Ready = 1;
                  }
                  `,u>1&&(d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                      xTexelC${T} = getX(batch, xR, xCOffset, d1);
                      xTexelC${T}Ready = 1;
                    }
                    `),d+=`
                  xC${T+1} = vec4(xTexelC${T}.zw, xTexelC${T+1}.xy);
                  `):x===1?d+=`
                    xC${T+1} = xTexelC${T};
                    `:d+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                      xTexelC${T+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${T+1}.zw = vec2(0.0);
                      }
                      xTexelC${T+1}Ready = 1;
                    }

                    xC${T+1} = xTexelC${T+1};
                    `}}else T<m&&(i%2===1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${T+1}Ready == 0) {
                  xTexelC${T+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${T+1}.zw = vec2(0.0);
                  }
                  xTexelC${T+1}Ready = 1;
                }

                xC${T} = vec4(xTexelC${T}.zw, xTexelC${T+1}.zw);
              `,T+1<m&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${T+1} = vec4(xTexelC${T+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                  xTexelC${T+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T+1}.zw = vec2(0.);
                  }
                  xTexelC${T+1}Ready = 1;
                }

                xC${T} = vec4(
                  xTexelC${T}.xy, xTexelC${T+1}.xy);
              `,T+1<m&&(d+=`
                  xC${T+1} = vec4(xTexelC${T}.zw, xTexelC${T+1}.zw);
                `)));T<m&&(d+=`
            wTexel = getW(r, ${T}, d1, q);
            dotProd += xC${T} * vec4(wTexel.xz, wTexel.xz);
          `,T+1<m&&(d+=`
              wTexel = getW(r, ${T+1}, d1, q);
              dotProd += xC${T+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let f="",h="";n&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:f=`vec4 activation(vec4 x) {
          ${n}
        }`,h="result = activation(result);");let g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${h}
        setOutput(result);
      }
    `}};function dae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:p,dimRoundingMode:u}=n,l=p;l==null&&(l=[1,1]),b.assert(C.eitherStridesOrDilationsAreOne(a,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let m=C.computeConv2DInfo(o.shape,s.shape,a,l,i,u,!0),c;B().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1?c=new pg(m):c=new ug(m);let d=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];return t.runWebGLProgram(c,[o,s],"float32",d)}var Uz={kernelName:ho,backendName:"webgl",kernelFunc:dae};var oN=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},sN=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,p=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${p}; dm++) {
              int d2 = d1 * ${p} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function fae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,dilations:i,pad:p,dimRoundingMode:u,filterShape:l}=n,m=C.computeConv2DInfo(o.shape,l,a,i,p,u,!0),c=new oN(m);return t.runWebGLProgram(c,[o,s],"float32")}var Wz={kernelName:hm,backendName:"webgl",kernelFunc:fae};function hae(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,dilations:i,pad:p,dimRoundingMode:u,inputShape:l}=n,m=C.computeConv2DInfo(l,s.shape,a,i,p,u,!0),c=new sN(m);return t.runWebGLProgram(c,[o,s],"float32")}var Kz={kernelName:gm,backendName:"webgl",kernelFunc:hae};var aN=class{constructor(e){this.variableNames=["X"];this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function gae(r){let{inputs:e,backend:t}=r,{x:n}=e,o=[...n.shape,...n.shape],s=b.sizeFromShape(n.shape),a=ue({inputs:{x:n},backend:t,attrs:{shape:[s]}}),i=new aN(s),p=t.runWebGLProgram(i,[a],a.dtype),u=ue({inputs:{x:p},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(p),u}var Vz={kernelName:bm,backendName:"webgl",kernelFunc:gae};var iN=class{constructor(e){this.variableNames=["x","W"];this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:o,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:p,dilationHeight:u,dilationWidth:l}=e,{top:m,left:c}=o;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${a});
      const ivec2 pads = ivec2(${m}, ${c});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${p}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function bae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:p}=n,u=C.computeDilation2DInfo(o.shape,s.shape,a,i,"NHWC",p),l,m=new iN(u);l=t.runWebGLProgram(m,[o,s],"float32");let c=ue({inputs:{x:l},backend:t,attrs:{shape:u.outShape}});return t.disposeIntermediateTensorInfo(l),c}var Hz={kernelName:_u,backendName:"webgl",kernelFunc:bae};function yae(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:a,summedDims:i,idDims:p}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(a.length,p,s);let{path:u,steps:l}=C.getEinsumComputePath(i,p),m=l.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of l[h]){let{permutationIndices:y,expandDims:T}=C.getEinsumPermutation(d,p[g]),x;C.isIdentityPermutation(y)?x=s[g]:(x=Kt({inputs:{x:s[g]},backend:t,attrs:{perm:y}}),f.push(x));let I=x.shape.slice();for(let k=0;k<T.length;++k)I.splice(T[k],0,1);b.arraysEqual(x.shape,I)||(x=ue({inputs:{x},backend:t,attrs:{shape:I}}),f.push(x)),c===null?c=x:(c=ag({inputs:{a:x,b:c},backend:t}),f.push(c))}h<m-1&&(u[h]>=0&&(c=Fl({inputs:{x:c},backend:t,attrs:{axis:u[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&t.disposeIntermediateTensorInfo(h);return c}var qz={kernelName:$u,backendName:"webgl",kernelFunc:yae};var Tae="return (x >= 0.0) ? x : (exp(x) - 1.0);",xae=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Iae=Ae({opSnippet:Tae,packedOpSnippet:xae}),jz={kernelName:bo,backendName:"webgl",kernelFunc:Iae};var Cae="return (b >= 1.0) ? a : a * (b + 1.0);",kae=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Sae=r=>{let{inputs:e,backend:t}=r,{dy:n,y:o}=e,s=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ja(kae,n.shape,o.shape):new Xs(Cae,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],n.dtype)},Xz={kernelName:ym,backendName:"webgl",kernelFunc:Sae};var vae=`
  return vec4(equal(a, b));
`,Aae="return float(a == b);",wae=mt({opSnippet:Aae,packedOpSnippet:vae,dtype:"bool",cpuKernelImpl:FB}),Yz={kernelName:ma,backendName:"webgl",kernelFunc:wae};var Nae=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${C.ERF_P};
  float a1 = ${C.ERF_A1};
  float a2 = ${C.ERF_A2};
  float a3 = ${C.ERF_A3};
  float a4 = ${C.ERF_A4};
  float a5 = ${C.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Dae=Ae({opSnippet:Nae}),Qz={kernelName:Bi,backendName:"webgl",kernelFunc:Dae};var Pae=Ys+`
  return exp(x);
`,Mae=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,uN=Ae({opSnippet:Pae,packedOpSnippet:Mae,cpuKernelImpl:EB,dtype:"float32"}),Zz={kernelName:yo,backendName:"webgl",kernelFunc:uN};function JT(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,a=s.shape.length,i=s.shape.slice(),p=o;return o<0&&(b.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),p=a+o+1),i.splice(p,0,1),ue({inputs:{x:s},backend:n,attrs:{shape:i}})}var Jz={kernelName:ms,backendName:"webgl",kernelFunc:JT};var e3="return exp(x) - 1.0;",Fae=Ae({opSnippet:e3,packedOpSnippet:e3,cpuKernelImpl:RB}),t3={kernelName:ca,backendName:"webgl",kernelFunc:Fae};var ex=class{constructor(e,t,n){this.variableNames=["real","imag"];let o=t[1];this.outputShape=t;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${o}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function tx(r,e,t){let n=t.texData.get(r.dataId),o=b.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],a=o/s,i=ue({inputs:{x:r},backend:t,attrs:{shape:[a,s]}}),p=i.shape,u=new ex("real",p,e),l=new ex("imag",p,e),m=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:p},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:p}],c=t.runWebGLProgram(u,m,"float32"),d=t.runWebGLProgram(l,m,"float32"),f=_n({inputs:{real:c,imag:d},backend:t});t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d);let h=ue({inputs:{x:f},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(f),h}function Eae(r){let{inputs:e,backend:t}=r,{input:n}=e;return tx(n,!1,t)}var r3={kernelName:Tm,backendName:"webgl",kernelFunc:Eae};var pN=class{constructor(e,t){this.outputShape=[];this.customUniforms=[{name:"value",type:"float"}];this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Su(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||b.inferDtype(o),s==="string"){let a=b.getArrayFromDType(s,b.sizeFromShape(n));return a.fill(o),e.makeTensorInfo(n,s,a)}else{let a=new pN(n,o),i=[[o]];return e.runWebGLProgram(a,[],s,i)}}var n3={kernelName:oi,backendName:"webgl",kernelFunc:Su};var lN=class{constructor(e){this.variableNames=["Image"];this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var o3={kernelName:da,backendName:"webgl",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new lN(t.shape);return n.runWebGLProgram(o,[t],t.dtype)}};var s3="return floor(x);",Rae=Ae({opSnippet:s3,packedOpSnippet:s3,cpuKernelImpl:LB}),a3={kernelName:To,backendName:"webgl",kernelFunc:Rae};var Lae=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,_ae=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,$ae=mt({opSnippet:Lae,packedOpSnippet:_ae,dtype:"int32"}),i3={kernelName:xo,backendName:"webgl",kernelFunc:$ae};var mN=class{constructor(e){this.variableNames=["A"];let t=Yt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var cN=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;let t=Yt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}};var u3={kernelName:Pp,backendName:"webgl",kernelFunc:Bae},jc;function Bae(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n,a=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,[p,u]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],l=[u,p],m=[u,p,s];(i||a)&&(jc==null&&(jc=document.createElement("canvas").getContext("2d")),jc.canvas.width=p,jc.canvas.height=u,jc.drawImage(o,0,0,p,u),o=jc.canvas);let c=t.makeTensorInfo(l,"int32");t.texData.get(c.dataId).usage=2,t.gpgpu.uploadPixelDataToTexture(t.getTexture(c.dataId),o);let d=B().getBool("WEBGL_PACK")?new cN(m):new mN(m),f=t.runWebGLProgram(d,[c],"int32");return t.disposeData(c.dataId),f}function Oae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=C.convertConv2DDataFormat(l),g=C.computeConv2DInfo(o.shape,s.shape,p,m,u,c,!1,h),y,T=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=XT({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else if(B().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)y=YT({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else{let I=a!=null,k=i!=null,N=d==="leakyrelu",P=d?gp(d,!1):null,F=new ig(g,I,P,k,N),E=[o,s];if(a&&E.push(a),i&&E.push(i),N){let $=t.makeTensorInfo([],"float32",b.createScalarValue(f,"float32"));E.push($),T.push($)}y=t.runWebGLProgram(F,E,"float32")}let x=ue({inputs:{x:y},backend:t,attrs:{shape:g.outShape}});return T.push(y),T.forEach(I=>t.disposeIntermediateTensorInfo(I)),x}var p3={kernelName:vs,backendName:"webgl",kernelFunc:Oae};function zae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dilations:l,dimRoundingMode:m,activation:c,leakyreluAlpha:d}=n,f=[],h=l;h==null&&(h=[1,1]),b.assert(C.eitherStridesOrDilationsAreOne(p,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${p} and dilations '${h}'`);let g=C.computeConv2DInfo(o.shape,s.shape,p,h,u,m,!0),y=B().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,T=c?gp(c,y):null,x=[o,s],I=a!=null,k=i!=null,N=c==="leakyrelu";if(I&&x.push(a),k&&x.push(i),N){let $=t.makeTensorInfo([],"float32",b.createScalarValue(d,"float32"));x.push($),f.push($)}let P;y?P=new pg(g,I,T,k,N):P=new ug(g,I,T,k,N);let F=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],E=t.runWebGLProgram(P,x,"float32",F);return f.forEach($=>t.disposeIntermediateTensorInfo($)),E}var l3={kernelName:As,backendName:"webgl",kernelFunc:zae};var dN=class{constructor(e,t,n){this.sliceDim=e;this.strides=t;this.variableNames=["x","indices"];this.outputShape=n;let o=qe(t.length),s=qe(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${this.strides});
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function Gae(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,a=s[s.length-1],i=b.sizeFromShape(n.shape),[p,u,l,m]=C.prepareAndValidate(n,o),c=ue({inputs:{x:o},backend:t,attrs:{shape:[u,a]}}),d=ue({inputs:{x:n},backend:t,attrs:{shape:[b.sizeFromShape(n.shape)/l,l]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let y=t.readSync(o.dataId),T=t.bufferSync(n),x=_B(y,T,n.dtype,u,a,l,m,n.shape,i);return t.makeTensorInfo(p,n.dtype,x.values)}let f=new dN(a,m,[u,l]),h=t.runWebGLProgram(f,[d,c],d.dtype),g=ue({inputs:{x:h},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var m3={kernelName:fa,backendName:"webgl",kernelFunc:Gae};var fN=class{constructor(e,t){this.variableNames=["A","indices"];this.outputShape=t,this.rank=t.length;let n=qe(this.rank),o=Uae(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}};function Uae(r,e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push("index"):n.push(`${t[o]}`);return n.join()}function hN(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n,p=b.parseAxisParam(a,o.shape)[0];if(B().get("DEBUG")){let T=t.readSync(s.dataId),x=o.shape[p];for(let I=0;I<T.length;++I){let k=T[I];b.assert(k<=x-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${x-1}]`)}}let u=C.segment_util.collectGatherOpShapeInfo(o,s,p,i),l=b.sizeFromShape(s.shape),m=[],c=ue({inputs:{x:o},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),d=ue({inputs:{x:s},backend:t,attrs:{shape:[u.batchSize,l/u.batchSize]}});m.push(c),m.push(d);let f=[u.batchSize,u.outerSize,l/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([o,s])||o.dtype==="string"){let T=t.bufferSync(d),x=t.bufferSync(c),I=$B(x,T,f);return m.forEach(k=>t.disposeIntermediateTensorInfo(k)),t.makeTensorInfo(u.outputShape,I.dtype,I.values)}let h=new fN(c.shape,f),g=t.runWebGLProgram(h,[c,d],c.dtype);m.push(g);let y=ue({inputs:{x:g},backend:t,attrs:{shape:u.outputShape}});return m.forEach(T=>t.disposeIntermediateTensorInfo(T)),y}var c3={kernelName:cs,backendName:"webgl",kernelFunc:hN};var Wae="return float(a > b);",Kae=`
  return vec4(greaterThan(a, b));
`,Vae=mt({opSnippet:Wae,packedOpSnippet:Kae,cpuKernelImpl:BB,dtype:"bool"}),d3={kernelName:ha,backendName:"webgl",kernelFunc:Vae};var Hae="return float(a >= b);",qae=`
  return vec4(greaterThanEqual(a, b));
`,jae=mt({opSnippet:Hae,packedOpSnippet:qae,dtype:"bool",cpuKernelImpl:OB}),f3={kernelName:Co,backendName:"webgl",kernelFunc:jae};function Xae(r){let{inputs:e,backend:t}=r,{input:n}=e;return tx(n,!0,t)}var h3={kernelName:xm,backendName:"webgl",kernelFunc:Xae};var Yae="return float(!isnan(x) && !isinf(x));",Qae=Ae({opSnippet:Yae,dtype:"bool"}),g3={kernelName:Oi,backendName:"webgl",kernelFunc:Qae};var Zae="return float(isinf(x));",Jae=Ae({opSnippet:Zae,dtype:"bool"}),b3={kernelName:zi,backendName:"webgl",kernelFunc:Jae};var eie="return float(isnan(x));",tie=Ae({opSnippet:eie,dtype:"bool"}),y3={kernelName:Gi,backendName:"webgl",kernelFunc:tie};var rie="return float(a < b);",nie=`
  return vec4(lessThan(a, b));
`,oie=mt({opSnippet:rie,packedOpSnippet:nie,cpuKernelImpl:zB,dtype:"bool"}),T3={kernelName:ga,backendName:"webgl",kernelFunc:oie};var sie="return float(a <= b);",aie=`
  return vec4(lessThanEqual(a, b));
`,iie=mt({opSnippet:sie,packedOpSnippet:aie,cpuKernelImpl:GB,dtype:"bool"}),x3={kernelName:ba,backendName:"webgl",kernelFunc:iie};function uie(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,a=UB(n,o,s);return e.makeTensorInfo([a.length],"float32",a)}var I3={kernelName:Im,backendName:"webgl",kernelFunc:uie};var pie=Ys+`
  return x < 0.0 ? 0./0. : log(x);
`,lie=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,mie=Ae({opSnippet:pie,packedOpSnippet:lie,cpuKernelImpl:WB}),C3={kernelName:So,backendName:"webgl",kernelFunc:mie};var cie=Ys+`
  return log(1.0 + x);
`,die=Ae({opSnippet:cie}),k3={kernelName:Ui,backendName:"webgl",kernelFunc:die};var fie="return float(a >= 1.0 && b >= 1.0);",hie=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,gie=mt({opSnippet:fie,packedOpSnippet:hie,dtype:"bool"}),S3={kernelName:ya,backendName:"webgl",kernelFunc:gie};var bie="return float(!(x >= 1.0));",yie=Ae({opSnippet:bie}),v3={kernelName:Wi,backendName:"webgl",kernelFunc:yie};var Tie="return float(a >= 1.0 || b >= 1.0);",xie=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Iie=mt({opSnippet:Tie,packedOpSnippet:xie,dtype:"bool"}),A3={kernelName:Dp,backendName:"webgl",kernelFunc:Iie};var gN=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.outputShape=[];let a=t,i=e[3]-1;this.outputShape=e;let p,u=`float(${n}) + float(${o}) * sum`;s===.5?p=`inversesqrt(${u})`:s===1?p=`1.0/(${u})`:p=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${p};
        setOutput(val);
      }
    `}};var bN=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;let a=t,i=e[3]-1;this.outputShape=e;let p,u=`float(${n}) + float(${o}) * sum`;s===.5?p=`inversesqrt(${u})`:s===1?p=`1.0/(${u})`:p=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${p};
        setOutput(result);
      }
    `}};var Cie=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:p}=n,u=B().getBool("WEBGL_PACK_NORMALIZATION")?new bN(o.shape,s,a,i,p):new gN(o.shape,s,a,i,p);return t.runWebGLProgram(u,[o],o.dtype)},w3={kernelName:Ou,backendName:"webgl",kernelFunc:Cie};var yN=class{constructor(e,t,n,o,s){this.variableNames=["inputImage","outputImage","dy"];this.outputShape=[];this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=o,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${s})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var kie=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:p,alpha:u,beta:l}=n,m=new yN(o.shape,i,p,u,l);return t.runWebGLProgram(m,[o,s,a],o.dtype)},N3={kernelName:Cm,backendName:"webgl",kernelFunc:kie};function D3(r,e,t,n){let o=b.sizeFromShape(e),a=b.sizeFromShape(r.shape)/o,i=ue({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),p=Jn(i,r.dtype,"max",n),u=ue({inputs:{x:p},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),u}function TN(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n,i=o.shape.length,p=b.parseAxisParam(s,o.shape),u=p,l=C.getAxesPermutation(u,i),m=l!=null,c=t.shouldExecuteOnCPU([o]),d=o;if(m){if(c){let x=t.texData.get(d.dataId).values,I=new Array(i);for(let P=0;P<I.length;P++)I[P]=o.shape[l[P]];let k=Pl(x,o.shape,o.dtype,l,I);d=t.makeTensorInfo(I,o.dtype);let N=t.texData.get(d.dataId);N.values=k}else d=bp(o,l,t);u=C.getInnerMostAxes(u.length,i)}C.assertAxesAreInnerMostDims("max",u,i);let[f,h]=C.computeOutAndReduceShapes(d.shape,u),g=f;a&&(g=C.expandShapeToKeepDim(f,p));let y;if(c){let x=t.texData.get(d.dataId).values,I=KB(x,b.sizeFromShape(h),g,o.dtype);y=t.makeTensorInfo(g,o.dtype);let k=t.texData.get(y.dataId);k.values=I}else y=D3(d,h,g,t);return m&&t.disposeIntermediateTensorInfo(d),y}var P3={kernelName:vo,backendName:"webgl",kernelFunc:TN};var Sie=WT+`
  return max(a, b);
`,vie=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+hp+`
  return result;
`,Aie=mt({opSnippet:Sie,packedOpSnippet:vie,cpuKernelImpl:VB}),M3={kernelName:Ao,backendName:"webgl",kernelFunc:Aie};function wie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;Ha(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1;b.assert(C.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let l=C.computePool2DInfo(o.shape,s,a,u,i,p);if(l.filterWidth===1&&l.filterHeight===1&&b.arraysEqual(l.inShape,l.outShape))return sr({inputs:{x:o},backend:t});let m=new Si(l,"max",!1);return t.runWebGLProgram(m,[o],o.dtype)}var F3={kernelName:wo,backendName:"webgl",kernelFunc:wie};function Nie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dataFormat:p,dimRoundingMode:u}=n,l=[1,1,1],m=C.computePool3DInfo(o.shape,s,a,l,i,u,p),c=new Rl(m,"max",!1);return t.runWebGLProgram(c,[o],o.dtype)}var E3={kernelName:zu,backendName:"webgl",kernelFunc:Nie};var xN=class{constructor(e){this.variableNames=["dy","maxPos"];this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,o=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,p=a-1-e.padInfo.left,u=s*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},IN=class{constructor(e){this.variableNames=["dy","maxPos"];this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,p=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,m=p-1-e.padInfo.front,c=u-1-e.padInfo.top,d=l-1-e.padInfo.left,f=p*u*l-1;this.userCode=`
      const ivec3 pads = ivec3(${m}, ${c}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Die(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:p,pad:u,dimRoundingMode:l}=n,m=[1,1,1],c=C.computePool3DInfo(a.shape,i,p,m,u,l),d=new Rl(c,"max",!0),f=t.runWebGLProgram(d,[a],a.dtype),h=new IN(c),g=t.runWebGLProgram(h,[o,f],a.dtype);return t.disposeIntermediateTensorInfo(f),g}var R3={kernelName:Sm,backendName:"webgl",kernelFunc:Die};function Pie(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:a}=e,i=s;Ha([s,a],"maxPoolGrad");let{filterSize:p,strides:u,pad:l,dimRoundingMode:m}=n,c=C.computePool2DInfo(i.shape,p,u,1,l,m),d=!0,f=new Si(c,"max",d),h=t.runWebGLProgram(f,[i],i.dtype),g=new xN(c),y=t.runWebGLProgram(g,[o,h],i.dtype);return t.disposeIntermediateTensorInfo(h),y}var L3={kernelName:km,backendName:"webgl",kernelFunc:Pie};function _3(r,e,t,n){let o=new Si(t,"max",!1),s=n.runWebGLProgram(o,[r],"float32");o=new Si(t,"max",!0,!0,e);let a=n.runWebGLProgram(o,[r],"float32");return[s,a]}var $3={kernelName:vm,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=e,p=t;b.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let u=[1,1];b.assert(C.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let l=C.computePool2DInfo(n.shape,o,s,u,a),[m,c]=_3(n,i,l,p);return[m,c]}};function B3(r,e,t,n){let o=b.sizeFromShape(e),a=b.sizeFromShape(r.shape)/o,i=ue({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),p=Jn(i,"float32","mean",n),u=ue({inputs:{x:p},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),u}var O3={kernelName:No,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{keepDims:o,axis:s}=e,a=t,i=n.shape.length,p=b.parseAxisParam(s,n.shape),u=p,l=C.getAxesPermutation(u,i),m=l!=null,c=a.shouldExecuteOnCPU([n]),d=[],f=n;if(m){if(c){let I=a.texData.get(f.dataId).values,k=new Array(i);for(let F=0;F<k.length;F++)k[F]=n.shape[l[F]];let N=Pl(I,n.shape,n.dtype,l,k);f=a.makeTensorInfo(k,n.dtype);let P=a.texData.get(f.dataId);P.values=N}else f=bp(n,l,a);d.push(f),u=C.getInnerMostAxes(u.length,i)}C.assertAxesAreInnerMostDims("sum",u,i);let[h,g]=C.computeOutAndReduceShapes(f.shape,u),y=h;o&&(y=C.expandShapeToKeepDim(h,p));let T=B3(f,g,y,a);for(let x of d)a.disposeIntermediateTensorInfo(x);return T}};function Mie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,p=b.parseAxisParam(s,o.shape),u=p,l=C.getAxesPermutation(u,i),m=o;l!=null&&(m=Kt({inputs:{x:o},backend:t,attrs:{perm:l}}),u=C.getInnerMostAxes(u.length,o.shape.length)),C.assertAxesAreInnerMostDims("min",u,i);let[c,d]=C.computeOutAndReduceShapes(m.shape,u),f=b.sizeFromShape(d),h=ue({inputs:{x:m},backend:t,attrs:{shape:[-1,f]}}),g=Jn(h,h.dtype,"min",t),y;if(a){let T=C.expandShapeToKeepDim(c,p);y=ue({inputs:{x:g},backend:t,attrs:{shape:T}})}else y=ue({inputs:{x:g},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(m),y}var z3={kernelName:Do,backendName:"webgl",kernelFunc:Mie};var Fie=WT+`
  return min(a, b);
`,Eie=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+hp+`
  return result;
`,Rie=mt({opSnippet:Fie,packedOpSnippet:Eie,cpuKernelImpl:HB}),G3={kernelName:Po,backendName:"webgl",kernelFunc:Rie};var CN=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=t.map((l,m)=>l[0]+e[m]+l[1]);let o=e.length,s=qe(o),a=t.map(l=>l[0]).join(","),i=t.map((l,m)=>l[0]+e[m]).join(","),p=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),u=n==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${p}));
      }
    `}};var kN=class{constructor(e,t,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=t.map((f,h)=>f[0]+e[h]+f[1]);let o=e.length,s=qe(o),a=t.map(f=>f[0]).join(","),i=t.map((f,h)=>f[0]+e[h]).join(","),p=or("rc",o),u=or("source",o),l=`${p[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${u.slice(-2).join()})`,c=n==="reflect"?0:1,d="";if(o===1){let f=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${c};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${c};
        }
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${m});
        ${p[o-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${m});
        }
      `}else{let f=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${c}) +
                gte * ((end - 1) * 2 - source + ${c});
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${m});
        ${p[o-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${m});
        }
        rc = outputLoc;
        ${p[o-2]} += 1;
        if(${p[o-2]} < ${this.outputShape[o-2]}) {
          ${f}
          result[2] = getChannel(getX(${u.join()}), ${m});
          ${p[o-1]} += 1;
          if(${l}) {
            ${f}
            result[3] = getChannel(getX(${u.join()}), ${m});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}};var Lie=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{paddings:o,mode:s}=t,a=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kN(n.shape,o,s):new CN(n.shape,o,s);return e.runWebGLProgram(a,[n],n.dtype)},U3={kernelName:Mo,backendName:"webgl",kernelFunc:Lie};var _ie=`if (b == 0.0) return NAN;
  return mod(a, b);`,$ie=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+hp+`
  return result;
`,Bie=mt({opSnippet:_ie,packedOpSnippet:$ie}),W3={kernelName:Ki,backendName:"webgl",kernelFunc:Bie};var SN=class{constructor(e,t,n){this.variableNames=["probs"];this.customUniforms=[{name:"seed",type:"float"}];this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}};var Oie=`
if (a == b) {
  return 1.0;
};
return a / b;`,zie=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,vN=mt({opSnippet:Oie,packedOpSnippet:zie,checkOutOfBounds:!0}),K3={kernelName:go,backendName:"webgl",kernelFunc:vN};var V3="return a - b;",AN=mt({opSnippet:V3,packedOpSnippet:V3,supportsComplex:!0,cpuKernelImpl:uO}),H3={kernelName:qo,backendName:"webgl",kernelFunc:AN};function wN(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=b.parseAxisParam([s],o.shape),i=TN({inputs:{x:o},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),p=C.expandShapeToKeepDim(i.shape,a),u=ue({inputs:{x:i},backend:t,attrs:{shape:p}}),l=AN({inputs:{a:o,b:u},backend:t}),m=uN({inputs:{x:l},backend:t}),c=Fl({inputs:{x:m},backend:t,attrs:{axis:a,keepDims:!1}}),d=ue({inputs:{x:c},backend:t,attrs:{shape:p}}),f=vN({inputs:{a:m,b:d},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),f}var q3={kernelName:Vo,backendName:"webgl",kernelFunc:wN};function Gie(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n,p=i?o:wN({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),u=p.shape[0],l=p.shape[1],m=new SN(u,l,s),c=[[a]],d=t.runWebGLProgram(m,[p],"int32",c);return i||t.disposeIntermediateTensorInfo(p),d}var j3={kernelName:Am,backendName:"webgl",kernelFunc:Gie};var Uie=yr+`
  return -x;
`,Wie=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Kie(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.texData.get(n.dataId),[a,i]=jB(s.values,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,a)}let o;return B().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new js(n.shape,Wie):o=new Sn(n.shape,Uie),t.runWebGLProgram(o,[n],n.dtype)}var X3={kernelName:ds,backendName:"webgl",kernelFunc:Kie};var Vie=br.nonMaxSuppressionV3Impl;function Hie(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p}=n,u=t.readSync(o.dataId),l=t.readSync(s.dataId),{selectedIndices:m}=Vie(u,l,a,i,p);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}var Y3={kernelName:xa,backendName:"webgl",kernelFunc:Hie};var qie=br.nonMaxSuppressionV4Impl;function jie(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p,padToMaxOutputSize:u}=n,l=t.readSync(o.dataId),m=t.readSync(s.dataId),{selectedIndices:c,validOutputs:d}=qie(l,m,a,i,p,u);return[t.makeTensorInfo([c.length],"int32",new Int32Array(c)),t.makeTensorInfo([],"int32",new Int32Array([d]))]}var Q3={kernelName:Vi,backendName:"webgl",kernelFunc:jie};var Xie=br.nonMaxSuppressionV5Impl;function Yie(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p,softNmsSigma:u}=n,l=t.readSync(o.dataId),m=t.readSync(s.dataId),c=a,d=i,f=p,h=u,{selectedIndices:g,selectedScores:y}=Xie(l,m,c,d,f,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var Z3={kernelName:Ia,backendName:"webgl",kernelFunc:Yie};var NN=class{constructor(e,t,n,o){this.variableNames=["indices"];this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${n}),
                      float(index == coords.y)));
      }
    `}};var Qie=r=>{let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n,p=b.sizeFromShape(o.shape),u=new NN(p,s,a,i),l=ue({inputs:{x:o},backend:t,attrs:{shape:[p]}}),m=t.runWebGLProgram(u,[l],o.dtype);t.disposeIntermediateTensorInfo(l);let c=[...o.shape,s],d=ue({inputs:{x:m},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(m),d},J3={kernelName:Ca,backendName:"webgl",kernelFunc:Qie};function lg(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=ku({inputs:{input:n},backend:t}),s=lg({inputs:{x:o},backend:t}),a=Ll({inputs:{input:n},backend:t}),i=lg({inputs:{x:a},backend:t}),p=_n({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),p}else return Su({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var eG={kernelName:Cs,backendName:"webgl",kernelFunc:lg};function tG(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=ku({inputs:{input:n},backend:t}),s=tG({inputs:{x:o},backend:t}),a=Ll({inputs:{input:n},backend:t}),i=lg({inputs:{x:a},backend:t}),p=_n({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),p}else return Su({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var rG={kernelName:fs,backendName:"webgl",kernelFunc:tG};function Zie(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return JT({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(l=>{b.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),b.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],p=e.map(l=>{let m=JT({inputs:{input:l},backend:t,attrs:{dim:o}});return i.push(m),m}),u=Xw({inputs:p,backend:t,attrs:{axis:o}});return i.forEach(l=>t.disposeIntermediateTensorInfo(l)),u}var nG={kernelName:hs,backendName:"webgl",kernelFunc:Zie};var DN=class{constructor(e,t,n){this.variableNames=["x"];this.customUniforms=[{name:"value",type:"float"}];this.outputShape=t.map((u,l)=>u[0]+e[l]+u[1]);let o=e.length,s=qe(o),a=t.map(u=>u[0]).join(","),i=t.map((u,l)=>u[0]+e[l]).join(","),p=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${p}));
        }
      }
    `}};var PN=class{constructor(e,t,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"value",type:"float"}];this.outputShape=t.map((h,g)=>h[0]+e[g]+h[1]);let o=e.length,s=qe(o),a=t.map(h=>h[0]).join(","),i=t.map((h,g)=>h[0]+e[g]).join(","),p=or("rc",o),u=or("source",o),l=`${p[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${u.slice(-2).join()})`,c=[`${s} rc = outputLoc;`,`${p[o-1]} += 1;
       if(${l}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${p[o-2]} += 1;
       if(${p[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${p[o-1]} += 1;
         if(${l}) {`],d=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",f="";for(let h=0,g=o===1?2:4;h<g;h++)f+=`
        ${c[h]}
        if (${d}) {
          result[${h}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${h}] = getChannel(getX(${u.join()}), ${m});
        }
      `;f+=o===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var MN=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;if(b.sizeFromShape(o.shape)===0){let u=s.map((l,m)=>l[0]+o.shape[m]+l[1]);return Su({backend:t,attrs:{shape:u,value:a,dtype:o.dtype}})}let i=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new PN(o.shape,s,a):new DN(o.shape,s,a),p=[[a]];return t.runWebGLProgram(i,[o],o.dtype,p)},oG={kernelName:Eo,backendName:"webgl",kernelFunc:MN};var Jie=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,eue=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+hp+`
  return result;
`,tue=mt({opSnippet:Jie,packedOpSnippet:eue}),sG={kernelName:Ro,backendName:"webgl",kernelFunc:tue};function rue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,p=[],u=b.parseAxisParam(s,o.shape),l=u,m=C.getAxesPermutation(l,i),c=o;m!=null&&(c=Kt({inputs:{x:o},backend:t,attrs:{perm:m}}),l=C.getInnerMostAxes(l.length,i),p.push(c)),C.assertAxesAreInnerMostDims("prod",l,i);let d;if(t.shouldExecuteOnCPU([c])){let f=t.texData.get(c.dataId).values,{outVals:h,outShape:g,outDtype:y}=YB(c.shape,c.dtype,f,l);d=t.makeTensorInfo(g,y,h)}else{let[f,h]=C.computeOutAndReduceShapes(c.shape,l),g=b.sizeFromShape(h),y=ue({inputs:{x:c},backend:t,attrs:{shape:[-1,g]}}),T=Zi(o.dtype),x=Jn(y,T,"prod",t);d=ue({inputs:{x},backend:t,attrs:{shape:f}}),p.push(y),p.push(x)}if(a){p.push(d);let f=C.expandShapeToKeepDim(d.shape,u);d=ue({inputs:{x:d},backend:t,attrs:{shape:f}})}return p.forEach(f=>t.disposeIntermediateTensorInfo(f)),d}var aG={kernelName:_o,backendName:"webgl",kernelFunc:rue};var FN=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=QB(n,o,s,a);return e.makeTensorInfo([i.length],a,i)},iG={kernelName:si,backendName:"webgl",kernelFunc:FN};var nue="return 1.0 / x;",oue=Ae({opSnippet:nue}),uG={kernelName:Hi,backendName:"webgl",kernelFunc:oue};var sue=yr+`
  return (x < 0.0) ? 0.0 : x;
`,aue=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,iue=Ae({opSnippet:sue,packedOpSnippet:aue}),pG={kernelName:$o,backendName:"webgl",kernelFunc:iue};var uue=yr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,pue=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,lue=Ae({opSnippet:uue,packedOpSnippet:pue}),lG={kernelName:Oo,backendName:"webgl",kernelFunc:lue};var EN=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.outputShape=[];let[a,i,p,u]=e;this.outputShape=[a,t,n,u];let l=[o&&t>1?i-1:i,o&&n>1?p-1:p],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c;s?c="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":c="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/m[0]},
          ${l[1]/m[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${p}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var RN=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[a,i,p,u]=e;this.outputShape=[a,t,n,u];let l=[o&&t>1?i-1:i,o&&n>1?p-1:p],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c;s?c="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":c="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/m[0]},
          ${l[1]/m[1]},
          ${l[1]/m[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${p}.0,
                                     ${p}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function mue(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[p,u]=i,l=B().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new RN(o.shape,p,u,s,a):new EN(o.shape,p,u,s,a);return t.runWebGLProgram(l,[o],"float32")}var mG={kernelName:Bo,backendName:"webgl",kernelFunc:mue};var LN=class{constructor(e,t,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=t;let[,o,s]=t,[,a,i]=e,p=[n&&a>1?o-1:o,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=p[0]/u[0],m=p[1]/u[1],c=1/l,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function cue(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=new LN(s.shape,o.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var cG={kernelName:Nm,backendName:"webgl",kernelFunc:cue};var _N=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.outputShape=[];let[a,i,p,u]=e;this.outputShape=[a,t,n,u];let l=[o&&t>1?i-1:i,o&&n>1?p-1:p],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/m[0]},
          ${l[1]/m[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${p}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var $N=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[a,i,p,u]=e;this.outputShape=[a,t,n,u];let l=[o&&t>1?i-1:i,o&&n>1?p-1:p],m=[o&&t>1?t-1:t,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/m[0]},
          ${l[1]/m[1]},
          ${l[1]/m[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${p}.0,
                                     ${p}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function due(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[p,u]=i,l=B().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new $N(o.shape,p,u,s,a):new _N(o.shape,p,u,s,a);return t.runWebGLProgram(l,[o],o.dtype)}var dG={kernelName:ai,backendName:"webgl",kernelFunc:due};var BN=class{constructor(e,t,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=t;let[,o,s]=t,[,a,i]=e,p=[n&&a>1?o-1:o,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=p[0]/u[0],m=p[1]/u[1],c=1/l,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${p[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${p[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function fue(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=new BN(s.shape,o.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var fG={kernelName:wm,backendName:"webgl",kernelFunc:fue};var ON=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let o=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,s=e.map((i,p)=>o(p)).join(","),a=qe(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var zN=class{constructor(e,t){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let o=or("rc",n),s=`${o[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${o[n-2]} + 1 < ${this.outputShape[n-2]}`,i=qe(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${p(o.slice())};
          if(${s}){
            result.g = ${u(o.slice())};
          }
          if(${a}) {
            result.b = ${l(o.slice())};
            if(${s}) {
              result.a = ${m(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function p(f){return c(f)}function u(f){return f[n-1]="("+f[n-1]+" + 1)",c(f)}function l(f){return f[n-2]="("+f[n-2]+" + 1)",c(f)}function m(f){return f[n-1]="("+f[n-1]+" + 1)",f[n-2]="("+f[n-2]+" + 1)",c(f)}function c(f){let h=e.map((T,x)=>d(x,f)),g=h.join(","),y=h.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${y}))`}function d(f,h){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${h[f]} - 1`:`${h[f]}`}}};function hue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,a=o.shape.length,i=b.parseAxisParam(s,o.shape);if(a===0)return sr({inputs:{x:o},backend:t});let p=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zN(o.shape,i):new ON(o.shape,i);return t.runWebGLProgram(p,[o],o.dtype)}var hG={kernelName:ka,backendName:"webgl",kernelFunc:hue};var GN=class{constructor(e,t){this.variableNames=["Image"];this.outputShape=[];this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],o=e[2];this.outputShape=e;let s="";typeof t=="number"?s=`float outputValue = ${t.toFixed(2)};`:s=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var gG={kernelName:Ma,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,p=new GN(n.shape,s),[u,l]=C.getImageCenter(a,n.shape[1],n.shape[2]),m=[[u,l,Math.sin(o),Math.cos(o)]];return i.runWebGLProgram(p,[n],n.dtype,m)}};var gue=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,bue=Ae({opSnippet:gue}),bG={kernelName:Sa,backendName:"webgl",kernelFunc:bue};var yue="return inversesqrt(x);",Tue=Ae({opSnippet:yue,cpuKernelImpl:ZB}),yG={kernelName:zo,backendName:"webgl",kernelFunc:Tue};var mg=class{constructor(e,t,n,o,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"];this.outputShape=a;let p=qe(s.length),u=qe(a.length),l="";n===1?l="i":n===2&&(l="i, j");let m=`getIndices(${l})`,c="";o===1?c="i":o===2&&(c="i, coords[1]");let d=`getUpdates(${c})`,f=t>1?"strides[j]":"strides";this.userCode=`
        ${p} strides = ${p}(${s});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${m});
              flattenedIndex += index * ${f};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function xue(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:p,sliceSize:u,strides:l,outputSize:m}=C.calculateShapes(s,o,a),c=[m/u,u];if(m===0)return t.makeTensorInfo(a,o.dtype);let d=ue({inputs:{x:o},backend:t,attrs:{shape:[p,i]}}),f=ue({inputs:{x:s},backend:t,attrs:{shape:[p,u]}}),h=t.makeTensorInfo([],"float32",new Float32Array([0])),g=new mg(p,i,d.shape.length,f.shape.length,l,c),y=t.runWebGLProgram(g,[f,d,h],f.dtype),T=ue({inputs:{x:y},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(h),T}var TG={kernelName:va,backendName:"webgl",kernelFunc:xue};var UN=class{constructor(e,t,n){this.variableNames=["c","a","b"];this.outputShape=t;let o,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",o="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],p=[],u=[];for(let l=0;l<t.length;l++)u.push(`${i[l]}`),l<e&&p.push(`${i[l]}`);o=p.join(),s=u.join()}let a=qe(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function Iue(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=new UN(n.shape.length,o.shape,o.shape.length);return t.runWebGLProgram(a,[n,o,s],Ft(o.dtype,s.dtype))}var xG={kernelName:bs,backendName:"webgl",kernelFunc:Iue};var Cue=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${C.SELU_SCALEALPHA};
  float scale = ${C.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,kue=Ae({opSnippet:Cue}),IG={kernelName:qi,backendName:"webgl",kernelFunc:kue};var Sue=Ys+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,vue=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Aue=Ae({opSnippet:Sue,packedOpSnippet:vue,cpuKernelImpl:JB}),CG={kernelName:Uo,backendName:"webgl",kernelFunc:Aue};var wue=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Nue=Ae({opSnippet:wue}),kG={kernelName:ji,backendName:"webgl",kernelFunc:Nue};var Due=Ys+`
  return sin(x);
`,Pue=Ae({opSnippet:Due}),SG={kernelName:Go,backendName:"webgl",kernelFunc:Pue};var Mue=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Fue=Ae({opSnippet:Mue}),vG={kernelName:Aa,backendName:"webgl",kernelFunc:Fue};var Eue=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Rue=Ae({opSnippet:Eue}),AG={kernelName:Xi,backendName:"webgl",kernelFunc:Rue};var Lue=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;b.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((y,T)=>y*T),p=[[0,0]];p.push(...a);for(let y=1+s.length;y<o.shape.length;++y)p.push([0,0]);let u=[],l=MN({inputs:{x:o},backend:t,attrs:{paddings:p,constantValue:0}}),m=C.getReshaped(l.shape,s,i,!1),c=C.getPermuted(m.length,s.length,!1),d=C.getReshapedPermuted(l.shape,s,i,!1),f=ue({inputs:{x:l},backend:t,attrs:{shape:m}}),h=Kt({inputs:{x:f},backend:t,attrs:{perm:c}}),g=ue({inputs:{x:h},backend:t,attrs:{shape:d}});return u.push(l),u.push(f),u.push(h),u.forEach(y=>t.disposeIntermediateTensorInfo(y)),g},wG={kernelName:Ts,backendName:"webgl",kernelFunc:Lue};function _ue(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=t.readSync(n.dataId),p=t.readSync(o.dataId),u=t.readSync(s.dataId),l=t.readSync(a.dataId)[0],[m,c,d,f,h]=tO(i,n.shape,n.dtype,p,o.dtype,u,l);return[t.makeTensorInfo(c,n.dtype,m),t.makeTensorInfo([c[0]],o.dtype,d),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var NG={kernelName:Uu,backendName:"webgl",kernelFunc:_ue};function $ue(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(t.readSync(o.dataId)),i=t.readSync(n.dataId),p=Array.from(t.readSync(s.dataId)),[u,l,m]=rO(i,n.shape,n.dtype,a,p);return[t.makeTensorInfo(l,n.dtype,u),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var DG={kernelName:Yi,backendName:"webgl",kernelFunc:$ue};function Bue(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let a=t.readSync(n.dataId),i=t.readSync(o.dataId),p=t.readSync(s.dataId),[u,l]=GT(a,n.shape,n.dtype,i,p,!0);return t.makeTensorInfo(l,n.dtype,u)}var PG={kernelName:Wu,backendName:"webgl",kernelFunc:Bue};function Oue(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let a=t.readSync(n.dataId),i=t.readSync(o.dataId),p=t.readSync(s.dataId),[u,l]=GT(a,n.shape,n.dtype,i,p);return t.makeTensorInfo(l,n.dtype,u)}var MG={kernelName:Ku,backendName:"webgl",kernelFunc:Oue};function zue(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:p,numUpdates:u,strides:l,outputSize:m}=C.calculateShapes(s,o,i),c=!1,d=new mg(u,p,o.shape.length,s.shape.length,l,[m,1],c),f=t.runWebGLProgram(d,[s,o,a],s.dtype),h=ue({inputs:{x:f},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(f),h}var FG={kernelName:Vu,backendName:"webgl",kernelFunc:zue};function Gue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=b.parseAxisParam(a,o.shape)[0],p=C.prepareSplitSize(o,s,i),u=o.shape.length,l=new Array(u).fill(0),m=o.shape.slice();return p.map(c=>{let d=[...m];d[i]=c;let f=Xa({inputs:{x:o},backend:t,attrs:{begin:l,size:d}});return l[i]+=c,f})}var EG={kernelName:xs,backendName:"webgl",kernelFunc:Gue};var RG="return sqrt(x);",Uue=Ae({opSnippet:RG,packedOpSnippet:RG,cpuKernelImpl:nO}),LG={kernelName:Wo,backendName:"webgl",kernelFunc:Uue};var Wue="return x * x;",Kue=Ae({opSnippet:Wue}),_G={kernelName:ii,backendName:"webgl",kernelFunc:Kue};var $G="return (a - b) * (a - b);",Vue=mt({opSnippet:$G,packedOpSnippet:$G}),BG={kernelName:Ho,backendName:"webgl",kernelFunc:Vue};function Hue({inputs:r,attrs:e,backend:t}){let{x:n}=r,o=yr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,s=new Sn(n.shape,o);return t.runWebGLProgram(s,[n],n.dtype)}var OG={kernelName:ks,backendName:"webgl",kernelFunc:Hue};var WN=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=n;let o=n.length,s=qe(n.length),a=qe(n.length),i="";if(o===1)i="coords * strides + begin";else{let p=0;i=n.map((u,l)=>(p++,n.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${p-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${e});
      ${s} strides = ${s}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function que(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:p,endMask:u,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:T,end:x,strides:I}=Tt.sliceInfo(o.shape,s,a,i,p,u,l,m,c),k;if(h)k=ue({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let P=Tt.computeOutShape(T,x,I),F=Xa({inputs:{x:o},backend:t,attrs:{begin:T,size:P}});k=ue({inputs:{x:F},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(F)}else if(t.shouldExecuteOnCPU([o])){let F=t.readSync(o.dataId),E=Ce(o.shape,o.dtype,F),$=oO(d,E,I,T);k=t.makeTensorInfo(f,o.dtype,$.values)}else{let F=new WN(T,I,d);k=t.runWebGLProgram(F,[o],o.dtype)}let N=ue({inputs:{x:k},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(k),N}var zG={kernelName:wa,backendName:"webgl",kernelFunc:que};function jue(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:p,preserveShortSequences:u}=n,{data:l,dataSplits:m}=e,c=t.readSync(l.dataId),d=t.readSync(m.dataId),[f,h]=sO(c,d,o,s,a,i,p,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(m.shape,"int32",h)]}var GG={kernelName:Hu,backendName:"webgl",kernelFunc:jue};function Xue(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=t.readSync(s.dataId),p=t.readSync(a.dataId)[0],[u,l,m]=aO(i,p,o),c=l.length;return[t.makeTensorInfo([c,2],"int32",u),t.makeTensorInfo([c],"string",l),t.makeTensorInfo([2],"int32",new Int32Array(m))]}var UG={kernelName:Dm,backendName:"webgl",kernelFunc:Xue};function Yue(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=t.readSync(s.dataId),i=iO(a,o);return t.makeTensorInfo(s.shape,"int32",i)}var WG={kernelName:Pm,backendName:"webgl",kernelFunc:Yue};var Que="return tan(x);",Zue=Ae({opSnippet:Que}),KG={kernelName:Na,backendName:"webgl",kernelFunc:Zue};var Jue=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,epe=Ae({opSnippet:Jue}),VG={kernelName:jo,backendName:"webgl",kernelFunc:epe};var KN=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let o=qe(this.rank),s=tpe(e);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function tpe(r){let e=r.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${r[0]})`;let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let o=0;o<r.length;o++)n.push(`imod(${t[o]}, ${r[o]})`);return n.join()}function VN(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(o.dtype==="string"||o.shape.length>5){let p=t.readSync(o.dataId),u=o.dtype==="string"?p.map(c=>b.decodeString(c)):p,l=Ce(o.shape,o.dtype,u),m=pO(l,s);return t.makeTensorInfo(m.shape,m.dtype,m.values)}let a=new KN(o.shape,s);return t.runWebGLProgram(a,[o],o.dtype)}var HG={kernelName:Nn,backendName:"webgl",kernelFunc:VN};var HN=class{constructor(e){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}];this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},qN=class{constructor(e){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}];this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function $l(r,e){e!==null&&r.disposeIntermediateTensorInfo(e)}function qG(r){let e=1;for(;e<r;)e*=2;return e}function rpe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n,i=B().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),p=B().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=o.shape,l=u[u.length-1];if(t.shouldExecuteOnCPU([o])||l<i||s>p){let $=t.readSync(o.dataId),[U,W]=lO($,u,o.dtype,s,a);return[t.makeTensorInfo(U.shape,U.dtype,U.values),t.makeTensorInfo(W.shape,W.dtype,W.values)]}if(s===0)return u[u.length-1]=0,[t.makeTensorInfo(u,o.dtype,[]),t.makeTensorInfo(u,"int32",[])];if(l===1)return[o,Su({attrs:{shape:u,dtype:"int32",value:0},backend:t})];let m=t.texData.get(o.dataId),c=m!==null&&m.isPacked,d=c?t.unpackTensor(o):o,h=b.sizeFromShape(u)/l,g=ue({inputs:{x:d},attrs:{shape:[h,l]},backend:t});c&&$l(t,d);let y=qG(s),T=qG(l),x=null,I=()=>x===null?[g,g]:[g,x],k=($,U,W)=>{let V=I(),H=new HN(W),Y=[[l],[x===null?1:0],[Number.NEGATIVE_INFINITY],[$],[U]],ee=x;x=t.runWebGLProgram(H,V,"int32",Y),$l(t,ee)};for(let $=1;$<y;$*=2){let U=$*2;for(let W=$;W>=1;W/=2)k(U,W,[h,T])}for(let $=T;$>y;$/=2){let U=I(),W=new qN([h,$/2]),H=[[l],[x===null?1:0],[y]],q=x;x=t.runWebGLProgram(W,U,"int32",H),$l(t,q);let Y=y/2,ee=Y*2;for(let j=Y;j>=1;j/=2)k(ee,j,x.shape)}let N=x;x=Xa({inputs:{x},backend:t,attrs:{begin:0,size:[h,s]}}),$l(t,N);let P=hN({inputs:{x:g,indices:x},backend:t,attrs:{axis:1,batchDims:1}});$l(t,g);let F=u.slice(0,-1);F.push(s),N=x,x=ue({inputs:{x},attrs:{shape:F},backend:t}),$l(t,N);let E=P;return P=ue({inputs:{x:P},attrs:{shape:F},backend:t}),$l(t,E),[P,x]}var jG={kernelName:Da,backendName:"webgl",kernelFunc:rpe};var jN=class{constructor(e,t,n,o,s,a){this.variableNames=["Image","Transforms"];this.outputShape=a;let i=n==="nearest"?1:2,p;switch(o){case"constant":p=1;break;case"reflect":p=2;break;case"wrap":p=3;break;case"nearest":p=4;break;default:p=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${p} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${p} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${p} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function npe(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:p,outputShape:u}=n,[l,m,c,d]=o.shape,[f,h]=u??[m,c],g=[l,f,h,d],y=new jN(m,c,a,i,p,g);return t.runWebGLProgram(y,[o,s],"float32")}var XG={kernelName:Pa,backendName:"webgl",kernelFunc:npe};function ope(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;Ha(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let a=n.readSync(s.dataId),{outputValues:i,outputShape:p,indices:u}=mO(a,o,s.shape,s.dtype);return[n.makeTensorInfo(p,s.dtype,i),n.makeTensorInfo([u.length],"int32",u)]}var YG={kernelName:Mm,backendName:"webgl",kernelFunc:ope};function spe(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,p=o.shape[s],u=new Array(i-1),l=0;for(let h=0;h<i;h++)h!==s&&(u[l++]=a.shape[h]);let m=[],c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let f=new Array(p);for(let h=0;h<f.length;h++){c[s]=h;let g=Xa({inputs:{x:a},backend:t,attrs:{begin:c,size:d}}),y=ue({inputs:{x:g},backend:t,attrs:{shape:u}});f[h]=y,m.push(g)}return m.forEach(h=>t.disposeIntermediateTensorInfo(h)),f}var QG={kernelName:Is,backendName:"webgl",kernelFunc:spe};var XN=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,o=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[o,i];let p="0.0",u="sumValue",l=Math.floor(n/4)*4,m=n%4,c=`
        sumValue += dot(values, segFilter);
    `,d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${p};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${c}
        }

        int inIdx = inOffset + ${l};
        if (${m===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${c}
        } else if (${m===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${c}
        } else if (${m===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${c}
        }
        setOutput(${u});
      }
    `}};function ape(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:a}=n,i=o.shape.length,p=[],u=0,l=C.getAxesPermutation([u],i),m=o;l!=null&&(m=Kt({inputs:{x:o},backend:t,attrs:{perm:l}}),p.push(m),u=C.getInnerMostAxes(1,i)[0]);let c=C.segment_util.computeOutShape(m.shape,u,a),d=b.sizeFromShape([m.shape[u]]),f=ue({inputs:{x:m},backend:t,attrs:{shape:[-1,d]}});p.push(f);let h=Zi(o.dtype),g=(I,k,N,P,F)=>{let E=I.shape[0],$=I.shape[1],U=C.segment_util.segOpComputeOptimalWindowSize($,F),W={windowSize:U,inSize:$,batchSize:E,numSegments:F},V=new XN(W,k),H=t.compileAndRun(V,[I,N],P);if(p.push(H),H.shape[1]===F)return H;let q=FN({backend:t,attrs:{start:0,stop:F,step:1,dtype:"float32"}}),Y=VN({inputs:{x:q},backend:t,attrs:{reps:[$/U]}});return p.push(q),p.push(Y),g(H,k,Y,P,F)},y=g(f,"unsortedSegmentSum",s,h,a),T=ue({inputs:{x:y},backend:t,attrs:{shape:c}}),x=T;if(l!=null){p.push(T);let I=C.getUndoAxesPermutation(l);x=Kt({inputs:{x},backend:t,attrs:{perm:I}})}return p.forEach(I=>t.disposeIntermediateTensorInfo(I)),x}var ZG={kernelName:qu,backendName:"webgl",kernelFunc:ape};var ipe=[GO,WO,KO,VO,qO,jO,XO,YO,JO,ez,tz,rz,nz,oz,sz,az,iz,uz,pz,lz,mz,dz,fz,hz,Tz,Iz,Cz,DO,Sz,Az,wz,Nz,Dz,Pz,Mz,Fz,Ez,Rz,Lz,Bz,Oz,zz,Gz,Uz,Wz,Kz,Vz,Hz,qz,jz,Xz,Yz,Qz,Zz,Jz,t3,r3,n3,o3,a3,i3,u3,p3,l3,m3,c3,d3,f3,NO,h3,vz,g3,b3,y3,PO,T3,x3,I3,C3,k3,S3,v3,A3,w3,N3,P3,M3,F3,E3,R3,L3,$3,O3,z3,G3,U3,W3,j3,LO,X3,Y3,Q3,Z3,gz,J3,rG,nG,oG,sG,MO,aG,iG,bz,K3,uG,pG,lG,$O,mG,cG,dG,fG,hG,gG,bG,yG,TG,xG,IG,CG,kG,SG,vG,cz,q3,AG,wG,NG,DG,PG,MG,FG,EG,LG,_G,BG,OG,zG,GG,UG,WG,H3,OO,KG,VG,HG,jG,XG,zO,YG,QG,ZG,eG];for(let r of ipe)Qi(r);var vi=B();vi.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);vi.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);vi.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);vi.registerFlag("WEBGPU_USE_NAIVE_CONV2D",()=>!1);vi.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);vi.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);vi.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);vi.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);vi.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);vi.registerFlag("WEBGPU_USE_IMPORT",()=>!1);var upe="return a + b;",ppe="return areal * breal - aimag * bimag;",lpe="return areal * bimag + aimag * breal;",mpe="return a / b;",cpe="return a * b;",dpe="return (a - b) * (a - b);",fpe="return a - b;",hpe="return f32(a == b);",gpe="return vec4<f32>(a == b);",bpe="return f32(a > b);",ype="return vec4<f32>(a > b);",Tpe="return f32(a >= b);",xpe="return vec4<f32>(a >= b);",Ipe="return f32(a < b);",Cpe="return vec4<f32>(a < b);",kpe="return f32(a <= b);",Spe="return vec4<f32>(a <= b);",vpe="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",Ape=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,wpe=`
  if (isnan(a)) { return a; }
  if (isnan(b)) { return b; }
  `,eU=`
  if (isNaN.r) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a) {
    resultTemp.a = uniforms.NAN;
  }
  `,Npe=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,Dpe=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,Ppe="return f32(a != b);",Mpe="return vec4<f32>(a != b);",Fpe=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,Epe=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  ${eU}
  return resultTemp;
  `,Rpe="if (a < 0.0) { return b * a; }  return a;",Lpe=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function JG(r,e){let t=e?eU:wpe;return e?`
    var resultTemp = vec4<f32>(${r}(a, b));
    let isNaN = isnanVec4(a) | isnanVec4(b);
    `+t+`
    return resultTemp;
  `:t+`
    return ${r}(a, b);
  `}function Ai(r,e){switch(r){case 0:return cpe;case 1:return upe;case 2:return fpe;case 3:return mpe;case 4:return e?gpe:hpe;case 5:return e?ype:bpe;case 6:return e?xpe:Tpe;case 7:return e?Cpe:Ipe;case 8:return e?Spe:kpe;case 9:return e?Ape:vpe;case 10:return e?Mpe:Ppe;case 11:return dpe;case 12:return e?Dpe:Npe;case 14:return e?Lpe:Rpe;case 15:return JG("max",e);case 16:return JG("min",e);case 13:return e?Epe:Fpe;case 17:return ppe;case 18:return lpe;default:throw new Error(`BinaryType ${r} is not implemented!`)}}var _pe="return abs(a);",$pe="return ceil(a);",Bpe="return cos(a);",Ope=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,zpe="return exp(a) - 1.0;",Gpe="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Upe=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Wpe="return exp(a);",Kpe="return floor(a);",Vpe="return a;",Hpe=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,qpe="return f32(!(a >= 1.0));",jpe="return -a;",Xpe="if (a < 0.0) { return uniforms.alpha * a; } return a;",Ype=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,Qpe="if(a < 0.0) { return 0.0; } return a;",Zpe="return clamp(a, 0.0, 6.0);",Jpe="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",ele=`
  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));
  let isNaN = isnanVec4(a);

  if (isNaN.r) {
    resFloat.r = a.r;
  }
  if (isNaN.g) {
    resFloat.g = a.g;
  }
  if (isNaN.b) {
    resFloat.b = a.b;
  }
  if (isNaN.a) {
    resFloat.a = a.a;
  }
  return resFloat;
`,tle="return 1.0/sqrt(a);",rle="return 1.0 / (1.0 + exp(-1.0 * a));",nle="return sin(a);",ole=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,sle="return sqrt(a);",ale="return a * a;",ile=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,ule="return f32(i32((a)));";function vu(r,e){switch(r){case 0:return _pe;case 2:return Bpe;case 3:return Ope;case 1:return $pe;case 4:return e?Upe:Gpe;case 5:return Wpe;case 6:return zpe;case 7:return Kpe;case 8:return Vpe;case 9:return Hpe;case 10:return qpe;case 11:return jpe;case 14:return e?Ype:Xpe;case 12:return e?ele:Qpe;case 13:return e?Jpe:Zpe;case 15:return tle;case 18:return rle;case 16:return nle;case 17:return ole;case 19:return sle;case 20:return ale;case 21:return ile;case 22:return ule;default:throw new Error(`BinaryType ${r} is not implemented!`)}}function jr(r,e=!1){if(r===null)return null;if(r==="linear")return vu(8);if(r==="relu")return vu(12,e);if(r==="elu")return vu(4,e);if(r==="relu6")return vu(13,e);if(r==="prelu")return Ai(14,e);if(r==="sigmoid")return vu(18,e);if(r==="leakyrelu")return vu(14,e);throw new Error(`Activation ${r} has not been implemented for the WebGPU backend.`)}function tU(r,e){if(Math.max(...r)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let t=r.length,n=r.map(s=>`${e}[${s}]`),o=new Array(t-1);o[t-2]=n[t-1];for(let s=t-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function Qt(r){if(r<=1)return"i32";if(r===2)return"vec2<i32>";if(r===3)return"vec3<i32>";if(r===4)return"vec4<i32>";throw Error(`GPU for rank ${r} is not yet supported`)}function rx(r,e){return r==="float32"?e?"vec4<f32>":"f32":r==="int32"||r==="bool"?e?"vec4<i32>":"i32":r}function cg(){return`
  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function eo(){return`
  ${cg()}
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;
`}function ke(){return`
    ${eo()}
      let index = getGlobalIndex();
`}function oU(r,e,t,n=!1){let o=[];if(o.push(`
    let workGroupSizeX = ${t.workGroupSize[0]}u;
    let workGroupSizeY = ${t.workGroupSize[1]}u;
    let workGroupSizeZ = ${t.workGroupSize[2]}u;

    var<private> localId: vec3<u32>;
    var<private> globalId: vec3<u32>;
    var<private> numWorkgroups: vec3<u32>;

    // Only used when the y/z dimension of workgroup size is 1.
    fn getGlobalIndex() -> i32 {
      if (numWorkgroups.y == 1u && numWorkgroups.z == 1u) {
        return i32(globalId.x);
      }

      let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
          localId.y * workGroupSizeX + localId.x;
      let workGroupID = (globalId - localId)/vec3<u32>(
          workGroupSizeX, workGroupSizeY, workGroupSizeZ);

      return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
        workGroupID.y * numWorkgroups.x + workGroupID.x) *
        (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
        localInvocationIndex);
    }
  `),n===!0)return o.push(`
      struct Uniform {
        size            : i32,
        numChannels     : i32,
        outShapeStrides : vec2<i32>,
        dispatchSize    : vec3<u32>,
      };

      @group(0) @binding(0) var<storage, write> result: array<${rx(e.dtype,t.isVec4)}>;
      @group(0) @binding(2) var<uniform> uniforms: Uniform;
    `),[rU,o.join(`
`),nU(e.shape),t.getUserCode()].join(`
`);let s="struct Uniforms { NAN : f32, ";t.variableNames.forEach((m,c)=>{s+=`${m.charAt(0).toLowerCase()+m.slice(1)}Shape : ${Qt(r[c].shape.length)}, `}),s+=`outShape : ${Qt(e.shape.length)}, `;let a=e.shape.length-1;s+=`
       outShapeStrides: ${Qt(a)}, `,t.size&&(s+="size : i32, "),t.uniforms&&(s+=t.uniforms),s+="};",o.push(s),t.atomic?o.push(`
    @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
  `):o.push(`
    @group(0) @binding(0) var<storage, write> result: array<${rx(e.dtype,t.isVec4)}>;
  `),t.variableNames.forEach((m,c)=>{o.push(`
    @group(0) @binding(${1+c}) var<storage, read> ${m}: array<${rx(r[c].dtype,t.isVec4)}>;
    `)}),s!==""&&o.push(`
    @group(0) @binding(${1+t.variableNames.length}) var<uniform> uniforms: Uniforms;
    `);let[i,p]=fle(e.shape,t.dispatchLayout),u=[rU,o.join(`
`),nU(e.shape),i,ple(e.shape.length)];if(t.atomic||u.push(lle(e.shape,e.dtype,t.isVec4)),p===e.shape.length){let m=r.map(c=>mle(c,e.shape,t.isVec4,t.dispatchLayout.x.length===e.shape.length)).join(`
`);u.push(m)}return u.push(t.getUserCode()),u.join(`
`)}var rU=`
  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));
  }
`;function ple(r){let e="";switch(r){case 0:case 1:e+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:e+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:e+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;default:b.assert(!1,()=>`Unsupported ${r}D shape`);break}return e}function lle(r,e,t){let n=r.length,o=rx(e,t),s;if(t?s=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result[flatIndex] = ${o}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result[flatIndex] = ${o}(value);
    }`:s=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result[flatIndex] = ${o}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result[flatIndex] = ${o}(value);
    }`,n>=2){let a=["d0","d1","d2","d3"].slice(0,n),i=Qt(n);t?s+=`
      fn setOutputAtCoords(${a.map(p=>`${p} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${a.map(p=>`${p} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:s+=`
      fn setOutputAtCoords(${a.map(p=>`${p} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${a.map(p=>`${p} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return s}function mle(r,e,t,n){let o=cle(r,t);return r.shape.length<=e.length&&(o+=dle(r,e,t,n)),o}function cle(r,e){let t=r.name,n=r.shape.length,o=Qt(n),s="get"+t.charAt(0).toUpperCase()+t.slice(1),a=["d0","d1","d2","d3"].slice(0,n),i=a.map(l=>`${l} : i32`).join(", ");if(n<1)return e?`
        fn ${s}() -> vec4<f32> {
          return vec4<f32>(${t}[0]);
        }
      `:`
      fn ${s}() ->f32 {
        return f32(${t}[0]);
      }
    `;let p=`uniforms.${t.charAt(0).toLowerCase()+t.slice(1)}Shape`,u=`${n}D`;return n===0&&(u="1D"),e?`
      fn ${s}(${i}) -> vec4<f32> {
        return vec4<f32>(${t}[getIndexFromCoords${u}(${o}(${a.join(",")}),
          ${p}) / 4]);
      }
      `:`
    fn ${s}(${i}) -> f32 {
      return f32(${t}[getIndexFromCoords${u}(${o}(${a.join(",")}),
        ${p})]);
    }
   `}function dle(r,e,t,n){let o=r.name,s=o.charAt(0).toUpperCase()+o.slice(1),a="get"+s+"ByOutput",i=r.shape.length,p=e.length,u=Qt(p);if(b.arraysEqual(r.shape,e)&&n)return t?`
        fn ${a}Index(globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${o}[globalIndex]);
        }

        fn ${a}Coords(coords : ${u}) -> vec4<f32> {
          return vec4<f32>(${o}[${p>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
        }
        `:`
      fn ${a}Index(globalIndex : i32) -> f32 {
        return f32(${o}[globalIndex]);
      }

      fn ${a}Coords(coords : ${u}) -> f32 {
        return f32(${o}[${p>1?"getOutputIndexFromCoords(coords)":"coords"}]);
      }
      `;let l=C.getBroadcastDims(r.shape,e),m=p-i,c="";if(i===0)return t?`
      fn ${a}Index(globalIndex : i32) -> vec4<f32> {
        return get${s}();
      }

      fn ${a}Coords(coords : ${u}) -> vec4<f32> {
        return get${s}();
      }
    `:`
      fn ${a}Index(globalIndex : i32) -> f32{
        return get${s}();
      }

      fn ${a}Coords(coords : ${u}) -> f32{
        return get${s}();
      }
    `;p<2&&l.length>=1?c="coords = 0;":c=l.map(g=>`coords[${g+m}] = 0;`).join(`
`);let d="";if(p<2&&i>0)d="coords";else if(p>1){let g=Qt(i),y=r.shape.map((T,x)=>`coords[${x+m}]`).join(", ");d=`${g}(${y})`}else d="coords";let f=`uniforms.${o.charAt(0).toLowerCase()+o.slice(1)}Shape`,h=`${i}D`;return t?`
      fn ${a}Index(globalIndex : i32) -> vec4<f32> {
        var coords = getCoordsFromIndex(globalIndex);
        ${c}
        return ${o}[getIndexFromCoords${h}(${d}, ${f}) / 4];
      }

      fn ${a}Coords(coordsIn : ${u}) -> vec4<f32> {
        var coords = coordsIn;
        ${c}
        return ${o}[getIndexFromCoords${h}(${d}, ${f}) / 4];
      }
    `:`
    fn ${a}Index(globalIndex : i32) -> f32 {
      var coords = getCoordsFromIndex(globalIndex);
      ${c}
      return f32(${o}[getIndexFromCoords${h}(${d}, ${f})]);
    }

    fn ${a}Coords(coordsIn : ${u}) -> f32 {
      var coords = coordsIn;
      ${c}
      return f32(${o}[getIndexFromCoords${h}(${d}, ${f})]);
    }
  `}function fle(r,e){let{x:t,y:n=[],z:o=[]}=e,s=r.length;if(t.length===s)return[`fn getOutputCoords() -> ${Qt(s)}{
      let globalIndex = getGlobalIndex();
      return getCoordsFromIndex(globalIndex);
    }
    `,s];let a="",i=[t,n,o],p=0;for(let c=0;c<i.length;c++){let d=i[c];if(d.length!==0)if(p+=d.length,d.length===1)a+=`let d${d[0]} = i32(globalId[${c}]);`;else{let f=tU(d,"uniforms.outShape");a+=`var index${c} = i32(globalId[${c}]);`;for(let h=0;h<f.length;h++)a+=`let d${d[h]} = index${c} / ${f[h]};`,h===f.length-1?a+=`let d${d[h+1]} = index${c} - d${d[h]} * ${f[h]};`:a+=`index${c} = index${c} - d${d[h]} * ${f[h]};`}}let u=[];for(let c=0;c<p;c++)u.push(`d${c}`);let l=Qt(p),m=`fn getOutputCoords() -> ${l} {
    ${a}
  `;return u.length===0?m+=`return ${l}(0); }`:m+=`return ${l}(${u.join(",")}); }`,[m,p]}function nU(r){let e=r.length;if(e<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let t=b.computeStrides(r),n=Qt(e),o=[];for(let a=0;a<e;a++)o.push(`d${a}`);if(t.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let s="var index2 = index;"+t.map((a,i)=>{let p=`let ${o[i]} = index2 / uniforms.outShapeStrides[${i}]`,u=i===t.length-1?`let ${o[i+1]} = index2 - ${o[i]} * uniforms.outShapeStrides[${i}]`:`index2 = index2 - ${o[i]} * uniforms.outShapeStrides[${i}]`;return`${p}; ${u};`}).join("");return`
    fn getCoordsFromIndex(index : i32) -> ${n} {
      ${s}
      return ${n}(${o.join(",")});
    }
  `}var ox={};Xe(ox,{ArrayBufferToTypedArray:()=>QN,GPUBytesPerElement:()=>nx,computeDispatch:()=>de,computeWorkGroupSizeForConv2d:()=>dg,computeWorkGroupSizeForMatMul:()=>YN,computeWorkPerThreadForConv2d:()=>fg,flatDispatchLayout:()=>ye,isWebGPUSupported:()=>hg,tilesFitEvenlyIntoShape:()=>ns});var Bl=r=>{let e=1;for(let t=0;t<r.length;t++)e*=r[t];return e};function ns(r,e){if(r.length!==e.length)throw new Error(`Cannot compute whether rank ${r.length} tiles fit evenly into rank ${e.length} shape - ranks must match.`);return e.every((t,n)=>t%r[n]===0)}function de(r,e,t=[1,1,1],n=[1,1,1]){let[o,s,a]=[Math.ceil(Bl(r.x.map(i=>e[i]))/(t[0]*n[0])),r.y?Math.ceil(Bl(r.y.map(i=>e[i]))/(t[1]*n[1])):1,r.z?Math.ceil(Bl(r.z.map(i=>e[i]))/(t[2]*n[2])):1];return[o,s,a]}function dg(r,e){let t=Bl(r.x.map(o=>e[o])),n=Bl(r.y.map(o=>e[o]));return t<=4?[4,16,1]:n<=4?[16,4,1]:[16,16,1]}function YN(r,e,t){return r===1?[32,1,1]:t===1?[1,32,1]:[8,8,1]}function fg(r,e){let t=Bl(r.x.map(o=>e[o])),n=Bl(r.y.map(o=>e[o]));return t<=4?[1,2,1]:n<=4?[2,1,1]:[2,2,1]}function ye(r){return{x:r.map((e,t)=>t)}}function nx(r){if(r==="float32"||r==="int32"||r==="bool"||r==="string")return 4;if(r==="complex64")return 8;throw new Error(`Unknown dtype ${r}`)}function QN(r,e){if(e==="float32")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${e}`)}function hg(){return(typeof window<"u"||typeof WorkerGlobalScope<"u")&&!!navigator.gpu}function ZN(r,e,t,n){return b.assert(n%4===0&&r[0]===4,()=>"tileInner must be divisible by 4. And ColPerThread must be 4"),`
  var<workgroup> mm_Asub : array<array<vec4<f32>, ${n/r[0]}>, ${e}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${t/r[0]}>, ${n}>;

  let RowPerThread = ${r[1]};
  let ColPerThread = ${r[0]};
  let TileInner = ${n};

  ${eo()}

    let tileRow = ${e===1?"0":"i32(localId.y) * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${e===1?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, RowPerThread>;
    var ACached : vec4<f32>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / i32(workGroupSizeY);
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / ColPerThread;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {
            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];
            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];
            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];
            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];

            for (var i = 0; i < RowPerThread; i = i + 1) {
                ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                acc[i] = BCached[3] * ACached.w + acc[i];
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
  }`}var JN=class{constructor(e,t,n,o,s,a=null,i=null,p=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[8,8,1];this.isVec4=!0;this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let u=a!=null,l=p!=null;u&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=t[1]===1?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=l,this.batchAEqualOne=o,this.batchBEqualOne=s,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],o=[this.tileAOuter,this.tileInner],s=[this.tileInner,this.tileBOuter];return[ns(o,this.aShape.slice(1)),ns(s,n.slice(1))]}getUserCode(){let e=this.fitA?"return A[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,n="",o="";if(this.activation){let i=jr(this.activation,this.isVec4);this.hasPreluActivationWeights?n=`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${i}
                }`:n=`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${i}
            }`,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        ${this.batchAEqualOne?`
          let batchASize = 0;
          let batch = 0;
        `:`
          let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / 4;
          let batch = i32(globalId.z);
        `}

        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        ${this.batchBEqualOne?`
          let batchBSize = 0;
          let batch = 0;
          `:`
          let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / 4;
          let batch = i32(globalId.z);
       `}
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${s}
          ${o}
          setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${ZN(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner)}
    `}};function gg(r,e){let t=e[1]*r[1],n=e[0]*r[0],o=t>n?t:n;return`
    var<workgroup> mm_Asub : array<array<f32, ${o}>, ${t}>;
    var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${o}>;
    ${eo()}
      let tileRow = i32(localId.y) * ${r[1]};
      let tileCol = i32(localId.x) * ${r[0]};

      let globalRow = i32(globalId.y) * ${r[1]};
      let globalCol = i32(globalId.x) * ${r[0]};

      let numTiles = (uniforms.dimInner - 1) / ${o} + 1;

      var acc : array<array<f32, ${r[0]}>, ${r[1]}>;
      var ACached : f32;
      var BCached : array<f32, ${r[0]}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let ColPerThreadA = ${o} / ${e[0]};
      let tileColA = i32(localId.x) * ColPerThreadA;
      let RowPerThreadB = ${o} / ${e[1]};
      let tileRowB = i32(localId.y) * RowPerThreadB;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;

            mm_Asub[inputRow][inputCol] = mm_readA(
                globalRow + innerRow,
                t * ${o} + inputCol, globalId);
          }
        }
        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;

            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${o} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${o}; k = k + 1) {
          for (var inner = 0; inner < ${r[0]}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
            ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}function gle(r){return`
    let TileSize = ${r[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;

    ${eo()}
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),
                                mm_readA(globalRow, colA + 1, globalId),
                                mm_readA(globalRow, colA + 2, globalId),
                                mm_readA(globalRow, colA + 3, globalId));
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var bg=class{constructor(e,t,n,o,s,a=!1,i=!1,p=null,u=null,l=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[16,16,1];this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let m=a?e[1]:e[2];this.workGroupSize=YN(t[1],m,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),b.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let c=p!=null,d=l!=null;c&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=a,this.transposeB=i,this.addBias=c,this.activation=u,this.hasPreluActivationWeights=d,this.batchAEqualOne=o,this.batchBEqualOne=s;let f=this.outputShape[2],h=this.transposeB?[this.outputShape[0],f,m]:[this.outputShape[0],m,f];[this.fitA,this.fitB]=this.getShapeFit(h),this.shaderKey=`matMulPacked_${this.workPerThread}_${a}_${i}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread,o=t>n?t:n;this.outputShape[1]===1&&(o*=4),b.assert(o%this.workGroupSize[0]===0&&o%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let s=[t,o],a=[o,n];return[ns(s,this.aShape.slice(1)),ns(a,e.slice(1))]}getUserCode(){let e;this.transposeA===!1?e=this.fitA?"return A[batch * batchASize + row * uniforms.dimInner + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A[batch * batchASize + row * uniforms.dimInner + col];
           }
           return 0.0;`:e=this.fitA?"return A[batch * batchASize + col * uniforms.dimAOuter + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A[batch* batchASize + col * uniforms.dimAOuter + row];
           }
           return 0.0;`;let t;this.transposeB===!1?t=this.fitB?"return B[batch * batchBSize + row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B[batch * batchBSize + row * uniforms.dimBOuter + col];
           }
           return 0.0;`:t=this.fitB?"return B[batch * batchBSize + col * uniforms.dimInner + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B[batch * batchBSize + col * uniforms.dimInner + row];
           }
           return 0.0;`;let n="",o="";if(this.activation){let i=jr(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${i}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${i}
              }
            `,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchAEqualOne?`
        let batch = 0;
        let batchASize = 0;
        `:`
        let batch = i32(globalId.z);
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        `}
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchBEqualOne?`
        let batch = 0;
        let batchBSize = 0;
        `:`
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        `}
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${s}
        ${o}
        setOutputAtCoords(batch, row, col, value);
      }
      ${this.outputShape[1]>1?gg([this.workPerThread,this.workPerThread,1],this.workGroupSize):gle(this.workGroupSize)}
    `}};function ble(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${eo()}
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var eD=class{constructor(e,t,n,o=!1,s=!1,a=null,i=null,p=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[256,1,1];this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize);let u=a!=null,l=p!=null;u&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.transposeA=o,this.transposeB=s,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=l,this.batchAEqualOne=t,this.batchBEqualOne=n,this.shaderKey=`matMulReduce_${this.activation}_${o}_${s}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){let e;this.transposeA===!1?e="return A[batch * batchASize + row * uniforms.dimInner + col];":e="return A[batch * batchASize + col * uniforms.dimAOuter + row];";let t;this.transposeB===!1?t="return B[batch * batchBSize + row * uniforms.dimBOuter + col];":t="return B[batch * batchBSize + col * uniforms.dimInner + row];";let n="",o="";if(this.activation){let i=jr(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${i}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${i}
              }
            `,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(batchIn: i32, row : i32, col : i32) -> f32 {
        ${this.batchAEqualOne?`
          let batchASize = 0;
          let batch = 0;
          `:`
          let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
          let batch = batchIn;
          `}
        ${e}
      }

      fn mm_readB(batchIn: i32, row : i32, col : i32) -> f32 {
        ${this.batchBEqualOne?`
          let batch = 0;
          let batchBSize = 0;
          `:`
          let batch = batchIn;
          let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
          `}
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let outCoord = vec3<i32>(batch, row, col);
        ${s}
        ${o}
        setOutputAtCoords(batch, row, col, value);
      }
      ${ble()}
    `}};function yle(r){let e=r[1]/2,t=r[0],n=e>t?e:t;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${n}>, ${e}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${t}>, ${n}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${n}>, ${e}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${t}>, ${n}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${eo()}
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${e}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${n};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${n};
        }
      } else {
        if (tileRow < ${e}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${n};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${n};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${n}; k = k + 1) {
            let subRow = tileRow - ${e};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${e}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${n};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${n};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${n}; k = k + 1) {
            let subRow = tileRow - ${e};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${e};
    if (tileRow >= ${e} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var tD=class{constructor(e,t,n,o=null,s=null,a=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[8,16,1];b.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]*2/this.workGroupSize[1]),n[0]];let i=o!=null;i&&this.variableNames.push("bias");let p=a!=null;p&&this.variableNames.push("preluActivationWeights"),this.addBias=i,this.activation=s,this.hasPreluActivationWeights=p,this.batchAEqualOne=e[0]===0,this.batchBEqualOne=t[0]===0,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){let e=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;`,t=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;`,n="",o="";if(this.activation){let i=jr(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsByOutputCoords(outCoord);
            ${i}
            }`:n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${i}
        }`,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchAEqualOne?`
          let batch = 0;
          let batchASize = 0;
          `:`
          let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
          let batch = i32(globalId.z);
          `}
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchBEqualOne?`
          let batch = 0;
          let batchBSize = 0;
          `:`
          let batch = i32(globalId.z);
          let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
          `}
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${s}
          ${o}
          setOutputAtCoords(batch, row, col, value);
        }
      }
      ${yle(this.workGroupSize)}
    `}};function Le(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=b.sizeFromShape(n.shape),a=b.inferFromImplicitShape(o,s),i=b.sizeFromShape(a);return b.assert(s===i,()=>`The new shape (${a}) has ${i} elements and the old shape (${n.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var sU={kernelName:gs,backendName:"webgpu",kernelFunc:Le};function Xc({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:p=null}){let u=r.shape.length,l=e.shape.length,m=t?r.shape[u-2]:r.shape[u-1],c=n?e.shape[l-1]:e.shape[l-2],d=t?r.shape[u-1]:r.shape[u-2],f=n?e.shape[l-2]:e.shape[l-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),y=b.sizeFromShape(h),T=b.sizeFromShape(g),I=wr.assertAndGetBroadcastShape(r.shape.slice(0,-2),e.shape.slice(0,-2)).concat([d,f]);b.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let k=t?[y,m,d]:[y,d,m],N=n?[T,f,c]:[T,c,f],P=Le({inputs:{x:r},backend:o,attrs:{shape:k}}),F=Le({inputs:{x:e},backend:o,attrs:{shape:N}}),E=[P,F],$=Math.max(y,T),U=y===1,W=T===1,V=m%4===0&&f%4===0&&!t&&!n,H;d*f<=32?H=new eD([$,d,f],U,W,t,n,s,p,a):!t&&!n&&(d<=16&&(f<=512||c>=2*f)||f<=16&&(d<=512||m>=2*d))?H=new tD(k,N,[$,d,f],s,p,a):V?H=new JN(k,[$,d,f],B().get("WEBGPU_MATMUL_WORK_PER_THREAD"),U,W,s,p,a):H=new bg(k,[$,d,f],B().get("WEBGPU_MATMUL_WORK_PER_THREAD"),U,W,t,n,s,p,a);let q=[P,F];s&&q.push(s),a&&q.push(a);let Y=[{type:"int32",data:[d]},{type:"int32",data:[f]},{type:"int32",data:[m]}];p==="leakyrelu"&&(Y.push({type:"float32",data:[i]}),H.uniforms+=" alpha : f32,");let ee=o.runWebGPUProgram(H,q,r.dtype,Y),j=Le({inputs:{x:ee},backend:o,attrs:{shape:I}});E.push(ee);for(let re of E)o.disposeData(re.dataId);return j}function Tle(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:p,transposeB:u,activation:l,leakyreluAlpha:m}=n;return Xc({a:o,b:s,transposeA:p,transposeB:u,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:m,activation:l})}var aU={kernelName:Ss,backendName:"webgpu",kernelFunc:Tle};var sx=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.workGroupSize=[128,1,1];this.size=!0;this.outputShape=C.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Ai(this.op,!1)}
      }

      ${ke()}
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};var rD=class{constructor(e,t,n,o){this.variableNames=["A","B"];this.size=!0;this.workGroupSize=[256,1,1],this.outputShape=C.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ye(this.outputShape),this.lastDimensionSize=o?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=o,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBByOutputCoords(coords);`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${Ai(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${ke()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromIndex(flatIndex);

              ${t}
              setOutputAtIndex(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}};var nD=class{constructor(e,t,n){this.variableNames=["A","B"];this.workPerThread=4;this.isVec4=!0;this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=C.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`
      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
        ${Ai(this.op,this.isVec4)}
      }
      ${ke()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
    `}};var yg=class{constructor(e,t,n){this.variableNames=["A","B"];this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=C.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`
      fn binaryOperation(a : f32, b : f32) -> f32 {
        ${Ai(this.op,!1)}
      }
      ${ke()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
      `}};function oD(r,e,t){if(b.arraysEqual(e,t)&&b.sizeFromShape(e)%4===0)return new nD(r,e,t);let o=e.length===1&&t.length>1&&e[0]<1024,s=t.length===1&&e.length>1&&t[0]<1024;return o||s?new rD(r,e,t,s):new yg(r,e,t)}function dr(r){let{inputs:e}=r,{x:t}=e;return r.backend.incRef(t.dataId),{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}var iU={kernelName:Un,backendName:"webgpu",kernelFunc:dr};function Ya(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),a=t.tensorMap.get(s.dataId),i=dr({inputs:{x:n},backend:t}),p=dr({inputs:{x:o},backend:t});return a.complexTensorInfos={real:i,imag:p},s}var uU={kernelName:Eu,backendName:"webgpu",kernelFunc:Ya};var Qa=class{constructor(e,t){this.variableNames=["A"];this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${vu(this.op,!1)}
      }
      ${ke()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function ct({opType:r,cpuKernelImpl:e,dtype:t}){return({inputs:n,backend:o})=>{let{x:s}=n,a=o,i=t||s.dtype;if(a.shouldExecuteOnCPU([s])&&e!=null){let u=a.tensorMap.get(s.dataId),l=e(u.values,i);return a.makeTensorInfo(s.shape,i,l)}let p=new Qa(s.shape,r);return a.runWebGPUProgram(p,[s],i)}}function vt({opSnippet:r,cpuKernelImpl:e,supportsComplex:t=!1,dtype:n}){return({inputs:o,backend:s})=>{let{a,b:i}=o,p=s;if(t&&a.dtype==="complex64"){let m=p.tensorMap.get(a.dataId),c=p.tensorMap.get(i.dataId),d,f;if(r!==0)[d,f]=[[m.complexTensorInfos.real,c.complexTensorInfos.real],[m.complexTensorInfos.imag,c.complexTensorInfos.imag]].map(g=>{let[y,T]=g,x={dataId:y.dataId,dtype:y.dtype,shape:a.shape},I={dataId:T.dataId,dtype:T.dtype,shape:i.shape},k=oD(r,a.shape,i.shape);return p.runWebGPUProgram(k,[x,I],Ft(y.dtype,T.dtype))});else{let g=new sx(17,a.shape,i.shape),y=new sx(18,a.shape,i.shape),T=[{dataId:m.complexTensorInfos.real.dataId,dtype:m.complexTensorInfos.real.dtype,shape:a.shape},{dataId:m.complexTensorInfos.imag.dataId,dtype:m.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:i.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:i.shape}];d=p.runWebGPUProgram(g,T,"float32"),f=p.runWebGPUProgram(y,T,"float32")}let h=Ya({inputs:{real:d,imag:f},backend:p});return p.disposeData(d.dataId),p.disposeData(f.dataId),h}let u=n||Ft(a.dtype,i.dtype);if((a.dtype==="string"||i.dtype==="string"||p.shouldExecuteOnCPU([a,i]))&&e!=null){let m=p.tensorMap.get(a.dataId).values,c=p.tensorMap.get(i.dataId).values,d=a.dtype==="string"?C.fromUint8ToStringArray(m):m,f=a.dtype==="string"?C.fromUint8ToStringArray(c):c,[h,g]=e(a.shape,i.shape,d,f,u);return p.makeTensorInfo(g,u,h)}let l=oD(r,a.shape,i.shape);return p.runWebGPUProgram(l,[a,i],u)}}var{addImpl:pU,ceilImpl:lU,concatImpl:mU,equalImpl:cU,expImpl:dU,expm1Impl:fU,floorImpl:hU,gatherNdImpl:gU,gatherV2Impl:bU,greaterEqualImpl:yU,greaterImpl:TU,lessEqualImpl:xU,lessImpl:IU,logImpl:CU,maxImpl:kU,maximumImpl:SU,minimumImpl:vU,multiplyImpl:AU,negImpl:wU,notEqualImpl:NU,prodImpl:DU,rangeImpl:PU,rsqrtImpl:MU,simpleAbsImpl:FU,sliceImpl:EU,stridedSliceImpl:RU,stringNGramsImpl:LU,subImpl:_U,tileImpl:$U,topKImpl:BU,transposeImpl:OU,uniqueImpl:JIr}=Ec;var xle=ct({opType:0,cpuKernelImpl:FU}),zU={kernelName:us,backendName:"webgpu",kernelFunc:xle};var Ile=vt({opSnippet:1,cpuKernelImpl:pU,supportsComplex:!0}),GU={kernelName:wn,backendName:"webgpu",kernelFunc:Ile};var sD=class{constructor(e){this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(o=>{e.push(`let v${o} = get${o}ByOutputCoords(coords);`)});let t=this.variableNames.map(o=>`v${o}`).join(" + ");return`
      ${ke()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function Cle(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return dr({inputs:{x:n[0]},backend:t});let o=n.map(i=>i.dtype).reduce((i,p)=>Ft(i,p)),s=n.map(i=>i.shape),a=new sD(s);return t.runWebGPUProgram(a,n,o)}var UU={kernelName:oo,backendName:"webgpu",kernelFunc:Cle};var Tg=class{constructor(e,t,n){this.workGroupSize=[64,1,1];this.variableNames=["x"];this.uniforms="axis : i32, infinityValue : f32,";this.size=!0;let o=[t];C.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.length),this.op=n==="min"?"<":">";let[s]=C.computeOutAndReduceShapes(e,o);this.outputShape=s.length===0?[1]:s,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=(s,a)=>this.outputShape.length===1?s:`${s}[${a}]`,n=s=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape[${s}]`;return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      // In order to get a flattened index into the input tensor, we need to
      // add back the index along the reduced dimension to |outputCoords|.
      // This function outputs the offset to the first value along
      // |axis| and the stride to get the next value of the input along |axis|.
      fn getInputCoordInfo(outputIndex : i32) -> vec2<i32>{
        let outputCoords = getCoordsFromIndex(outputIndex);
        var i = ${this.outputShape.length-1};

        var stride = 1;
        var inputStride = 1;
        var offset = 0;

        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {
          let length = ${n(`${this.inputShape.length} - r`)};
          if (${this.inputShape.length} - r == uniforms.axis) {
            inputStride = stride;
          } else {
            offset = offset + ${t("outputCoords","i")} * stride;
            i = i - 1;
          }
          stride = stride * length;
        }

        return vec2<i32>(offset, inputStride);
      }

      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{
        return coordInfo[0] + coordInfo[1] * index;
      }

      ${ke()}
        let outputIndex = index / i32(workGroupSizeX);
        let coordInfo = getInputCoordInfo(outputIndex);
        let Length = ${n("uniforms.axis")};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;

        for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = f32(x[getInputIndex(coordInfo, k)]);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(Length), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}};var aD=class{constructor(e,t){this.variableNames=["A"];this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${cg()}
      fn main(@builtin(local_invocation_id) localId : vec3<u32>,
              @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = A[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}};var iD=class{constructor(e,t){this.variableNames=["A"];this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=Qt(this.outputShape.length),t=kle(this.newDim);return`
      ${ke()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function kle(r){let e=r.length;if(e>4)throw Error(`Transpose for rank ${e} is not yet supported`);let t=new Array(e);for(let n=0;n<r.length;n++)t[r[n]]=`resRC[${n}]`;return t.join()}function vn(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,a=t,i=o.shape.length,p=new Array(i);for(let l=0;l<p.length;l++)p[l]=o.shape[s[l]];if(t.shouldExecuteOnCPU([o])){let m=a.tensorMap.get(o.dataId).values,c=OU(m,o.shape,o.dtype,s,p);return t.makeTensorInfo(p,o.dtype,c)}if(o.shape.length===2&&b.arraysEqual(s,[1,0])){let l=new aD(o.shape,s);return a.runWebGPUProgram(l,[o],o.dtype)}let u=new iD(o.shape,s);return a.runWebGPUProgram(u,[o],o.dtype)}var WU={kernelName:Xo,backendName:"webgpu",kernelFunc:vn};function Sle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=b.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=vn({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(p),a=C.getInnerMostAxes(a.length,p.shape.length)),C.assertAxesAreInnerMostDims("argMax",[a[0]],p.shape.length);let l=new Tg(p.shape,a[0],"max"),m=[{type:"int32",data:[a[0]]},{type:"float32",data:[Number.NEGATIVE_INFINITY]}],c=t.runWebGPUProgram(l,[p],"int32",m);return u.forEach(d=>t.disposeData(d.dataId)),c}var KU={kernelName:so,backendName:"webgpu",kernelFunc:Sle};function vle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=b.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=vn({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(p),a=C.getInnerMostAxes(a.length,p.shape.length)),C.assertAxesAreInnerMostDims("argMin",[a[0]],p.shape.length);let l=new Tg(p.shape,a[0],"min"),m=[{type:"int32",data:[a[0]]},{type:"float32",data:[Number.POSITIVE_INFINITY]}],c=t.runWebGPUProgram(l,[p],"int32",m);return u.forEach(d=>t.disposeData(d.dataId)),c}var VU={kernelName:ni,backendName:"webgpu",kernelFunc:vle};var xg=class{constructor(e,t){this.variableNames=["x"];this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,";this.workGroupSize=[128,1,1];this.size=!0;this.outputShape=e.outShape,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${ke()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}};var Ig=class{constructor(e){this.variableNames=["x"];this.uniforms="stride : vec2<i32>,";this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=e.outShape,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${ke()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};function Ale(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1,l=C.computePool2DInfo(o.shape,s,a,u,i,p);if(l.filterWidth===1&&l.filterHeight===1&&b.arraysEqual(l.inShape,l.outShape))return dr({inputs:{x:o},backend:t});let m,c=[{type:"int32",data:[l.strideHeight,l.strideWidth]}];return l.filterHeight===1&&l.filterWidth===1?m=new Ig(l):(m=new xg(l,"avg"),c.push({type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.inHeight,l.inWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]})),t.runWebGPUProgram(m,[o],o.dtype,c)}var HU={kernelName:ao,backendName:"webgpu",kernelFunc:Ale};function wle(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;return Xc({a:o,b:s,transposeA:a,transposeB:i,backend:t})}var qU={kernelName:io,backendName:"webgpu",kernelFunc:wle};var pD=class{constructor(e,t){this.variableNames=["source"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.rank=t.length,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Qt(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e=Qt(this.rank),t=Nle(this.rank),n;return this.start.length===1?n=this.outputShape.map((s,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((s,a)=>`sourceLoc.${uD[a]} = uniforms.start[${a}] + coords.${uD[a]};`),`
      ${ke()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},uD=["x","y","z","w","u","v"];function Nle(r){if(r===1)return"sourceLoc";if(r<=6)return uD.slice(0,r).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}function Za(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n,[i,p]=Tt.parseSliceParams(o,s,a);if(Tt.assertParamsValid(o,i,p),t.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=t.tensorMap.get(o.dataId),c=EU(m.values,i,p,o.shape,o.dtype);return t.makeTensorInfo(p,o.dtype,c)}if(b.sizeFromShape(p)===0)return t.makeTensorInfo(p,o.dtype,[]);let u=new pD(i,p),l=[{type:"int32",data:i}];return t.runWebGPUProgram(u,[o],o.dtype,l)}var jU={kernelName:ys,backendName:"webgpu",kernelFunc:Za};var Dle=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;b.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((T,x)=>T*x),p=C.getReshaped(o.shape,s,i),u=C.getPermuted(p.length,s.length),l=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(l,a,s.length),d=[],f=Le({inputs:{x:o},backend:t,attrs:{shape:p}}),h=vn({inputs:{x:f},backend:t,attrs:{perm:u}}),g=Le({inputs:{x:h},backend:t,attrs:{shape:l}}),y=Za({inputs:{x:g},backend:t,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(T=>t.disposeData(T.dataId)),y},XU={kernelName:ps,backendName:"webgpu",kernelFunc:Dle};var lD=vt({opSnippet:10,dtype:"bool",cpuKernelImpl:NU}),YU={kernelName:Ta,backendName:"webgpu",kernelFunc:lD};function Au(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.tensorMap.get(n.dataId);return dr({inputs:{x:o.complexTensorInfos.real},backend:t})}var QU={kernelName:Gu,backendName:"webgpu",kernelFunc:Au};function ZU(r,e){let t=new Qa(r.shape,22),n=e.runWebGPUProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function mD(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return dr({inputs:{x:o},backend:t});let a=bt(o.shape),i=mD({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),p=Ya({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeData(i.dataId),p}if(o.dtype==="complex64"){let a=Au({inputs:{input:o},backend:t}),i=mD({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeData(a.dataId),i}if(!b.hasEncodingLoss(o.dtype,s)){let a=dr({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32")return ZU(o,t);if(s==="bool"){let a=t.makeTensorInfo([],"bool",b.getTypedArrayFromDType("bool",1)),p=lD({inputs:{a:o,b:a},backend:t});return t.disposeData(a.dataId),p}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var JU={kernelName:zn,backendName:"webgpu",kernelFunc:mD};var Ple=ct({opType:1,cpuKernelImpl:lU}),eW={kernelName:uo,backendName:"webgpu",kernelFunc:Ple};var cD=class{constructor(e){this.variableNames=["A"];this.uniforms="minVal : f32, maxVal : f32,";this.workPerThread=4;this.workGroupSize=[64,1,1];this.isVec4=!0;this.size=!0;this.outputShape=e,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${ke()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isnan(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}};var dD=class{constructor(e){this.variableNames=["A"];this.uniforms="minVal : f32, maxVal : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${ke()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function Mle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i,p=[{type:"float32",data:[s]},{type:"float32",data:[a]}];return b.sizeFromShape(o.shape)%4===0?i=new cD(o.shape):i=new dD(o.shape),t.runWebGPUProgram(i,[o],o.dtype,p)}var tW={kernelName:Gn,backendName:"webgpu",kernelFunc:Mle};var fD=class{constructor(e){this.uniforms="";this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=C.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let s=1;s<this.offsetLength;s++)e.push(`else if (yC < uniforms.offset${[s]}){ setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${s-1})); }`);let n=this.offsetLength,o=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${o})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${ke()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function Ol(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.tensorMap.get(n.dataId);return dr({inputs:{x:o.complexTensorInfos.imag},backend:t})}var rW={kernelName:Bu,backendName:"webgpu",kernelFunc:Ol};function ax(r,e,t){let n=r[0].dtype;if(n==="complex64"){let d=r.map(T=>Au({inputs:{input:T},backend:t})),f=r.map(T=>Ol({inputs:{input:T},backend:t})),h=ax(d,e,t),g=ax(f,e,t),y=Ya({inputs:{real:h,imag:g},backend:t});return d.forEach(T=>t.disposeData(T.dataId)),f.forEach(T=>t.disposeData(T.dataId)),t.disposeData(h.dataId),t.disposeData(g.dataId),y}let o=t.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let d=r.map(I=>{let k=b.sizeFromShape(I.shape.slice(e));return Le({inputs:{x:I},backend:t,attrs:{shape:[-1,k]}})}),f=d.map(I=>({vals:t.readSync(I.dataId),shape:I.shape})),h=C.computeOutShape(d.map(I=>I.shape),1),g=d[0].shape[0]===1,y=mU(f,h,n,g),T=C.computeOutShape(r.map(I=>I.shape),e),x=t.makeTensorInfo(T,n,y);return d.forEach(I=>t.disposeData(I.dataId)),x}let{tensors2D:s,outShape:a}=Fle(r,e,t),i=s.map(d=>d.shape),p=new fD(i),u=[],l=new Array(i.length-1);if(l.length>0){l[0]=i[0][1],u.push({type:"int32",data:[l[0]]});for(let d=1;d<l.length;d++)l[d]=l[d-1]+i[d][1],u.push({type:"int32",data:[l[d]]})}let m=t.runWebGPUProgram(p,s,s[0].dtype,u);s.forEach(d=>t.disposeData(d.dataId));let c=Le({inputs:{x:m},backend:t,attrs:{shape:a}});return t.disposeData(m.dataId),c}function Fle(r,e,t){let n=C.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>Le({inputs:{x:s},backend:t,attrs:{shape:[b.sizeFromShape(s.shape.slice(0,e)),b.sizeFromShape(s.shape.slice(e))]}})),outShape:n}}function hD(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],a=C.computeOutShape(e.map(u=>u.shape),s);if(b.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(u=>b.sizeFromShape(u.shape)>0);if(i.length===1)return dr({inputs:{x:i[0]},backend:t});let p=i.map(u=>u.shape);return C.assertParamsConsistent(p,s),ax(i,s,t)}var nW={kernelName:ls,backendName:"webgpu",kernelFunc:hD};var gD=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.uniforms=`filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,
      dimAOuter : i32, dimBOuter : i32, dimInner : i32,`;this.workGroupSize=[8,8,1];this.isVec4=!0;this.outputShape=e.outShape,b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.outputShape[1]===1?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=o,this.hasLeakyreluAlpha=s,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),this.tileAOuter=this.outputShape[1]===1?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){let e=[this.tileAOuter,this.tileInner],t=[this.tileInner,this.tileBOuter],n=this.outputShape[1]*this.outputShape[2],o=this.outputShape[3],s=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[ns(e,[n,s]),ns(t,[s,o])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getIndexFromCoords4D(coord, uniforms.xShape);
    let divBy4Remainder${e} = flatIndex${e} % 4;
    let divBy4Index${e} = flatIndex${e} / 4;
    let curData${e} = x[divBy4Index${e}];
    if (divBy4Remainder${e} == 0) {
      temp = curData${e};
    } else {
      // TODO: This could end up being a redundant load with another one in
      // the same shader invocation. Perhaps there's an opportunity for
      // optimization
      let nextData${e} = x[divBy4Index${e} + 1];
      if (divBy4Remainder${e} == 1) {
        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);
      } else if (divBy4Remainder${e} == 2) {
        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);
      } else if (divBy4Remainder${e} == 3) {
        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);
      }
    }
    `}getUserCode(){let e=ZN(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner),o=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        var coord = vec4<i32>(
            batch,
            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
            inChCoord);
        var resData = vec4<f32>(0.0);
        ${this.convInfo.inChannels%4===0?`// The bounds checking is always needed since we use it to pad zero for
          // the 'same' padding type.
          if (coordsInBounds4D(coord, uniforms.xShape)) {
            resData = x[getIndexFromCoords4D(coord, uniforms.xShape) / 4];
          } else {
            resData = vec4<f32>(0.0); }`:`var temp = vec4<f32>(0.0);
          ${this.getSampleAWithRemainder(1)}
          resData = temp;
          if (WCol == (uniforms.filterDims[1] - 1)) {
            coord = vec4<i32>(
              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);
              ${this.getSampleAWithRemainder(2)}
            if (inChCoord == 0) {
              resData = vec4<f32>(resData.xyz, temp.x);
            } else if (inChCoord == 1) {
              resData = vec4<f32>(resData.xy, temp.xy);
            } else {
              resData = vec4<f32>(resData.x, temp.xyz);
            }
          }
          `}
        return resData;`,s=this.fitA?`${o}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${o}
         }
         return vec4<f32>(0.0);
        `,a=this.fitB?"return W[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,i="",p="";if(this.activation){let m=jr(this.activation,this.isVec4);if(this.hasPreluActivationWeights)i=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${m}
        }`;else{if(this.hasLeakyreluAlpha)throw i=`fn activation(outCoord: vec4<f32>) -> vec4<f32> {
          let b = getLeakyreluAlphaByOutputCoords(outCoord);
          ${m}
        }`,new Error("Leakyrelu is not supported.");i=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${m}
        }`}p="value = activation(value, outCoord);"}let u=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
        ${i}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          let r = row;
          let c = col * 4;
          var batch = i32(globalId.z);
          ${s}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${a}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${u}
            ${p}
            setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${e}
      `}};var bD=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[1],y:[2,3],z:[0]},this.workGroupSize=dg(this.dispatchLayout,this.outputShape),this.elementsPerThread=fg(this.dispatchLayout,this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=o,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}_${this.isChannelsLast}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;b.assert(n%this.workGroupSize[0]===0&&n%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let o=[e,n],s=[n,t],a=this.convInfo.outHeight*this.convInfo.outWidth,i=this.convInfo.outChannels,p=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[ns(o,[a,p]),ns(s,[p,i])]}getUserCode(){let e=this.isChannelsLast?`
    let coord = vec4<i32>(batch, xRow, xCol, col % inChannels);
    `:`
    let coord = vec4<i32>(batch, col % inChannels, xRow, xCol);
    `,t=this.isChannelsLast?`
    let outCoord = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let outCoord = vec4<i32>(
      batch,
      col,
      row / outWidth,
      row % outWidth);
    `,n=gg(this.elementsPerThread,this.workGroupSize),o=`
    let inChannels = uniforms.wShape[2];
    let outWidth = ${this.isChannelsLast?"uniforms.outShape[2]":"uniforms.outShape[3]"};
    let outRow = row / outWidth;
    let outCol = row % outWidth;

    let WRow = col / (uniforms.filterDims[1] * inChannels);
    let WCol = col / inChannels % uniforms.filterDims[1];
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    ${e}
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;`,s=this.fitA?`${o}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${o}
    }
    return 0.0;
    `,a=this.fitB?"return W[row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W[row * uniforms.dimBOuter + col];
	 }
	 return 0.0;
	 `,i="",p="";if(this.activation){let m=jr(this.activation,!1);this.hasPreluActivationWeights?i=`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${m}
                }`:i=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${m}
                  }
                `,p="value = activation(value, outCoord);"}let u=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
    ${i}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${s}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      ${a}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outWidth = ${this.isChannelsLast?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      ${t}
      ${u}
      ${p}
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }
    ${n}
  `}};var yD=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,";this.workGroupSize=[128,1,1];this.outputShape=e.outShape,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=o,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let s=jr(this.activation);this.hasPreluActivationWeights?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32{
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${s}
             }`:e=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{
                    ${s}
                  }
                `,t="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${e}
      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {
        let coord = vec4<i32>(batch, row, col, chan);
        if(coordsInBounds4D(coord, uniforms.xShape)) {
          return getX(batch, row, col, chan);
        }
        return 0.0;
      }

      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
        let coord = vec4<i32>(row, col, xChannel, outChannel);
        if(coordsInBounds4D(coord, uniforms.wShape)) {
          return getW(row, col, xChannel, outChannel);
        }
        return 0.0;
      }

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          ${n}
          ${t}
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${eo()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let outChannel = coords[3];

        var acc = 0.0;

        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {
              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
              let v = readInp(batch, coordRow, coordCol, xChannel);
              let f = readFilt(row, col, xChannel, outChannel);
              acc = acc + v * f;
            }
          }
        }

        writeResult(batch, coords[1], coords[2], outChannel, acc);
      }
    `}};var TD=class{constructor(e,t){this.variableNames=["A"];this.uniforms=`pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
      inChannels : i32,`;this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`
    ${ke()}

      for(var i = 0; i<${this.workPerThread}; i = i + 1) {
        let flatIndex = index * ${this.workPerThread} + i;

        let rc = getCoordsFromIndex(flatIndex);

        if(flatIndex < uniforms.size) {
          let blockIndex = rc[0];
          let pos = rc[1];

          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];
          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;
          var value = 0.0;
          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {
            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -
              uniforms.pad[0];
            let d1 = offsetX + uniforms.dilation[0] * ((pos %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
            let ch = pos % uniforms.inChannels;
            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {
              value = getA(d0, d1, ch);
            }
          }
          setOutputAtIndex(flatIndex, value);
        }
      }
    }
  `}};function Ele({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let p=t.dataFormat==="channelsLast",u=!p,l=!1,m=p&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",c,d;if(m){let g=t.inHeight*t.inWidth*t.inChannels;c=Le({inputs:{x:r},backend:n,attrs:{shape:[1,t.batchSize,g]}}),d=Le({inputs:{x:e},backend:n,attrs:{shape:[1,g,t.outChannels]}})}else c=Le({inputs:{x:r},backend:n,attrs:{shape:p?[t.batchSize,t.inHeight*t.inWidth,t.inChannels]:[t.batchSize,t.inChannels,t.inHeight*t.inWidth]}}),d=Le({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});let f=Xc({a:p?c:d,b:p?d:c,transposeA:u,transposeB:l,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),h=Le({inputs:{x:f},backend:n,attrs:{shape:t.outShape}});return n.disposeData(c.dataId),n.disposeData(d.dataId),n.disposeData(f.dataId),h}function Rle({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let{filterWidth:p,filterHeight:u,inChannels:l,strideWidth:m,strideHeight:c,padInfo:d,outWidth:f,outHeight:h,dilationWidth:g,dilationHeight:y,dataFormat:T}=t,x=T==="channelsLast",I=p*u*l,k=h*f,N=[k,I],P=!1,F=!1,E=[],$=Le({inputs:{x:r},backend:n,attrs:{shape:r.shape.slice(1)}}),U=Le({inputs:{x:e},backend:n,attrs:{shape:[1,I,-1]}});E.push($),E.push(U);let W=new TD(N,x),V=[{type:"int32",data:[d.left,d.top]},{type:"int32",data:[m,c]},{type:"int32",data:[g,y]},{type:"int32",data:[f]},{type:"int32",data:[l*p]},{type:"int32",data:[l]}],H=n.runWebGPUProgram(W,[$],$.dtype,V),q=Le({inputs:{x:H},backend:n,attrs:{shape:[1,N[0],N[1]]}});E.push(H),E.push(q);let Y=[1,N[0],N[1]],ee=new bg(Y,[1,k,t.outChannels],B().get("WEBGPU_MATMUL_WORK_PER_THREAD"),!0,!0,P,F,o,i,s),j=Y[1],re=Y[2],se=t.outChannels,ae=[{type:"int32",data:[j]},{type:"int32",data:[se]},{type:"int32",data:[re]}],le=[q,U];o&&le.push(o),s&&le.push(s),i==="leakyrelu"&&(V.push({type:"float32",data:[a]}),ee.uniforms+=" alpha : f32,");let ie=n.runWebGPUProgram(ee,le,q.dtype,ae),be=x?[1,h,f,t.outChannels]:[1,t.outChannels,h,f],he=Le({inputs:{x:ie},backend:n,attrs:{shape:be}});E.push(ie);for(let Ie of E)n.disposeData(Ie.dataId);return he}function ix({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let p=o!=null,u=s!=null,l=t.dataFormat==="channelsLast",m;if(l&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID"||t.filterHeight===1&&t.filterWidth===1&&t.dilationHeight===1&&t.dilationWidth===1&&t.strideHeight===1&&t.strideWidth===1&&(t.padInfo.type==="SAME"||t.padInfo.type==="VALID"))return Ele({x:r,filter:e,convInfo:t,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});if(B().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&r.shape[0]===1)return b.assert(l,()=>"TODO: NCHW is unimplemented"),Rle({x:r,filter:e,convInfo:t,backend:n,bias:o,preluActivationWeights:s,leakyreluAlpha:a,activation:i});let d=B().getBool("WEBGPU_USE_NAIVE_CONV2D"),f=(t.inChannels%4===0||t.inChannels===3&&t.padInfo.type==="VALID")&&t.outChannels%4===0&&l,h=[t.padInfo.top,t.padInfo.left],g=[{type:"int32",data:[t.filterHeight,t.filterWidth]},{type:"int32",data:[...h]},{type:"int32",data:[t.strideHeight,t.strideWidth]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]}];if(d)b.assert(l,()=>"TODO: NCHW is unimplemented"),m=new yD(t,p,i,u);else{f?m=new gD(t,p,i,u):m=new bD(t,p,i,u);let T=t.outHeight*t.outWidth,x=t.outChannels,I=t.filterHeight*t.filterWidth*t.inChannels;g.push({type:"int32",data:[T]},{type:"int32",data:[x]},{type:"int32",data:[I]})}let y=[r,e];return p&&y.push(o),u&&y.push(s),i==="leakyrelu"&&(g.push({type:"float32",data:[a]}),m.uniforms+=" alpha : f32,"),n.runWebGPUProgram(m,y,r.dtype,g)}function Lle(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:p,dilations:u,dimRoundingMode:l}=t,m=C.convertConv2DDataFormat(p),c=C.computeConv2DInfo(o.shape,s.shape,a,u,i,l,!1,m);return ix({x:o,filter:s,convInfo:c,backend:n})}var oW={kernelName:po,backendName:"webgpu",kernelFunc:Lle};var xD=class{constructor(e){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.outputShape=e.inShape,b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=dg(this.dispatchLayout,this.outputShape),this.elementsPerThread=fg(this.dispatchLayout,this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W[getIndexFromCoords4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }

    ${gg(this.elementsPerThread,this.workGroupSize)}
  `}};var ID=class{constructor(e){this.variableNames=["dy","W"];this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e.inShape,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${ke()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function _le(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:p,dataFormat:u,dimRoundingMode:l}=n,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(a,s.shape,i,1,p,l,!1,m),d=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.filterHeight-1-c.padInfo.top,c.filterWidth-1-c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize,c.outHeight,c.outWidth,c.outChannels]}],f;if(B().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new ID(c);else{f=new xD(c);let h=c.inShape[1]*c.inShape[2],g=c.inShape[3],y=c.filterHeight*c.filterWidth*c.outChannels;d.push({type:"uint32",data:[h]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return t.runWebGPUProgram(f,[o,s],"float32",d)}var sW={kernelName:lo,backendName:"webgpu",kernelFunc:_le};var $le=ct({opType:2}),aW={kernelName:mo,backendName:"webgpu",kernelFunc:$le};var Ble=ct({opType:3}),iW={kernelName:co,backendName:"webgpu",kernelFunc:Ble};var CD=class{constructor(e,t,n,o){this.variableNames=["Image","Boxes","BoxInd"];this.uniforms="extrapolationValue : f32,";this.workGroupSize=[64,1,1];this.size=!0;let[s]=t;this.outputShape=[s,n[0],n[1],e],this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=o==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,o,s]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,i,p]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${ke()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${o};
        let width_scale = ${i};
        let in_y = ${s};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${p};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}};var Ole=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:p,extrapolationValue:u}=n,l=new CD(o.shape[3],s.shape,i,p),m=[{type:"float32",data:[u]}];return t.runWebGPUProgram(l,[o,s,a],"float32",m)},uW={kernelName:pa,backendName:"webgpu",kernelFunc:Ole};var ux=class{constructor(e,t,n,o){this.variableNames=["x"];this.uniforms="index : f32,";this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.exclusive=n,this.reverse=o,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let e=this.outputShape.length,t=this.op==="*"?"1.0":"0.0",n=this.exclusive?t:`getX(${pW(e,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],s="",a="";return this.exclusive?(s=this.reverse?`end != ${o-1}`:"end != 0",a=this.reverse?"end + 1":"end - 1"):(s=this.reverse?`end + pow2 < ${o}`:"end >= pow2",a=this.reverse?"end + pow2":"end - pow2"),`
      ${ke()}
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${lW(e,"coords",this.op)};
         var val = ${n};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${s}) {
           let idx = ${a};
           ${lW(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${pW(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function pW(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.x, ${e}.y`;if(r===3)return`${e}.x, ${e}.y, ${e}.z`;if(r===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function lW(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.y`;if(r===3)return`${e}.z`;if(r===4)return`${e}.w`;throw Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function px(r,e,t,n,o,s){let a=e.shape.length,i=C.getAxesPermutation([n],a),p=e;i!=null&&(p=vn({inputs:{x:e},backend:t,attrs:{perm:i}}));let u=C.getInnerMostAxes(1,a)[0];if(u!==a-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${n}`);let l=p.shape[u],m=dr({inputs:{x:p},backend:t});for(let c=0;c<=Math.ceil(Math.log2(l))-1;c++){let d=new ux(r,p.shape,!1,s),f=m,h=[{type:"float32",data:[c]}];m=t.runWebGPUProgram(d,[m],m.dtype,h),t.disposeData(f.dataId)}if(o){let c=new ux(r,p.shape,o,s),d=m,f=[{type:"float32",data:[0]}];m=t.runWebGPUProgram(c,[m],m.dtype,f),t.disposeData(d.dataId)}if(i!=null){let c=C.getUndoAxesPermutation(i),d=vn({inputs:{x:m},backend:t,attrs:{perm:c}});return t.disposeData(m.dataId),t.disposeData(p.dataId),d}return m}function Gle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;return px("*",o,t,s,a,i)}var mW={kernelName:ua,backendName:"webgpu",kernelFunc:Gle};function Ule(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;return px("+",o,t,s,a,i)}var cW={kernelName:fo,backendName:"webgpu",kernelFunc:Ule};var kD=class{constructor(e,t){this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.uniforms="blockSize : i32,";this.outputShape=e,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${ke()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Wle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n,i=o.shape[0],p=a==="NHWC"?o.shape[1]:o.shape[2],u=a==="NHWC"?o.shape[2]:o.shape[3],l=a==="NHWC"?o.shape[3]:o.shape[1],m=p*s,c=u*s,d=l/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=[{type:"int32",data:[s]}],g=new kD(f,a);return t.runWebGPUProgram(g,[o],o.dtype,h)}var dW={kernelName:la,backendName:"webgpu",kernelFunc:Wle};var Cg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, inDims : vec2<i32>,";this.workGroupSize=[4,4,4];this.isVec4=!0;this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let s=jr(this.activation,this.isVec4);this.hasPreluActivation?e=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${s}
        }`:e=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
            ${s}
          }
        `,t="dotProd[i] = activation(dotProd[i], coords);"}let n=this.addBias?"dotProd[i] = dotProd[i] + getBiasByOutputCoords(coords);":"";return`
      ${e}

      ${cg()}
      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${n}
            ${t}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}};var kg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms=`pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,
      inDims : vec2<i32>, filterHeight : i32, filterWidth : i32,
      channelMul : i32,`;this.workGroupSize=[256,1,1];this.outputShape=e.outShape,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwise_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let s=jr(this.activation,!1);this.hasPreluActivation?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${s}
        }`:e=`
          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
            ${s}
          }
        `,t="dotProd = activation(dotProd, coords);"}let n=this.addBias?"dotProd = dotProd + getBiasByOutputCoords(coords);":"";return`
      ${e}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32,
          value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${eo()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / uniforms.channelMul;
        let q = d2 - d1 * uniforms.channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${n}
        ${t}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function Kle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:p,dimRoundingMode:u}=n,l=p;l==null&&(l=[1,1]);let m=C.computeConv2DInfo(o.shape,s.shape,a,l,i,u,!0),c=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]},{type:"int32",data:[m.inHeight,m.inWidth]}],d;return m.batchSize===1&&m.inHeight===m.outHeight&&m.inWidth===m.outWidth&&m.strideHeight===1&&m.strideWidth===1&&m.filterHeight===m.filterWidth&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.filterHeight===3&&m.inChannels%4===0?d=new Cg(m):(d=new kg(m),c.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.outChannels/m.inChannels]})),t.runWebGPUProgram(d,[o,s],o.dtype,c)}var fW={kernelName:ho,backendName:"webgpu",kernelFunc:Kle};var SD=vt({opSnippet:0,cpuKernelImpl:AU,supportsComplex:!0}),hW={kernelName:Fo,backendName:"webgpu",kernelFunc:SD};var vD=class{constructor(e,t){this.workGroupSize=[64,1,1];this.variableNames=["x"];this.uniforms="reduceSize : i32,";this.size=!0;this.inputShape=[e.batchSize,e.inSize];let[n]=C.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${ke()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function wi(r,e,t,n,o){let s=r.shape.length,a=[],i=b.parseAxisParam(e,r.shape),p=i,u=C.getAxesPermutation(p,s),l=r;u!=null&&(l=vn({inputs:{x:r},attrs:{perm:u},backend:o}),p=C.getInnerMostAxes(p.length,s),a.push(l)),C.assertAxesAreInnerMostDims(n,p,s);let[m,c]=C.computeOutAndReduceShapes(l.shape,p),d=m;t&&(d=C.expandShapeToKeepDim(m,i));let f;if((n==="max"||n==="prod")&&o.shouldExecuteOnCPU([l])){let h=o.tensorMap.get(l.dataId).values;switch(n){case"max":let g=kU(h,b.sizeFromShape(c),d,r.dtype);f=o.makeTensorInfo(d,r.dtype,g);break;case"prod":let{outVals:y,outShape:T,outDtype:x}=DU(l.shape,l.dtype,h,p);f=o.makeTensorInfo(T,x,y);break;default:throw new Error(`${n} CPU implementation is not yet supported.`)}}else{let h=b.sizeFromShape(c),y=b.sizeFromShape(l.shape)/h,T={windowSize:h,inSize:h,batchSize:y,outSize:1},x=n==="mean"?"float32":Zi(r.dtype),I=[{type:"int32",data:[h]}],k=new vD(T,n),N=o.runWebGPUProgram(k,[l],x,I);a.push(N),f=Le({inputs:{x:N},attrs:{shape:d},backend:o})}return a.forEach(h=>o.disposeData(h.dataId)),f}function Sg(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return wi(o,s,a,"sum",t)}var gW={kernelName:Ko,backendName:"webgpu",kernelFunc:Sg};function Vle(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:a,summedDims:i,idDims:p}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(a.length,p,s);let{path:u,steps:l}=C.getEinsumComputePath(i,p),m=l.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of l[h]){let{permutationIndices:y,expandDims:T}=C.getEinsumPermutation(d,p[g]),x;C.isIdentityPermutation(y)?x=s[g]:(x=vn({inputs:{x:s[g]},backend:t,attrs:{perm:y}}),f.push(x));let I=x.shape.slice();for(let k=0;k<T.length;++k)I.splice(T[k],0,1);b.arraysEqual(x.shape,I)||(x=Le({inputs:{x},backend:t,attrs:{shape:I}}),f.push(x)),c===null?c=x:(c=SD({inputs:{a:x,b:c},backend:t}),f.push(c))}h<m-1&&(u[h]>=0&&(c=Sg({inputs:{x:c},backend:t,attrs:{axis:u[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&t.disposeData(h.dataId);return c}var bW={kernelName:$u,backendName:"webgpu",kernelFunc:Vle};var Hle=ct({opType:4}),yW={kernelName:bo,backendName:"webgpu",kernelFunc:Hle};var qle=vt({opSnippet:4,dtype:"bool",cpuKernelImpl:cU}),TW={kernelName:ma,backendName:"webgpu",kernelFunc:qle};var AD=ct({opType:5,cpuKernelImpl:dU,dtype:"float32"}),xW={kernelName:yo,backendName:"webgpu",kernelFunc:AD};function lx(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,a=s.shape.length,i=s.shape.slice(),p=o;return o<0&&(b.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),p=a+o+1),i.splice(p,0,1),Le({inputs:{x:s},backend:n,attrs:{shape:i}})}var IW={kernelName:ms,backendName:"webgpu",kernelFunc:lx};var jle=ct({opType:6,cpuKernelImpl:fU}),CW={kernelName:ca,backendName:"webgpu",kernelFunc:jle};var wD=class{constructor(e){this.variableNames=[];this.outputShape=[];this.uniforms="value : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${ke()}
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function Ja(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||b.inferDtype(o),s==="string"){let a=b.getArrayFromDType(s,b.sizeFromShape(n));return a.fill(o),e.makeTensorInfo(n,s,a)}else{let a=new wD(n),i=[{type:"float32",data:[o]}];return e.runWebGPUProgram(a,[],s,i)}}var kW={kernelName:oi,backendName:"webgpu",kernelFunc:Ja};var ND=class{constructor(e){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${ke()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}};var SW={kernelName:da,backendName:"webgpu",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new ND(t.shape);return n.runWebGPUProgram(o,[t],t.dtype)}};var Xle=ct({opType:7,cpuKernelImpl:hU}),vW={kernelName:To,backendName:"webgpu",kernelFunc:Xle};var Yle=vt({opSnippet:12,dtype:"int32"}),AW={kernelName:xo,backendName:"webgpu",kernelFunc:Yle};var DD=class{constructor(e,t=!1){this.outputShape=[0];this.variableNames=[];this.workGroupSize=[256,1,1];this.outputShape=e,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.useImport=t,this.shaderKey=`fromPixels_${this.useImport}`}getUserCode(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${ke()}
        let flatIndexBase = index * uniforms.numChannels;
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndexBase);
            let values = ${e};
            result[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}};var NW={kernelName:Pp,backendName:"webgpu",kernelFunc:Qle},Yc;function Qle(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n;if(o==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let a=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,p=typeof HTMLCanvasElement<"u"&&o instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&o instanceof OffscreenCanvas,u=typeof ImageBitmap<"u"&&o instanceof ImageBitmap,[l,m]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],c=[m,l,s];if(B().getBool("WEBGPU_USE_IMPORT")&&a)return wW({externalImage:o,backend:t,attrs:n,outShape:c,useImport:!0});if((a||i)&&(Yc==null&&(Yc=document.createElement("canvas").getContext("2d")),Yc.canvas.width=l,Yc.canvas.height=m,Yc.drawImage(o,0,0,l,m),o=Yc.canvas),u||p||a||i)return wW({externalImage:o,backend:t,attrs:n,outShape:c,useImport:!1});let d=o.data,f=d;if(s!=null&&s!==4){f=new Uint8Array(o.width*o.height*s);let y=d.length,T=0;for(let x=0;x<y;x++)x%4<s&&(f[T++]=d[x])}let h=t.makeTensorInfo(c,"int32"),g=t.tensorMap.get(h.dataId);return g.values=new Int32Array(f),t.maybeReleaseBuffer(h.dataId),t.uploadToGPU(h.dataId),h}function wW(r){let{externalImage:e,backend:t,attrs:n,outShape:o,useImport:s}=r,{numChannels:a}=n,i=b.sizeFromShape(o),p=b.computeStrides(o),u=new DD(o,s),l=[{type:"uint32",data:[i]},{type:"uint32",data:[a]},{type:"uint32",data:[...p]},{type:"uint32",data:[...u.dispatch]}];return t.runFromPixelsProgram(u,o,l,s,e)}var PD=class{constructor(e,t,n,o,s){this.uniforms="varianceEpsilon : f32,";this.workGroupSize=[128,1,1];this.size=!0;this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(e,t),C.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),o!=null&&(C.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset")),s!=null&&(C.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale")),this.offsetShape=o,this.scaleShape=s,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${ke()}
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}};var DW={kernelName:Io,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n,scale:o,offset:s,mean:a,variance:i}=r,{varianceEpsilon:p}=e,u=t,l=[n,a,i],m=null;s!=null&&(m=s.shape,l.push(s));let c=null;o!=null&&(c=o.shape,l.push(o));let d=new PD(n.shape,a.shape,i.shape,m,c),f=[{type:"float32",data:[p]}];return u.runWebGPUProgram(d,l,n.dtype,f)}};function Zle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=C.convertConv2DDataFormat(l),g=C.computeConv2DInfo(o.shape,s.shape,p,m,u,c,!1,h);return ix({x:o,filter:s,convInfo:g,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:f,activation:d})}var PW={kernelName:vs,backendName:"webgpu",kernelFunc:Zle};function Jle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dilations:l,dimRoundingMode:m,activation:c,leakyreluAlpha:d}=n,f=l;f==null&&(f=[1,1]),b.assert(C.eitherStridesOrDilationsAreOne(p,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${p} and dilations '${f}'`);let h=C.computeConv2DInfo(o.shape,s.shape,p,f,u,m,!0),g=[o,s],y=a!=null,T=i!=null;y&&g.push(a),T&&g.push(i);let x=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]},{type:"int32",data:[h.inHeight,h.inWidth]}],I;return h.batchSize===1&&h.inHeight===h.outHeight&&h.inWidth===h.outWidth&&h.strideHeight===1&&h.strideWidth===1&&h.filterHeight===h.filterWidth&&h.inChannels===h.outChannels&&h.dilationHeight===1&&h.dilationWidth===1&&h.filterHeight===3&&h.inChannels%4===0?I=new Cg(h,y,c,T):(I=new kg(h,y,c,T),x.push({type:"int32",data:[h.filterHeight]},{type:"int32",data:[h.filterWidth]},{type:"int32",data:[h.outChannels/h.inChannels]})),c==="leakyrelu"&&(x.push({type:"float32",data:[d]}),I.uniforms+=" alpha : f32,"),t.runWebGPUProgram(I,g,"float32",x)}var MW={kernelName:As,backendName:"webgpu",kernelFunc:Jle};var MD=class{constructor(e,t){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${Qt(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${ke()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function eme(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,a=s[s.length-1],i=b.sizeFromShape(n.shape),[p,u,l,m]=C.prepareAndValidate(n,o),c=Le({inputs:{x:o},backend:t,attrs:{shape:[u,a]}}),d=Le({inputs:{x:n},backend:t,attrs:{shape:[b.sizeFromShape(n.shape)/l,l]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let T=t.readSync(o.dataId),x=t.bufferSync(n),I=gU(T,x,n.dtype,u,a,l,m,n.shape,i);return t.makeTensorInfo(p,n.dtype,I.values)}let f=new MD(a,[u,l]),h=[{type:"int32",data:[a]},{type:"int32",data:m}],g=t.runWebGPUProgram(f,[d,c],d.dtype,h),y=Le({inputs:{x:g},backend:t,attrs:{shape:p}});return t.disposeData(c.dataId),t.disposeData(d.dataId),t.disposeData(g.dataId),y}var FW={kernelName:fa,backendName:"webgpu",kernelFunc:eme};var FD=class{constructor(e,t){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=tme(this.aShape);return`
      ${ke()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function tme(r){let e=["resRC.x","resRC.y","resRC.z","resRC.w"],t=[];for(let n=0;n<r.length;n++)n===2?t.push("indexZ"):t.push(`${e[n]}`);return t.join()}function ED(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n,p=b.parseAxisParam(a,o.shape)[0],u=C.segment_util.collectGatherOpShapeInfo(o,s,p,i),l=b.sizeFromShape(s.shape),m=[],c=Le({inputs:{x:o},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),d=Le({inputs:{x:s},backend:t,attrs:{shape:[u.batchSize,l/u.batchSize]}});m.push(c),m.push(d);let f=[u.batchSize,u.outerSize,l/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([o,s])){let x=t.tensorMap.get(d.dataId).values,I=Ce(d.shape,d.dtype,x),N=t.tensorMap.get(c.dataId).values,P=Ce(c.shape,c.dtype,N),F=bU(P,I,f);return m.forEach(E=>t.disposeData(E.dataId)),t.makeTensorInfo(u.outputShape,F.dtype,F.values)}let h=new FD(c.shape,f),g=t.runWebGPUProgram(h,[c,d],c.dtype);m.push(g);let y=Le({inputs:{x:g},backend:t,attrs:{shape:u.outputShape}});return m.forEach(T=>t.disposeData(T.dataId)),y}var EW={kernelName:cs,backendName:"webgpu",kernelFunc:ED};var rme=vt({opSnippet:5,cpuKernelImpl:TU,dtype:"bool"}),RW={kernelName:ha,backendName:"webgpu",kernelFunc:rme};var nme=vt({opSnippet:6,dtype:"bool",cpuKernelImpl:yU}),LW={kernelName:Co,backendName:"webgpu",kernelFunc:nme};function ome(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n,a=[{type:"float32",data:[s]}],i=new Qa(o.shape,14);return i.uniforms="alpha : f32,",t.runWebGPUProgram(i,[o],"float32",a)}var _W={kernelName:ko,backendName:"webgpu",kernelFunc:ome};var sme=vt({opSnippet:7,dtype:"bool",cpuKernelImpl:IU}),$W={kernelName:ga,backendName:"webgpu",kernelFunc:sme};var ame=vt({opSnippet:8,dtype:"bool",cpuKernelImpl:xU}),BW={kernelName:ba,backendName:"webgpu",kernelFunc:ame};var ime=ct({opType:9,cpuKernelImpl:CU}),OW={kernelName:So,backendName:"webgpu",kernelFunc:ime};var ume=vt({opSnippet:9,dtype:"bool"}),zW={kernelName:ya,backendName:"webgpu",kernelFunc:ume};var pme=ct({opType:10}),GW={kernelName:Wi,backendName:"webgpu",kernelFunc:pme};function RD(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n;return wi(o,s,a,"max",t)}var UW={kernelName:vo,backendName:"webgpu",kernelFunc:RD};var lme=vt({opSnippet:15,cpuKernelImpl:SU}),WW={kernelName:Ao,backendName:"webgpu",kernelFunc:lme};function mme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1,l=C.computePool2DInfo(o.shape,s,a,u,i,p),m,c=[];if(l.filterHeight===1&&l.filterWidth===1){if(b.arraysEqual(l.inShape,l.outShape))return dr({inputs:{x:o},backend:t});m=new Ig(l),c.push({type:"int32",data:[l.strideHeight,l.strideWidth]})}else m=new xg(l,"max"),c.push({type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.inHeight,l.inWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]});return t.runWebGPUProgram(m,[o],o.dtype,c)}var KW={kernelName:wo,backendName:"webgpu",kernelFunc:mme};function cme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{keepDims:s,axis:a}=n;return wi(o,a,s,"mean",t)}var VW={kernelName:No,backendName:"webgpu",kernelFunc:cme};function dme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return wi(o,s,a,"min",t)}var HW={kernelName:Do,backendName:"webgpu",kernelFunc:dme};var fme=vt({opSnippet:16,cpuKernelImpl:vU}),qW={kernelName:Po,backendName:"webgpu",kernelFunc:fme};var LD=class{constructor(e,t,n){this.uniforms="";this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t.map((o,s)=>o[0]+e[s]+o[1]),this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((o,s)=>{this.uniforms+=` pad${s} : vec2<i32>,`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((u,l)=>`uniforms.pad${l}[0]`).join(","),n=this.xShape.map((u,l)=>`uniforms.pad${l}[0] + uniforms.xShape${e>1?`[${l}]`:""}`).join(","),o=e===1?"start":"start[i]",s=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",i=Qt(e),p=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${ke()}
        if (index < uniforms.size) {
          let start = ${i}(${t});
          let end = ${i}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${o}) {
              ${a} = ${o} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${s}) {
              ${a} = (${s} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${p}));
        }
      }
    `}};var jW={kernelName:Mo,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{paddings:o,mode:s}=e,a=t,i=o.map(l=>({type:"int32",data:[l[0],l[1]]})),p=new LD(n.shape,o,s);return a.runWebGPUProgram(p,[n],n.dtype,i)}};function hme(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.tensorMap.get(n.dataId),[a,i]=wU(s.values,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,a)}let o=new Qa(n.shape,11);return t.runWebGPUProgram(o,[n],n.dtype)}var XW={kernelName:ds,backendName:"webgpu",kernelFunc:hme};function gme(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p}=n,u=t.readSync(o.dataId),l=t.readSync(s.dataId),{selectedIndices:m}=br.nonMaxSuppressionV3Impl(u,l,a,i,p);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}var YW={kernelName:xa,backendName:"webgpu",kernelFunc:gme};function bme(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p,softNmsSigma:u}=n,l=t.readSync(o.dataId),m=t.readSync(s.dataId),c=a,d=i,f=p,h=u,{selectedIndices:g,selectedScores:y}=br.nonMaxSuppressionV5Impl(l,m,c,d,f,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var QW={kernelName:Ia,backendName:"webgpu",kernelFunc:bme};function vg(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=Au({inputs:{input:n},backend:t}),s=vg({inputs:{x:o},backend:t}),a=Ol({inputs:{input:n},backend:t}),i=vg({inputs:{x:a},backend:t}),p=Ya({inputs:{real:s,imag:i},backend:t});return t.disposeData(o.dataId),t.disposeData(s.dataId),t.disposeData(a.dataId),t.disposeData(i.dataId),p}else return Ja({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var ZW={kernelName:Cs,backendName:"webgpu",kernelFunc:vg};function JW(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=Au({inputs:{input:n},backend:t}),s=JW({inputs:{x:o},backend:t}),a=Ol({inputs:{input:n},backend:t}),i=vg({inputs:{x:a},backend:t}),p=Ya({inputs:{real:s,imag:i},backend:t});return t.disposeData(o.dataId),t.disposeData(s.dataId),t.disposeData(a.dataId),t.disposeData(i.dataId),p}else return Ja({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var eK={kernelName:fs,backendName:"webgpu",kernelFunc:JW};function yme(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return lx({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(l=>{b.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),b.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],p=e.map(l=>{let m=lx({inputs:{input:l},backend:t,attrs:{dim:o}});return i.push(m),m}),u=hD({inputs:p,backend:t,attrs:{axis:o}});return i.forEach(l=>t.disposeData(l.dataId)),u}var tK={kernelName:hs,backendName:"webgpu",kernelFunc:yme};var _D=class{constructor(e,t){this.variableNames=["x"];this.uniforms="constantValue : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t.map((n,o)=>n[0]+e[o]+n[1]),this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,o)=>{this.uniforms+=` pad${o} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=Qt(e),n=this.xShape.map((m,c)=>`uniforms.pad${c}[0]`).join(","),o=this.xShape.map((m,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),s=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${o})`:`${o}`,i=e>1?"any(outC < start)":"outC < start",p=e>1?"any(outC >= end)":"outC >= end",u=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${ke()}
        if (index < uniforms.size) {
          let start = ${s};
          let end = ${a};
          let outC = getCoordsFromIndex(index);

          if (${i} || ${p}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${u}));
          }
        }
      }
    `}};var $D=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;if(s.every(u=>b.arraysEqual(u,[0,0])))return dr({inputs:{x:o},backend:t});if(b.sizeFromShape(o.shape)===0){let u=s.map((l,m)=>l[0]+o.shape[m]+l[1]);return Ja({backend:t,attrs:{shape:u,value:a,dtype:o.dtype}})}let i=[{type:"float32",data:[a]}];s.map(u=>i.push({type:"int32",data:[u[0],u[1]]}));let p=new _D(o.shape,s);return t.runWebGPUProgram(p,[o],o.dtype,i)},rK={kernelName:Eo,backendName:"webgpu",kernelFunc:$D};var Tme=vt({opSnippet:13}),nK={kernelName:Ro,backendName:"webgpu",kernelFunc:Tme};function xme(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=new yg(14,n.shape,o.shape);return t.runWebGPUProgram(s,[n,o],"float32")}var oK={kernelName:Lo,backendName:"webgpu",kernelFunc:xme};function Ime(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return wi(o,s,a,"prod",t)}var sK={kernelName:_o,backendName:"webgpu",kernelFunc:Ime};var Cme=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=PU(n,o,s,a);return e.makeTensorInfo([i.length],a,i)},aK={kernelName:si,backendName:"webgpu",kernelFunc:Cme};var BD=vt({opSnippet:3}),iK={kernelName:go,backendName:"webgpu",kernelFunc:BD};var kme=ct({opType:12}),uK={kernelName:$o,backendName:"webgpu",kernelFunc:kme};var Sme=ct({opType:13}),pK={kernelName:Oo,backendName:"webgpu",kernelFunc:Sme};var OD=class{constructor(e,t,n){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${ke()}
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function vme(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,size:a,halfPixelCenters:i}=n,[p,u]=a,l=s&&p>1?1:0,m=s&&u>1?1:0,d=[{type:"float32",data:[l,m]},{type:"float32",data:[i?.5:0]}],f=new OD(o.shape,p,u);return t.runWebGPUProgram(f,[o],"float32",d)}var lK={kernelName:Bo,backendName:"webgpu",kernelFunc:vme};var zD=class{constructor(e,t,n,o){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=o,this.shaderKey=`resizeNearest_${o}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${ke()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Ame(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[p,u]=i,l=s&&p>1?1:0,m=s&&u>1?1:0,d=[{type:"float32",data:[l,m]},{type:"float32",data:[s?.5:0]}],f=new zD(o.shape,p,u,a);return t.runWebGPUProgram(f,[o],o.dtype,d)}var mK={kernelName:ai,backendName:"webgpu",kernelFunc:Ame};var GD=class{constructor(e,t){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${ke()}

          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}};var cK={kernelName:Ma,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,p=new GD(n.shape,s),[u,l]=C.getImageCenter(a,n.shape[1],n.shape[2]),m=[{type:"float32",data:[u]},{type:"float32",data:[l]},{type:"float32",data:[Math.sin(o)]},{type:"float32",data:[Math.cos(o)]}];return typeof s=="number"?m.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):m.push({type:"float32",data:s}),i.runWebGPUProgram(p,[n],n.dtype,m)}};var wme=ct({opType:15,cpuKernelImpl:MU}),dK={kernelName:zo,backendName:"webgpu",kernelFunc:wme};var UD=class{constructor(e,t,n,o,s,a,i){this.variableNames=["updates","indices"];this.workGroupSize=[64,1,1];this.atomic=!0;this.outputShape=a,this.type=i,this.dispatchLayout=ye(e),this.dispatch=de(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${o}_${this.sliceDimGreaterThanOne}_${i}`;let p=Qt(s.length);this.uniforms=`sliceDim : i32, strides: ${p}, size: i32,`,this.updatesRank=o,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",o="",s="",a="";this.updatesRank===1?(o="coords[0]",s="flattenedIndex",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.updatesRank===2&&(o="coords[0], coords[1]",s="vec2<i32>(flattenedIndex, coords[1])",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        let d0 = index / uniforms.updatesShape[1];
        let d1 = index - d0 * uniforms.updatesShape[1];
        return vec2<i32>(d0, d1);
      }
      `);let i=`getUpdates(${o})`,p=this.type==="int32"?"atomicAdd(&(result[flatIndex]), i32(updateValue));":`
     var assumed = atomicLoad(&(result[flatIndex]));
     var success = 0;
     for (; success == 0;) {
       let new = bitcast<f32>(assumed) + updateValue;
       let newI32 = bitcast<i32>(new);
       let resValue = atomicCompareExchangeWeak(&(result[flatIndex]), assumed, newI32);
       assumed = resValue[0];
       success = resValue[1];
     }
     `;return`
    ${a}

      ${ke()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue = ${i};
          let flatIndex = getOutputIndexFromCoords(${s});

         ${p}
        }
      }`}};function Nme(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:p,sliceSize:u,strides:l,outputSize:m}=C.calculateShapes(s,o,a),c=[m/u,u];if(m===0)return t.makeTensorInfo(a,o.dtype);let d=Le({inputs:{x:o},backend:t,attrs:{shape:[p,i]}}),f=Le({inputs:{x:s},backend:t,attrs:{shape:[p,u]}}),h=f.dtype,g=Ja({backend:t,attrs:{shape:c,value:0,dtype:h}}),y=b.sizeFromShape(f.shape),T=[{type:"int32",data:[i]},{type:"int32",data:l},{type:"int32",data:[y]}],x=new UD(f.shape,i,d.shape.length,f.shape.length,l,c,h),I=t.runWebGPUProgram(x,[f,d],h,T,g),k=Le({inputs:{x:I},backend:t,attrs:{shape:a}});return t.disposeData(d.dataId),t.disposeData(f.dataId),t.disposeData(I.dataId),k}var fK={kernelName:va,backendName:"webgpu",kernelFunc:Nme};var WD=class{constructor(e,t,n){this.variableNames=["c","a","b"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],a=[];for(let i=0;i<this.outputShape.length;i++)a.push(`${o[i]}`),i<this.cRank&&s.push(`${o[i]}`);e=s.join(),t=a.join()}return`
      ${ke()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function Dme(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=new WD(n.shape.length,o.shape,o.shape.length);return t.runWebGPUProgram(a,[n,o,s],Ft(o.dtype,s.dtype))}var hK={kernelName:bs,backendName:"webgpu",kernelFunc:Dme};var Pme=ct({opType:18}),gK={kernelName:Uo,backendName:"webgpu",kernelFunc:Pme};var Mme=ct({opType:16}),bK={kernelName:Go,backendName:"webgpu",kernelFunc:Mme};var Fme=ct({opType:17}),yK={kernelName:Aa,backendName:"webgpu",kernelFunc:Fme};var KD=vt({opSnippet:2,cpuKernelImpl:_U,supportsComplex:!0}),TK={kernelName:qo,backendName:"webgpu",kernelFunc:KD};function Eme(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=b.parseAxisParam([s],o.shape),i=RD({inputs:{x:o},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),p=C.expandShapeToKeepDim(i.shape,a),u=Le({inputs:{x:i},backend:t,attrs:{shape:p}}),l=KD({inputs:{a:o,b:u},backend:t}),m=AD({inputs:{x:l},backend:t}),c=Sg({inputs:{x:m},backend:t,attrs:{axis:a,keepDims:!1}}),d=Le({inputs:{x:c},backend:t,attrs:{shape:p}}),f=BD({inputs:{a:m,b:d},backend:t});return t.disposeData(i.dataId),t.disposeData(u.dataId),t.disposeData(l.dataId),t.disposeData(m.dataId),t.disposeData(c.dataId),t.disposeData(d.dataId),f}var xK={kernelName:Vo,backendName:"webgpu",kernelFunc:Eme};var Rme=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;b.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((y,T)=>y*T),p=[[0,0]];p.push(...a);for(let y=1+s.length;y<o.shape.length;++y)p.push([0,0]);let u=[],l=$D({inputs:{x:o},backend:t,attrs:{paddings:p,constantValue:0}}),m=C.getReshaped(l.shape,s,i,!1),c=C.getPermuted(m.length,s.length,!1),d=C.getReshapedPermuted(l.shape,s,i,!1),f=Le({inputs:{x:l},backend:t,attrs:{shape:m}}),h=vn({inputs:{x:f},backend:t,attrs:{perm:c}}),g=Le({inputs:{x:h},backend:t,attrs:{shape:d}});return u.push(l),u.push(f),u.push(h),u.forEach(y=>t.disposeData(y.dataId)),g},IK={kernelName:Ts,backendName:"webgpu",kernelFunc:Rme};var VD=class{constructor(e,t,n,o,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"];this.workGroupSize=[64,1,1];this.workPerThread=4;this.size=!0;this.outputShape=a,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let p=t>1;this.shaderKey=`scatter_${n}_${o}_${p}`;let u=Qt(s.length);this.uniforms=`updateSize : i32, sliceDim : i32, strides: ${u},`;let l="";n===1?l="i":n===2&&(l="i, j"),this.indicesSnippet=`getIndices(${l})`;let m="";o===1?m="i":o===2&&(m="i, coords[1]"),this.updatesSnippet=`getUpdates(${m})`,this.strideString=p?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${ke()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputAtIndex(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function Lme(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:p,numUpdates:u,strides:l,outputSize:m}=C.calculateShapes(s,o,i),c=!1,d=[{type:"int32",data:[u]},{type:"int32",data:[p]},{type:"int32",data:l}],f=new VD(u,p,o.shape.length,s.shape.length,l,[m,1],c),h=t.runWebGPUProgram(f,[s,o,a],s.dtype,d),g=Le({inputs:{x:h},backend:t,attrs:{shape:i}});return t.disposeData(h.dataId),g}var CK={kernelName:Vu,backendName:"webgpu",kernelFunc:Lme};function _me(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=b.parseAxisParam(a,o.shape)[0],p=C.prepareSplitSize(o,s,i),u=o.shape.length,l=new Array(u).fill(0),m=o.shape.slice();return p.map(c=>{let d=[...m];d[i]=c;let f=Za({inputs:{x:o},backend:t,attrs:{begin:l,size:d}});return l[i]+=c,f})}var kK={kernelName:xs,backendName:"webgpu",kernelFunc:_me};var $me=ct({opType:19}),SK={kernelName:Wo,backendName:"webgpu",kernelFunc:$me};var vK={kernelName:ii,backendName:"webgpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e,o=new Qa(t.shape,20);return n.runWebGPUProgram(o,[t],t.dtype)}};var Bme=vt({opSnippet:11}),AK={kernelName:Ho,backendName:"webgpu",kernelFunc:Bme};var HD=class{constructor(e){this.variableNames=["x"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=Qt(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let o=0;t=this.outputShape.map((s,a)=>(o++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${o-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${ke()}
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function Ome(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:p,endMask:u,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:T,end:x,strides:I}=Tt.sliceInfo(o.shape,s,a,i,p,u,l,m,c),k;if(h)k=Le({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let N=Tt.computeOutShape(T,x,I),P=Za({inputs:{x:o},backend:t,attrs:{begin:T,size:N}});k=Le({inputs:{x:P},backend:t,attrs:{shape:f}}),t.disposeData(P.dataId)}else if(t.shouldExecuteOnCPU([o])){let P=t.readSync(o.dataId),F=Ce(o.shape,o.dtype,P),E=RU(d,F,I,T);k=t.makeTensorInfo(f,o.dtype,E.values)}else{let P=new HD(d),F=[{type:"int32",data:T},{type:"int32",data:I}],E=t.runWebGPUProgram(P,[o],o.dtype,F);k=Le({inputs:{x:E},backend:t,attrs:{shape:f}}),t.disposeData(E.dataId)}return k}var wK={kernelName:wa,backendName:"webgpu",kernelFunc:Ome};function zme(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:p,preserveShortSequences:u}=n,{data:l,dataSplits:m}=e,c=t.readSync(l.dataId),d=t.readSync(m.dataId),[f,h]=LU(c,d,o,s,a,i,p,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(m.shape,"int32",h)]}var NK={kernelName:Hu,backendName:"webgpu",kernelFunc:zme};var Gme=ct({opType:21}),DK={kernelName:jo,backendName:"webgpu",kernelFunc:Gme};var qD=class{constructor(e,t){this.variableNames=["A"];this.workGroupSize=[64,1,1];this.size=!0;let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[o]*t[o];this.outputShape=n,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=Ume(this.rank,"uniforms.");return`
      ${ke()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function Ume(r,e=""){if(r>=5)throw Error(`Tile for rank ${r} is not yet supported`);if(r===1)return`(resRC % ${e}aShape)`;let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r;o++)n.push(`(${t[o]} % ${e}aShape[${o}])`);return n.join()}function Wme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(t.shouldExecuteOnCPU([o])||o.dtype==="string"||o.shape.length>=5){let p=t.readSync(o.dataId),u=o.dtype==="string"?p.map(c=>b.decodeString(c)):p,l=Ce(o.shape,o.dtype,u),m=$U(l,s);return t.makeTensorInfo(m.shape,m.dtype,m.values)}let a=new qD(o.shape,s);return t.runWebGPUProgram(a,[o],o.dtype)}var PK={kernelName:Nn,backendName:"webgpu",kernelFunc:Wme};var jD=class{constructor(e){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${ke()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},XD=class{constructor(e){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${ke()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function Qc(r,e){e!==null&&r.disposeData(e.dataId)}function MK(r){let e=1;for(;e<r;)e*=2;return e}function Kme(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n,i=o.shape,p=i[i.length-1];if(t.shouldExecuteOnCPU([o])){let k=t.readSync(o.dataId),[N,P]=BU(k,i,o.dtype,s,a);return[t.makeTensorInfo(N.shape,N.dtype,N.values),t.makeTensorInfo(P.shape,P.dtype,P.values)]}if(s===0)return i[i.length-1]=0,[t.makeTensorInfo(i,o.dtype,[]),t.makeTensorInfo(i,"int32",[])];if(p===1)return[o,Ja({attrs:{shape:i,dtype:"int32",value:0},backend:t})];let l=b.sizeFromShape(i)/p,m=Le({inputs:{x:o},attrs:{shape:[l,p]},backend:t}),c=MK(s),d=MK(p),f=null,h=()=>f===null?[m,m]:[m,f],g=(k,N,P)=>{let F=h(),E=new jD(P),U=[{type:"int32",data:[p]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[k]},{type:"int32",data:[N]}],W=f;f=t.runWebGPUProgram(E,F,"int32",U),Qc(t,W)};for(let k=1;k<c;k*=2){let N=k*2;for(let P=k;P>=1;P/=2)g(N,P,[l,d])}for(let k=d;k>c;k/=2){let N=h(),P=new XD([l,k/2]),E=[{type:"int32",data:[p]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[c]}],$=f;f=t.runWebGPUProgram(P,N,"int32",E),Qc(t,$);let U=c/2,W=U*2;for(let V=U;V>=1;V/=2)g(W,V,f.shape)}let y=f;f=Za({inputs:{x:f},backend:t,attrs:{begin:0,size:[l,s]}}),Qc(t,y);let T=ED({inputs:{x:m,indices:f},backend:t,attrs:{axis:1,batchDims:1}});Qc(t,m);let x=i.slice(0,-1);x.push(s),y=f,f=Le({inputs:{x:f},attrs:{shape:x},backend:t}),Qc(t,y);let I=T;return T=Le({inputs:{x:T},attrs:{shape:x},backend:t}),Qc(t,I),[T,f]}var FK={kernelName:Da,backendName:"webgpu",kernelFunc:Kme};var YD=class{constructor(e){this.variableNames=["Image","Transforms"];this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=ye(this.outputShape),this.dispatch=de(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${ke()}
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function Vme(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:p,outputShape:u}=n,[l,m,c,d]=o.shape,[f,h]=u??[m,c],g=[l,f,h,d],y=new YD(g),T=a==="nearest"?1:2,x;switch(i){case"constant":x=1;break;case"reflect":x=2;break;case"wrap":x=3;break;case"nearest":x=4;break;default:x=1;break}let I=[{type:"int32",data:[T]},{type:"int32",data:[x]},{type:"float32",data:[p]}];return t.runWebGPUProgram(y,[o,s],"float32",I)}var EK={kernelName:Pa,backendName:"webgpu",kernelFunc:Vme};function Hme(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,p=o.shape[s],u=new Array(i-1),l=0;for(let h=0;h<i;h++)h!==s&&(u[l++]=a.shape[h]);let m=[],c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let f=new Array(p);for(let h=0;h<f.length;h++){c[s]=h;let g=Za({inputs:{x:a},backend:t,attrs:{begin:c,size:d}}),y=Le({inputs:{x:g},backend:t,attrs:{shape:u}});f[h]=y,m.push(g)}return m.forEach(h=>t.disposeData(h.dataId)),f}var RK={kernelName:Is,backendName:"webgpu",kernelFunc:Hme};var qme=[aU,zU,GU,UU,KU,VU,HU,qU,XU,JU,eW,tW,uU,nW,oW,sW,aW,iW,uW,mW,cW,dW,fW,bW,yW,TW,xW,IW,CW,kW,SW,NW,vW,AW,DW,PW,MW,FW,EW,RW,LW,iU,rW,_W,$W,BW,OW,zW,GW,UW,WW,KW,VW,HW,qW,jW,hW,XW,YW,QW,YU,eK,tK,rK,nK,oK,sK,aK,QU,iK,uK,pK,sU,lK,mK,cK,dK,fK,hK,gK,bK,yK,jU,wK,NK,xK,IK,CK,kK,SK,vK,AK,TK,gW,DK,PK,FK,EK,WU,RK,ZW];for(let r of qme)Qi(r);var QD=class{constructor(e){this.device=e;this.numUsedBuffers=0;this.numFreeBuffers=0;this.freeBuffers=new Map;this.usedBuffers=new Map;this.numBytesUsed=0;this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){let o=LK(e,t);if(this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.usedBuffers.has(o)||this.usedBuffers.set(o,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(o).length>0){this.numFreeBuffers--;let a=this.freeBuffers.get(o).shift();return this.usedBuffers.get(o).push(a),a}this.numBytesAllocated+=e;let s=this.device.createBuffer({mappedAtCreation:n,size:e,usage:t});return this.usedBuffers.get(o).push(s),s}releaseBuffer(e,t,n){if(this.freeBuffers.size===0)return;let o=LK(t,n);this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.freeBuffers.get(o).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let s=this.usedBuffers.get(o),a=s.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");s.splice(a,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,n)},o=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function LK(r,e){return`${r}_${e}`}var ZD=class{constructor(e){this.device=e;this.numUsedTextures=0;this.numFreeTextures=0;this.freeTextures=new Map;this.usedTextures=new Map;this.numBytesUsed=0;this.numBytesAllocated=0}acquireTexture(e,t,n,o){let s=$K(n),a=e*t*s,i=_K(e,t,n,o);if(this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.usedTextures.has(i)||this.usedTextures.set(i,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(i).length>0){this.numFreeTextures--;let u=this.freeTextures.get(i).shift();return this.usedTextures.get(i).push(u),u}this.numBytesAllocated+=a;let p=this.device.createTexture({size:[e,t],format:n,usage:o});return this.usedTextures.get(i).push(p),p}releaseTexture(e,t,n,o,s){if(this.freeTextures.size===0)return;let a=_K(t,n,o,s);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(e),this.numFreeTextures++,this.numUsedTextures--;let i=this.usedTextures.get(a),p=i.indexOf(e);if(p<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(p,1);let u=$K(o),l=t*n*u;this.numBytesUsed-=l}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function _K(r,e,t,n){return`${r}_${e}_${t}_${n}`}function $K(r){if(r==="rgba8unorm")return 16;throw new Error(`${r} is not supported!`)}var BK=(r,e,t,n,o)=>{let s=[n,...t];return o&&s.push(o),r.createBindGroup({layout:e,entries:s.map((a,i)=>({binding:i,resource:a}))})},JD=(r,e,t,n,o,s=!1)=>{let a={dtype:o.dtype,shape:o.shape},i=oU(n,a,e,s),p=r.createShaderModule({code:i,label:e.constructor.name});return r.createComputePipeline({layout:t,compute:{module:p,entryPoint:"main"},label:e.constructor.name})};function e0(r,e,t=[],n="",o=""){return r.shaderKey+"_"+(r.workGroupSize?r.workGroupSize.join(","):"")+e.map(a=>a.length).join(",")+t.join(",")+r.variableNames.join(",")+n+o}var Xme=B().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),OK=(r,e)=>{let t=r.limits.maxComputeWorkgroupsPerDimension,n=e.dispatchLayout,o=e.dispatch;if(o.every(a=>a<=t))return o;b.assert(o[0]>t&&n.y===void 0&&n.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let s=Math.ceil(Math.sqrt(o[0]));return s>t?(s=Math.ceil(Math.cbrt(o[0])),b.assert(s<=t,()=>"Total dispatch size exceeds WebGPU maximum."),[s,s,s]):[s,s,1]},t0=class extends is{constructor(e,t=!1){super();this.commandQueueOwnedIds=new WeakSet;this.tensorDisposalQueue=[];this.uniformDisposalQueue=[];this.stagingDisposalQueue=[];this.textureDisposalQueue=[];this.disposed=!1;this.uploadWaitMs=0;this.downloadWaitMs=0;this.dispatchNumberInEncoder=0;this.fromPixelTextureLayout=null;this.fromPixelImportTextureLayout=null;if(!hg())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new QD(this.device),this.textureManager=new ZD(this.device),this.tensorMap=new ei(this,Hn()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),B().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return t0.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.stagingDisposalQueue.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.byteSize,e.usage)),this.textureDisposalQueue.forEach(e=>this.textureManager.releaseTexture(e.texture,e.width,e.height,e.format,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[],this.textureDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:o}=this.tensorMap.get(e);o!=null&&(this.disposeData(o.real.dataId,!0),this.disposeData(o.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}getTextureManager(){return this.textureManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);t!=null&&t.bufferInfo.buffer!=null&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()},s=b.sizeFromShape(t)*nx(n);return this.tensorMap.set(o,{dtype:n,values:e,bufferInfo:{byteSize:s,usage:this.defaultGpuBufferUsage()},refCount:1}),o}move(e,t,n,o,s){if(o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a=b.sizeFromShape(n)*nx(o);this.tensorMap.set(e,{dtype:o,values:t,bufferInfo:{byteSize:a,usage:this.defaultGpuBufferUsage()},refCount:s})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.end(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(e.values!=null)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let n=t.getMappedRange().slice(0);return t.unmap(),t!=null&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),B().getBool("WEBGPU_USE_PROFILE_TOOL")&&(b.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let o;if(t.dtype==="complex64"){let s=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=s[0],i=s[1];o=C.mergeRealAndImagArrays(a,i)}else{let s=await this.getBufferData(t);o=QN(s,t.dtype)}return this.convertAndCacheOnCPU(e,o),o}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>b.decodeString(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}async time(e){let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=b.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=b.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},p=await Promise.all(s);return i.kernelMs=b.sum(p),i.getExtraProfileInfo=()=>p.map((u,l)=>({name:a[l],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(a=>b.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return{dataId:o,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.bufferInfo.buffer==null&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values)){let n=this.bufferManager.acquireUploadBuffer(t.bufferInfo.byteSize,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),o=n.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(o).set(t.values):new Float32Array(o).set(t.values),n.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(n,0,t.bufferInfo.buffer,0,t.bufferInfo.byteSize);let s={byteSize:t.bufferInfo.byteSize,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:n};this.stagingDisposalQueue.push(s)}}makeUniforms(e){let t=0,n=[];e.forEach(i=>{i.data.length===0&&(i.data=[1]);let p;switch(i.data.length){case 1:p=4;break;case 2:p=8;break;case 3:p=16;break;case 4:p=16;break;default:b.assert(!1,()=>`Unsupported ${i.data.length}D shape`)}t=Math.ceil(t/p)*p,n.push(t),t+=i.data.length*4});let o=new ArrayBuffer(t);e.forEach((i,p)=>{let u=n[p];i.type==="int32"?new Int32Array(o,u,i.data.length).set(i.data):i.type==="uint32"?new Uint32Array(o,u,i.data.length).set(i.data):new Float32Array(o,u,i.data.length).set(i.data)});let s=this.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.queue.writeBuffer(s,0,o,0,t);let a={byteSize:t,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:s};return this.uniformDisposalQueue.push(a),{offset:0,size:t,buffer:s}}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let s=0;s<e;s++)t.push({binding:s+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t}),o=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:o}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,o,s){if(!s){if(s=this.makeTensorInfo(e.outputShape,n),b.sizeFromShape(s.shape)===0){let P=this.tensorMap.get(s.dataId);return P.values=b.getTypedArrayFromDType(s.dtype,0),s}this.uploadToGPU(s.dataId)}e.dispatch=OK(this.device,e);let a=[{type:"float32",data:[NaN]}],i=t.concat(s).map(P=>P.shape),p="int32";i.map(P=>{a.push({type:p,data:P})});let u=b.computeStrides(s.shape);if(a.push({type:p,data:u}),e.size){let P=b.sizeFromShape(e.outputShape);a.push({type:p,data:[e.isVec4?P/4:P]})}o&&(a=[...a,...o]);let l=this.makeUniforms(a),m=t.map((P,F)=>{if(P.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(P.dataId),{dtype:this.tensorMap.get(P.dataId).dtype,shape:P.shape,name:e.variableNames[F]}}),c=m.map(P=>P.dtype).concat(s.dtype),d=m.map(P=>C.getBroadcastDims(P.shape,s.shape)),f=m.map(P=>b.arraysEqual(P.shape,s.shape)).join("_"),h=d.map(P=>P.join("_")).join(";"),g=e0(e,i,c,h,f),{bindGroupLayout:y,pipelineLayout:T}=this.getCachedOrCreateLayout(e.variableNames.length),x=this.getAndSavePipeline(g,()=>JD(this.device,e,T,m,s)),I=this.activeTimers!=null,k=BK(this.device,y,t.map(P=>this.tensorToBinding(P)),this.tensorToBinding(s),l);this.ensureCommandEncoderReady();let N=this.getComputePass();return I&&this.supportTimeQuery&&N.writeTimestamp(this.querySet,0),N.setPipeline(x),N.setBindGroup(0,k),N.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),I&&this.supportTimeQuery&&N.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(P=>{this.commandQueueOwnedIds.add(P.dataId)}),this.commandQueueOwnedIds.add(s.dataId),B().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),I&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),s}getFromPixelTextureLayout(e){return e?(this.fromPixelImportTextureLayout===null&&(this.fromPixelImportTextureLayout=this.createFromPixelTextureLayout(!0)),this.fromPixelImportTextureLayout):(this.fromPixelTextureLayout===null&&(this.fromPixelTextureLayout=this.createFromPixelTextureLayout(!1)),this.fromPixelTextureLayout)}createFromPixelTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),e?t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}):t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=this.device.createBindGroupLayout({entries:t}),o=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:o}}copyExternalImageToTexture(e,t){let n=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,o="rgba8unorm",s=this.textureManager.acquireTexture(t[1],t[0],o,n),a=s.createView();this.queue.copyExternalImageToTexture({source:e},{texture:s},[t[1],t[0]]);let i={width:t[1],height:t[0],format:o,usage:n,texture:s};return this.textureDisposalQueue.push(i),a}runFromPixelsProgram(e,t,n,o,s){e.dispatch=OK(this.device,e);let a=this.makeTensorInfo(t,"int32");if(b.sizeFromShape(a.shape)===0){let g=this.tensorMap.get(a.dataId);return g.values=b.getTypedArrayFromDType(a.dtype,0),a}this.uploadToGPU(a.dataId);let i=e0(e,[a.shape]),p=this.getFromPixelTextureLayout(o),u=this.getAndSavePipeline(i,()=>JD(this.device,e,p.pipelineLayout,[],a,!0)),l;if(o){let g={source:s};l=this.device.importExternalTexture(g)}else l=this.copyExternalImageToTexture(s,a.shape);let m=this.tensorToBinding(a),c=this.makeUniforms(n),d=this.device.createBindGroup({layout:p.bindGroupLayout,entries:[{binding:0,resource:{buffer:m.buffer}},{binding:1,resource:l},{binding:2,resource:{buffer:c.buffer}}]});this.ensureCommandEncoderReady();let f=this.getComputePass(),h=this.activeTimers!=null;return h&&this.supportTimeQuery&&f.writeTimestamp(this.querySet,0),f.setPipeline(u),f.setBindGroup(0,d),f.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),h&&this.supportTimeQuery&&f.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(a.dataId),this.dispatchNumberInEncoder++,B().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),h&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),a}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let o=new BigUint64Array(n.getMappedRange()),s=Number(o[1]-o[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),s/1e6}shouldExecuteOnCPU(e,t=Xme){return B().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).bufferInfo.buffer==null&&b.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}},Zc=t0;Zc.nextDataId=0;var zK={};Xe(zK,{WebGPUBackend:()=>Zc,webgpu_util:()=>ox});hg()&&Ju("webgpu",async()=>{B().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let r={powerPreference:B().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(r),t=e.limits,n={},o=e.features.has("timestamp-query");n.requiredLimits={maxComputeWorkgroupStorageSize:t.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.maxComputeWorkgroupsPerDimension},o?n.requiredFeatures=["timestamp-query"]:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let s=await e.requestDevice(n);return new Zc(s,o)},3);var Je=(s=>(s[s.float32=0]="float32",s[s.int32=1]="int32",s[s.bool=2]="bool",s[s.string=3]="string",s[s.complex64=4]="complex64",s))(Je||{}),zl=(i=>(i[i.linear=0]="linear",i[i.relu=1]="relu",i[i.relu6=2]="relu6",i[i.prelu=3]="prelu",i[i.leakyrelu=4]="leakyrelu",i[i.sigmoid=5]="sigmoid",i[i.elu=6]="elu",i))(zl||{});var GK;function Yme(r){GK=r.wasm.cwrap(Ss,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Qme(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:p,transposeB:u,activation:l,leakyreluAlpha:m}=n,c=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(s.dataId).id,f=0;if(a!=null){let F=t.dataIdMap.get(a.dataId);if(F.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${F.shape.length}.`);f=F.id}let h=i==null?0:t.dataIdMap.get(i.dataId).id,g=zl[l];if(g==null)throw new Error(`${l} activation not yet supported for FusedConv2D in the wasm backend.`);let y=p?o.shape[2]:o.shape[1],T=u?s.shape[1]:s.shape[2],x=wr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)),I=t.makeOutput([...x,y,T],o.dtype),k=t.dataIdMap.get(I.dataId).id,N=new Uint8Array(new Int32Array(o.shape).buffer),P=new Uint8Array(new Int32Array(s.shape).buffer);return GK(c,N,o.shape.length,d,P,s.shape.length,p,u,g,f,h,m||0,k),I}var UK={kernelName:Ss,backendName:"wasm",setupFunc:Yme,kernelFunc:Qme};function dt(r,e){let t;function n(s){t=s.wasm.cwrap(r,null,["number","number","number"])}function o(s){let{backend:a,inputs:{x:i}}=s,p=a.dataIdMap.get(i.dataId).id,u=a.makeOutput(i.shape,e||i.dtype),l=a.dataIdMap.get(u.dataId).id;return b.sizeFromShape(u.shape)===0||t(p,Je[i.dtype],l),u}return{kernelName:r,backendName:"wasm",setupFunc:n,kernelFunc:o}}var WK=dt(us);function At(r,e,t){let n;function o(a){n=a.wasm.cwrap(r,null,["number","array","number","number","array","number","number","number"])}function s(a){let{backend:i,inputs:p}=a,{a:u,b:l}=p,m=i.dataIdMap.get(u.dataId).id,c=i.dataIdMap.get(l.dataId).id,d=t??u.dtype,f=C.assertAndGetBroadcastShape(u.shape,l.shape),h=i.makeOutput(f,d);if(b.sizeFromShape(f)===0)return h;let g=new Uint8Array(new Int32Array(u.shape).buffer),y=new Uint8Array(new Int32Array(l.shape).buffer),T=i.dataIdMap.get(h.dataId).id;return(()=>n(m,g,u.shape.length,c,y,l.shape.length,Je[u.dtype],T))(),h}return{kernelName:r,backendName:"wasm",setupFunc:o,kernelFunc:s}}var Zme=!0,KK=At(wn,Zme);var VK;function Jme(r){VK=r.wasm.cwrap(oo,null,["array","number","number","number"])}function ece(r){let{inputs:e,backend:t}=r,n=t.makeOutput(e[0].shape,e[0].dtype);if(b.sizeFromShape(n.shape)===0)return n;let o=e.map(i=>t.dataIdMap.get(i.dataId).id),s=new Uint8Array(new Int32Array(o).buffer),a=t.dataIdMap.get(n.dataId).id;return VK(s,o.length,Je[n.dtype],a),n}var HK={kernelName:oo,backendName:"wasm",setupFunc:Jme,kernelFunc:ece};function Gl(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype),o=t.typedArrayFromHeap(e);return t.typedArrayFromHeap(n).set(o),n}var qK={kernelName:Un,backendName:"wasm",kernelFunc:Gl};var jK;function tce(r){jK=r.wasm.cwrap(Xo,null,["number","array","number","number","number","array","number"])}function os(r){let{inputs:e,backend:t,attrs:n}=r,[o,s]=nce(e.x.shape,n.perm),a=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(a=!1);let i=rce(e.x.shape,n.perm),p={dataId:e.x.dataId,shape:o,dtype:e.x.dtype};if(a){let f=Gl({inputs:e,backend:t});return f.shape=i,f}let u=t.makeOutput(i,p.dtype),l=t.dataIdMap.get(p.dataId).id,m=t.dataIdMap.get(u.dataId).id,c=new Uint8Array(new Int32Array(s).buffer),d=new Uint8Array(new Int32Array(p.shape).buffer);return jK(l,d,p.shape.length,Je[p.dtype],m,c,s.length),u}function rce(r,e){let t=new Array(r.length);for(let n=0;n<t.length;n++)t[n]=r[e[n]];return t}function nce(r,e){let t=[],n=[];for(let o=0;o<r.length;++o)r[o]!==1&&t.push(r[o]),r[e[o]]!==1&&n.push(e[o]);for(let o=0;o<n.length;++o){let s=-1;for(let a=0;a<n.length;++a)n[a]>=o&&(s===-1||n[s]>n[a])&&(s=a);n[s]=o}return[t,n]}var XK={kernelName:Xo,backendName:"wasm",kernelFunc:os,setupFunc:tce};function An(r,e,t){let n=r.shape,o=r.shape.length,s=b.parseAxisParam(e,n),a=s,i=C.getAxesPermutation(a,o),p=null,u=!1;if(i!=null){let l=new Array(o);for(let d=0;d<l.length;d++)l[d]=n[i[d]];a=C.getInnerMostAxes(a.length,o),p=os({inputs:{x:r},attrs:{perm:i},backend:t});let m=t.dataIdMap.get(r.dataId).id;t.dataIdMap.get(p.dataId).id!==m&&(u=!0)}return{transposed:p,originalAxes:s,axes:a,inputWasTransposed:u}}var YK;function oce(r){YK=r.wasm.cwrap(Mi,null,["number, number, number"])}function sce(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,p=e.dataIdMap.get(a.dataId).id,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=An(a,o,e);if(d){let x=e.dataIdMap.get(l.dataId).id;u=l,p=x}let f=u.shape.length;C.assertAxesAreInnerMostDims("all",m,f);let[h,g]=C.computeOutAndReduceShapes(u.shape,m),y=b.sizeFromShape(g),T=e.makeOutput(h,a.dtype);if(b.sizeFromShape(u.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;YK(p,y,x)}if(d&&e.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var QK={kernelName:Mi,backendName:"wasm",setupFunc:oce,kernelFunc:sce};var ZK;function ace(r){ZK=r.wasm.cwrap(Fi,null,["number, number, number"])}function ice(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,p=e.dataIdMap.get(a.dataId).id,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=An(a,o,e);if(d){let x=e.dataIdMap.get(l.dataId).id;u=l,p=x}let f=u.shape.length;C.assertAxesAreInnerMostDims("any",m,f);let[h,g]=C.computeOutAndReduceShapes(u.shape,m),y=b.sizeFromShape(g),T=e.makeOutput(h,a.dtype);if(b.sizeFromShape(u.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;ZK(p,y,x)}if(d&&e.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var JK={kernelName:Fi,backendName:"wasm",setupFunc:ace,kernelFunc:ice};var eV;function uce(r){eV=r.wasm.cwrap(so,null,["number","number","number","number","number"])}function pce(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o}=n,{x:s}=t,a=e.dataIdMap.get(s.dataId).id,i=a,p=s,{transposed:u,axes:l,inputWasTransposed:m}=An(s,o,e);if(m){let y=e.dataIdMap.get(u.dataId).id;y!==a&&(p=u,i=y)}let c=p.shape.slice(0,-1),d=e.makeOutput(c,"int32"),f=e.dataIdMap.get(d.dataId).id,h=b.sizeFromShape(d.shape),g=p.shape[l[0]];return eV(i,Je[p.dtype],h,g,f),m&&e.disposeData(u.dataId),d}var tV={kernelName:so,backendName:"wasm",kernelFunc:pce,setupFunc:uce};var rV;function lce(r){rV=r.wasm.cwrap(ao,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function mce(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:a,strides:i,pad:p,dimRoundingMode:u}=t,l=C.computePool2DInfo(o.shape,a,i,1,p,u),m=l.filterHeight,c=l.filterWidth,d=l.padInfo.top,f=l.padInfo.right,h=l.padInfo.bottom,g=l.padInfo.left,y=l.strideHeight,T=l.strideWidth,x=l.inChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);if(l.dilationWidth!==1||l.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${l.dilationHeight}, ${l.dilationWidth}].`);let I=n.makeOutput(l.outShape,"float32"),k=n.dataIdMap.get(I.dataId).id;return rV(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,y,T,x,k),I}var nV={kernelName:ao,backendName:"wasm",setupFunc:lce,kernelFunc:mce};function fr(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=b.sizeFromShape(n.shape),a=b.inferFromImplicitShape(o,s);return b.assert(s===b.sizeFromShape(a),()=>`new shape: ${a}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var oV={kernelName:gs,backendName:"wasm",kernelFunc:fr};var sV;function cce(r){sV=r.wasm.cwrap(io,null,["number","array","number","number","array","number","number","number","number"])}function dce(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let p=o.shape.length,u=s.shape.length,l=a?o.shape[p-2]:o.shape[p-1],m=i?s.shape[u-1]:s.shape[u-2],c=a?o.shape[p-1]:o.shape[p-2],d=i?s.shape[u-2]:s.shape[u-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=b.sizeFromShape(f),y=b.sizeFromShape(h),x=wr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);b.assert(l===m,()=>`Error in matMul: inner shapes (${l}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let I=a?[g,l,c]:[g,c,l],k=i?[y,d,m]:[y,m,d],N=fr({inputs:{x:o},backend:t,attrs:{shape:I}}),P=fr({inputs:{x:s},backend:t,attrs:{shape:k}}),F=t.dataIdMap.get(N.dataId).id,E=t.dataIdMap.get(P.dataId).id,$=a?N.shape[2]:N.shape[1],U=i?P.shape[1]:P.shape[2],W=Math.max(g,y),V=t.makeOutput([W,$,U],N.dtype),H=t.dataIdMap.get(V.dataId).id,q=new Uint8Array(new Int32Array(N.shape).buffer),Y=new Uint8Array(new Int32Array(P.shape).buffer);return sV(F,q,N.shape.length,E,Y,P.shape.length,a,i,H),t.disposeData(N.dataId),t.disposeData(P.dataId),V.shape=x,V}var aV={kernelName:io,backendName:"wasm",setupFunc:cce,kernelFunc:dce};function Qs(r){let{inputs:{x:e},attrs:{begin:t,size:n},backend:o}=r,[s,a]=Tt.parseSliceParams(e,t,n),i=Tt.isSliceContinous(e.shape,s,a),p=o.readSync(e.dataId),u=o.makeOutput(a,e.dtype),l=b.computeStrides(e.shape),m=o.dataIdMap.get(u.dataId);if(i){let f=Tt.computeFlatOffset(s,l);return e.dtype==="string"?m.stringBytes=p.slice(f,f+b.sizeFromShape(a)):o.typedArrayFromHeap(u).set(p.subarray(f,f+b.sizeFromShape(a))),u}if(e.dtype==="string"){let f=vl(p,s,a,e.shape,e.dtype);return m.stringBytes=f,u}let c=o.typedArrayFromHeap(u),d=e.shape.length;if(d===2)fce(p,l[0],c,s,a);else if(d===3)hce(p,l[0],l[1],c,s,a);else if(d===4)gce(p,l[0],l[1],l[2],c,s,a);else{let f=vl(p,s,a,e.shape,e.dtype);c.set(f)}return u}function fce(r,e,t,n,o){let s=0,a=n[0],i=n[1],p=a+o[0];for(let u=a;u<p;u++){let l=u*e+i;t.set(r.subarray(l,l+o[1]),s),s+=o[1]}}function hce(r,e,t,n,o,s){let a=0,i=o[0],p=o[1],u=o[2],l=i+s[0],m=p+s[1];for(let c=i;c<l;c++)for(let d=p;d<m;d++){let f=c*e+d*t+u;n.set(r.subarray(f,f+s[2]),a),a+=s[2]}}function gce(r,e,t,n,o,s,a){let i=0,p=s[0],u=s[1],l=s[2],m=p+a[0],c=u+a[1],d=l+a[2],f=s[3];for(let h=p;h<m;h++)for(let g=u;g<c;g++)for(let y=l;y<d;y++){let T=h*e+g*t+y*n+f;o.set(r.subarray(T,T+a[3]),i),i+=a[3]}}var iV={kernelName:ys,backendName:"wasm",kernelFunc:Qs};function bce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n,i=s.reduce((y,T)=>y*T),p=C.getReshaped(o.shape,s,i),u=C.getPermuted(p.length,s.length),l=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(l,a,s.length),d=fr({inputs:{x:o},backend:t,attrs:{shape:p}}),f=os({inputs:{x:d},backend:t,attrs:{perm:u}}),h=fr({inputs:{x:f},backend:t,attrs:{shape:l}}),g=Qs({inputs:{x:h},backend:t,attrs:{begin:m,size:c}});return t.disposeData(d.dataId),t.disposeData(f.dataId),t.disposeData(d.dataId),g}var uV={kernelName:ps,backendName:"wasm",kernelFunc:bce};function wu(r){let{inputs:{x:e},attrs:{dtype:t},backend:n}=r,o=n.makeOutput(e.shape,t),s=n.typedArrayFromHeap(e);return n.typedArrayFromHeap(o).set(s),o}var pV={kernelName:zn,backendName:"wasm",kernelFunc:wu};var lV=dt(uo);var mV;function yce(r){mV=r.wasm.cwrap(Gn,null,["number","number","number","number"])}function Tce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i=t.dataIdMap.get(o.dataId).id,p=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(p.dataId).id;return mV(i,s,a,u),p}var cV={kernelName:Gn,backendName:"wasm",setupFunc:yce,kernelFunc:Tce};function r0(r){let{inputs:e,backend:t}=r,n=b.parseAxisParam(r.attrs.axis,e[0].shape)[0],o=C.computeOutShape(e.map(d=>d.shape),n),s=e.filter(d=>b.sizeFromShape(d.shape)>0);if(s.length===1)return Gl({inputs:{x:s[0]},backend:t});let a=t.makeOutput(o,e[0].dtype);if(b.sizeFromShape(o)===0)return a;let i=s.map(d=>d.shape);if(C.assertParamsConsistent(i,n),s[0].dtype==="string"){let d=s.map(x=>{let I=b.sizeFromShape(x.shape.slice(n));return fr({inputs:{x},backend:t,attrs:{shape:[-1,I]}})}),f=d.map(x=>({vals:t.readSync(x.dataId),shape:x.shape}));o=C.computeOutShape(d.map(x=>x.shape),1);let h=d[0].shape[0]===1,g=Cl(f,o,e[0].dtype,h),y=C.computeOutShape(s.map(x=>x.shape),n);a.shape=y;let T=t.dataIdMap.get(a.dataId);return T.stringBytes=C.fromStringArrayToUint8(g),d.forEach(x=>t.disposeData(x.dataId)),a}let p=b.sizeFromShape(s[0].shape.slice(0,n)),u=0,l=s.map(d=>{let f=b.sizeFromShape(d.shape.slice(n));return u+=f,f}),m=s.map(d=>t.typedArrayFromHeap(d)),c=t.typedArrayFromHeap(a);for(let d=0;d<p;d++){let f=d*u;for(let h=0;h<m.length;h++){let g=l[h],y=d*g,T=m[h].subarray(y,y+g);c.set(T,f),f+=g}}return a}var dV={kernelName:ls,backendName:"wasm",kernelFunc:r0};var fV;function xce(r){fV=r.wasm.cwrap(po,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ice(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:p,dilations:u,pad:l,dimRoundingMode:m,dataFormat:c}=t,d=C.convertConv2DDataFormat(c),f=C.computeConv2DInfo(o.shape,s.shape,p,u,l,m,!1,d),h=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,T=f.padInfo.right,x=f.padInfo.bottom,I=f.padInfo.left,k=f.dilationHeight,N=f.dilationWidth,P=f.strideHeight,F=f.strideWidth,E=f.inChannels,$=f.outChannels,U=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let W=n.makeOutput(f.outShape,"float32"),V=n.dataIdMap.get(W.dataId).id;return fV(a,o.shape[0],o.shape[1],o.shape[2],i,h,g,y,T,x,I,U,k,N,P,F,E,$,V),W}var hV={kernelName:po,backendName:"wasm",setupFunc:xce,kernelFunc:Ice};var gV;function Cce(r){gV=r.wasm.cwrap(lo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function kce(r){let{backend:e,inputs:t,attrs:n}=r,{dy:o,filter:s}=t,{strides:a,pad:i,dataFormat:p,dimRoundingMode:u,inputShape:l}=n,m=1,c=C.convertConv2DDataFormat(p),d=C.computeConv2DInfo(l,s.shape,a,m,i,u,!1,c),{batchSize:f,filterHeight:h,filterWidth:g,inChannels:y,inHeight:T,inWidth:x,outChannels:I,outHeight:k,outWidth:N,strideHeight:P,strideWidth:F}=d,E=h-1-d.padInfo.top,$=g-1-d.padInfo.left,U=d.dataFormat==="channelsLast",W=b.computeStrides(d.inShape),V=b.computeStrides(o.shape),[H,q,Y]=b.computeStrides(s.shape),ee=W[0],j=U?W[1]:W[2],re=U?W[2]:1,se=U?1:W[1],ae=V[0],le=U?V[1]:V[2],ie=U?V[2]:1,be=U?1:V[1],he=e.makeOutput(d.inShape,"float32"),Ie=e.dataIdMap.get(he.dataId).id,we=e.dataIdMap.get(o.dataId).id,Ee=e.dataIdMap.get(s.dataId).id;return gV(we,Ee,f,h,g,T,x,y,k,N,I,P,F,E,$,H,q,Y,ee,j,re,se,ae,le,ie,be,Ie),he}var bV={kernelName:lo,backendName:"wasm",setupFunc:Cce,kernelFunc:kce};var yV=dt(mo);var TV=dt(co);var xV=(t=>(t[t.bilinear=0]="bilinear",t[t.nearest=1]="nearest",t))(xV||{}),IV;function Sce(r){IV=r.wasm.cwrap(pa,null,["number","number","number","number","array","number","number","number","number","number"])}function vce(r){let{backend:e,inputs:t,attrs:n}=r,{method:o,extrapolationValue:s,cropSize:a}=n,{image:i,boxes:p,boxInd:u}=t,l=p.shape[0],[m,c]=a,d=[l,m,c,i.shape[3]],f=e.dataIdMap.get(i.dataId),h;i.dtype!=="float32"&&(h=wu({backend:e,inputs:{x:i},attrs:{dtype:"float32"}}),f=e.dataIdMap.get(h.dataId));let g=f.id,y=e.dataIdMap.get(p.dataId).id,T=e.dataIdMap.get(u.dataId).id,x=e.makeOutput(d,"float32"),I=e.dataIdMap.get(x.dataId).id,k=new Uint8Array(new Int32Array(i.shape).buffer);return IV(g,y,T,l,k,m,c,xV[o],s,I),h!=null&&e.disposeData(h.dataId),x}var CV={kernelName:pa,backendName:"wasm",setupFunc:Sce,kernelFunc:vce};var kV;function Ace(r){kV=r.wasm.cwrap(ua,null,["number","number","number","number","number","number"])}function wce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n,p=o.shape.length;b.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumprod does not support ${o.dtype} tensors in the WASM backend`);let u=C.getAxesPermutation([s],p),l=o;u!==null&&(l=os({inputs:{x:o},attrs:{perm:u},backend:t}));let m=C.getInnerMostAxes(1,p)[0];C.assertAxesAreInnerMostDims("cumprod",[m],p);let c=t.makeOutput(l.shape,l.dtype),d=l.shape[m],f=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(c.dataId).id;kV(f,a?1:0,i?1:0,d,h,Je[o.dtype]);let g=c;if(u!==null){let y=C.getUndoAxesPermutation(u);g=os({inputs:{x:c},attrs:{perm:y},backend:t}),t.disposeData(l.dataId),t.disposeData(c.dataId)}return g}var SV={kernelName:ua,backendName:"wasm",setupFunc:Ace,kernelFunc:wce};var vV;function Nce(r){vV=r.wasm.cwrap(fo,null,["number","number","number","number","number","number"])}function Dce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n,p=o.shape.length;b.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumsum does not support ${o.dtype} tensors in the WASM backend`);let u=C.getAxesPermutation([s],p),l=o;u!==null&&(l=os({inputs:{x:o},attrs:{perm:u},backend:t}));let m=C.getInnerMostAxes(1,p)[0];C.assertAxesAreInnerMostDims("cumsum",[m],p);let c=t.makeOutput(l.shape,l.dtype),d=l.shape[m],f=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(c.dataId).id;vV(f,a?1:0,i?1:0,d,h,Je[o.dtype]);let g=c;if(u!==null){let y=C.getUndoAxesPermutation(u);g=os({inputs:{x:c},attrs:{perm:y},backend:t}),t.disposeData(l.dataId),t.disposeData(c.dataId)}return g}var AV={kernelName:fo,backendName:"wasm",setupFunc:Nce,kernelFunc:Dce};var wV;function Pce(r){wV=r.wasm.cwrap(la,null,["number","number","number","array","number","array","array","number","number"])}function Mce(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n,i=o.shape[0],p=a==="NHWC"?o.shape[1]:o.shape[2],u=a==="NHWC"?o.shape[2]:o.shape[3],l=a==="NHWC"?o.shape[3]:o.shape[1],m=p*s,c=u*s,d=l/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=e.makeOutput(f,"float32"),y=e.dataIdMap.get(o.dataId).id,T=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),x=new Uint8Array(new Int32Array(f).buffer),I=new Uint8Array(new Int32Array(b.computeStrides(f)).buffer),k=e.dataIdMap.get(h.dataId).id;return wV(y,s,a==="NHWC"?1:0,T,o.shape.length-1,x,I,f.length,k),h}var NV={kernelName:la,backendName:"wasm",setupFunc:Pce,kernelFunc:Mce};var DV;function Fce(r){DV=r.wasm.cwrap(ho,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ece(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:p,dilations:u,pad:l,dimRoundingMode:m}=t,c=u??[1,1],d=C.computeConv2DInfo(o.shape,s.shape,p,c,l,m,!0),f=d.filterHeight,h=d.filterWidth,g=d.padInfo.top,y=d.padInfo.right,T=d.padInfo.bottom,x=d.padInfo.left,I=d.dilationHeight,k=d.dilationWidth,N=d.strideHeight,P=d.strideWidth,F=d.inChannels,E=d.outChannels,$=d.padInfo.type==="SAME"?1:0;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let U=n.makeOutput(d.outShape,"float32"),W=n.dataIdMap.get(U.dataId).id;return DV(a,o.shape[0],o.shape[1],o.shape[2],i,f,h,g,y,T,x,$,I,k,N,P,F,E,W),U}var PV={kernelName:ho,backendName:"wasm",setupFunc:Fce,kernelFunc:Ece};var MV=dt(bo);var Rce=!1,FV=At(ma,Rce,"bool");var EV=dt(yo,"float32");function mx(r){let{inputs:e,attrs:t,backend:n}=r,{input:o}=e,{dim:s}=t,a=o.shape.length,i=o.shape.slice(),p=s;return s<0&&(b.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),p=a+s+1),i.splice(p,0,1),fr({inputs:{x:o},backend:n,attrs:{shape:i}})}var RV={kernelName:ms,backendName:"wasm",kernelFunc:mx};function n0(r){let{attrs:{shape:e,value:t,dtype:n},backend:o}=r,s=o.makeOutput(e,n);return o.typedArrayFromHeap(s).fill(t),s}var LV={kernelName:oi,backendName:"wasm",kernelFunc:n0};var _V;function Lce(r){_V=r.wasm.cwrap(da,null,["number","number","number","number","number","number"])}function _ce(r){let{inputs:e,backend:t}=r,{image:n}=e,o=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,[i,p,u,l]=n.shape;return _V(s,i,p,u,l,a),o}var $V={kernelName:da,backendName:"wasm",kernelFunc:_ce,setupFunc:Lce};var BV=dt(To);var $ce=!1,OV=At(xo,$ce);var zV;function Bce(r){zV=r.wasm.cwrap(Io,null,["number","number","number","number","number","number","number"])}function Oce(r){let{backend:e,inputs:t,attrs:n}=r,{varianceEpsilon:o}=n,{x:s,mean:a,variance:i,offset:p,scale:u}=t,l=e.dataIdMap.get(s.dataId).id,m=e.dataIdMap.get(a.dataId).id,c=e.dataIdMap.get(i.dataId).id,d=p!=null?e.dataIdMap.get(p.dataId).id:0,f=u!=null?e.dataIdMap.get(u.dataId).id:0,h=e.makeOutput(s.shape,s.dtype);if(b.sizeFromShape(s.shape)===0)return h;let g=e.dataIdMap.get(h.dataId).id;return zV(l,m,c,d,f,o,g),h}var GV={kernelName:Io,backendName:"wasm",setupFunc:Bce,kernelFunc:Oce};var UV;function zce(r){UV=r.wasm.cwrap(vs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Gce(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dilations:l,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=t,h=C.computeConv2DInfo(o.shape,s.shape,p,l,u,c),g=zl[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let y=n.dataIdMap.get(o.dataId).id,T=n.dataIdMap.get(s.dataId).id,x=h.outChannels,I=0;if(a!=null){let ie=n.dataIdMap.get(a.dataId);if(ie.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${ie.shape.length}.`);if(ie.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${ie.shape}) does not match the number of output channels (${x})`);I=ie.id}let k=h.filterHeight,N=h.filterWidth,P=h.padInfo.top,F=h.padInfo.right,E=h.padInfo.bottom,$=h.padInfo.left,U=h.dilationHeight,W=h.dilationWidth,V=h.strideHeight,H=h.strideWidth,q=h.inChannels,Y=h.padInfo.type==="SAME"?1:0,ee=h.batchSize,j=h.inHeight,re=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let se=n.makeOutput(h.outShape,"float32"),ae=n.dataIdMap.get(se.dataId).id,le=i==null?0:n.dataIdMap.get(i.dataId).id;return UV(y,ee,j,re,T,k,N,I,P,F,E,$,Y,U,W,V,H,q,x,g,le,f||0,ae),se}var WV={kernelName:vs,backendName:"wasm",setupFunc:zce,kernelFunc:Gce};var KV;function Uce(r){KV=r.wasm.cwrap(As,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Wce(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:p,pad:u,dilations:l,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=t,h=C.computeConv2DInfo(o.shape,s.shape,p,l,u,c,!0),g=zl[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=n.dataIdMap.get(o.dataId).id,T=n.dataIdMap.get(s.dataId).id,x=h.outChannels,I=0;if(a!=null){let ie=n.dataIdMap.get(a.dataId);if(ie.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${ie.shape.length}.`);if(ie.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${ie.shape}) does not match the number of output channels (${x})`);I=ie.id}let k=h.filterHeight,N=h.filterWidth,P=h.padInfo.top,F=h.padInfo.right,E=h.padInfo.bottom,$=h.padInfo.left,U=h.dilationHeight,W=h.dilationWidth,V=h.strideHeight,H=h.strideWidth,q=h.inChannels,Y=h.padInfo.type==="SAME"?1:0,ee=h.batchSize,j=h.inHeight,re=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let se=n.makeOutput(h.outShape,"float32"),ae=n.dataIdMap.get(se.dataId).id,le=i==null?0:n.dataIdMap.get(i.dataId).id;return KV(y,ee,j,re,T,k,N,I,P,F,E,$,Y,U,W,V,H,q,x,g,le,f||0,ae),se}var VV={kernelName:As,backendName:"wasm",setupFunc:Uce,kernelFunc:Wce};var HV;function Kce(r){HV=r.wasm.cwrap(fa,null,["number","number","number","number","number","number","array","number"])}function Vce(r){let{backend:e,inputs:t}=r,{params:n,indices:o}=t,[s,a,i,p]=Db.prepareAndValidate(n,o),u=e.makeOutput(s,n.dtype);if(a===0)return u;let l=o.shape,m=l[l.length-1],d=e.dataIdMap.get(n.dataId).id,h=e.dataIdMap.get(o.dataId).id,g=new Uint8Array(new Int32Array(p).buffer),y=e.dataIdMap.get(u.dataId).id;return HV(d,Je[n.dtype],h,a,m,i,g,y),u}var qV={kernelName:fa,backendName:"wasm",setupFunc:Kce,kernelFunc:Vce};var jV;function Hce(r){jV=r.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function qce(r){let{backend:e,inputs:t,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n,p=b.parseAxisParam(a,o.shape)[0],u=e.readSync(s.dataId),l=o.shape[p];for(let E=0;E<u.length;++E){let $=u[E];b.assert($<=l-1&&$>=0,()=>`GatherV2: the index value ${$} is not in [0, ${l-1}]`)}let m=C.segment_util.collectGatherOpShapeInfo(o,s,p,i),c=fr({inputs:{x:o},attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]},backend:e}),d=b.sizeFromShape(s.shape),f=fr({inputs:{x:s},attrs:{shape:[m.batchSize,d/m.batchSize]},backend:e}),h=[m.batchSize,m.outerSize,d/m.batchSize,m.sliceSize],g=e.makeOutput(h,o.dtype);if(b.sizeFromShape(o.shape)===0)return g;let y=c.shape.length-1,x=e.dataIdMap.get(c.dataId).id,k=e.dataIdMap.get(f.dataId).id,N=e.dataIdMap.get(g.dataId).id,P=new Uint8Array(new Int32Array(b.computeStrides(c.shape)).buffer),F=new Uint8Array(new Int32Array(b.computeStrides(h)).buffer);return jV(x,Je[o.dtype],P,y,k,m.batchSize,F,N),e.disposeData(c.dataId),e.disposeData(f.dataId),g.shape=m.outputShape,g}var XV={kernelName:cs,backendName:"wasm",setupFunc:Hce,kernelFunc:qce};var jce=!1,YV=At(ha,jce,"bool");var Xce=!1,QV=At(Co,Xce,"bool");var ZV;function Yce(r){ZV=r.wasm.cwrap(ko,null,["number","number","number","number"])}function Qce(r){let{inputs:{x:e},attrs:{alpha:t},backend:n}=r,o=n.dataIdMap.get(e.dataId).id,s=n.makeOutput(e.shape,"float32");if(b.sizeFromShape(e.shape)!==0){let a=n.dataIdMap.get(s.dataId).id;ZV(o,Je[e.dtype],t,a)}return s}var JV={kernelName:ko,backendName:"wasm",setupFunc:Yce,kernelFunc:Qce};var Zce=!1,e4=At(ga,Zce,"bool");var Jce=!1,t4=At(ba,Jce,"bool");var r4=dt(So);var ede=!1,n4=At(ya,ede,"bool");var o4;function tde(r){o4=r.wasm.cwrap(vo,null,["number","number","number","number"])}function rde(r){let{backend:e,inputs:t,attrs:n}=r,{reductionIndices:o,keepDims:s}=n,{x:a}=t,p=e.dataIdMap.get(a.dataId).id,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=An(a,o,e);if(d){let x=e.dataIdMap.get(l.dataId).id;u=l,p=x}let f=u.shape.length;C.assertAxesAreInnerMostDims("max",m,f);let[h,g]=C.computeOutAndReduceShapes(u.shape,m),y=b.sizeFromShape(g),T=e.makeOutput(h,a.dtype);if(b.sizeFromShape(u.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;o4(p,Je[a.dtype],y,x)}if(d&&e.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var s4={kernelName:vo,backendName:"wasm",setupFunc:tde,kernelFunc:rde};var nde=!1,a4=At(Ao,nde);var i4;function ode(r){i4=r.wasm.cwrap(wo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function sde(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id;b.assert(o.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${o.dtype}.`);let{filterSize:a,strides:i,pad:p,dimRoundingMode:u}=t,l=C.computePool2DInfo(o.shape,a,i,1,p,u),m=l.filterHeight,c=l.filterWidth,d=l.padInfo.top,f=l.padInfo.right,h=l.padInfo.bottom,g=l.padInfo.left,y=l.dilationHeight,T=l.dilationWidth,x=l.strideHeight,I=l.strideWidth,k=l.inChannels,N=l.outChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);let P=n.makeOutput(l.outShape,"float32"),F=n.dataIdMap.get(P.dataId).id;return i4(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,y,T,x,I,k,N,F),P}var u4={kernelName:wo,backendName:"wasm",setupFunc:ode,kernelFunc:sde};var p4;function ade(r){p4=r.wasm.cwrap(No,null,["number, number, number"])}function ide(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,p=i,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=An(a,o,e),f=m;if(d){let I=e.dataIdMap.get(l.dataId).id;I!==i&&(u=l,p=I,f=C.getInnerMostAxes(f.length,u.shape.length))}C.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[h,g]=C.computeOutAndReduceShapes(u.shape,f),y=b.sizeFromShape(g),T=u;u.dtype!=="float32"&&(T=wu({backend:e,inputs:{x:u},attrs:{dtype:"float32"}}),p=e.dataIdMap.get(T.dataId).id);let x=e.makeOutput(h,"float32");if(b.sizeFromShape(u.shape)!==0){let I=e.dataIdMap.get(x.dataId).id;p4(p,y,I)}if(d&&e.disposeData(l.dataId),s){let I=C.expandShapeToKeepDim(x.shape,c);x.shape=I}return u.dtype!=="float32"&&e.disposeData(T.dataId),x}var l4={kernelName:No,backendName:"wasm",setupFunc:ade,kernelFunc:ide};var m4;function ude(r){m4=r.wasm.cwrap(Do,null,["number","number","number","number"])}function pde(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,p=i,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=An(a,o,e);if(d){let x=e.dataIdMap.get(l.dataId).id;x!==i&&(u=l,p=x)}let f=u.shape.length;C.assertAxesAreInnerMostDims("min",m,f);let[h,g]=C.computeOutAndReduceShapes(u.shape,m),y=b.sizeFromShape(g),T=e.makeOutput(h,u.dtype);if(b.sizeFromShape(u.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;m4(p,Je[a.dtype],y,x)}if(d&&e.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var c4={kernelName:Do,backendName:"wasm",setupFunc:ude,kernelFunc:pde};var lde=!1,d4=At(Po,lde);var f4=(t=>(t[t.reflect=0]="reflect",t[t.symmetric=1]="symmetric",t))(f4||{}),h4;function mde(r){h4=r.wasm.cwrap(Mo,null,["number","array","number","number","array","array","number","number"])}function cde(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,mode:o}}=r,s=n.map((f,h)=>f[0]+e.shape[h]+f[1]),a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(s,e.dtype),p=t.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(e.shape).buffer),l=n.map(f=>f[0]),m=n.map(f=>f[1]),c=new Uint8Array(new Int32Array(l).buffer),d=new Uint8Array(new Int32Array(m).buffer);return h4(a,u,e.shape.length,Je[e.dtype],c,d,f4[o],p),i}var g4={kernelName:Mo,backendName:"wasm",kernelFunc:cde,setupFunc:mde};var dde=!0,b4=At(Fo,dde);var y4=dt(ds);function Jc(r,e){let t=new Int32Array(r.wasm.HEAPU8.buffer,e,4),n=t[0],o=t[1],s=t[2],a=t[3];return r.wasm._free(e),{pSelectedIndices:n,selectedSize:o,pSelectedScores:s,pValidOutputs:a}}var T4;function fde(r){T4=r.wasm.cwrap(xa,"number",["number","number","number","number","number"])}function hde(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a}=n,{boxes:i,scores:p}=t,u=e.dataIdMap.get(i.dataId).id,l=e.dataIdMap.get(p.dataId).id,m=T4(u,l,s,o,a),{pSelectedIndices:c,selectedSize:d,pSelectedScores:f,pValidOutputs:h}=Jc(e,m);return e.wasm._free(f),e.wasm._free(h),e.makeOutput([d],"int32",c)}var x4={kernelName:xa,backendName:"wasm",setupFunc:fde,kernelFunc:hde};var I4;function gde(r){I4=r.wasm.cwrap(Vi,"number",["number","number","number","number","number","bool"])}function bde(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,padToMaxOutputSize:i}=n,{boxes:p,scores:u}=t,l=e.dataIdMap.get(p.dataId).id,m=e.dataIdMap.get(u.dataId).id,c=I4(l,m,s,o,a,i),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=Jc(e,c);e.wasm._free(h);let y=e.makeOutput([f],"int32",d),T=e.makeOutput([],"int32",g);return[y,T]}var C4={kernelName:Vi,backendName:"wasm",setupFunc:gde,kernelFunc:bde};var k4;function yde(r){k4=r.wasm.cwrap(Ia,"number",["number","number","number","number","number","number"])}function Tde(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,softNmsSigma:i}=n,{boxes:p,scores:u}=t,l=e.dataIdMap.get(p.dataId).id,m=e.dataIdMap.get(u.dataId).id,c=k4(l,m,s,o,a,i),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=Jc(e,c);e.wasm._free(g);let y=e.makeOutput([f],"int32",d),T=e.makeOutput([f],"float32",h);return[y,T]}var S4={kernelName:Ia,backendName:"wasm",setupFunc:yde,kernelFunc:Tde};var xde=!1,v4=At(Ta,xde,"bool");var A4;function Ide(r){A4=r.wasm.cwrap(Ca,null,["number","number","number","number","number"])}function Cde(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n,p=t.makeOutput([...o.shape,s],"int32"),u=t.dataIdMap.get(p.dataId).id,m=t.dataIdMap.get(o.dataId).id;return A4(m,s,a,i,u),p}var w4={kernelName:Ca,backendName:"wasm",setupFunc:Ide,kernelFunc:Cde};function kde(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(1),n}var N4={kernelName:fs,backendName:"wasm",kernelFunc:kde};function Sde(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return mx({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(l=>{b.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),b.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],p=e.map(l=>{let m=mx({inputs:{input:l},backend:t,attrs:{dim:o}});return i.push(m),m}),u=r0({inputs:p,backend:t,attrs:{axis:o}});return i.forEach(l=>t.disposeData(l.dataId)),u}var D4={kernelName:hs,backendName:"wasm",kernelFunc:Sde};var P4;function vde(r){P4=r.wasm.cwrap(Eo,null,["number","array","number","number","array","array","number","number"])}function Ade(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,constantValue:o}}=r,s=n.map((h,g)=>h[0]+e.shape[g]+h[1]);if(b.sizeFromShape(e.shape)===0)return n0({backend:t,attrs:{shape:s,value:o,dtype:e.dtype}});let a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(s,e.dtype),u=t.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(e.shape).buffer),m=n.map(h=>h[0]),c=n.map(h=>h[1]),d=new Uint8Array(new Int32Array(m).buffer),f=new Uint8Array(new Int32Array(c).buffer);return P4(a,l,e.shape.length,Je[e.dtype],d,f,o,u),i}var cx={kernelName:Eo,backendName:"wasm",kernelFunc:Ade,setupFunc:vde};var wde=!1,M4=At(Ro,wde);var F4;function Nde(r){F4=r.wasm.cwrap(Lo,null,["number","number","number"])}function Dde(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,i=s,p=n,u=p;p.dtype!=="float32"&&(u=wu({backend:t,inputs:{x:n},attrs:{dtype:"float32"}}),i=t.dataIdMap.get(u.dataId).id);let l=t.makeOutput(n.shape,"float32"),m=t.dataIdMap.get(l.dataId).id;return F4(i,a,m),p.dtype!=="float32"&&t.disposeData(u.dataId),l}var E4={kernelName:Lo,backendName:"wasm",setupFunc:Nde,kernelFunc:Dde};var R4;function Pde(r){R4=r.wasm.cwrap(_o,null,["number","number","number","number"])}function Mde(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,p=i,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=An(a,o,e),f=m;if(d){let x=e.dataIdMap.get(l.dataId).id;x!==i&&(u=l,p=x,f=C.getInnerMostAxes(f.length,u.shape.length))}C.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[h,g]=C.computeOutAndReduceShapes(u.shape,f),y=b.sizeFromShape(g),T=e.makeOutput(h,u.dtype);if(b.sizeFromShape(u.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;R4(p,y,Je[T.dtype],x)}if(d&&e.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var L4={kernelName:_o,backendName:"wasm",setupFunc:Pde,kernelFunc:Mde};var Fde=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=Sl(n,o,s,a),p=e.makeOutput([i.length],a);return e.typedArrayFromHeap(p).set(i),p},_4={kernelName:si,backendName:"wasm",kernelFunc:Fde};var Ede=!0,$4=At(go,Ede);var B4=dt($o);var O4=dt(Oo);var z4;function Rde(r){z4=r.wasm.cwrap(Bo,null,["number","number","number","number","number","number","number","number","number","number"])}function Lde(r){let{backend:e,inputs:t,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[p,u]=i,[l,m,c,d]=o.shape,f=[l,p,u,d],h=e.dataIdMap.get(o.dataId),g;h.dtype!=="float32"&&(g=wu({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),h=e.dataIdMap.get(g.dataId));let y=h.id,T=e.makeOutput(f,"float32");if(b.sizeFromShape(o.shape)===0)return T;let x=e.dataIdMap.get(T.dataId).id;return z4(y,l,m,c,d,p,u,s?1:0,a?1:0,x),g!=null&&e.disposeData(g.dataId),T}var G4={kernelName:Bo,backendName:"wasm",setupFunc:Rde,kernelFunc:Lde};var U4;function _de(r){U4=r.wasm.cwrap(ka,null,["number","array","number","array","number","number"])}function $de(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,a=b.parseAxisParam(s,o.shape);if(o.shape.length===0)return Gl({inputs:{x:o},backend:t});let i=t.makeOutput(o.shape,o.dtype),p=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(a).buffer),m=new Uint8Array(new Int32Array(o.shape).buffer);U4(p,l,a.length,m,o.shape.length,u);let c=fr({inputs:{x:i},attrs:{shape:o.shape},backend:t});return t.disposeData(i.dataId),c}var W4={kernelName:ka,backendName:"wasm",kernelFunc:$de,setupFunc:_de};var K4;function Bde(r){K4=r.wasm.cwrap(Ma,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Ode(r){let{inputs:e,backend:t,attrs:n}=r,{image:o}=e,{radians:s,fillValue:a,center:i}=n,p=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(o.dataId).id,l=t.dataIdMap.get(p.dataId).id,[m,c,d,f]=o.shape,[h,g]=C.getImageCenter(i,c,d),y=a===0,T=255,x=typeof a=="number"?[a,a,a,y?0:T]:[...a,T],I=new Uint8Array(new Int32Array(x).buffer);return K4(u,m,c,d,f,s,h,g,I,x.length,l),p}var V4={kernelName:Ma,backendName:"wasm",kernelFunc:Ode,setupFunc:Bde};var H4=dt(Sa);var q4=dt(zo);var j4;function zde(r){j4=r.wasm.cwrap(va,null,["number","number","number","number","number","number","array","number","number"])}function Gde(r){let{backend:e,inputs:t,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,i=e.makeOutput(a,s.dtype);if(b.sizeFromShape(a)===0)return i;let{sliceRank:p,numUpdates:u,sliceSize:l,strides:m,outputSize:c}=Ad.calculateShapes(s,o,a),f=e.dataIdMap.get(o.dataId).id,g=e.dataIdMap.get(s.dataId).id,y=new Uint8Array(new Int32Array(m).buffer),T=e.dataIdMap.get(i.dataId).id;return j4(f,g,Je[s.dtype],p,u,l,y,c,T),i}var X4={kernelName:va,backendName:"wasm",setupFunc:zde,kernelFunc:Gde};var Y4;function Ude(r){Y4=r.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Wde(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(s.dataId).id,u=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(u.dataId).id,m=n.shape.length,c=o.shape.length,d=m===0||m>1||c===1?1:b.sizeFromShape(o.shape.slice(1));return Y4(a,i,p,d,l),u}var Q4={kernelName:bs,backendName:"wasm",kernelFunc:Wde,setupFunc:Ude};var Z4;function Kde(r){Z4=r.wasm.cwrap(Uo,null,["number","number"])}function Vde(r){let{backend:e,inputs:{x:t}}=r,n=e.dataIdMap.get(t.dataId).id,o=e.makeOutput(t.shape,t.dtype),s=e.dataIdMap.get(o.dataId).id;return b.sizeFromShape(o.shape)===0||Z4(n,s),o}var J4={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Kde,kernelFunc:Vde};var eH=dt(Go);var tH;function Hde(r){tH=r.wasm.cwrap(Vo,null,["number","number","number","number"])}function qde(r){let{backend:e,inputs:{logits:t},attrs:{dim:n}}=r,o=e.dataIdMap.get(t.dataId).id,s=e.makeOutput(t.shape,t.dtype),a=e.dataIdMap.get(s.dataId).id,i=t.shape[n],p=b.sizeFromShape(t.shape)/i;return b.sizeFromShape(s.shape)===0||tH(o,a,i,p),s}var rH={kernelName:Vo,backendName:"wasm",setupFunc:Hde,kernelFunc:qde};function jde(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n,i=b.sizeFromShape(s),p=[[0,0]];p.push(...a);for(let N=1+s.length;N<o.shape.length;++N)p.push([0,0]);let u=cx.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:p,constantValue:0}}),l=C.getReshaped(u.shape,s,i,!1),m=C.getPermuted(l.length,s.length,!1),c=C.getReshapedPermuted(u.shape,s,i,!1),h=fr({inputs:{x:u},backend:t,attrs:{shape:l}}),T=os({inputs:{x:h},backend:t,attrs:{perm:m}}),k=fr({inputs:{x:T},backend:t,attrs:{shape:c}});return t.disposeData(u.dataId),t.disposeData(h.dataId),t.disposeData(T.dataId),k}var nH={kernelName:Ts,backendName:"wasm",kernelFunc:jde};var oH;function Xde(r){oH=r.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function Yde(r){let{backend:e,inputs:t}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=t,i=n.shape[0],p=n.shape[1],u=e.readSync(s.dataId)[0],l=[i+u,p],m=e.dataIdMap.get(n.dataId).id,c=e.dataIdMap.get(o.dataId).id,d=e.dataIdMap.get(a.dataId).id,f=e.makeOutput(l,n.dtype),h=e.dataIdMap.get(f.dataId).id,g=e.makeOutput(l.slice(0,1),o.dtype),y=e.dataIdMap.get(g.dataId).id,T=e.makeOutput([u],"bool"),x=e.dataIdMap.get(T.dataId).id,I=e.makeOutput([i],n.dtype),k=e.dataIdMap.get(I.dataId).id,N=e.makeOutput([4],"int32"),P=e.dataIdMap.get(N.dataId).id,F=oH(m,c,Je[o.dtype],i,u,p,d,h,y,x,k,P),E=e.readSync(N.dataId),$;switch(E[0]){case 1:{$=C.getSparseFillEmptyRowsIndicesDenseShapeMismatch(E[1]);break}case 2:{$=C.getSparseFillEmptyRowsNegativeIndexErrorMessage(E[1],E[2]);break}case 3:$=C.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(E[1],E[2],E[3]);break;default:$=""}if(e.disposeData(N.dataId),$)throw e.disposeData(f.dataId),e.disposeData(g.dataId),e.disposeData(T.dataId),e.disposeData(I.dataId),new Error($);let U=f,W=g;return F!==l[0]&&(U=Qs({inputs:{x:f},attrs:{begin:0,size:[F,p]},backend:e}),W=Qs({inputs:{x:g},attrs:{begin:0,size:F},backend:e}),e.disposeData(f.dataId),e.disposeData(g.dataId)),[U,W,T,I]}var sH={kernelName:Uu,backendName:"wasm",setupFunc:Xde,kernelFunc:Yde};var aH;function Qde(r){aH=r.wasm.cwrap(Yi,null,["number","number","number","number","number","number","number"])}function Zde(r){let{backend:e,inputs:t}=r,{inputIndices:n,inputShape:o,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=e.dataIdMap.get(n.dataId).id,i=e.dataIdMap.get(o.dataId).id,p=e.dataIdMap.get(s.dataId).id,u=n.shape[0],l=b.sizeFromShape(s.shape),m=e.makeOutput([u,l],n.dtype),c=e.dataIdMap.get(m.dataId).id,d=e.makeOutput([l],s.dtype),f=e.dataIdMap.get(d.dataId).id,h=e.makeOutput([3],"int32"),g=e.dataIdMap.get(h.dataId).id;aH(a,i,p,u,c,f,g);let y=e.readSync(h.dataId),T;switch(y[0]){case 0:{T=C.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{T=C.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:T=C.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let x=Array.from(e.readSync(o.dataId)),I=Array.from(e.readSync(d.dataId));T=C.getSparseReshapeInputOutputMultipleErrorMessage(x,I);break}case 4:{let x=Array.from(e.readSync(o.dataId)),I=Array.from(e.readSync(d.dataId));T=C.getSparseReshapeInputOutputMismatchErrorMessage(x,I);break}default:T=""}if(e.disposeData(h.dataId),T)throw e.disposeData(m.dataId),e.disposeData(d.dataId),new Error(T);return[m,d]}var iH={kernelName:Yi,backendName:"wasm",setupFunc:Qde,kernelFunc:Zde};var uH;function dx(r){uH=r.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function fx(r,e){let{backend:t,inputs:n}=r,{data:o,indices:s,segmentIds:a}=n,i=s.shape[0],p=t.readSync(a.dataId,i-1,i)[0],l=i>0?p+1:0;if(l<0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=o.shape.slice();m[0]=l;let c=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(s.dataId).id,f=t.dataIdMap.get(a.dataId).id,h=t.makeOutput(m,o.dtype),g=t.dataIdMap.get(h.dataId).id,y=t.makeOutput([4],"int32"),T=t.dataIdMap.get(y.dataId).id;uH(c,Je[o.dtype],o.shape[0],d,f,g,T,e,0);let x=t.readSync(y.dataId),I;switch(x[0]){case 0:{I=C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{I=C.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:I=C.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:I=C.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:I=""}if(t.disposeData(y.dataId),I)throw t.disposeData(h.dataId),new Error(I);return h}function Jde(r){return fx(r,!0)}var pH={kernelName:Wu,backendName:"wasm",setupFunc:dx,kernelFunc:Jde};function efe(r){return fx(r,!1)}var lH={kernelName:Ku,backendName:"wasm",setupFunc:dx,kernelFunc:efe};function tfe(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=t,i=b.parseAxisParam(a,o.shape)[0],p=C.prepareSplitSize(o,s,i),u=new Array(o.shape.length).fill(0),l=o.shape.slice();return p.map(m=>{let c=[...l];c[i]=m;let d=Qs({inputs:{x:o},attrs:{begin:u,size:c},backend:n});return u[i]+=m,d})}var mH={kernelName:xs,backendName:"wasm",kernelFunc:tfe};var cH=dt(Wo);var dH=dt(ii);var rfe=!0,fH=At(Ho,rfe);var hH;function nfe(r){hH=r.wasm.cwrap(ks,null,["number","number","number","number"])}function ofe(r){let{backend:e,inputs:t,attrs:n}=r,{alpha:o}=n,{x:s}=t,a=e.dataIdMap.get(s.dataId).id,i=e.makeOutput(s.shape,s.dtype),p=e.dataIdMap.get(i.dataId).id;return hH(a,o,Je[s.dtype],p),i}var gH={kernelName:ks,backendName:"wasm",setupFunc:nfe,kernelFunc:ofe};var bH;function sfe(r){bH=r.wasm.cwrap(wa,null,["number","array","number","array","array","array","array","array","number","number"])}function afe(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i,beginMask:p,endMask:u,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:y,begin:T,end:x,strides:I}=Tt.sliceInfo(o.shape,s,a,i,p,u,l,m,c),k;if(h)k=fr({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||y){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let N=Tt.computeOutShape(T,x,I),P=Qs({inputs:{x:o},backend:e,attrs:{begin:T,size:N}});k=fr({inputs:{x:P},backend:e,attrs:{shape:f}}),e.disposeData(P.dataId)}else{let N=e.makeOutput(d,"float32"),P=e.dataIdMap.get(o.dataId).id,F=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),E=new Uint8Array(new Int32Array(T).buffer),$=new Uint8Array(new Int32Array(x).buffer),U=new Uint8Array(new Int32Array(I).buffer),W=new Uint8Array(new Int32Array(d).buffer),V=new Uint8Array(new Int32Array(b.computeStrides(d)).buffer),H=e.dataIdMap.get(N.dataId).id;bH(P,F,o.shape.length,E,$,U,W,V,d.length,H),k=fr({inputs:{x:N},backend:e,attrs:{shape:f}}),e.disposeData(N.dataId)}return k}var yH={kernelName:wa,backendName:"wasm",setupFunc:sfe,kernelFunc:afe};var ife=!0,TH=At(qo,ife);var xH;function ufe(r){xH=r.wasm.cwrap(Ko,null,["number","number","number","number"])}function pfe(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,p=i,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=An(a,o,e),f=m;if(d){let x=e.dataIdMap.get(l.dataId).id;x!==i&&(u=l,p=x,f=C.getInnerMostAxes(f.length,u.shape.length))}C.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[h,g]=C.computeOutAndReduceShapes(u.shape,f),y=b.sizeFromShape(g),T=e.makeOutput(h,u.dtype);if(b.sizeFromShape(u.shape)!==0){let x=e.dataIdMap.get(T.dataId).id;xH(p,y,Je[T.dtype],x)}if(d&&e.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var IH={kernelName:Ko,backendName:"wasm",setupFunc:ufe,kernelFunc:pfe};var CH=dt(Na);var kH=dt(jo);var SH;function lfe(r){SH=r.wasm.cwrap(Nn,null,["number","array","number","array","number","number"])}function mfe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,s=t.dataIdMap.get(o.dataId).id,{reps:a}=n,i=new Array(o.shape.length);for(let c=0;c<i.length;c++)i[c]=o.shape[c]*a[c];let p=new Uint8Array(new Int32Array(o.shape).buffer),u=new Uint8Array(new Int32Array(i).buffer),l=t.makeOutput(i,o.dtype),m=t.dataIdMap.get(l.dataId).id;return SH(s,p,o.shape.length,u,i.length,Je[l.dtype],m),l}var vH={kernelName:Nn,backendName:"wasm",setupFunc:lfe,kernelFunc:mfe};var AH;function cfe(r){AH=r.wasm.cwrap(Da,null,["number","array","number","number","number","bool","number","number"])}var dfe=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{k:o,sorted:s}=t,a=e.dataIdMap.get(n.dataId).id,i=new Uint8Array(new Int32Array(n.shape).buffer),p=n.shape.slice();p[p.length-1]=o;let u=e.makeOutput(p,n.dtype),l=e.dataIdMap.get(u.dataId).id,m=e.makeOutput(p,"int32"),c=e.dataIdMap.get(m.dataId).id;return AH(a,i,n.shape.length,Je[n.dtype],o,s,l,c),[u,m]},wH={kernelName:Da,backendName:"wasm",setupFunc:cfe,kernelFunc:dfe};var NH;function ffe(r){NH=r.wasm.cwrap(Pa,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function hfe(r){let{backend:e,inputs:t,attrs:n}=r,{image:o,transforms:s}=t,{interpolation:a,fillMode:i,fillValue:p,outputShape:u}=n,[l,m,c,d]=o.shape,[f,h]=u??[m,c],g=[l,f,h,d],y=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),T=e.makeOutput(g,o.dtype),x=e.dataIdMap.get(T.dataId).id,k=e.dataIdMap.get(o.dataId).id,P=e.dataIdMap.get(s.dataId).id,F=a==="nearest"?1:2,E;switch(i){case"constant":E=1;break;case"reflect":E=2;break;case"wrap":E=3;break;case"nearest":E=4;break;default:E=1;break}return NH(k,P,s.shape[0]>1,l,f,h,d,c,m,y,o.shape.length-1,F,E,p,x),T}var DH={kernelName:Pa,backendName:"wasm",setupFunc:ffe,kernelFunc:hfe};function gfe(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape[s],i=o.shape.length,p=new Array(i-1),u=0;for(let d=0;d<i;d++)d!==s&&(p[u++]=o.shape[d]);let l=new Array(a),m=new Array(i).fill(0),c=o.shape.slice();c[s]=1;for(let d=0;d<l.length;d++)m[s]=d,l[d]=Qs({inputs:{x:o},attrs:{begin:m,size:c},backend:t});return l.map(({dataId:d,dtype:f})=>({dataId:d,dtype:f,shape:p}))}var PH={kernelName:Is,backendName:"wasm",kernelFunc:gfe};function bfe(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(0),n}var MH={kernelName:Cs,backendName:"wasm",kernelFunc:bfe};var yfe=[UK,WK,KK,HK,QK,JK,tV,nV,aV,uV,pV,lV,cV,dV,hV,bV,yV,TV,CV,SV,AV,NV,PV,MV,FV,EV,RV,LV,$V,BV,OV,GV,WV,VV,qV,XV,YV,QV,qK,JV,e4,t4,r4,n4,s4,a4,u4,l4,c4,d4,g4,b4,y4,x4,C4,S4,v4,w4,N4,D4,cx,M4,E4,L4,_4,$4,B4,O4,oV,G4,W4,V4,H4,q4,X4,Q4,J4,eH,iV,rH,nH,sH,iH,pH,lH,mH,cH,dH,fH,gH,yH,TH,IH,CH,kH,vH,wH,DH,XK,PH,MH];for(let r of yfe)Qi(r);var o0=B();o0.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));o0.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(o0.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var p0=Ap(LH());var _H=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=((info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports});self.onmessage=(e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else if(e.data.cmd==="processProxyingQueue"){if(Module["_pthread_self"]()){Module["_emscripten_proxy_execute_queue"](e.data.queue)}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}});`;var OH=Ap($H());var yx=class extends is{constructor(e){super();this.wasm=e;this.dataIdNextNumber=1;this.wasm.tfjs.initWithThreadsCount(GH),l0=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new ei(this,Hn())}write(e,t,n){let o={id:this.dataIdNextNumber++};return this.move(o,e,t,n,1),o}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=b.now();return e(),{kernelMs:b.now()-t}}move(e,t,n,o,s){let a=this.dataIdNextNumber++;if(o==="string"){let l=t;this.dataIdMap.set(e,{id:a,stringBytes:l,shape:n,dtype:o,memoryOffset:null,refCount:s});return}let i=b.sizeFromShape(n),p=i*b.bytesPerElement(o),u=this.wasm._malloc(p);this.dataIdMap.set(e,{id:a,memoryOffset:u,shape:n,dtype:o,refCount:s}),this.wasm.tfjs.registerTensor(a,i,u),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,p),u)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:o,dtype:s,shape:a,stringBytes:i}=this.dataIdMap.get(e);if(s==="string")return(t==null||t===0)&&(n==null||n>=i.length)?i:i.slice(t,n);t=t||0,n=n||b.sizeFromShape(a);let p=b.bytesPerElement(s),u=this.wasm.HEAPU8.slice(o+t*p,o+n*p);return xfe(u.buffer,s)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let o;if(n==null)o=this.write(null,e,t);else{let s=this.dataIdNextNumber++;o={id:s},this.dataIdMap.set(o,{id:s,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=b.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,a,n)}return{dataId:o,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let o=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(n),a=b.sizeFromShape(e);switch(t){case"float32":return new Float32Array(o,s,a);case"int32":return new Int32Array(o,s,a);case"bool":return new Uint8Array(o,s,a);default:throw new Error(`Unknown dtype ${t}`)}}};function Tfe(r){return(e,t)=>(b.fetch(r,{credentials:"same-origin"}).then(n=>{n.ok||e.env.a(`failed to load wasm binary file at '${r}'`),n.arrayBuffer().then(o=>{WebAssembly.instantiate(o,e).then(s=>{t(s.instance,s.module)})})}),{})}function BH(r,e,t){if(bx!=null)return bx;let n="tfjs-backend-wasm.wasm";return r&&e?n="tfjs-backend-wasm-threaded-simd.wasm":r&&(n="tfjs-backend-wasm-simd.wasm"),Ng!=null&&Ng[n]!=null?Ng[n]:t+n}async function zH(){let[r,e]=await Promise.all([B().getAsync("WASM_HAS_SIMD_SUPPORT"),B().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((t,n)=>{let o={};o.locateFile=(i,p)=>{if(i.endsWith(".worker.js")){let u=_H.replace(/\n/g,"\\n"),l=new Blob([u],{type:"application/javascript"});return URL.createObjectURL(l)}return i.endsWith(".wasm")?BH(r,e,wg??p):p+i},m0&&(o.instantiateWasm=Tfe(BH(r,e,wg??"")));let s=!1;o.onAbort=()=>{if(s||Dg)return;Dg=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let a;e&&r&&bx==null?(o.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+p0.default.toString()],{type:"text/javascript"}),a=(0,p0.default)(o)):a=(0,OH.default)(o),a.then(i=>{s=!0,Dg=!1;let p=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",p,["number"]),dispose:i.cwrap("dispose",p,[])},t({wasm:i})})})}function xfe(r,e){switch(e){case"float32":return new Float32Array(r);case"int32":return new Int32Array(r);case"bool":return new Uint8Array(r);default:throw new Error(`Unknown dtype ${e}`)}}var Ife=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],bx=null,wg=null,Ng={},Dg=!1,m0=!1;function Cfe(r,e=!1){if($C("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Dg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");bx=r,m0=e}function kfe(r,e=!1){if(Dg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof r=="string")wg=r;else{Ng=r;let t=Ife.filter(n=>Ng[n]==null);if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}m0=e}var GH=-1,l0=-1;function Sfe(r){GH=r}function vfe(){if(l0===-1)throw new Error("WASM backend not initialized.");return l0}var Afe="0.0.0";var wfe=2;Ju("wasm",async()=>{let{wasm:r}=await zH();return new yx(r)},wfe);var yp="3.16.0-20220421",x8r={tfjs:yp,"tfjs-core":yp,"tfjs-data":yp,"tfjs-layers":yp,"tfjs-converter":yp,"tfjs-backend-cpu":yp,"tfjs-backend-webgl":yp,"tfjs-backend-wasm":yp};export{us as Abs,Di as Acos,Pi as Acosh,al as AdadeltaOptimizer,il as AdagradOptimizer,ul as AdamOptimizer,pl as AdamaxOptimizer,wn as Add,oo as AddN,Mi as All,Fi as Any,so as ArgMax,ni as ArgMin,Ei as Asin,Ri as Asinh,Li as Atan,$i as Atan2,_i as Atanh,ao as AvgPool,Fu as AvgPool3D,um as AvgPool3DGrad,im as AvgPoolGrad,yx as BackendWasm,io as BatchMatMul,ps as BatchToSpaceND,pm as Bincount,lm as BroadcastArgs,O0 as BroadcastTo,QS as Callback,aS as CallbackList,zn as Cast,uo as Ceil,Gn as ClipByValue,Eu as Complex,Ru as ComplexAbs,ls as Concat,po as Conv2D,mm as Conv2DBackpropFilter,lo as Conv2DBackpropInput,Lu as Conv3D,cm as Conv3DBackpropFilterV2,dm as Conv3DBackpropInputV2,mo as Cos,co as Cosh,pa as CropAndResize,ua as Cumprod,fo as Cumsum,uS as CustomCallback,ei as DataStorage,fm as DenseBincount,la as DepthToSpace,ho as DepthwiseConv2dNative,hm as DepthwiseConv2dNativeBackpropFilter,gm as DepthwiseConv2dNativeBackpropInput,bm as Diag,_u as Dilation2D,gd as Dilation2DBackpropFilter,hd as Dilation2DBackpropInput,rC as ENV,ZS as EarlyStopping,$u as Einsum,bo as Elu,ym as EluGrad,cb as Environment,ma as Equal,Bi as Erf,yo as Exp,ms as ExpandDims,ca as Expm1,Tm as FFT,oi as Fill,da as FlipLeftRight,To as Floor,xo as FloorDiv,Pp as FromPixels,Io as FusedBatchNorm,vs as FusedConv2D,As as FusedDepthwiseConv2D,qc as GPGPUContext,fa as GatherNd,cs as GatherV2,Dv as GraphModel,ha as Greater,Co as GreaterEqual,iS as History,xm as IFFT,Un as Identity,Bu as Imag,Pt as InputSpec,Oi as IsFinite,zi as IsInf,Gi as IsNan,is as KernelBackend,Ou as LRN,Cm as LRNGrad,dy as LayerVariable,rs as LayersModel,ko as LeakyRelu,ga as Less,ba as LessEqual,Im as LinSpace,So as Log,Ui as Log1p,z0 as LogSoftmax,ya as LogicalAnd,Wi as LogicalNot,Dp as LogicalOr,Uh as MathBackendCPU,og as MathBackendWebGL,vo as Max,wo as MaxPool,zu as MaxPool3D,Sm as MaxPool3DGrad,km as MaxPoolGrad,vm as MaxPoolWithArgmax,Ao as Maximum,No as Mean,Do as Min,Po as Minimum,Mo as MirrorPad,Ki as Mod,ll as MomentumOptimizer,Am as Multinomial,Fo as Multiply,ds as Neg,xa as NonMaxSuppressionV3,Vi as NonMaxSuppressionV4,Ia as NonMaxSuppressionV5,Ta as NotEqual,x2 as OP_SCOPE_SUFFIX,Ca as OneHot,fs as OnesLike,Qr as Optimizer,hi as OptimizerConstructors,hs as Pack,Eo as PadV2,Efe as Pool,Ro as Pow,Lo as Prelu,_o as Prod,ml as RMSPropOptimizer,Us as RNN,si as Range,c2 as Rank,Gu as Real,go as RealDiv,Hi as Reciprocal,_a as Reduction,$o as Relu,Oo as Relu6,gs as Reshape,Bo as ResizeBilinear,Nm as ResizeBilinearGrad,ai as ResizeNearestNeighbor,wm as ResizeNearestNeighborGrad,ka as Reverse,Ma as RotateWithOffset,Sa as Round,zo as Rsqrt,du as SGDOptimizer,va as ScatterNd,bs as Select,qi as Selu,gc as Sequential,Uo as Sigmoid,ji as Sign,Go as Sin,Aa as Sinh,ys as Slice,Vo as Softmax,Xi as Softplus,Ts as SpaceToBatchND,Uu as SparseFillEmptyRows,Yi as SparseReshape,Wu as SparseSegmentMean,Ku as SparseSegmentSum,Vu as SparseToDense,xs as SplitV,Wo as Sqrt,ii as Square,Ho as SquaredDifference,ks as Step,wa as StridedSlice,Hu as StringNGrams,Dm as StringSplit,Pm as StringToHashBucketFast,qo as Sub,Ko as Sum,Tn as SymbolicTensor,Na as Tan,jo as Tanh,Ye as Tensor,gt as TensorBuffer,Nn as Tile,Da as TopK,Pa as Transform,Xo as Transpose,Mm as Unique,Is as Unpack,qu as UnsortedSegmentSum,Yu as Variable,Cs as ZerosLike,Ss as _FusedMatMul,$t as abs,BC as acos,OC as acosh,Q as add,zC as addN,Dd as all,Um as any,su as argMax,GC as argMin,UC as asin,WC as asinh,KC as atan,VC as atan2,HC as atanh,zp as avgPool,Pd as avgPool3d,y1 as backend,C as backend_util,l5 as basicLSTMCell,li as batchNorm,YC as batchNorm2d,QC as batchNorm3d,ZC as batchNorm4d,Gp as batchToSpaceND,Md as bincount,F$e as booleanMaskAsync,JC as broadcastArgs,Up as broadcastTo,wr as broadcast_util,Nb as browser,Ce as buffer,V9 as callbacks,te as cast,ek as ceil,Rr as clipByValue,Dn as clone,Vn as complex,pt as concat,tk as concat1d,rk as concat2d,nk as concat3d,ok as concat4d,sE as constraints,Fd as conv1d,qn as conv2d,Ed as conv2dTranspose,Rd as conv3d,sk as conv3dTranspose,zfe as copyRegisteredKernels,Wp as cos,Ld as cosh,Vb as cosineWindow,Vm as cumprod,_d as cumsum,cn as customGrad,tL as data,ak as denseBincount,$C as deprecationWarn,ik as depthToSpace,iu as depthwiseConv2d,Y9 as deregisterOp,Qu as device_util,z5 as diag,uk as dilation2d,yTe as disableDeprecationWarnings,Me as dispose,TTe as disposeVariables,me as div,pk as divNoNan,q5 as dot,K1 as dropout,lk as einsum,uu as elu,bTe as enableDebugMode,gTe as enableProdMode,V1 as enclosingPowerOfTwo,Hn as engine,B as env,zr as equal,mk as erf,pr as exp,Nr as expandDims,ck as expm1,Hm as eye,Jp as fft,Ra as fill,vTe as findBackend,ATe as findBackendFactory,pu as floor,Nd as floorDiv,wO as forceHalfFloat,Es as fused,mi as gather,U1 as gatherND,Db as gather_util,kTe as getBackend,sC as getGradient,yd as getKernel,db as getKernelsForBackend,vfe as getThreadsCount,hw as gpgpu_util,y8 as grad,T8 as grads,rr as greater,Zo as greaterEqual,tp as ifft,Kp as imag,fn as image,zBe as inTopKAsync,aE as initializers,gS as input,Or as io,Zd as irfft,u8 as isFinite,l8 as isInf,dk as isNaN,Ut as keep,br as kernel_impls,BE as layers,Vp as leakyRelu,$d as less,Jo as lessEqual,FP as linalg,fk as linspace,Wee as loadGraphModel,nJ as loadLayersModel,hk as localResponseNormalization,Lr as log,Hp as log1p,v8 as logSigmoid,Bd as logSoftmax,xk as logSumExp,Ur as logicalAnd,qp as logicalNot,zd as logicalOr,$8 as logicalXor,r4e as losses,He as matMul,e1 as math,Yr as max,jp as maxPool,Gd as maxPool3d,Ik as maxPoolWithArgmax,jn as maximum,Rt as mean,wd as memory,W8 as meshgrid,OE as metrics,qm as min,lu as minimum,Ck as mirrorPad,kk as mod,tJ as model,zE as models,jm as moments,rBe as movingAverage,L as mul,Q8 as multiRNNCell,Sk as multinomial,et as neg,rf as nextFrame,Wb as norm,di as notEqual,nu as oneHot,lr as ones,Dr as onesLike,A as op,rX as outerProduct,Mn as pad,sX as pad1d,iX as pad2d,pX as pad3d,mX as pad4d,gX as pool,Fn as pow,Yp as prelu,wC as print,Ud as prod,xTe as profile,IX as rand,DX as randomGamma,Ob as randomNormal,La as randomUniform,mu as range,CTe as ready,ep as real,Ek as reciprocal,Ju as registerBackend,oJ as registerCallbackConstructor,U0 as registerGradient,Qi as registerKernel,X9 as registerOp,GE as regularizers,Wr as relu,Kd as relu6,STe as removeBackend,_ as reshape,gr as reverse,BX as reverse1d,zX as reverse2d,UX as reverse3d,KX as reverse4d,el as rfft,Vd as round,Hd as rsqrt,ce as scalar,z1 as scatterND,Ad as scatter_util,qd as selu,Rk as separableConv2d,rJ as sequential,ne as serialization,F6 as setBackend,wTe as setPlatform,Sfe as setThreadsCount,Cfe as setWasmPath,kfe as setWasmPaths,kA as setWebGLContext,Lk as setdiff1dAsync,Ec as shared,mn as sigmoid,_k as sign,DVe as signal,jd as sin,Xd as sinh,ze as slice,Yd as slice1d,zb as slice2d,Qd as slice3d,Ym as slice4d,Tt as slice_util,Zp as softmax,ci as softplus,Xp as spaceToBatchND,tf as sparse,Kb as sparseToDense,SVe as spectral,kr as split,Lt as sqrt,je as square,Jd as squaredDifference,dn as squeeze,mr as stack,cu as step,$k as stridedSlice,Jb as string,pe as sub,fe as sum,Zi as sumOutType,Bk as tan,au as tanh,Fr as tensor,Ot as tensor1d,fi as tensor2d,MC as tensor3d,gY as tensor4d,bY as tensor5d,yY as tensor6d,Ps as tensor_util,b1 as test_util,z as tidy,Gr as tile,ITe as time,Ok as topk,cl as train,Ge as transpose,tl as truncatedNormal,Gb as unique,Ofe as unregisterGradient,Bfe as unregisterKernel,zk as unsortedSegmentSum,_r as unstack,Ft as upcastType,b as util,x8 as valueAndGrad,I8 as valueAndGrads,Gk as variable,Lb as variableGrads,x8r as version,Kee as version_converter,M6 as version_core,yte as version_cpu,Nf as version_layers,Afe as version_wasm,ase as version_webgl,Rjt as webgl,Oc as webgl_util,zK as webgpu,Bt as where,ef as whereAsync,bt as zeros,Ne as zerosLike};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
//# sourceMappingURL=tfjs.min.esm.js.map
