var Vj=Object.create;var ov=Object.defineProperty;var Hj=Object.getOwnPropertyDescriptor;var qj=Object.getOwnPropertyNames;var jj=Object.getPrototypeOf,Xj=Object.prototype.hasOwnProperty;var H0=(r=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(r,{get:(t,e)=>(typeof require<"u"?require:t)[e]}):r)(function(r){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+r+'" is not supported')});var Fr=(r,t)=>()=>(t||r((t={exports:{}}).exports,t),t.exports),He=(r,t)=>{for(var e in t)ov(r,e,{get:t[e],enumerable:!0})},Yj=(r,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of qj(t))!Xj.call(r,o)&&o!==e&&ov(r,o,{get:()=>t[o],enumerable:!(n=Hj(t,o))||n.enumerable});return r};var hm=(r,t,e)=>(e=r!=null?Vj(jj(r)):{},Yj(t||!r||!r.__esModule?ov(e,"default",{value:r,enumerable:!0}):e,r));var Q1=Fr(()=>{});var J1=Fr(()=>{});var AR=Fr((vR,rA)=>{(function(r,t,e){function n(i){var u=this,l=a();u.next=function(){var p=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=p-(u.c=p|0)},u.c=1,u.s0=l(" "),u.s1=l(" "),u.s2=l(" "),u.s0-=l(i),u.s0<0&&(u.s0+=1),u.s1-=l(i),u.s1<0&&(u.s1+=1),u.s2-=l(i),u.s2<0&&(u.s2+=1),l=null}function o(i,u){return u.c=i.c,u.s0=i.s0,u.s1=i.s1,u.s2=i.s2,u}function s(i,u){var l=new n(i),p=u&&u.state,m=l.next;return m.int32=function(){return l.next()*4294967296|0},m.double=function(){return m()+(m()*2097152|0)*11102230246251565e-32},m.quick=m,p&&(typeof p=="object"&&o(p,l),m.state=function(){return o(l,{})}),m}function a(){var i=4022871197,u=function(l){l=String(l);for(var p=0;p<l.length;p++){i+=l.charCodeAt(p);var m=.02519603282416938*i;i=m>>>0,m-=i,m*=i,i=m>>>0,m-=i,i+=m*4294967296}return(i>>>0)*23283064365386963e-26};return u}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.alea=s})(vR,typeof rA=="object"&&rA,typeof define=="function"&&define)});var NR=Fr((wR,nA)=>{(function(r,t,e){function n(a){var i=this,u="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var p=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^p^p>>>8},a===(a|0)?i.x=a:u+=a;for(var l=0;l<u.length+64;l++)i.x^=u.charCodeAt(l)|0,i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i}function s(a,i){var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xor128=s})(wR,typeof nA=="object"&&nA,typeof define=="function"&&define)});var RR=Fr((DR,oA)=>{(function(r,t,e){function n(a){var i=this,u="";i.next=function(){var p=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(p^p<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,a===(a|0)?i.x=a:u+=a;for(var l=0;l<u.length+64;l++)i.x^=u.charCodeAt(l)|0,l==u.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i.v=a.v,i.d=a.d,i}function s(a,i){var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xorwow=s})(DR,typeof oA=="object"&&oA,typeof define=="function"&&define)});var PR=Fr((FR,sA)=>{(function(r,t,e){function n(a){var i=this;i.next=function(){var l=i.x,p=i.i,m,c,d;return m=l[p],m^=m>>>7,c=m^m<<24,m=l[p+1&7],c^=m^m>>>10,m=l[p+3&7],c^=m^m>>>3,m=l[p+4&7],c^=m^m<<7,m=l[p+7&7],m=m^m<<13,c^=m^m<<9,l[p]=c,i.i=p+1&7,c};function u(l,p){var m,c,d=[];if(p===(p|0))c=d[0]=p;else for(p=""+p,m=0;m<p.length;++m)d[m&7]=d[m&7]<<15^p.charCodeAt(m)+d[m+1&7]<<13;for(;d.length<8;)d.push(0);for(m=0;m<8&&d[m]===0;++m);for(m==8?c=d[7]=-1:c=d[m],l.x=d,l.i=0,m=256;m>0;--m)l.next()}u(i,a)}function o(a,i){return i.x=a.x.slice(),i.i=a.i,i}function s(a,i){a==null&&(a=+new Date);var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(l.x&&o(l,u),p.state=function(){return o(u,{})}),p}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xorshift7=s})(FR,typeof sA=="object"&&sA,typeof define=="function"&&define)});var ER=Fr((MR,aA)=>{(function(r,t,e){function n(a){var i=this;i.next=function(){var l=i.w,p=i.X,m=i.i,c,d;return i.w=l=l+1640531527|0,d=p[m+34&127],c=p[m=m+1&127],d^=d<<13,c^=c<<17,d^=d>>>15,c^=c>>>12,d=p[m]=d^c,i.i=m,d+(l^l>>>16)|0};function u(l,p){var m,c,d,f,h,g=[],b=128;for(p===(p|0)?(c=p,p=null):(p=p+"\0",c=0,b=Math.max(b,p.length)),d=0,f=-32;f<b;++f)p&&(c^=p.charCodeAt((f+32)%p.length)),f===0&&(h=c),c^=c<<10,c^=c>>>15,c^=c<<4,c^=c>>>13,f>=0&&(h=h+1640531527|0,m=g[f&127]^=c+h,d=m==0?d+1:0);for(d>=128&&(g[(p&&p.length||0)&127]=-1),d=127,f=4*128;f>0;--f)c=g[d+34&127],m=g[d=d+1&127],c^=c<<13,m^=m<<17,c^=c>>>15,m^=m>>>12,g[d]=c^m;l.w=h,l.X=g,l.i=d}u(i,a)}function o(a,i){return i.i=a.i,i.w=a.w,i.X=a.X.slice(),i}function s(a,i){a==null&&(a=+new Date);var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(l.X&&o(l,u),p.state=function(){return o(u,{})}),p}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xor4096=s})(MR,typeof aA=="object"&&aA,typeof define=="function"&&define)});var _R=Fr((LR,iA)=>{(function(r,t,e){function n(a){var i=this,u="";i.next=function(){var p=i.b,m=i.c,c=i.d,d=i.a;return p=p<<25^p>>>7^m,m=m-c|0,c=c<<24^c>>>8^d,d=d-p|0,i.b=p=p<<20^p>>>12^m,i.c=m=m-c|0,i.d=c<<16^m>>>16^d,i.a=d-p|0},i.a=0,i.b=0,i.c=-1640531527,i.d=1367130551,a===Math.floor(a)?(i.a=a/4294967296|0,i.b=a|0):u+=a;for(var l=0;l<u.length+20;l++)i.b^=u.charCodeAt(l)|0,i.next()}function o(a,i){return i.a=a.a,i.b=a.b,i.c=a.c,i.d=a.d,i}function s(a,i){var u=new n(a),l=i&&i.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.tychei=s})(LR,typeof iA=="object"&&iA,typeof define=="function"&&define)});var $R=Fr(()=>{});var OR=Fr((BR,uy)=>{(function(r,t,e){var n=256,o=6,s=52,a="random",i=e.pow(n,o),u=e.pow(2,s),l=u*2,p=n-1,m;function c(x,I,k){var A=[];I=I==!0?{entropy:!0}:I||{};var R=g(h(I.entropy?[x,T(t)]:x??b(),3),A),F=new d(A),P=function(){for(var L=F.g(o),O=i,G=0;L<u;)L=(L+G)*n,O*=n,G=F.g(1);for(;L>=l;)L/=2,O/=2,G>>>=1;return(L+G)/O};return P.int32=function(){return F.g(4)|0},P.quick=function(){return F.g(4)/4294967296},P.double=P,g(T(F.S),t),(I.pass||k||function(L,O,G,W){return W&&(W.S&&f(W,F),L.state=function(){return f(F,{})}),G?(e[a]=L,O):L})(P,R,"global"in I?I.global:this==e,I.state)}function d(x){var I,k=x.length,A=this,R=0,F=A.i=A.j=0,P=A.S=[];for(k||(x=[k++]);R<n;)P[R]=R++;for(R=0;R<n;R++)P[R]=P[F=p&F+x[R%k]+(I=P[R])],P[F]=I;(A.g=function(L){for(var O,G=0,W=A.i,H=A.j,V=A.S;L--;)O=V[W=p&W+1],G=G*n+V[p&(V[W]=V[H=p&H+O])+(V[H]=O)];return A.i=W,A.j=H,G})(n)}function f(x,I){return I.i=x.i,I.j=x.j,I.S=x.S.slice(),I}function h(x,I){var k=[],A=typeof x,R;if(I&&A=="object")for(R in x)try{k.push(h(x[R],I-1))}catch{}return k.length?k:A=="string"?x:x+"\0"}function g(x,I){for(var k=x+"",A,R=0;R<k.length;)I[p&R]=p&(A^=I[p&R]*19)+k.charCodeAt(R++);return T(I)}function b(){try{var x;return m&&(x=m.randomBytes)?x=x(n):(x=new Uint8Array(n),(r.crypto||r.msCrypto).getRandomValues(x)),T(x)}catch{var I=r.navigator,k=I&&I.plugins;return[+new Date,r,k,r.screen,T(t)]}}function T(x){return String.fromCharCode.apply(0,x)}if(g(e.random(),t),typeof uy=="object"&&uy.exports){uy.exports=c;try{m=$R()}catch{}}else typeof define=="function"&&define.amd?define(function(){return c}):e["seed"+a]=c})(typeof self<"u"?self:BR,[],Math)});var xh=Fr((lLe,zR)=>{var SY=AR(),vY=NR(),AY=RR(),wY=PR(),NY=ER(),DY=_R(),nl=OR();nl.alea=SY;nl.xor128=vY;nl.xorwow=AY;nl.xorshift7=wY;nl.xor4096=NY;nl.tychei=DY;zR.exports=nl});var Iw=Fr(()=>{});var Xh=Fr(()=>{});var Ag=Fr(()=>{});var i0=Fr(()=>{});var ej=Fr(()=>{});var tj=Fr(()=>{});var rj=Fr((Tk,p0)=>{"use strict";var u0=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(t){t=t||{};function e(){return ue.buffer!=st&&lr(ue.buffer),Vt}function n(){return ue.buffer!=st&&lr(ue.buffer),zn}function o(){return ue.buffer!=st&&lr(ue.buffer),pr}function s(){return ue.buffer!=st&&lr(ue.buffer),ro}function a(){return ue.buffer!=st&&lr(ue.buffer),Br}function i(){return ue.buffer!=st&&lr(ue.buffer),ps}function u(){return ue.buffer!=st&&lr(ue.buffer),un}function l(){return ue.buffer!=st&&lr(ue.buffer),vr}var p=typeof t<"u"?t:{},m,c;p.ready=new Promise(function(M,K){m=M,c=K});var d;typeof process<"u"&&process.listeners&&(d={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var f=Object.assign({},p),h=[],g="./this.program",b=(M,K)=>{throw K},T=typeof window=="object",x=typeof importScripts=="function",I=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",k=p.ENVIRONMENT_IS_PTHREAD||!1,A="";function R(M){return p.locateFile?p.locateFile(M,A):A+M}var F,P,L,O;function G(M){if(M instanceof zp)return;Y("exiting due to exception: "+M)}var W,H,V;if(I){x?A=Ag().dirname(A)+"/":A=__dirname+"/",V=()=>{H||(W=Xh(),H=Ag())},F=function(ne,me){return V(),ne=H.normalize(ne),W.readFileSync(ne,me?void 0:"utf8")},L=K=>{var ne=F(K,!0);return ne.buffer||(ne=new Uint8Array(ne)),ne},P=(K,ne,me)=>{V(),K=H.normalize(K),W.readFile(K,function(Ee,at){Ee?me(Ee):ne(at.buffer)})},process.argv.length>1&&(g=process.argv[1].replace(/\\/g,"/")),h=process.argv.slice(2),process.on("uncaughtException",function(K){if(!(K instanceof zp))throw K}),process.on("unhandledRejection",function(K){throw K}),b=(K,ne)=>{if(ms())throw process.exitCode=K,ne;G(ne),process.exit(K)},p.inspect=function(){return"[Emscripten Module object]"};let M;try{M=i0()}catch(K){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),K}global.Worker=M.Worker}else(T||x)&&(x?A=self.location.href:typeof document<"u"&&document.currentScript&&(A=document.currentScript.src),r&&(A=r),A.indexOf("blob:")!==0?A=A.substr(0,A.replace(/[?#].*/,"").lastIndexOf("/")+1):A="",I||(F=M=>{var K=new XMLHttpRequest;return K.open("GET",M,!1),K.send(null),K.responseText},x&&(L=M=>{var K=new XMLHttpRequest;return K.open("GET",M,!1),K.responseType="arraybuffer",K.send(null),new Uint8Array(K.response)}),P=(M,K,ne)=>{var me=new XMLHttpRequest;me.open("GET",M,!0),me.responseType="arraybuffer",me.onload=()=>{if(me.status==200||me.status==0&&me.response){K(me.response);return}ne()},me.onerror=ne,me.send(null)}),O=M=>document.title=M);I&&typeof performance>"u"&&(global.performance=ej().performance);var q=console.log.bind(console),Z=console.warn.bind(console);I&&(V(),q=M=>W.writeSync(1,M+`
`),Z=M=>W.writeSync(2,M+`
`));var j=p.print||q,Y=p.printErr||Z;Object.assign(p,f),f=null,p.arguments&&(h=p.arguments),p.thisProgram&&(g=p.thisProgram),p.quit&&(b=p.quit);var se=4,ae=Atomics.load,pe=Atomics.store,oe=Atomics.compareExchange,ge;p.wasmBinary&&(ge=p.wasmBinary);var fe=p.noExitRuntime||!0;typeof WebAssembly!="object"&&Op("no native wasm support detected");var ue,ve,De=!1,Fe;function je(M,K){M||Op(K)}var Q=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function bt(M,K,ne){for(var me=K+ne,Ee=K;M[Ee]&&!(Ee>=me);)++Ee;if(Ee-K>16&&M.buffer&&Q)return Q.decode(M.buffer instanceof SharedArrayBuffer?M.slice(K,Ee):M.subarray(K,Ee));for(var at="";K<Ee;){var Ue=M[K++];if(!(Ue&128)){at+=String.fromCharCode(Ue);continue}var Ge=M[K++]&63;if((Ue&224)==192){at+=String.fromCharCode((Ue&31)<<6|Ge);continue}var cr=M[K++]&63;if((Ue&240)==224?Ue=(Ue&15)<<12|Ge<<6|cr:Ue=(Ue&7)<<18|Ge<<12|cr<<6|M[K++]&63,Ue<65536)at+=String.fromCharCode(Ue);else{var wn=Ue-65536;at+=String.fromCharCode(55296|wn>>10,56320|wn&1023)}}return at}function lt(M,K){return M?bt(n(),M,K):""}function Dt(M,K,ne,me){if(!(me>0))return 0;for(var Ee=ne,at=ne+me-1,Ue=0;Ue<M.length;++Ue){var Ge=M.charCodeAt(Ue);if(Ge>=55296&&Ge<=57343){var cr=M.charCodeAt(++Ue);Ge=65536+((Ge&1023)<<10)|cr&1023}if(Ge<=127){if(ne>=at)break;K[ne++]=Ge}else if(Ge<=2047){if(ne+1>=at)break;K[ne++]=192|Ge>>6,K[ne++]=128|Ge&63}else if(Ge<=65535){if(ne+2>=at)break;K[ne++]=224|Ge>>12,K[ne++]=128|Ge>>6&63,K[ne++]=128|Ge&63}else{if(ne+3>=at)break;K[ne++]=240|Ge>>18,K[ne++]=128|Ge>>12&63,K[ne++]=128|Ge>>6&63,K[ne++]=128|Ge&63}}return K[ne]=0,ne-Ee}function Mt(M,K,ne){return Dt(M,n(),K,ne)}function Tt(M){for(var K=0,ne=0;ne<M.length;++ne){var me=M.charCodeAt(ne);me<=127?K++:me<=2047?K+=2:me>=55296&&me<=57343?(K+=4,++ne):K+=3}return K}var st,Vt,zn,pr,ro,Br,ps,un,vr;k&&(st=p.buffer);function lr(M){st=M,p.HEAP8=Vt=new Int8Array(M),p.HEAP16=pr=new Int16Array(M),p.HEAP32=Br=new Int32Array(M),p.HEAPU8=zn=new Uint8Array(M),p.HEAPU16=ro=new Uint16Array(M),p.HEAPU32=ps=new Uint32Array(M),p.HEAPF32=un=new Float32Array(M),p.HEAPF64=vr=new Float64Array(M)}var Yr=p.INITIAL_MEMORY||16777216;if(k)ue=p.wasmMemory,st=p.buffer;else if(p.wasmMemory)ue=p.wasmMemory;else if(ue=new WebAssembly.Memory({initial:Yr/65536,maximum:32768,shared:!0}),!(ue.buffer instanceof SharedArrayBuffer))throw Y("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),I&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");ue&&(st=ue.buffer),Yr=st.byteLength,lr(st);var Zr,ii=[],ls=[],Du=[],um=!1;function ms(){return fe}function Or(){if(p.preRun)for(typeof p.preRun=="function"&&(p.preRun=[p.preRun]);p.preRun.length;)kk(p.preRun.shift());Bg(ii)}function $p(){um=!0,!k&&Bg(ls)}function Ck(){if(!k){if(p.postRun)for(typeof p.postRun=="function"&&(p.postRun=[p.postRun]);p.postRun.length;)C0(p.postRun.shift());Bg(Du)}}function kk(M){ii.unshift(M)}function I0(M){ls.unshift(M)}function C0(M){Du.unshift(M)}var ui=0,Bp=null,pm=null;function k0(M){ui++,p.monitorRunDependencies&&p.monitorRunDependencies(ui)}function S0(M){if(ui--,p.monitorRunDependencies&&p.monitorRunDependencies(ui),ui==0&&(Bp!==null&&(clearInterval(Bp),Bp=null),pm)){var K=pm;pm=null,K()}}function Op(M){k?postMessage({cmd:"onAbort",arg:M}):p.onAbort&&p.onAbort(M),M="Aborted("+M+")",Y(M),De=!0,Fe=1,M+=". Build with -sASSERTIONS for more info.";var K=new WebAssembly.RuntimeError(M);throw c(K),K}var Sk="data:application/octet-stream;base64,";function Fg(M){return M.startsWith(Sk)}function Pg(M){return M.startsWith("file://")}var pn;pn="tfjs-backend-wasm-threaded-simd.wasm",Fg(pn)||(pn=R(pn));function Mg(M){try{if(M==pn&&ge)return new Uint8Array(ge);if(L)return L(M);throw"both async and sync fetching of the wasm failed"}catch(K){Op(K)}}function Eg(){if(!ge&&(T||x)){if(typeof fetch=="function"&&!Pg(pn))return fetch(pn,{credentials:"same-origin"}).then(function(M){if(!M.ok)throw"failed to load wasm binary file at '"+pn+"'";return M.arrayBuffer()}).catch(function(){return Mg(pn)});if(P)return new Promise(function(M,K){P(pn,function(ne){M(new Uint8Array(ne))},K)})}return Promise.resolve().then(function(){return Mg(pn)})}function vk(){var M={env:Qg,wasi_snapshot_preview1:Qg};function K(Ue,Ge){var cr=Ue.exports;if(p.asm=cr,Fk(p.asm._emscripten_tls_init),Zr=p.asm.__indirect_function_table,I0(p.asm.__wasm_call_ctors),ve=Ge,!k){var wn=Qe.unusedWorkers.length;Qe.unusedWorkers.forEach(function(aa){Qe.loadWasmModuleToWorker(aa,function(){--wn||S0("wasm-instantiate")})})}}k||k0("wasm-instantiate");function ne(Ue){K(Ue.instance,Ue.module)}function me(Ue){return Eg().then(function(Ge){return WebAssembly.instantiate(Ge,M)}).then(function(Ge){return Ge}).then(Ue,function(Ge){Y("failed to asynchronously prepare wasm: "+Ge),Op(Ge)})}function Ee(){return!ge&&typeof WebAssembly.instantiateStreaming=="function"&&!Fg(pn)&&!Pg(pn)&&!I&&typeof fetch=="function"?fetch(pn,{credentials:"same-origin"}).then(function(Ue){var Ge=WebAssembly.instantiateStreaming(Ue,M);return Ge.then(ne,function(cr){return Y("wasm streaming compile failed: "+cr),Y("falling back to ArrayBuffer instantiation"),me(ne)})}):me(ne)}if(p.instantiateWasm)try{var at=p.instantiateWasm(M,K);return at}catch(Ue){return Y("Module.instantiateWasm callback failed with error: "+Ue),!1}return Ee().catch(c),{}}var v0,A0,Ak={};function zp(M){this.name="ExitStatus",this.message="Program terminated with exit("+M+")",this.status=M}function Lg(M){var K=Qe.pthreads[M];delete Qe.pthreads[M],K.terminate(),tv(M),Qe.runningWorkers.splice(Qe.runningWorkers.indexOf(K),1),K.pthread_ptr=0}function wk(M){var K=Qe.pthreads[M];K.postMessage({cmd:"cancel"})}function Nk(M){var K=Qe.pthreads[M];je(K),Qe.returnWorkerToPool(K)}function Ru(M){var K=Qe.getNewWorker();if(!K)return 6;Qe.runningWorkers.push(K),Qe.pthreads[M.pthread_ptr]=K,K.pthread_ptr=M.pthread_ptr;var ne={cmd:"run",start_routine:M.startRoutine,arg:M.arg,pthread_ptr:M.pthread_ptr};return K.runPthread=()=>{ne.time=performance.now(),K.postMessage(ne,M.transferList)},K.loaded&&(K.runPthread(),delete K.runPthread),0}var _g={varargs:void 0,get:function(){_g.varargs+=4;var M=a()[_g.varargs-4>>2];return M},getStr:function(M){var K=lt(M);return K}};function Dk(M){if(k)return Fu(1,1,M);Fe=M,ms()||(Qe.terminateAllThreads(),p.onExit&&p.onExit(M),De=!0),b(M,new zp(M))}function $g(M,K){if(Fe=M,!K&&k)throw zg(M),"unwind";Dk(M)}var Uf=$g;function w0(M){if(M instanceof zp||M=="unwind")return Fe;b(1,M)}var Qe={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){k?Qe.initWorker():Qe.initMainThread()},initMainThread:function(){for(var M=8;M--;)Qe.allocateUnusedWorker()},initWorker:function(){fe=!1},setExitStatus:function(M){Fe=M},terminateAllThreads:function(){for(var M of Object.values(Qe.pthreads))Qe.returnWorkerToPool(M);for(var M of Qe.unusedWorkers)M.terminate();Qe.unusedWorkers=[]},returnWorkerToPool:function(M){var K=M.pthread_ptr;delete Qe.pthreads[K],Qe.unusedWorkers.push(M),Qe.runningWorkers.splice(Qe.runningWorkers.indexOf(M),1),M.pthread_ptr=0,tv(K)},receiveObjectTransfer:function(M){},threadInitTLS:function(){Qe.tlsInitFunctions.forEach(M=>M())},loadWasmModuleToWorker:function(M,K){M.onmessage=ne=>{var me=ne.data,Ee=me.cmd;if(M.pthread_ptr&&(Qe.currentProxiedOperationCallerThread=M.pthread_ptr),me.targetThread&&me.targetThread!=ob()){var at=Qe.pthreads[me.targetThread];at?at.postMessage(me,me.transferList):Y('Internal error! Worker sent a message "'+Ee+'" to target pthread '+me.targetThread+", but that thread no longer exists!"),Qe.currentProxiedOperationCallerThread=void 0;return}Ee==="processProxyingQueue"?Kf(me.queue):Ee==="spawnThread"?Ru(me):Ee==="cleanupThread"?Nk(me.thread):Ee==="killThread"?Lg(me.thread):Ee==="cancelThread"?wk(me.thread):Ee==="loaded"?(M.loaded=!0,K&&K(M),M.runPthread&&(M.runPthread(),delete M.runPthread)):Ee==="print"?j("Thread "+me.threadId+": "+me.text):Ee==="printErr"?Y("Thread "+me.threadId+": "+me.text):Ee==="alert"?alert("Thread "+me.threadId+": "+me.text):me.target==="setimmediate"?M.postMessage(me):Ee==="onAbort"?p.onAbort&&p.onAbort(me.arg):Ee&&Y("worker sent an unknown command "+Ee),Qe.currentProxiedOperationCallerThread=void 0},M.onerror=ne=>{var me="worker sent an error!";throw Y(me+" "+ne.filename+":"+ne.lineno+": "+ne.message),ne},I&&(M.on("message",function(ne){M.onmessage({data:ne})}),M.on("error",function(ne){M.onerror(ne)}),M.on("detachedExit",function(){})),M.postMessage({cmd:"load",urlOrBlob:p.mainScriptUrlOrBlob||r,wasmMemory:ue,wasmModule:ve})},allocateUnusedWorker:function(){var M=R("tfjs-backend-wasm-threaded-simd.worker.js");Qe.unusedWorkers.push(new Worker(M))},getNewWorker:function(){return Qe.unusedWorkers.length==0&&(Qe.allocateUnusedWorker(),Qe.loadWasmModuleToWorker(Qe.unusedWorkers[0])),Qe.unusedWorkers.pop()}};p.PThread=Qe;function Bg(M){for(;M.length>0;)M.shift()(p)}function N0(M){var K=rv(),ne=M();return sb(K),ne}function mj(M){return M}function Wf(M){var K=/\b_Z[\w\d_]+/g;return M.replace(K,function(ne){var me=ne;return ne===me?ne:me+" ["+ne+"]"})}function Og(){var M=ob(),K=a()[M+44>>2],ne=a()[M+48>>2],me=K-ne;U0(K,me),sb(K)}p.establishStackSpace=Og;function zg(M){if(k)return Fu(2,0,M);try{Uf(M)}catch(K){w0(K)}}var Gp=[];function Rk(M){var K=Gp[M];return K||(M>=Gp.length&&(Gp.length=M+1),Gp[M]=K=Zr.get(M)),K}function Gg(M,K){var ne=Rk(M)(K);ms()?Qe.setExitStatus(ne):G0(ne)}p.invokeEntryPoint=Gg;function cj(){var M=new Error;if(!M.stack){try{throw new Error}catch(K){M=K}if(!M.stack)return"(no stack trace available)"}return M.stack.toString()}function Fk(M){Qe.tlsInitFunctions.push(M)}function Pk(M,K){e().set(M,K)}function Mk(M){B0(M,!x,1,!T),Qe.threadInitTLS()}function Ek(M){k?postMessage({cmd:"cleanupThread",thread:M}):Nk(M)}function Ug(M,K,ne,me){return k?Fu(3,1,M,K,ne,me):Wg(M,K,ne,me)}function Wg(M,K,ne,me){if(typeof SharedArrayBuffer>"u")return Y("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var Ee=[],at=0;if(k&&(Ee.length===0||at))return Ug(M,K,ne,me);if(at)return at;var Ue={startRoutine:ne,pthread_ptr:M,arg:me,transferList:Ee};return k?(Ue.cmd="spawnThread",postMessage(Ue,Ee),0):Ru(Ue)}function Lk(){return Date.now()}function _k(){return 2097152}var $k=!0;function Bk(){return $k}function Kf(M){Atomics.store(a(),M>>2,1),ob()&&z0(M),Atomics.compareExchange(a(),M>>2,1,0)}p.executeNotifiedProxyingQueue=Kf;function Ok(M,K,ne,me){if(M==K)setTimeout(()=>Kf(me));else if(k)postMessage({targetThread:M,cmd:"processProxyingQueue",queue:me});else{var Ee=Qe.pthreads[M];if(!Ee)return;Ee.postMessage({cmd:"processProxyingQueue",queue:me})}return 1}function zk(M,K,ne){return-1}function Gk(){Op("")}function Up(M){Up.shown||(Up.shown={}),Up.shown[M]||(Up.shown[M]=1,I&&(M="warning: "+M),Y(M))}function Uk(){I||x||Up("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Kg(){return 2147483648}function Wk(){return Kg()}var lm;I?lm=()=>{var M=process.hrtime();return M[0]*1e3+M[1]/1e6}:k?lm=()=>performance.now()-p.__performance_now_clock_drift:lm=()=>performance.now();function Kk(M,K,ne){n().copyWithin(M,K,K+ne)}function Vk(){return I?tj().cpus().length:navigator.hardwareConcurrency}function Fu(M,K){var ne=arguments.length-2,me=arguments;return N0(()=>{for(var Ee=ne,at=ab(Ee*8),Ue=at>>3,Ge=0;Ge<ne;Ge++){var cr=me[2+Ge];l()[Ue+Ge]=cr}return O0(M,Ee,at,K)})}var Vf=[];function Hk(M,K,ne){Vf.length=K;for(var me=ne>>3,Ee=0;Ee<K;Ee++)Vf[Ee]=l()[me+Ee];var at=M<0,Ue=at?Ak[-M-1]:tS[M];return Ue.apply(null,Vf)}function qk(M){try{return ue.grow(M-st.byteLength+65535>>>16),lr(ue.buffer),1}catch{}}function jk(M){var K=n().length;if(M=M>>>0,M<=K)return!1;var ne=Kg();if(M>ne)return!1;let me=(cr,wn)=>cr+(wn-cr%wn)%wn;for(var Ee=1;Ee<=4;Ee*=2){var at=K*(1+.2/Ee);at=Math.min(at,M+100663296);var Ue=Math.min(ne,me(Math.max(M,at),65536)),Ge=qk(Ue);if(Ge)return!0}return!1}function Xk(){throw"unwind"}function Vg(M){return k?Fu(4,1,M):52}function Hg(M,K,ne,me,Ee){return k?Fu(5,1,M,K,ne,me,Ee):70}var Yk=[null,[],[]];function Zk(M,K){var ne=Yk[M];K===0||K===10?((M===1?j:Y)(bt(ne,0)),ne.length=0):ne.push(K)}function qg(M,K,ne,me){if(k)return Fu(6,1,M,K,ne,me);for(var Ee=0,at=0;at<ne;at++){var Ue=i()[K>>2],Ge=i()[K+4>>2];K+=8;for(var cr=0;cr<Ge;cr++)Zk(M,n()[Ue+cr]);Ee+=Ge}return i()[me>>2]=Ee,0}function jg(M,K){M<128?K.push(M):K.push(M%128|128,M>>7)}function Qk(M){for(var K={i:"i32",j:"i64",f:"f32",d:"f64",p:"i32"},ne={parameters:[],results:M[0]=="v"?[]:[K[M[0]]]},me=1;me<M.length;++me)ne.parameters.push(K[M[me]]);return ne}function D0(M,K){if(typeof WebAssembly.Function=="function")return new WebAssembly.Function(Qk(K),M);var ne=[1,96],me=K.slice(0,1),Ee=K.slice(1),at={i:127,p:127,j:126,f:125,d:124};jg(Ee.length,ne);for(var Ue=0;Ue<Ee.length;++Ue)ne.push(at[Ee[Ue]]);me=="v"?ne.push(0):ne.push(1,at[me]);var Ge=[0,97,115,109,1,0,0,0,1];jg(ne.length,Ge),Ge.push.apply(Ge,ne),Ge.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0);var cr=new WebAssembly.Module(new Uint8Array(Ge)),wn=new WebAssembly.Instance(cr,{e:{f:M}}),aa=wn.exports.f;return aa}function R0(M,K){if(Xg)for(var ne=M;ne<M+K;ne++){var me=Rk(ne);me&&Xg.set(me,ne)}}var Xg=void 0,Yg=[];function F0(){if(Yg.length)return Yg.pop();try{Zr.grow(1)}catch(M){throw M instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":M}return Zr.length-1}function P0(M,K){Zr.set(M,K),Gp[M]=Zr.get(M)}var M0=1;function E0(M,K,ne){for(var me=0;me<M.length;++me)e()[K++>>0]=M.charCodeAt(me);ne||(e()[K>>0]=0)}var L0=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0;function Zg(M){var K=p["_"+M];return K}function Jk(M,K,ne,me,Ee){var at={string:Gn=>{var fm=0;if(Gn!=null&&Gn!==0){var V0=(Gn.length<<2)+1;fm=ab(V0),Mt(Gn,fm,V0)}return fm},array:Gn=>{var fm=ab(Gn.length);return Pk(Gn,fm),fm}};function Ue(Gn){return K==="string"?lt(Gn):K==="boolean"?Boolean(Gn):Gn}var Ge=Zg(M),cr=[],wn=0;if(me)for(var aa=0;aa<me.length;aa++){var K0=at[ne[aa]];K0?(wn===0&&(wn=rv()),cr[aa]=K0(me[aa])):cr[aa]=me[aa]}var nv=Ge.apply(null,cr);function Kj(Gn){return wn!==0&&sb(wn),Ue(Gn)}return nv=Kj(nv),nv}function eS(M,K,ne,me){ne=ne||[];var Ee=ne.every(Ue=>Ue==="number"||Ue==="boolean"),at=K!=="string";return at&&Ee&&!me?Zg(M):function(){return Jk(M,K,ne,arguments,me)}}Qe.init();var tS=[null,Dk,zg,Ug,Vg,Hg,qg],_0=!1,Qg={__emscripten_init_main_thread_js:Mk,__emscripten_thread_cleanup:Ek,__pthread_create_js:Wg,_emscripten_date_now:Lk,_emscripten_default_pthread_stack_size:_k,_emscripten_get_now_is_monotonic:Bk,_emscripten_notify_task_queue:Ok,_emscripten_set_offscreencanvas_size:zk,abort:Gk,emscripten_check_blocking_allowed:Uk,emscripten_get_heap_max:Wk,emscripten_get_now:lm,emscripten_memcpy_big:Kk,emscripten_num_logical_cores:Vk,emscripten_receive_on_main_thread_js:Hk,emscripten_resize_heap:jk,emscripten_unwind_to_js_event_loop:Xk,exit:Uf,fd_close:Vg,fd_seek:Hg,fd_write:qg,memory:ue||p.wasmMemory},$0=vk(),rS=p.___wasm_call_ctors=function(){return(rS=p.___wasm_call_ctors=p.asm.__wasm_call_ctors).apply(null,arguments)},nS=p._init=function(){return(nS=p._init=p.asm.init).apply(null,arguments)},oS=p._init_with_threads_count=function(){return(oS=p._init_with_threads_count=p.asm.init_with_threads_count).apply(null,arguments)},sS=p._get_threads_count=function(){return(sS=p._get_threads_count=p.asm.get_threads_count).apply(null,arguments)},aS=p._register_tensor=function(){return(aS=p._register_tensor=p.asm.register_tensor).apply(null,arguments)},iS=p._dispose_data=function(){return(iS=p._dispose_data=p.asm.dispose_data).apply(null,arguments)},uS=p._dispose=function(){return(uS=p._dispose=p.asm.dispose).apply(null,arguments)},pS=p._Abs=function(){return(pS=p._Abs=p.asm.Abs).apply(null,arguments)},lS=p._Add=function(){return(lS=p._Add=p.asm.Add).apply(null,arguments)},mS=p._AddN=function(){return(mS=p._AddN=p.asm.AddN).apply(null,arguments)},cS=p._All=function(){return(cS=p._All=p.asm.All).apply(null,arguments)},dS=p._Any=function(){return(dS=p._Any=p.asm.Any).apply(null,arguments)},fS=p._ArgMax=function(){return(fS=p._ArgMax=p.asm.ArgMax).apply(null,arguments)},hS=p._AvgPool=function(){return(hS=p._AvgPool=p.asm.AvgPool).apply(null,arguments)},gS=p._BatchMatMul=function(){return(gS=p._BatchMatMul=p.asm.BatchMatMul).apply(null,arguments)},bS=p._Ceil=function(){return(bS=p._Ceil=p.asm.Ceil).apply(null,arguments)},yS=p._ClipByValue=function(){return(yS=p._ClipByValue=p.asm.ClipByValue).apply(null,arguments)},TS=p._Conv2D=function(){return(TS=p._Conv2D=p.asm.Conv2D).apply(null,arguments)},xS=p._Conv2DBackpropInput=function(){return(xS=p._Conv2DBackpropInput=p.asm.Conv2DBackpropInput).apply(null,arguments)},IS=p._Cos=function(){return(IS=p._Cos=p.asm.Cos).apply(null,arguments)},CS=p._Cosh=function(){return(CS=p._Cosh=p.asm.Cosh).apply(null,arguments)},kS=p._CropAndResize=function(){return(kS=p._CropAndResize=p.asm.CropAndResize).apply(null,arguments)},SS=p._Cumprod=function(){return(SS=p._Cumprod=p.asm.Cumprod).apply(null,arguments)},vS=p._Cumsum=function(){return(vS=p._Cumsum=p.asm.Cumsum).apply(null,arguments)},AS=p._DepthToSpace=function(){return(AS=p._DepthToSpace=p.asm.DepthToSpace).apply(null,arguments)},wS=p._DepthwiseConv2dNative=function(){return(wS=p._DepthwiseConv2dNative=p.asm.DepthwiseConv2dNative).apply(null,arguments)},NS=p._Elu=function(){return(NS=p._Elu=p.asm.Elu).apply(null,arguments)},DS=p._Equal=function(){return(DS=p._Equal=p.asm.Equal).apply(null,arguments)},RS=p._Exp=function(){return(RS=p._Exp=p.asm.Exp).apply(null,arguments)},FS=p._FlipLeftRight=function(){return(FS=p._FlipLeftRight=p.asm.FlipLeftRight).apply(null,arguments)},PS=p._Floor=function(){return(PS=p._Floor=p.asm.Floor).apply(null,arguments)},MS=p._FloorDiv=function(){return(MS=p._FloorDiv=p.asm.FloorDiv).apply(null,arguments)},ES=p._FusedBatchNorm=function(){return(ES=p._FusedBatchNorm=p.asm.FusedBatchNorm).apply(null,arguments)},LS=p._FusedConv2D=function(){return(LS=p._FusedConv2D=p.asm.FusedConv2D).apply(null,arguments)},_S=p._FusedDepthwiseConv2D=function(){return(_S=p._FusedDepthwiseConv2D=p.asm.FusedDepthwiseConv2D).apply(null,arguments)},$S=p._Gather=function(){return($S=p._Gather=p.asm.Gather).apply(null,arguments)},BS=p._GatherNd=function(){return(BS=p._GatherNd=p.asm.GatherNd).apply(null,arguments)},OS=p._Greater=function(){return(OS=p._Greater=p.asm.Greater).apply(null,arguments)},zS=p._GreaterEqual=function(){return(zS=p._GreaterEqual=p.asm.GreaterEqual).apply(null,arguments)},GS=p._LeakyRelu=function(){return(GS=p._LeakyRelu=p.asm.LeakyRelu).apply(null,arguments)},US=p._Less=function(){return(US=p._Less=p.asm.Less).apply(null,arguments)},WS=p._LessEqual=function(){return(WS=p._LessEqual=p.asm.LessEqual).apply(null,arguments)},KS=p._Log=function(){return(KS=p._Log=p.asm.Log).apply(null,arguments)},VS=p._LogicalAnd=function(){return(VS=p._LogicalAnd=p.asm.LogicalAnd).apply(null,arguments)},HS=p._LogicalNot=function(){return(HS=p._LogicalNot=p.asm.LogicalNot).apply(null,arguments)},qS=p._LogicalOr=function(){return(qS=p._LogicalOr=p.asm.LogicalOr).apply(null,arguments)},jS=p._LogicalXor=function(){return(jS=p._LogicalXor=p.asm.LogicalXor).apply(null,arguments)},XS=p._Max=function(){return(XS=p._Max=p.asm.Max).apply(null,arguments)},YS=p._MaxPool=function(){return(YS=p._MaxPool=p.asm.MaxPool).apply(null,arguments)},Jg=p._Maximum=function(){return(Jg=p._Maximum=p.asm.Maximum).apply(null,arguments)},eb=p._Mean=function(){return(eb=p._Mean=p.asm.Mean).apply(null,arguments)},Hf=p._Min=function(){return(Hf=p._Min=p.asm.Min).apply(null,arguments)},ZS=p._Minimum=function(){return(ZS=p._Minimum=p.asm.Minimum).apply(null,arguments)},QS=p._MirrorPad=function(){return(QS=p._MirrorPad=p.asm.MirrorPad).apply(null,arguments)},mm=p._Multiply=function(){return(mm=p._Multiply=p.asm.Multiply).apply(null,arguments)},tb=p._Neg=function(){return(tb=p._Neg=p.asm.Neg).apply(null,arguments)},cm=p._NonMaxSuppressionV3=function(){return(cm=p._NonMaxSuppressionV3=p.asm.NonMaxSuppressionV3).apply(null,arguments)},dm=p._NonMaxSuppressionV4=function(){return(dm=p._NonMaxSuppressionV4=p.asm.NonMaxSuppressionV4).apply(null,arguments)},JS=p._NonMaxSuppressionV5=function(){return(JS=p._NonMaxSuppressionV5=p.asm.NonMaxSuppressionV5).apply(null,arguments)},U=p._NotEqual=function(){return(U=p._NotEqual=p.asm.NotEqual).apply(null,arguments)},ee=p._OneHot=function(){return(ee=p._OneHot=p.asm.OneHot).apply(null,arguments)},Te=p._PadV2=function(){return(Te=p._PadV2=p.asm.PadV2).apply(null,arguments)},Le=p._Pow=function(){return(Le=p._Pow=p.asm.Pow).apply(null,arguments)},Lt=p._Prelu=function(){return(Lt=p._Prelu=p.asm.Prelu).apply(null,arguments)},Bt=p._Prod=function(){return(Bt=p._Prod=p.asm.Prod).apply(null,arguments)},nt=p._RealDiv=function(){return(nt=p._RealDiv=p.asm.RealDiv).apply(null,arguments)},Xe=p._Relu=function(){return(Xe=p._Relu=p.asm.Relu).apply(null,arguments)},mr=p._Relu6=function(){return(mr=p._Relu6=p.asm.Relu6).apply(null,arguments)},An=p._ResizeBilinear=function(){return(An=p._ResizeBilinear=p.asm.ResizeBilinear).apply(null,arguments)},sa=p._ResizeNearestNeighbor=function(){return(sa=p._ResizeNearestNeighbor=p.asm.ResizeNearestNeighbor).apply(null,arguments)},rb=p._Reverse=function(){return(rb=p._Reverse=p.asm.Reverse).apply(null,arguments)},qf=p._RotateWithOffset=function(){return(qf=p._RotateWithOffset=p.asm.RotateWithOffset).apply(null,arguments)},ev=p._Round=function(){return(ev=p._Round=p.asm.Round).apply(null,arguments)},ln=p._Rsqrt=function(){return(ln=p._Rsqrt=p.asm.Rsqrt).apply(null,arguments)},Pu=p._ScatterNd=function(){return(Pu=p._ScatterNd=p.asm.ScatterNd).apply(null,arguments)},nb=p._SelectV2=function(){return(nb=p._SelectV2=p.asm.SelectV2).apply(null,arguments)},dj=p._Sigmoid=function(){return(dj=p._Sigmoid=p.asm.Sigmoid).apply(null,arguments)},fj=p._Sin=function(){return(fj=p._Sin=p.asm.Sin).apply(null,arguments)},hj=p._Softmax=function(){return(hj=p._Softmax=p.asm.Softmax).apply(null,arguments)},gj=p._SparseFillEmptyRows=function(){return(gj=p._SparseFillEmptyRows=p.asm.SparseFillEmptyRows).apply(null,arguments)},bj=p._SparseReshape=function(){return(bj=p._SparseReshape=p.asm.SparseReshape).apply(null,arguments)},yj=p._SparseSegmentReduction=function(){return(yj=p._SparseSegmentReduction=p.asm.SparseSegmentReduction).apply(null,arguments)},Tj=p._Sqrt=function(){return(Tj=p._Sqrt=p.asm.Sqrt).apply(null,arguments)},xj=p._Square=function(){return(xj=p._Square=p.asm.Square).apply(null,arguments)},Ij=p._SquaredDifference=function(){return(Ij=p._SquaredDifference=p.asm.SquaredDifference).apply(null,arguments)},Cj=p._Step=function(){return(Cj=p._Step=p.asm.Step).apply(null,arguments)},kj=p._StridedSlice=function(){return(kj=p._StridedSlice=p.asm.StridedSlice).apply(null,arguments)},Sj=p._Sub=function(){return(Sj=p._Sub=p.asm.Sub).apply(null,arguments)},vj=p._Sum=function(){return(vj=p._Sum=p.asm.Sum).apply(null,arguments)},Aj=p._Tan=function(){return(Aj=p._Tan=p.asm.Tan).apply(null,arguments)},wj=p._Tanh=function(){return(wj=p._Tanh=p.asm.Tanh).apply(null,arguments)},Nj=p._Tile=function(){return(Nj=p._Tile=p.asm.Tile).apply(null,arguments)},Dj=p._TopK=function(){return(Dj=p._TopK=p.asm.TopK).apply(null,arguments)},Rj=p._Transform=function(){return(Rj=p._Transform=p.asm.Transform).apply(null,arguments)},Fj=p._Transpose=function(){return(Fj=p._Transpose=p.asm.Transpose).apply(null,arguments)},Pj=p.__FusedMatMul=function(){return(Pj=p.__FusedMatMul=p.asm._FusedMatMul).apply(null,arguments)},Mj=p._malloc=function(){return(Mj=p._malloc=p.asm.malloc).apply(null,arguments)},Ej=p._free=function(){return(Ej=p._free=p.asm.free).apply(null,arguments)},Lj=p.__emscripten_tls_init=function(){return(Lj=p.__emscripten_tls_init=p.asm._emscripten_tls_init).apply(null,arguments)},ob=p._pthread_self=function(){return(ob=p._pthread_self=p.asm.pthread_self).apply(null,arguments)},_j=p.___errno_location=function(){return(_j=p.___errno_location=p.asm.__errno_location).apply(null,arguments)},B0=p.__emscripten_thread_init=function(){return(B0=p.__emscripten_thread_init=p.asm._emscripten_thread_init).apply(null,arguments)},$j=p.__emscripten_thread_crashed=function(){return($j=p.__emscripten_thread_crashed=p.asm._emscripten_thread_crashed).apply(null,arguments)},Bj=p._emscripten_main_thread_process_queued_calls=function(){return(Bj=p._emscripten_main_thread_process_queued_calls=p.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},Oj=p._emscripten_main_browser_thread_id=function(){return(Oj=p._emscripten_main_browser_thread_id=p.asm.emscripten_main_browser_thread_id).apply(null,arguments)},O0=p._emscripten_run_in_main_runtime_thread_js=function(){return(O0=p._emscripten_run_in_main_runtime_thread_js=p.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},zj=p._emscripten_dispatch_to_thread_=function(){return(zj=p._emscripten_dispatch_to_thread_=p.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},z0=p.__emscripten_proxy_execute_task_queue=function(){return(z0=p.__emscripten_proxy_execute_task_queue=p.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)},tv=p.__emscripten_thread_free_data=function(){return(tv=p.__emscripten_thread_free_data=p.asm._emscripten_thread_free_data).apply(null,arguments)},G0=p.__emscripten_thread_exit=function(){return(G0=p.__emscripten_thread_exit=p.asm._emscripten_thread_exit).apply(null,arguments)},U0=p._emscripten_stack_set_limits=function(){return(U0=p._emscripten_stack_set_limits=p.asm.emscripten_stack_set_limits).apply(null,arguments)},rv=p.stackSave=function(){return(rv=p.stackSave=p.asm.stackSave).apply(null,arguments)},sb=p.stackRestore=function(){return(sb=p.stackRestore=p.asm.stackRestore).apply(null,arguments)},ab=p.stackAlloc=function(){return(ab=p.stackAlloc=p.asm.stackAlloc).apply(null,arguments)},Gj=p.dynCall_iijjiiii=function(){return(Gj=p.dynCall_iijjiiii=p.asm.dynCall_iijjiiii).apply(null,arguments)},Uj=p.dynCall_jiji=function(){return(Uj=p.dynCall_jiji=p.asm.dynCall_jiji).apply(null,arguments)};p.keepRuntimeAlive=ms,p.wasmMemory=ue,p.cwrap=eS,p.ExitStatus=zp,p.PThread=Qe;var ib;pm=function M(){ib||W0(),ib||(pm=M)};function W0(M){if(M=M||h,ui>0)return;if(k){m(p),$p(),postMessage({cmd:"loaded"});return}if(Or(),ui>0)return;function K(){ib||(ib=!0,p.calledRun=!0,!De&&($p(),m(p),p.onRuntimeInitialized&&p.onRuntimeInitialized(),Ck()))}p.setStatus?(p.setStatus("Running..."),setTimeout(function(){setTimeout(function(){p.setStatus("")},1),K()},1)):K()}if(p.preInit)for(typeof p.preInit=="function"&&(p.preInit=[p.preInit]);p.preInit.length>0;)p.preInit.pop()();W0();var ub;d&&(ub={uncaughtException:process.listeners("uncaughtException").filter(function(M){return!d.uncaughtException.indexOf(M)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(M){return!d.unhandledRejection.indexOf(M)>-1})});var pb;if(typeof WasmBackendModule<"u")pb=WasmBackendModule;else if(typeof t<"u")pb=t;else throw new Error("Could not find wasm module in post.js");if(ub){var Wj=pb._dispose;pb._dispose=function(){Wj(),ub.uncaughtException.forEach(function(M){process.removeListener("uncaughtException",M)}),ub.unhandledRejection.forEach(function(M){process.removeListener("unhandledRejection",M)})}}return t.ready}})();typeof Tk=="object"&&typeof p0=="object"?p0.exports=u0:typeof define=="function"&&define.amd?define([],function(){return u0}):typeof Tk=="object"&&(Tk.WasmBackendModuleThreadedSimd=u0)});var sj=Fr((xk,g0)=>{"use strict";var h0=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(t){t=t||{};var e=typeof t<"u"?t:{},n,o;e.ready=new Promise(function(U,ee){n=U,o=ee});var s;typeof process<"u"&&process.listeners&&(s={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var a=Object.assign({},e),i=[],u="./this.program",l=(U,ee)=>{throw ee},p=typeof window=="object",m=typeof importScripts=="function",c=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",d="";function f(U){return e.locateFile?e.locateFile(U,d):d+U}var h,g,b,T;function x(U){if(U instanceof ui)return;F("exiting due to exception: "+U)}var I,k,A;c?(m?d=Ag().dirname(d)+"/":d=__dirname+"/",A=()=>{k||(I=Xh(),k=Ag())},h=function(ee,Te){return A(),ee=k.normalize(ee),I.readFileSync(ee,Te?void 0:"utf8")},b=U=>{var ee=h(U,!0);return ee.buffer||(ee=new Uint8Array(ee)),ee},g=(U,ee,Te)=>{A(),U=k.normalize(U),I.readFile(U,function(Le,Lt){Le?Te(Le):ee(Lt.buffer)})},process.argv.length>1&&(u=process.argv[1].replace(/\\/g,"/")),i=process.argv.slice(2),process.on("uncaughtException",function(U){if(!(U instanceof ui))throw U}),process.on("unhandledRejection",function(U){throw U}),l=(U,ee)=>{if(Vt())throw process.exitCode=U,ee;x(ee),process.exit(U)},e.inspect=function(){return"[Emscripten Module object]"}):(p||m)&&(m?d=self.location.href:typeof document<"u"&&document.currentScript&&(d=document.currentScript.src),r&&(d=r),d.indexOf("blob:")!==0?d=d.substr(0,d.replace(/[?#].*/,"").lastIndexOf("/")+1):d="",h=U=>{var ee=new XMLHttpRequest;return ee.open("GET",U,!1),ee.send(null),ee.responseText},m&&(b=U=>{var ee=new XMLHttpRequest;return ee.open("GET",U,!1),ee.responseType="arraybuffer",ee.send(null),new Uint8Array(ee.response)}),g=(U,ee,Te)=>{var Le=new XMLHttpRequest;Le.open("GET",U,!0),Le.responseType="arraybuffer",Le.onload=()=>{if(Le.status==200||Le.status==0&&Le.response){ee(Le.response);return}Te()},Le.onerror=Te,Le.send(null)},T=U=>document.title=U);var R=e.print||console.log.bind(console),F=e.printErr||console.warn.bind(console);Object.assign(e,a),a=null,e.arguments&&(i=e.arguments),e.thisProgram&&(u=e.thisProgram),e.quit&&(l=e.quit);var P=4,L;e.wasmBinary&&(L=e.wasmBinary);var O=e.noExitRuntime||!0;typeof WebAssembly!="object"&&ls("no native wasm support detected");var G,W=!1,H;function V(U,ee){U||ls(ee)}var q=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function Z(U,ee,Te){for(var Le=ee+Te,Lt=ee;U[Lt]&&!(Lt>=Le);)++Lt;if(Lt-ee>16&&U.buffer&&q)return q.decode(U.subarray(ee,Lt));for(var Bt="";ee<Lt;){var nt=U[ee++];if(!(nt&128)){Bt+=String.fromCharCode(nt);continue}var Xe=U[ee++]&63;if((nt&224)==192){Bt+=String.fromCharCode((nt&31)<<6|Xe);continue}var mr=U[ee++]&63;if((nt&240)==224?nt=(nt&15)<<12|Xe<<6|mr:nt=(nt&7)<<18|Xe<<12|mr<<6|U[ee++]&63,nt<65536)Bt+=String.fromCharCode(nt);else{var An=nt-65536;Bt+=String.fromCharCode(55296|An>>10,56320|An&1023)}}return Bt}function j(U,ee){return U?Z(ge,U,ee):""}function Y(U,ee,Te,Le){if(!(Le>0))return 0;for(var Lt=Te,Bt=Te+Le-1,nt=0;nt<U.length;++nt){var Xe=U.charCodeAt(nt);if(Xe>=55296&&Xe<=57343){var mr=U.charCodeAt(++nt);Xe=65536+((Xe&1023)<<10)|mr&1023}if(Xe<=127){if(Te>=Bt)break;ee[Te++]=Xe}else if(Xe<=2047){if(Te+1>=Bt)break;ee[Te++]=192|Xe>>6,ee[Te++]=128|Xe&63}else if(Xe<=65535){if(Te+2>=Bt)break;ee[Te++]=224|Xe>>12,ee[Te++]=128|Xe>>6&63,ee[Te++]=128|Xe&63}else{if(Te+3>=Bt)break;ee[Te++]=240|Xe>>18,ee[Te++]=128|Xe>>12&63,ee[Te++]=128|Xe>>6&63,ee[Te++]=128|Xe&63}}return ee[Te]=0,Te-Lt}function se(U,ee,Te){return Y(U,ge,ee,Te)}function ae(U){for(var ee=0,Te=0;Te<U.length;++Te){var Le=U.charCodeAt(Te);Le<=127?ee++:Le<=2047?ee+=2:Le>=55296&&Le<=57343?(ee+=4,++Te):ee+=3}return ee}var pe,oe,ge,fe,ue,ve,De,Fe,je;function Q(U){pe=U,e.HEAP8=oe=new Int8Array(U),e.HEAP16=fe=new Int16Array(U),e.HEAP32=ve=new Int32Array(U),e.HEAPU8=ge=new Uint8Array(U),e.HEAPU16=ue=new Uint16Array(U),e.HEAPU32=De=new Uint32Array(U),e.HEAPF32=Fe=new Float32Array(U),e.HEAPF64=je=new Float64Array(U)}var bt=e.INITIAL_MEMORY||16777216,lt,Dt=[],Mt=[],Tt=[],st=!1;function Vt(){return O}function zn(){if(e.preRun)for(typeof e.preRun=="function"&&(e.preRun=[e.preRun]);e.preRun.length;)Br(e.preRun.shift());Bp(Dt)}function pr(){st=!0,Bp(Mt)}function ro(){if(e.postRun)for(typeof e.postRun=="function"&&(e.postRun=[e.postRun]);e.postRun.length;)un(e.postRun.shift());Bp(Tt)}function Br(U){Dt.unshift(U)}function ps(U){Mt.unshift(U)}function un(U){Tt.unshift(U)}var vr=0,lr=null,Yr=null;function Zr(U){vr++,e.monitorRunDependencies&&e.monitorRunDependencies(vr)}function ii(U){if(vr--,e.monitorRunDependencies&&e.monitorRunDependencies(vr),vr==0&&(lr!==null&&(clearInterval(lr),lr=null),Yr)){var ee=Yr;Yr=null,ee()}}function ls(U){e.onAbort&&e.onAbort(U),U="Aborted("+U+")",F(U),W=!0,H=1,U+=". Build with -sASSERTIONS for more info.";var ee=new WebAssembly.RuntimeError(U);throw o(ee),ee}var Du="data:application/octet-stream;base64,";function um(U){return U.startsWith(Du)}function ms(U){return U.startsWith("file://")}var Or;Or="tfjs-backend-wasm.wasm",um(Or)||(Or=f(Or));function $p(U){try{if(U==Or&&L)return new Uint8Array(L);if(b)return b(U);throw"both async and sync fetching of the wasm failed"}catch(ee){ls(ee)}}function Ck(){if(!L&&(p||m)){if(typeof fetch=="function"&&!ms(Or))return fetch(Or,{credentials:"same-origin"}).then(function(U){if(!U.ok)throw"failed to load wasm binary file at '"+Or+"'";return U.arrayBuffer()}).catch(function(){return $p(Or)});if(g)return new Promise(function(U,ee){g(Or,function(Te){U(new Uint8Array(Te))},ee)})}return Promise.resolve().then(function(){return $p(Or)})}function kk(){var U={env:Gg,wasi_snapshot_preview1:Gg};function ee(nt,Xe){var mr=nt.exports;e.asm=mr,G=e.asm.memory,Q(G.buffer),lt=e.asm.__indirect_function_table,ps(e.asm.__wasm_call_ctors),ii("wasm-instantiate")}Zr("wasm-instantiate");function Te(nt){ee(nt.instance)}function Le(nt){return Ck().then(function(Xe){return WebAssembly.instantiate(Xe,U)}).then(function(Xe){return Xe}).then(nt,function(Xe){F("failed to asynchronously prepare wasm: "+Xe),ls(Xe)})}function Lt(){return!L&&typeof WebAssembly.instantiateStreaming=="function"&&!um(Or)&&!ms(Or)&&!c&&typeof fetch=="function"?fetch(Or,{credentials:"same-origin"}).then(function(nt){var Xe=WebAssembly.instantiateStreaming(nt,U);return Xe.then(Te,function(mr){return F("wasm streaming compile failed: "+mr),F("falling back to ArrayBuffer instantiation"),Le(Te)})}):Le(Te)}if(e.instantiateWasm)try{var Bt=e.instantiateWasm(U,ee);return Bt}catch(nt){return F("Module.instantiateWasm callback failed with error: "+nt),!1}return Lt().catch(o),{}}var I0,C0;function ui(U){this.name="ExitStatus",this.message="Program terminated with exit("+U+")",this.status=U}function Bp(U){for(;U.length>0;)U.shift()(e)}function pm(U){return U}function k0(U){var ee=/\b_Z[\w\d_]+/g;return U.replace(ee,function(Te){var Le=Te;return Te===Le?Te:Le+" ["+Te+"]"})}function S0(){var U=new Error;if(!U.stack){try{throw new Error}catch(ee){U=ee}if(!U.stack)return"(no stack trace available)"}return U.stack.toString()}function Op(U,ee){oe.set(U,ee)}function Sk(){ls("")}function Fg(U,ee,Te){ge.copyWithin(U,ee,ee+Te)}function Pg(){return 2147483648}function pn(U){try{return G.grow(U-pe.byteLength+65535>>>16),Q(G.buffer),1}catch{}}function Mg(U){var ee=ge.length;U=U>>>0;var Te=Pg();if(U>Te)return!1;let Le=(mr,An)=>mr+(An-mr%An)%An;for(var Lt=1;Lt<=4;Lt*=2){var Bt=ee*(1+.2/Lt);Bt=Math.min(Bt,U+100663296);var nt=Math.min(Te,Le(Math.max(U,Bt),65536)),Xe=pn(nt);if(Xe)return!0}return!1}var Eg={varargs:void 0,get:function(){Eg.varargs+=4;var U=ve[Eg.varargs-4>>2];return U},getStr:function(U){var ee=j(U);return ee}};function vk(U){return 52}function v0(U,ee,Te,Le,Lt){return 70}var A0=[null,[],[]];function Ak(U,ee){var Te=A0[U];ee===0||ee===10?((U===1?R:F)(Z(Te,0)),Te.length=0):Te.push(ee)}function zp(U,ee,Te,Le){for(var Lt=0,Bt=0;Bt<Te;Bt++){var nt=De[ee>>2],Xe=De[ee+4>>2];ee+=8;for(var mr=0;mr<Xe;mr++)Ak(U,ge[nt+mr]);Lt+=Xe}return De[Le>>2]=Lt,0}function Lg(U,ee){U<128?ee.push(U):ee.push(U%128|128,U>>7)}function wk(U){for(var ee={i:"i32",j:"i64",f:"f32",d:"f64",p:"i32"},Te={parameters:[],results:U[0]=="v"?[]:[ee[U[0]]]},Le=1;Le<U.length;++Le)Te.parameters.push(ee[U[Le]]);return Te}function Nk(U,ee){if(typeof WebAssembly.Function=="function")return new WebAssembly.Function(wk(ee),U);var Te=[1,96],Le=ee.slice(0,1),Lt=ee.slice(1),Bt={i:127,p:127,j:126,f:125,d:124};Lg(Lt.length,Te);for(var nt=0;nt<Lt.length;++nt)Te.push(Bt[Lt[nt]]);Le=="v"?Te.push(0):Te.push(1,Bt[Le]);var Xe=[0,97,115,109,1,0,0,0,1];Lg(Te.length,Xe),Xe.push.apply(Xe,Te),Xe.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0);var mr=new WebAssembly.Module(new Uint8Array(Xe)),An=new WebAssembly.Instance(mr,{e:{f:U}}),sa=An.exports.f;return sa}var Ru=[];function _g(U){var ee=Ru[U];return ee||(U>=Ru.length&&(Ru.length=U+1),Ru[U]=ee=lt.get(U)),ee}function Dk(U,ee){if($g)for(var Te=U;Te<U+ee;Te++){var Le=_g(Te);Le&&$g.set(Le,Te)}}var $g=void 0,Uf=[];function w0(){if(Uf.length)return Uf.pop();try{lt.grow(1)}catch(U){throw U instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":U}return lt.length-1}function Qe(U,ee){lt.set(U,ee),Ru[U]=lt.get(U)}var Bg=1;function N0(U,ee,Te){for(var Le=0;Le<U.length;++Le)oe[ee++>>0]=U.charCodeAt(Le);Te||(oe[ee>>0]=0)}var mj=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0;function Wf(U){Wf.shown||(Wf.shown={}),Wf.shown[U]||(Wf.shown[U]=1,c&&(U="warning: "+U),F(U))}function Og(U){var ee=e["_"+U];return ee}function zg(U,ee,Te,Le,Lt){var Bt={string:ln=>{var Pu=0;if(ln!=null&&ln!==0){var nb=(ln.length<<2)+1;Pu=Hf(nb),se(ln,Pu,nb)}return Pu},array:ln=>{var Pu=Hf(ln.length);return Op(ln,Pu),Pu}};function nt(ln){return ee==="string"?j(ln):ee==="boolean"?Boolean(ln):ln}var Xe=Og(U),mr=[],An=0;if(Le)for(var sa=0;sa<Le.length;sa++){var rb=Bt[Te[sa]];rb?(An===0&&(An=Jg()),mr[sa]=rb(Le[sa])):mr[sa]=Le[sa]}var qf=Xe.apply(null,mr);function ev(ln){return An!==0&&eb(An),nt(ln)}return qf=ev(qf),qf}function Gp(U,ee,Te,Le){Te=Te||[];var Lt=Te.every(nt=>nt==="number"||nt==="boolean"),Bt=ee!=="string";return Bt&&Lt&&!Le?Og(U):function(){return zg(U,ee,Te,arguments,Le)}}var Rk=!1,Gg={abort:Sk,emscripten_memcpy_big:Fg,emscripten_resize_heap:Mg,fd_close:vk,fd_seek:v0,fd_write:zp},cj=kk(),Fk=e.___wasm_call_ctors=function(){return(Fk=e.___wasm_call_ctors=e.asm.__wasm_call_ctors).apply(null,arguments)},Pk=e._init=function(){return(Pk=e._init=e.asm.init).apply(null,arguments)},Mk=e._init_with_threads_count=function(){return(Mk=e._init_with_threads_count=e.asm.init_with_threads_count).apply(null,arguments)},Ek=e._get_threads_count=function(){return(Ek=e._get_threads_count=e.asm.get_threads_count).apply(null,arguments)},Ug=e._register_tensor=function(){return(Ug=e._register_tensor=e.asm.register_tensor).apply(null,arguments)},Wg=e._dispose_data=function(){return(Wg=e._dispose_data=e.asm.dispose_data).apply(null,arguments)},Lk=e._dispose=function(){return(Lk=e._dispose=e.asm.dispose).apply(null,arguments)},_k=e._Abs=function(){return(_k=e._Abs=e.asm.Abs).apply(null,arguments)},$k=e._Add=function(){return($k=e._Add=e.asm.Add).apply(null,arguments)},Bk=e._AddN=function(){return(Bk=e._AddN=e.asm.AddN).apply(null,arguments)},Kf=e._All=function(){return(Kf=e._All=e.asm.All).apply(null,arguments)},Ok=e._Any=function(){return(Ok=e._Any=e.asm.Any).apply(null,arguments)},zk=e._ArgMax=function(){return(zk=e._ArgMax=e.asm.ArgMax).apply(null,arguments)},Gk=e._AvgPool=function(){return(Gk=e._AvgPool=e.asm.AvgPool).apply(null,arguments)},Up=e._BatchMatMul=function(){return(Up=e._BatchMatMul=e.asm.BatchMatMul).apply(null,arguments)},Uk=e._Ceil=function(){return(Uk=e._Ceil=e.asm.Ceil).apply(null,arguments)},Kg=e._ClipByValue=function(){return(Kg=e._ClipByValue=e.asm.ClipByValue).apply(null,arguments)},Wk=e._Conv2D=function(){return(Wk=e._Conv2D=e.asm.Conv2D).apply(null,arguments)},lm=e._Conv2DBackpropInput=function(){return(lm=e._Conv2DBackpropInput=e.asm.Conv2DBackpropInput).apply(null,arguments)},Kk=e._Cos=function(){return(Kk=e._Cos=e.asm.Cos).apply(null,arguments)},Vk=e._Cosh=function(){return(Vk=e._Cosh=e.asm.Cosh).apply(null,arguments)},Fu=e._CropAndResize=function(){return(Fu=e._CropAndResize=e.asm.CropAndResize).apply(null,arguments)},Vf=e._Cumprod=function(){return(Vf=e._Cumprod=e.asm.Cumprod).apply(null,arguments)},Hk=e._Cumsum=function(){return(Hk=e._Cumsum=e.asm.Cumsum).apply(null,arguments)},qk=e._DepthToSpace=function(){return(qk=e._DepthToSpace=e.asm.DepthToSpace).apply(null,arguments)},jk=e._DepthwiseConv2dNative=function(){return(jk=e._DepthwiseConv2dNative=e.asm.DepthwiseConv2dNative).apply(null,arguments)},Xk=e._Elu=function(){return(Xk=e._Elu=e.asm.Elu).apply(null,arguments)},Vg=e._Equal=function(){return(Vg=e._Equal=e.asm.Equal).apply(null,arguments)},Hg=e._Exp=function(){return(Hg=e._Exp=e.asm.Exp).apply(null,arguments)},Yk=e._FlipLeftRight=function(){return(Yk=e._FlipLeftRight=e.asm.FlipLeftRight).apply(null,arguments)},Zk=e._Floor=function(){return(Zk=e._Floor=e.asm.Floor).apply(null,arguments)},qg=e._FloorDiv=function(){return(qg=e._FloorDiv=e.asm.FloorDiv).apply(null,arguments)},jg=e._FusedBatchNorm=function(){return(jg=e._FusedBatchNorm=e.asm.FusedBatchNorm).apply(null,arguments)},Qk=e._FusedConv2D=function(){return(Qk=e._FusedConv2D=e.asm.FusedConv2D).apply(null,arguments)},D0=e._FusedDepthwiseConv2D=function(){return(D0=e._FusedDepthwiseConv2D=e.asm.FusedDepthwiseConv2D).apply(null,arguments)},R0=e._Gather=function(){return(R0=e._Gather=e.asm.Gather).apply(null,arguments)},Xg=e._GatherNd=function(){return(Xg=e._GatherNd=e.asm.GatherNd).apply(null,arguments)},Yg=e._Greater=function(){return(Yg=e._Greater=e.asm.Greater).apply(null,arguments)},F0=e._GreaterEqual=function(){return(F0=e._GreaterEqual=e.asm.GreaterEqual).apply(null,arguments)},P0=e._LeakyRelu=function(){return(P0=e._LeakyRelu=e.asm.LeakyRelu).apply(null,arguments)},M0=e._Less=function(){return(M0=e._Less=e.asm.Less).apply(null,arguments)},E0=e._LessEqual=function(){return(E0=e._LessEqual=e.asm.LessEqual).apply(null,arguments)},L0=e._Log=function(){return(L0=e._Log=e.asm.Log).apply(null,arguments)},Zg=e._LogicalAnd=function(){return(Zg=e._LogicalAnd=e.asm.LogicalAnd).apply(null,arguments)},Jk=e._LogicalNot=function(){return(Jk=e._LogicalNot=e.asm.LogicalNot).apply(null,arguments)},eS=e._LogicalOr=function(){return(eS=e._LogicalOr=e.asm.LogicalOr).apply(null,arguments)},tS=e._LogicalXor=function(){return(tS=e._LogicalXor=e.asm.LogicalXor).apply(null,arguments)},_0=e._Max=function(){return(_0=e._Max=e.asm.Max).apply(null,arguments)},Qg=e._MaxPool=function(){return(Qg=e._MaxPool=e.asm.MaxPool).apply(null,arguments)},$0=e._Maximum=function(){return($0=e._Maximum=e.asm.Maximum).apply(null,arguments)},rS=e._Mean=function(){return(rS=e._Mean=e.asm.Mean).apply(null,arguments)},nS=e._Min=function(){return(nS=e._Min=e.asm.Min).apply(null,arguments)},oS=e._Minimum=function(){return(oS=e._Minimum=e.asm.Minimum).apply(null,arguments)},sS=e._MirrorPad=function(){return(sS=e._MirrorPad=e.asm.MirrorPad).apply(null,arguments)},aS=e._Multiply=function(){return(aS=e._Multiply=e.asm.Multiply).apply(null,arguments)},iS=e._Neg=function(){return(iS=e._Neg=e.asm.Neg).apply(null,arguments)},uS=e._NonMaxSuppressionV3=function(){return(uS=e._NonMaxSuppressionV3=e.asm.NonMaxSuppressionV3).apply(null,arguments)},pS=e._NonMaxSuppressionV4=function(){return(pS=e._NonMaxSuppressionV4=e.asm.NonMaxSuppressionV4).apply(null,arguments)},lS=e._NonMaxSuppressionV5=function(){return(lS=e._NonMaxSuppressionV5=e.asm.NonMaxSuppressionV5).apply(null,arguments)},mS=e._NotEqual=function(){return(mS=e._NotEqual=e.asm.NotEqual).apply(null,arguments)},cS=e._OneHot=function(){return(cS=e._OneHot=e.asm.OneHot).apply(null,arguments)},dS=e._PadV2=function(){return(dS=e._PadV2=e.asm.PadV2).apply(null,arguments)},fS=e._Pow=function(){return(fS=e._Pow=e.asm.Pow).apply(null,arguments)},hS=e._Prelu=function(){return(hS=e._Prelu=e.asm.Prelu).apply(null,arguments)},gS=e._Prod=function(){return(gS=e._Prod=e.asm.Prod).apply(null,arguments)},bS=e._RealDiv=function(){return(bS=e._RealDiv=e.asm.RealDiv).apply(null,arguments)},yS=e._Relu=function(){return(yS=e._Relu=e.asm.Relu).apply(null,arguments)},TS=e._Relu6=function(){return(TS=e._Relu6=e.asm.Relu6).apply(null,arguments)},xS=e._ResizeBilinear=function(){return(xS=e._ResizeBilinear=e.asm.ResizeBilinear).apply(null,arguments)},IS=e._ResizeNearestNeighbor=function(){return(IS=e._ResizeNearestNeighbor=e.asm.ResizeNearestNeighbor).apply(null,arguments)},CS=e._Reverse=function(){return(CS=e._Reverse=e.asm.Reverse).apply(null,arguments)},kS=e._RotateWithOffset=function(){return(kS=e._RotateWithOffset=e.asm.RotateWithOffset).apply(null,arguments)},SS=e._Round=function(){return(SS=e._Round=e.asm.Round).apply(null,arguments)},vS=e._Rsqrt=function(){return(vS=e._Rsqrt=e.asm.Rsqrt).apply(null,arguments)},AS=e._ScatterNd=function(){return(AS=e._ScatterNd=e.asm.ScatterNd).apply(null,arguments)},wS=e._SelectV2=function(){return(wS=e._SelectV2=e.asm.SelectV2).apply(null,arguments)},NS=e._Sigmoid=function(){return(NS=e._Sigmoid=e.asm.Sigmoid).apply(null,arguments)},DS=e._Sin=function(){return(DS=e._Sin=e.asm.Sin).apply(null,arguments)},RS=e._Softmax=function(){return(RS=e._Softmax=e.asm.Softmax).apply(null,arguments)},FS=e._SparseFillEmptyRows=function(){return(FS=e._SparseFillEmptyRows=e.asm.SparseFillEmptyRows).apply(null,arguments)},PS=e._SparseReshape=function(){return(PS=e._SparseReshape=e.asm.SparseReshape).apply(null,arguments)},MS=e._SparseSegmentReduction=function(){return(MS=e._SparseSegmentReduction=e.asm.SparseSegmentReduction).apply(null,arguments)},ES=e._Sqrt=function(){return(ES=e._Sqrt=e.asm.Sqrt).apply(null,arguments)},LS=e._Square=function(){return(LS=e._Square=e.asm.Square).apply(null,arguments)},_S=e._SquaredDifference=function(){return(_S=e._SquaredDifference=e.asm.SquaredDifference).apply(null,arguments)},$S=e._Step=function(){return($S=e._Step=e.asm.Step).apply(null,arguments)},BS=e._StridedSlice=function(){return(BS=e._StridedSlice=e.asm.StridedSlice).apply(null,arguments)},OS=e._Sub=function(){return(OS=e._Sub=e.asm.Sub).apply(null,arguments)},zS=e._Sum=function(){return(zS=e._Sum=e.asm.Sum).apply(null,arguments)},GS=e._Tan=function(){return(GS=e._Tan=e.asm.Tan).apply(null,arguments)},US=e._Tanh=function(){return(US=e._Tanh=e.asm.Tanh).apply(null,arguments)},WS=e._Tile=function(){return(WS=e._Tile=e.asm.Tile).apply(null,arguments)},KS=e._TopK=function(){return(KS=e._TopK=e.asm.TopK).apply(null,arguments)},VS=e._Transform=function(){return(VS=e._Transform=e.asm.Transform).apply(null,arguments)},HS=e._Transpose=function(){return(HS=e._Transpose=e.asm.Transpose).apply(null,arguments)},qS=e.__FusedMatMul=function(){return(qS=e.__FusedMatMul=e.asm._FusedMatMul).apply(null,arguments)},jS=e._malloc=function(){return(jS=e._malloc=e.asm.malloc).apply(null,arguments)},XS=e._free=function(){return(XS=e._free=e.asm.free).apply(null,arguments)},YS=e.___errno_location=function(){return(YS=e.___errno_location=e.asm.__errno_location).apply(null,arguments)},Jg=e.stackSave=function(){return(Jg=e.stackSave=e.asm.stackSave).apply(null,arguments)},eb=e.stackRestore=function(){return(eb=e.stackRestore=e.asm.stackRestore).apply(null,arguments)},Hf=e.stackAlloc=function(){return(Hf=e.stackAlloc=e.asm.stackAlloc).apply(null,arguments)},ZS=e.dynCall_iijjiiii=function(){return(ZS=e.dynCall_iijjiiii=e.asm.dynCall_iijjiiii).apply(null,arguments)},QS=e.dynCall_jiji=function(){return(QS=e.dynCall_jiji=e.asm.dynCall_jiji).apply(null,arguments)};e.cwrap=Gp;var mm;Yr=function U(){mm||tb(),mm||(Yr=U)};function tb(U){if(U=U||i,vr>0||(zn(),vr>0))return;function ee(){mm||(mm=!0,e.calledRun=!0,!W&&(pr(),n(e),e.onRuntimeInitialized&&e.onRuntimeInitialized(),ro()))}e.setStatus?(e.setStatus("Running..."),setTimeout(function(){setTimeout(function(){e.setStatus("")},1),ee()},1)):ee()}if(e.preInit)for(typeof e.preInit=="function"&&(e.preInit=[e.preInit]);e.preInit.length>0;)e.preInit.pop()();tb();var cm;s&&(cm={uncaughtException:process.listeners("uncaughtException").filter(function(U){return!s.uncaughtException.indexOf(U)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(U){return!s.unhandledRejection.indexOf(U)>-1})});var dm;if(typeof t<"u")dm=t;else if(typeof WasmBackendModuleThreadedSimd<"u")dm=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(cm){var JS=dm._dispose;dm._dispose=function(){JS(),cm.uncaughtException.forEach(function(U){process.removeListener("uncaughtException",U)}),cm.unhandledRejection.forEach(function(U){process.removeListener("unhandledRejection",U)})}}return t.ready}})();typeof xk=="object"&&typeof g0=="object"?g0.exports=h0:typeof define=="function"&&define.amd?define([],function(){return h0}):typeof xk=="object"&&(xk.WasmBackendModule=h0)});var Zj=1e-7,Qj=1e-4,ia=class{constructor(t,e){this.backend=t;this.dataMover=e;this.data=new WeakMap;this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}},oo=class{refCount(t){return no("refCount")}incRef(t){return no("incRef")}timerAvailable(){return!0}time(t){return no("time")}read(t){return no("read")}readSync(t){return no("readSync")}readToGPU(t,e){return no("readToGPU")}numDataIds(){return no("numDataIds")}disposeData(t,e){return no("disposeData")}write(t,e,n){return no("write")}move(t,e,n,o,s){return no("move")}memory(){return no("memory")}floatPrecision(){return no("floatPrecision")}epsilon(){return this.floatPrecision()===32?Zj:Qj}dispose(){return no("dispose")}};function no(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function q0(r){let t=r.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,lb(r,t,e)}function Jj(r,t){if(r.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${t.length}`);let e=r.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,lb(r,e,n),lb(t,e,n)}function gm(r,t,e){return Math.max(r,Math.min(t,e))}function e6(r){return r%2===0?r:r+1}function lb(r,t,e){let n=r[t];r[t]=r[e],r[e]=n}function t6(r){let t=0;for(let e=0;e<r.length;e++)t+=r[e];return t}function r6(r,t){let e=Math.random();return t*e+(1-e)*r}function n6(r,t){let e=0;for(let n=0;n<r.length;n++){let o=Number(r[n])-Number(t[n]);e+=o*o}return e}function D(r,t){if(!r)throw new Error(typeof t=="string"?t:t())}function Ot(r,t,e=""){D(Un(r,t),()=>e+` Shapes ${r} and ${t} must match`)}function so(r){D(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ua(r,t=[],e=!1){if(t==null&&(t=[]),Array.isArray(r)||Cr(r)&&!e)for(let n=0;n<r.length;++n)ua(r[n],t,e);else t.push(r);return t}function tt(r){if(r.length===0)return 1;let t=r[0];for(let e=1;e<r.length;e++)t*=r[e];return t}function o6(r){return r.length===0}function Un(r,t){if(r===t)return!0;if(r==null||t==null||r.length!==t.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==t[e])return!1;return!0}function Pi(r){return r%1===0}function s6(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let t=Math.exp(2*r);return(t-1)/(t+1)}}function a6(r){let t=Math.ceil(Math.sqrt(r));return[t,Math.ceil(r/t)]}function i6(r){let t=new Uint32Array(r);for(let e=0;e<r;++e)t[e]=e;return q0(t),t}function Kp(r,t){return t<=r.length?r:r+" ".repeat(t-r.length)}function u6(r,t=n=>0,e){return new Promise((n,o)=>{let s=0,a=()=>{if(r()){n();return}s++;let i=t(s);if(e!=null&&s>=e){o();return}setTimeout(a,i)};a()})}function p6(r,t){let e=1,n=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)e*=r[s];else if(r[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(n===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${r}`);return r}if(e===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);let o=r.slice();return o[n]=t/e,o}function gr(r,t){let e=t.length;return r=r==null?t.map((n,o)=>o):[].concat(r),D(r.every(n=>n>=-e&&n<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${r}`),D(r.every(n=>Pi(n)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(n=>n<0?e+n:n)}function sv(r,t){let e=[],n=[],o=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||o?null:gr(t,r).sort(),a=0;for(let i=0;i<r.length;++i){if(s!=null){if(s[a]===i&&r[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${r[i]}' is not 1`);(s[a]==null||s[a]>i)&&r[i]===1&&(e.push(r[i]),n.push(i)),s[a]<=i&&a++}r[i]!==1&&(e.push(r[i]),n.push(i))}return{newShape:e,keptDims:n}}function av(r,t){let e=null;if(r==null||r==="float32")e=new Float32Array(t);else if(r==="int32")e=new Int32Array(t);else if(r==="bool")e=new Uint8Array(t);else throw new Error(`Unknown data type ${r}`);return e}function iv(r,t){let e=null;if(r==null||r==="float32")e=new Float32Array(t);else if(r==="int32")e=new Int32Array(t);else if(r==="bool")e=new Uint8Array(t);else if(r==="string")e=new Array(t);else throw new Error(`Unknown data type ${r}`);return e}function uv(r,t){for(let e=0;e<r.length;e++){let n=r[e];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}function pv(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function l6(r,t){return!(t==="complex64"||t==="float32"&&r!=="complex64"||t==="int32"&&r!=="float32"&&r!=="complex64"||t==="bool"&&r==="bool")}function Cr(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}function mb(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function lv(r){if(r==null)return 0;let t=0;return r.forEach(e=>t+=e.length),t}function pa(r){return typeof r=="string"||r instanceof String}function j0(r){return typeof r=="boolean"}function X0(r){return typeof r=="number"}function bm(r){return Array.isArray(r)?bm(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":X0(r)?"float32":pa(r)?"string":j0(r)?"bool":"float32"}function pi(r){return!!(r&&r.constructor&&r.call&&r.apply)}function ym(r,t){for(let e=t;e<r;++e)if(r%e===0)return e;return r}function li(r){let t=r.length;if(t<2)return[];let e=new Array(t-1);e[t-2]=r[t-1];for(let n=t-3;n>=0;--n)e[n]=e[n+1]*r[n+1];return e}function Y0(r,t,e,n=!1){let o=new Array;if(t.length===1){let s=t[0]*(n?2:1);for(let a=0;a<s;a++)o[a]=e[r+a]}else{let s=t[0],a=t.slice(1),i=a.reduce((u,l)=>u*l)*(n?2:1);for(let u=0;u<s;u++)o[u]=Y0(r+u*i,a,e,n)}return o}function Wp(r,t,e=!1){if(r.length===0)return t[0];let n=r.reduce((o,s)=>o*s)*(e?2:1);if(n===0)return[];if(n!==t.length)throw new Error(`[${r}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return Y0(0,r,t,e)}function jf(r,t){let e=Tm(r,t);for(let n=0;n<e.length;n++)e[n]=1;return e}function Tm(r,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${t}`)}function m6(r,t){let e=r.reduce((n,o)=>n*o,1);if(t==null||t==="float32")return Wp(r,new Float32Array(e));if(t==="int32")return Wp(r,new Int32Array(e));if(t==="bool")return Wp(r,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function Xf(r){r.forEach(t=>{D(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function c6(r,t,e){if(t===0)return 0;if(t===1)return r[0];let n=r[r.length-1];for(let o=0;o<r.length-1;++o)n+=e[o]*r[o];return n}function d6(r,t,e){if(t===0)return[];if(t===1)return[r];let n=new Array(t);for(let o=0;o<n.length-1;++o)n[o]=Math.floor(r/e[o]),r-=n[o]*e[o];return n[n.length-1]=r,n}function Yf(r){return r&&r.then&&typeof r.then=="function"}var Z0="tfjsflags",Zf=class{constructor(t){this.global=t;this.flags={};this.flagRegistry={};this.urlFlags={};this.getQueryParams=h6;this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&($().getBool("IS_TEST")||$().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},this.urlFlags[t]!=null){let o=this.urlFlags[t];$().getBool("IS_TEST")||$().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${o}.`),this.set(t,o)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];let e=this.evaluateFlag(t);if(Yf(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let t=this.getQueryParams(this.global.location.search);Z0 in t&&t[Z0].split(",").forEach(n=>{let[o,s]=n.split(":");this.urlFlags[o]=b6(o,s)})}};function h6(r){let t={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(g6(t,n[0],n[1]),n.join("="))),t}function g6(r,t,e){r[decodeURIComponent(t)]=decodeURIComponent(e||"")}function b6(r,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${r}.`)}function $(){return mv}var mv=null;function Q0(r){mv=r}var cv;function dv(){if(cv==null){let r;if(typeof window<"u")r=window;else if(typeof global<"u")r=global;else if(typeof process<"u")r=process;else if(typeof self<"u")r=self;else throw new Error("Could not find a global object");cv=r}return cv}function y6(){let r=dv();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function Qf(r,t){let e=y6();if(e.has(r))return e.get(r);{let n=t();return e.set(r,n),e.get(r)}}var cs="Abs",Mi="Acos",Ei="Acosh",Nn="Add",ao="AddN",Li="All",_i="Any",io="ArgMax",mi="ArgMin",$i="Asin",Bi="Asinh",Oi="Atan",zi="Atanh",la="Atan2",uo="AvgPool",xm="AvgPoolGrad",Mu="AvgPool3D",Im="AvgPool3DGrad",po="BatchMatMul",ds="BatchToSpaceND",Cm="Bincount",J0="BroadcastTo",km="BroadcastArgs",Wn="Cast",lo="Ceil",Kn="ClipByValue",Eu="Complex",Lu="ComplexAbs",fs="Concat",mo="Conv2D",Sm="Conv2DBackpropFilter",co="Conv2DBackpropInput",_u="Conv3D",vm="Conv3DBackpropFilterV2",Am="Conv3DBackpropInputV2",fo="Cos",ho="Cosh",ma="Cumprod",go="Cumsum",ca="CropAndResize",wm="DenseBincount",da="DepthToSpace",bo="DepthwiseConv2dNative",Nm="DepthwiseConv2dNativeBackpropFilter",Dm="DepthwiseConv2dNativeBackpropInput",Rm="Diag",$u="Dilation2D",Jf="Dilation2DBackpropInput",eh="Dilation2DBackpropFilter",yo="RealDiv",Bu="Einsum",To="Elu",Fm="EluGrad",Gi="Erf",fa="Equal",xo="Exp",hs="ExpandDims",ha="Expm1",Pm="FFT",ci="Fill",ga="FlipLeftRight",Io="Floor",Co="FloorDiv",ko="FusedBatchNorm",gs="GatherV2",ba="GatherNd",ya="Greater",So="GreaterEqual",Vn="Identity",Mm="IFFT",Ou="Imag",Ui="IsFinite",Wi="IsInf",Ta="IsNan",vo="LeakyRelu",xa="Less",Ia="LessEqual",Em="LinSpace",Ao="Log",Ki="Log1p",Ca="LogicalAnd",ka="LogicalNot",Vi="LogicalOr",e1="LogicalXor",t1="LogSoftmax",vge="LowerBound",zu="LRN",Lm="LRNGrad",wo="Max",No="Maximum",Do="MaxPool",_m="MaxPoolGrad",Gu="MaxPool3D",$m="MaxPool3DGrad",Bm="MaxPoolWithArgmax",Ro="Mean",Fo="Min",Po="Minimum",Mo="MirrorPad",Hi="Mod",Om="Multinomial",Eo="Multiply",bs="Neg",Sa="NotEqual",va="NonMaxSuppressionV3",qi="NonMaxSuppressionV4",Aa="NonMaxSuppressionV5",ys="OnesLike",wa="OneHot",Ts="Pack",Lo="PadV2",Age="Pool",_o="Pow",$o="Prelu",Bo="Prod",zm="RaggedGather",Gm="RaggedTensorToTensor",di="Range",Uu="Real",Na="Reciprocal",Oo="Relu",xs="Reshape",zo="ResizeNearestNeighbor",Um="ResizeNearestNeighborGrad",Go="ResizeBilinear",Wm="ResizeBilinearGrad",Uo="Relu6",Da="Reverse",Ra="Round",Wo="Rsqrt",Fa="ScatterNd",Km="SearchSorted",Is="Select",ji="Selu",Cs="Slice",Ko="Sin",Pa="Sinh",Xi="Sign",Vo="Sigmoid",Yi="Softplus",Ho="Sqrt",qo="Sum",ks="SpaceToBatchND",Ss="SplitV",jo="Softmax",Wu="SparseFillEmptyRows",Zi="SparseReshape",Ku="SparseSegmentMean",Vu="SparseSegmentSum",Hu="SparseToDense",Xo="SquaredDifference",fi="Square",Ma="StridedSlice",hi="StringNGrams",qu="StringSplit",ju="StringToHashBucketFast",Yo="Sub",Ea="Tan",Zo="Tanh",Dn="Tile",La="TopK",_a="Transform",Rn="Transpose",Vm="Unique",vs="Unpack",Xu="UnsortedSegmentSum",wge="UpperBound",As="ZerosLike",ws="Step",Vp="FromPixels",$a="RotateWithOffset",Ns="_FusedMatMul",Ds="FusedConv2D",Rs="FusedDepthwiseConv2D";function gi(...r){$().getBool("IS_TEST")||$().getBool("PROD")||console.warn(...r)}function T6(...r){$().getBool("IS_TEST")||$().getBool("PROD")||console.log(...r)}var Hm=Qf("kernelRegistry",()=>new Map),th=Qf("gradRegistry",()=>new Map);function rh(r,t){let e=hv(r,t);return Hm.get(e)}function fv(r){return th.get(r)}function cb(r){let t=Hm.entries(),e=[];for(;;){let{done:n,value:o}=t.next();if(n)break;let[s,a]=o,[i]=s.split("_");i===r&&e.push(a)}return e}function Qi(r){let{kernelName:t,backendName:e}=r,n=hv(t,e);Hm.has(n)&&gi(`The kernel '${t}' for backend '${e}' is already registered`),Hm.set(n,r)}function n1(r){let{kernelName:t}=r;th.has(t)&&$().getBool("DEBUG")&&gi(`Overriding the gradient for '${t}'`),th.set(t,r)}function Pge(r,t){let e=hv(r,t);if(!Hm.has(e))throw new Error(`The kernel '${r}' for backend '${t}' is not registered`);Hm.delete(e)}function Mge(r){if(!th.has(r))throw new Error(`The gradient '${r}' for backend is not registered`);th.delete(r)}function Ege(r,t){cb(r).forEach(n=>{let o=Object.assign({},n,{backendName:t});Qi(o)})}function hv(r,t){return`${t}_${r}`}var y={};He(y,{arraysEqual:()=>Un,assert:()=>D,assertNonNegativeIntegerDimensions:()=>Xf,assertNonNull:()=>so,assertShapesMatch:()=>Ot,bytesFromStringArray:()=>lv,bytesPerElement:()=>mb,checkConversionForErrors:()=>uv,clamp:()=>gm,computeStrides:()=>li,createScalarValue:()=>A6,createShuffledIndices:()=>i6,decodeString:()=>Ym,distSquared:()=>n6,encodeString:()=>Zu,fetch:()=>N6,fingerPrint64:()=>v6,flatten:()=>ua,getArrayFromDType:()=>iv,getTypedArrayFromDType:()=>av,hasEncodingLoss:()=>l6,hexToLong:()=>nh,indexToLoc:()=>d6,inferDtype:()=>bm,inferFromImplicitShape:()=>p6,isBoolean:()=>j0,isFunction:()=>pi,isInt:()=>Pi,isNumber:()=>X0,isPromise:()=>Yf,isScalarShape:()=>o6,isString:()=>pa,isTypedArray:()=>Cr,isValidDtype:()=>pv,locToIndex:()=>c6,makeOnesTypedArray:()=>jf,makeZerosNestedTypedArray:()=>m6,makeZerosTypedArray:()=>Tm,nearestDivisor:()=>ym,nearestLargerEven:()=>e6,now:()=>Xp,parseAxisParam:()=>gr,randUniform:()=>r6,repeatedTry:()=>u6,rightPad:()=>Kp,shuffle:()=>q0,shuffleCombo:()=>Jj,sizeFromShape:()=>tt,sizeToSquarishShape:()=>a6,squeezeShape:()=>sv,sum:()=>t6,swap:()=>lb,tanh:()=>s6,toNestedArray:()=>Wp,toTypedArray:()=>Xm});var Tv={};He(Tv,{default:()=>yv});var Fs=null;try{Fs=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Jt(r,t,e){this.low=r|0,this.high=t|0,this.unsigned=!!e}Jt.prototype.__isLong__;Object.defineProperty(Jt.prototype,"__isLong__",{value:!0});function mn(r){return(r&&r.__isLong__)===!0}function o1(r){var t=Math.clz32(r&-r);return r?31-t:t}Jt.isLong=mn;var s1={},a1={};function Hp(r,t){var e,n,o;return t?(r>>>=0,(o=0<=r&&r<256)&&(n=a1[r],n)?n:(e=kt(r,0,!0),o&&(a1[r]=e),e)):(r|=0,(o=-128<=r&&r<128)&&(n=s1[r],n)?n:(e=kt(r,r<0?-1:0,!1),o&&(s1[r]=e),e))}Jt.fromInt=Hp;function Ps(r,t){if(isNaN(r))return t?Ji:Ba;if(t){if(r<0)return Ji;if(r>=l1)return d1}else{if(r<=-u1)return Hn;if(r+1>=u1)return c1}return r<0?Ps(-r,t).neg():kt(r%jm|0,r/jm|0,t)}Jt.fromNumber=Ps;function kt(r,t,e){return new Jt(r,t,e)}Jt.fromBits=kt;var db=Math.pow;function bv(r,t,e){if(r.length===0)throw Error("empty string");if(typeof t=="number"?(e=t,t=!1):t=!!t,r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return t?Ji:Ba;if(e=e||10,e<2||36<e)throw RangeError("radix");var n;if((n=r.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return bv(r.substring(1),t,e).neg();for(var o=Ps(db(e,8)),s=Ba,a=0;a<r.length;a+=8){var i=Math.min(8,r.length-a),u=parseInt(r.substring(a,a+i),e);if(i<8){var l=Ps(db(e,i));s=s.mul(l).add(Ps(u))}else s=s.mul(o),s=s.add(Ps(u))}return s.unsigned=t,s}Jt.fromString=bv;function Oa(r,t){return typeof r=="number"?Ps(r,t):typeof r=="string"?bv(r,t):kt(r.low,r.high,typeof t=="boolean"?t:r.unsigned)}Jt.fromValue=Oa;var i1=1<<16,x6=1<<24,jm=i1*i1,l1=jm*jm,u1=l1/2,p1=Hp(x6),Ba=Hp(0);Jt.ZERO=Ba;var Ji=Hp(0,!0);Jt.UZERO=Ji;var qm=Hp(1);Jt.ONE=qm;var m1=Hp(1,!0);Jt.UONE=m1;var gv=Hp(-1);Jt.NEG_ONE=gv;var c1=kt(-1,2147483647,!1);Jt.MAX_VALUE=c1;var d1=kt(-1,-1,!0);Jt.MAX_UNSIGNED_VALUE=d1;var Hn=kt(0,-2147483648,!1);Jt.MIN_VALUE=Hn;var be=Jt.prototype;be.toInt=function(){return this.unsigned?this.low>>>0:this.low};be.toNumber=function(){return this.unsigned?(this.high>>>0)*jm+(this.low>>>0):this.high*jm+(this.low>>>0)};be.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Hn)){var e=Ps(t),n=this.div(e),o=n.mul(e).sub(this);return n.toString(t)+o.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var s=Ps(db(t,6),this.unsigned),a=this,i="";;){var u=a.div(s),l=a.sub(u.mul(s)).toInt()>>>0,p=l.toString(t);if(a=u,a.isZero())return p+i;for(;p.length<6;)p="0"+p;i=""+p+i}};be.getHighBits=function(){return this.high};be.getHighBitsUnsigned=function(){return this.high>>>0};be.getLowBits=function(){return this.low};be.getLowBitsUnsigned=function(){return this.low>>>0};be.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Hn)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&(t&1<<e)==0;e--);return this.high!=0?e+33:e+1};be.isZero=function(){return this.high===0&&this.low===0};be.eqz=be.isZero;be.isNegative=function(){return!this.unsigned&&this.high<0};be.isPositive=function(){return this.unsigned||this.high>=0};be.isOdd=function(){return(this.low&1)===1};be.isEven=function(){return(this.low&1)===0};be.equals=function(t){return mn(t)||(t=Oa(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};be.eq=be.equals;be.notEquals=function(t){return!this.eq(t)};be.neq=be.notEquals;be.ne=be.notEquals;be.lessThan=function(t){return this.comp(t)<0};be.lt=be.lessThan;be.lessThanOrEqual=function(t){return this.comp(t)<=0};be.lte=be.lessThanOrEqual;be.le=be.lessThanOrEqual;be.greaterThan=function(t){return this.comp(t)>0};be.gt=be.greaterThan;be.greaterThanOrEqual=function(t){return this.comp(t)>=0};be.gte=be.greaterThanOrEqual;be.ge=be.greaterThanOrEqual;be.compare=function(t){if(mn(t)||(t=Oa(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};be.comp=be.compare;be.negate=function(){return!this.unsigned&&this.eq(Hn)?Hn:this.not().add(qm)};be.neg=be.negate;be.add=function(t){mn(t)||(t=Oa(t));var e=this.high>>>16,n=this.high&65535,o=this.low>>>16,s=this.low&65535,a=t.high>>>16,i=t.high&65535,u=t.low>>>16,l=t.low&65535,p=0,m=0,c=0,d=0;return d+=s+l,c+=d>>>16,d&=65535,c+=o+u,m+=c>>>16,c&=65535,m+=n+i,p+=m>>>16,m&=65535,p+=e+a,p&=65535,kt(c<<16|d,p<<16|m,this.unsigned)};be.subtract=function(t){return mn(t)||(t=Oa(t)),this.add(t.neg())};be.sub=be.subtract;be.multiply=function(t){if(this.isZero())return this;if(mn(t)||(t=Oa(t)),Fs){var e=Fs.mul(this.low,this.high,t.low,t.high);return kt(e,Fs.get_high(),this.unsigned)}if(t.isZero())return this.unsigned?Ji:Ba;if(this.eq(Hn))return t.isOdd()?Hn:Ba;if(t.eq(Hn))return this.isOdd()?Hn:Ba;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(p1)&&t.lt(p1))return Ps(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,o=this.high&65535,s=this.low>>>16,a=this.low&65535,i=t.high>>>16,u=t.high&65535,l=t.low>>>16,p=t.low&65535,m=0,c=0,d=0,f=0;return f+=a*p,d+=f>>>16,f&=65535,d+=s*p,c+=d>>>16,d&=65535,d+=a*l,c+=d>>>16,d&=65535,c+=o*p,m+=c>>>16,c&=65535,c+=s*l,m+=c>>>16,c&=65535,c+=a*u,m+=c>>>16,c&=65535,m+=n*p+o*l+s*u+a*i,m&=65535,kt(d<<16|f,m<<16|c,this.unsigned)};be.mul=be.multiply;be.divide=function(t){if(mn(t)||(t=Oa(t)),t.isZero())throw Error("division by zero");if(Fs){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?Fs.div_u:Fs.div_s)(this.low,this.high,t.low,t.high);return kt(e,Fs.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Ji:Ba;var n,o,s;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return Ji;if(t.gt(this.shru(1)))return m1;s=Ji}else{if(this.eq(Hn)){if(t.eq(qm)||t.eq(gv))return Hn;if(t.eq(Hn))return qm;var a=this.shr(1);return n=a.div(t).shl(1),n.eq(Ba)?t.isNegative()?qm:gv:(o=this.sub(t.mul(n)),s=n.add(o.div(t)),s)}else if(t.eq(Hn))return this.unsigned?Ji:Ba;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();s=Ba}for(o=this;o.gte(t);){n=Math.max(1,Math.floor(o.toNumber()/t.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),u=i<=48?1:db(2,i-48),l=Ps(n),p=l.mul(t);p.isNegative()||p.gt(o);)n-=u,l=Ps(n,this.unsigned),p=l.mul(t);l.isZero()&&(l=qm),s=s.add(l),o=o.sub(p)}return s};be.div=be.divide;be.modulo=function(t){if(mn(t)||(t=Oa(t)),Fs){var e=(this.unsigned?Fs.rem_u:Fs.rem_s)(this.low,this.high,t.low,t.high);return kt(e,Fs.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};be.mod=be.modulo;be.rem=be.modulo;be.not=function(){return kt(~this.low,~this.high,this.unsigned)};be.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32};be.clz=be.countLeadingZeros;be.countTrailingZeros=function(){return this.low?o1(this.low):o1(this.high)+32};be.ctz=be.countTrailingZeros;be.and=function(t){return mn(t)||(t=Oa(t)),kt(this.low&t.low,this.high&t.high,this.unsigned)};be.or=function(t){return mn(t)||(t=Oa(t)),kt(this.low|t.low,this.high|t.high,this.unsigned)};be.xor=function(t){return mn(t)||(t=Oa(t)),kt(this.low^t.low,this.high^t.high,this.unsigned)};be.shiftLeft=function(t){return mn(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?kt(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):kt(0,this.low<<t-32,this.unsigned)};be.shl=be.shiftLeft;be.shiftRight=function(t){return mn(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?kt(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):kt(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};be.shr=be.shiftRight;be.shiftRightUnsigned=function(t){return mn(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?kt(this.low>>>t|this.high<<32-t,this.high>>>t,this.unsigned):t===32?kt(this.high,0,this.unsigned):kt(this.high>>>t-32,0,this.unsigned)};be.shru=be.shiftRightUnsigned;be.shr_u=be.shiftRightUnsigned;be.rotateLeft=function(t){var e;return mn(t)&&(t=t.toInt()),(t&=63)===0?this:t===32?kt(this.high,this.low,this.unsigned):t<32?(e=32-t,kt(this.low<<t|this.high>>>e,this.high<<t|this.low>>>e,this.unsigned)):(t-=32,e=32-t,kt(this.high<<t|this.low>>>e,this.low<<t|this.high>>>e,this.unsigned))};be.rotl=be.rotateLeft;be.rotateRight=function(t){var e;return mn(t)&&(t=t.toInt()),(t&=63)===0?this:t===32?kt(this.high,this.low,this.unsigned):t<32?(e=32-t,kt(this.high<<e|this.low>>>t,this.low<<e|this.high>>>t,this.unsigned)):(t-=32,e=32-t,kt(this.low<<e|this.high>>>t,this.high<<e|this.low>>>t,this.unsigned))};be.rotr=be.rotateRight;be.toSigned=function(){return this.unsigned?kt(this.low,this.high,!1):this};be.toUnsigned=function(){return this.unsigned?this:kt(this.low,this.high,!0)};be.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};be.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};be.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};Jt.fromBytes=function(t,e,n){return n?Jt.fromBytesLE(t,e):Jt.fromBytesBE(t,e)};Jt.fromBytesLE=function(t,e){return new Jt(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};Jt.fromBytesBE=function(t,e){return new Jt(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)};var yv=Jt;var jp=yv||Tv;function nh(r){return jp.fromString(r,!0,16)}var h1=nh("c3a5c85c97cb3127"),qp=nh("b492b66fbe98f273"),cn=nh("9ae16a3b2f90404f");function xv(r){return r.xor(r.shru(47))}function g1(r,t,e){let n=r.slice(t,t+e);return jp.fromBytes(Array.from(n),!0,!0)}function Ht(r,t){return g1(r,t,8)}function f1(r,t){return g1(r,t,4)}function Pr(r,t){return t===0?r:r.shru(t).or(r.shl(64-t))}function Yu(r,t,e=nh("9ddfea08eb382d69")){let n=r.xor(t).mul(e);n=n.xor(n.shru(47));let o=t.xor(n).mul(e);return o=o.xor(o.shru(47)),o=o.mul(e),o}function I6(r,t,e,n,o,s){o=o.add(r),s=Pr(s.add(o).add(n),21);let a=o;return o=o.add(t),o=o.add(e),s=s.add(Pr(o,44)),[o.add(n),s.add(a)]}function fb(r,t,e,n){return I6(Ht(r,t),Ht(r,t+8),Ht(r,t+16),Ht(r,t+24),e,n)}function C6(r,t=r.length){if(t>=8){let e=cn.add(t*2),n=Ht(r,0).add(cn),o=Ht(r,t-8),s=Pr(o,37).mul(e).add(n),a=Pr(n,25).add(o).mul(e);return Yu(s,a,e)}if(t>=4){let e=cn.add(t*2),n=f1(r,0);return Yu(n.shl(3).add(t),f1(r,t-4),e)}if(t>0){let e=r[0],n=r[t>>1],o=r[t-1],s=e+(n<<8),a=t+(o<<2);return xv(cn.mul(s).xor(h1.mul(a))).mul(cn)}return cn}function k6(r,t=r.length){let e=cn.add(t*2),n=Ht(r,0).mul(qp),o=Ht(r,8),s=Ht(r,t-8).mul(e),a=Ht(r,t-16).mul(cn);return Yu(Pr(n.add(o),43).add(Pr(s,30)).add(a),n.add(Pr(o.add(cn),18)).add(s),e)}function S6(r,t=r.length){let e=cn.add(t*2),n=Ht(r,0).mul(cn),o=Ht(r,8),s=Ht(r,t-8).mul(e),a=Ht(r,t-16).mul(cn),i=Pr(n.add(o),43).add(Pr(s,30)).add(a),u=Yu(i,n.add(Pr(o.add(cn),18)).add(s),e),l=Ht(r,16).mul(e),p=Ht(r,24),m=i.add(Ht(r,t-32)).mul(e),c=u.add(Ht(r,t-24)).mul(e);return Yu(Pr(l.add(p),43).add(Pr(m,30)).add(c),l.add(Pr(p.add(n),18)).add(m),e)}function v6(r,t=r.length){let e=jp.fromNumber(81,!0);if(t<=32)return t<=16?C6(r,t):k6(r,t);if(t<=64)return S6(r,t);let n=e,o=e.mul(qp).add(113),s=xv(o.mul(cn).add(113)).mul(cn),a=[jp.UZERO,jp.UZERO],i=[jp.UZERO,jp.UZERO];n=n.mul(cn).add(Ht(r,0));let u=0,l=(t-1>>6)*64,p=l+(t-1&63)-63;do n=Pr(n.add(o).add(a[0]).add(Ht(r,u+8)),37).mul(qp),o=Pr(o.add(a[1]).add(Ht(r,u+48)),42).mul(qp),n=n.xor(i[1]),o=o.add(a[0]).add(Ht(r,u+40)),s=Pr(s.add(i[0]),33).mul(qp),a=fb(r,u,a[1].mul(qp),n.add(i[0])),i=fb(r,u+32,s.add(i[1]),o.add(Ht(r,u+16))),[s,n]=[n,s],u+=64;while(u!==l);let m=qp.add(s.and(255).shl(1));return u=p,i[0]=i[0].add(t-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),n=Pr(n.add(o).add(a[0]).add(Ht(r,u+8)),37).mul(m),o=Pr(o.add(a[1]).add(Ht(r,u+48)),42).mul(m),n=n.xor(i[1].mul(9)),o=o.add(a[0].mul(9).add(Ht(r,u+40))),s=Pr(s.add(i[0]),33).mul(m),a=fb(r,u,a[1].mul(m),n.add(i[0])),i=fb(r,u+32,s.add(i[1]),o.add(Ht(r,u+16))),[s,n]=[n,s],Yu(Yu(a[0],i[0],m).add(xv(o).mul(h1)).add(s),Yu(a[1],i[1],m).add(n),m)}function A6(r,t){return t==="string"?Zu(r):Xm([r],t)}function w6(r,t){return r instanceof Float32Array&&t==="float32"||r instanceof Int32Array&&t==="int32"||r instanceof Uint8Array&&t==="bool"}function Xm(r,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=ua(r)),$().getBool("DEBUG")&&uv(r,t),w6(r,t))return r;if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool"){let e=new Uint8Array(r.length);for(let n=0;n<e.length;++n)Math.round(r[n])!==0&&(e[n]=1);return e}else throw new Error(`Unknown data type ${t}`)}function Xp(){return $().platform.now()}function N6(r,t){return $().platform.fetch(r,t)}function Zu(r,t="utf-8"){return t=t||"utf-8",$().platform.encode(r,t)}function Ym(r,t="utf-8"){return t=t||"utf-8",$().platform.decode(r,t)}var hb=class{constructor(t,e){this.backendTimer=t;this.logger=e;e==null&&(this.logger=new Iv)}profileKernel(t,e,n){let o,s=()=>{o=n()},a,i=Xp();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let l of o)l.dataSync();a=Promise.resolve({kernelMs:Xp()-i})}if($().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<o.length;l++){let p=o[l];p.data().then(m=>{D6(m,p.dtype,t)})}return{kernelName:t,outputs:o,inputs:e,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(t){let{kernelName:e,outputs:n,timeMs:o,inputs:s,extraInfo:a}=t;n.forEach(i=>{Promise.all([i.data(),o,a]).then(u=>{this.logger.logKernelProfile(e,i,u[0],u[1],s,u[2])})})}};function D6(r,t,e){if(t!=="float32")return!1;for(let n=0;n<r.length;n++){let o=r[n];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${e}'`),!0}return!1}var Iv=class{logKernelProfile(t,e,n,o,s,a){let i=typeof o=="number"?Kp(`${o}ms`,9):o.error,u=Kp(t,25),l=e.rank,p=e.size,m=Kp(e.shape.toString(),14),c="";for(let d in s){let f=s[d];if(f!=null){let h=f.shape||e.shape,g=h.length;c+=`${d}: ${g}D ${g>0?h:""} `}}console.log(`%c${u}	%c${i}	%c${l}D ${m}	%c${p}	%c${c}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function b1(r,t,e){let n={},o={};for(let u=0;u<t.length;u++)n[t[u].id]=!0;for(let u=0;u<r.length;u++){let l=r[u],p=l.inputs;for(let m in p){let c=p[m],d=!1;for(let f=0;f<t.length;f++)if(n[c.id]){l.outputs.forEach(h=>n[h.id]=!0),d=!0,o[l.id]=!0;break}if(d)break}}let s={};s[e.id]=!0;let a={};for(let u=r.length-1;u>=0;u--){let l=r[u],p=l.inputs;for(let m=0;m<l.outputs.length;m++)if(s[l.outputs[m].id]){for(let c in p)s[p[c].id]=!0,a[l.id]=!0;break}}let i=[];for(let u=0;u<r.length;u++){let l=r[u];if(o[l.id]&&a[l.id]){let p={};for(let c in l.inputs){let d=l.inputs[c];n[d.id]&&(p[c]=d)}let m=Object.assign({},l);m.inputs=p,m.outputs=l.outputs,i.push(m)}}return i}function y1(r,t,e,n){for(let o=t.length-1;o>=0;o--){let s=t[o],a=[];if(s.outputs.forEach(u=>{let l=r[u.id];l!=null?a.push(l):a.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let i=s.gradient(a);for(let u in s.inputs){if(!(u in i))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(i)}.`);let l=e(()=>i[u]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${l.dtype}'`);let p=s.inputs[u];if(!Un(l.shape,p.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${u}' has shape '${l.shape}', which does not match the shape of the input '${p.shape}'`);if(r[p.id]==null)r[p.id]=l;else{let m=r[p.id];r[p.id]=n(m,l),m.dispose()}}}}var T1=20,oh=3,Cv=7;function x1(r,t,e,n){let o=li(t),s=R6(r,t,e,o),a=t.length,i=gb(r,t,e,o,s),u=["Tensor"];return n&&(u.push(`  dtype: ${e}`),u.push(`  rank: ${a}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(i.map(l=>"    "+l).join(`
`)),u.join(`
`)}function R6(r,t,e,n){let o=tt(t),s=n[n.length-1],a=new Array(s).fill(0),i=t.length,u=e==="complex64"?ah(r):r;if(i>1)for(let l=0;l<o/s;l++){let p=l*s;for(let m=0;m<s;m++)a[m]=Math.max(a[m],sh(u[p+m],0,e).length)}return a}function sh(r,t,e){let n;return Array.isArray(r)?n=`${parseFloat(r[0].toFixed(Cv))} + ${parseFloat(r[1].toFixed(Cv))}j`:pa(r)?n=`'${r}'`:e==="bool"?n=I1(r):n=parseFloat(r.toFixed(Cv)).toString(),Kp(n,t)}function I1(r){return r===0?"false":"true"}function gb(r,t,e,n,o,s=!0){let a=e==="complex64"?2:1,i=t[0],u=t.length;if(u===0){if(e==="complex64"){let h=ah(r);return[sh(h[0],0,e)]}return e==="bool"?[I1(r[0])]:[r[0].toString()]}if(u===1){if(i>T1){let g=oh*a,b=Array.from(r.slice(0,g)),T=Array.from(r.slice((i-oh)*a,i*a));return e==="complex64"&&(b=ah(b),T=ah(T)),["["+b.map((x,I)=>sh(x,o[I],e)).join(", ")+", ..., "+T.map((x,I)=>sh(x,o[i-oh+I],e)).join(", ")+"]"]}let h=e==="complex64"?ah(r):Array.from(r);return["["+h.map((g,b)=>sh(g,o[b],e)).join(", ")+"]"]}let l=t.slice(1),p=n.slice(1),m=n[0]*a,c=[];if(i>T1){for(let h=0;h<oh;h++){let g=h*m,b=g+m;c.push(...gb(r.slice(g,b),l,e,p,o,!1))}c.push("...");for(let h=i-oh;h<i;h++){let g=h*m,b=g+m;c.push(...gb(r.slice(g,b),l,e,p,o,h===i-1))}}else for(let h=0;h<i;h++){let g=h*m,b=g+m;c.push(...gb(r.slice(g,b),l,e,p,o,h===i-1))}let d=u===2?",":"";c[0]="["+c[0]+d;for(let h=1;h<c.length-1;h++)c[h]=" "+c[h]+d;let f=`,
`;for(let h=2;h<u;h++)f+=`
`;return c[c.length-1]=" "+c[c.length-1]+"]"+(s?"":f),c}function ah(r){let t=[];for(let e=0;e<r.length;e+=2)t.push([r[e],r[e+1]]);return t}var ht=class{constructor(t,e,n){this.dtype=e;if(this.shape=t.slice(),this.size=tt(t),n!=null){let o=n.length;D(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||iv(e,this.size),this.strides=li(t)}set(t,...e){e.length===0&&(e=[0]),D(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);let n=this.locToIndex(e);this.values[n]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(let o of t){if(o<0||o>=this.shape[e]){let s=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(s)}e++}let n=t[t.length-1];for(let o=0;o<t.length-1;++o)n+=this.strides[o]*t[o];return this.values[n]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];let e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return za().makeTensor(this.values,this.shape,this.dtype)}},za=null,Zm=null,F6=null;function C1(r){za=r}function k1(r){Zm=r}function S1(r){F6=r}var We=class{constructor(t,e,n,o){this.kept=!1;this.isDisposedInternal=!1;this.shape=t.slice(),this.dtype=e||"float32",this.size=tt(t),this.strides=li(t),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let t=await this.data();return Zm.buffer(this.shape,this.dtype,t)}bufferSync(){return Zm.buffer(this.shape,this.dtype,this.dataSync())}async array(){let t=await this.data();return Wp(this.shape,t,this.dtype==="complex64")}arraySync(){return Wp(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let t=za().read(this.dataId);if(this.dtype==="string"){let e=await t;try{return e.map(n=>Ym(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),za().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();let t=za().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>Ym(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();let t=await za().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(za().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Zm.print(this,t)}clone(){return this.throwIfDisposed(),Zm.clone(this)}toString(t=!1){let e=this.dataSync();return x1(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Zm.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),za().makeVariable(this,t,e,n)}};Object.defineProperty(We,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function P6(){return Qf("Tensor",()=>We)}P6();var eu=class extends We{constructor(e,n,o,s){super(e.shape,e.dtype,e.dataId,s);this.trainable=n;this.name=o}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Un(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);za().disposeTensor(this),this.dataId=e.dataId,za().incRef(this,null)}dispose(){za().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(eu,Symbol.hasInstance,{value:r=>r instanceof We&&r.assign!=null&&r.assign instanceof Function});var Ms={};He(Ms,{assertTypesMatch:()=>kv,getTensorsInContainer:()=>ih,isTensorInList:()=>E6,makeTypesMatch:()=>Ye});var v1=(i=>(i.R0="R0",i.R1="R1",i.R2="R2",i.R3="R3",i.R4="R4",i.R5="R5",i.R6="R6",i))(v1||{}),A1=(o=>(o.float32="float32",o.int32="int32",o.bool="int32",o.complex64="complex64",o))(A1||{}),w1=(o=>(o.float32="float32",o.int32="int32",o.bool="bool",o.complex64="complex64",o))(w1||{}),N1=(o=>(o.float32="float32",o.int32="float32",o.bool="float32",o.complex64="complex64",o))(N1||{}),D1=(o=>(o.float32="complex64",o.int32="complex64",o.bool="complex64",o.complex64="complex64",o))(D1||{}),M6={float32:N1,int32:A1,bool:w1,complex64:D1};function Et(r,t){if(r==="string"||t==="string"){if(r==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${r} with ${t}`)}return M6[r][t]}function tu(r){return Et(r,"int32")}function Ye(r,t){if(r.dtype===t.dtype)return[r,t];let e=Et(r.dtype,t.dtype);return[r.cast(e),t.cast(e)]}function kv(r,t){D(r.dtype===t.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${t.dtype}) input must match`)}function E6(r,t){return t.some(e=>e.id===r.id)}function ih(r){let t=[];return R1(r,t,new Set),t}function R1(r,t,e){if(r==null)return;if(r instanceof We){t.push(r);return}if(!L6(r))return;let n=r;for(let o in n){let s=n[o];e.has(s)||(e.add(s),R1(s,t,e))}}function L6(r){return Array.isArray(r)||typeof r=="object"}function Sv(r){return r.kernelName!=null}var bb=class{constructor(){this.registeredVariables={};this.nextTapeNodeId=0;this.numBytes=0;this.numTensors=0;this.numStringTensors=0;this.numDataBuffers=0;this.gradientDepth=0;this.kernelDepth=0;this.scopeStack=[];this.numDataMovesStack=[];this.nextScopeId=0;this.tensorInfo=new WeakMap;this.profiling=!1;this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(let t in this.registeredVariables)this.registeredVariables[t].dispose()}},yb=class{constructor(t){this.ENV=t;this.registry={};this.registryFactory={};this.pendingBackendInitId=0;this.state=new bb}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let t=this.getSortedBackends();for(let e=0;e<t.length;e++){let n=t[e];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){let{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(gi(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;let{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new hb(this.backendInstance),!0}setupRegisteredKernels(){cb(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){cb(t).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[t])})}initializeBackend(t){let e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{let n=e.factory();if(n&&!(n instanceof oo)&&typeof n.then=="function"){let o=++this.pendingBackendInitId,s=n.then(a=>o<this.pendingBackendInitId?!1:(this.registry[t]=a,this.pendingBackendInit=null,!0)).catch(a=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,gi(`Initialization of backend ${t} failed`),gi(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(n){return gi(`Initialization of backend ${t} failed`),gi(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){let t=this.getSortedBackends();for(let e=0;e<t.length;e++){let n=t[e],{success:o,asyncInit:s}=this.initializeBackend(n);if(s||o)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){let n=this.state.tensorInfo.get(e),o=n.backend,s=this.readSync(e),a=o.refCount(e);o.disposeData(e,!0),n.backend=t,t.move(e,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=t}let o;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(o),()=>(o=e(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(t,e,n){t();try{let o=n();return e(),o}catch(o){throw e(),o}}nextTensorId(){return yb.nextTensorId++}nextVariableId(){return yb.nextVariableId++}clone(t){let e=N.runKernel(Vn,{x:t}),n={x:t},o=a=>({x:()=>{let i="float32",u={x:a},l={dtype:i};return N.runKernel(Wn,u,l)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[e],o,s,{}),e}runKernel(t,e,n){if(this.backendName==null&&this.backend,!(rh(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){let o=this.backend.numDataIds(),s=0;n.forEach(u=>{s+=u.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=o-e-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[],o=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let u,l=Sv(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Sv(t)){let{kernelName:f,inputs:h,attrs:g}=t;this.backendName==null&&this.backend;let b=rh(f,this.backendName);D(b!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{let T=this.backend.numDataIds();u=b.kernelFunc({inputs:h,attrs:g,backend:this.backend});let x=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,T,x);let I=x.map(k=>k.rank!=null?k:this.makeTensorFromTensorInfo(k));if(o){let k=this.getTensorsForGradient(f,h,I);n=this.saveTensorsForBackwardMode(k)}return I}}else{let{forwardFunc:f}=t,h=g=>{!o||(n=g.map(b=>this.keep(this.clone(b))))};i=()=>{let g=this.backend.numDataIds();u=this.tidy(()=>f(this.backend,h));let b=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,g,b),b}}let{inputs:p,attrs:m}=t,c=Sv(t)?null:t.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=i():(d=this.profiler.profileKernel(l,p,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),e=d.outputs)}),o&&this.addTapeNode(l,p,e,c,n,m),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(f=>p[f]!=null?p[f].shape:null),outputShapes:e.map(f=>f.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(u)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(t,e,n){let o=fv(t);if(o!=null){let s=o.inputsToSave||[],a=o.outputsToSave||[],i;o.saveAllInputs?(D(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(e).map(l=>e[l])):i=s.map(l=>e[l]);let u=n.filter((l,p)=>a[p]);return i.concat(u)}return[]}makeTensor(t,e,n,o){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",o=o||this.backend;let s=t;n==="string"&&pa(t[0])&&(s=t.map(u=>Zu(u)));let a=o.write(s,e,n),i=new We(e,n,a,this.nextTensorId());if(this.trackTensor(i,o),n==="string"){let u=this.state.tensorInfo.get(a),l=lv(s);this.state.numBytes+=l-u.bytes,u.bytes=l}return i}makeTensorFromDataId(t,e,n,o){n=n||"float32";let s={dataId:t,shape:e,dtype:n};return this.makeTensorFromTensorInfo(s,o)}makeTensorFromTensorInfo(t,e){let{dataId:n,shape:o,dtype:s}=t,a=new We(o,s,n,this.nextTensorId());return this.trackTensor(a,e),a}makeVariable(t,e=!0,n,o){n=n||this.nextVariableId().toString(),o!=null&&o!==t.dtype&&(t=t.cast(o));let s=new eu(t,e,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let n=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(n=t.size*mb(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof eu||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;let e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){let n=t.size*mb(t.dtype);this.state.numBytes-=n}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(let t in this.state.registeredVariables){let e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){let t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;let e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,n,o,s,a){let i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},u=fv(t);u!=null&&(o=u.gradFunc),o!=null&&(i.gradient=l=>(l=l.map((p,m)=>{if(p==null){let c=n[m],d=Tm(c.size,c.dtype);return this.makeTensor(d,c.shape,c.dtype)}return p}),o(l.length>1?l:l[0],s,a))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){let e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){let e=ih(t),n=new Set(e.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!n.has(a.id)&&a.dispose()}let o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(s=>{!s.kept&&s.scopeId===o.id&&this.track(s)})}gradients(t,e,n,o=!1){if(D(e.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));D(s instanceof We,()=>"The result y returned by f() must be a tensor.");let a=b1(this.state.activeTape,e,s);if(!o&&a.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[s.id]=n??_6(s.shape),y1(i,a,l=>this.tidy(l),$6);let u=e.map(l=>i[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let p of l.saved)p.dispose()}),this.state.activeTape=null),{value:s,grads:u}})}customGrad(t){return D(pi(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{D(e.every(i=>i instanceof We),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,o={};e.forEach((i,u)=>{o[u]=i});let s=(i,u)=>(n=t(...e,u),D(n.value instanceof We,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),D(pi(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(i,u)=>{let l=n.gradFunc(i,u),p=Array.isArray(l)?l:[l];D(p.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),D(p.every(c=>c instanceof We),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let m={};return p.forEach((c,d)=>{m[d]=()=>c}),m};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:o})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){let e=Xp(),n=await this.backend.time(t);return n.wallMs=Xp()-e,n}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new bb;for(let t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},uh=yb;uh.nextTensorId=0,uh.nextVariableId=0;function _6(r){let t=jf(tt(r),"float32");return N.makeTensor(t,r,"float32")}function vv(){let r=dv();if(r._tfengine==null){let t=new Zf(r);r._tfengine=new uh(t)}return Q0(r._tfengine.ENV),C1(()=>r._tfengine),r._tfengine}var N=vv();function $6(r,t){let e={a:r,b:t};return N.runKernel(Nn,e)}var Qu={};He(Qu,{isBrowser:()=>wv,isMobile:()=>z6,mockIsMobile:()=>O6});function B6(){return typeof navigator<"u"&&navigator!=null}var Av;function O6(r){Av=r}function z6(r){if(Av!==void 0)return Av;if(r||B6()){if(r||(r=navigator),r.product==="ReactNative")return!0;let t=r.userAgent||r.vendor||(typeof window<"u"?window.opera:"");if(!t){let e=r;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function wv(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Qo=$();Qo.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Qo.registerFlag("IS_BROWSER",()=>wv());Qo.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Qo.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Qo.registerFlag("PROD",()=>!1);Qo.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Qo.getBool("DEBUG"));Qo.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Qo.registerFlag("IS_TEST",()=>!1);Qo.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Qo.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Qo.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);Qo.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);function zr(r,t){let e=r;if(Cr(r))return t==="string"?[]:[r.length];if(!Array.isArray(r))return[];let n=[];for(;Array.isArray(e)||Cr(e)&&t!=="string";)n.push(e.length),e=e[0];return Array.isArray(r)&&$().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&P1(r,n,[]),n}function P1(r,t,e){if(e=e||[],!Array.isArray(r)&&!Cr(r)){D(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}D(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${r.length} elements`),D(r.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${r.length} elements`);let n=t.slice(1);for(let o=0;o<r.length;++o)P1(r[o],n,e.concat(o))}function F1(r,t,e,n){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==t||r==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${n}' must be ${r} tensor, but got ${t} tensor`)}}function S(r,t,e,n="numeric"){if(r instanceof We)return F1(n,r.dtype,t,e),r;let o=bm(r);if(o!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(o=n),F1(n,o,t,e),r==null||!Cr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let u=r==null?"null":r.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${u}'`)}let s=zr(r,o);!Cr(r)&&!Array.isArray(r)&&(r=[r]);let i=o!=="string"?Xm(r,o):ua(r,[],!0);return N.makeTensor(i,s,o)}function ru(r,t,e,n="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,a)=>S(s,`${t}[${a}]`,e,n))}var Nv="__op";function w(r){let t=Object.keys(r);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0],n=r[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+Nv;let o=(...s)=>{N.startScope(e);try{let a=n(...s);return Yf(a)&&console.error("Cannot return a Promise inside of tidy."),N.endScope(a),a}catch(a){throw N.endScope(null),a}};return Object.defineProperty(o,"name",{value:e,configurable:!0}),o}function G6(r,t){let e=S(r,"real","complex"),n=S(t,"imag","complex");Ot(e.shape,n.shape,`real and imag shapes, ${e.shape} and ${n.shape}, must match in call to tf.complex().`);let o={real:e,imag:n};return N.runKernel(Eu,o)}var Fn=w({complex_:G6});function dn(r,t,e,n){if(n==null&&(n=bm(r)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Cr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Xf(t);let o=tt(t),s=tt(e);D(o===s,()=>`Based on the provided shape, [${t}], the tensor should have ${o} values but has ${s}`);for(let a=0;a<e.length;++a){let i=e[a],u=a===e.length-1?i!==tt(t.slice(a)):!0;D(e[a]===t[a]||!u,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!Cr(r)&&!Array.isArray(r)&&(r=[r]),t=t||e,r=n!=="string"?Xm(r,n):ua(r,[],!0),N.makeTensor(r,t,n)}function Ar(r,t,e){let n=zr(r,e);return dn(r,t,n,e)}var ph={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var Tb=4;async function E1(r,t){let e=[],n=[],o=Array.isArray(r)?r.map(a=>a.name):Object.keys(r);for(let a=0;a<o.length;++a){let i=o[a],u=Array.isArray(r)?r[a].tensor:r[i];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${u.dtype}`);let l={name:i,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){let p=new Promise(async m=>{let c=await u.bytes(),d=c.reduce((g,b)=>g+b.length,0)+Tb*c.length,f=new Uint8Array(d),h=0;for(let g=0;g<c.length;g++){let b=c[g],T=new Uint8Array(new Uint32Array([b.length]).buffer);f.set(T,h),h+=Tb,f.set(b,h),h+=b.length}m(f)});n.push(p)}else n.push(u.data());t!=null&&(l.group=t),e.push(l)}let s=await Promise.all(n);return{data:U6(s),specs:e}}function xb(r,t){let e={},n,o=0;for(let s of t){let a=s.name,i=s.dtype,u=s.shape,l=tt(u),p;if("quantization"in s){let m=s.quantization;if(m.dtype==="uint8"||m.dtype==="uint16"){if(!("min"in m&&"scale"in m))throw new Error(`Weight ${s.name} with quantization ${m.dtype} doesn't have corresponding metadata min and scale.`)}else if(m.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${s.name} is quantized with ${m.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${m.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let c=ph[m.dtype],d=r.slice(o,o+l*c),f=m.dtype==="uint8"?new Uint8Array(d):new Uint16Array(d);if(i==="float32")if(m.dtype==="uint8"||m.dtype==="uint16"){p=new Float32Array(f.length);for(let h=0;h<f.length;h++){let g=f[h];p[h]=g*m.scale+m.min}}else if(m.dtype==="float16")n===void 0&&(n=H6()),p=n(f);else throw new Error(`Unsupported quantization type ${m.dtype} for weight type float32.`);else if(i==="int32"){if(m.dtype!=="uint8"&&m.dtype!=="uint16")throw new Error(`Unsupported quantization type ${m.dtype} for weight type int32.`);p=new Int32Array(f.length);for(let h=0;h<f.length;h++){let g=f[h];p[h]=Math.round(g*m.scale+m.min)}}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=l*c}else if(i==="string"){let m=tt(s.shape);p=[];for(let c=0;c<m;c++){let d=new Uint32Array(r.slice(o,o+Tb))[0];o+=Tb;let f=new Uint8Array(r.slice(o,o+d));p.push(f),o+=d}}else{let m=ph[i],c=r.slice(o,o+l*m);if(i==="float32")p=new Float32Array(c);else if(i==="int32")p=new Int32Array(c);else if(i==="bool")p=new Uint8Array(c);else if(i==="complex64"){p=new Float32Array(c);let d=new Float32Array(p.length/2),f=new Float32Array(p.length/2);for(let b=0;b<d.length;b++)d[b]=p[b*2],f[b]=p[b*2+1];let h=Ar(d,u,"float32"),g=Ar(f,u,"float32");e[a]=Fn(h,g),h.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=l*m}i!=="complex64"&&(e[a]=Ar(p,u,i))}return e}function U6(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let t=0,e=[];r.forEach(s=>{if(t+=s.byteLength,e.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(t),o=0;return e.forEach(s=>{n.set(new Uint8Array(s.buffer),o),o+=s.byteLength}),n.buffer}var Dv=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function M1(r){return Dv?Buffer.byteLength(r):new Blob([r]).size}function L1(r){if(Dv)return Buffer.from(r).toString("base64");let t=new Uint8Array(r),e="";for(let n=0,o=t.length;n<o;n++)e+=String.fromCharCode(t[n]);return btoa(e)}function _1(r){if(Dv){let n=Buffer.from(r,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let t=atob(r),e=new Uint8Array(t.length);for(let n=0;n<t.length;++n)e.set([t.charCodeAt(n)],n);return e.buffer}function Qm(r){if(r.length===1)return r[0];let t=0;r.forEach(o=>{t+=o.byteLength});let e=new Uint8Array(t),n=0;return r.forEach(o=>{e.set(new Uint8Array(o),n),n+=o.byteLength}),e.buffer}function Rv(r){let t="/";for(r=r.trim();r.endsWith(t);)r=r.slice(0,r.length-1);let e=r.split(t);return e[e.length-1]}function Ib(r,t){let e={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:t};return r.signature!=null&&(e.signature=r.signature),r.userDefinedMetadata!=null&&(e.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(e.modelInitializer=r.modelInitializer),r.trainingConfig!=null&&(e.trainingConfig=r.trainingConfig),e}async function Jm(r,t){let e={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(e.trainingConfig=r.trainingConfig),r.weightsManifest!=null){let[n,o]=await t(r.weightsManifest);e.weightSpecs=n,e.weightData=o}return r.signature!=null&&(e.signature=r.signature),r.userDefinedMetadata!=null&&(e.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(e.modelInitializer=r.modelInitializer),e}function bi(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:M1(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:M1(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:r.weightData.byteLength}}function W6(){let r=e=>{let n=e<<13,o=0;for(;(n&8388608)===0;)o-=8388608,n<<=1;return n&=-8388609,o+=947912704,n|o},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=r(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function K6(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let t=1;t<31;t++)r[t]=t<<23;for(let t=33;t<63;t++)r[t]=2147483648+(t-32<<23);return r}function V6(){let r=new Uint32Array(64);for(let t=0;t<64;t++)r[t]=1024;return r[0]=r[32]=0,r}function H6(){let r=W6(),t=K6(),e=V6();return n=>{let o=new ArrayBuffer(4*n.length),s=new Uint32Array(o);for(let a=0;a<n.length;a++){let i=n[a],u=r[e[i>>10]+(i&1023)]+t[i>>10];s[a]=u}return new Float32Array(o)}}var Rt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Rt.instance==null&&(Rt.instance=new Rt),Rt.instance}static registerSaveRouter(t){Rt.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Rt.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Rt.getHandlers(t,"save")}static getLoadHandlers(t,e){return Rt.getHandlers(t,"load",e)}static getHandlers(t,e,n){let o=[];return(e==="load"?Rt.getInstance().loadRouters:Rt.getInstance().saveRouters).forEach(a=>{let i=a(t,n);i!==null&&o.push(i)}),o}},$1=r=>Rt.registerSaveRouter(r),B1=r=>Rt.registerLoadRouter(r),O1=r=>Rt.getSaveHandlers(r),z1=(r,t)=>Rt.getLoadHandlers(r,t);var Fv="tensorflowjs",Pv=1,Yp="models_store",Ju="model_info_store";function G1(){if(!$().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,t=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Mv(r){let t=r.result;t.createObjectStore(Yp,{keyPath:"modelPath"}),t.createObjectStore(Ju,{keyPath:"modelPath"})}var yi=class{constructor(t){if(this.indexedDB=G1(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((n,o)=>{let s=this.indexedDB.open(Fv,Pv);s.onupgradeneeded=()=>Mv(s),s.onsuccess=()=>{let a=s.result;if(e==null){let i=a.transaction(Yp,"readonly"),l=i.objectStore(Yp).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(l.result.modelArtifacts)},l.onerror=p=>(a.close(),o(l.error)),i.oncomplete=()=>a.close()}else{let i=bi(e),u=a.transaction(Ju,"readwrite"),l=u.objectStore(Ju),p=l.put({modelPath:this.modelPath,modelArtifactsInfo:i}),m;p.onsuccess=()=>{m=a.transaction(Yp,"readwrite");let d=m.objectStore(Yp).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:i});d.onsuccess=()=>n({modelArtifactsInfo:i}),d.onerror=f=>{l=u.objectStore(Ju);let h=l.delete(this.modelPath);h.onsuccess=()=>(a.close(),o(d.error)),h.onerror=g=>(a.close(),o(d.error))}},p.onerror=c=>(a.close(),o(p.error)),u.oncomplete=()=>{m==null?a.close():m.oncomplete=()=>a.close()}}},s.onerror=a=>o(s.error)})}};yi.URL_SCHEME="indexeddb://";var U1=r=>$().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(yi.URL_SCHEME)?q6(r.slice(yi.URL_SCHEME.length)):null;Rt.registerSaveRouter(U1);Rt.registerLoadRouter(U1);function q6(r){return new yi(r)}function j6(r){return r.startsWith(yi.URL_SCHEME)?r.slice(yi.URL_SCHEME.length):r}var Cb=class{constructor(){this.indexedDB=G1()}async listModels(){return new Promise((t,e)=>{let n=this.indexedDB.open(Fv,Pv);n.onupgradeneeded=()=>Mv(n),n.onsuccess=()=>{let o=n.result,s=o.transaction(Ju,"readonly"),i=s.objectStore(Ju).getAll();i.onsuccess=()=>{let u={};for(let l of i.result)u[l.modelPath]=l.modelArtifactsInfo;t(u)},i.onerror=u=>(o.close(),e(i.error)),s.oncomplete=()=>o.close()},n.onerror=o=>e(n.error)})}async removeModel(t){return t=j6(t),new Promise((e,n)=>{let o=this.indexedDB.open(Fv,Pv);o.onupgradeneeded=()=>Mv(o),o.onsuccess=()=>{let s=o.result,a=s.transaction(Ju,"readwrite"),i=a.objectStore(Ju),u=i.get(t),l;u.onsuccess=()=>{if(u.result==null)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{let p=i.delete(t),m=()=>{l=s.transaction(Yp,"readwrite");let d=l.objectStore(Yp).delete(t);d.onsuccess=()=>e(u.result.modelArtifactsInfo),d.onerror=f=>n(u.error)};p.onsuccess=m,p.onerror=c=>(m(),s.close(),n(u.error))}},u.onerror=p=>(s.close(),n(u.error)),a.oncomplete=()=>{l==null?s.close():l.oncomplete=()=>s.close()}},o.onerror=s=>n(o.error)})}};var nu="/",ec="tensorflowjs_models",W1="info",X6="model_topology",Y6="weight_specs",Z6="weight_data",Q6="model_metadata";function K1(r){return{info:[ec,r,W1].join(nu),topology:[ec,r,X6].join(nu),weightSpecs:[ec,r,Y6].join(nu),weightData:[ec,r,Z6].join(nu),modelMetadata:[ec,r,Q6].join(nu)}}function V1(r){for(let t of Object.values(r))window.localStorage.removeItem(t)}function J6(r){let t=r.split(nu);if(t.length<3)throw new Error(`Invalid key format: ${r}`);return t.slice(1,t.length-1).join(nu)}function e5(r){return r.startsWith(Ti.URL_SCHEME)?r.slice(Ti.URL_SCHEME.length):r}var Ti=class{constructor(t){if(!$().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=K1(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),o=bi(t);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,L1(t.weightData));let s={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:o}}catch{throw V1(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){let t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;let o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=o;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let i=JSON.parse(s);e.format=i.format,e.generatedBy=i.generatedBy,e.convertedBy=i.convertedBy,i.signature!=null&&(e.signature=i.signature),i.userDefinedMetadata!=null&&(e.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(e.modelInitializer=i.modelInitializer),i.trainingConfig!=null&&(e.trainingConfig=i.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=_1(a),e}};Ti.URL_SCHEME="localstorage://";var H1=r=>$().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(Ti.URL_SCHEME)?t5(r.slice(Ti.URL_SCHEME.length)):null;Rt.registerSaveRouter(H1);Rt.registerLoadRouter(H1);function t5(r){return new Ti(r)}var kb=class{constructor(){D($().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),D(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let t={},e=ec+nu,n=nu+W1;for(let o=0;o<this.LS.length;++o){let s=this.LS.key(o);if(s.startsWith(e)&&s.endsWith(n)){let a=J6(s);t[a]=JSON.parse(this.LS.getItem(s))}}return t}async removeModel(t){t=e5(t);let e=K1(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);let n=JSON.parse(this.LS.getItem(e.info));return V1(e),n}};var tc="://",Mr=class{constructor(){this.managers={}}static getInstance(){return Mr.instance==null&&(Mr.instance=new Mr),Mr.instance}static registerManager(t,e){D(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(tc)&&(t=t.slice(0,t.indexOf(tc))),D(t.length>0,()=>"scheme must not be an empty string.");let n=Mr.getInstance();D(n.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){let e=Mr.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(Mr.getInstance().managers)}};function Sb(r){if(r.indexOf(tc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Mr.getSchemes().join(",")}`);return{scheme:r.split(tc)[0],path:r.split(tc)[1]}}async function q1(r,t,e=!1){D(r!==t,()=>`Old path and new path are the same: '${r}'`);let n=Rt.getLoadHandlers(r);D(n.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),D(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${r}.`);let o=n[0],s=Rt.getSaveHandlers(t);D(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),D(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${t}.`);let a=s[0],i=Sb(r).scheme,u=Sb(r).path,l=i===Sb(r).scheme,p=await o.load();e&&l&&await Mr.getManager(i).removeModel(u);let m=await a.save(p);return e&&!l&&await Mr.getManager(i).removeModel(u),m.modelArtifactsInfo}async function j1(){let r=Mr.getSchemes(),t={};for(let e of r){let n=await Mr.getManager(e).listModels();for(let o in n){let s=e+tc+o;t[s]=n[o]}}return t}async function X1(r){let t=Sb(r);return Mr.getManager(t.scheme).removeModel(t.path)}async function Y1(r,t){return q1(r,t,!1)}async function Z1(r,t){return q1(r,t,!0)}var Ev=class{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}};if($().get("IS_BROWSER")){$().setPlatform("browser",new Ev);try{Mr.registerManager(Ti.URL_SCHEME,new kb)}catch{}try{Mr.registerManager(yi.URL_SCHEME,new Cb)}catch{}}var r5={importFetch:()=>Q1()},Lv;var _v=class{constructor(){this.util=J1(),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return $().global.fetch!=null?$().global.fetch(t,e):(Lv==null&&(Lv=r5.importFetch()),Lv(t,e))}now(){let t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}};$().get("IS_NODE")&&!$().get("IS_BROWSER")&&$().setPlatform("node",new _v);function Ie(r,t="float32",e){return t=t||"float32",Xf(r),new ht(r,t,e)}function n5(r,t){let e=S(r,"x","cast");if(!pv(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:e},o={dtype:t};return N.runKernel(Wn,n,o)}var re=w({cast_:n5});function o5(r){let e={x:S(r,"x","clone","string_or_numeric")};return N.runKernel(Vn,e)}var fn=w({clone_:o5});function vb(r,t=!1){console.log(r.toString(t))}vv();var s5={buffer:Ie,cast:re,clone:fn,print:vb};k1(s5);var Pn={};He(Pn,{browserFiles:()=>t2,browserHTTPRequest:()=>o2,concatenateArrayBuffers:()=>Qm,copyModel:()=>Y1,decodeWeights:()=>xb,encodeWeights:()=>E1,fromMemory:()=>s2,fromMemorySync:()=>Uv,getLoadHandlers:()=>z1,getModelArtifactsForJSON:()=>Jm,getModelArtifactsInfoForJSON:()=>bi,getSaveHandlers:()=>O1,http:()=>Nb,isHTTPScheme:()=>wb,listModels:()=>j1,loadWeights:()=>r2,moveModel:()=>Z1,registerLoadRouter:()=>B1,registerSaveRouter:()=>$1,removeModel:()=>X1,weightsLoaderFactory:()=>zv,withSaveHandler:()=>a2,withSaveHandlerSync:()=>i2});var a5="model",i5=".json",u5=".weights.bin";function e2(r){return new Promise(t=>setTimeout(t)).then(r)}var Ab=class{constructor(t){if(!$().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Ab.URL_SCHEME)&&(t=t.slice(Ab.URL_SCHEME.length)),(t==null||t.length===0)&&(t=a5),this.modelJsonFileName=t+i5,this.weightDataFileName=t+u5}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],o=Ib(t,n),s=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=s,await e2(()=>a.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=e,await e2(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:bi(t)}}}},rc=Ab;rc.URL_SCHEME="downloads://";var $v=class{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise((t,e)=>{let n=new FileReader;n.onload=o=>{let s=JSON.parse(o.target.result),a=s.modelTopology;if(a==null){e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:a});return}let u=Jm(s,l=>this.loadWeights(l));t(u)},n.onerror=o=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(t){let e=[],n=[];for(let a of t)e.push(...a.weights),n.push(...a.paths);let o=this.checkManifestAndWeightFiles(t),s=n.map(a=>this.loadWeightsFile(a,o[a]));return Promise.all(s).then(a=>[e,Qm(a)])}loadWeightsFile(t,e){return new Promise((n,o)=>{let s=new FileReader;s.onload=a=>{let i=a.target.result;n(i)},s.onerror=a=>o(`Failed to weights data from file of path '${t}'.`),s.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){let e=[],n=this.weightsFiles.map(s=>Rv(s.name)),o={};for(let s of t)s.paths.forEach(a=>{let i=Rv(a);if(e.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(e.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);o[a]=this.weightsFiles[n.indexOf(i)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return o}},p5=r=>$().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(rc.URL_SCHEME)?l5(r.slice(rc.URL_SCHEME.length)):null;Rt.registerSaveRouter(p5);function l5(r="model"){return new rc(r)}function t2(r){return new $v(r)}function Bv(r,t,e,n){a(r),e=e??0,n=n??1,i(e,n);let o=0,s=u=>(u.then(l=>{let p=e+ ++o/r.length*(n-e);return t(p),l}),u);function a(u){D(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function i(u,l){D(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),D(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),D(l>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${l}`)}return Promise.all(r.map(s))}async function Ov(r,t){t==null&&(t={});let e=t.fetchFunc==null?$().platform.fetch:t.fetchFunc,n=r.map(m=>e(m,t.requestInit,{isBinary:!0})),o=0,s=.5,i=(t.onProgress==null?await Promise.all(n):await Bv(n,t.onProgress,o,s)).map(m=>m.arrayBuffer()),u=.5,l=1;return t.onProgress==null?await Promise.all(i):await Bv(i,t.onProgress,u,l)}async function r2(r,t="",e,n){return zv(a=>Ov(a,{requestInit:n}))(r,t,e)}function zv(r){return async(t,e="",n)=>{let o=t.map(()=>!1),s={},a=n!=null?n.map(()=>!1):[],i=[];if(t.forEach((d,f)=>{let h=0;d.weights.forEach(g=>{let b="quantization"in g?g.quantization.dtype:g.dtype,T=ph[b]*tt(g.shape),x=()=>{o[f]=!0,s[f]==null&&(s[f]=[]),s[f].push({manifestEntry:g,groupOffset:h,sizeBytes:T})};n!=null?n.forEach((I,k)=>{I===g.name&&(x(),a[k]=!0)}):x(),i.push(g.name),h+=T})}),!a.every(d=>d)){let d=n.filter((f,h)=>!a[h]);throw new Error(`Could not find weights in manifest with names: ${d.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let u=o.reduce((d,f,h)=>(f&&d.push(h),d),[]),l=[];u.forEach(d=>{t[d].paths.forEach(f=>{let h=e+(e.endsWith("/")?"":"/")+f;l.push(h)})});let p=await r(l),m={},c=0;return u.forEach(d=>{let f=t[d].paths.length,h=0;for(let I=0;I<f;I++)h+=p[c+I].byteLength;let g=new ArrayBuffer(h),b=new Uint8Array(g),T=0;for(let I=0;I<f;I++){let k=new Uint8Array(p[c+I]);b.set(k,T),T+=k.byteLength}s[d].forEach(I=>{let k=g.slice(I.groupOffset,I.groupOffset+I.sizeBytes),A=xb(k,[I.manifestEntry]);for(let R in A)m[R]=A[R]}),c+=f}),m}}var m5="application/octet-stream",c5="application/json",lh=class{constructor(t,e){this.DEFAULT_METHOD="POST";if(e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(D(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=$().platform.fetch,D(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&D(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],o=Ib(t,n);e.body.append("model.json",new Blob([JSON.stringify(o)],{type:c5}),"model.json"),t.weightData!=null&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:m5}),"model.weights.bin");let s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:bi(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=e.modelTopology,o=e.weightsManifest;if(n==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Jm(e,s=>this.loadWeights(s))}async loadWeights(t){let e=Array.isArray(this.path)?this.path[1]:this.path,[n,o]=d5(e),s=this.weightPathPrefix||n,a=[];for(let p of t)a.push(...p.weights);let i=[],u=[];for(let p of t)for(let m of p.paths)this.weightUrlConverter!=null?u.push(this.weightUrlConverter(m)):i.push(s+m+o);this.weightUrlConverter&&i.push(...await Promise.all(u));let l=await Ov(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,Qm(l)]}};lh.URL_SCHEME_REGEX=/^https?:\/\//;function d5(r){let t=r.lastIndexOf("/"),e=r.lastIndexOf("?"),n=r.substring(0,t),o=e>t?r.substring(e):"";return[n+"/",o]}function wb(r){return r.match(lh.URL_SCHEME_REGEX)!=null}var n2=(r,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(r)?e=r.every(n=>wb(n)):e=wb(r),e)return Nb(r,t)}return null};Rt.registerSaveRouter(n2);Rt.registerLoadRouter(n2);function Nb(r,t){return new lh(r,t)}function o2(r,t){return Nb(r,t)}var mh=class{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}},Db=class{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}},Gv=class{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}};function s2(r,t,e,n){let o=arguments;return new Gv(Uv(...o))}function Uv(r,t,e,n){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new mh(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new mh({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new mh({modelTopology:r,weightSpecs:t,weightData:e,trainingConfig:n}))}function a2(r){return new Db(r)}function i2(r){return new Db(r)}var l2={};He(l2,{confusionMatrix:()=>p2});function f5(r,t,e=!1,n=!1){let o=S(r,"a","matMul"),s=S(t,"b","matMul");[o,s]=Ye(o,s);let a={a:o,b:s},i={transposeA:e,transposeB:n};return N.runKernel(po,a,i)}var Ke=w({matMul_:f5});function h5(r,t,e=1,n=0,o="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:S(r,"indices","oneHot","int32")},i={dtype:o,depth:t,onValue:e,offValue:n};return N.runKernel(wa,a,i)}var ep=w({oneHot_:h5});function Sxe(){$().set("PROD",!0)}function vxe(){$().set("DEBUG",!0)}function Axe(){$().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Wv(r){$().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}S1(Wv);function wxe(){N.disposeVariables()}function Mn(){return N}function ch(){return N.memory()}function Nxe(r){return N.profile(r)}function z(r,t){return N.tidy(r,t)}function Re(r){ih(r).forEach(e=>e.dispose())}function zt(r){return N.keep(r)}function Dxe(r){return N.time(r)}function g5(r){return N.setBackend(r)}function Rxe(){return N.ready()}function Fxe(){return N.backendName}function Pxe(r){N.removeBackend(r)}function Mxe(r){return N.findBackend(r)}function Exe(r){return N.findBackendFactory(r)}function tp(r,t,e=1){return N.registerBackend(r,t,e)}function u2(){return N.backend}function Lxe(r,t){$().setPlatform(r,t)}function b5(r){let e={input:S(r,"input","imag")};return N.runKernel(Ou,e)}var rp=w({imag_:b5});function y5(r){let e={x:S(r,"x","neg")};return N.runKernel(bs,e)}var Je=w({neg_:y5});function T5(r){let e={input:S(r,"input","real")};return N.runKernel(Uu,e)}var ou=w({real_:T5});function x5(r,t,e){let n=S(r,"x","transpose");if(t==null&&(t=n.shape.map((a,i)=>i).reverse()),D(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(a=>{D(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let o={x:n},s={perm:t};return n.dtype==="complex64"?z(()=>{let a=ou(n),i=rp(n);return a=N.runKernel(Rn,{x:a},s),i=N.runKernel(Rn,{x:i},s),e&&(i=Je(i)),Fn(a,i)}):N.runKernel(Rn,o,s)}var ze=w({transpose_:x5});function I5(r,t,e){let n=S(r,"labels","confusionMatrix"),o=S(t,"predictions","confusionMatrix");D(e==null||e>0&&Number.isInteger(e),()=>`If provided, numClasses must be a positive integer, but got ${e}`),D(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),D(o.rank===1,()=>`Expected the rank of predictions to be 1, but got ${o.rank}`),D(n.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),D(e>0&&Number.isInteger(e),()=>`numClasses is required to be a positive integer, but got ${e}`);let s=ep(re(n,"int32"),e),a=ep(re(o,"int32"),e),i=ze(s),u=Ke(i,a);return re(u,"int32")}var p2=w({confusionMatrix_:I5});var wr={};He(wr,{assertAndGetBroadcastShape:()=>Be,getBroadcastDims:()=>m2,getReductionAxes:()=>St});function m2(r,t){let e=r.length,n=[];for(let o=0;o<e;o++){let s=e-1-o,a=r[s]||1;(t[t.length-1-o]||1)>1&&a===1&&n.unshift(s)}return n}function St(r,t){let e=[];for(let n=0;n<t.length;n++){let o=r[r.length-n-1],s=t.length-n-1,a=t[s];(o==null||o===1&&a>1)&&e.unshift(s)}return e}function Be(r,t){let e=[],n=Math.max(r.length,t.length);for(let o=0;o<n;o++){let s=r[r.length-o-1];s==null&&(s=1);let a=t[t.length-o-1];if(a==null&&(a=1),s===1)e.unshift(a);else if(a===1)e.unshift(s);else if(s!==a){let i=`Operands could not be broadcast together with shapes ${r} and ${t}.`;throw Error(i)}else e.unshift(s)}return e}var Fb={};He(Fb,{fromPixels:()=>N5,fromPixelsAsync:()=>A5,toPixels:()=>w5});function Rb(r,t,e){if(so(r),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=zr(r,e);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return dn(r,t,n,e)}var Zp;function c2(r,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,n=!1,o=!1,s=!1,a=!1,i=!1;if(r.data instanceof Uint8Array)e=!0;else if(typeof ImageData<"u"&&r instanceof ImageData)n=!0;else if(typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement)s=!0;else if(r.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&r instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(rh(Vp,N.backendName)!=null){let f={pixels:r},h={numChannels:t};return N.runKernel(Vp,f,h)}let[l,p]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],m;if(a)m=r.getContext("2d").getImageData(0,0,l,p).data;else if(n||e)m=r.data;else if(s||o||i){if(Zp==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Zp=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Zp=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Zp.canvas.width=l,Zp.canvas.height=p,Zp.drawImage(r,0,0,l,p),m=Zp.getImageData(0,0,l,p).data}let c;if(t===4)c=new Int32Array(m);else{let f=l*p;c=new Int32Array(f*t);for(let h=0;h<f;h++)for(let g=0;g<t;++g)c[h*t+g]=m[h*4+g]}return Rb(c,[p,l,t],"int32")}function C5(r){return r!=null&&r.data instanceof Uint8Array}function k5(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function S5(r){return r!=null&&r.width!==0&&r.height!==0}function v5(r){return k5()&&!(r instanceof ImageBitmap)&&S5(r)&&!C5(r)}async function A5(r,t=3){let e=null;if($().getBool("WRAP_TO_IMAGEBITMAP")&&v5(r)){let n;try{n=await createImageBitmap(r,{premultiplyAlpha:"none"})}catch{n=null}n!=null&&n.width===r.width&&n.height===r.height?e=n:e=r}else e=r;return c2(e,t)}async function w5(r,t){let e=S(r,"img","toPixels");if(!(r instanceof We)){let l=e;e=re(l,"int32"),l.dispose()}if(e.rank!==2&&e.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let[n,o]=e.shape.slice(0,2),s=e.rank===2?1:e.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(e.dtype!=="float32"&&e.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`);let a=await e.data(),i=e.dtype==="float32"?255:1,u=new Uint8ClampedArray(o*n*4);for(let l=0;l<n*o;++l){let p=[0,0,0,255];for(let c=0;c<s;c++){let d=a[l*s+c];if(e.dtype==="float32"){if(d<0||d>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${d}.`)}else if(e.dtype==="int32"&&(d<0||d>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${d}.`);s===1?(p[0]=d*i,p[1]=d*i,p[2]=d*i):p[c]=d*i}let m=l*4;u[m+0]=Math.round(p[0]),u[m+1]=Math.round(p[1]),u[m+2]=Math.round(p[2]),u[m+3]=Math.round(p[3])}if(t!=null){t.width=o,t.height=n;let l=t.getContext("2d"),p=new ImageData(u,o,n);l.putImageData(p,0,0)}return e!==r&&e.dispose(),u}var N5=w({fromPixels_:c2});var Pb={};He(Pb,{prepareAndValidate:()=>d2});function d2(r,t){let e=r.shape.length,n=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[n-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[n-1]} vs. ${e}`);if(tt(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let o=t.shape,s=o[o.length-1],a=1;for(let m=0;m<o.length-1;++m)a*=o[m];let i=r.shape,u=o.slice();u.pop();let l=1;for(let m=s;m<e;++m)l*=i[m],u.push(i[m]);let p=[...li(r.shape).map(m=>m/l),1].slice(0,s);return[u,a,l,p]}var dh={};He(dh,{calculateShapes:()=>f2,validateInput:()=>Mb,validateUpdateShape:()=>Kv});function Kv(r,t,e){let n=t.rank>1?t.shape[t.rank-1]:1,o=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${r}, sliceDim: ${n}, and batchDim: ${o}.`;if(e.rank<o)throw new Error(s+` update.rank < ${o}. `);if(r.length<n+(e.rank-o))throw new Error(s+` Output shape length < ${n+(e.rank-o)}`);if(e.rank!==o+r.length-n)throw new Error(s+` update.rank != ${o+r.length-n}`);for(let a=0;a<o;++a)if(e.shape[a]!==t.shape[a])throw new Error(s+` updates.shape[${a}] (${e.shape[a]}) != indices.shape[${a}] (${t.shape[a]}).`);for(let a=0;a<e.rank-o;++a)if(e.shape[a+o]!==r[a+n])throw new Error(s+` updates.shape[${a+o}] (${e.shape[a+o]}) != shape[${a+o}] (${r[a+o]})`)}function Mb(r,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}Kv(e,t,r)}function f2(r,t,e){let n=t.shape.length,o=n>1?t.shape[n-1]:1,s=e.length,a=1;for(let m=o;m<s;++m)a*=e[m];let i=o<1?1:o,u=tt(t.shape)/i,l=[...li(e.slice(0,o)),1],p=tt(e);return{sliceRank:o,numUpdates:u,sliceSize:a,strides:l,outputSize:p}}var xt={};He(xt,{assertParamsValid:()=>R5,computeFlatOffset:()=>L5,computeOutShape:()=>P5,getNormalizedAxes:()=>M5,isSliceContinous:()=>E5,maskToAxes:()=>F5,parseSliceParams:()=>Hv,sliceInfo:()=>_5,startForAxis:()=>C2,startIndicesWithElidedDims:()=>T2,stopForAxis:()=>k2,stopIndicesWithElidedDims:()=>x2,stridesForAxis:()=>I2,stridesWithElidedDims:()=>g2});var Vv=-2,D5=-1;function R5(r,t,e){let n=r.shape.length;D(n===t.length,()=>`Error in slice${n}D: Length of begin ${t} must match the rank of the array (${n}).`),D(n===e.length,()=>`Error in slice${n}D: Length of size ${e} must match the rank of the array (${n}).`);for(let o=0;o<n;++o)D(t[o]+e[o]<=r.shape[o],()=>`Error in slice${n}D: begin[${o}] + size[${o}] (${t[o]+e[o]}) would overflow input.shape[${o}] (${r.shape[o]})`)}function F5(r){let t=[],e=0;for(;r>0;)r&1&&t.push(e),r/=2,e++;return t}function P5(r,t,e){let n=[];for(let o=0;o<r.length;o++)n[o]=Math.ceil((t[o]-r[o])/e[o]);return n}function g2(r,t,e,n){let o=[...r];for(let s=o.length;s<n.length;s++)o.push(1);for(let s=0;s<e;s++)s===0?o[t]=1:(o.splice(t,0,1),o.pop());return o}function b2(r,t,e){return e<=r?e:e-(t-1)}function y2(r,t){let e=[];for(let n=0;n<r;n++)e.push(t+n);return e}function M5(r,t,e,n,o,s,a,i,u){let l=r.length,p=new Array(l),m=new Array(l),c=new Array(l);if(t.length&&e>0){let d=t[0],f=e+1;p=T2(a,d,f,n,r),m=x2(i,d,f,o,r),c=g2(s,d,f,r)}else for(let d=0;d<l;d++)p[d]=C2(a,n,s,r,d,u),m[d]=k2(i,o,s,r,d,u),c[d]=I2(s,d,u);return{begin:p,end:m,strides:c}}function T2(r,t,e,n,o){let s=[...o],a=y2(e,t);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=0;else{let u=b2(t,e,i),l=n[u];r&1<<u&&(l=0),s[i]=l}return s}function x2(r,t,e,n,o){let s=[...o],a=y2(e,t);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{let u=b2(t,e,i),l=n[u];r&1<<u&&(l=Number.MAX_SAFE_INTEGER),s[i]=l}for(let i=0;i<s.length;i++){let u=o[i];s[i]<0&&(s[i]+=u),s[i]=gm(0,s[i],o[i])}return s}function I2(r,t,e){let n=r[t];return(e&1<<t||n==null)&&(n=1),n}function C2(r,t,e,n,o,s){let a=t[o],i=e[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);let u=n[o];return a<0&&(a+=u),a=gm(0,a,u-1),a}function k2(r,t,e,n,o,s){let a=t[o],i=e[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);let u=n[o];return a<0&&(a+=u),i>0?a=gm(0,a,u):a=gm(-1,a,u-1),a}function E5(r,t,e){let n=e.length;for(let o=0;o<e.length;o++)if(e[o]>1){n=o;break}for(let o=n+1;o<e.length;o++)if(t[o]>0||e[o]!==r[o])return!1;return!0}function L5(r,t){let e=r.length>0?r[r.length-1]:1;for(let n=0;n<r.length-1;n++)e+=r[n]*t[n];return e}function Hv(r,t,e){let n,o=r.shape.length;typeof t=="number"?n=[t,...new Array(o-1).fill(0)]:t.length<o?n=t.concat(new Array(o-t.length).fill(0)):n=t.slice(),n.forEach(a=>{D(a!==-1,()=>"slice() does not support negative begin indexing.")});let s;return e==null?s=new Array(o).fill(-1):typeof e=="number"?s=[e,...new Array(o-1).fill(-1)]:e.length<o?s=e.concat(new Array(o-e.length).fill(-1)):s=e,s=s.map((a,i)=>a>=0?a:(D(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),r.shape[i]-n[i])),[n,s]}function _5(r,t,e,n,o,s,a,i,u){let l;if(n==null?(l=new Array(t.length),l.fill(1)):l=n,a!=null&&(a&a-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let p=!1,m={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:l.slice(),beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};for(let x=0;x<m.dims;x++)p&&(1<<x&i)!==0&&m.numAddAxisAfterEllipsis++,1<<x&a&&(p=!0);p||(m.ellipsisMask|=1<<m.dims,m.dims++);let c={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};$5(m,c);let d=!0,f=!0,h=!0,g=[],b=[];for(let x=0;x<r.length;++x){if(c.strides[x]===0)throw Error(`strides[${x}] must be non-zero`);let I=!!(c.shrinkAxisMask&1<<x),k=r[x];if(k===-1){g.push(I?1:-1);continue}let A=[c.beginMask&1<<x,c.endMask&1<<x],R=[c.strides[x]>0?0:-1,c.strides[x]>0?k:k-1];if(I&&c.strides[x]<=0)throw Error("only stride 1 allowed on non-range indexing.");h=h&&c.strides[x]===1;let F=!!(c.beginMask&1<<x&&c.endMask&1<<x);if(c.beginValid&&c.endValid){if(I){let G=c.begin[x]<0?k+c.begin[x]:c.begin[x];if(c.begin[x]=G,c.end[x]=c.begin[x]+1,G<0||G>=k)throw Error(`slice index ${c.begin[x]} of dimension ${x} out of bounds.`)}else c.begin[x]=h2(c.begin[x],0,c.strides[x],k,A,R),c.end[x]=h2(c.end[x],1,c.strides[x],k,A,R);let O=c.strides[x]===1&&c.begin[x]===0&&c.end[x]===k;d=d&&O,f=f&&(x===0&&c.strides[x]===1||O)}else d=d&&c.strides[x]===1&&F,f=f&&(x===0&&c.strides[x]===1||F);let P,L=!1;if(c.beginValid&&c.endValid?(P=c.end[x]-c.begin[x],L=!0):I?(P=1,L=!0):F&&k>=0&&(c.strides[x]<0?P=-k:P=k,L=!0),L){let O;P===0||P<0!=c.strides[x]<0?O=0:O=Math.trunc(P/c.strides[x])+(P%c.strides[x]!==0?1:0),g.push(O)}else g.push(-1)}for(let x=0;x<c.finalShapeGatherIndices.length;++x){let I=c.finalShapeGatherIndices[x];I>=0?b.push(g[I]):I===Vv&&b.push(1)}return{finalShapeSparse:b.filter((x,I)=>c.finalShapeGatherIndices[I]!==Vv),finalShape:b,isIdentity:d,sliceDim0:f,isSimpleSlice:h,begin:c.begin,end:c.end,strides:c.strides}}function $5(r,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=r.begin!=null,t.endValid=r.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let n=0;n<r.dims;n++)if(1<<n&r.ellipsisMask){let o=Math.min(t.dims-(r.dims-n)+1+r.numAddAxisAfterEllipsis,t.dims);for(;e<o;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=n}else if(1<<n&r.newAxisMask)t.finalShapeGatherIndices.push(Vv),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);r.begin!=null&&(t.begin[e]=r.begin[n]),r.end!=null&&(t.end[e]=r.end[n]),t.strides[e]=r.strides[n],r.beginMask&1<<n&&(t.beginMask|=1<<e),r.endMask&1<<n&&(t.endMask|=1<<e),r.shrinkAxisMask&1<<n?(t.finalShapeGatherIndices.push(D5),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(n)),t.inputShapeGatherIndicesSparse[e]=n,e++}}function h2(r,t,e,n,o,s){if(o[t])return e>0?s[t]:s[t+1&1];{let a=r<0?n+r:r;return a<s[0]?s[0]:a>s[1]?s[1]:a}}var J={};He(J,{Serializable:()=>fh,SerializationMap:()=>xi,registerClass:()=>En});var fh=class{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}},xi=class{constructor(){this.classNameMap={}}static getMap(){return xi.instance==null&&(xi.instance=new xi),xi.instance}static register(t){xi.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function En(r){D(r.className!=null,()=>"Class being registered does not have the static className property defined."),D(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),D(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),xi.register(r)}var w2={};He(w2,{TEST_EPSILON_FLOAT16:()=>S2,createVideoElement:()=>K5,encodeStrings:()=>A2,expectArrayBuffersEqual:()=>W5,expectArraysClose:()=>O5,expectArraysEqual:()=>G5,expectNumbersClose:()=>v2,expectPromiseToFail:()=>z5,expectValuesInRange:()=>U5,play:()=>V5,testEpsilon:()=>Eb});var B5=.001,S2=.1;function O5(r,t,e){return e==null&&(e=Eb()),qv(r,t,(n,o)=>jv(n,o,e))}function Eb(){return N.backend.floatPrecision()===32?B5:S2}function qv(r,t,e){let n=!0;if((Cr(r)||Cr(t))&&(n=!1),Cr(r)&&Cr(t)&&(n=!0),n){let a=r.constructor.name,i=t.constructor.name;if(a!==i)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${i}`)}if(Array.isArray(r)&&Array.isArray(t)){let a=zr(r),i=zr(t);if(!Un(a,i))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${i}]`)}let o=Cr(r)?r:ua(r),s=Cr(t)?t:ua(t);if(o.length!==s.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${s.length}.
Actual:   ${o}.
Expected: ${s}.`);for(let a=0;a<s.length;++a){let i=o[a],u=s[a];if(!e(i,u))throw new Error(`Arrays differ: actual[${a}] = ${i}, expected[${a}] = ${u}.
Actual:   ${o}.
Expected: ${s}.`)}typeof expect<"u"&&expect().nothing()}function z5(r,t){r().then(()=>t.fail(),()=>t()),typeof expect<"u"&&expect().nothing()}function G5(r,t){let e=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return pa(r)||pa(r[0])||pa(t)||pa(t[0])?qv(r,e,(n,o)=>n==o):qv(r,t,(n,o)=>jv(n,o,0))}function v2(r,t,e){if(e==null&&(e=Eb()),!jv(r,t,e))throw new Error(`Numbers differ: actual === ${r}, expected === ${t}`);typeof expect<"u"&&expect().nothing()}function jv(r,t,e){return!isFinite(r)&&!isFinite(t)?!0:!(isNaN(r)||isNaN(t)||Math.abs(r-t)>e)}function U5(r,t,e){for(let n=0;n<r.length;n++)if(r[n]<t||r[n]>e)throw new Error(`Value out of range:${r[n]} low: ${t}, high: ${e}`)}function W5(r,t){let e=new Float32Array(r),n=new Float32Array(t);if(e.length!==n.length)throw new Error(`Expected ArrayBuffer to be of length ${n.length}, but it was ${e.length}`);for(let o=0;o<n.length;o++)if(e[o]!==n[o])throw new Error(`Expected ArrayBuffer value at ${o} to be ${n[o]} but got ${e[o]} instead`)}function A2(r){for(let t=0;t<r.length;t++){let e=r[t];Array.isArray(e)?A2(e):r[t]=Zu(e)}return r}function K5(r){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(r),new Promise(e=>{t.addEventListener("loadeddata",n=>e(t)),t.load()})}async function V5(r){await r.play(),"requestVideoFrameCallback"in r&&await new Promise(t=>{r.requestVideoFrameCallback(t)})}var H5="0.0.0";function q5(r,t){let e=S(r,"a","add"),n=S(t,"b","add");[e,n]=Ye(e,n);let o={a:e,b:n};return N.runKernel(Nn,o)}var X=w({add_:q5});function j5(r,t){let e=S(r,"a","floorDiv"),n=S(t,"b","floorDiv");[e,n]=Ye(e,n);let o={a:e,b:n};return N.runKernel(Co,o)}var Lb=w({floorDiv_:j5});function X5(r,t){let e=S(r,"a","div"),n=S(t,"b","div");if([e,n]=Ye(e,n),e.dtype==="int32"&&n.dtype==="int32")return Lb(e,n);let o={a:e,b:n},s={};return N.runKernel(yo,o,s)}var ce=w({div_:X5});function Y5(r,t){let e=S(r,"a","mul"),n=S(t,"b","mul");[e,n]=Ye(e,n);let o={a:e,b:n};return N.runKernel(Eo,o)}var E=w({mul_:Y5});function Z5(r){let t=S(r,"x","abs");if(t.dtype==="complex64"){let e={x:t};return N.runKernel(Lu,e)}else{let e={x:t};return N.runKernel(cs,e)}}var Gt=w({abs_:Z5});function Q5(r){let e={x:S(r,"x","acos")};return N.runKernel(Mi,e)}var N2=w({acos_:Q5});function J5(r){let e={x:S(r,"x","acosh")};return N.runKernel(Ei,e)}var D2=w({acosh_:J5});function eX(r){D(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),D(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let t=r.map((o,s)=>S(o,`tensors${s}`,"addN")),e=t[0];t.forEach(o=>{if(o.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(o=>{if(!Un(o.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=t;return N.runKernel(ao,n)}var R2=w({addN_:eX});function tX(r,t=null,e=!1){let o={x:S(r,"x","all","bool")},s={axis:t,keepDims:e};return N.runKernel(Li,o,s)}var _b=w({all_:tX});function rX(r,t=null,e=!1){let o={x:S(r,"x","any","bool")},s={axis:t,keepDims:e};return N.runKernel(_i,o,s)}var hh=w({any_:rX});function nX(r,t=0){let n={x:S(r,"x","argMax")},o={axis:t};return N.runKernel(io,n,o)}var np=w({argMax_:nX});function oX(r,t=0){let n={x:S(r,"x","argMin")},o={axis:t};return N.runKernel(mi,n,o)}var F2=w({argMin_:oX});function sX(r){let e={x:S(r,"x","asin")};return N.runKernel($i,e)}var P2=w({asin_:sX});function aX(r){let e={x:S(r,"x","asinh")};return N.runKernel(Bi,e)}var M2=w({asinh_:aX});function iX(r){let e={x:S(r,"x","atan")};return N.runKernel(Oi,e)}var E2=w({atan_:iX});function uX(r,t){let e=S(r,"a","atan2"),n=S(t,"b","atan2");[e,n]=Ye(e,n);let o={a:e,b:n};return N.runKernel(la,o)}var L2=w({atan2_:uX});function pX(r){let e={x:S(r,"x","atanh")};return N.runKernel(zi,e)}var _2=w({atanh_:pX});function lX(r,t,e,n,o="NHWC",s){let a=r[3],i=[...t,a],u=B2(o);return Jp(r,i,e,s,n,null,null,u)}function Yv(r,t,e,n,o,s,a="channelsLast"){let[i,u]=$b(t),l;if(a==="channelsLast")l=[i,u,r[3],r[3]];else if(a==="channelsFirst")l=[i,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return Jp(r,l,e,n,o,s,!1,a)}function mX(r,t,e,n,o,s,a="NDHWC"){let[i,u,l]=Xv(t),p,m;if(a==="NDHWC")m="channelsLast",p=[i,u,l,r[4],r[4]];else if(a==="NCDHW")m="channelsFirst",p=[i,u,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return $2(r,p,e,n,o,!1,m,s)}function Jp(r,t,e,n,o,s,a=!1,i="channelsLast"){let[u,l,p,m]=[-1,-1,-1,-1];if(i==="channelsLast")[u,l,p,m]=r;else if(i==="channelsFirst")[u,m,l,p]=r;else throw new Error(`Unknown dataFormat ${i}`);let[c,d,,f]=t,[h,g]=$b(e),[b,T]=$b(n),x=nc(c,b),I=nc(d,T),{padInfo:k,outHeight:A,outWidth:R}=fX(o,l,p,h,g,x,I,s,i),F=a?f*m:f,P;return i==="channelsFirst"?P=[u,F,A,R]:i==="channelsLast"&&(P=[u,A,R,F]),{batchSize:u,dataFormat:i,inHeight:l,inWidth:p,inChannels:m,outHeight:A,outWidth:R,outChannels:F,padInfo:k,strideHeight:h,strideWidth:g,filterHeight:c,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:I,dilationHeight:b,dilationWidth:T,inShape:r,outShape:P,filterShape:t}}function $2(r,t,e,n,o,s=!1,a="channelsLast",i){let[u,l,p,m,c]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[u,l,p,m,c]=r;else if(a==="channelsFirst")[u,c,l,p,m]=r;else throw new Error(`Unknown dataFormat ${a}`);let[d,f,h,,g]=t,[b,T,x]=Xv(e),[I,k,A]=Xv(n),R=nc(d,I),F=nc(f,k),P=nc(h,A),{padInfo:L,outDepth:O,outHeight:G,outWidth:W}=hX(o,l,p,m,b,T,x,R,F,P,i),H=s?g*c:g,V;return a==="channelsFirst"?V=[u,H,O,G,W]:a==="channelsLast"&&(V=[u,O,G,W,H]),{batchSize:u,dataFormat:a,inDepth:l,inHeight:p,inWidth:m,inChannels:c,outDepth:O,outHeight:G,outWidth:W,outChannels:H,padInfo:L,strideDepth:b,strideHeight:T,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:h,effectiveFilterDepth:R,effectiveFilterHeight:F,effectiveFilterWidth:P,dilationDepth:I,dilationHeight:k,dilationWidth:A,inShape:r,outShape:V,filterShape:t}}function cX(r,t,e,n,o){n==null&&(n=Zv(r,t,e));let s=r[0],a=r[1],i=Qp((s-t+2*n)/e+1,o),u=Qp((a-t+2*n)/e+1,o);return[i,u]}function dX(r,t,e,n,o,s){o==null&&(o=Zv(r,t,n));let a=r[0],i=r[1],u=r[2],l=Qp((a-t+2*o)/n+1,s),p=Qp((i-t+2*o)/n+1,s),m=Qp((u-t+2*o)/n+1,s);return[l,p,m,e]}function Zv(r,t,e,n=1){let o=nc(t,n);return Math.floor((r[0]*(e-1)-e+o)/2)}function $b(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function Xv(r){return typeof r=="number"?[r,r,r]:r}function nc(r,t){return t<=1?r:r+(r-1)*(t-1)}function fX(r,t,e,n,o,s,a,i,u){let l,p,m;if(typeof r=="number"){l={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let d=cX([t,e],s,n,r,i);p=d[0],m=d[1]}else if(r==="same"){p=Math.ceil(t/n),m=Math.ceil(e/o);let c=Math.max(0,(p-1)*n+s-t),d=Math.max(0,(m-1)*o+a-e),f=Math.floor(c/2),h=c-f,g=Math.floor(d/2),b=d-g;l={top:f,bottom:h,left:g,right:b,type:"SAME"}}else if(r==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((t-s+1)/n),m=Math.ceil((e-a+1)/o);else if(typeof r=="object"){let c=u==="channelsLast"?r[1][0]:r[2][0],d=u==="channelsLast"?r[1][1]:r[2][1],f=u==="channelsLast"?r[2][0]:r[3][0],h=u==="channelsLast"?r[2][1]:r[3][1];l={top:c,bottom:d,left:f,right:h,type:c===0&&d===0&&f===0&&h===0?"VALID":"EXPLICIT"},p=Qp((t-s+c+d)/n+1,i),m=Qp((e-a+f+h)/o+1,i)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:l,outHeight:p,outWidth:m}}function hX(r,t,e,n,o,s,a,i,u,l,p){let m,c,d,f;if(typeof r=="number"){m={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=dX([t,e,n,1],i,1,o,r,p);c=g[0],d=g[1],f=g[2]}else if(r==="same"){c=Math.ceil(t/o),d=Math.ceil(e/s),f=Math.ceil(n/a);let h=(c-1)*o+i-t,g=(d-1)*s+u-e,b=(f-1)*a+l-n,T=Math.floor(h/2),x=h-T,I=Math.floor(g/2),k=g-I,A=Math.floor(b/2),R=b-A;m={top:I,bottom:k,left:A,right:R,front:T,back:x,type:"SAME"}}else if(r==="valid")m={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},c=Math.ceil((t-i+1)/o),d=Math.ceil((e-u+1)/s),f=Math.ceil((n-l+1)/a);else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:m,outDepth:c,outHeight:d,outWidth:f}}function Qp(r,t){if(!t)return Math.trunc(r);switch(t){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${t}`)}}function Jo(r){let[t,e,n]=$b(r);return t===1&&e===1&&n===1}function Er(r,t){return Jo(r)||Jo(t)}function B2(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function Ft(r,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")D(Pi(t),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(n=>{n.forEach(o=>{D(Pi(o),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${o}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${t}`)}}function gX(r,t){let n={x:S(r,"x","reshape","string_or_numeric")},o={shape:t};return N.runKernel(xs,n,o)}var _=w({reshape_:gX});function bX(r,t,e,n,o){let s=S(r,"x","avgPool","float32"),a=1;D(Er(e,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`);let i=s,u=!1;s.rank===3&&(u=!0,i=_(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Ft("avgPool",n,o);let l={x:i},p={filterSize:t,strides:e,pad:n,dimRoundingMode:o},m=N.runKernel(uo,l,p);return m=re(m,s.dtype),u?_(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var oc=w({avgPool_:bX});function yX(r,t,e,n,o,s="NDHWC"){let a=S(r,"x","avgPool3d","float32"),i=a,u=!1;a.rank===4&&(u=!0,i=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),D(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Ft("avgPool3d",n,o);let l={x:i},p={filterSize:t,strides:e,pad:n,dimRoundingMode:o,dataFormat:s},m=N.runKernel(Mu,l,p);return m=re(m,i.dtype),u?_(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Bb=w({avgPool3d_:yX});function TX(r,t=0){D(r.length>=1,()=>"Pass at least one tensor to concat");let e=ru(r,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),e.length===1)return fn(e[0]);let n=e,o={axis:t};return N.runKernel(fs,n,o)}var mt=w({concat_:TX});function xX(r){let e={x:S(r,"x","sigmoid","float32")};return N.runKernel(Vo,e)}var Ln=w({sigmoid_:xX});function IX(r,t,e){let n=S(r,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let o={x:n},s={begin:t,size:e};return N.runKernel(Cs,o,s)}var Oe=w({slice_:IX});function CX(r){let e={x:S(r,"x","tanh","float32")};return N.runKernel(Zo,e)}var op=w({tanh_:CX});function kX(r,t,e,n,o,s){let a=S(r,"forgetBias","basicLSTMCell"),i=S(t,"lstmKernel","basicLSTMCell"),u=S(e,"lstmBias","basicLSTMCell"),l=S(n,"data","basicLSTMCell"),p=S(o,"c","basicLSTMCell"),m=S(s,"h","basicLSTMCell"),c=mt([l,m],1),d=Ke(c,i),f=X(d,u),h=f.shape[0],g=f.shape[1]/4,b=[h,g],T=Oe(f,[0,0],b),x=Oe(f,[0,g],b),I=Oe(f,[0,g*2],b),k=Oe(f,[0,g*3],b),A=X(E(Ln(T),op(x)),E(p,Ln(X(a,I)))),R=E(op(A),Ln(k));return[A,R]}var O2=w({basicLSTMCell_:kX});function SX(r,t,e){let n=S(r,"x","batchToSpaceND"),o=t.reduce((i,u)=>i*u);D(n.rank>=1+t.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${t.length}`),D(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),D(n.shape[0]%o===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${o}`);let s={x:n},a={blockShape:t,crops:e};return N.runKernel(ds,s,a)}var sc=w({batchToSpaceND_:SX});function z2(r){let t;return r.rank===0||r.rank===1?t=_(r,[1,1,1,r.size]):r.rank===2?t=_(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?t=_(r,[1,r.shape[0],r.shape[1],r.shape[2]]):t=r,t}function vX(r,t,e,n,o,s){s==null&&(s=.001);let a=S(r,"x","batchNorm"),i=S(t,"mean","batchNorm"),u=S(e,"variance","batchNorm"),l;o!=null&&(l=S(o,"scale","batchNorm"));let p;n!=null&&(p=S(n,"offset","batchNorm")),D(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(p==null||i.rank===p.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let c={x:z2(a),scale:l,offset:p,mean:i,variance:u},d={varianceEpsilon:s},f=N.runKernel(ko,c,d);return _(f,a.shape)}var sp=w({batchNorm_:vX});function AX(r,t,e,n,o,s){let a=S(r,"x","batchNorm"),i=S(t,"mean","batchNorm"),u=S(e,"variance","batchNorm"),l;o!=null&&(l=S(o,"scale","batchNorm"));let p;return n!=null&&(p=S(n,"offset","batchNorm")),D(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),D(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),D(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&D(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),p!=null&&D(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`),sp(a,i,u,p,l,s)}var Ob=w({batchNorm2d_:AX});function wX(r,t,e,n,o,s){let a=S(r,"x","batchNorm"),i=S(t,"mean","batchNorm"),u=S(e,"variance","batchNorm"),l;o!=null&&(l=S(o,"scale","batchNorm"));let p;return n!=null&&(p=S(n,"offset","batchNorm")),D(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),D(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),D(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&D(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),p!=null&&D(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`),sp(a,i,u,p,l,s)}var zb=w({batchNorm3d_:wX});function NX(r,t,e,n,o,s){let a=S(r,"x","batchNorm"),i=S(t,"mean","batchNorm"),u=S(e,"variance","batchNorm"),l;o!=null&&(l=S(o,"scale","batchNorm"));let p;return n!=null&&(p=S(n,"offset","batchNorm")),D(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),D(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),D(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&D(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),p!=null&&D(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`),sp(a,i,u,p,l,s)}var Gb=w({batchNorm4d_:NX});function DX(r,t,e){let n=S(r,"x","bincount"),o=S(t,"weights","bincount");D(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),D(e>=0,()=>`size must be non-negative, but got ${e}.`),D(o.size===n.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${o.shape}.`);let s={x:n,weights:o},a={size:e};return N.runKernel(Cm,s,a)}var Ub=w({bincount_:DX});function RX(r,t){let e=S(r,"s0","broadcastArgs","int32"),n=S(t,"s1","broadcastArgs","int32");if(e.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);let o={s0:e,s1:n};return N.runKernel(km,o)}var G2=w({broadcastArgs_:RX});function FX(r,t){let e=S(r,"broadcastTo","x"),n=e.shape;if(t.some(l=>!(l>0)||l%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){let l=e.shape.slice();for(;l.length<t.length;)l.unshift(1);e=_(e,l)}let o=e.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(o[l]===t[l])s[l]=1;else if(e.shape[l]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${t}].`);if(s.map((l,p)=>l>1?p:-1).filter(l=>l>=0).length===0)return fn(e);let i={x:e},u={reps:s};return N.runKernel(Dn,i,u)}var ap=w({broadcastTo_:FX});function PX(r){let e={x:S(r,"x","ceil","float32")};return N.runKernel(lo,e)}var U2=w({ceil_:PX});function Es(r,t,e){let n={shape:r,value:t,dtype:e};return N.runKernel(ci,{},n)}function MX(r,t,e){let n=S(r,"x","clipByValue");if(D(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return Es(n.shape,t,n.dtype);let o={x:n},s={clipValueMin:t,clipValueMax:e};return N.runKernel(Kn,o,s)}var Gr=w({clipByValue_:MX});function EX(r){return mt(r,0)}var Wb=w({concat1d_:EX});function LX(r,t){return mt(r,t)}var Kb=w({concat2d_:LX});function _X(r,t){return mt(r,t)}var Vb=w({concat3d_:_X});function $X(r,t){return mt(r,t)}var Hb=w({concat4d_:$X});function BX(r,t,e,n,o="NHWC",s=[1,1],a){let i=S(r,"x","conv2d","float32"),u=S(t,"filter","conv2d","float32"),l=i,p=!1;i.rank===3&&(p=!0,l=_(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),D(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Ft("conv2d",n,a);let m=o==="NHWC"?l.shape[3]:l.shape[1];D(m===u.shape[2],()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${u.shape[2]}.`),D(Er(e,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`);let c={x:l,filter:u},d={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},f=N.runKernel(mo,c,d);return p?_(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var ts=w({conv2d_:BX});function OX(r,t,e,n,o="NWC",s=1,a){let i=S(r,"x","conv1d"),u=S(t,"filter","conv1d"),l=i,p=!1;i.rank===2&&(p=!0,l=_(i,[1,i.shape[0],i.shape[1]])),D(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),D(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Ft("conv1d",n,a),D(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),D(Er(e,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${s}'`),D(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);let m=_(u,[1,u.shape[0],u.shape[1],u.shape[2]]),c=_(l,[l.shape[0],1,l.shape[1],l.shape[2]]),g=ts(c,m,[1,e],n,"NHWC",[1,s],a);return p?_(g,[g.shape[2],g.shape[3]]):_(g,[g.shape[0],g.shape[2],g.shape[3]])}var qb=w({conv1d_:OX});function zX(r,t,e,n,o,s="NHWC",a){D(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let i=r,u=t,l=!1;t.rank===3&&(l=!0,u=_(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,r[0],r[1],r[2]]),D(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),D(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),D(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);let p=s==="NHWC"?i[3]:i[1],m=s==="NHWC"?u.shape[3]:u.shape[1];D(p===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${e.shape[2]}.`),D(m===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${e.shape[3]}.`),Ft("conv2dDerInput",o,a);let c={dy:u,filter:e},d={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,inputShape:i},f=N.runKernel(co,c,d);return l?_(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var ac=w({conv2DBackpropInput_:zX});function GX(r,t,e,n,o,s){let a=S(r,"x","conv2dTranspose"),i=S(t,"filter","conv2dTranspose");return ac(e,a,i,n,o,"NHWC",s)}var jb=w({conv2dTranspose_:GX});function UX(r,t,e,n,o="NDHWC",s=[1,1,1]){let a=S(r,"x","conv3d"),i=S(t,"filter","conv3d"),u=a,l=!1;a.rank===4&&(l=!0,u=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),D(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),D(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),D(Er(e,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),D(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);let p={x:u,filter:i},m={strides:e,pad:n,dataFormat:o,dilations:s},c=N.runKernel(_u,p,m);return l?_(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Xb=w({conv3d_:UX});function WX(r,t,e,n,o){D(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let s=r,a=t,i=!1;t.rank===4&&(i=!0,a=_(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let u=s[4],l=a.shape[4];D(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),D(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),D(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),D(u===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[3]}.`),D(l===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${e.shape[4]}.`);let p={dy:a,filter:e},m={pad:o,strides:n,inputShape:s},c=N.runKernel(Am,p,m);return i?_(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Yb=w({conv3DBackpropInput_:WX});function KX(r,t,e,n,o){let s=S(r,"x","conv3dTranspose"),a=S(t,"filter","conv3dTranspose");return Yb(e,s,a,n,o)}var Zb=w({conv3dTranspose_:KX});function VX(r){let e={x:S(r,"x","cos","float32")};return N.runKernel(fo,e)}var ic=w({cos_:VX});function HX(r){let e={x:S(r,"x","cosh","float32")};return N.runKernel(ho,e)}var Qb=w({cosh_:HX});function qX(r,t=0,e=!1,n=!1){let s={x:S(r,"x","cumprod")},a={axis:t,exclusive:e,reverse:n};return N.runKernel(ma,s,a)}var gh=w({cumprod_:qX});function jX(r,t=0,e=!1,n=!1){let s={x:S(r,"x","cumsum")},a={axis:t,exclusive:e,reverse:n};return N.runKernel(go,s,a)}var Jb=w({cumsum_:jX});function XX(r,t,e,n=!1){let o=S(r,"x","denseBincount"),s=S(t,"weights","denseBincount");D(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),D(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),D(e>=0,()=>`size must be non-negative, but got ${e}.`),D(s.size===o.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${s.shape}.`);let a={x:o,weights:s},i={size:e,binaryOutput:n};return N.runKernel(wm,a,i)}var W2=w({denseBincount_:XX});function YX(r,t,e="NHWC"){let n=S(r,"x","depthToSpace","float32"),o=e==="NHWC"?n.shape[1]:n.shape[2],s=e==="NHWC"?n.shape[2]:n.shape[3],a=e==="NHWC"?n.shape[3]:n.shape[1];D(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),D(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${t}  for depthToSpace with input shape
    ${n.shape}`),D(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${n.shape}`),D(a%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${a} for depthToSpace with input shape ${n.shape}`);let i={x:n},u={blockSize:t,dataFormat:e};return N.runKernel(da,i,u)}var K2=w({depthToSpace_:YX});function ZX(r,t,e,n,o="NHWC",s=[1,1],a){let i=S(r,"x","depthwiseConv2d","float32"),u=S(t,"filter","depthwiseConv2d","float32"),l=i,p=!1;i.rank===3&&(p=!0,l=_(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),D(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);let m=o==="NHWC"?l.shape[3]:l.shape[1];D(m===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${m}) must match the inChannels dimension in filter ${u.shape[2]}.`),Ft("depthwiseConv2d",n,a);let c={x:l,filter:u},d={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},f=N.runKernel(bo,c,d);return p?_(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var ip=w({depthwiseConv2d_:ZX});function QX(r){let e={x:S(r,"x","diag")};return N.runKernel(Rm,e)}var V2=w({diag_:QX});function JX(r,t,e,n,o=[1,1],s="NHWC"){let a=S(r,"x","dilation2d"),i=S(t,"filter","dilation2d");D(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),D(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),D(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let u=a,l=!1;a.rank===3&&(u=_(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=!0);let p={x:u,filter:i},m={strides:e,pad:n,dilations:o},c=N.runKernel($u,p,m);return l?_(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var H2=w({dilation2d_:JX});function e8(r,t){let e=S(r,"a","equal","string_or_numeric"),n=S(t,"b","equal","string_or_numeric");[e,n]=Ye(e,n),Be(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(fa,o)}var Qr=w({equal_:e8});function t8(r,t,e){let n=S(t,"a","where"),o=S(e,"b","where"),s=S(r,"condition","where","bool"),a=Be(Be(s.shape,n.shape),o.shape),i=ap(s,a),u=ap(n,a),l=ap(o,a),p={condition:i,t:u,e:l};return N.runKernel(Is,p)}var Ut=w({where_:t8});function r8(r){let e={x:S(r,"x","zerosLike")};return N.runKernel(As,e)}var we=w({zerosLike_:r8});function n8(r,t){let e=S(r,"a","div"),n=S(t,"b","div");[e,n]=Ye(e,n);let o=ce(e,n),s=we(o),a=Qr(n,s);return Ut(a,s,o)}var q2=w({divNoNan_:n8});function o8(r,t){let e=S(r,"t1","dot"),n=S(t,"t2","dot");D((e.rank===1||e.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${n.rank}.`);let o=e.rank===1?e.size:e.shape[1],s=n.rank===1?n.size:n.shape[0];if(D(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),e.rank===1&&n.rank===1){let a=_(e,[1,-1]),i=_(n,[-1,1]),u=Ke(a,i);return _(u,[])}else if(e.rank===1&&n.rank===2){let a=_(e,[1,-1]),i=_(n,[n.shape[0],n.shape[1]]),u=Ke(a,i);return _(u,[u.size])}else if(e.rank===2&&n.rank===1){let a=_(n,[-1,1]),i=Ke(e,a);return _(i,[i.size])}else{let a=_(n,[n.shape[0],n.shape[1]]);return Ke(e,a)}}var j2=w({dot_:o8});function s8(r,...t){let e=t.map((o,s)=>S(o,`tensors${s}`,"einsum")),n={equation:r};return N.runKernel(Bu,e,n)}var X2=w({einsum_:s8});function a8(r){let e={x:S(r,"x","elu","float32")};return N.runKernel(To,e)}var up=w({elu_:a8});function i8(r){let t=S(r,"x","erf");D(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=re(t,"float32"));let e={x:t};return N.runKernel(Gi,e)}var Y2=w({erf_:i8});function Qv(r,t){for(let e=0;e<r.length;++e)if(r[r.length-e-1]!==t-1-e)return!1;return!0}function Z2(r,t,e){let n=r.length+t.length,o=[],s=0,a=0;for(let i=0;i<n;i++)e.indexOf(i)===-1?o.push(r[s++]):o.push(t[a++]);return o}function Jv(r,t){let e=[],n=r.length;for(let s=0;s<n;s++)t.indexOf(s)===-1&&e.push(r[s]);let o=t.map(s=>r[s]);return[e,o]}function Ls(r,t){let e=t.map(n=>1);return Z2(r,e,t)}function u8(r,t,e){D(Qv(t,e),()=>`${r} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function eA(r,t){if(Qv(r,t))return null;let e=[];for(let n=0;n<t;++n)r.indexOf(n)===-1&&e.push(n);return r.forEach(n=>e.push(n)),e}function bh(r){return r.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function p8(r,t){let e=[];for(let n=t-r;n<t;++n)e.push(n);return e}function l8(r,t=null,e=!1){let o={x:S(r,"x","max")},s={reductionIndices:t,keepDims:e};return N.runKernel(wo,o,s)}var hn=w({max_:l8});function m8(r,t=null,e=!1){let o={x:S(r,"x","min")},s={axis:t,keepDims:e};return N.runKernel(Fo,o,s)}var yh=w({min_:m8});function c8(r,t){let e=S(r,"base","pow"),n=S(t,"exp","pow");[e,n]=Ye(e,n);let o={a:e,b:n};return N.runKernel(_o,o)}var qn=w({pow_:c8});function de(r,t){if((Cr(r)&&t!=="string"||Array.isArray(r))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Cr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return dn(r,[],[],t)}function d8(r){let e={x:S(r,"x","sqrt","float32")};return N.runKernel(Ho,e)}var _t=w({sqrt_:d8});function f8(r){let t=S(r,"x","square"),e={};return N.runKernel("Square",{x:t},e)}var qe=w({square_:f8});function h8(r,t=null,e=!1){let n=S(r,"x","sum");n.dtype==="bool"&&(n=re(n,"int32"));let o={x:n},s={axis:t,keepDims:e};return N.runKernel(qo,o,s)}var he=w({sum_:h8});function g8(r,t="euclidean",e=null,n=!1){r=S(r,"x","norm");let o=Q2(r,t,e),s=o.shape;if(n){let a=gr(e,r.shape);s=Ls(o.shape,a)}return _(o,s)}function Q2(r,t,e=null){if(r.rank===0)return Gt(r);if(r.rank!==1&&e===null)return Q2(_(r,[-1]),t,e);if(r.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return he(Gt(r),e);if(t===1/0)return hn(Gt(r),e);if(t===-1/0)return yh(Gt(r),e);if(t==="euclidean"||t===2)return _t(he(qn(Gt(r),de(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return hn(he(Gt(r),e[0]),e[1]-1);if(t===1/0)return hn(he(Gt(r),e[1]),e[0]);if(t===-1/0)return yh(he(Gt(r),e[1]),e[0]);if(t==="fro"||t==="euclidean")return _t(he(qe(r),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}var el=w({norm_:g8});function b8(r,t=null,e=!1){return el(r,"euclidean",t,e)}var J2=w({euclideanNorm_:b8});function y8(r){let e={x:S(r,"x","exp")};return N.runKernel(xo,e)}var br=w({exp_:y8});function T8(r,t=0){let e=S(r,"x","expandDims","string_or_numeric");D(t<=e.rank,()=>"Axis must be <= rank of the tensor");let n={input:e},o={dim:t};return N.runKernel(hs,n,o)}var Lr=w({expandDims_:T8});function x8(r){let e={x:S(r,"x","expm1")};return N.runKernel(ha,e)}var eR=w({expm1_:x8});function I8(r,t){let e=S(r,"x","tile","string_or_numeric");D(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);let n={x:e},o={reps:t};return N.runKernel(Dn,n,o)}var Jr=w({tile_:I8});function C8(r,t,e,n="float32"){t==null&&(t=r);let o=Ie([r,t],n),s=r<=t?r:t;for(let i=0;i<s;++i)o.set(1,i,i);let a=_(o.toTensor(),[r,t]);if(e==null)return a;if(e.length===1)return Jr(Lr(a,0),[e[0],1,1]);if(e.length===2)return Jr(Lr(Lr(a,0),0),[e[0],e[1],1,1]);if(e.length===3)return Jr(Lr(Lr(Lr(a,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}var tl=w({eye_:C8});function k8(r){let e={x:S(r,"x","floor","float32")};return N.runKernel(Io,e)}var pp=w({floor_:k8});function S8(r,t,e=0,n=0){let o=S(r,"x","gather"),s=S(t,"indices","gather","int32"),a={x:o,indices:s},i={axis:e,batchDims:n};return N.runKernel(gs,a,i)}var lp=w({gather_:S8});function v8(r,t){let e=S(r,"a","greater","string_or_numeric"),n=S(t,"b","greater","string_or_numeric");[e,n]=Ye(e,n),Be(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(ya,o)}var ir=w({greater_:v8});function A8(r,t){let e=S(r,"a","greaterEqual","string_or_numeric"),n=S(t,"b","greaterEqual","string_or_numeric");[e,n]=Ye(e,n),Be(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(So,o)}var _s=w({greaterEqual_:A8});function w8(r){let e={x:S(r,"x","isFinite")};return N.runKernel(Ui,e)}var tR=w({isFinite_:w8});function N8(r){let e={x:S(r,"x","isInf")};return N.runKernel(Wi,e)}var rR=w({isInf_:N8});function D8(r){let e={x:S(r,"x","isNaN")};return N.runKernel(Ta,e)}var nR=w({isNaN_:D8});function R8(r,t=.2){let n={x:S(r,"x","leakyRelu")},o={alpha:t};return N.runKernel(vo,n,o)}var uc=w({leakyRelu_:R8});function F8(r,t){let e=S(r,"a","less","string_or_numeric"),n=S(t,"b","less","string_or_numeric");[e,n]=Ye(e,n),Be(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(xa,o)}var ey=w({less_:F8});function P8(r,t){let e=S(r,"a","lessEqual","string_or_numeric"),n=S(t,"b","lessEqual","string_or_numeric");[e,n]=Ye(e,n),Be(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(Ia,o)}var $s=w({lessEqual_:P8});function oR(r,t,e){if(e<=0)throw new Error("The number of values should be positive.");let n={start:r,stop:t,num:e};return N.runKernel(Em,{},n)}function M8(r,t=5,e=1,n=1,o=.5){let s=S(r,"x","localResponseNormalization");D(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),D(Pi(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let a=s,i=!1;s.rank===3&&(i=!0,a=_(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let u={x:a},l={depthRadius:t,bias:e,alpha:n,beta:o},p=N.runKernel(zu,u,l);return i?_(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var sR=w({localResponseNormalization_:M8});function E8(r){let e={x:S(r,"x","log","float32")};return N.runKernel(Ao,e)}var Ur=w({log_:E8});function L8(r){let e={x:S(r,"x","log1p")};return N.runKernel(Ki,e)}var pc=w({log1p_:L8});function _8(r){return D(pi(r),()=>"The f passed in grad(f) must be a function"),(t,e)=>{let n=S(t,"x","tf.grad","string_or_numeric"),o=e!=null?S(e,"dy","tf.grad"):null;return N.tidy(()=>{let{value:s,grads:a}=N.gradients(()=>r(n),[n],o);return o!=null&&Ot(s.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),ry(a),a[0]})}}function $8(r){return D(pi(r),()=>"The f passed in grads(f) must be a function"),(t,e)=>{D(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=ru(t,"args","tf.grads","string_or_numeric"),o=e!=null?S(e,"dy","tf.grads"):null;return N.tidy(()=>{let{value:s,grads:a}=N.gradients(()=>r(...n),n,o);return o!=null&&Ot(s.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),ry(a),a})}}function B8(r){return D(pi(r),()=>"The f passed in valueAndGrad(f) must be a function"),(t,e)=>{D(t instanceof We,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),D(e==null||e instanceof We,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:o}=N.gradients(()=>r(t),[t],e);return ry(n),{grad:n[0],value:o}}}function O8(r){return D(pi(r),()=>"The f passed in valueAndGrads(f) must be a function"),(t,e)=>{D(Array.isArray(t)&&t.every(o=>o instanceof We),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),D(e==null||e instanceof We,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=N.gradients(()=>r(...t),t,e);return e!=null&&Ot(n.value.shape,e.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),ry(n.grads),n}}function ty(r,t){D(pi(r),()=>"The f passed in variableGrads(f) must be a function"),D(t==null||Array.isArray(t)&&t.every(l=>l instanceof eu),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let e=t!=null;if(!e){t=[];for(let l in N.registeredVariables)t.push(N.registeredVariables[l])}let n=e?t.filter(l=>!l.trainable):null,o=t.length;t=t.filter(l=>l.trainable),D(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let s=!0,{value:a,grads:i}=N.gradients(r,t,null,s);D(i.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),D(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);let u={};return t.forEach((l,p)=>{i[p]!=null&&(u[l.name]=i[p])}),n?.forEach(l=>u[l.name]=null),{value:a,grads:u}}function gn(r){return N.customGrad(r)}function ry(r){if(r.filter(e=>e==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function z8(r){let e={x:S(r,"x","softplus")};return N.runKernel(Yi,e)}var su=w({softplus_:z8});function G8(r){let t=S(r,"x","logSigmoid");return gn(n=>({value:Je(su(Je(n))),gradFunc:a=>E(a,Ln(Je(n)))}))(t)}var aR=w({logSigmoid_:G8});function U8(r,t){let e=S(r,"a","sub"),n=S(t,"b","sub");[e,n]=Ye(e,n);let o={a:e,b:n};return N.runKernel(Yo,o)}var le=w({sub_:U8});function W8(r,t=-1){let e=S(r,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return gn((o,s)=>{let i=hn(o,t,!0),u=le(o,i),l=le(re(u,"float32"),Ur(he(br(u),t,!0)));return s([l]),{value:l,gradFunc:(m,c)=>{let[d]=c,f=!0,h=br(d);return le(m,E(he(m,t,f),h))}}})(e)}var ny=w({logSoftmax_:W8});function K8(r,t=null,e=!1){let n=S(r,"x","logSumExp"),o=gr(t,n.shape),s=hn(n,o,!0),a=le(n,s),i=br(a),u=he(i,o),l=Ur(u),p=X(_(s,l.shape),l);if(e){let m=Ls(p.shape,o);return _(p,m)}return p}var oy=w({logSumExp_:K8});function V8(r,t){let e=S(r,"a","logicalAnd","bool"),n=S(t,"b","logicalAnd","bool");Be(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(Ca,o)}var en=w({logicalAnd_:V8});function H8(r){let e={x:S(r,"x","logicalNot","bool")};return N.runKernel(ka,e)}var lc=w({logicalNot_:H8});function q8(r,t){let e=S(r,"a","logicalOr","bool"),n=S(t,"b","logicalOr","bool");Be(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(Vi,o)}var sy=w({logicalOr_:q8});function j8(r,t){let e=S(r,"a","logicalXor","bool"),n=S(t,"b","logicalXor","bool");return Be(e.shape,n.shape),en(sy(r,t),lc(en(r,t)))}var iR=w({logicalXor_:j8});var ay=2147483648;function X8(r,t,e="left"){let n=S(r,"sortedSequence","searchSorted"),o=S(t,"values","searchSorted"),s=n.shape[n.shape.length-1],a=o.shape[o.shape.length-1],i=_(n,[-1,s]),u=_(o,[-1,a]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(tt(u.shape)>=ay)throw new Error(`values tensor size must less than ${ay}`);if(i.shape[1]>=ay)throw new Error(`trailing dim_size must less than ${ay} for int32 output type, was ${i.shape[1]}`);let l={sortedSequence:i,values:u},p={side:e};return N.runKernel(Km,l,p)}var Th=w({searchSorted_:X8});function uR(r,t){return Th(r,t,"left")}function Y8(r,t,e,n,o){let s=S(r,"x","maxPool"),a=1,i=s,u=!1;s.rank===3&&(u=!0,i=_(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),D(Er(e,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),Ft("maxPool",n,o);let l={x:i},p={filterSize:t,strides:e,pad:n,dimRoundingMode:o},m=N.runKernel(Do,l,p);return u?_(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var mc=w({maxPool_:Y8});function Z8(r,t=[1,1,1],e,n,o,s="NDHWC"){let a=S(r,"x","maxPool3d"),i=a,u=!1;a.rank===4&&(u=!0,i=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),D(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Ft("maxPool3d",n,o);let l={x:i},p={filterSize:t,strides:e,pad:n,dimRoundingMode:o,dataFormat:s},m=N.runKernel(Gu,l,p);return u?_(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var iy=w({maxPool3d_:Z8});function Q8(r,t,e,n,o=!1){let a={x:S(r,"x","maxPoolWithArgmax")},i={filterSize:t,strides:e,pad:n,includeBatchInIndex:o},u=N.runKernel(Bm,a,i);return{result:u[0],indexes:u[1]}}var pR=w({maxPoolWithArgmax_:Q8});function J8(r,t){let e=S(r,"a","maximum"),n=S(t,"b","maximum");[e,n]=Ye(e,n),e.dtype==="bool"&&(e=re(e,"int32"),n=re(n,"int32")),Be(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(No,o)}var rs=w({maximum_:J8});function eY(r,t=null,e=!1){let o={x:S(r,"x","mean")},s={axis:t,keepDims:e};return N.runKernel(Ro,o,s)}var $t=w({mean_:eY});function It(r,t="float32"){if(t==="complex64"){let n=It(r,"float32"),o=It(r,"float32");return Fn(n,o)}let e=Tm(tt(r),t);return N.makeTensor(e,r,t)}function yr(r,t="float32"){if(t==="complex64"){let n=yr(r,"float32"),o=It(r,"float32");return Fn(n,o)}let e=jf(tt(r),t);return N.makeTensor(e,r,t)}function lR(r,t,{indexing:e="xy"}={}){if(e!=="xy"&&e!=="ij")throw new TypeError(`${e} is not a valid third argument to meshgrid`);if(r===void 0)return[];let n=S(r,"x","meshgrid",r instanceof We?r.dtype:"float32");if(t===void 0)return[n];let o=S(t,"y","meshgrid",t instanceof We?t.dtype:"float32"),s=tt(n.shape),a=tt(o.shape);return e==="xy"?(n=_(n,[1,-1]),o=_(o,[-1,1]),[Ke(yr([a,1],n.dtype),n),Ke(o,yr([1,s],o.dtype))]):(n=_(n,[-1,1]),o=_(o,[1,-1]),[Ke(n,yr([1,a],n.dtype)),Ke(yr([s,1],o.dtype),o)])}function tY(r,t){let e=S(r,"a","minimum"),n=S(t,"b","minimum");[e,n]=Ye(e,n),e.dtype==="bool"&&(e=re(e,"int32"),n=re(n,"int32")),Be(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(Po,o)}var mp=w({minimum_:tY});function rY(r,t,e){D(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);let n=S(r,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");D(t.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${t.length}.`);let o=e==="reflect"?1:0;for(let i=0;i<n.rank;i++)D(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),D(t[i][0]>=0&&t[i][0]<=n.shape[i]-o&&t[i][1]>=0&&t[i][1]<=n.shape[i]-o,()=>`Padding in dimension ${i} cannot be greater than or equal to ${n.shape[i]-o} or less than 0 for input of shape ${n.shape}`);let s={paddings:t,mode:e},a={x:n};return N.runKernel(Mo,a,s)}var mR=w({mirrorPad_:rY});function nY(r,t){let e=S(r,"a","mod"),n=S(t,"b","mod");[e,n]=Ye(e,n);let o={a:e,b:n};return N.runKernel(Hi,o)}var cR=w({mod_:nY});function oY(r,t=null,e=!1){r=S(r,"x","moments");let n=gr(t,r.shape),o=$t(r,n,e),s=o.shape;e||(s=Ls(o.shape,n));let a=qe(le(re(r,"float32"),_(o,s))),i=$t(a,n,e);return{mean:o,variance:i}}var rl=w({moments_:oY});function sY(r,t,e,n){let o=S(t,"data","multiRNNCell"),s=ru(e,"c","multiRNNCell"),a=ru(n,"h","multiRNNCell"),i=o,u=[];for(let m=0;m<r.length;m++){let c=r[m](i,s[m],a[m]);u.push(c[0]),u.push(c[1]),i=c[1]}let l=[],p=[];for(let m=0;m<u.length;m+=2)l.push(u[m]),p.push(u[m+1]);return[l,p]}var dR=w({multiRNNCell_:sY});function aY(r,t,e,n=!1){let o=S(r,"logits","multinomial"),s=o.size,a=o.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);e=e||Math.random();let u={logits:a===1?_(o,[1,-1]):o},l={numSamples:t,seed:e,normalized:n},p=N.runKernel(Om,u,l);return a===1?_(p,[p.size]):p}var fR=w({multinomial_:aY});function iY(r,t){let e=S(r,"a","notEqual","string_or_numeric"),n=S(t,"b","notEqual","string_or_numeric");[e,n]=Ye(e,n),Be(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(Sa,o)}var au=w({notEqual_:iY});function uY(r){let e={x:S(r,"x","onesLike")};return N.runKernel(ys,e)}var _r=w({onesLike_:uY});function pY(r,t){let e=S(r,"v1","outerProduct"),n=S(t,"v2","outerProduct");D(e.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${n.rank}.`);let o=_(e,[-1,1]),s=_(n,[1,-1]);return Ke(o,s)}var hR=w({outerProduct_:pY});function lY(r,t,e=0){let n=S(r,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let o={paddings:t,constantValue:e},s={x:n};return N.runKernel(Lo,s,o)}var jn=w({pad_:lY});function mY(r,t,e=0){return D(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),jn(r,[t],e)}var gR=w({pad1d_:mY});function cY(r,t,e=0){return D(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),jn(r,t,e)}var bR=w({pad2d_:cY});function dY(r,t,e=0){return D(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),jn(r,t,e)}var yR=w({pad3d_:dY});function fY(r,t,e=0){return D(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),jn(r,t,e)}var TR=w({pad4d_:fY});function hY(r,t,e){let n=S(r,"x","spaceToBatchND");D(n.rank>=1+t.length,()=>`input rank ${n.rank} should be > than [blockShape] ${t.length}`),D(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),D(n.shape.reduce((a,i,u)=>u>0&&u<=t.length?a&&(i+e[u-1][0]+e[u-1][1])%t[u-1]===0:a,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);let o={x:n},s={blockShape:t,paddings:e};return N.runKernel(ks,o,s)}var cc=w({spaceToBatchND_:hY});function gY(r,t,e,n,o,s,a){o==null&&(o=[1,1]),s==null&&(s=1),n===0&&(n="valid");let i=S(r,"x","maxPool"),u=i,l=!1;i.rank===3&&(l=!0,u=_(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(Er(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);let p=Yv(u.shape,t,s,o,n),m=[p.dilationHeight,p.dilationWidth],c;n==="same"?c=yY([p.filterHeight,p.filterWidth],m):c=[[0,0],[0,0]];let d=m[0]===1&&m[1]===1,[f,h]=bY([p.inHeight,p.inWidth],m,c),g=d?n:"valid",b=d?u:cc(u,m,f),x=(e==="avg"?()=>oc(b,t,s,g,a):()=>mc(b,t,s,g,a))(),I=d?x:sc(x,m,h);return l?_(I,[I.shape[1],I.shape[2],I.shape[3]]):I}function bY(r,t,e){let n=e.map(p=>p[0]),o=e.map(p=>p[1]),s=r.concat(n,o),a=t.map((p,m)=>(p-s[m]%p)%p),i=o.map((p,m)=>p+a[m]),u=t.map((p,m)=>[n[m],i[m]]),l=t.map((p,m)=>[0,a[m]]);return[u,l]}function yY(r,t){let n=r.map((a,i)=>a+(a-1)*(t[i]-1)).map(a=>a-1),o=n.map(a=>Math.floor(a/2)),s=n.map((a,i)=>a-o[i]);return n.map((a,i)=>[o[i],s[i]])}var xR=w({pool_:gY});function TY(r,t){let e=S(r,"x","prelu"),n=S(t,"alpha","prelu"),o={x:e,alpha:n};return N.runKernel($o,o)}var dc=w({prelu_:TY});function xY(r,t=null,e=!1){let n=S(r,"x","prod");n.dtype==="bool"&&(n=re(n,"int32"));let o={x:n},s={axis:t,keepDims:e};return N.runKernel(Bo,o,s)}var IR=w({prod_:xY});function IY(r,t,e,n){let o=r.map((p,m)=>S(p,`tensors${m}`,"raggedGather","int32")),s=S(t,"paramsDenseValues","raggedGather"),a=S(e,"indices","raggedGather","int32"),i={paramsNestedSplits:o,paramsDenseValues:s,indices:a},u={outputRaggedRank:n},l=N.runKernel(zm,i,u);return{outputNestedSplits:l.slice(0,l.length-1),outputDenseValues:l[l.length-1]}}var CR=w({raggedGather_:IY});function CY(r,t,e,n,o){let s=S(r,"shape","raggedTensorToTensor","int32"),a=S(t,"values","raggedTensorToTensor"),i=S(e,"defaultValue","raggedTensorToTensor",a.dtype),u=n.map((m,c)=>S(m,`tensors${c}`,"raggedTensorToTensor","int32")),l={shape:s,values:a,defaultValue:i,rowPartitionTensors:u},p={rowPartitionTypes:o};return N.runKernel(Gm,l,p)}var kR=w({raggedTensorToTensor_:CY});function kY(r,t,e){let n=tt(r),o=null;if(e==null||e==="float32")o=new Float32Array(n);else if(e==="int32")o=new Int32Array(n);else if(e==="bool")o=new Uint8Array(n);else throw new Error(`Unknown data type ${e}`);for(let s=0;s<n;s++)o[s]=t();return N.makeTensor(o,r,e)}var SR=w({rand_:kY});var my=hm(xh());var ol=class{constructor(t,e,n,o,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=s||Math.random();this.random=my.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let o=this.nextVal;return this.nextVal=NaN,o}let t,e,n=!1;for(;!n;){let o,s,a;do o=2*this.random()-1,s=2*this.random()-1,a=o*o+s*s;while(a>=1||a===0);let i=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*o*i,e=this.mean+this.stdDev*s*i,(!this.truncated||this.isValidTruncated(t))&&(n=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}},py=class{constructor(t,e,n,o){this.alpha=t,this.beta=1/e,this.dtype=n;let s=o||Math.random();this.randu=my.alea(s.toString()),this.randn=new ol(0,1,n,!1,this.randu()),t<1?this.d=t+2/3:this.d=t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,o,s,a;for(;;){do o=this.randn.nextValue(),a=1+this.c*o;while(a<=0);if(a*=a*a,t=o*o,e=1-.331*t*t,n=.5*t+this.d*(1-a+Math.log(a)),s=this.randu(),s<e||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(t){return this.dtype==="float32"?t:Math.round(t)}},ly=class{constructor(t=0,e=1,n,o){this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32";if(this.min=t,this.range=e-t,this.dtype=n,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=my.alea(o)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function RY(r,t,e=1,n="float32",o){if(e==null&&(e=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new py(t,e,n,o),a=Ie(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var GR=w({randomGamma_:RY});function FY(r,t=0,e=1,n,o){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new ol(t,e,n,!1,o),a=Ie(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var sl=w({randomNormal_:FY});function PY(r,t,e){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return sl(r,0,1,t,e)}var UR=w({randomStandardNormal_:PY});function MY(r,t=0,e=1,n="float32",o){let s=Ie(r,n),a=new ly(t,e,null,o);for(let i=0;i<s.values.length;i++)s.values[i]=a.nextValue();return s.toTensor()}var Ii=w({randomUniform_:MY});function cp(r,t,e=1,n="float32"){if(e===0)throw new Error("Cannot have a step of zero");let o={start:r,stop:t,step:e,dtype:n};return N.runKernel(di,{},o)}function EY(r){let e={x:S(r,"x","reciprocal")};return N.runKernel(Na,e)}var WR=w({reciprocal_:EY});function LY(r){let e={x:S(r,"x","relu")};return N.runKernel(Oo,e)}var tn=w({relu_:LY});function _Y(r){let e={x:S(r,"x","relu6")};return N.runKernel(Uo,e)}var cy=w({relu6_:_Y});function $Y(r,t){let n={x:S(r,"x","reverse")},o={dims:t};return N.runKernel(Da,n,o)}var Nr=w({reverse_:$Y});function BY(r){let t=S(r,"x","reverse");return D(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Nr(t,0)}var KR=w({reverse1d_:BY});function OY(r,t){let e=S(r,"x","reverse");return D(e.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),Nr(e,t)}var VR=w({reverse2d_:OY});function zY(r,t){let e=S(r,"x","reverse");return D(e.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),Nr(e,t)}var HR=w({reverse3d_:zY});function GY(r,t){let e=S(r,"x","reverse");return D(e.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),Nr(e,t)}var qR=w({reverse4d_:GY});function UY(r){let e={x:S(r,"x","round")};return N.runKernel(Ra,e)}var dy=w({round_:UY});function WY(r){let e={x:S(r,"x","rsqrt","float32")};return N.runKernel(Wo,e)}var fy=w({rsqrt_:WY});function KY(r){let e={x:S(r,"x","selu")};return N.runKernel(ji,e)}var hy=w({selu_:KY});function VY(r,t,e,n,o,s=[1,1],a="NHWC"){let i=S(r,"x","separableConv2d"),u=S(t,"depthwiseFilter","separableConv2d"),l=S(e,"pointwiseFilter","separableConv2d"),p=i,m=!1;if(i.rank===3&&(m=!0,p=_(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");D(p.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`),D(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),D(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),D(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),D(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);let c=u.shape[2],d=u.shape[3];D(l.shape[2]===c*d,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${c*d}, but got ${l.shape[2]}.`);let f=ip(p,u,n,o,a,s),g=ts(f,l,1,"valid",a);return m?_(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var gy=w({separableConv2d_:VY});async function HY(r,t){let e=S(r,"x","setdiff1d"),n=S(t,"y","setdiff1d");D(e.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${n.dtype}).`),D(e.rank===1,()=>`x should be 1D tensor, but got x (${e.shape}).`),D(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let o=await e.data(),s=await n.data(),a=new Set(s),i=0;for(let p=0;p<o.length;p++)a.has(o[p])||i++;let u=new ht([i],e.dtype),l=new ht([i],"int32");for(let p=0,m=0;p<o.length;p++)a.has(o[p])||(u.values[m]=o[p],l.values[m]=p,m++);return[u.toTensor(),l.toTensor()]}var jR=HY;function qY(r){let e={x:S(r,"x","sign")};return N.runKernel(Xi,e)}var XR=w({sign_:qY});function jY(r){let e={x:S(r,"x","sin","float32")};return N.runKernel(Ko,e)}var by=w({sin_:jY});function XY(r){let e={x:S(r,"x","sinh")};return N.runKernel(Pa,e)}var yy=w({sinh_:XY});function YY(r,t,e){let n=S(r,"x","slice1d");return D(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),Oe(n,[t],[e])}var fc=w({slice1d_:YY});function ZY(r,t,e){let n=S(r,"x","slice2d");return D(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),Oe(n,t,e)}var Ih=w({slice2d_:ZY});function QY(r,t,e){let n=S(r,"x","slice3d");return D(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),Oe(n,t,e)}var hc=w({slice3d_:QY});function JY(r,t,e){let n=S(r,"x","slice4d");return D(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),Oe(n,t,e)}var al=w({slice4d_:JY});function eZ(r,t=-1){let e=S(r,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);let n={logits:e},o={dim:t};return N.runKernel(jo,n,o)}var gc=w({softmax_:eZ});function tZ(r){D(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let t={input:r};return N.runKernel(Pm,t)}var bc=w({fft_:tZ});function rZ(r){D(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let t={input:r};return N.runKernel(Mm,t)}var il=w({ifft_:rZ});function nZ(r){let t=r.shape[r.shape.length-1],e=r.size/t,n;if(t<=2){let o=_(r,[e,t]);n=il(o)}else{let o=[e,2*(t-1)],s=_(ou(r),[e,t]),a=_(rp(r),[e,t]),i=Nr(Oe(s,[0,1],[e,t-2]),1),u=E(Nr(Oe(a,[0,1],[e,t-2]),1),de(-1)),l=mt([s,i],1),p=mt([a,u],1),m=_(Fn(l,p),[o[0],o[1]]);n=il(m)}if(n=ou(n),r.rank===3&&r.shape[0]!==0){let o=n,s=r.shape[0];n=_(n,[s,n.shape[0]/s,n.shape[1]]),o.dispose()}return n}var Ty=w({irfft_:nZ});function oZ(r,t,e=0){let o={x:S(r,"x","split")},s={numOrSizeSplits:t,axis:e};return N.runKernel(Ss,o,s)}var Dr=w({split_:oZ});function sZ(r,t){D(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let e=r.shape[r.shape.length-1],n=r.size/e,o;if(t!=null&&t<e){let f=r.shape.map(g=>0),h=r.shape.map(g=>g);h[r.shape.length-1]=t,o=Oe(r,f,h),e=t}else if(t!=null&&t>e){let f=r.shape.map(h=>h);f[r.shape.length-1]=t-e,o=mt([r,It(f)],r.shape.length-1),e=t}else o=r;let s=we(o),a=_(Fn(o,s),[n,e]),i=bc(a),u=Math.floor(e/2)+1,l=ou(i),p=rp(i),m=Dr(l,[u,e-u],l.shape.length-1),c=Dr(p,[u,e-u],p.shape.length-1),d=o.shape.slice();return d[o.shape.length-1]=u,_(Fn(m[0],c[0]),d)}var yc=w({rfft_:sZ});function aZ(r,t){let e=S(r,"a","squaredDifference"),n=S(t,"b","squaredDifference");[e,n]=Ye(e,n),Be(e.shape,n.shape);let o={a:e,b:n},s={};return N.runKernel(Xo,o,s)}var xy=w({squaredDifference_:aZ});function iZ(r,t){let e=S(r,"x","squeeze","string_or_numeric");return _(e,sv(e.shape,t).newShape)}var Bs=w({squeeze_:iZ});function uZ(r,t=0){let e=ru(r,"tensors","stack","string_or_numeric");D(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&D(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");let n=e,o={axis:t};return N.runKernel(Ts,n,o)}var Tr=w({stack_:uZ});function pZ(r,t=0){let n={x:S(r,"x","step")},o={alpha:t};return N.runKernel(ws,n,o)}var Ci=w({step_:pZ});function lZ(r,t,e,n,o=0,s=0,a=0,i=0,u=0){let p={x:S(r,"x","stridedSlice","string_or_numeric")},m={begin:t,end:e,strides:n,beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};return N.runKernel(Ma,p,m)}var YR=w({stridedSlice_:lZ});function mZ(r){let e={x:S(r,"x","tan","float32")};return N.runKernel(Ea,e)}var ZR=w({tan_:mZ});function qt(r,t){so(r);let e=zr(r,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return dn(r,null,e,t)}function Ga(r,t,e){if(so(r),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=zr(r,e);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return dn(r,t,n,e)}function QR(r,t,e){if(so(r),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=zr(r,e);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return dn(r,t,n,e)}function JR(r,t,e){if(so(r),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=zr(r,e);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return dn(r,t,n,e)}function eF(r,t,e){if(so(r),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=zr(r,e);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||n,dn(r,t,n,e)}function cZ(r,t=1,e=!0){let n=S(r,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let o=n.shape[n.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);let s={x:n},a={k:t,sorted:e},[i,u]=N.runKernel(La,s,a);return{values:i,indices:u}}var tF=w({topk_:cZ});function dZ(r,t=0,e=1,n,o){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new ol(t,e,n,!0,o),a=Ie(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var Tc=w({truncatedNormal_:dZ});function fZ(r,t=0){let e=S(r,"x","unique","string_or_numeric");D(e.rank>0,()=>"The input tensor must be at least 1D");let n={x:e},o={axis:t},[s,a]=N.runKernel(Vm,n,o);return{values:s,indices:a}}var rF=w({unique_:fZ});function hZ(r,t,e){let n=S(r,"x","unsortedSegmentSum"),o=S(t,"segmentIds","unsortedSegmentSum","int32");D(Pi(e),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:o},a={numSegments:e};return N.runKernel(Xu,s,a)}var Iy=w({unsortedSegmentSum_:hZ});function gZ(r,t=0){let e=S(r,"x","unstack","string_or_numeric");D(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);let n={value:e},o={axis:t};return N.runKernel(vs,n,o)}var Wr=w({unstack_:gZ});function nF(r,t){return Th(r,t,"right")}function Cy(r,t=!0,e,n){return N.makeVariable(r,t,e,n)}function ky(r,t){let e=[];for(let s=0;s<t.length;s++)t[s]&&e.push(s);let n=Ie(r,"int32"),o=Ie([e.length,r.length],"int32");for(let s=0;s<e.length;s++){let a=n.indexToLoc(e[s]),i=s*r.length;o.values.set(a,i)}return o.toTensor()}async function bZ(r){let t=S(r,"condition","whereAsync","bool"),e=await t.data(),n=ky(t.shape,e);return r!==t&&t.dispose(),n}var Sy=bZ;async function yZ(r,t,e){let n=S(r,"tensor","boolMask"),o=S(t,"mask","boolMask","bool"),s=e??0,a=o.rank,i=n.shape;D(a>0,()=>"mask cannot be scalar"),Ot(i.slice(s,s+a),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let h=s;h<s+a;h++)u*=i[h];let l=i.slice(0,s).concat([u],i.slice(s+a)),p=_(n,l),m=_(o,[-1]),c=await Sy(m),d=Bs(c,[1]),f=lp(p,d,s);return r!==n&&n.dispose(),t!==o&&o.dispose(),d.dispose(),p.dispose(),m.dispose(),c.dispose(),f}var TZ=yZ;function xZ(r,t,e,n,o=!0){let s=S(r,"v","movingAverage"),a=S(t,"x","movingAverage"),i=S(e,"decay","movingAverage");kv(s,a),D(Un(s.shape,a.shape),()=>"Shape mismatch in v and x");let u=de(1),l=le(u,i),p=E(le(a,s),l);if(o){D(n!=null,()=>"When using zeroDebias: true, step is required.");let m=S(n,"step","movingAverage");p=ce(p,le(u,qn(i,m)))}return X(s,p)}var IZ=w({movingAverage_:xZ});function CZ(r,t,e){let n=S(r,"indices","scatterND","int32"),o=S(t,"updates","scatterND");Mb(o,n,e);let s={indices:n,updates:o},a={shape:e};return N.runKernel(Fa,s,a)}var kZ=w({scatterND_:CZ});function oF(r,t,e,n){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let o=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(e.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${e.length}, should be: ${s}.`);let a=t.size;if(!(t.rank===0||t.rank===1&&a===o))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${o}]`);if(t.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function vZ(r,t,e,n=0){let o=S(r,"sparseIndices","sparseToDense","int32"),s=S(t,"sparseValues","sparseToDense","string_or_numeric"),a=S(n,"defaultValue","sparseToDense",s.dtype);oF(o,s,e,a);let i={sparseIndices:o,sparseValues:s,defaultValue:a},u={outputShape:e};return N.runKernel(Hu,i,u)}var AZ=w({sparseToDense_:vZ});function wZ(r,t){let e=S(t,"indices","gatherND","int32"),o={params:S(r,"x","gatherND","string_or_numeric"),indices:e};return N.runKernel(ba,o)}var NZ=w({gatherND_:wZ});function sF(r,t){if(t==null)return r.shape.slice();if(Un(r.shape,t))return t;if(r.shape.length===t.length){let e=[];for(let n=0;n<r.shape.length;n++)t[n]==null&&r.shape[n]!=null?e.push(r.shape[n]):e.push(t[n]);return e}return t}function DZ(r,t,e,n){let o=S(r,"x","dropout");if(D(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),D(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return r instanceof We?o.clone():o;let s=sF(o,e),a=1-t,i=ce(pp(X(Ii(s,0,1,"float32",n),a)),a);return E(o,i)}var uA=w({dropout_:DZ});function pA(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function Ch(r,t,e){let n=1-r%2,o=new Float32Array(r);for(let s=0;s<r;++s){let a=2*Math.PI*s/(r+n-1);o[s]=t-e*Math.cos(a)}return qt(o,"float32")}async function RZ(r,t,e=1){let n=S(r,"predictions","inTopK"),o=S(t,"targets","inTopK");D(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),D(n.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${o.rank}`),Ot(n.shape.slice(0,n.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];D(e>0&&e<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${e}`);let a=await n.data(),i=await o.data(),[u,l]=[a.length/s,s],p=av("bool",u);for(let m=0;m<u;m++){let c=m*l,d=a.subarray(c,c+l),f=[];for(let h=0;h<d.length;h++)f.push({value:d[h],index:h});f.sort((h,g)=>g.value-h.value),p[m]=0;for(let h=0;h<e;h++)if(f[h].index===i[m]){p[m]=1;break}}return r!==n&&n.dispose(),t!==o&&o.dispose(),Ar(p,o.shape,"bool")}var FZ=RZ;var dp={};He(dp,{conv2d:()=>aF,depthwiseConv2d:()=>iF,matMul:()=>uF});function PZ(r,t,e,n,o,s="NHWC",a){let i=r;r.rank===3&&(i=_(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=t;u.rank===3&&(u=_(t,[1,t.shape[0],t.shape[1],t.shape[2]])),D(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),D(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),D(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);let l=s==="NHWC"?i.shape[3]:i.shape[1],p=s==="NHWC"?u.shape[3]:u.shape[1];D(l===e[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${e[2]}.`),D(p===e[3],()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${e[3]}).`),Ft("conv2dDerFilter",o,a);let m={x:i,dy:u},c={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,filterShape:e};return N.runKernel(Sm,m,c)}var xc=w({conv2DBackpropFilter_:PZ});function ul(r,t,e){if(e==null||e==="linear")return r;if(e==="relu")return E(r,Ci(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function pl(r,t){let e=t,n=St(r.shape,t.shape);return n.length>0&&(e=he(e,n)),_(e,r.shape)}function ll(r,t,e,n){if(t==="linear")return r;if(t==="relu")return tn(r);if(t==="elu")return up(r);if(t==="relu6")return cy(r);if(t==="prelu")return dc(r,e);if(t==="leakyrelu")return uc(r,n);if(t==="sigmoid")return Ln(r);throw new Error(`Unknown fused activation ${t}.`)}var ml=(r,t)=>!(r>0)||t==="linear";function MZ({x:r,filter:t,strides:e,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:p}){if(u=u||"linear",ml(N.state.gradientDepth,u)===!1){D(o==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${o} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let A=ts(r,t,e,n,o,s,a);return i!=null&&(A=X(A,i)),ll(A,u,l,p)}let m=S(r,"x","conv2d","float32"),c=S(t,"filter","conv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=_(m,[1,m.shape[0],m.shape[1],m.shape[2]])),D(d.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`),D(c.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`),Ft("fused conv2d",n,a);let h=o==="NHWC"?d.shape[3]:d.shape[1];D(c.shape[2]===h,()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${c.shape[2]}.`),D(Er(e,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`);let g=Jp(d.shape,c.shape,e,s,n,a),b;i!=null&&(b=S(i,"bias","fused conv2d"),[b]=Ye(b,m),o==="NHWC"?Be(g.outShape,b.shape):(D(b.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`),D(b.shape.length===0||b.shape[0]===g.outChannels||b.shape[0]===1,()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let T;if(l!=null){let A=l.shape;if(D(A.length<=1||A.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${A.length}.`),A.length===1)D(A[0]===1||A[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${A}) is not compatible with the number of output channels (${g.outChannels}).`);else if(A.length===3)try{Be(A,g.outShape)}catch{let F=`Error in fused conv2d: PReLU activation weights (${A}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(F)}T=S(l,"prelu weights","fused conv2d")}let x=(A,R)=>{D(o==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${o} but only NHWC is currently supported.`);let[F,P,L,O]=R,G=ul(A,L,u);D(Jo(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let W=ac(P.shape,G,F,e,n),H=xc(P,G,F.shape,e,n),V=[W,H];if(O!=null){let q=pl(O,G);V.push(q)}return V},I={x:d,filter:c,bias:b,preluActivationWeights:T},k={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:u,leakyreluAlpha:p};return i==null?gn((R,F,P)=>{let L=N.runKernel(Ds,I,k);return P([F,R,L]),f&&(L=_(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:x}})(d,c):gn((R,F,P,L)=>{let O=N.runKernel(Ds,I,k);return L([F,R,O,P]),f&&(O=_(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:x}})(d,c,b)}var aF=w({fusedConv2d_:MZ});function EZ(r,t,e,n,o,s=[1,1],a){let i=r;r.rank===3&&(i=_(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=t;u.rank===3&&(u=_(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l={x:i,dy:u},p={strides:n,pad:o,dimRoundingMode:a,dilations:s,filterShape:e};return N.runKernel(Nm,l,p)}var vy=w({depthwiseConv2dNativeBackpropFilter_:EZ});function LZ(r,t,e,n,o,s=[1,1],a){let i=t,u=!1;t.rank===3&&(u=!0,i=_(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l={dy:i,filter:e},p={strides:n,pad:o,dimRoundingMode:a,dilations:s,inputShape:r},m=N.runKernel(Dm,l,p);return u?_(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Ay=w({depthwiseConv2dNativeBackpropInput_:LZ});function _Z({x:r,filter:t,strides:e,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:p}){if(ml(N.state.gradientDepth,u)===!1){let k=ip(r,t,e,n,o,s,a);return i!=null&&(k=X(k,i)),ll(k,u,l,p)}let m=S(r,"x","depthwiseConv2d","float32"),c=S(t,"filter","depthwiseConv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=_(m,[1,m.shape[0],m.shape[1],m.shape[2]])),D(d.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),D(c.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`),D(d.shape[3]===c.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),s==null&&(s=[1,1]),D(Er(e,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),Ft("fused depthwiseConv2d",n,a);let h=Jp(d.shape,c.shape,e,s,n,a,!0),g;i!=null&&(g=S(i,"bias","fused conv2d"),[g]=Ye(g,m),Be(h.outShape,g.shape));let b;l!=null&&(b=S(l,"prelu weights","fused depthwiseConv2d"));let T=(k,A)=>{D(Jo(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[R,F,P,L]=A,O=ul(k,P,u),G=Ay(F.shape,O,R,e,n,s,a),W=vy(F,O,R.shape,e,n,s,a);if(L!=null){let H=pl(g,O);return[G,W,H]}return[G,W]},x={x:d,filter:c,bias:g,preluActivationWeights:b},I={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:u,leakyreluAlpha:p};return i==null?gn((A,R,F)=>{let P=N.runKernel(Rs,x,I);return F([R,A,P]),f&&(P=_(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:T}})(d,c):gn((A,R,F,P)=>{let L=N.runKernel(Rs,x,I);return P([R,A,L,F]),f&&(L=_(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:T}})(d,c,g)}var iF=w({fusedDepthwiseConv2d_:_Z});function $Z({a:r,b:t,transposeA:e=!1,transposeB:n=!1,bias:o,activation:s="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(ml(N.state.gradientDepth,s)===!1){let O=Ke(r,t,e,n);return o!=null&&(O=X(O,o)),ll(O,s,a,i)}let u=S(r,"a","fused matMul"),l=S(t,"b","fused matMul");[u,l]=Ye(u,l);let p=e?u.shape[u.rank-2]:u.shape[u.rank-1],m=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=e?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),h=l.shape.slice(0,-2),g=tt(f),b=tt(h);D(p===m,()=>`Error in fused matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${e} and transposeB=${n} must match.`);let x=Be(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([c,d]),I=e?_(u,[g,p,c]):_(u,[g,c,p]),k=n?_(l,[b,d,m]):_(l,[b,m,d]),A;o!=null&&(A=S(o,"bias","fused matMul"),[A]=Ye(A,u),Be(x,A.shape));let R;a!=null&&(R=S(a,"prelu weights","fused matMul"));let F=(O,G)=>{let[W,H,V,q]=G,Z=ul(_(O,V.shape),V,s),j,Y;if(!e&&!n?(j=Ke(Z,H,!1,!0),Y=Ke(W,Z,!0,!1)):!e&&n?(j=Ke(Z,H,!1,!1),Y=Ke(Z,W,!0,!1)):e&&!n?(j=Ke(H,Z,!1,!0),Y=Ke(W,Z,!1,!1)):(j=Ke(H,Z,!0,!0),Y=Ke(Z,W,!0,!0)),o!=null){let se=pl(q,Z);return[j,Y,se]}else return[j,Y]},P={a:I,b:k,bias:A,preluActivationWeights:R},L={transposeA:e,transposeB:n,activation:s,leakyreluAlpha:i};return o==null?gn((G,W,H)=>{let V=N.runKernel(Ns,P,L);return H([G,W,V]),{value:_(V,x),gradFunc:F}})(I,k):gn((G,W,H,V)=>{let q=N.runKernel(Ns,P,L);return V([G,W,q,H]),{value:_(q,x),gradFunc:F}})(I,k,A)}var uF=w({fusedMatMul_:$Z});function BZ(r){return Ch(r,.54,.46)}var pF=w({hammingWindow_:BZ});function OZ(r){return Ch(r,.5,.5)}var wy=w({hannWindow_:OZ});function zZ(r,t,e,n=!1,o=0){let s=0,a=[];for(;s+t<=r.size;)a.push(Oe(r,s,t)),s+=e;if(n)for(;s<r.size;){let i=s+t-r.size,u=mt([Oe(r,s,t-i),Es([i],o)]);a.push(u),s+=e}return a.length===0?Ga([],[0,t]):_(mt(a),[a.length,t])}var Ny=w({frame_:zZ});function GZ(r,t,e,n,o=wy){n==null&&(n=pA(t));let s=Ny(r,t,e),a=E(s,o(t));return yc(a,n)}var lF=w({stft_:GZ});function UZ(r,t,e,n,o="bilinear",s=0){let a=S(r,"image","cropAndResize"),i=S(t,"boxes","cropAndResize","float32"),u=S(e,"boxInd","cropAndResize","int32"),l=i.shape[0];D(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),D(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`),D(u.rank===1&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`),D(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),D(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),D(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);let p={image:a,boxes:i,boxInd:u},m={method:o,extrapolationValue:s,cropSize:n};return N.runKernel(ca,p,m)}var mF=w({cropAndResize_:UZ});function WZ(r){let t=S(r,"image","flipLeftRight","float32");D(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let e={image:t};return N.runKernel(ga,e,{})}var cF=w({flipLeftRight_:WZ});function KZ(r){let t=S(r,"image","grayscaleToRGB"),e=t.rank-1,n=t.shape[e];D(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),D(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let o=new Array(t.rank);return o.fill(1,0,e),o[e]=3,Jr(t,o)}var dF=w({grayscaleToRGB_:KZ});function VZ(r,t,e=0,n=.5){let o=S(r,"image","rotateWithOffset","float32");D(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);let s={image:o},a={radians:t,fillValue:e,center:n};return N.runKernel($a,s,a)}var fF=w({rotateWithOffset_:VZ});function Os(r,t,e,n,o,s){n==null&&(n=.5),o==null&&(o=Number.NEGATIVE_INFINITY),s==null&&(s=0);let a=r.shape[0];return e=Math.min(e,a),D(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),D(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),D(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),D(t.rank===1,()=>"scores must be a 1D tensor"),D(t.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`),D(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:e,iouThreshold:n,scoreThreshold:o,softNmsSigma:s}}function HZ(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY){let s=S(r,"boxes","nonMaxSuppression","float32"),a=S(t,"scores","nonMaxSuppression","float32"),i=Os(s,a,e,n,o);e=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let u={maxOutputSize:e,iouThreshold:n,scoreThreshold:o};return N.runKernel(va,{boxes:s,scores:a},u)}var hF=w({nonMaxSuppression_:HZ});function gF(r,t,e){let n=qZ(r,t,e),o=n<0?-(n+1):n;r.splice(o,0,t)}function qZ(r,t,e){return XZ(r,t,e||jZ)}function jZ(r,t){return r>t?1:r<t?-1:0}function XZ(r,t,e){let n=0,o=r.length,s=0,a=!1;for(;n<o;){s=n+(o-n>>>1);let i=e(t,r[s]);i>0?n=s+1:(o=s,a=!i)}return a?n:-n-1}function Dy(r,t,e,n,o){return lA(r,t,e,n,o,0)}function Ry(r,t,e,n,o,s){return lA(r,t,e,n,o,0,!1,s,!0)}function Fy(r,t,e,n,o,s){return lA(r,t,e,n,o,s,!0)}function lA(r,t,e,n,o,s,a=!1,i=!1,u=!1){let l=[];for(let g=0;g<t.length;g++)t[g]>o&&l.push({score:t[g],boxIndex:g,suppressBeginIndex:0});l.sort(bF);let p=s>0?-.5/s:0,m=[],c=[];for(;m.length<e&&l.length>0;){let g=l.pop(),{score:b,boxIndex:T,suppressBeginIndex:x}=g;if(b<o)break;let I=!1;for(let k=m.length-1;k>=x;--k){let A=YZ(r,T,m[k]);if(A>=n){I=!0;break}if(g.score=g.score*ZZ(n,p,A),g.score<=o)break}g.suppressBeginIndex=m.length,I||(g.score===b?(m.push(T),c.push(g.score)):g.score>o&&gF(l,g,bF))}let d=m.length,f=e-d;i&&f>0&&(m.push(...new Array(f).fill(0)),c.push(...new Array(f).fill(0)));let h={selectedIndices:m};return a&&(h.selectedScores=c),u&&(h.validOutputs=d),h}function YZ(r,t,e){let n=r.subarray(t*4,t*4+4),o=r.subarray(e*4,e*4+4),s=Math.min(n[0],n[2]),a=Math.min(n[1],n[3]),i=Math.max(n[0],n[2]),u=Math.max(n[1],n[3]),l=Math.min(o[0],o[2]),p=Math.min(o[1],o[3]),m=Math.max(o[0],o[2]),c=Math.max(o[1],o[3]),d=(i-s)*(u-a),f=(m-l)*(c-p);if(d<=0||f<=0)return 0;let h=Math.max(s,l),g=Math.max(a,p),b=Math.min(i,m),T=Math.min(u,c),x=Math.max(b-h,0)*Math.max(T-g,0);return x/(d+f-x)}function ZZ(r,t,e){let n=Math.exp(t*e*e);return e<=r?n:0}function bF(r,t){return r.score-t.score||r.score===t.score&&t.boxIndex-r.boxIndex}async function QZ(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY){let s=S(r,"boxes","nonMaxSuppressionAsync"),a=S(t,"scores","nonMaxSuppressionAsync"),i=Os(s,a,e,n,o);e=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let u=await Promise.all([s.data(),a.data()]),l=u[0],p=u[1],{selectedIndices:m}=Dy(l,p,e,n,o);return s!==r&&s.dispose(),a!==t&&a.dispose(),qt(m,"int32")}var yF=QZ;function JZ(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=S(r,"boxes","nonMaxSuppression"),i=S(t,"scores","nonMaxSuppression"),u=Os(a,i,e,n,o,s);e=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let l={boxes:a,scores:i},p={maxOutputSize:e,iouThreshold:n,scoreThreshold:o,softNmsSigma:s},m=N.runKernel(Aa,l,p);return{selectedIndices:m[0],selectedScores:m[1]}}var TF=w({nonMaxSuppressionWithScore_:JZ});async function eQ(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=S(r,"boxes","nonMaxSuppressionAsync"),i=S(t,"scores","nonMaxSuppressionAsync"),u=Os(a,i,e,n,o,s);e=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let l=await Promise.all([a.data(),i.data()]),p=l[0],m=l[1],{selectedIndices:c,selectedScores:d}=Fy(p,m,e,n,o,s);return a!==r&&a.dispose(),i!==t&&i.dispose(),{selectedIndices:qt(c,"int32"),selectedScores:qt(d)}}var xF=eQ;function tQ(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=S(r,"boxes","nonMaxSuppression"),i=S(t,"scores","nonMaxSuppression"),u=Os(a,i,e,n,o,null),l=u.maxOutputSize,p=u.iouThreshold,m=u.scoreThreshold,c={boxes:a,scores:i},d={maxOutputSize:l,iouThreshold:p,scoreThreshold:m,padToMaxOutputSize:s},f=N.runKernel(qi,c,d);return{selectedIndices:f[0],validOutputs:f[1]}}var IF=w({nonMaxSuppressionPadded_:tQ});async function rQ(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=S(r,"boxes","nonMaxSuppressionAsync"),i=S(t,"scores","nonMaxSuppressionAsync"),u=Os(a,i,e,n,o,null),l=u.maxOutputSize,p=u.iouThreshold,m=u.scoreThreshold,[c,d]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:h}=Ry(c,d,l,p,m,s);return a!==r&&a.dispose(),i!==t&&i.dispose(),{selectedIndices:qt(f,"int32"),validOutputs:de(h,"int32")}}var CF=rQ;function nQ(r,t,e=!1,n=!1){let o=S(r,"images","resizeBilinear");D(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),D(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),D(n===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=_(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=t,i={images:s},u={alignCorners:e,halfPixelCenters:n,size:t},l=N.runKernel(Go,i,u);return a?_(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var kF=w({resizeBilinear_:nQ});function oQ(r,t,e=!1,n=!1){let o=S(r,"images","resizeNearestNeighbor");D(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),D(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),D(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),D(n===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=_(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=t,i={images:s},u={alignCorners:e,halfPixelCenters:n,size:t},l=N.runKernel(zo,i,u);return a?_(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var SF=w({resizeNearestNeighbor_:oQ});function sQ(r,t="binary",e=!1,n=.5){let o=S(r,"image","threshold"),s=.2989,a=.587,i=.114,u=o.shape[0]*o.shape[1],l=E(qt([n]),255),p,m,c,d;if(D(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),D(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),D(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),D(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),o.shape[2]===3){[p,m,c]=Dr(o,[1,1,1],-1);let g=E(p,s),b=E(m,a),T=E(c,i);d=X(X(g,b),T)}else d=r;if(t==="otsu"){let g=Ub(re(dy(d),"int32"),Ar([]),256);l=aQ(g,u)}let f=e?$s(d,l):ir(d,l);return re(E(f,255),"int32")}function aQ(r,t){let e=qt([-1]),n=qt([0]),o=qt([0]),s,a,i,u,l,p;for(let m=0;m<r.size-1;m++){s=Oe(r,0,m+1),a=Oe(r,m+1),l=ce(he(s),t),p=ce(he(a),t);let c=he(E(s,cp(0,s.size)));i=ce(c,he(s));let d=Es(a.shape,s.size),f=X(cp(0,a.size),d),h=E(a,f);u=ce(he(h),he(a));let g=le(i,u),b=le(i,u),T=E(l,p);o=E(E(T,g),b);let x=ir(o,n);n=Ut(x,o,n),e=Ut(x,qt([m]),e)}return e}var vF=w({threshold_:sQ});function iQ(r,t,e="nearest",n="constant",o=0,s){let a=S(r,"image","transform","float32"),i=S(t,"transforms","transform","float32");D(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),D(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),D(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let u={image:a,transforms:i},l={interpolation:e,fillMode:n,fillValue:o,outputShape:s};return N.runKernel(_a,u,l)}var AF=w({transform_:iQ});function uQ(r,t,e){D(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),D(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`);let n=S(r,"a","bandPart");D(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let o=n.shape,[s,a]=n.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(e<=a))throw new Error(`bandPart(): numUpper (${e}) must not be greater than the number of columns (${a}).`);t<0&&(t=s),e<0&&(e=a);let i=_(cp(0,s,1,"int32"),[-1,1]),u=cp(0,a,1,"int32"),l=le(i,u),p=en($s(l,de(+t,"int32")),_s(l,de(-e,"int32"))),m=It([s,a],n.dtype);return _(Tr(Wr(_(n,[-1,s,a])).map(c=>Ut(p,c,m))),o)}var wF=w({bandPart_:uQ});function pQ(r){let t;if(Array.isArray(r)){t=!1,D(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let o=r[0].shape[0];for(let s=1;s<r.length;++s)D(r[s].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${o})`)}else t=!0,r=Dr(r,r.shape[0],0).map(o=>Bs(o,[0]));D(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let e=[],n=r;for(let o=0;o<r.length;++o)e.push(N.tidy(()=>{let s=n[o];if(o>0)for(let a=0;a<o;++a){let i=E(he(E(e[a],s)),e[a]);s=le(s,i)}return ce(s,el(s,"euclidean"))}));return t?Tr(e,0):e}var NF=w({gramSchmidt_:pQ});function lQ(r,t=!1){if(D(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return DF(r,t);{let e=r.shape.slice(0,r.shape.length-2).reduce((u,l)=>u*l),n=Wr(_(r,[e,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),o=[],s=[];n.forEach(u=>{let[l,p]=DF(u,t);o.push(l),s.push(p)});let a=_(Tr(o,0),r.shape),i=_(Tr(s,0),r.shape);return[a,i]}}function DF(r,t=!1){return N.tidy(()=>{D(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let e=r.shape[0],n=r.shape[1],o=tl(e),s=fn(r),a=Ga([[1]],[1,1]),i=fn(a),u=e>=n?n:e;for(let l=0;l<u;++l){let p=s,m=i,c=o;[i,s,o]=N.tidy(()=>{let d=Oe(s,[l,l],[e-l,1]),f=el(d),h=Oe(s,[l,l],[1,1]),g=Ut(ir(h,0),Ga([[-1]]),Ga([[1]])),b=le(h,E(g,f)),T=ce(d,b);T.shape[0]===1?i=fn(a):i=mt([a,Oe(T,[1,0],[T.shape[0]-1,T.shape[1]])],0);let x=Je(ce(Ke(g,b),f)),I=Oe(s,[l,0],[e-l,n]),k=E(x,i),A=ze(i);if(l===0)s=le(I,Ke(k,Ke(A,I)));else{let P=le(I,Ke(k,Ke(A,I)));s=mt([Oe(s,[0,0],[l,n]),P],0)}let R=ze(k),F=Oe(o,[0,l],[e,o.shape[1]-l]);if(l===0)o=le(F,Ke(Ke(F,i),R));else{let P=le(F,Ke(Ke(F,i),R));o=mt([Oe(o,[0,0],[e,l]),P],1)}return[i,s,o]}),Re([p,m,c])}return!t&&e>n&&(o=Oe(o,[0,0],[e,n]),s=Oe(s,[0,0],[n,n])),[o,s]})}var RF=w({qr_:lQ});var Ua=(o=>(o[o.NONE=0]="NONE",o[o.MEAN=1]="MEAN",o[o.SUM=2]="SUM",o[o.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",o))(Ua||{});function mQ(r,t,e=3){let n=S(r,"losses","computeWeightedLoss"),o=null;t!=null&&(o=S(t,"weights","computeWeightedLoss"));let s=o==null?n:E(n,o);if(e===0)return s;if(e===2)return he(s);if(e===1){if(o==null)return $t(s);{let a=n.size/o.size,i=ce(he(s),he(o));return a>1?ce(i,de(a)):i}}if(e===3){if(o==null)return ce(he(s),de(n.size));{let a=E(o,yr(n.shape)),i=re(he(au(a,de(0))),"float32");return ce(he(s),i)}}throw Error(`Unknown reduction: ${e}`)}var Kr=w({computeWeightedLoss_:mQ});function cQ(r,t,e,n=3){let o=S(r,"labels","absoluteDifference"),s=S(t,"predictions","absoluteDifference"),a=null;e!=null&&(a=S(e,"weights","absoluteDifference")),Ot(o.shape,s.shape,"Error in absoluteDifference: ");let i=Gt(le(o,s));return Kr(i,a,n)}var FF=w({absoluteDifference_:cQ});function dQ(r,t,e,n,o=3){let s=S(r,"labels","cosineDistance"),a=S(t,"predictions","cosineDistance"),i=null;n!=null&&(i=S(n,"weights","cosineDistance")),Ot(s.shape,a.shape,"Error in cosineDistance: ");let u=de(1),l=le(u,he(E(s,a),e,!0));return Kr(l,i,o)}var PF=w({cosineDistance_:dQ});function fQ(r,t,e,n=3){let o=S(r,"labels","hingeLoss"),s=S(t,"predictions","hingeLoss"),a=null;e!=null&&(a=S(e,"weights","hingeLoss")),Ot(o.shape,s.shape,"Error in hingeLoss: ");let i=de(1);o=le(E(de(2),o),i);let u=tn(le(i,E(o,s)));return Kr(u,a,n)}var MF=w({hingeLoss_:fQ});function hQ(r,t,e,n=1,o=3){let s=S(r,"labels","huberLoss"),a=S(t,"predictions","huberLoss"),i=null;e!=null&&(i=S(e,"weights","huberLoss")),Ot(s.shape,a.shape,"Error in huberLoss: ");let u=de(n),l=Gt(le(a,s)),p=mp(l,u),m=le(l,p),c=X(E(de(.5),qe(p)),E(u,m));return Kr(c,i,o)}var EF=w({huberLoss_:hQ});function gQ(r,t,e,n=1e-7,o=3){let s=S(r,"labels","logLoss"),a=S(t,"predictions","logLoss"),i=null;e!=null&&(i=S(e,"weights","logLoss")),Ot(s.shape,a.shape,"Error in logLoss: ");let u=de(1),l=de(n),p=Je(E(s,Ur(X(a,l)))),m=E(le(u,s),Ur(X(le(u,a),l))),c=le(p,m);return Kr(c,i,o)}var LF=w({logLoss_:gQ});function bQ(r,t,e,n=3){let o=S(r,"labels","meanSquaredError"),s=S(t,"predictions","meanSquaredError"),a=null;e!=null&&(a=S(e,"weights","meanSquaredError")),Ot(o.shape,s.shape,"Error in meanSquaredError: ");let i=xy(o,s);return Kr(i,a,n)}var _F=w({meanSquaredError_:bQ});function yQ(r,t){let e=S(r,"labels","sigmoidCrossEntropyWithLogits"),n=S(t,"logits","sigmoidCrossEntropyWithLogits");Ot(e.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let o=tn(n),s=E(n,e),a=pc(br(Je(Gt(n))));return X(le(o,s),a)}function TQ(r,t,e,n=0,o=3){let s=S(r,"multiClassLabels","sigmoidCrossEntropy"),a=S(t,"logits","sigmoidCrossEntropy"),i=null;if(e!=null&&(i=S(e,"weights","sigmoidCrossEntropy")),Ot(s.shape,a.shape,"Error in sigmoidCrossEntropy: "),n>0){let l=de(n),p=de(1),m=de(.5);s=X(E(s,le(p,l)),E(m,l))}let u=yQ(s,a);return Kr(u,i,o)}var $F=w({sigmoidCrossEntropy_:TQ});function xQ(r,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return gn((o,s,a)=>{let u=oy(s,[e],!0),l=le(re(s,"float32"),u);a([o,l]);let p=Je(E(l,o));return{value:he(p,[e]),gradFunc:(d,f)=>{let[h,g]=f,b=Ls(d.shape,[e]);return[E(_(d,b),le(re(h,"float32"),br(g))),E(_(d,b),le(br(g),re(h,"float32")))]}}})(r,t)}function IQ(r,t,e,n=0,o=3){let s=S(r,"onehotLabels","softmaxCrossEntropy"),a=S(t,"logits","softmaxCrossEntropy"),i=null;if(e!=null&&(i=S(e,"weights","softmaxCrossEntropy")),Ot(s.shape,a.shape,"Error in softmaxCrossEntropy: "),n>0){let l=de(n),p=de(1),m=de(s.shape[1]);s=X(E(s,le(p,l)),ce(l,m))}let u=xQ(s,a);return Kr(u,i,o)}var BF=w({softmaxCrossEntropy_:IQ});function CQ(r,t,e,n){let o=S(r,"indices","sparseFillEmptyRows","int32"),s=S(t,"values","sparseFillEmptyRows"),a=S(e,"denseShape","sparseFillEmptyRows","int32"),i=S(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let u={indices:o,values:s,denseShape:a,defaultValue:i},l=N.runKernel(Wu,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}var OF=w({sparseFillEmptyRows_:CQ});function kQ(r,t,e){let n=S(r,"inputIndices","sparseReshape","int32"),o=S(t,"inputShape","sparseReshape","int32"),s=S(e,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let a={inputIndices:n,inputShape:o,newShape:s},i=N.runKernel(Zi,a);return{outputIndices:i[0],outputShape:i[1]}}var zF=w({sparseReshape_:kQ});function SQ(r,t,e){let n=S(r,"data","sparseSegmentMean"),o=S(t,"indices","sparseSegmentMean","int32"),s=S(e,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return N.runKernel(Ku,a)}var GF=w({sparseSegmentMean_:SQ});function vQ(r,t,e){let n=S(r,"data","sparseSegmentSum"),o=S(t,"indices","sparseSegmentSum","int32"),s=S(e,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return N.runKernel(Vu,a)}var UF=w({sparseSegmentSum_:vQ});function AQ(r,t,e,n,o,s,a,i){let u=S(r,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);let l=S(t,"dataSplits","stringNGrams");if(l.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let p={separator:e,nGramWidths:n,leftPad:o,rightPad:s,padWidth:a,preserveShortSequences:i},m={data:u,dataSplits:l},c=N.runKernel(hi,m,p);return{nGrams:c[0],nGramsSplits:c[1]}}var WF=w({stringNGrams_:AQ});function wQ(r,t,e=!0){let n=S(r,"input","stringSplit","string"),o=S(t,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);let s={skipEmpty:e},a={input:n,delimiter:o},i=N.runKernel(qu,a,s);return{indices:i[0],values:i[1],shape:i[2]}}var KF=w({stringSplit_:wQ});function NQ(r,t){let e=S(r,"input","stringToHashBucketFast","string"),n={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let o={input:e};return N.runKernel(ju,o,n)}var VF=w({stringToHashBucketFast_:NQ});var DQ={fft:bc,ifft:il,rfft:yc,irfft:Ty},RQ={hammingWindow:pF,hannWindow:wy,frame:Ny,stft:lF},fp={flipLeftRight:cF,grayscaleToRGB:dF,resizeNearestNeighbor:SF,resizeBilinear:kF,rotateWithOffset:fF,cropAndResize:mF,nonMaxSuppression:hF,nonMaxSuppressionAsync:yF,nonMaxSuppressionWithScore:TF,nonMaxSuppressionWithScoreAsync:xF,nonMaxSuppressionPadded:IF,nonMaxSuppressionPaddedAsync:CF,threshold:vF,transform:AF},mA={bandPart:wF,gramSchmidt:NF,qr:RF},FQ={absoluteDifference:FF,computeWeightedLoss:Kr,cosineDistance:PF,hingeLoss:MF,huberLoss:EF,logLoss:LF,meanSquaredError:_F,sigmoidCrossEntropy:$F,softmaxCrossEntropy:BF},PQ={sparseFillEmptyRows:OF,sparseReshape:zF,sparseSegmentMean:GF,sparseSegmentSum:UF},MQ={stringNGrams:WF,stringSplit:KF,stringToHashBucketFast:VF};var Vr=class extends fh{minimize(e,n=!1,o){let{value:s,grads:a}=this.computeGradients(e,o);if(o!=null){let i=o.map(u=>({name:u.name,tensor:a[u.name]}));this.applyGradients(i)}else this.applyGradients(a);return Re(a),n?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,n){return ty(e,n)}dispose(){this.iterations_!=null&&Re(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:de(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Vr,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var hp=class extends Vr{constructor(e,n,o=null){super();this.learningRate=e;this.rho=n;this.epsilon=o;this.accumulatedGrads=[];this.accumulatedUpdates=[];o==null&&(this.epsilon=N.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,s)=>{let a=N.registeredVariables[o],i=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${o}/accum_grad`,variable:z(()=>we(a).variable(i))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${o}/accum_var`,variable:z(()=>we(a).variable(i))});let u=Array.isArray(e)?e[s].tensor:e[o];if(u==null)return;let l=this.accumulatedGrads[s].variable,p=this.accumulatedUpdates[s].variable;z(()=>{let m=X(E(l,this.rho),E(qe(u),1-this.rho)),c=E(ce(_t(X(p,this.epsilon)),_t(X(l,this.epsilon))),u),d=X(E(p,this.rho),E(qe(c),1-this.rho));l.assign(m),p.assign(d);let f=X(E(c,-this.learningRate),a);a.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Re(this.accumulatedGrads.map(e=>e.variable)),Re(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);let n=e.length/2,o=!1;this.accumulatedGrads=e.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})),this.accumulatedUpdates=e.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(o)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.rho,n.epsilon)}};hp.className="Adadelta";En(hp);var gp=class extends Vr{constructor(e,n=.1){super();this.learningRate=e;this.initialAccumulatorValue=n;this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,s)=>{let a=N.registeredVariables[o];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${o}/accumulator`,variable:z(()=>Es(a.shape,this.initialAccumulatorValue).variable(!1))});let i=Array.isArray(e)?e[s].tensor:e[o];if(i==null)return;let u=this.accumulatedGrads[s].variable;z(()=>{let l=X(u,qe(i));u.assign(l);let p=X(E(ce(i,_t(X(l,N.backend.epsilon()))),-this.learningRate),a);a.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Re(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let n=!1;this.accumulatedGrads=e.map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,n){return new e(n.learningRate,n.initialAccumulatorValue)}};gp.className="Adagrad";En(gp);var bp=class extends Vr{constructor(e,n,o,s=null){super();this.learningRate=e;this.beta1=n;this.beta2=o;this.epsilon=s;this.accumulatedFirstMoment=[];this.accumulatedSecondMoment=[];z(()=>{this.accBeta1=de(n).variable(),this.accBeta2=de(o).variable()}),s==null&&(this.epsilon=N.backend.epsilon())}applyGradients(e){let n=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);z(()=>{let o=le(1,this.accBeta1),s=le(1,this.accBeta2);n.forEach((a,i)=>{let u=N.registeredVariables[a],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:z(()=>we(u).variable(l))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${a}/v`,variable:z(()=>we(u).variable(l))});let p=Array.isArray(e)?e[i].tensor:e[a];if(p==null)return;let m=this.accumulatedFirstMoment[i].variable,c=this.accumulatedSecondMoment[i].variable,d=X(E(m,this.beta1),E(p,1-this.beta1)),f=X(E(c,this.beta2),E(qe(p),1-this.beta2)),h=ce(d,o),g=ce(f,s);m.assign(d),c.assign(f);let b=X(E(ce(h,X(_t(g),this.epsilon)),-this.learningRate),u);u.assign(b)}),this.accBeta1.assign(E(this.accBeta1,this.beta1)),this.accBeta2.assign(E(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Re(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Re(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e),z(()=>{this.accBeta1.assign(qn(this.beta1,this.iterations_+1)),this.accBeta2.assign(qn(this.beta2,this.iterations_+1))});let n=e.length/2,o=!1;this.accumulatedFirstMoment=e.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})),this.accumulatedSecondMoment=e.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(o)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon)}};bp.className="Adam";En(bp);var yp=class extends Vr{constructor(e,n,o,s=null,a=0){super();this.learningRate=e;this.beta1=n;this.beta2=o;this.epsilon=s;this.decay=a;this.accumulatedFirstMoment=[];this.accumulatedWeightedInfNorm=[];z(()=>{this.iteration=de(0).variable(),this.accBeta1=de(n).variable()}),s==null&&(this.epsilon=N.backend.epsilon())}applyGradients(e){let n=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);z(()=>{let o=le(1,this.accBeta1),s=ce(-this.learningRate,X(E(this.iteration,this.decay),1));n.forEach((a,i)=>{let u=N.registeredVariables[a],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:we(u).variable(l)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${a}/v`,variable:we(u).variable(l)});let p=Array.isArray(e)?e[i].tensor:e[a];if(p==null)return;let m=this.accumulatedFirstMoment[i].variable,c=this.accumulatedWeightedInfNorm[i].variable,d=X(E(m,this.beta1),E(p,1-this.beta1)),f=E(c,this.beta2),h=Gt(p),g=rs(f,h);m.assign(d),c.assign(g);let b=X(E(ce(s,o),ce(d,X(g,this.epsilon))),u);u.assign(b)}),this.iteration.assign(X(this.iteration,1)),this.accBeta1.assign(E(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Re(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Re(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon,n.decay)}};yp.className="Adamax";En(yp);var ki=class extends Vr{constructor(e){super();this.learningRate=e;this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,s)=>{let a=Array.isArray(e)?e[s].tensor:e[o];if(a==null)return;let i=N.registeredVariables[o];z(()=>{let u=X(E(this.c,a),i);i.assign(u)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=zt(de(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,n){return new e(n.learningRate)}};ki.className="SGD";En(ki);var Tp=class extends ki{constructor(e,n,o=!1){super(e);this.learningRate=e;this.momentum=n;this.useNesterov=o;this.accumulations=[];this.m=de(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,s)=>{let a=N.registeredVariables[o];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${o}/momentum`,variable:z(()=>we(a).variable(!1))});let i=this.accumulations[s].variable,u=Array.isArray(e)?e[s].tensor:e[o];u!=null&&z(()=>{let l,p=X(E(this.m,i),u);this.useNesterov?l=X(E(this.c,X(u,E(p,this.m))),a):l=X(E(this.c,p),a),i.assign(p),a.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Re(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let n=!1;this.accumulations=e.map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,n){return new e(n.learningRate,n.momentum,n.useNesterov)}};Tp.className="Momentum";En(Tp);var xp=class extends Vr{constructor(e,n=.9,o=0,s=null,a=!1){super();this.learningRate=e;this.decay=n;this.momentum=o;this.epsilon=s;this.accumulatedMeanSquares=[];this.accumulatedMoments=[];this.accumulatedMeanGrads=[];if(this.centered=a,s==null&&(this.epsilon=N.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,s)=>{let a=N.registeredVariables[o],i=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${o}/rms`,variable:z(()=>we(a).variable(i))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${o}/momentum`,variable:z(()=>we(a).variable(i))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${o}/mg`,variable:z(()=>we(a).variable(i))});let u=Array.isArray(e)?e[s].tensor:e[o];if(u==null)return;let l=this.accumulatedMeanSquares[s].variable,p=this.accumulatedMoments[s].variable;z(()=>{let m=X(E(l,this.decay),E(qe(u),1-this.decay));if(this.centered){let c=this.accumulatedMeanGrads[s].variable,d=X(E(c,this.decay),E(u,1-this.decay)),f=ce(E(u,this.learningRate),_t(le(m,X(qe(d),this.epsilon)))),h=X(E(p,this.momentum),f);l.assign(m),c.assign(d),p.assign(h);let g=le(a,h);a.assign(g)}else{let c=X(E(l,this.decay),E(qe(u),1-this.decay)),d=X(E(p,this.momentum),ce(E(u,this.learningRate),_t(X(c,this.epsilon))));l.assign(c),p.assign(d);let f=le(a,d);a.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Re(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Re(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Re(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);let n=this.centered?e.length/3:e.length/2,o=!1;this.accumulatedMeanSquares=e.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})),this.accumulatedMoments=e.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})),this.centered&&(this.accumulatedMeanGrads=e.slice(n*2,n*3).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,n){return new e(n.learningRate,n.decay,n.momentum,n.epsilon,n.centered)}};xp.className="RMSProp";En(xp);var Wa=class{static sgd(t){return new ki(t)}static momentum(t,e,n=!1){return new Tp(t,e,n)}static rmsprop(t,e=.9,n=0,o=null,s=!1){return new xp(t,e,n,o,s)}static adam(t=.001,e=.9,n=.999,o=null){return new bp(t,e,n,o)}static adadelta(t=.001,e=.95,n=null){return new hp(t,e,n)}static adamax(t=.002,e=.9,n=.999,o=null,s=0){return new yp(t,e,n,o,s)}static adagrad(t,e=.1){return new gp(t,e)}};var cl={sgd:Wa.sgd,momentum:Wa.momentum,adadelta:Wa.adadelta,adagrad:Wa.adagrad,rmsprop:Wa.rmsprop,adamax:Wa.adamax,adam:Wa.adam};var EQ=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:r=>r())();function kh(){return new Promise(r=>EQ(()=>r()))}var C={};He(C,{ERF_A1:()=>XQ,ERF_A2:()=>YQ,ERF_A3:()=>ZQ,ERF_A4:()=>QQ,ERF_A5:()=>JQ,ERF_P:()=>jQ,PARALLELIZE_THRESHOLD:()=>Py,RowPartitionType:()=>HF,SELU_SCALE:()=>dA,SELU_SCALEALPHA:()=>cA,applyActivation:()=>ll,assertAndGetBroadcastShape:()=>Be,assertAxesAreInnerMostDims:()=>u8,assertParamsConsistent:()=>LQ,assignToTypedArray:()=>s7,axesAreInnerMostDims:()=>Qv,calculateShapes:()=>f2,checkEinsumDimSizes:()=>m7,checkPadOnDimRoundingMode:()=>Ft,combineLocations:()=>Z2,combineRaggedTensorToTensorShapes:()=>$Q,complexWithEvenIndex:()=>r7,complexWithOddIndex:()=>n7,computeConv2DInfo:()=>Jp,computeConv3DInfo:()=>$2,computeDefaultPad:()=>Zv,computeDilation2DInfo:()=>lX,computeOptimalWindowSize:()=>GQ,computeOutAndReduceShapes:()=>Jv,computeOutShape:()=>_Q,computePool2DInfo:()=>Yv,computePool3DInfo:()=>mX,convertConv2DDataFormat:()=>B2,decodeEinsumEquation:()=>p7,eitherStridesOrDilationsAreOne:()=>Er,expandShapeToKeepDim:()=>Ls,exponent:()=>i7,exponents:()=>a7,fromStringArrayToUint8:()=>P7,fromUint8ToStringArray:()=>F7,getAxesPermutation:()=>eA,getBroadcastDims:()=>m2,getComplexWithIndex:()=>o7,getEinsumComputePath:()=>c7,getEinsumPermutation:()=>l7,getFusedBiasGradient:()=>pl,getFusedDyActivation:()=>ul,getImageCenter:()=>UQ,getInnerMostAxes:()=>p8,getPermuted:()=>KQ,getRaggedRank:()=>OQ,getReductionAxes:()=>St,getReshaped:()=>WQ,getReshapedPermuted:()=>VQ,getRowPartitionTypesHelper:()=>BQ,getSliceBeginCoords:()=>HQ,getSliceSize:()=>qQ,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>g7,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>b7,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>y7,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>I7,getSparseReshapeInputOutputMismatchErrorMessage:()=>k7,getSparseReshapeInputOutputMultipleErrorMessage:()=>C7,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>T7,getSparseReshapeNegativeOutputDimErrorMessage:()=>x7,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>w7,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>S7,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>v7,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>A7,getUndoAxesPermutation:()=>bh,isIdentityPermutation:()=>d7,log:()=>T6,mergeRealAndImagArrays:()=>e7,prepareAndValidate:()=>d2,prepareSplitSize:()=>h7,segment_util:()=>hA,shouldFuse:()=>ml,slice_util:()=>xt,splitRealAndImagArrays:()=>t7,tupleValuesAreOne:()=>Jo,upcastType:()=>Et,validateDefaultValueShape:()=>zQ,validateInput:()=>Mb,validateUpdateShape:()=>Kv,warn:()=>gi});function LQ(r,t){let e=r[0].length;r.forEach((o,s)=>{D(o.length===e,()=>`Error in concat${e}D: rank of tensors[${s}] must be the same as the rank of the rest (${e})`)}),D(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);let n=r[0];r.forEach((o,s)=>{for(let a=0;a<e;a++)D(a===t||o[a]===n[a],()=>`Error in concat${e}D: Shape of tensors[${s}] (${o}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function _Q(r,t){let e=r[0].slice();for(let n=1;n<r.length;n++)e[t]+=r[n][t];return e}var HF=(a=>(a[a.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",a[a.VALUE_ROWIDS=1]="VALUE_ROWIDS",a[a.ROW_LENGTHS=2]="ROW_LENGTHS",a[a.ROW_SPLITS=3]="ROW_SPLITS",a[a.ROW_LIMITS=4]="ROW_LIMITS",a[a.ROW_STARTS=5]="ROW_STARTS",a))(HF||{});function $Q(r,t,e){let n=new Array;if(e==null&&t==null)return n;if(t==null)for(;n.length<r+e.length;)n.push(-1);else n=t.slice();if(e==null)return n;if(r+e.length!==n.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${r+e.length}, but shape.rank = ${n.length}`);for(let o=1;o<e.length;++o){let s=e[o],a=n[n.length-e.length+o],i=n[a];if(s>=0)if(i>=0){if(i!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${o+r}] = ${s} but shape[${o+r}] = ${i}`)}else n[a]=s}return n}function BQ(r){let t={FIRST_DIM_SIZE:0,VALUE_ROWIDS:1,ROW_LENGTHS:2,ROW_SPLITS:3,ROW_LIMITS:4,ROW_STARTS:5},e=[];for(let n of r)if(n in t)e.push(t[n]);else break;return e}function OQ(r){return r.length===0?0:r[0]===0?r.length-1:r.length}function zQ(r,t){if(r==null||t==null)return;let e=r.length,n=t.length;if(e>=n)throw new Error(`defaultValue.shape=${r} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${n})`);for(let o=0;o<Math.min(e,n-1);++o){let s=r[o],a=t[o+1];if(s>=0&&a>=0&&s!==1&&s!==a)throw new Error(`defaultValue.shape=${r}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${o-r.length}] = ${s} but ragged tensor input.flatValues.shape[${o-r.length}] = ${a}`)}}var Py=30;function GQ(r){return r<=Py?r:ym(r,Math.floor(Math.sqrt(r)))}function UQ(r,t,e){let n=e*(typeof r=="number"?r:r[0]),o=t*(typeof r=="number"?r:r[1]);return[n,o]}function WQ(r,t,e,n=!0){let o=[];if(n)o=o.concat(t.slice(0)),o.push(r[0]/e),o=o.concat(r.slice(1));else{o=o.concat(r[0]);let s=t.length;for(let a=0;a<s;++a)o=o.concat([r[a+1]/t[a],t[a]]);o=o.concat(r.slice(s+1))}return o}function KQ(r,t,e=!0){let n=[];if(e){n.push(t);for(let o=t+1;o<r;++o)o<=2*t?(n.push(o),n.push(o-(t+1))):n.push(o)}else{let o=[],s=[];for(let a=1;a<r;++a)a>=t*2+1||a%2===1?s.push(a):o.push(a);n.push(...o),n.push(0),n.push(...s)}return n}function VQ(r,t,e,n=!0){let o=[];n?o.push(r[0]/e):o.push(r[0]*e);for(let s=1;s<r.length;++s)s<=t.length?n?o.push(t[s-1]*r[s]):o.push(r[s]/t[s-1]):o.push(r[s]);return o}function HQ(r,t){let e=[0];for(let n=0;n<t;++n)e.push(r[n][0]);return e}function qQ(r,t,e){let n=r.slice(0,1);for(let o=0;o<e;++o)n.push(r[o+1]-t[o][0]-t[o][1]);return n}var cA=1.7580993408473768,dA=1.0507009873554805;var jQ=.3275911,XQ=.254829592,YQ=-.284496736,ZQ=1.421413741,QQ=-1.453152027,JQ=1.061405429;function e7(r,t){if(r.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${t.length}.`);let e=new Float32Array(r.length*2);for(let n=0;n<e.length;n+=2)e[n]=r[n/2],e[n+1]=t[n/2];return e}function t7(r){let t=new Float32Array(r.length/2),e=new Float32Array(r.length/2);for(let n=0;n<r.length;n+=2)t[n/2]=r[n],e[n/2]=r[n+1];return{real:t,imag:e}}function r7(r){let t=Math.ceil(r.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let o=0;o<r.length;o+=4)e[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:e,imag:n}}function n7(r){let t=Math.floor(r.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let o=2;o<r.length;o+=4)e[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:e,imag:n}}function o7(r,t){let e=r[t*2],n=r[t*2+1];return{real:e,imag:n}}function s7(r,t,e,n){r[n*2]=t,r[n*2+1]=e}function a7(r,t){let e=new Float32Array(r/2),n=new Float32Array(r/2);for(let o=0;o<Math.ceil(r/2);o++){let s=(t?2:-2)*Math.PI*(o/r);e[o]=Math.cos(s),n[o]=Math.sin(s)}return{real:e,imag:n}}function i7(r,t,e){let n=(e?2:-2)*Math.PI*(r/t),o=Math.cos(n),s=Math.sin(n);return{real:o,imag:s}}var fA="->",u7=/->/g,qF=",",jF="...";function p7(r,t){r=r.replace(/\s/g,"");let e=(r.length-r.replace(u7,"").length)/fA.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${fA}").`);let[n,o]=r.split(fA);D(n.indexOf(jF)===-1,()=>`The ellipsis notation ("${jF}") is not supported yet.`);let s=n.split(qF),a=s.length;if(t!==a)throw new Error(`Expected ${a} input tensors, received ${t}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let c=0;c<o.length;++c){let d=o[c];if(!s.some(f=>f.indexOf(d)!==-1))throw new Error(`Output subscripts contain the label ${d} not present in the input subscripts.`);i.indexOf(d)===-1&&i.push(d)}for(let c=0;c<n.length;++c){let d=n[c];i.indexOf(d)===-1&&d!==qF&&i.push(d)}let u=new Array(s.length);for(let c=0;c<a;++c){if(new Set(s[c].split("")).size!==s[c].length)throw new Error(`Found duplicate axes in input component ${s[c]}. Support for duplicate axes in input is not implemented yet.`);u[c]=[];for(let d=0;d<s[c].length;++d)u[c].push(i.indexOf(s[c][d]))}let l=i.length,p=o.length,m=[];for(let c=p;c<l;++c)m.push(c);return{allDims:i,summedDims:m,idDims:u}}function l7(r,t){let e=new Array(r);e.fill(-1);for(let o=0;o<t.length;++o)e[t[o]]=o;let n=[];for(let o=0;o<r;++o)e[o]===-1&&n.push(o);return e=e.filter(o=>o!==-1),{permutationIndices:e,expandDims:n}}function m7(r,t,e){let n=new Array(r);for(let o=0;o<e.length;++o){let s=e[o].shape;for(let a=0;a<t[o].length;++a)n[t[o][a]]===void 0?n[t[o][a]]=s[a]:D(n[t[o][a]]===s[a],()=>`Expected dimension ${n[t[o][a]]} at axis ${a} of input shaped ${JSON.stringify(s)}, but got dimension ${s[a]}`)}}function c7(r,t){let e=r,n=[],o=0;r.length===0&&e.push(-1),o=r.length+1;for(let a=0;a<o;++a)n.push([]);let s=[];for(let a=0;a<e.length;++a){let i=e[a],u=f7(t,i);for(let l of u)s.indexOf(l)===-1&&(n[a].push(l),s.push(l))}return{path:e,steps:n}}function d7(r){return r.every((t,e)=>t===e)}function f7(r,t){let e=[];for(let n=0;n<r.length;++n)(r[n].length===0||r[n].indexOf(t)!==-1||t===-1)&&e.push(n);return e}function h7(r,t,e=0){let n=[];if(typeof t=="number")D(r.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),n=new Array(t).fill(r.shape[e]/t);else{let o=t.reduce((a,i)=>(i===-1&&(a+=1),a),0);D(o<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let a=t.reduce((i,u)=>u>0?i+u:i);t[s]=r.shape[e]-a}D(r.shape[e]===t.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),n=t}return n}function g7(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function b7(r,t){return`indices(${r}, 0) is invalid: ${t} < 0`}function y7(r,t,e){return`indices(${r}, 0) is invalid: ${t} >= ${e}`}function T7(r,t){return`only one output dimension may be -1, not both ${r} and ${t}`}function x7(r,t){return`size ${r} must be non-negative, not ${t}`}function I7(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function C7(r,t){let e=tt(r),n=tt(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${r} outputShape= ${t}`}function k7(r,t){let e=tt(r),n=tt(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${n}. inputShape=${r} outputShape=${t}`}function S7(){return"segment ids must be >= 0"}function v7(){return"segment ids are not increasing"}function A7(r,t){return`Segment id ${r} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function w7(r,t,e){return`Bad: indices[${r}] == ${t} out of range [0, ${e})`}var hA={};He(hA,{collectGatherOpShapeInfo:()=>R7,computeOutShape:()=>D7,segOpComputeOptimalWindowSize:()=>N7});function N7(r,t){let e=!1,n;for(r<=Py?(n=r,e=!0):n=ym(r,Math.floor(Math.sqrt(r)));!e;)n>t||n===r?e=!0:n=ym(r,n+1);return n}function D7(r,t,e){let n=[],o=r.length;for(let s=0;s<o;s++)s!==t?n.push(r[s]):n.push(e);return n}function R7(r,t,e,n){let o=t.shape.length,s=r.shape.length;if(n!==0&&(n<-o||n>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${n}`);if(n<0&&(n+=o),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(e<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${e}).`);for(let m=0;m<n;++m)if(r.shape[m]!==t.shape[m])throw new Error(`x.shape[${m}]: ${r.shape[m]} should be equal to indices.shape[${m}]: ${t.shape[m]}.`);let a=r.shape[e],i=[],u=1,l=1,p=1;for(let m=0;m<n;++m)i.push(r.shape[m]),u*=r.shape[m];for(let m=n;m<e;m++)i.push(r.shape[m]),l*=r.shape[m];for(let m=n;m<o;m++)i.push(t.shape[m]);for(let m=e+1;m<s;m++)i.push(r.shape[m]),p*=r.shape[m];return{batchSize:u,sliceSize:p,outerSize:l,dimSize:a,outputShape:i}}function F7(r){try{return r.map(t=>Ym(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function P7(r){return r.map(t=>Zu(t))}var xr={};He(xr,{nonMaxSuppressionV3Impl:()=>Dy,nonMaxSuppressionV4Impl:()=>Ry,nonMaxSuppressionV5Impl:()=>Fy,whereImpl:()=>ky});var _n=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,_n.prototype)}},Hr=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Hr.prototype)}},B=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,B.prototype)}},Ae=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ae.prototype)}},Ic=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ic.prototype)}};var Sh=class{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=t}};function Gs(r,t){if(Array.isArray(r)){let e=[];for(let n=0;n<t;n++)e=e.concat(r);return e}else{let e=new Array(t);return e.fill(r),e}}function ns(r,t){if(!r)throw new Ic(t)}function bA(r,t){let e=0;for(let n of r)n===t&&e++;return e}function Rr(r){return r.length===1?r[0]:r}function vt(r){return Array.isArray(r)?r:[r]}function Us(r){let e=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function iu(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}var zs={};function Cc(r){if(r==null)return null;let t={};return t.className=r.getClassName(),t.config=r.getConfig(),t}function gA(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(t=>gA(t));else{let t=Object.keys(r);for(let e of t){let n=r[e];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?r[e]=n.value:gA(n))}}}function Si(r,t={},e={},n="object",o=!1){if(typeof r=="string"){let s=r,a;if(s in e)a=e[s];else if(s in zs)a=zs[s];else if(a=t[s],a==null)throw new B(`Unknown ${n}: ${r}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{let s=r;if(s.className==null||s.config==null)throw new B(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let a=s.className,i,u;if(a in e?[i,u]=e[a]:a in zs?[i,u]=zs.className:a in t&&([i,u]=t[a]),i==null)throw new B(`Unknown ${n}: ${a}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){let l={};for(let d of Object.keys(zs))l[d]=zs[d];for(let d of Object.keys(e))l[d]=e[d];let p=s.config;p.customObjects=l;let m={...zs};for(let d of Object.keys(e))zs[d]=e[d];gA(s.config);let c=u(i,s.config,e,o);return zs={...m},c}else{let l={...zs};for(let m of Object.keys(e))zs[m]=e[m];let p=new i(s.config);return zs={...l},p}}}function M7(r,t){return r<t?-1:r>t?1:0}function vh(r,t){return-1*M7(r,t)}function Ws(r){if(r==null)return r;let t=[];for(let e of r)t.indexOf(e)===-1&&t.push(e);return t}function XF(r){if(r==null)throw new B(`Invalid value in obj: ${JSON.stringify(r)}`);for(let t in r)if(r.hasOwnProperty(t))return!1;return!0}function vi(r,t,e){if(e!=null&&r.indexOf(e)<0)throw new B(`${e} is not a valid ${t}.  Valid values are ${r} or null/undefined.`)}function My(r,t,e=0,n=1/0){return ns(e>=0),ns(n>=e),Array.isArray(r)&&r.length>=e&&r.length<=n&&r.every(o=>typeof o===t)}function rr(r,t){Array.isArray(r)?(y.assert(r.length>0,()=>`${t} is unexpectedly an empty array.`),r.forEach((e,n)=>rr(e,`element ${n+1} of ${t}`))):y.assert(Number.isInteger(r)&&r>0,()=>`Expected ${t} to be a positive integer, but got ${YF(r)}.`)}function YF(r){return r===null?"null":Array.isArray(r)?"["+r.map(t=>YF(t)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function ZF(r,t,e){let n=e!=null?e():y.now(),o;return(...a)=>{let i=e!=null?e():y.now();return i-n<t||(n=i,o=r(...a)),o}}function Ey(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}var E7=0;function _y(){return E7++}var Ly={};function Ip(r=""){return r in Ly||(Ly[r]=0),Ly[r]+=1,r+Ly[r].toString()}var QF=["channelsFirst","channelsLast"],JF=["nearest","bilinear"],eP=["valid","same","causal"],tP=["max","avg"],rP=["sum","mul","concat","ave"];var kc=new Map;function Wt(r){vi(QF,"DataFormat",r)}function oP(r){vi(JF,"InterpolationFormat",r)}function bn(r){vi(eP,"PaddingMode",r)}function yA(r){vi(tP,"PoolMode",r)}var Ah=[],nP="/";function Va(r,t){Ah.push(r);try{let e=t();return Ah.pop(),e}catch(e){throw Ah.pop(),e}}function L7(){return Ah.length===0?"":Ah.join(nP)+nP}function $y(r){if(!sP(r))throw new Error("Not a valid tensor name: '"+r+"'");return L7()+r}function By(r){if(!sP(r))throw new Error("Not a valid tensor name: '"+r+"'");kc.has(r)||kc.set(r,0);let t=kc.get(r);if(kc.set(r,kc.get(r)+1),t>0){let e=`${r}_${t}`;return kc.set(e,1),e}else return r}var _7=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function sP(r){return!!r.match(_7)}function aP(r){return r===parseInt(r.toString(),10)}function Ks(r,t,e){t==null&&(t=0),e==null&&(e=r.length);let n=1;for(let o=t;o<e;++o)n*=r[o];return n}function dl(r){if(r.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<r.length;e++){let n=r[e];n<t&&(t=n)}return t}function Ha(r){if(r.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<r.length;e++){let n=r[e];n>t&&(t=n)}return t}function rn(r,t){if(t<r)throw new B(`end (${t}) < begin (${r}) is forbidden.`);let e=[];for(let n=r;n<t;++n)e.push(n);return e}var TA;function dr(){return TA==null&&(TA=u2().epsilon()),TA}function yn(){return"channelsLast"}function pu(r,t){return re(r,t)}function lu(r,t=-1){let e=r.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),_(r,e)}function iP(r,t){return z(()=>{if(r.shape.length!==2)throw new B(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let e=lu(r,1);return zy(e,[1,t,1])})}function uP(r){let t=[Ks(r.shape)];return _(r,t)}function pP(r){if(r.rank<=1)throw new B(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let t=[r.shape[0],Ks(r.shape,1)];return _(r,t)}function uu(r,t,e){return z(()=>{switch(r.rank){case 1:return fc(r,t,e);case 2:return Ih(r,[t,0],[e,r.shape[1]]);case 3:return hc(r,[t,0,0],[e,r.shape[1],r.shape[2]]);case 4:return al(r,[t,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3]]);case 5:return Oe(r,[t,0,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return Oe(r,[t,0,0,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new B(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function xA(r,t,e){return z(()=>{switch(r.rank){case 1:return fc(r,t,e);case 2:return Ih(r,[0,t],[r.shape[0],e]);case 3:return hc(r,[0,0,t],[r.shape[0],r.shape[1],e]);case 4:return al(r,[0,0,0,t],[r.shape[0],r.shape[1],r.shape[2],e]);default:throw new B(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function wh(r,t,e,n){return z(()=>{switch(r.rank){case 1:return fc(r,t,e);case 2:switch(n){case 1:return uu(r,t,e);case 2:return xA(r,t,e);default:throw new B(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return uu(r,t,e);case 2:return hc(r,[0,t,0],[r.shape[0],e,r.shape[2]]);case 3:return xA(r,t,e);default:throw new B(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return uu(r,t,e);case 2:return al(r,[0,t,0,0],[r.shape[0],e,r.shape[2],r.shape[3]]);case 3:return al(r,[0,0,t,0],[r.shape[0],r.shape[1],e,r.shape[3]]);case 4:return xA(r,t,e);default:throw new B(`The axis is not within the rank of the tensor ${n}`)}default:throw new B(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Sc(r,t=-1){let e;return t<0&&(e=r[0].rank,e!==0?t=e:t=0),t===r[0].rank&&(t=-1),mt(r,t)}function CA(r,t){switch(r.rank){case 1:return Wb([r,t]);case 2:return Kb([r,t],0);case 3:return Vb([r,t],0);case 4:return Hb([r,t],0);default:throw new B(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function zy(r,t){if(Array.isArray(t)||(t=[t]),r.rank!==t.length)throw new B(`The length of input n (${t.length}) does not match the number of dimensions in input x (${r.rank})`);return Jr(r,t)}function vc(r,t=0,e=1,n,o){return sl(r,t,e,n,o)}function Vs(r,t,e,n){if(r.rank<2||t.rank<2)throw new Ae(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${t.shape}`);if(t.rank>=3){let o=r.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(o!==s)throw new Ae(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${t.shape}`)}if(r.rank===2&&t.rank===2)return dp.matMul({a:r,b:t,transposeA:!1,transposeB:!1,bias:n?IA(r.rank,n,yn()):null,activation:e});{let o=r.shape.slice(),s=o.pop();r=_(r,[-1,s]);let a=t.shape.slice(),i=a.pop(),u=a.pop(),l=[...a,i],p=Array.from({length:t.rank},(f,h)=>h===0?t.rank-2:h<=t.rank-2?h-1:h);t=_(ze(t,p),[u,-1]);let m=[...o,...l],c=!1,d=!1;return _(dp.matMul({a:r,b:t,transposeA:c,transposeB:d,bias:n?IA(r.rank,n,yn()):null,activation:e}),m)}}function Gy(r,t,e){return z(()=>(Array.isArray(t)?t=qt(t,"int32"):t=re(t,"int32"),lp(r,t,e)))}function fl(r){return E(r,r)}function IA(r,t,e){let n=t.shape;if(t.rank!==1&&t.rank!==r)throw new B(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${r}`);if(r===5){if(e==="channelsFirst")return n.length===1?_(t,[1,n[0],1,1,1]):_(t,[1,n[3],n[0],n[1],n[2]]);if(e==="channelsLast")return n.length===1?_(t,[1,1,1,1,n[0]]):_(t,[1].concat(n))}else if(r===4){if(e==="channelsFirst")return n.length===1?_(t,[1,n[0],1,1]):_(t,[1,n[2],n[0],n[1]]);if(e==="channelsLast")return n.length===1?_(t,[1,1,1,n[0]]):_(t,[1].concat(n))}else if(r===3){if(e==="channelsFirst")return n.length===1?_(t,[1,n[0],1]):_(t,[1,n[1],n[0]]);if(e==="channelsLast")return n.length===1?_(t,[1,1,n[0]]):_(t,[1].concat(n))}else if(r<3)return t;throw new B(`Unsupported input rank by biasAdd: ${t.rank}`)}function Tn(r,t,e){return z(()=>(e==null&&(e=yn()),Wt(e),X(r,IA(r.rank,t,e))))}function lP(r,t=1){if(t!==1)throw new Ae(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return up(r)}function mP(r){return z(()=>ce(r,X(Gt(r),1)))}function Uy(r,t,e,n){return z(()=>uA(r,t,e,n))}function cP(r){return z(()=>{let t=X(.5,E(.2,r));return Gr(t,0,1)})}function Cp(r,t,e=!1){return e?r():t()}var dP=["fanIn","fanOut","fanAvg"],fP=["normal","uniform","truncatedNormal"];function $7(r){vi(dP,"FanMode",r)}function B7(r){vi(fP,"Distribution",r)}var xn=class extends J.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Ac=class extends xn{apply(t,e){return It(t,e)}};Ac.className="Zeros";J.registerClass(Ac);var kp=class extends xn{apply(t,e){return yr(t,e)}};kp.className="Ones";J.registerClass(kp);var wc=class extends xn{constructor(e){super();if(typeof e!="object")throw new B(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new B(`config must have value set but got ${e}`);this.value=e.value}apply(e,n){return z(()=>E(de(this.value),yr(e,n)))}getConfig(){return{value:this.value}}};wc.className="Constant";J.registerClass(wc);var Nc=class extends xn{constructor(e){super();this.DEFAULT_MINVAL=-.05;this.DEFAULT_MAXVAL=.05;this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,n){return Ii(e,this.minval,this.maxval,n)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Nc.className="RandomUniform";J.registerClass(Nc);var Dc=class extends xn{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Ae(`randomNormal does not support dType ${n}.`);return vc(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Dc.className="RandomNormal";J.registerClass(Dc);var Rc=class extends xn{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Ae(`truncatedNormal does not support dType ${n}.`);return Tc(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Rc.className="TruncatedNormal";J.registerClass(Rc);var Fc=class extends xn{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,n){return z(()=>{if(e.length!==2||e[0]!==e[1])throw new B("Identity matrix initializer can only be used for 2D square matrices.");return E(this.gain,tl(e[0]))})}getConfig(){return{gain:this.gain}}};Fc.className="Identity";J.registerClass(Fc);function O7(r,t="channelsLast"){let e,n;if(Wt(t),r.length===2)e=r[0],n=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(t==="channelsFirst"){let o=Ks(r,2);e=r[1]*o,n=r[0]*o}else if(t==="channelsLast"){let o=Ks(r,0,r.length-2);e=r[r.length-2]*o,n=r[r.length-1]*o}}else{let o=Ks(r);e=Math.sqrt(o),n=Math.sqrt(o)}return[e,n]}var qr=class extends xn{constructor(e){super();if(e.scale<0)throw new B(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,$7(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,B7(this.distribution),this.seed=e.seed}apply(e,n){let o=O7(e),s=o[0],a=o[1],i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,s):this.mode==="fanOut"?i/=Math.max(1,a):i/=Math.max(1,(s+a)/2),this.distribution==="normal"){let u=Math.sqrt(i);if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Ae(`${this.getClassName()} does not support dType ${n}.`);return Tc(e,0,u,n,this.seed)}else{let u=Math.sqrt(3*i);return Ii(e,-u,u,n)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};qr.className="VarianceScaling";J.registerClass(qr);var hl=class extends qr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return qr.className}};hl.className="GlorotUniform";J.registerClass(hl);var gl=class extends qr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return qr.className}};gl.className="GlorotNormal";J.registerClass(gl);var bl=class extends qr{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return qr.className}};bl.className="HeNormal";J.registerClass(bl);var yl=class extends qr{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return qr.className}};yl.className="HeUniform";J.registerClass(yl);var Tl=class extends qr{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return qr.className}};Tl.className="LeCunNormal";J.registerClass(Tl);var xl=class extends qr{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return qr.className}};xl.className="LeCunNormal";J.registerClass(xl);var Pc=class extends xn{constructor(e){super();this.DEFAULT_GAIN=1;if(this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Ae("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,n){return z(()=>{if(e.length<2)throw new Ae("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let o=e[0]>e[1]?[e[1],e[0]]:e,s=vc(o,0,1,"float32"),a=mA.gramSchmidt(s);return e[0]>e[1]&&(a=ze(a)),E(this.gain,a)})}getConfig(){return{gain:this.gain,seed:this.seed}}};Pc.className="Orthogonal";J.registerClass(Pc);var hP={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function gP(r,t={}){return Si(r,J.SerializationMap.getMap().classNameMap,t,"initializer")}function Pt(r){return Cc(r)}function Ct(r){if(typeof r=="string"){let t=r in hP?hP[r]:r;if(t==="GlorotNormal")return new gl;if(t==="GlorotUniform")return new hl;if(t==="HeNormal")return new bl;if(t==="HeUniform")return new yl;if(t==="LeCunNormal")return new Tl;if(t==="LeCunUniform")return new xl;{let e={};return e.className=t,e.config={},gP(e)}}else return r instanceof xn?r:gP(r)}function Wy(r){return Array.isArray(r)&&Array.isArray(r[0])}function Mc(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function _e(r){let t;if(Array.isArray(r)){if(r.length!==1)throw new B(`Expected Tensor length to be 1; got ${r.length}`);t=r[0]}else t=r;return t}function rt(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new B(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function Ec(r){let t=0;for(let e of r)e.shape.length===0?t+=1:t+=e.shape.reduce((n,o)=>n*o);return t}var yP="Variable",Nh=class{constructor(t,e="float32",n=yP,o=!0,s=null){this.dtype=e??"float32",this.shape=t.shape,this.id=_y(),n=n??yP,this.originalName=$y(n),this.name=By(this.originalName),this.trainable_=o,this.constraint=s,this.val=Cy(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),G7(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}};function G7(r,t){if(r.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(t.shape))}function Dh(r){return r.map(t=>t.read())}function Lc(r){r.forEach(t=>{t[0].write(t[1])})}var At=class{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}},on=class{constructor(t,e,n,o,s,a,i){this.dtype=t;this.shape=e;this.sourceLayer=n;this.inputs=o;this.callArgs=s;this.outputTensorIndex=i;this.id=_y(),a!=null&&(this.originalName=$y(a),this.name=By(this.originalName)),this.rank=e.length}},U7=0,mu=class{constructor(t,e){this.callArgs=e;this.id=U7++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(let n of t.inboundLayers)n?.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){let t=[];for(let e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},W7=0,$e=class extends J.Serializable{constructor(e={}){super();this._callHook=null;this._addedWeightNames=[];this._stateful=!1;this.id=W7++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let n=e.name;if(!n){let o=this.getClassName();n=Us(o)+"_"+Ip(o)}if(this.name=n,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let o;if(e.batchInputShape!=null)o=e.batchInputShape;else if(e.inputShape!=null){let a=null;e.batchSize!=null&&(a=e.batchSize),o=[a].concat(e.inputShape)}this.batchInputShape=o;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,n){return e.name+"_ib-"+n.toString()}getNodeAtIndex(e,n){if(this.inboundNodes.length===0)throw new Hr(`The layer has never been called and thus has no defined ${n}.`);if(this.inboundNodes.length<=e)throw new B(`Asked to get ${n} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Rr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Rr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new _n(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new _n(`Layer ${this.name} is not connected, no input to return.`);return Rr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new _n(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new _n(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Rr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(n=>n.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=vt(e),this.inputSpec==null||this.inputSpec.length===0)return;let n=vt(this.inputSpec);if(e.length!==n.length)throw new B(`Layer ${this.name} expects ${n.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let o=0;o<e.length;o++){let s=e[o],a=n[o];if(a==null)continue;let i=s.rank;if(a.ndim!=null&&i!==a.ndim)throw new B(`Input ${o} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${i}`);if(a.maxNDim!=null&&i>a.maxNDim)throw new B(`Input ${o} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${i}`);if(a.minNDim!=null&&i<a.minNDim)throw new B(`Input ${o} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${i}.`);if(a.dtype!=null&&s.dtype!==a.dtype)throw new B(`Input ${o} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${s.dtype}.`);if(a.axes){let u=s.shape;for(let l in a.axes){let p=Number(l),m=a.axes[l],c=p>=0?u[p]:u[u.length+p];if(m!=null&&[m,null].indexOf(c)===-1)throw new B(`Input ${o} is incompatible with layer ${this.name}: expected axis ${p} of input shape to have value ${m} but got shape ${u}.`)}}if(a.shape!=null)for(let u=0;u<a.shape.length;++u){let l=a.shape[u],p=s.shape[u];if(l!=null&&p!=null&&l!==p)throw new B(`Input ${o} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${s.shape}.`)}}}call(e,n){return e}invokeCallHook(e,n){this._callHook!=null&&this._callHook(e,n)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,n){n=n||{},this.assertNotDisposed();let o=vt(e),s=!0;for(let i of o)if(!(i instanceof on)){s=!1;break}let a=!0;for(let i of o)if(i instanceof on){a=!1;break}if(s===a)throw new B("Arguments to apply() must be all SymbolicTensors or all Tensors");return Va(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let i=[];for(let u of vt(e))i.push(u.shape);this.build(Rr(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let i=this.call(e,n),u=vt(i),l=[];for(let p of u)o.indexOf(p)!==-1&&(p=p.clone()),l.push(p);if(i=Rr(l),this.activityRegularizer!=null)throw new Ae("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{let i=K7(e),u=this.computeOutputShape(i),l,p=V7(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),u!=null&&u.length>0&&Array.isArray(u[0])?l=u.map((m,c)=>new on(p,m,this,vt(e),n,this.name,c)):l=new on(p,u,this,vt(e),n,this.name),this.addInboundNode(e,l,null,null,i,u,n),this._refCount++,this.activityRegularizer!=null)throw new Ae("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let n=!1;this.batchInputShape.forEach((o,s)=>{o!=null&&e[s]!=null&&e[s]!==o&&(n=!0)}),n&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new _n(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let n of this.inboundNodes){let o=JSON.stringify(n.outputShapes);e.indexOf(o)===-1&&e.push(o)}if(e.length===1){let n=this.inboundNodes[0].outputShapes;return Array.isArray(n)&&Array.isArray(n[0])&&n.length===1?n[0]:n}else throw new _n(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Hr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Ec(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Dh(e?this.trainableWeights:this.weights)}setWeights(e){z(()=>{let n=this.weights;if(n.length!==e.length)throw new B(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${n.length} weights. Provided weights: ${e}...`);if(n.length===0)return;let o=[],s=Dh(n);for(let a=0;a<s.length;++a){let i=s[a],u=n[a],l=e[a];if(!y.arraysEqual(i.shape,l.shape))throw new B(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);o.push([u,l])}Lc(o)})}addWeight(e,n,o,s,a,i,u,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new B(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),o==null&&(o="float32"),this.fastWeightInitDuringBuild&&(s=l!=null?l():Ct("zeros"));let p=s.apply(n,o),m=new Nh(p,o,e,i,u);return p.dispose(),a!=null&&this.addLoss(()=>a.apply(m.read())),i==null&&(i=!0),i?this._trainableWeights.push(m):this._nonTrainableWeights.push(m),m}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=vt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,n){if(!this.supportsMasking){if(n!=null)if(Array.isArray(n))n.forEach(o=>{if(o!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return n}addInboundNode(e,n,o,s,a,i,u=null){let l=vt(e);n=vt(n),o=vt(o),s=vt(s),a=Mc(a),i=Mc(i);let p=[],m=[],c=[];for(let d of l)p.push(d.sourceLayer),m.push(d.nodeIndex),c.push(d.tensorIndex);new mu({outboundLayer:this,inboundLayers:p,nodeIndices:m,tensorIndices:c,inputTensors:l,outputTensors:n,inputMasks:o,outputMasks:s,inputShapes:a,outputShapes:i},u);for(let d=0;d<n.length;d++)n[d].sourceLayer=this,n[d].nodeIndex=this.inboundNodes.length-1,n[d].tensorIndex=d}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function K7(r){r=vt(r);let t=[];for(let e of r)t.push(e.shape);return Rr(t)}function V7(r){return"float32"}function kA(r,t,e){if((t==null||e!=null&&e>0)&&(t=r.sourceLayer,e=r.nodeIndex),t.inboundNodes.length===0)return[r];{let n=t.inboundNodes[e];if(n.inboundLayers.length===0)return n.inputTensors;{let o=[];for(let s=0;s<n.inboundLayers.length;s++){let a=n.inputTensors[s],i=n.inboundLayers[s],u=n.nodeIndices[s],l=kA(a,i,u);for(let p of l)o.indexOf(p)===-1&&o.push(p)}return o}}}var qa=class extends $e{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:Ip("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new B("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let n=e.batchInputShape;if(n==null){if(e.inputShape==null)throw new B("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");n=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new B("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let o=e.dtype||"float32";this.batchInputShape=n,this.dtype=o,this.inputSpec=[{shape:n}];let s=new on(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new mu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[n],outputShapes:[n]})}apply(e,n){throw new B(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};qa.className="InputLayer";J.registerClass(qa);function Ky(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new B("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=r.batchShape;r.shape!=null&&t==null&&(t=[null].concat(r.shape));let e=r.dtype;return e==null&&(e="float32"),new qa({batchInputShape:t,name:r.name,dtype:e,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}function H7(r,t){if(r.dtype==null||r.dtype===t.dtype)return t;try{return re(t,r.dtype)}catch{throw new B(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var Hs=class{constructor(t){this.id2Value={};this.id2Mask={};this.name2Id={};if(t instanceof Hs)for(let e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(let e of t)this.add(e.key,e.value)}}add(t,e,n){if(this.id2Value[t.id]==null)this.id2Value[t.id]=H7(t,e),this.name2Id[t.name]=t.id,n!=null&&(this.id2Mask[t.id]=n);else throw new B(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof on){if(this.id2Value[t.id]==null)throw new B(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{let e=this.name2Id[t];if(e==null)throw new B(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof on){if(this.id2Value[t.id]==null)throw new B(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{let e=this.name2Id[t];if(e==null)throw new B(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&Re(this.id2Mask)}},Vy=new Sh,Hy=new Sh;function xP(r){Vy?.setMaxEntries(r),Hy?.setMaxEntries(r)}function Il(r,t,e,n){let o=e==null?!1:e.training,s=Array.isArray(r),a=s?r:[r],i=a.map(f=>f.name),u=[],l=t.names();for(let f of i)l.indexOf(f)!==-1?u.push(t.getValue(f)):u.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);let p=i.join(",")+"|"+t.names().sort().join(","),m=Vy.get(p),c;if(m==null){let f=q7(a,t);m=f.sorted,c=f.recipientCounts,Vy.put(p,m),Hy.put(p,c)}c={},o||Object.assign(c,Hy.get(p));let d=new Hs(t);for(let f=0;f<m.length;++f){if(n!=null){let P=ch().numTensors;P>n.maxNumTensors&&(n.maxNumTensors=P),P<n.minNumTensors&&(n.minNumTensors=P)}let h=m[f],g=h.sourceLayer;if(g instanceof qa)continue;let b=[],T=[],x=[],I=!1;for(let P of h.inputs){let L=d.getValue(P),O=d.getMask(P);b.push(L),T.push(O),O!=null&&(I=!0),o||(c[P.name]--,c[P.name]===0&&!t.hasKey(P)&&i.indexOf(P.name)===-1&&!L.isDisposed&&P.sourceLayer.stateful!==!0&&x.push(L))}I&&(e=e||{},e.mask=T[0]);let k=vt(g.apply(b,e)),A=null;g.supportsMasking&&(A=g.computeMask(b,T));let R=X7(h),F=Array.isArray(R)?R:[R];for(let P=0;P<F.length;++P){d.hasKey(F[P])||d.add(F[P],k[P],Array.isArray(A)?A[0]:A);let L=i.indexOf(F[P].name);L!==-1&&(u[L]=k[P])}o||Re(x)}return d.disposeMasks(),s?u:u[0]}function q7(r,t){y.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let e=[],n={};if(r.length===1){let o=TP(r[0],t);e=o.sorted,n=o.recipientMap}else{let o=new Set;for(let s of r){let{sorted:a,recipientMap:i}=TP(s,t);for(let u of a)o.has(u.name)||(e.push(u),o.add(u.name));for(let u in i)n[u]==null&&(n[u]=new Set),i[u].forEach(l=>n[u].add(l))}}return{sorted:e,recipientCounts:j7(n)}}function j7(r){let t={};for(let e in r)t[e]=r[e].size;return t}function TP(r,t){let e=new Set,n=[],o={};for(let i of t.names())e.add(i);let s=[],a=[];for(s.push(r);s.length>0;){let i=s[s.length-1];if(e.has(i.name)){s.pop();continue}let u=a[a.length-1]===s.length-1;if(i.inputs.length===0||u)s.pop(),n.push(i),e.add(i.name),u&&a.pop();else{a.push(s.length-1);for(let l of i.inputs)o[l.name]==null&&(o[l.name]=new Set),o[l.name].add(i.name),!e.has(l.name)&&s.push(l)}}return{sorted:n,recipientMap:o}}function X7(r){let t;if(r.sourceLayer.inboundNodes.length===1)t=r.sourceLayer.output;else{let e=null;for(let n=0;n<r.sourceLayer.inboundNodes.length;++n)for(let o of r.sourceLayer.inboundNodes[n].outputTensors)if(o.id===r.id){e=n;break}t=r.sourceLayer.getOutputAt(e)}return t}var Y7=$();Y7.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,xP);var qy={kernelName:cs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(r,Ci(re(e,"float32"),-1))}}};var IP={kernelName:Mi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=qe(re(e,"float32")),o=_t(le(de(1),n));return Je(ce(r,o))}}}};var CP={kernelName:Ei,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=_t(le(qe(re(e,"float32")),1));return ce(r,n)}}}};var kP={kernelName:Nn,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=Be(e.shape,n.shape);return{a:()=>{let i=r,u=St(e.shape,o);return u.length>0&&(i=he(i,u)),_(i,e.shape)},b:()=>{let i=r,u=St(n.shape,o);return u.length>0&&(i=he(i,u)),_(i,n.shape)}}}};var SP={kernelName:ao,saveAllInputs:!0,gradFunc:(r,t)=>{let e={};return t.forEach((n,o)=>{e[o]=()=>r.clone()}),e}};var vP={kernelName:io,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>we(e)}}};var AP={kernelName:mi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>we(e)}}};var wP={kernelName:$i,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ce(r,_t(le(de(1),qe(re(e,"float32")))))}}};var NP={kernelName:Bi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=_t(X(de(1),qe(re(e,"float32"))));return ce(r,n)}}}};var DP={kernelName:la,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=Be(e.shape,n.shape);return{a:()=>{let i=X(qe(e),qe(n)),u=E(r,ce(n,i)),l=St(e.shape,o);return l.length>0&&(u=he(u,l)),_(u,e.shape)},b:()=>{let i=X(qe(e),qe(n)),u=Je(E(r,ce(e,i))),l=St(n.shape,o);return l.length>0&&(u=he(u,l)),_(u,n.shape)}}}};var RP={kernelName:Oi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ce(r,X(qe(re(e,"float32")),1))}}};var FP={kernelName:zi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ce(r,le(de(1),qe(re(e,"float32"))))}}};function Z7(r,t,e,n,o,s){let a=S(r,"dy","avgPool3dGrad"),i=S(t,"input","avgPool3dGrad"),u=a,l=i,p=!1;i.rank===4&&(p=!0,u=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),l=_(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),D(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),D(l.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),Ft("avgPool3dGrad",o,s);let m={dy:u,input:l},c={filterSize:e,strides:n,pad:o,dimRoundingMode:s},d=N.runKernel(Im,m,c);return p?_(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var PP=w({avgPool3dGrad_:Z7});var MP={kernelName:Mu,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{filterSize:o,strides:s,pad:a,dimRoundingMode:i}=e;return{x:()=>PP(r,n,o,s,a,i)}}};function Q7(r,t,e,n,o){let s=S(r,"dy","avgPoolGrad"),a=S(t,"input","avgPoolGrad");D(a.rank===s.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${s.rank})`);let i=a,u=s,l=!1;a.rank===3&&(l=!0,i=_(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=_(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),D(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let p={dy:u,input:i},m={filterSize:e,strides:n,pad:o},c=N.runKernel(xm,p,m);return l?_(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var EP=w({avgPoolGrad_:Q7});var LP={kernelName:uo,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{filterSize:o,strides:s,pad:a}=e;return{x:()=>EP(r,n,o,s,a)}}};var _P={kernelName:po,inputsToSave:["a","b"],gradFunc:(r,t,e)=>{let[n,o]=t,{transposeA:s,transposeB:a}=e;return!s&&!a?{a:()=>Ke(r,o,!1,!0),b:()=>Ke(n,r,!0,!1)}:!s&&a?{a:()=>Ke(r,o,!1,!1),b:()=>Ke(r,n,!0,!1)}:s&&!a?{a:()=>Ke(o,r,!1,!0),b:()=>Ke(n,r,!1,!1)}:{a:()=>Ke(o,r,!0,!0),b:()=>Ke(r,n,!0,!0)}}};var $P={kernelName:ds,gradFunc:(r,t,e)=>{let{blockShape:n,crops:o}=e;return{x:()=>cc(r,n,o)}}};var BP={kernelName:J0,gradFunc:(r,t,e)=>{let n=e,o=n.inputShape,s=n.shape,a=Array.from(s);for(let u=o.length-1;u>=0;u--)if(o[u]===s[u])a[u]=1;else if(o[u]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);let i=[];for(let u=0;u<a.length;u++)a[u]>1&&i.push(u);return{x:()=>he(r,i,!0)}}};var OP={kernelName:Wn,gradFunc:r=>({x:()=>r.clone()})};var zP={kernelName:lo,gradFunc:r=>({x:()=>we(r)})};var GP={kernelName:Kn,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{clipValueMin:o,clipValueMax:s}=e;return{x:()=>Ut(en(_s(n,o),$s(n,s)),r,we(r))}}};var UP={kernelName:Lu,inputsToSave:["x"],gradFunc:qy.gradFunc};var WP={kernelName:fs,saveAllInputs:!0,gradFunc:(r,t,e)=>{let n=t.map(u=>u.shape),{axis:o}=e,s=gr(o,t[0].shape)[0],a=n.map(u=>u[s]);return Dr(r,a,s).map(u=>()=>u)}};var KP={kernelName:mo,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let[n,o]=t,{dilations:s,strides:a,pad:i,dataFormat:u}=e;return D(Jo(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>ac(n.shape,r,o,a,i,u),filter:()=>xc(n,r,o.shape,a,i,u)}}};var VP={kernelName:co,inputsToSave:["dy","filter"],gradFunc:(r,t,e)=>{let[n,o]=t,{strides:s,pad:a,dataFormat:i,dimRoundingMode:u}=e;return{dy:()=>ts(r,o,s,a,i,1,u),filter:()=>xc(r,n,o.shape,s,a,i,u)}}};function J7(r,t,e,n,o){let s=r;r.rank===4&&(s=_(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let a=t;a.rank===4&&(a=_(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),D(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),D(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),D(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),D(s.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${e[3]}.`),D(a.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${e[4]}).`);let i={x:s,dy:a},u={strides:n,pad:o,filterShape:e};return N.runKernel(vm,i,u)}var HP=w({conv3DBackpropFilter_:J7});var qP={kernelName:_u,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let{dilations:n,strides:o,pad:s}=e;D(Jo(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[a,i]=t;return{x:()=>Yb(a.shape,r,i,o,s),filter:()=>HP(a,r,i.shape,o,s)}}};var jP={kernelName:fo,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(Je(by(re(e,"float32"))),r)}}};var XP={kernelName:ho,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(yy(re(e,"float32")),r)}}};var YP={kernelName:go,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{axis:o,exclusive:s,reverse:a}=e;return{x:()=>{let i=eA([o],n.rank),u=Jb(r,o,s,!a);return i!=null&&(u=ze(u,i)),u}}}};var ZP={kernelName:bo,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let{dilations:n,strides:o,pad:s,dimRoundingMode:a}=e,i=n??[1,1];D(Jo(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[u,l]=t;return D(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),D(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),D(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),D(Er(o,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${i}'.`),Ft("depthwiseConv2d",s,a),{x:()=>Ay(u.shape,r,l,o,s,i,a),filter:()=>vy(u,r,l.shape,o,s,i,a)}}};var QP={kernelName:$u,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let[n,o]=t,s={x:n,filter:o,dy:r},a={x:n,filter:o,dy:r};return{x:()=>N.runKernel(Jf,s,e),filter:()=>N.runKernel(eh,a,e)}}};var JP={kernelName:To,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t,n={dy:r,y:e};return{x:()=>N.runKernel(Fm,n)}}};var eM={kernelName:Gi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t,n=E(br(Je(qe(e))),2/Math.sqrt(Math.PI));return{x:()=>E(r,n)}}};var tM={kernelName:xo,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(r,e)}}};var rM={kernelName:hs,inputsToSave:["input"],gradFunc:(r,t)=>{let[e]=t;return{input:()=>_(r,e.shape)}}};var nM={kernelName:ha,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(r,br(e))}}};var oM={kernelName:Io,gradFunc:r=>({x:()=>we(r)})};var sM={kernelName:Co,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=Be(e.shape,n.shape);return{a:()=>{let i=ce(r,re(n,"float32")),u=St(e.shape,o);return u.length>0?_(he(i,u),e.shape):i},b:()=>{let i=E(r,re(e,"float32")),u=St(n.shape,o);u.length>0&&(i=_(he(i,u),n.shape));let l=qe(n);return Je(ce(i,re(l,"float32")))}}}};var aM={kernelName:ko,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,t,e)=>{let{varianceEpsilon:n}=e,[o,s,a,i]=t,u=i??de(1),l=St(s.shape,o.shape),p=[];if(s.rank===1){for(let I=0;I<o.shape.length-1;++I)p.push(o.shape[I]);p.push(1)}let m=le(o,s),c=E(r,u),d=fy(X(a,de(n))),f=E(E(E(d,d),d),de(-.5));return{x:()=>s.rank===1?_(E(E(r,Jr(_(d,[1,1,1,s.shape[0]]),p)),u),o.shape):_(E(E(r,d),u),o.shape),mean:()=>{let I=E(E(d,de(-1)),c);return s.rank===1&&(I=he(I,l)),_(I,s.shape)},variance:()=>{let I=E(E(f,m),c);return s.rank===1&&(I=he(I,l)),_(I,s.shape)},scale:()=>{let I=E(m,d),k=E(r,I);return s.rank===1&&(k=he(k,l)),_(k,s.shape)},offset:()=>{let I=r;return s.rank===1&&(I=he(I,l)),_(I,s.shape)}}}};var pM={kernelName:gs,inputsToSave:["x","indices"],gradFunc:(r,t,e)=>{let[n,o]=t,{axis:s}=e,a=gr(s,n.shape)[0];return{x:()=>{let u=n.shape,l=o.size,p=u.slice(0,a),m=p.length,c=u.slice(s,u.length).slice(1),d=c.length,f=iM(0,m),h=iM(m+1,m+1+d),g=uM([p,[l],c]),b=_(r,g),T=_(o,[l]),x=uM([[m],f,h]),I=ze(b,x),k=Iy(I,T,n.shape[a]),A=bh(x);return k=ze(k,A),k},indices:()=>o}}};function iM(r,t){let e=[];for(let n=r;n<t;++n)e.push(n);return e}function uM(r){let t=[];for(let e=0;e<r.length;++e)for(let n=0;n<r[e].length;++n)t.push(r[e][n]);return t}var lM={kernelName:So,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t;return{a:()=>we(e),b:()=>we(n)}}};var mM={kernelName:Vn,gradFunc:r=>({x:()=>re(r,"float32")})};var cM={kernelName:Ui,gradFunc:r=>({x:()=>we(r)})};var dM={kernelName:Wi,gradFunc:r=>({x:()=>we(r)})};var fM={kernelName:Ta,gradFunc:r=>({x:()=>we(r)})};var hM={kernelName:vo,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{alpha:o}=e,s=ir(n,0);return{x:()=>Ut(s,r,E(r,o))}}};var gM={kernelName:Ki,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ce(r,X(e,1))}}};var bM={kernelName:Ao,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ce(r,re(e,"float32"))}}};var yM={kernelName:t1,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n]=t,{axis:o}=e;return{logits:()=>{let a=br(n);return le(r,E(he(r,o,!0),a))}}}};function eJ(r,t,e,n=5,o=1,s=1,a=.5){let i={x:r,y:t,dy:e},u={depthRadius:n,bias:o,alpha:s,beta:a};return N.runKernel(Lm,i,u)}var TM=w({localResponseNormalizationBackprop_:eJ});var xM={kernelName:zu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n,o]=t,{depthRadius:s,bias:a,alpha:i,beta:u}=e;return{x:()=>TM(n,o,r,s,a,i,u)}}};function jy(r,t,e,n){return t.rank<e.rank&&(t=_(t,Ls(t.shape,n))),r.rank<e.rank&&(r=_(r,Ls(r.shape,n))),{x:()=>E(r,re(Qr(e,t),r.dtype))}}var SA={kernelName:wo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let n=e,{reductionIndices:o}=n,s=t[0],a=t[1],i=gr(o,s.shape),u=jy(r,a,s,i);return{x:()=>u.x()}}};var IM={kernelName:No,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t;return{a:()=>E(r,re(_s(e,n),"float32")),b:()=>E(r,re(ey(e,n),"float32"))}}};function tJ(r,t,e,n,o,s,a){let i=S(r,"dy","maxPool3dGrad"),u=S(t,"input","maxPool3dGrad"),l=S(e,"output","maxPool3dGrad"),p=i,m=u,c=l,d=!1;u.rank===4&&(d=!0,p=_(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),m=_(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),c=_(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),D(p.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),D(m.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${m.rank}.`),D(c.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${c.rank}.`),Ft("maxPool3dGrad",s,a);let f={dy:p,input:m,output:c},h={filterSize:n,strides:o,pad:s,dimRoundingMode:a},g=N.runKernel($m,f,h);return d?_(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var CM=w({maxPool3dGrad_:tJ});var kM={kernelName:Gu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n,o]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=e;return{x:()=>CM(r,n,o,s,a,i,u)}}};function rJ(r,t,e,n,o,s,a){let i=S(r,"dy","maxPoolGrad"),u=S(t,"input","maxPoolGrad"),l=S(e,"output","maxPoolGrad");D(u.rank===i.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${i.rank})`),D(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),D(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),Ft("maxPoolGrad",s,a);let p={dy:i,input:u,output:l},m={filterSize:n,strides:o,pad:s,dimRoundingMode:a};return N.runKernel(_m,p,m)}var SM=w({maxPoolGrad_:rJ});var vM={kernelName:Do,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n,o]=t,{filterSize:s,strides:a,pad:i}=e;return{x:()=>SM(r,n,o,s,a,i)}}};var AM={kernelName:Ro,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{axis:o}=e,s=gr(o,n.shape),i=Jv(n.shape,s)[1],u=tt(i);return{x:()=>{let p=n.shape.slice();s.forEach(d=>{p[d]=1});let m=_(r,p);return ce(E(m,yr(n.shape,"float32")),u)}}}};var wM={kernelName:Fo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let n=e,{axis:o}=n,[s,a]=t,i=gr(o,s.shape),u=jy(r,a,s,i);return{x:()=>u.x()}}};var NM={kernelName:Po,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t;return{a:()=>E(r,re($s(e,n),"float32")),b:()=>E(r,re(ir(e,n),"float32"))}}};var DM={kernelName:Mo,inputsToSave:["x"],gradFunc:(r,t,e)=>{let n=t[0],{paddings:o}=e,s=o.map(a=>a[0]);return{x:()=>Oe(r,s,n.shape)}}};var RM={kernelName:Hi,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=Be(e.shape,n.shape);return{a:()=>{let i=St(e.shape,o);return i.length>0?_(he(r,i),e.shape):r},b:()=>{let i=E(r,Je(pp(ce(e,n)))),u=St(n.shape,o);return u.length>0?_(he(i,u),n.shape):i}}}};var FM={kernelName:Eo,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=Be(e.shape,n.shape);return{a:()=>{let i=E(r,re(n,"float32")),u=St(e.shape,o);return u.length>0?_(he(i,u),e.shape):i},b:()=>{let i=E(r,re(e,"float32")),u=St(n.shape,o);return u.length>0?_(he(i,u),n.shape):i}}}};var PM={kernelName:bs,gradFunc:r=>({x:()=>Je(r)})};var MM={kernelName:wa,inputsToSave:["indices"],gradFunc:(r,t)=>{let e=t[0];return{indices:()=>It(e.shape,"float32")}}};var EM={kernelName:ys,gradFunc:r=>({x:()=>we(r)})};var LM={kernelName:Ts,saveAllInputs:!0,gradFunc:(r,t,e)=>{let{axis:n}=e;return Wr(r,n).map(s=>()=>s)}};var vA={kernelName:Lo,inputsToSave:["x"],gradFunc:(r,t,e)=>{let n=t[0],{paddings:o}=e,s=o.map(a=>a[0]);return{x:()=>Oe(r,s,n.shape)}}};var _M={kernelName:_o,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,t)=>{let[e,n,o]=t,s=e,a=n,i=Be(s.shape,a.shape);return{a:()=>{let p=re(a,"float32"),m=E(r,E(p,qn(s,le(p,de(1))))),c=St(s.shape,i);return c.length>0&&(m=he(m,c)),_(m,s.shape)},b:()=>{let p=ir(s,0),m=Ut(p,Ur(s),we(s)),c=E(r,E(o,m)),d=St(a.shape,i);return d.length>0&&(c=he(c,d)),_(c,a.shape)}}}};var $M={kernelName:$o,inputsToSave:["x","alpha"],gradFunc:(r,t)=>{let[e,n]=t,o=ir(e,0);return{x:()=>Ut(o,r,E(r,n)),alpha:()=>{let s=Ut(o,we(r),E(r,e)),a=St(n.shape,r.shape);return a.length>0&&(s=he(s,a)),_(s,n.shape)}}}};function nJ(r,t,e){let n=r.shape.slice();n[e]=1;let o=_(t,n),s=gh(r,e,!0,!1),a=gh(r,e,!0,!0),i=E(s,a);return E(o,i)}function oJ(r,t,e){let n=r.shape.length,o=n-e.length,s=C.getAxesPermutation(e,n),a=r;s!=null&&(a=ze(r,s));let i=a.shape.slice(),l=i.splice(n-e.length,e.length).reduce((c,d)=>c*d,1);i.push(l);let p=a.reshape(i),m=nJ(p,t,o);if(m=m.reshape(a.shape),s!=null){let c=C.getUndoAxesPermutation(s);m=ze(m,c)}return m}var BM={kernelName:Bo,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{axis:o}=e,s=[];return o==null?s=n.shape.map((a,i)=>i):typeof o=="number"?s=[o]:s=o,{x:()=>oJ(n,r,s)}}};var OM={kernelName:yo,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=Be(e.shape,n.shape);return{a:()=>{let i=ce(r,re(n,"float32")),u=St(e.shape,o);return u.length>0?_(he(i,u),e.shape):i},b:()=>{let i=E(r,re(e,"float32")),u=St(n.shape,o);u.length>0&&(i=_(he(i,u),n.shape));let l=qe(n);return Je(ce(i,re(l,"float32")))}}}};var zM={kernelName:Na,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ce(r,Je(qe(e)))}}};var GM={kernelName:Uo,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t,n=E($s(e,6),Ci(e));return{x:()=>E(r,re(n,"float32"))}}};var UM={kernelName:Oo,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(r,re(Ci(e),"float32"))}}};var WM={kernelName:xs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>_(r,e.shape)}}};var KM={kernelName:Go,inputsToSave:["images"],gradFunc:(r,t,e)=>{let[n]=t,o={dy:r,images:n};return{images:()=>N.runKernel(Wm,o,e)}}};var VM={kernelName:zo,inputsToSave:["images"],gradFunc:(r,t,e)=>{let[n]=t,o={dy:r,images:n};return{images:()=>N.runKernel(Um,o,e)}}};var HM={kernelName:Da,gradFunc:(r,t,e)=>{let{dims:n}=e,o=gr(n,r.shape);return{x:()=>Nr(r,o)}}};var qM={kernelName:Ra,gradFunc:r=>({x:()=>we(r)})};var jM={kernelName:Wo,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>Je(ce(r,E(qn(e,1.5),2)))}}};var XM={kernelName:Is,inputsToSave:["condition"],gradFunc:(r,t)=>{let[e]=t;return{condition:()=>re(we(e),"float32"),t:()=>E(r,re(e,r.dtype)),e:()=>E(r,re(lc(e),r.dtype))}}};var YM={kernelName:ji,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=ir(e,de(0)),o=de(cA),s=de(dA),a=E(r,s),i=E(E(r,o),br(re(e,"float32")));return Ut(n,a,i)}}}};var ZM={kernelName:Vo,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(r,E(e,le(de(1),e)))}}};var QM={kernelName:Xi,gradFunc:r=>({x:()=>we(r)})};var JM={kernelName:Ko,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(ic(re(e,"float32")),r)}}};var eE={kernelName:Pa,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(Qb(re(e,"float32")),r)}}};var tE={kernelName:Cs,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{begin:o,size:s}=e,a=n.shape,[i,u]=Hv(n,o,s),l=[];for(let p=0;p<r.rank;p++)l.push([i[p],a[p]-i[p]-u[p]]);return{x:()=>jn(r,l)}}};var rE={kernelName:jo,outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n]=t,{dim:o}=e,s=!0,a=E(r,n);return{logits:()=>le(a,E(he(a,[o],s),n))}}};var nE={kernelName:Yi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(r,Ln(e))}}};var AA={kernelName:ks,gradFunc:(r,t,e)=>{let{blockShape:n,paddings:o}=e;return{x:()=>sc(r,n,o)}}};var wA={kernelName:Ss,gradFunc:(r,t,e)=>{let{axis:n}=e;return{x:()=>mt(r,n)}}};var oE={kernelName:Ho,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ce(r,E(_t(re(e,"float32")),2))}}};var sE={kernelName:fi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(r,E(re(e,"float32"),2))}}};var aE={kernelName:Xo,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=de(2);return{a:()=>E(r,E(o,le(e,n))),b:()=>E(r,E(o,le(n,e)))}}};var iE={kernelName:ws,gradFunc:r=>({x:()=>we(r)})};var uE={kernelName:Yo,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=Be(e.shape,n.shape);return{a:()=>{let i=r,u=St(e.shape,o);return u.length>0&&(i=he(i,u)),_(i,e.shape)},b:()=>{let i=r,u=St(n.shape,o);return u.length>0&&(i=he(i,u)),_(Je(i),n.shape)}}}};var pE={kernelName:qo,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,o=n.shape.slice(),{axis:s}=e;gr(s,n.shape).forEach(l=>{o[l]=1});let i=_(r,o),u=E(i,yr(n.shape,"float32"));return{x:()=>u}}};var lE={kernelName:Ea,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ce(r,qe(ic(e)))}}};var mE={kernelName:Zo,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(le(de(1),qe(e)),r)}}};var cE={kernelName:Dn,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{reps:o}=e;return{x:()=>{let a=we(n);if(n.rank===1)for(let i=0;i<o[0];++i)a=X(a,Oe(r,[i*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let i=0;i<o[0];++i)for(let u=0;u<o[1];++u)a=X(a,Oe(r,[i*n.shape[0],u*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let i=0;i<o[0];++i)for(let u=0;u<o[1];++u)for(let l=0;l<o[2];++l)a=X(a,Oe(r,[i*n.shape[0],u*n.shape[1],l*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let i=0;i<o[0];++i)for(let u=0;u<o[1];++u)for(let l=0;l<o[2];++l)for(let p=0;p<o[3];++p)a=X(a,Oe(r,[i*n.shape[0],u*n.shape[1],l*n.shape[2],p*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return a}}}};var dE={kernelName:Rn,gradFunc:(r,t,e)=>{let n=e,{perm:o}=n,s=bh(o);return{x:()=>ze(r,s)}}};var fE={kernelName:vs,gradFunc:(r,t,e)=>{let n=e,{axis:o}=n;return{value:()=>Tr(r,o)}}};var hE={kernelName:Xu,inputsToSave:["segmentIds"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>sJ(r,e)}}};function sJ(r,t){let e=rs(t,we(t)),n=lp(r,e),o=_s(t,de(0,"int32")),s=n.rank-o.rank;for(let i=0;i<s;++i)o=Lr(o,i+1);o=en(o,yr(n.shape,"bool"));let a=we(n);return Ut(o,n,a)}var gE={kernelName:As,gradFunc:r=>({x:()=>we(r)})};var aJ=[qy,IP,CP,kP,SP,vP,AP,wP,NP,DP,RP,FP,MP,LP,_P,$P,BP,OP,zP,GP,UP,WP,VP,KP,qP,jP,XP,YP,ZP,QP,OM,JP,eM,tM,rM,nM,sM,oM,aM,pM,lM,mM,cM,dM,fM,hM,gM,bM,yM,xM,SA,SA,IM,kM,vM,AM,wM,NM,DM,RM,FM,PM,MM,EM,LM,vA,vA,_M,$M,BM,zM,GM,UM,WM,KM,VM,HM,qM,jM,XM,YM,ZM,QM,JM,eE,tE,rE,nE,AA,AA,wA,wA,oE,aE,sE,iE,uE,pE,lE,mE,cE,dE,fE,hE,gE];for(let r of aJ)n1(r);var TE={};He(TE,{maxNorm:()=>iJ,minMaxNorm:()=>lJ,nonNeg:()=>pJ,unitNorm:()=>uJ});function NA(r,t){return z(()=>_t(he(E(r,r),t,!0)))}var Cl=class extends J.Serializable{getConfig(){return{}}},_c=class extends Cl{constructor(e){super();this.defaultMaxValue=2;this.defaultAxis=0;this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return z(()=>{let n=NA(e,this.axis),o=Gr(n,0,this.maxValue);return E(e,ce(o,X(dr(),n)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};_c.className="MaxNorm";J.registerClass(_c);var $c=class extends Cl{constructor(e){super();this.defaultAxis=0;this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return z(()=>ce(e,X(dr(),NA(e,this.axis))))}getConfig(){return{axis:this.axis}}};$c.className="UnitNorm";J.registerClass($c);var Bc=class extends Cl{apply(t){return tn(t)}};Bc.className="NonNeg";J.registerClass(Bc);var Oc=class extends Cl{constructor(e){super();this.defaultMinValue=0;this.defaultMaxValue=1;this.defaultRate=1;this.defaultAxis=0;this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return z(()=>{let n=NA(e,this.axis),o=X(E(this.rate,Gr(n,this.minValue,this.maxValue)),E(1-this.rate,n));return E(e,ce(o,X(dr(),n)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Oc.className="MinMaxNorm";J.registerClass(Oc);var bE={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function jt(r){return Cc(r)}function yE(r,t={}){return Si(r,J.SerializationMap.getMap().classNameMap,t,"constraint")}function Xt(r){if(r==null)return null;if(typeof r=="string"){let e={className:r in bE?bE[r]:r,config:{}};return yE(e)}else return r instanceof Cl?r:yE(r)}function iJ(r){return new _c(r)}function uJ(r){return new $c(r)}function pJ(){return new Bc}function lJ(r){return new Oc(r)}var xE={};He(xE,{constant:()=>dJ,glorotNormal:()=>xJ,glorotUniform:()=>TJ,heNormal:()=>IJ,heUniform:()=>CJ,identity:()=>bJ,leCunNormal:()=>kJ,leCunUniform:()=>SJ,ones:()=>cJ,orthogonal:()=>vJ,randomNormal:()=>hJ,randomUniform:()=>fJ,truncatedNormal:()=>gJ,varianceScaling:()=>yJ,zeros:()=>mJ});function mJ(){return new Ac}function cJ(){return new kp}function dJ(r){return new wc(r)}function fJ(r){return new Nc(r)}function hJ(r){return new Dc(r)}function gJ(r){return new Rc(r)}function bJ(r){return new Fc(r)}function yJ(r){return new qr(r)}function TJ(r){return new hl(r)}function xJ(r){return new gl(r)}function IJ(r){return new bl(r)}function CJ(r){return new yl(r)}function kJ(r){return new Tl(r)}function SJ(r){return new xl(r)}function vJ(r){return new Pc(r)}var ZE={};He(ZE,{Layer:()=>$e,RNN:()=>os,RNNCell:()=>fu,activation:()=>O9,add:()=>j9,alphaDropout:()=>Fee,average:()=>X9,averagePooling1d:()=>HA,averagePooling2d:()=>qA,averagePooling3d:()=>jA,avgPool1d:()=>oee,avgPool2d:()=>aee,avgPool3d:()=>uee,avgPooling1d:()=>see,avgPooling2d:()=>iee,avgPooling3d:()=>pee,batchNormalization:()=>tee,bidirectional:()=>kee,concatenate:()=>Y9,conv1d:()=>R9,conv2d:()=>F9,conv2dTranspose:()=>P9,conv3d:()=>M9,conv3dTranspose:()=>E9,convLstm2d:()=>Tee,convLstm2dCell:()=>xee,cropping2D:()=>_9,dense:()=>z9,depthwiseConv2d:()=>B9,dot:()=>eee,dropout:()=>G9,elu:()=>S9,embedding:()=>q9,flatten:()=>W9,gaussianDropout:()=>Ree,gaussianNoise:()=>Dee,globalAveragePooling1d:()=>lee,globalAveragePooling2d:()=>mee,globalMaxPool1d:()=>vee,globalMaxPool2d:()=>Aee,globalMaxPooling1d:()=>qE,globalMaxPooling2d:()=>jE,gru:()=>dee,gruCell:()=>fee,input:()=>_A,inputLayer:()=>k9,layerNormalization:()=>ree,leakyReLU:()=>A9,lstm:()=>hee,lstmCell:()=>gee,masking:()=>Pee,maxPool1d:()=>wee,maxPool2d:()=>Nee,maxPooling1d:()=>XE,maxPooling2d:()=>YE,maxPooling3d:()=>cee,maximum:()=>Z9,minimum:()=>Q9,multiply:()=>J9,permute:()=>H9,prelu:()=>w9,reLU:()=>v9,repeatVector:()=>K9,rescaling:()=>Mee,reshape:()=>V9,rnn:()=>Iee,separableConv2d:()=>L9,simpleRNN:()=>bee,simpleRNNCell:()=>yee,softmax:()=>N9,spatialDropout1d:()=>U9,stackedRNNCells:()=>Cee,thresholdedReLU:()=>D9,timeDistributed:()=>See,upSampling2d:()=>$9,zeroPadding2d:()=>nee});async function Ai(r){if(r==null)return;let t=[],e=[],n=[];for(let o in r){let s=r[o];if(typeof s!="number"){let a=s;t.push(a.data()),e.push(o),n.push(a)}}if(t.length>0){let o=await Promise.all(t);for(let s=0;s<o.length;++s)r[e[s]]=o[s][0];Re(n)}}function Xy(r){if(r!=null)for(let t in r){let e=r[t];typeof e!="number"&&e.dispose()}}var AJ=125,cu=class{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}},Yy=class{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(let e of this.callbacks)e.setParams(t)}setModel(t){for(let e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(let n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(let n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(let n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(let n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(let e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(let e of this.callbacks)await e.onTrainEnd(t)}},DA=class extends cu{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,n){n==null&&(n={});let o=n.size==null?0:n.size;this.seen+=o;for(let s in n){let a=n[s];if(typeof a=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+a*o;else{let i;s in this.totals?i=this.totals[s]:this.totals[s]=0;let u=z(()=>X(this.totals[s],E(a,o)));this.totals[s]=u,i?.dispose()}}}async onEpochEnd(e,n){if(n!=null)for(let o of this.params.metrics)this.totals[o]!=null&&(typeof this.totals[o]=="number"?n[o]=this.totals[o]/this.seen:z(()=>{let s=E(ce(1,this.seen),this.totals[o]);n[o]=s,this.totals[o].dispose(),zt(n[o])}))}},Zy=class extends cu{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,n){n==null&&(n={}),this.epoch.push(e);for(let o in n)this.history[o]==null&&(this.history[o]=[]),this.history[o].push(n[o])}async syncData(){let e=[],n=[],o=[];for(let a in this.history){let i=this.history[a];for(let u=0;u<i.length;++u)if(typeof i[u]!="number"){let l=i[u];e.push(l.data()),n.push(a),o.push(u)}}let s=await Promise.all(e);for(let a=0;a<s.length;++a)this.history[n[a]][o[a]].dispose(),this.history[n[a]][o[a]]=s[a][0]}},Qy=class extends cu{constructor(e,n){super();this.currentEpoch=0;if(this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||kh,this.yieldEvery=n||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=AJ),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");y.isNumber(this.yieldEvery)&&(this.maybeWait=ZF(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,n,o){let s=[];this.yield!=null&&(await Ai(o),s.push(this.yield(e,n,o))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,n){this.currentEpoch=e,this.epochBegin!=null&&(await Ai(n),await this.epochBegin(e,n))}async onEpochEnd(e,n){let o=[];this.epochEnd!=null&&(await Ai(n),o.push(this.epochEnd(e,n))),this.yieldEvery==="epoch"&&o.push(this.nextFrameFunc()),await Promise.all(o)}async onBatchBegin(e,n){this.batchBegin!=null&&(await Ai(n),await this.batchBegin(e,n))}async onBatchEnd(e,n){let o=[];this.batchEnd!=null&&(await Ai(n),o.push(this.batchEnd(e,n))),this.yieldEvery==="batch"?o.push(this.nextFrameFunc()):y.isNumber(this.yieldEvery)&&o.push(this.maybeWait(this.currentEpoch,e,n)),await Promise.all(o)}async onTrainBegin(e){this.trainBegin!=null&&(await Ai(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Ai(e),await this.trainEnd(e))}};function Jy(r,t){return r==null&&(r={}),r instanceof cu?[r]:Array.isArray(r)&&r[0]instanceof cu?r:vt(r).map(n=>new Qy(n,t))}var ja=class{constructor(){}static registerCallbackConstructor(t,e){y.assert(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),ja.checkForDuplicate(e),ja.constructors[t]==null&&(ja.constructors[t]=[]),ja.constructors[t].push(e)}static checkForDuplicate(t){for(let e in ja.constructors)ja.constructors[+e].forEach(o=>{if(o===t)throw new B("Duplicate callback constructor.")})}static clear(){ja.constructors={}}static createCallbacks(t){let e=[];for(let n in ja.constructors){let o=+n;t>=o&&e.push(...ja.constructors[o])}return e.map(n=>new n)}},zc=ja;zc.constructors={};function eT(r,t,e,n,o,s,a,i,u){let l=new Zy,p=[new DA,...zc.createCallbacks(t)];r!=null&&p.push(...r),p.push(l);let m=new Yy(p);return m.setParams({epochs:e,initialEpoch:n,samples:o,steps:s,batchSize:a,verbose:t,doValidation:i,metrics:u}),{callbackList:m,history:l}}function In(r,t={},e=!1){return Si(r,J.SerializationMap.getMap().classNameMap,t,"layer",e)}function Rh(r,t){return z(()=>{r.dtype!=="float32"&&(r=re(r,"float32"));let e=he(fl(r),t,!0),n=Es(e.shape,dr()),o=_t(rs(e,n));return ce(r,o)})}function wi(r,t){return z(()=>$t(fl(le(t,r)),-1))}function Gc(r,t){return z(()=>$t(Gt(le(t,r)),-1))}function Sp(r,t){return z(()=>{let e=le(r,t),n=Gr(Gt(r),dr(),Number.MAX_VALUE),o=Gt(ce(e,n));return E(100,$t(o,-1))})}function wJ(r,t){return z(()=>{let e=Gr(t,dr(),Number.MAX_VALUE),n=Ur(X(1,e)),o=Gr(r,dr(),Number.MAX_VALUE),s=Ur(X(1,o));return $t(fl(le(n,s)),-1)})}function NJ(r,t){return z(()=>{let e=rs(0,le(1,E(r,t)));return $t(fl(e),-1)})}function DJ(r,t){return z(()=>{let e=rs(0,le(1,E(r,t)));return $t(e,-1)})}function RJ(r,t){return z(()=>{let e=he(E(r,t),-1),n=hn(E(le(1,r),t),-1);return rs(0,X(1,le(n,e)))})}function FJ(r,t){return z(()=>{let e=Math.log(2),n=le(t,r),o=le(X(n,su(E(-2,n))),e);return $t(o,-1)})}function kl(r,t,e=!1){return z(()=>{if(e)t=gc(t);else{let n=he(t,t.shape.length-1,!0);t=ce(t,n)}return t=Gr(t,dr(),1-dr()),Je(he(E(re(r,"float32"),Ur(t)),t.shape.length-1))})}function Uc(r,t,e=!1){return z(()=>{let n=re(pp(uP(r)),"int32");t=Gr(t,dr(),1-dr());let o=t.shape,s=_(ep(n,o[o.length-1]),o);return kl(s,t,e)})}function PJ(r,t){if(!y.arraysEqual(r.shape,t.shape))throw new B(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(t.shape)}`);return z(()=>{let e=tn(t),n=Je(Gt(t));return X(le(e,E(t,r)),pc(br(n)))})}function Wc(r,t){return z(()=>{let e;return e=Gr(t,dr(),1-dr()),e=Ur(ce(e,le(1,e))),$t(PJ(r,e),-1)})}function MJ(r,t){return z(()=>{let e=Gr(r,dr(),1),n=Gr(t,dr(),1);return he(E(r,Ur(ce(e,n))),-1)})}function EJ(r,t){return z(()=>{let e=Ur(X(dr(),t));return $t(le(t,E(r,e)),-1)})}function Ph(r,t){return z(()=>{let e=Rh(r,-1),n=Rh(t,-1),o=E(e,n);return Je(he(o,-1))})}var Fh={meanSquaredError:wi,meanAbsoluteError:Gc,meanAbsolutePercentageError:Sp,meanSquaredLogarithmicError:wJ,squaredHinge:NJ,hinge:DJ,categoricalHinge:RJ,logcosh:FJ,categoricalCrossentropy:kl,sparseCategoricalCrossentropy:Uc,binaryCrossentropy:Wc,kullbackLeiblerDivergence:MJ,poisson:EJ,cosineProximity:Ph};function tT(r){if(typeof r=="string"){if(r in Fh)return Fh[r];let t=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new B(t)}else return r}function Mh(r,t){return z(()=>{let e=E(.5,_r(t)),n=pu(ir(t,e),r.dtype);return $t(Qr(r,n),-1)})}function Eh(r,t){return z(()=>pu(Qr(np(r,-1),np(t,-1)),"float32"))}function CE(r,t){return z(()=>re(he(en(Qr(r,1),Qr(t,1))),"float32"))}function LJ(r,t){return z(()=>re(he(en(Qr(r,1),Qr(t,0))),"float32"))}function _J(r,t){return z(()=>re(he(en(Qr(r,0),Qr(t,1))),"float32"))}function RA(r,t){return z(()=>{let e=CE(r,t),n=_J(r,t),o=X(e,n);return re(Ut(ir(o,0),ce(e,o),0),"float32")})}function kE(r,t){return z(()=>{let e=CE(r,t),n=LJ(r,t),o=X(e,n);return re(Ut(ir(o,0),ce(e,o),0),"float32")})}function nT(r,t){return Wc(r,t)}function oT(r,t){return r.rank===t.rank&&(r=Bs(r,[r.rank-1])),t=np(t,-1),t.dtype!==r.dtype&&(t=re(t,r.dtype)),re(Qr(r,t),"float32")}var $J=wi,BJ=wi,OJ=Gc,zJ=Gc,GJ=Sp,UJ=Sp,Lh=kl,WJ=Ph,FA=Uc,rT={binaryAccuracy:Mh,categoricalAccuracy:Eh,precision:RA,categoricalCrossentropy:Lh,sparseCategoricalCrossentropy:FA,mse:$J,MSE:BJ,mae:OJ,MAE:zJ,mape:GJ,MAPE:UJ,cosine:WJ};function SE(r){if(typeof r=="string"&&r in rT)return rT[r];if(typeof r!="string"&&r!=null)return r;throw new B(`Unknown metric ${r}`)}function _h(r){if(ns(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let t;for(let e of Object.keys(Fh))if(Fh[e]===r){t=e;break}if(t!==void 0)return t;for(let e of Object.keys(rT))if(rT[e]===r){t=e;break}return t!==void 0?t:r.name}}function AE(r){let t={Adagrad:()=>cl.adagrad(.01),Adadelta:()=>cl.adadelta(1,.95,dr()),Adam:()=>cl.adam(.001,.9,.999,dr()),Adamax:()=>cl.adamax(.002,.9,.999,dr(),0),RMSProp:()=>cl.rmsprop(.001,.9,0,dr()),SGD:()=>cl.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,r in t)return t[r]();throw new B(`Unknown Optimizer ${r}`)}function MA(r,t,e=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!PA(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){let n=JSON.stringify(r);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${1048576}.`)}}function PA(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let t=Object.keys(r);for(let e of t)if(typeof e!="string"||!PA(r[e]))return!1;return!0}else if(Array.isArray(r)){for(let t of r)if(!PA(t))return!1;return!0}else return!1;else{let t=typeof r;return t==="string"||t==="number"||t==="boolean"}}function wE(r,t,e,n=console.log){let o=HJ(r),s=["Layer (type)","Input Shape","Output shape","Param #"];o?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(p=>Math.floor(t*p)));let a;if(!o){s.push("Receives inputs"),a=[];for(let p in r.nodesByDepth)a.push(...r.nodesByDepth[p])}n("_".repeat(t)),sT(s,e,n),n("=".repeat(t));let i=r.layers;for(let p=0;p<i.length;++p)o?qJ(i[p],e,n):jJ(i[p],e,a,n),n((p===i.length-1?"=":"_").repeat(t));r.checkTrainableWeightsConsistency();let u=VJ(r),l=Ec(r.nonTrainableWeights);n(`Total params: ${u+l}`),n(`Trainable params: ${u}`),n(`Non-trainable params: ${l}`),n("_".repeat(t))}function VJ(r){let t;return r.collectedTrainableWeights!=null?t=Ec(r.collectedTrainableWeights):t=Ec(r.trainableWeights),t}function HJ(r){let t=!0,e=[],n=[];for(let o in r.nodesByDepth)e.push(r.nodesByDepth[o]);for(let o of e){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){t=!1;break}n.push(...o)}if(t)for(let o of r.layers){let s=!1;for(let a of o.inboundNodes)if(n.indexOf(a)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function sT(r,t,e=console.log){let n="";for(let o=0;o<r.length;++o)o>0&&(n=n.slice(0,n.length-1)+" "),n+=r[o],n=n.slice(0,t[o]),n+=" ".repeat(t[o]-n.length);e(n)}function qJ(r,t,e){let n,o;try{o=r.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{o="multiple"}try{n=JSON.stringify(r.outputShape)}catch{n="multiple"}let s=r.name,a=r.getClassName(),i=[`${s} (${a})`,o,n,r.countParams().toString()];sT(i,t,e)}function jJ(r,t,e,n){let o,s;try{s=r.inboundNodes.map(m=>JSON.stringify(m.inputShapes)).join(",")}catch{s="multiple"}try{o=JSON.stringify(r.outputShape)}catch{o="multiple"}let a=[];for(let m of r.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(m)===-1))for(let c=0;c<m.inboundLayers.length;++c){let d=m.inboundLayers[c].name,f=m.nodeIndices[c],h=m.tensorIndices[c];a.push(`${d}[${f}][${h}]`)}let i=r.name,u=r.getClassName(),l=a.length===0?"":a[0],p=[`${i} (${u})`,s,o,r.countParams().toString(),l];sT(p,t,n);for(let m=1;m<a.length;++m)sT(["","","","",a[m]],t,n)}function NE(r,t,e){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&t===0&&typeof e=="string"}function Sl(r,t){if(r===null)return null;if(typeof r=="string")return iu(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let e=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];NE(t,o,s)?e.push(s):e.push(Sl(s,t))}return e}else{let e={};for(let n of Object.keys(r)){let o=r[n];if(n==="name"&&typeof o=="string")e[n]=o;else{let s=iu(n);e[s]=Sl(o,s)}}return e}}function aT(r,t){if(r==null)return null;if(typeof r=="string")return Us(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let e=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];NE(t,o,s)?e.push(s):e.push(aT(s,t))}return e}else{let e={};for(let n of Object.keys(r)){let o=r[n],s=Us(n);(n==="name"||n==="className")&&typeof o=="string"?e[s]=o:e[s]=aT(o,n)}return e}}var $h="0.0.0";var Xn=class extends $e{constructor(e){super({});this.containerNodes=new Set;if(this.name=e.name,this.name==null){let x=this.getClassName().toLowerCase();this.name=Ip(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ws(this.inputs).length!==this.inputs.length)throw new B(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);Ws(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let x of this.outputs){let I=x.sourceLayer,k=x.nodeIndex,A=x.tensorIndex;this.outputLayers.push(I),this.outputLayersNodeIndices.push(k),this.outputLayersTensorIndices.push(A)}for(let x of this.inputs){let I=x.sourceLayer,k=x.nodeIndex,A=x.tensorIndex;ns(k===0,"input layer has >1 nodes"),ns(A===0,"input layer has >1 tensors"),this.inputLayers.push(I),this.inputLayersNodeIndices.push(k),this.inputLayersTensorIndices.push(A)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){let I=this.inputLayers[x];if(!(I instanceof qa))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${x} (0-based) originates from layer type ${I.getClassName()}.`);this.inputNames.push(I.name),this.feedInputShapes.push(I.batchInputShape),this.feedInputNames.push(I.name)}for(let x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);let n={},o={},s={},a={},i={},u=[],l=(x,I,k,A,R,F)=>{(A==null||R==null||F==null)&&(A=x.sourceLayer,R=x.nodeIndex,F=x.tensorIndex);let P=A.inboundNodes[R];if(k.indexOf(P)!==-1)throw new Hr(`The tensor ${x.name} at layer "${A.name}" is part of a cycle.`);if(I.indexOf(P)!==-1)return;this.containerNodes.add(Xn.nodeKey(A,R)),A.id in i||(i[A.id]=Object.keys(i).length),k.indexOf(P)===-1&&k.push(P);let L=P.inboundLayers.length;for(let O=0;O<L;O++){let G=P.inputTensors[O],W=P.inboundLayers[O],H=P.nodeIndices[O],V=P.tensorIndices[O];l(G,I,k,W,H,V)}for(I.push(P);k.indexOf(P)>=0;)k.splice(k.indexOf(P),1);u.push(P)},p=[],m=[];for(let x of this.outputs)l(x,p,m);let c=u.slice().reverse();for(let x of c){o[x.id]=x,x.id in n||(n[x.id]=0);let I=n[x.id],k=s[x.outboundLayer.id]==null?0:s[x.outboundLayer.id];I=Math.max(I,k),s[x.outboundLayer.id]=I,a[x.outboundLayer.id]=x.outboundLayer,n[x.id]=I;for(let A=0;A<x.inboundLayers.length;A++){let R=x.inboundLayers[A],F=x.nodeIndices[A],P=R.inboundNodes[F],L=n[P.id]==null?0:n[P.id];n[P.id]=Math.max(I+1,L),o[P.id]=P}}let d={};for(let x in n){let I=n[x];I in d||(d[I]=[]),d[I].push(o[x])}let f={};for(let x in s){let I=s[x];I in f||(f[I]=[]),f[I].push(a[x])}let h=Object.keys(f).map(x=>parseInt(x,10)).sort(vh);this.layers=[];for(let x of h){let I=f[x];I.sort((k,A)=>{let R=i[k.id],F=i[A.id];return R<F?-1:R>F?1:0});for(let k of I)k instanceof Xn&&this.internalContainerRefs.push(k),this.layers.push(k)}this.layersByDepth=f,h=Object.keys(d).map(x=>parseInt(x,10)).sort(vh);let g=this.inputs.slice(),b=[];for(let x of h)for(let I of d[x]){let k=I.outboundLayer;if(k!=null){for(let A of I.inputTensors)if(g.indexOf(A)===-1)throw new Hr(`Graph disconnected: cannot obtain value for tensor ${A} at layer "${k.name}". The following previous layers were accessed without issue: ${b}`);for(let A of I.outputTensors)g.push(A);b.push(k.name)}}this.nodesByDepth=d;let T=this.layers.map(x=>x.name);for(let x of T){let I=T.filter(k=>k===x).length;if(I!==1)throw new Hr(`The name "${x}" is used ${I} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(T))}this.outboundNodes=[],this.inboundNodes=[],new mu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let n of this.layers)e.numDisposedVariables+=n.dispose().numDisposedVariables;for(let n of this.internalContainerRefs)e.numDisposedVariables+=n.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(n=>{n._trainableWeights.forEach(o=>o.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new B("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let n of this.layers)e=e.concat(n.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let n of this.layers)e.push(...n.nonTrainableWeights);if(!this.trainable){let n=[];for(let o of this.layers)n.push(...o.trainableWeights);return n.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,n=!0){let o={},s=0;for(let i of this.layers)for(let u of i.weights){if(o[u.originalName]!=null)throw new B(`Duplicate weight name: ${u.originalName}`);o[u.originalName]=u,s++}let a=[];for(let i in e){let u=i;if(o[i]==null){let l=i.split("/");u=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(o[u]!=null)a.push([o[u],e[i]]);else if(n)throw new B(`Provided weight data has no target variable: ${i}`);delete o[u]}if(n){let i=[];for(let u in o)i.push(u);if(i.length>0)throw new B(`${i.length} of ${s} weights are not set: ${i}`)}Lc(a)}updatedConfig(){let e=this.getConfig(),n={};return n.className=this.getClassName(),n.config=e,n.kerasVersion=`tfjs-layers ${$h}`,n.backend="TensorFlow.js",n}toJSON(e,n=!0){let o=aT(this.updatedConfig());return n?JSON.stringify(o):o}call(e,n){return z(()=>{e=vt(e);let o=new Hs;for(let s=0;s<this.inputs.length;++s)o.add(this.inputs[s],e[s]);return Il(this.outputs,o,n)})}computeMask(e,n){return z(()=>{e=vt(e);let o;return n==null?o=Gs(null,e.length):o=vt(n),this.runInternalGraph(e,o)[1]})}computeOutputShape(e){let n=Mc(e);if(n.length!==this.inputLayers.length)throw new B(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let o={};for(let u=0;u<n.length;u++){let l=this.inputLayers[u],p=n[u],m=l.name+"_0_0";o[m]=p}let s=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(vh);if(s.length>1)for(let u of s){let l=this.nodesByDepth[u];for(let p of l){let m=p.outboundLayer;if(this.inputLayers.map(g=>g.id).indexOf(m.id)!==-1)continue;let c=[];for(let g=0;g<p.inboundLayers.length;g++){let b=p.inboundLayers[g],T=p.nodeIndices[g],x=p.tensorIndices[g],I=`${b.name}_${T}_${x}`,k=o[I];c.push(k)}let d=m.computeOutputShape(Rr(c)),f=Mc(d),h=m.inboundNodes.indexOf(p);for(let g=0;g<f.length;g++){let b=`${m.name}_${h}_${g}`;o[b]=f[g]}}}let a=[],i=[];for(let u=0;u<this.outputLayers.length;u++){let l=this.outputLayers[u],p=this.outputLayersNodeIndices[u],m=this.outputLayersTensorIndices[u],c=`${l.name}_${p}_${m}`;i.push(c)}for(let u=0;u<i.length;u++){let l=i[u];ns(l in o),a.push(o[l])}return Rr(a)}runInternalGraph(e,n){n==null&&(n=Gs(null,e.length));let o={};for(let l=0;l<this.inputs.length;++l){let p=this.inputs[l],m=e[l],c=n[l];o[p.id]=[m,c]}let s=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(vh);for(let l of s){let p=this.nodesByDepth[l];for(let m of p){let c=m.outboundLayer,d=m.inputTensors,f=m.outputTensors,h=new Array;for(let g of d)g.id in o&&h.push(o[g.id]);if(h.length===d.length){let g={},b,T,x,I;if(m.callArgs!=null&&(g=m.callArgs),h.length===1){let[k,A]=h[0];g.mask==null&&(g.mask=A),x=vt(c.call(k,g)),I=vt(c.computeMask(k,A)),b=[k],T=[A]}else b=h.map(k=>k[0]),T=h.map(k=>k[1]),g.mask==null&&(g.mask=T),x=vt(c.call(b,g)),I=vt(c.computeMask(b,T));if(c.activityRegularizer)throw new Ae("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let k=0;k<f.length;++k){let A=f[k],R=x[k],F=I[k];o[A.id]=[R,F]}}}}let a=[],i=[],u=[];for(let l of this.outputs){ns(l.id in o,`Could not compute output ${l.name} : ${l.id}`);let[p,m]=o[l.id];u.push(p.shape),a.push(p),i.push(m)}return[a,i,u]}buildNodeConversionMap(e){let n={},o;for(let s of this.layers){o=s instanceof Xn?1:0;for(let a=0;a<s.inboundNodes.length;a++){let i=Xn.nodeKey(s,a);this.containerNodes.has(i)&&(n[i]=o,o+=1)}}return n}getLayer(e,n){if(n!=null){if(this.layers.length<=n)throw new B(`Was asked to retrieve layer at index ${n}, but model only has ${this.layers.length} layer(s).`);return this.layers[n]}else if(e==null)throw new B("Provide either a layer name or layer index");for(let o of this.layers)if(o.name===e)return o;throw new B(`No such layer: ${e}`)}calculateLosses(){return z(()=>{let e=[];for(let n of this.layers)for(let o=0;o<n.inboundNodes.length;++o){let s=Xn.nodeKey(n,o);this.containerNodes.has(s)&&e.push(...n.calculateLosses())}return e})}getConfig(){let e={name:this.name},n=this.buildNodeConversionMap(this.layers),o=[];for(let i of this.layers){let u=i.getClassName(),l=i.getConfig(),p=[];for(let c=0;c<i.inboundNodes.length;c++){let d=i.inboundNodes[c],f=Xn.nodeKey(i,c),h={};if(this.containerNodes.has(f)){if(d.callArgs)try{JSON.stringify(d.callArgs),h=d.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(d.inboundLayers.length>0){let g=[];for(let b=0;b<d.inboundLayers.length;b++){let T=d.inboundLayers[b],x=d.nodeIndices[b],I=d.tensorIndices[b],k=Xn.nodeKey(T,x),A=n[k];A==null&&(A=0),g.push([T.name,A,I,h])}p.push(g)}}}let m={};m.name=i.name,m.className=u,m.config=l,m.inboundNodes=p,o.push(m)}e.layers=o;let s=[];for(let i=0;i<this.inputLayers.length;i++){let u=this.inputLayers[i],l=this.inputLayersNodeIndices[i],p=Xn.nodeKey(u,l);if(!this.containerNodes.has(p))continue;let m=n[p];m==null&&(m=0);let c=this.inputLayersTensorIndices[i];s.push([u.name,m,c])}e.inputLayers=s;let a=[];for(let i=0;i<this.outputLayers.length;i++){let u=this.outputLayers[i],l=this.outputLayersNodeIndices[i],p=Xn.nodeKey(u,l);if(!this.containerNodes.has(p))continue;let m=n[p];m==null&&(m=0);let c=this.outputLayersTensorIndices[i];a.push([u.name,m,c])}return e.outputLayers=a,e}static fromConfig(e,n,o={},s=!1){let a={},i={};function u(b,T){b.name in i?i[b.name].push(T):i[b.name]=[T]}function l(b,T){let x=[],I;for(let k of T){let A=k[0],R=k[1],F=k[2];if(I=k[3]==null?{}:k[3],!(A in a)){u(b,T);return}let P=a[A];if(P.inboundNodes.length<=R){u(b,T);return}let L=P.inboundNodes[R];x.push(L.outputTensors[F])}x.length>0&&b.apply(Rr(x),I)}function p(b){let T=b.name,x=In(b,n.customObjects!=null?n.customObjects:{});x.setFastWeightInitDuringBuild(s),a[T]=x,b.inboundNodes.forEach(k=>{if(!(k instanceof Array))throw new B(`Corrupted configuration, expected array for nodeData: ${k}`);u(x,k)})}let m=n.name,c=n.layers;for(let b of c)p(b);for(;!XF(i);)for(let b of c){let T=a[b.name];if(T.name in i){let x=i[T.name];delete i[T.name];for(let I of x)l(T,I)}}let d=[],f=[],h=n.inputLayers;for(let b of h){let T=b[0],x=b[1],I=b[2];ns(T in a);let A=a[T].inboundNodes[x].outputTensors;d.push(A[I])}let g=n.outputLayers;for(let b of g){let T=b[0],x=b[1],I=b[2];ns(T in a);let A=a[T].inboundNodes[x].outputTensors;f.push(A[I])}return new e({inputs:d,outputs:f,name:m})}get stateful(){if(this._stateful)throw new B("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){z(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function XJ(r,t,e){let n=t.length;if(r==null||Array.isArray(r)&&r.length===0)return t.map(o=>null);if(n===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&t[0]in r?[r[t[0]]]:[r];if(Array.isArray(r)){if(r.length!==n)throw new Error(`Provided ${e} is an array of ${r.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let o=[];return t.forEach(s=>{s in r?o.push(r[s]):o.push(null)}),o}else throw new Error(`The model has multiple (${n}) outputs, so ${e} must be either an array with ${n} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(r)}`)}function iT(r,t){return XJ(r,t,"classWeight")}async function uT(r,t,e,n){if(t!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(e!=null){let o=z(()=>{if(r.shape.length===1)return fn(r);if(r.shape.length===2){if(r.shape[1]>1)return np(r,1);if(r.shape[1]===1)return _(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await o.data());Re(o);let a=[];return s.forEach(i=>{if(e[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(e[i])}),qt(a,"float32")}else return null}function DE(r,t){return E(r,t)}var YJ=32;function PE(r,t){let e,n,o=t;e=o.xs,n=o.ys,y.assert(e!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=RE("input",r.inputNames,e),a=RE("output",r.outputNames,n),i=s[0].shape[0];y.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),y.assert(a.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let u=0;u<s.length;u++)y.assert(s[u].shape[0]===i,()=>`Batch size mismatch: input ${r.inputNames[u]} has ${s[u].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);for(let u=0;u<a.length;u++)y.assert(a[u].shape[0]===i,()=>`Batch size mismatch: output ${r.outputNames[u]} has ${a[u].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);return{xs:s,ys:a}}function RE(r,t,e){if(e instanceof We)return[e];if(Array.isArray(e))return y.assert(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${r} keys ${t}.`),e;{let n=[];for(let o of t){if(e[o]==null)throw new B(`The feature data generated by the dataset lacks the required ${r} key '${o}'.`);n.push(e[o])}return n}}function ZJ(r){if(r.length===3)throw new Ae("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}async function ME(r,t,e){let n=e.batchesPerEpoch!=null;if(y.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),y.assert(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),y.assert(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),y.assert(!n||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),y.assert(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let o=e.validationData!=null,s,a;if(o)if(FE(e.validationData))y.assert(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{let g=ZJ(e.validationData);s=g.xs,a=g.ys}let i=r.makeTrainFunction(),u=r.getDedupedMetricsNames(),l;o?l=u.slice().concat(u.map(g=>"val_"+g)):l=u.slice();let p=Jy(e.callbacks,e.yieldEvery),m=e.verbose==null?1:e.verbose,{callbackList:c,history:d}=eT(p,m,e.epochs,null,null,QJ(t,e),null,o,l);c.setModel(r),r.history=d,await c.onTrainBegin(),r.stopTraining_=!1;let f=e.initialEpoch==null?0:e.initialEpoch,h=await t.iterator();for(;f<e.epochs;){let g={};await c.onEpochBegin(f);let b=0,T=0;for(n||(h=await t.iterator());!n||b<e.batchesPerEpoch;){let x=await h.next();if(n&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${b} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:I,ys:k}=PE(r,x.value),A={};A.batch=T,A.size=I[0].shape[0],await c.onBatchBegin(T,A);let R=[];if(e.classWeight!=null){let L=iT(e.classWeight,r.outputNames);for(let O=0;O<L.length;++O)R.push(await uT(k[O],null,L[O]))}let F=I.concat(k).concat(R),P=i(F);Re(F);for(let L=0;L<u.length;++L){let O=u[L],G=P[L];A[O]=G,zt(G)}await c.onBatchEnd(T,A),Xy(A),T++,b++}if(n?b>=e.batchesPerEpoch:x.done){if(o){let I;FE(e.validationData)?I=vt(await r.evaluateDataset(e.validationData,{batches:e.validationBatches})):I=vt(r.evaluate(s,a,{batchSize:e.validationBatchSize==null?YJ:e.validationBatchSize,verbose:0}));for(let k=0;k<r.metricsNames.length;++k)g[`val_${r.metricsNames[k]}`]=I[k]}break}if(r.stopTraining_)break}if(await c.onEpochEnd(f,g),f++,r.stopTraining_)break}return await c.onTrainEnd(),await r.history.syncData(),r.history}finally{r.isTraining=!1}}function QJ(r,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(r.size)&&(e=r.size),e}function FE(r){return typeof r.iterator=="function"}function JJ(r){return typeof r.next=="function"}async function EE(r,t,e){e=e||{};let n=e.batches!=null,o=r.testFunction,s=[];if(e.verbose>0)throw new Ae("Verbose mode is not implemented yet.");y.assert(!n||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);let a=JJ(t)?t:await t.iterator(),i=0,u=0;for(;!n||u<e.batches;){let l=await a.next();if(s=z(()=>{if(l.value){let{xs:p,ys:m}=PE(r,l.value),c=p.concat(m),d=z(()=>o(c));if(Re(c),u===0)for(let h=0;h<d.length;++h)s.push(de(0));let f=c[0].shape[0];for(let h=0;h<d.length;++h){let g=d[h],b=s[h];s[h]=z(()=>X(s[h],E(f,g))),u>0&&Re(b)}Re(d),i+=f,++u}return s}),l.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<s.length;++l){let p=s[l];s[l]=ce(s[l],i),Re(p)}return Rr(s)}function pT(r){y.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function Kc(r,t,e){return r==null?[null]:Array.isArray(r)?r.map(n=>uu(n,t,e-t)):uu(r,t,e-t)}function lT(r,t){return z(()=>r==null?null:Array.isArray(r)?r.map(e=>lT(e,t)):Gy(r,t.dtype==="int32"?t:re(t,"int32")))}function mT(r,t){let e=[],n=0,o=null;for(;n<r;)o=n+t,o>=r&&(o=r),e.push([n,o]),n=o;return e}async function e9(r,t,e,n,o,s,a,i,u,l,p,m,c,d,f){o==null&&(o=32),s==null&&(s=1),p==null&&(p=!0),c==null&&(c=0);let h=!1;if(u!=null&&l!=null&&(h=!0),f!=null&&(h=!0,d==null))throw new B("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=r.checkNumSamples(e,o,d,"steps_per_epoch"),b;g!=null&&(b=rn(0,g)),a==null&&(a=1);let{callbackList:T,history:x}=eT(i,a,s,c,g,d,o,h,m);T.setModel(r),r.history=x,await T.onTrainBegin(),r.stopTraining_=!1;for(let I=c;I<s;++I){await T.onEpochBegin(I);let k={};if(d!=null)throw new Ae("stepsPerEpoch mode is not implemented yet.");{if(p==="batch")throw new Ae("batch shuffling is not implemneted yet");p&&y.shuffle(b);let A=qt(b),R=mT(g,o);for(let F=0;F<R.length;++F){let P={};if(await T.onBatchBegin(F,P),z(()=>{let L=R[F][0],O=R[F][1],G=uu(A,L,O-L);P.batch=F,P.size=O-L;let W=lT(e,G),H=t(W);for(let V=0;V<n.length;++V){let q=n[V],Z=H[V];P[q]=Z,zt(Z)}if(F===R.length-1&&h){let V=r.testLoop(u,l,o);for(let q=0;q<n.length;++q){let Z=n[q],j=V[q];zt(j),k["val_"+Z]=j}}}),await T.onBatchEnd(F,P),Xy(P),r.stopTraining_)break}A.dispose()}if(await T.onEpochEnd(I,k),r.stopTraining_)break}return await T.onTrainEnd(),await r.history.syncData(),r.history}async function LE(r,t,e,n={}){if(r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;let o,s,a,i,u,l,p,m,c;try{let d=n.batchSize==null?32:n.batchSize;pT(d);let f=!1,h=await r.standardizeUserData(t,e,n.sampleWeight,n.classWeight,f,d);o=h[0],s=h[1],c=h[2];let g=!1,b;if(n.validationData!=null&&n.validationData.length>0){if(g=!0,n.validationData.length===2)u=n.validationData[0],l=n.validationData[1];else throw n.validationData.length===3?new Ae("validationData including sample weights is not supported yet."):new B(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let P=!0,L=await r.standardizeUserData(u,l,null,null,P,d);p=L[0],m=L[1],b=p.concat(m)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){g=!0;let P=Math.floor(o[0].shape[0]*(1-n.validationSplit)),L=o[0].shape[0];p=Kc(o,P,L),a=o,o=Kc(o,0,P),m=Kc(s,P,L),i=s,s=Kc(s,0,P),b=p.concat(m)}else n.validationSteps!=null&&(g=!0);let T=o.concat(s).concat(c);r.checkTrainableWeightsConsistency();let x=r.makeTrainFunction(),I=r.getDedupedMetricsNames(),k,A;g?(r.makeTestFunction(),k=r.testFunction,A=I.slice().concat(I.map(P=>"val_"+P))):(k=null,b=[],A=I.slice());let R=Jy(n.callbacks,n.yieldEvery);return await e9(r,x,T,I,d,n.epochs,n.verbose,R,k,b,n.shuffle,A,n.initialEpoch,null,null)}finally{r.isTraining=!1,qs(o,t),qs(s,e),qs(a,t),qs(i,e),qs(p,u),qs(m,l),c!=null&&Re(c)}}function EA(r){let t=[];r instanceof We&&(r=[r]);for(let e=0;e<r.length;++e){let n=r[e];if(n.rank===1)t.push(lu(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(n)}}return t}function qs(r,t){if(r==null)return;let e=[];if(t instanceof We)e.push(t.id);else if(Array.isArray(t))t.forEach(o=>e.push(o.id));else if(t!=null)for(let o in t){let s=t[o];e.push(s.id)}let n=[];if(r instanceof We)e.indexOf(r.id)===-1&&n.push(r);else if(Array.isArray(r))r.forEach(o=>{e.indexOf(o.id)===-1&&n.push(o)});else if(r!=null)for(let o in r){let s=r[o];e.indexOf(s.id)===-1&&n.push(s)}n.forEach(o=>{o.isDisposed||o.dispose()})}function t9(r){return r instanceof We}function LA(r){return Array.isArray(r)}function _E(r){return!t9(r)&&!LA(r)}function $E(r,t,e,n=!0,o=""){if(t==null||t.length===0){if(r!=null){let a=!1;if(LA(r)&&r.length>0)a=!0;else if(_E(r)){for(let i in r)if(r.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new B(`Error when checking model ${o} expected no data, but got ${r}`)}return[]}if(r==null)return t.map(a=>null);let s;if(_E(r)){r=r,s=[];for(let a of t){if(r[a]==null)throw new B(`No data provided for "${a}". Need data for each key in: ${t}`);s.push(r[a])}}else if(LA(r)){if(r=r,r.length!==t.length)throw new B(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,t.length>1)throw new B(`The model ${o} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=EA(s),e!=null)for(let a=0;a<t.length;++a){if(e[a]==null)continue;let i=s[a];if(i.shape.length!==e[a].length)throw new B(`Error when checking ${o}: expected ${t[a]} to have ${e[a].length} dimension(s). but got array with shape ${i.shape}`);for(let u=0;u<e[a].length;++u){if(u===0&&!n)continue;let l=i.shape[u],p=e[a][u];if(p!=null&&p>=0&&l!==p)throw new B(`${o} expected a batch of elements where each example has shape [${e[a].slice(1,e[a].length)}] (i.e.,tensor shape [*,${e[a].slice(1,e[a].length)}]) but the ${o} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function r9(r,t,e){let n=Ws(r.map(s=>s.shape[0]));n.sort();let o=Ws(t.map(s=>s.shape[0]));if(o.sort(),n.length>1)throw new B(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(o.length>1)throw new B(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(n.length>0&&o.length>0&&!y.arraysEqual(n,o))throw new B(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${o[0]} target sample(s).`)}function n9(r,t,e){let n=[wi,Wc,kl];for(let o=0;o<r.length;++o){let s=r[o],a=t[o],i=e[o];if(a!=null){if(a===kl&&s.shape[s.shape.length-1]===1)throw new B(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(a)!==-1){let u=s.shape.slice(1),l=i.slice(1);for(let p=0;p<u.length;++p){let m=u[p],c=l[p];if(c!=null&&m!==c)throw new B(`A target Tensor with shape ${s.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function BE(r,t,e,n=!0,o=""){let s;if(Array.isArray(r)){if(r.length!==t.length)throw new B(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(t.length>1)throw new B(`The model expects ${t.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(e!=null)for(let a=0;a<t.length;++a){if(e[a]==null)continue;let i=s[a];if(i.shape.length!==e[a].length)throw new B(`Error when checking ${o}: expected ${t[a]} to have ${e[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let u=0;u<e[a].length;++u){if(u===0&&!n)continue;let l=i.shape[u],p=e[a][u];if(p!=null&&p!==l)throw new B(`Error when checking ${o}: expected ${t[a]} to have shape ${JSON.stringify(e[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function o9(r,t){if(r==null||Array.isArray(r)&&r.length===0)return t.map(n=>[]);let e;if(typeof r=="string"||typeof r=="function")e=[r];else if(Array.isArray(r)||typeof r=="object")e=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(e))return t.map(n=>e);{let n=[];for(let o of t){let s=e.hasOwnProperty(o)?e[o]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var s9="layers-model",Yn=class extends Xn{constructor(e){super(e);this.isTraining=!1}summary(e,n,o=console.log){if(!this.built)throw new B("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");wE(this,e,n,o)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=AE(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Vr))throw new B("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let n=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let i in e.loss)if(this.outputNames.indexOf(i)===-1)throw new B(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(let i of this.outputNames)e.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),n.push(tT(e.loss[i]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new B(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);n=e.loss.map(u=>tT(u))}else{let i=tT(e.loss);this.outputs.forEach(u=>{n.push(i)})}this.lossFunctions=n,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){let u=this.internalOutputShapes[i],l=this.outputNames[i];this.feedOutputNames.push(l),this.feedOutputShapes.push(u),this.feedLossFns.push(this.lossFunctions[i])}let o=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Va("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(o.indexOf(i)!==-1)continue;let u=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([u,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});let s=o9(e.metrics,this.outputNames),a=(i,u,l)=>{this.outputNames.length>1&&(u=this.outputNames[i]+"_"+u),this.metricsNames.push(u),this.metricsTensors.push([l,i])};Va("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(o.indexOf(i)!==-1)continue;let u=s[i];(p=>{let m="",c,d,f;for(let h of p){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let b=this.internalOutputShapes[i];b[b.length-1]===1||this.lossFunctions[i]===Wc?["accuracy","acc"].indexOf(h)!==-1?d=Mh:["crossentropy","ce"].indexOf(h)!==-1&&(d=nT):this.lossFunctions[i]===Uc?["accuracy","acc"].indexOf(h)!==-1?d=oT:["crossentropy","ce"].indexOf(h)!==-1&&(d=FA):["accuracy","acc"].indexOf(h)!==-1?d=Eh:["crossentropy","ce"].indexOf(h)!==-1&&(d=Lh);let T;["accuracy","acc"].indexOf(h)!==-1?T="acc":["crossentropy","ce"].indexOf(h)!==-1&&(T="ce"),f=d,c=m+T}else f=SE(h),c=m+_h(h);let g;Va(c,()=>{g=f}),a(i,c,g)}})(u)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,n,o={}){let s=o.batchSize==null?32:o.batchSize;pT(s);let a=!0,i=this.standardizeUserDataXY(e,n,a,s);try{let u=i[0].concat(i[1]);this.makeTestFunction();let l=this.testFunction,p=this.testLoop(l,u,s,o.verbose,o.steps);return Rr(p)}finally{qs(i[0],e),qs(i[1],n)}}async evaluateDataset(e,n){return this.makeTestFunction(),EE(this,e,n)}checkNumSamples(e,n,o,s="steps"){let a;if(o!=null){if(a=null,n!=null)throw new B(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${n}`)}else if(e!=null)Array.isArray(e)?a=e[0].shape[0]:a=e.shape[0];else throw new B(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return a}execute(e,n){if(Array.isArray(n)&&n.length===0)throw new B("`outputs` is an empty Array, which is not allowed.");let o=Array.isArray(n),s=o?n:[n],a=this.retrieveSymbolicTensors(s),i=new Hs;if(e instanceof We&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new B(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)i.add(this.inputs[l],e[l])}else for(let l of this.inputs){let p=e[l.name];if(p==null)throw new B(`No value is provided for the model's input ${l.name}`);i.add(l,p)}let u=Il(a,i);return o?u:u[0]}retrieveSymbolicTensors(e){let n=Gs(null,e.length),o=e.length;for(let s of this.layers){let a=Array.isArray(s.output)?s.output:[s.output],i=a.map(u=>u.name);for(let u=0;u<e.length;++u){let l=i.indexOf(e[u]);if(l!==-1&&(n[u]=a[l],o--),o===0)break}if(o===0)break}if(o>0){let s=[];throw n.forEach((a,i)=>{a==null&&s.push(e[i])}),new B(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return n}predictLoop(e,n=32,o=!1){return z(()=>{let s=this.checkNumSamples(e);if(o)throw new Ae("Verbose predictLoop() is not implemented yet.");let a=mT(s,n),i=this.outputs.map(u=>[]);for(let u=0;u<a.length;++u)z(()=>{let p=a[u][0],m=a[u][1],c=Kc(e,p,m),d=[];if(Array.isArray(c))for(let h=0;h<c.length;++h)d.push({key:this.inputs[h],value:c[h]});else d.push({key:this.inputs[0],value:c});let f=new Hs(d);return Il(this.outputs,f)}).forEach((p,m)=>i[m].push(p));return Rr(i.map(u=>mt(u,0)))})}predict(e,n={}){let o=EA(e);BE(o,this.inputNames,this.feedInputShapes,!1);try{let s=n.batchSize==null?32:n.batchSize;return pT(s),this.predictLoop(o,s)}finally{qs(o,e)}}predictOnBatch(e){BE(e,this.inputNames,this.feedInputShapes,!0);let n=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,n)}standardizeUserDataXY(e,n,o=!0,s){if(this.optimizer_==null)throw new Hr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let i=0;i<this.feedOutputShapes.length;++i){let u=this.feedOutputShapes[i];this.feedLossFns[i]===Uc?a.push(u.slice(0,u.length-1).concat([1])):a.push(u)}if(e=$E(e,this.feedInputNames,this.feedInputShapes,!1,"input"),n=$E(n,this.feedOutputNames,a,!1,"target"),r9(e,n,null),n9(n,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!==0)throw new B(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,n]}async standardizeUserData(e,n,o,s,a=!0,i){let[u,l]=this.standardizeUserDataXY(e,n,a,i);if(o!=null)throw new Error("sample weight is not supported yet.");let p=null;if(s!=null){let m=iT(s,this.outputNames);p=[];for(let c=0;c<m.length;++c)p.push(await uT(l[c],null,m[c]))}return[u,l,p]}testLoop(e,n,o,s=0,a){return z(()=>{let i=this.checkNumSamples(n,o,a,"steps"),u=[];if(s>0)throw new Ae("Verbose mode is not implemented yet.");if(a!=null)throw new Ae("steps mode in testLoop() is not implemented yet");{let l=mT(i,o),p=qt(rn(0,i));for(let m=0;m<l.length;++m){let c=l[m][0],d=l[m][1],f=uu(p,c,d-c),h=lT(n,f),g=e(h);if(m===0)for(let b=0;b<g.length;++b)u.push(de(0));for(let b=0;b<g.length;++b){let T=g[b];u[b]=X(u[b],E(d-c,T))}}for(let m=0;m<u.length;++m)u[m]=ce(u[m],i)}return u})}getDedupedMetricsNames(){let e=this.metricsNames,n=[];for(let o=0;o<e.length;++o){let s=e[o],a=s;bA(e,s)>1&&(a+=`_${bA(e.slice(0,o),s)}`),n.push(a)}return n}makeTrainFunction(){return e=>{let n=[],o=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],u=()=>{let c=[];for(let g=0;g<this.inputs.length;++g)c.push({key:this.inputs[g],value:o[g]});let d=new Hs(c),f=Il(this.outputs,d,{training:!0}),h;for(let g=0;g<this.lossFunctions.length;++g){let b=this.lossFunctions[g],T=b(s[g],f[g]);a[g]!=null&&(T=DE(T,a[g]));let x=$t(T);n.push(x),g===0?h=T:h=X(h,T)}for(let g=0;g<this.metricsTensors.length;++g){let b;if(this.outputs.length>1&&g<this.outputs.length)b=n[g];else{let T=this.metricsTensors[g][0],x=this.metricsTensors[g][1];b=$t(T(s[x],f[x]))}zt(b),i.push(b)}return h=$t(h),this.calculateLosses().forEach(g=>{h=X(h,g)}),h},l=this.collectedTrainableWeights.map(c=>c.read()),p=!0;return[this.optimizer_.minimize(u,p,l)].concat(i)}}makeTestFunction(){this.testFunction=e=>z(()=>{let n=[],o,s=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let p=0;p<this.inputs.length;++p)i.push({key:this.inputs[p],value:s[p]});let u=new Hs(i),l=Il(this.outputs,u);for(let p=0;p<this.lossFunctions.length;++p){let m=this.lossFunctions[p],c=$t(m(a[p],l[p]));p===0?o=c:o=X(o,c),n.push(o)}for(let p=0;p<this.metricsTensors.length;++p){let m=this.metricsTensors[p][0],c=this.metricsTensors[p][1],d=$t(m(a[c],l[c]));n.push(d)}return n})}async fit(e,n,o={}){return LE(this,e,n,o)}async fitDataset(e,n){return ME(this,e,n)}async trainOnBatch(e,n){let o=await this.standardizeUserData(e,n),s=o[0],a=o[1],u=this.makeTrainFunction()(s.concat(a)),l=[];for(let p of u){let m=await p.data();l.push(m[0])}return Re(u),qs(o[0],e),qs(o[1],n),Rr(l)}getNamedWeights(e){let n=[],o=e!=null&&e.trainableOnly,s=o?this.trainableWeights:this.weights,a=this.getWeights(o);for(let i=0;i<s.length;++i)o&&!s[i].trainable||n.push({name:s[i].originalName,tensor:a[i]});return n}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let n=ch().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=n-ch().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Us(this.loss);else if(Array.isArray(this.loss)){for(let n of this.loss)if(typeof n!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(n=>Us(n))}else{let n=Object.keys(this.loss);e={};let o=this.loss;for(let s of n)if(typeof o[s]=="string")e[s]=Us(o[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Us(_h(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Us(_h(e)));{let e={};for(let n in this.metrics)e[n]=Us(_h(this.metrics[n]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let n=Sl(e.optimizer_config),o=In(n),s;if(typeof e.loss=="string")s=iu(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(i=>iu(i));else if(e.loss!=null){s={};for(let i in e.loss)s[i]=iu(e.loss[i])}let a;if(Array.isArray(e.metrics))a=e.metrics.map(i=>iu(i));else if(e.metrics!=null){a={};for(let i in e.metrics)a[i]=iu(e.metrics[i])}this.compile({loss:s,metrics:a,optimizer:o})}async save(e,n){if(typeof e=="string"){let p=Pn.getSaveHandlers(e);if(p.length===0)throw new B(`Cannot find any save handlers for URL '${e}'`);if(p.length>1)throw new B(`Found more than one (${p.length}) save handlers for URL '${e}'`);e=p[0]}if(e.save==null)throw new B("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let o=await Pn.encodeWeights(this.getNamedWeights(n)),s=!1,a=null,u={modelTopology:this.toJSON(a,s),format:s9,generatedBy:`TensorFlow.js tfjs-layers v${$h}`,convertedBy:null};if((n==null?!1:n.includeOptimizer)&&this.optimizer!=null){u.trainingConfig=this.getTrainingConfig();let p="optimizer",{data:m,specs:c}=await Pn.encodeWeights(await this.optimizer.getWeights(),p);o.specs.push(...c),o.data=Pn.concatenateArrayBuffers([o.data,m])}return this.userDefinedMetadata!=null&&(MA(this.userDefinedMetadata,this.name,!0),u.userDefinedMetadata=this.userDefinedMetadata),u.weightData=o.data,u.weightSpecs=o.specs,e.save(u)}setUserDefinedMetadata(e){MA(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};Yn.className="Model";J.registerClass(Yn);var cT=class extends Yn{};cT.className="Functional";J.registerClass(cT);async function OE(r,t){"modelTopology"in r||(r={modelTopology:r}),r=r;let e=r.modelTopology;e.model_config!=null&&(e=e.model_config);let n=Sl(e),o=In(n,t);if(r.weightsManifest!=null){let s=await Pn.loadWeights(r.weightsManifest,r.pathPrefix,o.weights.map(i=>i.originalName)),a={};for(let i of o.weights)a[i.originalName]=s[i.originalName];o.loadWeights(a),Re(s)}return o}async function zE(r,t){if(t==null&&(t={}),typeof r=="string"){let e=Pn.getLoadHandlers(r,t);if(e.length===0)e.push(Pn.browserHTTPRequest(r,t));else if(e.length>1)throw new B(`Found more than one (${e.length}) load handlers for URL '${r}'`);r=e[0]}return a9(r,void 0,t)}async function a9(r,t,e){if(e==null&&(e={}),r.load==null)throw new B("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let n=await r.load(),o=n.modelTopology;o.model_config!=null&&(o=o.model_config);let s=e.strict==null?!0:e.strict,a=n.weightData!=null&&n.weightSpecs!=null&&s,i=In(Sl(o),t,a),u=n.trainingConfig;if(u!=null&&i.loadTrainingConfig(u),n.userDefinedMetadata!=null&&i.setUserDefinedMetadata(n.userDefinedMetadata),n.weightData!=null){if(n.weightSpecs==null)throw new B("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:l,optimizerWeights:p}=i9(n.weightData,n.weightSpecs);i.loadWeights(l,s),i.optimizer!=null&&p.length>0&&await i.optimizer.setWeights(p),Re(l),Re(p.map(m=>m.tensor))}return i}function i9(r,t){let e=Pn.decodeWeights(r,t),n={},o=[];return t.forEach(s=>{s.group==="optimizer"?o.push({name:s.name,tensor:e[s.name]}):n[s.name]=e[s.name]}),{modelWeights:n,optimizerWeights:o}}var dT=class extends Yn{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Ip("sequential_"),e.layers!=null)for(let n of e.layers)this.add(n)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(o=>o<0))throw new B(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let n=e instanceof dT||e instanceof Yn,o;if(n){if(o=e,o.outputs.length!==1)throw new B("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(o.inputs.length!==1)throw new B("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new B("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=Ky({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(n)this.outputs=o.outputs,this.inputs=o.inputs;else{if(e.inboundNodes.length!==1)throw new B(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new B("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=kA(this.outputs[0])}this.inboundNodes=[],new mu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Gs(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,n){return this.model==null&&this.build(),this.model.call(e,n)}build(e){if(rt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Yn({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,n,o=console.log){this.built||this.build(),super.summary(e,n,o)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,n,o={}){if(!this.built)throw new Hr("The model needs to be compiled before being used.");return this.model.evaluate(e,n,o)}async evaluateDataset(e,n){if(!this.built)throw new Hr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,n)}predict(e,n={}){return this.model==null&&this.build(),this.model.predict(e,n)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,n,o={}){if(!this.built)throw new Hr("The model needs to be compiled before being used.");return this.model.fit(e,n,o)}async fitDataset(e,n){if(!this.built)throw new Hr("The model needs to be compiled before being used.");return this.model.fitDataset(e,n)}async trainOnBatch(e,n){return this.model.trainOnBatch(e,n)}static fromConfig(e,n,o={},s=!1){let a,i={};if(n instanceof Array){if(n[0].className==null||n[0].className==="Merge")throw new B("Legacy serialization format not supported yet.");a=n}else y.assert(n.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=n.layers,delete n.layers,i=n;let u=new e(i);if(!(u instanceof dT))throw new Ae(`Sequential.fromConfig called on non-Sequential input: ${u}`);for(let l of a){let m=In(l,void 0,s);s&&m.setFastWeightInitDuringBuild(!0),u.add(m)}return u}set stopTraining(e){if(this.model==null)throw new B("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new B("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let n of this.layers){let o={};o.className=n.getClassName(),o.config=n.getConfig(),e.push(o)}return{name:this.name,layers:e}}},vl=dT;vl.className="Sequential";J.registerClass(vl);function u9(r){return new Yn(r)}function p9(r){return new vl(r)}function l9(r,t){return t==null&&(t={}),zE(r,t)}function _A(r){return Ky(r)}function m9(r,t){zc.registerCallbackConstructor(r,t)}var sn=class extends J.Serializable{getConfig(){return{}}},fT=class extends sn{apply(t,e=1){return lP(t,e)}};fT.className="elu";J.registerClass(fT);var hT=class extends sn{apply(t){return hy(t)}};hT.className="selu";J.registerClass(hT);var gT=class extends sn{apply(t){return tn(t)}};gT.className="relu";J.registerClass(gT);var bT=class extends sn{apply(t){return z(()=>mp(6,tn(t)))}};bT.className="relu6";J.registerClass(bT);var yT=class extends sn{apply(t){return t}};yT.className="linear";J.registerClass(yT);var TT=class extends sn{apply(t){return Ln(t)}};TT.className="sigmoid";J.registerClass(TT);var xT=class extends sn{apply(t){return cP(t)}};xT.className="hardSigmoid";J.registerClass(xT);var IT=class extends sn{apply(t){return su(t)}};IT.className="softplus";J.registerClass(IT);var CT=class extends sn{apply(t){return mP(t)}};CT.className="softsign";J.registerClass(CT);var kT=class extends sn{apply(t){return op(t)}};kT.className="tanh";J.registerClass(kT);var Vc=class extends sn{apply(t,e=-1){return gc(t,e)}};Vc.className="softmax";J.registerClass(Vc);var ST=class extends sn{apply(t,e=-1){return ny(t,e)}};ST.className="logSoftmax";J.registerClass(ST);var vT=class extends sn{apply(t,e=1){return z(()=>E(Ln(E(t,e)),t))}};vT.className="swish";J.registerClass(vT);var AT=class extends sn{apply(t){return z(()=>E(t,op(su(t))))}};AT.className="mish";J.registerClass(AT);function Xa(r){return r.getClassName()}function $A(r,t={}){return Si(r,J.SerializationMap.getMap().classNameMap,t,"activation")}function Ya(r){if(r==null){let t={};return t.className="linear",t.config={},$A(t)}if(typeof r=="string"){let t={};return t.className=r,t.config={},$A(t)}else return r instanceof sn?r:$A(r)}function BA(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var wT=class extends J.Serializable{},vp=class extends wT{constructor(e){super();BA(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return z(()=>{let n=It([1]);return this.hasL1&&(n=X(n,he(E(this.l1,Gt(e))))),this.hasL2&&(n=X(n,he(E(this.l2,fl(e))))),_(n,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,n){return new e({l1:n.l1,l2:n.l2})}};vp.className="L1L2";J.registerClass(vp);function WE(r){return BA(r),new vp({l1:r!=null?r.l1:null,l2:0})}function KE(r){return BA(r),new vp({l2:r!=null?r.l2:null,l1:0})}var GE={l1l2:"L1L2"};function gt(r){return Cc(r)}function UE(r,t={}){return Si(r,J.SerializationMap.getMap().classNameMap,t,"regularizer")}function wt(r){if(r==null)return null;if(typeof r=="string"){let e={className:r in GE?GE[r]:r,config:{}};return UE(e)}else return r instanceof wT?r:UE(r)}var Hc=class extends $e{constructor(e){super(e??{});this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,n){e=_e(e);let o=tn(e);return this.maxValue!=null&&(o=Gr(o,0,this.maxValue)),o}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},n=super.getConfig();return Object.assign(e,n),e}};Hc.className="ReLU";J.registerClass(Hc);var qc=class extends $e{constructor(e){super(e??{});this.DEFAULT_ALPHA=.3;e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){let o=_e(e);return uc(o,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}};qc.className="LeakyReLU";J.registerClass(qc);var jc=class extends $e{constructor(e){super(e??{});this.DEFAULT_ALPHA_INITIALIZER="zeros";if(e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ct(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=wt(e.alphaRegularizer),this.alphaConstraint=Xt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new B(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=rt(e);let n=e.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)n[s-1]=1;this.alpha=this.addWeight("alpha",n,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let o={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)o[s]=e[s];this.inputSpec=[new At({ndim:e.length,axes:o})],this.built=!0}call(e,n){return e=_e(e),dc(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Pt(this.alphaInitializer),alphaRegularizer:gt(this.alphaRegularizer),alphaConstraint:jt(this.alphaConstraint),sharedAxes:this.sharedAxes},n=super.getConfig();return Object.assign(e,n),e}};jc.className="PReLU";J.registerClass(jc);var Xc=class extends $e{constructor(e){super(e??{});this.DEFAULT_ALPHA=1;if(e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Ae(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){let o=_e(e);return up(o)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}};Xc.className="ELU";J.registerClass(Xc);var Yc=class extends $e{constructor(e){super(e??{});this.DEFAULT_THETA=1;e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,n){let o=_e(e);return E(o,re(ir(o,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},n=super.getConfig();return Object.assign(e,n),e}};Yc.className="ThresholdedReLU";J.registerClass(Yc);var Zc=class extends $e{constructor(e){super(e??{});this.DEFAULT_AXIS=1;e==null&&(e={}),this.softmax=new Vc().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,n){let o=_e(e);return this.softmax(o,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}};Zc.className="Softmax";J.registerClass(Zc);function Ap(r,t,e){if(typeof r=="number")return Gs(r,t);if(r.length!==t)throw new B(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${r.length} elements.`);for(let n=0;n<t;++n){let o=r[n];if(!aP(o))throw new B(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(r)} including a non-integer number ${o}`)}return r}function $n(r,t,e,n,o=1){if(r==null)return r;let s=t+(t-1)*(o-1),a;return e==="same"?a=r:a=r-s+1,Math.floor((a+n-1)/n)}function Za(r,t,e,n){if(r==null)return null;if(n==="valid")r=r*t+Ha([e-t,0]);else if(n==="same")r=r*t;else throw new B(`Unsupport padding mode: ${n}.`);return r}function Bh(r,t){return z(()=>(Wt(t),t==="channelsFirst"?ze(r,[0,2,3,1]):r))}function OA(r,t){return z(()=>(Wt(t),t==="channelsFirst"?ze(r,[0,2,3,4,1]):r))}function d9(r,t,e,n=1,o="valid",s,a=1){return z(()=>{if(s==null&&(s=yn()),Wt(s),r.shape.length!==3)throw new B(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(t.shape.length!==3)throw new B(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new B(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(s==="channelsFirst"&&(r=ze(r,[0,2,1])),o==="causal")throw new Ae("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=qb(r,t,n,o==="same"?"same":"valid","NWC",a);return e!=null&&(i=Tn(i,e)),i})}function VE(r,t,e,n=[1,1],o="valid",s,a,i=null){return z(()=>{if(s==null&&(s=yn()),Wt(s),r.rank!==3&&r.rank!==4)throw new B(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(t.rank!==3&&t.rank!==4)throw new B(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let u=Bh(r,s);if(o==="causal")throw new Ae("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=dp.conv2d({x:u,filter:t,strides:n,pad:o==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:e,activation:i}),s==="channelsFirst"&&(u=ze(u,[0,3,1,2])),u})}function f9(r,t,e,n=[1,1,1],o="valid",s,a){return z(()=>{if(s==null&&(s=yn()),Wt(s),r.rank!==4&&r.rank!==5)throw new B(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(t.rank!==4&&t.rank!==5)throw new B(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let i=OA(r,s);if(o==="causal")throw new Ae("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Xb(i,t,n,o==="same"?"same":"valid","NDHWC",a),e!=null&&(i=Tn(i,e)),s==="channelsFirst"&&(i=ze(i,[0,4,1,2,3])),i})}var Nl=class extends $e{constructor(e,n){super(n);this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(Nl.verifyArgs(n),this.rank=e,rr(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Ae(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Ap(n.kernelSize,e,"kernelSize"),this.strides=Ap(n.strides==null?1:n.strides,e,"strides"),this.padding=n.padding==null?"valid":n.padding,bn(this.padding),this.dataFormat=n.dataFormat==null?"channelsLast":n.dataFormat,Wt(this.dataFormat),this.activation=Ya(n.activation),this.useBias=n.useBias==null?!0:n.useBias,this.biasInitializer=Ct(n.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Xt(n.biasConstraint),this.biasRegularizer=wt(n.biasRegularizer),this.activityRegularizer=wt(n.activityRegularizer),this.dilationRate=Ap(n.dilationRate==null?1:n.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new B(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new B(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new B(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(ns("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!My(e.kernelSize,"number",1,3))throw new B(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Xa(this.activation),useBias:this.useBias,biasInitializer:Pt(this.biasInitializer),biasRegularizer:gt(this.biasRegularizer),activityRegularizer:gt(this.activityRegularizer),biasConstraint:jt(this.biasConstraint)},n=super.getConfig();return Object.assign(e,n),e}},wp=class extends Nl{constructor(e,n){super(e,n);this.kernel=null;wp.verifyArgs(n),this.filters=n.filters,rr(this.filters,"filters"),this.kernelInitializer=Ct(n.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Xt(n.kernelConstraint),this.kernelRegularizer=wt(n.kernelRegularizer)}build(e){e=rt(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new B(`The channel dimension of the input should be defined. Found ${e[n]}`);let o=e[n],s=this.kernelSize.concat([o,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[n]:o}}],this.built=!0}call(e,n){return z(()=>{e=_e(e);let o,s=this.bias==null?null:this.bias.read(),a=Ey(this.activation.getClassName());if(a!=null&&this.rank===2)o=VE(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(this.rank===1)o=d9(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)o=VE(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)o=f9(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Ae("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(o=this.activation.apply(o))}return o})}computeOutputShape(e){e=rt(e);let n=[],o=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<o.length;++a){let i=$n(o[a],this.kernelSize[a],this.padding,this.strides[a],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[a]);n.push(i)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(n),s.push(this.filters)):(s.push(this.filters),s=s.concat(n)),s}getConfig(){let e={filters:this.filters,kernelInitializer:Pt(this.kernelInitializer),kernelRegularizer:gt(this.kernelRegularizer),kernelConstraint:jt(this.kernelConstraint)},n=super.getConfig();return Object.assign(e,n),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new B(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},zA=class extends wp{constructor(t){super(2,t),zA.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!My(t.kernelSize,"number",1,2))throw new B(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}},Al=zA;Al.className="Conv2D";J.registerClass(Al);var GA=class extends wp{constructor(t){super(3,t),GA.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new B(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}},wl=GA;wl.className="Conv3D";J.registerClass(wl);var Qc=class extends Al{constructor(e){super(e);if(this.inputSpec=[new At({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new B(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=rt(e),e.length!==4)throw new B("Input should have rank 4; Received input shape: "+JSON.stringify(e));let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new B("The channel dimension of the inputs should be defined. Found `None`.");let o=e[n],s=this.kernelSize.concat([this.filters,o]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new At({ndim:4,axes:{[n]:o}})],this.built=!0}call(e,n){return z(()=>{let o=_e(e);if(o.shape.length!==4)throw new B(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${o.shape.length}`);let s=o.shape,a=s[0],i,u;this.dataFormat==="channelsFirst"?(i=2,u=3):(i=1,u=2);let l=s[i],p=s[u],m=this.kernelSize[0],c=this.kernelSize[1],d=this.strides[0],f=this.strides[1],h=Za(l,d,m,this.padding),g=Za(p,f,c,this.padding),b=[a,h,g,this.filters];this.dataFormat!=="channelsLast"&&(o=ze(o,[0,2,3,1]));let T=jb(o,this.kernel.read(),b,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(T=ze(T,[0,3,1,2])),this.bias!=null&&(T=Tn(T,this.bias.read(),this.dataFormat)),this.activation!=null&&(T=this.activation.apply(T)),T})}computeOutputShape(e){e=rt(e);let n=e.slice(),o,s,a;this.dataFormat==="channelsFirst"?(o=1,s=2,a=3):(o=3,s=1,a=2);let i=this.kernelSize[0],u=this.kernelSize[1],l=this.strides[0],p=this.strides[1];return n[o]=this.filters,n[s]=Za(n[s],l,i,this.padding),n[a]=Za(n[a],p,u,this.padding),n}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Qc.className="Conv2DTranspose";J.registerClass(Qc);var Jc=class extends wl{constructor(e){super(e);if(this.inputSpec=[new At({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new B(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=rt(e),e.length!==5)throw new B("Input should have rank 5; Received input shape: "+JSON.stringify(e));let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new B("The channel dimension of the inputs should be defined. Found `None`.");let o=e[n],s=this.kernelSize.concat([this.filters,o]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new At({ndim:5,axes:{[n]:o}})],this.built=!0}call(e,n){return z(()=>{let o=_e(e);if(o.shape.length!==5)throw new B(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${o.shape.length}`);let s=o.shape,a=s[0],i,u,l;this.dataFormat==="channelsFirst"?(l=2,i=3,u=4):(l=1,i=2,u=3);let p=s[l],m=s[i],c=s[u],d=this.kernelSize[0],f=this.kernelSize[1],h=this.kernelSize[2],g=this.strides[0],b=this.strides[1],T=this.strides[2],x=Za(p,g,d,this.padding),I=Za(m,b,f,this.padding),k=Za(c,T,h,this.padding),A=[a,x,I,k,this.filters];this.dataFormat!=="channelsLast"&&(o=ze(o,[0,2,3,4,1]));let R=Zb(o,this.kernel.read(),A,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(R=ze(R,[0,4,1,2,3])),this.bias!==null&&(R=Tn(R,this.bias.read(),this.dataFormat)),this.activation!==null&&(R=this.activation.apply(R)),R})}computeOutputShape(e){e=rt(e);let n=e.slice(),o,s,a,i;this.dataFormat==="channelsFirst"?(o=1,s=2,a=3,i=4):(o=4,s=1,a=2,i=3);let u=this.kernelSize[0],l=this.kernelSize[1],p=this.kernelSize[2],m=this.strides[0],c=this.strides[1],d=this.strides[2];return n[o]=this.filters,n[s]=Za(n[s],m,u,this.padding),n[a]=Za(n[a],c,l,this.padding),n[i]=Za(n[i],d,p,this.padding),n}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Jc.className="Conv3DTranspose";J.registerClass(Jc);var NT=class extends wp{constructor(e,n){super(e,n);this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform";this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform";this.depthwiseKernel=null;this.pointwiseKernel=null;if(n.filters==null)throw new B("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(n.kernelInitializer!=null||n.kernelRegularizer!=null||n.kernelConstraint!=null)throw new B("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(n.padding!=null&&n.padding!=="same"&&n.padding!=="valid")throw new B(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(n.padding)}`);this.depthMultiplier=n.depthMultiplier==null?1:n.depthMultiplier,this.depthwiseInitializer=Ct(n.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=wt(n.depthwiseRegularizer),this.depthwiseConstraint=Xt(n.depthwiseConstraint),this.pointwiseInitializer=Ct(n.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=wt(n.pointwiseRegularizer),this.pointwiseConstraint=Xt(n.pointwiseConstraint)}build(e){if(e=rt(e),e.length<this.rank+2)throw new B(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null||e[n]<0)throw new B(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[n])}`);let o=e[n],s=this.kernelSize.concat([o,this.depthMultiplier]),a=[];for(let u=0;u<this.rank;++u)a.push(1);a.push(o*this.depthMultiplier,this.filters);let i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new At({ndim:this.rank+2,axes:{[n]:o}})],this.built=!0}call(e,n){return z(()=>{e=_e(e);let o;if(this.rank===1)throw new Ae("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=ze(e,[0,2,3,1])),o=gy(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(o=Tn(o,this.bias.read(),this.dataFormat)),this.activation!=null&&(o=this.activation.apply(o)),this.dataFormat==="channelsFirst"&&(o=ze(o,[0,3,1,2])),o})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Pt(this.depthwiseInitializer),e.pointwiseInitializer=Pt(this.pointwiseInitializer),e.depthwiseRegularizer=gt(this.depthwiseRegularizer),e.pointwiseRegularizer=gt(this.pointwiseRegularizer),e.depthwiseConstraint=jt(this.depthwiseConstraint),e.pointwiseConstraint=jt(this.pointwiseConstraint),e}};NT.className="SeparableConv";var ed=class extends NT{constructor(t){super(2,t)}};ed.className="SeparableConv2D";J.registerClass(ed);var UA=class extends wp{constructor(t){super(1,t),UA.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){let t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!My(t.kernelSize,"number",1,1))throw new B(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}},td=UA;td.className="Conv1D";J.registerClass(td);var rd=class extends $e{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,n){return z(()=>{if(e=_e(e),this.dataFormat==="channelsLast"){let o=wh(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return wh(o,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let o=wh(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return wh(o,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}};rd.className="Cropping2D";J.registerClass(rd);var nd=class extends $e{constructor(e){super(e);this.DEFAULT_SIZE=[2,2];this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Wt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,oP(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let n=e[2]==null?null:this.size[0]*e[2],o=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],n,o]}else{let n=e[1]==null?null:this.size[0]*e[1],o=e[2]==null?null:this.size[1]*e[2];return[e[0],n,o,e[3]]}}call(e,n){return z(()=>{let o=_e(e),s=o.shape;if(this.dataFormat==="channelsFirst"){o=ze(o,[0,2,3,1]);let a=this.size[0]*s[2],i=this.size[1]*s[3],u=this.interpolation==="nearest"?fp.resizeNearestNeighbor(o,[a,i]):fp.resizeBilinear(o,[a,i]);return ze(u,[0,3,1,2])}else{let a=this.size[0]*s[1],i=this.size[1]*s[2];return this.interpolation==="nearest"?fp.resizeNearestNeighbor(o,[a,i]):fp.resizeBilinear(o,[a,i])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},n=super.getConfig();return Object.assign(e,n),e}};nd.className="UpSampling2D";J.registerClass(nd);function h9(r,t,e=[1,1],n="valid",o,s){return z(()=>{o==null&&(o=yn()),Wt(o);let a=Bh(r,o);if(r.rank!==4)throw new B(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(t.rank!==4)throw new B(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return a=ip(a,t,e,n==="same"?"same":"valid","NHWC",s),o==="channelsFirst"&&(a=ze(a,[0,3,1,2])),a})}var od=class extends Nl{constructor(e){super(2,e);this.depthwiseKernel=null;this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Ct(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Xt(e.depthwiseConstraint),this.depthwiseRegularizer=wt(e.depthwiseRegularizer)}build(e){if(e=rt(e),e.length<4)throw new B(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let n=this.dataFormat==="channelsFirst"?1:3;if(e[n]==null||e[n]<0)throw new B(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[n]}).`);let o=e[n],s=[this.kernelSize[0],this.kernelSize[1],o,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[o*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return z(()=>{e=_e(e);let o=h9(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(o=Tn(o,this.bias.read(),this.dataFormat)),this.activation!=null&&(o=this.activation.apply(o)),o})}computeOutputShape(e){e=rt(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],o=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=$n(n,this.kernelSize[0],this.padding,this.strides[0]),i=$n(o,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,a,i]:[e[0],a,i,s]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Pt(this.depthwiseInitializer),e.depthwiseRegularizer=gt(this.depthwiseRegularizer),e.depthwiseConstraint=jt(this.depthwiseRegularizer),e}};od.className="DepthwiseConv2D";J.registerClass(od);function WA(r,t,e,n){if(Array.isArray(r)){if(t!=null||e!=null)throw new B("When inputs is an array, neither initialState or constants should be provided");n!=null&&(e=r.slice(r.length-n,r.length),r=r.slice(0,r.length-n)),r.length>1&&(t=r.slice(1,r.length)),r=r[0]}function o(s){return s==null||Array.isArray(s)?s:[s]}return t=o(t),e=o(e),{inputs:r,initialState:t,constants:e}}function KA(r,t,e,n=!1,o,s,a=!1,i=!1){return z(()=>{let u=t.shape.length;if(u<3)throw new B(`Input should be at least 3D, but is ${u}D.`);let l=[1,0].concat(rn(2,u));if(t=ze(t,l),s!=null)throw new Ae("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=re(re(o,"bool"),"float32"),o.rank===u-1&&(o=Lr(o,-1)),o=ze(o,l)),n&&(t=Nr(t,0),o!=null&&(o=Nr(o,0)));let p=[],m,c=e,d=t.shape[0],f=Wr(t),h;o!=null&&(h=Wr(o));for(let b=0;b<d;++b){let T=f[b],x=z(()=>r(T,c));if(o==null)m=x[0],c=x[1];else{let I=z(()=>{let k=h[b],A=le(_r(k),k),R=X(E(x[0],k),E(c[0],A)),F=c.map((P,L)=>X(E(x[1][L],k),E(P,A)));return{output:R,newStates:F}});m=I.output,c=I.newStates}i&&p.push(m)}let g;return i&&(g=Tr(p,1)),[m,g,c]})}var VA=class extends $e{constructor(e){super(e);let n;if(e.cell==null)throw new B("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?n=new Fl({cells:e.cell}):n=e.cell,n.stateSize==null)throw new B("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=n,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new At({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return rn(0,e).map(n=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Wy(e)&&(e=e[0]),e=e;let n=this.cell.stateSize;Array.isArray(n)||(n=[n]);let o=n[0],s;if(this.returnSequences?s=[e[0],e[1],o]:s=[e[0],o],this.returnState){let a=[];for(let i of n)a.push([e[0],i]);return[s].concat(a)}else return s}computeMask(e,n){return z(()=>{Array.isArray(n)&&(n=n[0]);let o=this.returnSequences?n:null;if(this.returnState){let s=this.states.map(a=>null);return[o].concat(s)}else return o})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,n=[];for(let o=0;o<e;++o)n.push(null);return n}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Ae("Constants support is not implemented in RNN yet.");Wy(e)&&(e=e[0]),e=e;let o=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new At({shape:[o,null,...s]});let a=[e[0]].concat(e.slice(2));this.cell.build(a);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!y.arraysEqual(this.stateSpec.map(u=>u.shape[u.shape.length-1]),i))throw new B(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(u=>new At({shape:[null,u]}));this.stateful&&this.resetStates()}resetStates(e,n=!1){z(()=>{if(!this.stateful)throw new _n("Cannot call resetStates() on an RNN Layer that is not stateful.");let o=this.inputSpec[0].shape[0];if(o==null)throw new B("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>It([o,s])):this.states_=[It([o,this.cell.stateSize])];else if(e==null)Re(this.states_),this.keptStates!=null&&(Re(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>It([o,s])):this.states_[0]=It([o,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new B(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);n===!0?this.keptStates.push(this.states_.slice()):Re(this.states_);for(let s=0;s<this.states_.length;++s){let a=e[s],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,u=[o,i];if(!y.arraysEqual(a.shape,u))throw new B(`State ${s} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${a.shape}`);this.states_[s]=a}}this.states_=this.states_.map(s=>zt(s.clone()))})}apply(e,n){let o=n==null?null:n.initialState,s=n==null?null:n.constants;n==null&&(n={});let a=WA(e,o,s,this.numConstants);e=a.inputs,o=a.initialState,s=a.constants;let i=[],u=[];if(o!=null){n.initialState=o,i=i.concat(o),this.stateSpec=[];for(let p of o)this.stateSpec.push(new At({shape:p.shape}));u=u.concat(this.stateSpec)}if(s!=null&&(n.constants=s,i=i.concat(s),this.numConstants=s.length),i[0]instanceof on){let p=[e].concat(i),m=this.inputSpec.concat(u),c=this.inputSpec;this.inputSpec=m;let d=super.apply(p,n);return this.inputSpec=c,d}else return super.apply(e,n)}call(e,n){return z(()=>{let o=n==null?null:n.mask,s=n==null?null:n.training,a=n==null?null:n.initialState;e=_e(e),a==null&&(this.stateful?a=this.states_:a=this.getInitialState(e));let i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==i)throw new B(`RNN Layer has ${i} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let u={training:s},p=KA((h,g)=>{let b=this.cell.call([h].concat(g),u);return[b[0],b.slice(1)]},e,a,this.goBackwards,o,null,this.unroll,this.returnSequences),m=p[0],c=p[1],d=p[2];this.stateful&&this.resetStates(d,s);let f=this.returnSequences?c:m;return this.returnState?[f].concat(d):f})}getInitialState(e){return z(()=>{let n=It(e.shape);return n=he(n,[1,2]),n=lu(n),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(o=>o>1?zy(n,[1,o]):n):this.cell.stateSize>1?[zy(n,[1,this.cell.stateSize])]:[n]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),n={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(n.numConstants=this.numConstants);let o=this.cell.getConfig();return this.getClassName()===VA.className&&(n.cell={className:this.cell.getClassName(),config:o}),{...o,...e,...n}}static fromConfig(e,n,o={}){let s=n.cell,a=In(s,o);return new e(Object.assign(n,{cell:a}))}},os=VA;os.className="RNN";J.registerClass(os);var fu=class extends $e{},Dl=class extends fu{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,rr(this.units,"units"),this.activation=Ya(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ct(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=wt(e.kernelRegularizer),this.recurrentRegularizer=wt(e.recurrentRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.kernelConstraint=Xt(e.kernelConstraint),this.recurrentConstraint=Xt(e.recurrentConstraint),this.biasConstraint=Xt(e.biasConstraint),this.dropout=dl([1,Ha([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=dl([1,Ha([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=rt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return z(()=>{if(e=e,e.length!==2)throw new B(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let o=e[1];e=e[0];let s=n.training==null?!1:n.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=hu({ones:()=>_r(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=hu({ones:()=>_r(o),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let a,i=this.dropoutMask,u=this.recurrentDropoutMask;i!=null?a=Vs(E(e,i),this.kernel.read()):a=Vs(e,this.kernel.read()),this.bias!=null&&(a=Tn(a,this.bias.read())),u!=null&&(o=E(o,u));let l=X(a,Vs(o,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){let e=super.getConfig(),n={units:this.units,activation:Xa(this.activation),useBias:this.useBias,kernelInitializer:Pt(this.kernelInitializer),recurrentInitializer:Pt(this.recurrentInitializer),biasInitializer:Pt(this.biasInitializer),kernelRegularizer:gt(this.kernelRegularizer),recurrentRegularizer:gt(this.recurrentRegularizer),biasRegularizer:gt(this.biasRegularizer),activityRegularizer:gt(this.activityRegularizer),kernelConstraint:jt(this.kernelConstraint),recurrentConstraint:jt(this.recurrentConstraint),biasConstraint:jt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...n}}};Dl.className="SimpleRNNCell";J.registerClass(Dl);var sd=class extends os{constructor(t){t.cell=new Dl(t),super(t)}call(t,e){return z(()=>{this.cell.dropoutMask!=null&&(Re(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Re(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:n,training:o,initialState:s})})}static fromConfig(t,e){return new t(e)}};sd.className="SimpleRNN";J.registerClass(sd);var Rl=class extends fu{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.resetAfter)throw new B("GRUCell does not support reset_after parameter set to true.");this.units=e.units,rr(this.units,"units"),this.activation=Ya(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ya(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ct(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=wt(e.kernelRegularizer),this.recurrentRegularizer=wt(e.recurrentRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.kernelConstraint=Xt(e.kernelConstraint),this.recurrentConstraint=Xt(e.recurrentConstraint),this.biasConstraint=Xt(e.biasConstraint),this.dropout=dl([1,Ha([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=dl([1,Ha([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=rt(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return z(()=>{if(e=e,e.length!==2)throw new B(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let o=n.training==null?!1:n.training,s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=hu({ones:()=>_r(e),rate:this.dropout,training:o,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=hu({ones:()=>_r(s),rate:this.recurrentDropout,training:o,count:3,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,i=this.recurrentDropoutMask,u,l,p;0<this.dropout&&this.dropout<1&&(e=E(e,a[0]));let m=Vs(e,this.kernel.read());this.useBias&&(m=Tn(m,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=E(s,i[0]));let c=this.recurrentKernel.read(),[d,f]=Dr(c,[2*this.units,this.units],c.rank-1),h=Vs(s,d),[g,b,T]=Dr(m,3,m.rank-1),[x,I]=Dr(h,2,h.rank-1);u=this.recurrentActivation.apply(X(g,x)),l=this.recurrentActivation.apply(X(b,I));let k=Vs(E(l,s),f);p=this.activation.apply(X(T,k));let A=X(E(u,s),E(X(1,Je(u)),p));return[A,A]})}getConfig(){let e=super.getConfig(),n={units:this.units,activation:Xa(this.activation),recurrentActivation:Xa(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Pt(this.kernelInitializer),recurrentInitializer:Pt(this.recurrentInitializer),biasInitializer:Pt(this.biasInitializer),kernelRegularizer:gt(this.kernelRegularizer),recurrentRegularizer:gt(this.recurrentRegularizer),biasRegularizer:gt(this.biasRegularizer),activityRegularizer:gt(this.activityRegularizer),kernelConstraint:jt(this.kernelConstraint),recurrentConstraint:jt(this.recurrentConstraint),biasConstraint:jt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...n}}};Rl.className="GRUCell";J.registerClass(Rl);var ad=class extends os{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Rl(t),super(t)}call(t,e){return z(()=>{this.cell.dropoutMask!=null&&(Re(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Re(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:n,training:o,initialState:s})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}};ad.className="GRU";J.registerClass(ad);var du=class extends fu{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,rr(this.units,"units"),this.activation=Ya(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ya(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ct(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=wt(e.kernelRegularizer),this.recurrentRegularizer=wt(e.recurrentRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.kernelConstraint=Xt(e.kernelConstraint),this.recurrentConstraint=Xt(e.recurrentConstraint),this.biasConstraint=Xt(e.biasConstraint),this.dropout=dl([1,Ha([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=dl([1,Ha([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var s;e=rt(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let o;if(this.useBias){if(this.unitForgetBias){let a=this.biasInitializer,i=this.units;o=new(s=class extends xn{apply(l,p){let m=a.apply([i]),c=new kp().apply([i]),d=a.apply([i*2]);return CA(CA(m,c),d)}},s.className="CustomInit",s)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,n){return z(()=>{let o=n.training==null?!1:n.training;if(e=e,e.length!==3)throw new B(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=hu({ones:()=>_r(e),rate:this.dropout,training:o,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=hu({ones:()=>_r(s),rate:this.recurrentDropout,training:o,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,u=this.recurrentDropoutMask,l,p,m,c;0<this.dropout&&this.dropout<1&&(e=E(e,i[0]));let d=Vs(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=E(s,u[0])),d=X(d,Vs(s,this.recurrentKernel.read())),this.useBias&&(d=Tn(d,this.bias.read()));let[f,h,g,b]=Dr(d,4,d.rank-1);l=this.recurrentActivation.apply(f),p=this.recurrentActivation.apply(h),m=X(E(p,a),E(l,this.activation.apply(g))),c=this.recurrentActivation.apply(b);let T=E(c,this.activation.apply(m));return[T,T,m]})}getConfig(){let e=super.getConfig(),n={units:this.units,activation:Xa(this.activation),recurrentActivation:Xa(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Pt(this.kernelInitializer),recurrentInitializer:Pt(this.recurrentInitializer),biasInitializer:Pt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:gt(this.kernelRegularizer),recurrentRegularizer:gt(this.recurrentRegularizer),biasRegularizer:gt(this.biasRegularizer),activityRegularizer:gt(this.activityRegularizer),kernelConstraint:jt(this.kernelConstraint),recurrentConstraint:jt(this.recurrentConstraint),biasConstraint:jt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...n}}};du.className="LSTMCell";J.registerClass(du);var id=class extends os{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new du(t),super(t)}call(t,e){return z(()=>{this.cell.dropoutMask!=null&&(Re(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Re(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:n,training:o,initialState:s})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}};id.className="LSTM";J.registerClass(id);var Fl=class extends fu{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let n of this.cells.slice().reverse())Array.isArray(n.stateSize)?e.push(...n.stateSize):e.push(n.stateSize);return e}call(e,n){return z(()=>{e=e;let o=e.slice(1),s=[];for(let u of this.cells.slice().reverse())Array.isArray(u.stateSize)?s.push(o.splice(0,u.stateSize.length)):s.push(o.splice(0,1));s.reverse();let a=[],i;for(let u=0;u<this.cells.length;++u){let l=this.cells[u];o=s[u],u===0?i=[e[0]].concat(o):i=[i[0]].concat(o),i=l.call(i,n),a.push(i.slice(1))}o=[];for(let u of a.slice().reverse())o.push(...u);return[i[0]].concat(o)})}build(e){Wy(e)&&(e=e[0]),e=e;let n;this.cells.forEach((o,s)=>{Va(`RNNCell_${s}`,()=>{o.build(e),Array.isArray(o.stateSize)?n=o.stateSize[0]:n=o.stateSize,e=[e[0],n]})}),this.built=!0}getConfig(){let e=super.getConfig(),n=a=>({className:a.getClassName(),config:a.getConfig()}),s={cells:this.cells.map(n)};return{...e,...s}}static fromConfig(e,n,o={}){let s=[];for(let a of n.cells)s.push(In(a,o));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let n of this.cells)e.push(...n.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let n of this.cells)e.push(...n.nonTrainableWeights);if(!this.trainable){let n=[];for(let o of this.cells)n.push(...o.trainableWeights);return n.concat(e)}return e}getWeights(){let e=[];for(let n of this.cells)e.push(...n.weights);return Dh(e)}setWeights(e){let n=[];for(let o of this.cells){let s=o.weights.length,a=e.splice(s);for(let i=0;i<o.weights.length;++i)n.push([o.weights[i],a[i]])}Lc(n)}};Fl.className="StackedRNNCells";J.registerClass(Fl);function hu(r){let{ones:t,rate:e,training:n=!1,count:o=1,dropoutFunc:s}=r,a=()=>s!=null?s(t(),e):Uy(t(),e),i=()=>Cp(a,t,n);return!o||o<=1?zt(i().clone()):Array(o).fill(void 0).map(i).map(l=>zt(l.clone()))}var DT=class extends os{constructor(e){if(e.unroll)throw new Ae("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Ae("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new At({ndim:5})]}call(e,n){return z(()=>{if(this.cell.dropoutMask!=null&&(Re(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Re(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),n&&n.constants)throw new B("ConvRNN2D cell does not support constants");let o=n==null?null:n.mask,s=n==null?null:n.training,a=n==null?null:n.initialState;return super.call(e,{mask:o,training:s,initialState:a})})}computeOutputShape(e){let n=this.computeSingleOutputShape(e);return this.returnSequences||(n=[n[0],...n.slice(2)]),this.returnState&&(n=[n,...Array(2).fill([e[0],...n.slice(-3)])]),n}getInitialState(e){return z(()=>{let{stateSize:n}=this.cell,o=e.shape,s=this.computeSingleOutputShape(o),a=[s[0],...s.slice(2)],i=It(a);return Array.isArray(n)?Array(n.length).fill(i):[i]})}resetStates(e,n=!1){z(()=>{if(!this.stateful)throw new _n("Cannot call resetStates() on an RNN Layer that is not stateful.");let o=this.inputSpec[0].shape,s=this.computeSingleOutputShape(o),a=[s[0],...s.slice(2)];if(o[0]==null)throw new B("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>It(a)):this.states_=[It(a)];else if(e==null)Re(this.states_),this.keptStates!=null&&(Re(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>It(a)):this.states_[0]=It(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new B(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);n?this.keptStates.push(this.states_.slice()):Re(this.states_);for(let u=0;u<this.states_.length;++u){let l=e[u],p=a;if(!y.arraysEqual(l.shape,p))throw new B(`State ${u} is incompatible with layer ${this.name}: expected shape=${p}, received shape=${l.shape}`);this.states_[u]=l}}this.states_=this.states_.map(u=>zt(u.clone()))})}computeSingleOutputShape(e){let{dataFormat:n,filters:o,kernelSize:s,padding:a,strides:i,dilationRate:u}=this.cell,l=n==="channelsFirst",p=e[l?3:2],m=e[l?4:3],c=$n(p,s[0],a,i[0],u[0]),d=$n(m,s[1],a,i[1],u[1]);return[...e.slice(0,2),...l?[o,c,d]:[c,d,o]]}};DT.className="ConvRNN2D";var Pl=class extends du{constructor(e){let{filters:n,kernelSize:o,strides:s,padding:a,dataFormat:i,dilationRate:u}=e;super({...e,units:n});this.filters=n,rr(this.filters,"filters"),this.kernelSize=Ap(o,2,"kernelSize"),this.kernelSize.forEach(l=>rr(l,"kernelSize")),this.strides=Ap(s||1,2,"strides"),this.strides.forEach(l=>rr(l,"strides")),this.padding=a||"valid",bn(this.padding),this.dataFormat=i||"channelsLast",Wt(this.dataFormat),this.dilationRate=Ap(u||1,2,"dilationRate"),this.dilationRate.forEach(l=>rr(l,"dilationRate"))}build(e){var u;e=rt(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new B(`The channel dimension of the input should be defined. Found ${e[n]}`);let o=e[n],s=4,a=this.kernelSize.concat([o,this.filters*s]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*s]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){let p=this.biasInitializer,m=this.filters;l=new(u=class extends xn{apply(d,f){let h=p.apply([m]),g=yr([m]),b=p.apply([m*2]);return Sc([h,g,b])}},u.className="CustomInit",u)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*s],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,n){return z(()=>{if(e.length!==3)throw new B(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=n.training||!1,s=e[0],a=e[1],i=e[2],u=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=hu({ones:()=>_r(s),rate:this.dropout,training:o,count:u,dropoutFunc:this.dropoutFunc}));let l=this.dropoutMask,p=(ae,pe,oe)=>!pe||!pe[oe]?ae:E(pe[oe],ae),m=p(s,l,0),c=p(s,l,1),d=p(s,l,2),f=p(s,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=hu({ones:()=>_r(a),rate:this.recurrentDropout,training:o,count:u,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,g=p(a,h,0),b=p(a,h,1),T=p(a,h,2),x=p(a,h,3),I=3,[k,A,R,F]=Dr(this.kernel.read(),u,I),[P,L,O,G]=this.useBias?Dr(this.bias.read(),u):[null,null,null,null];m=this.inputConv(m,k,P,this.padding),c=this.inputConv(c,A,L,this.padding),d=this.inputConv(d,R,O,this.padding),f=this.inputConv(f,F,G,this.padding);let[W,H,V,q]=Dr(this.recurrentKernel.read(),u,I);g=this.recurrentConv(g,W),b=this.recurrentConv(b,H),T=this.recurrentConv(T,V),x=this.recurrentConv(x,q);let Z=this.recurrentActivation.apply(X(m,g)),j=this.recurrentActivation.apply(X(c,b)),Y=X(E(j,i),E(Z,this.activation.apply(X(d,T)))),se=E(this.recurrentActivation.apply(X(f,x)),this.activation.apply(Y));return[se,se,Y]})}getConfig(){let{units:e,...n}=super.getConfig(),o={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...n,...o}}inputConv(e,n,o,s){let a=ts(e,n,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return o?Tn(a,o,this.dataFormat):a}recurrentConv(e,n){return ts(e,n,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Pl.className="ConvLSTM2DCell";J.registerClass(Pl);var ud=class extends DT{constructor(t){let e=new Pl(t);super({...t,cell:e})}static fromConfig(t,e){return new t(e)}};ud.className="ConvLSTM2D";J.registerClass(ud);var Ml=class extends $e{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let n=e.shape,o=[];for(let s=0;s<this.noiseShape.length;++s)o.push(this.noiseShape[s]==null?n[s]:this.noiseShape[s]);return o}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=_e(e);if(0<this.rate&&this.rate<1){let s=n.training==null?!1:n.training,a=this.getNoiseShape(o);return Cp(()=>Uy(o,this.rate,a,this.seed),()=>o,s)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},n=super.getConfig();return Object.assign(e,n),e}dispose(){return super.dispose()}};Ml.className="Dropout";J.registerClass(Ml);var pd=class extends Ml{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){let e=t.shape;return[e[0],1,e[2]]}};pd.className="SpatialDropout1D";J.registerClass(pd);var ld=class extends $e{constructor(e){super(e);this.activation=null;this.useBias=!0;this.kernel=null;this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let n=null;e.batchSize!=null&&(n=e.batchSize),this.batchInputShape=[n,e.inputDim]}this.units=e.units,rr(this.units,"units"),this.activation=Ya(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Xt(e.kernelConstraint),this.biasConstraint=Xt(e.biasConstraint),this.kernelRegularizer=wt(e.kernelRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.activityRegularizer=wt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=rt(e);let n=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[n,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:n}}],this.built=!0}computeOutputShape(e){e=rt(e);let n=e.slice();return n[n.length-1]=this.units,n}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=_e(e),s=Ey(this.activation.getClassName()),a;return s!=null?a=Vs(o,this.kernel.read(),s,this.bias?this.bias.read():null):(a=Vs(o,this.kernel.read()),this.bias!=null&&(a=Tn(a,this.bias.read())),this.activation!=null&&(a=this.activation.apply(a))),a})}getConfig(){let e={units:this.units,activation:Xa(this.activation),useBias:this.useBias,kernelInitializer:Pt(this.kernelInitializer),biasInitializer:Pt(this.biasInitializer),kernelRegularizer:gt(this.kernelRegularizer),biasRegularizer:gt(this.biasRegularizer),activityRegularizer:gt(this.activityRegularizer),kernelConstraint:jt(this.kernelConstraint),biasConstraint:jt(this.biasConstraint)},n=super.getConfig();return Object.assign(e,n),e}};ld.className="Dense";J.registerClass(ld);var md=class extends $e{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=rt(e);for(let n of e.slice(1))if(n==null)throw new B(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ks(e,1)]}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=_e(e);if(this.dataFormat==="channelsFirst"&&o.rank>1){let s=[0];for(let a=2;a<o.rank;++a)s.push(a);s.push(1),o=ze(o,s)}return pP(o)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let n=super.getConfig();return Object.assign(e,n),e}};md.className="Flatten";J.registerClass(md);var cd=class extends $e{constructor(e){super(e);this.supportsMasking=!0,this.activation=Ya(e.activation)}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=_e(e);return this.activation.apply(o)})}getConfig(){let e={activation:Xa(this.activation)},n=super.getConfig();return Object.assign(e,n),e}};cd.className="Activation";J.registerClass(cd);var dd=class extends $e{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,n){return z(()=>(e=_e(e),iP(e,this.n)))}getConfig(){let e={n:this.n},n=super.getConfig();return Object.assign(e,n),e}};dd.className="RepeatVector";J.registerClass(dd);var fd=class extends $e{constructor(e){super(e);this.targetShape=e.targetShape;for(let n=0;n<this.targetShape.length;++n)this.isUnknown(this.targetShape[n])&&(this.targetShape[n]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,n){let o="Total size of new array must be unchanged.",s=n.slice(),a=1,i=null;for(let l=0;l<s.length;++l){let p=s[l];if(this.isUnknown(p))if(i===null)i=l;else throw new B("Can only specifiy one unknown dimension.");else a*=p}let u=Ks(e);if(i!==null){if(a===0||u%a!==0)throw new B(o);s[i]=u/a}else if(u!==a)throw new B(o);return s}computeOutputShape(e){let n=!1;for(let o=0;o<e.length;++o)if(this.isUnknown(e[o])){n=!0;break}return n?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=_e(e),s=o.shape,a=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return _(o,a)})}getConfig(){let e={targetShape:this.targetShape},n=super.getConfig();return Object.assign(e,n),e}};fd.className="Reshape";J.registerClass(fd);var hd=class extends $e{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let n=rn(1,e.dims.length+1);if(!y.arraysEqual(e.dims.slice().sort(),n))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new At({ndim:this.dims.length+1})]}computeOutputShape(e){e=rt(e);let n=e.slice();return this.dims.forEach((o,s)=>{n[s+1]=e[o]}),n}call(e,n){return ze(_e(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},n=super.getConfig();return Object.assign(e,n),e}};hd.className="Permute";J.registerClass(hd);var gd=class extends $e{constructor(e){super(e??{});this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),n={maskValue:this.maskValue};return Object.assign(n,e),n}computeMask(e,n){let o=_e(e),s=-1;return hh(au(o,this.maskValue),s)}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=_e(e),s=-1,a=!0,i=hh(au(o,this.maskValue),s,a);return E(o,re(i,o.dtype))})}};gd.className="Masking";J.registerClass(gd);var bd=class extends $e{constructor(e){super(e);this.embeddings=null;this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform";if(e.batchInputShape==null&&e.inputShape==null){let n=null;e.batchSize!=null&&(n=e.batchSize),e.inputLength==null?this.batchInputShape=[n,null]:this.batchInputShape=[n].concat(vt(e.inputLength))}this.inputDim=e.inputDim,rr(this.inputDim,"inputDim"),this.outputDim=e.outputDim,rr(this.outputDim,"outputDim"),this.embeddingsInitializer=Ct(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=wt(e.embeddingsRegularizer),this.activityRegularizer=wt(e.activityRegularizer),this.embeddingsConstraint=Xt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,n){return z(()=>this.maskZero?(e=_e(e),au(e,we(e))):null)}computeOutputShape(e){if(e=rt(e),this.inputLength==null)return[...e,this.outputDim];let n=vt(this.inputLength);if(n.length!==e.length-1)throw new B(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let o=0;for(let s=0;s<n.length;++s){let a=n[s],i=e[s+1];if(a!=null&&i!=null&&a!==i)throw new B(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);a==null&&(n[o]=i),o++}}return[e[0],...n,this.outputDim]}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=_e(e);o.dtype!=="int32"&&(o=pu(o,"int32"));let s=Gy(this.embeddings.read(),_(o,[o.size]));return _(s,rt(this.computeOutputShape(o.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Pt(this.embeddingsInitializer),embeddingsRegularizer:gt(this.embeddingsRegularizer),activityRegularizer:gt(this.activityRegularizer),embeddingsConstraint:jt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},n=super.getConfig();return Object.assign(e,n),e}};bd.className="Embedding";J.registerClass(bd);var gu=class extends $e{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Ae}computeElementwiseOpOutputShape(e,n){if(e==null||n==null)return null;if(e.length<n.length)return this.computeElementwiseOpOutputShape(n,e);if(n.length===0)return e;let o=e.slice(0,e.length-n.length);for(let s=0;s<n.length;++s){let a=e[e.length-n.length+s],i=n[s];if(a==null||i==null||a<0||i<0)o.push(null);else if(a===1)o.push(i);else if(i===1)o.push(a);else{if(a!==i)throw new B("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(n));o.push(a)}}return o}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[rt(e)]),e=e,e.length<2)throw new B(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let n=[];for(let a of e)a!=null&&a[0]!==null&&n.push(a[0]);if(n=Ws(n),n.length>1)throw new B(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let o=e[0]==null?null:e[0].slice(1);for(let a=1;a<e.length;++a){let i=e[a]==null?null:e[a].slice(1);o=this.computeElementwiseOpOutputShape(o,i)}let s=e.map(a=>a.length);e.indexOf(null)===-1&&Ws(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,n){return z(()=>{if(e=e,this.reshapeRequired){let o=[],s=e.map(a=>a.rank);if(s.indexOf(null)===-1){let a=Ha(s);for(let i of e){let u=i.rank;for(let l=0;l<a-u;++l)i=lu(i,1);o.push(i)}return this.mergeFunction(o)}else{let a=!1;for(let l of e){let p=l.rank;if(p==null){let m=l.shape,c=m[0],d=m.slice(1).concat([c]),f=_(l,[c].concat(Ks(m.slice(1))));f=ze(f,[1,0]),f=_(f,d),o.push(f),a=!0}else if(p>1){let m=rn(1,p).concat([0]);o.push(ze(l,m)),a=!0}else o.push(l)}let i=this.mergeFunction(o),u=i.rank;if(a){if(u==null){let l=i.shape,p=l.length,m=l[p-1],c=[m].concat(l.slice(0,l.length-1));i=_(ze(_(i,[-1,m]),[1,0]),c)}else if(u>1){let l=[u-1].concat(rn(0,u-1));i=ze(i,l)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let n;e[0]==null?n=null:n=e[0].slice(1);for(let s=1;s<e.length;++s){let a=e[s]==null?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let o=[];for(let s of e)s!=null&&s[0]!==null&&o.push(s[0]);return o=Ws(o),o.length===1?n=o.concat(n):n=[null].concat(n),n}computeMask(e,n){return z(()=>{if(n==null)return null;if(!Array.isArray(n))throw new B("`mask` should be an Array");if(!Array.isArray(e))throw new B("`inputs` should be an Array");if(n.length!==e.length)throw new B(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${n.length})`);if(n.every(s=>s==null))return null;n=n.map(s=>s==null?s:Lr(s,0));let o=n[0];for(let s=1;s<n.length-1;++s)o=en(o,n[s]);return o})}},yd=class extends gu{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=X(e,t[n]);return e})}};yd.className="Add";J.registerClass(yd);var Td=class extends gu{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=E(e,t[n]);return e})}};Td.className="Multiply";J.registerClass(Td);var xd=class extends gu{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=X(e,t[n]);return E(1/t.length,e)})}};xd.className="Average";J.registerClass(xd);var Id=class extends gu{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=rs(e,t[n]);return e})}};Id.className="Maximum";J.registerClass(Id);var Cd=class extends gu{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=mp(e,t[n]);return e})}};Cd.className="Minimum";J.registerClass(Cd);var kd=class extends gu{constructor(e){super(e);this.DEFAULT_AXIS=-1;e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new B("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let n=!0;for(let s of e)if(s!=null){n=!1;break}if(n)return;let o=[];for(let s=0;s<e.length;++s){let a=e[s].slice();a.splice(this.axis,1);let i=!1;for(let u of o)if(y.arraysEqual(u,a)){i=!0;break}i||o.push(a)}if(o.length>1)throw new B("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return z(()=>Sc(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new B("A `Concatenate` layer should be called on a list of inputs.");let n=e,o=n[0].slice(),s=this.axis<0?o.length+this.axis:this.axis;for(let a of n.slice(1)){if(o[s]==null||a[s]==null){o[s]=null;break}o[s]+=a[s]}return o}computeMask(e,n){if(n==null)return null;if(!Array.isArray(n))throw new B("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new B("`inputs` should be an array for Concatenate");if(n.length!==e.length)throw new B(`Mismatch in the length of mask (${n.length}) and the legnth of inputs (${e.length})`);return z(()=>{let o=!0;if(n.forEach(i=>{if(i!=null){o=!1;return}}),o)return null;let s=[];for(let i=0;i<e.length;++i)n[i]==null?s.push(re(_r(e[i]),"bool")):n[i].rank<e[i].rank?s.push(Lr(n[i],-1)):s.push(n[i]);let a=mt(s,this.axis);return _b(a,-1,!1)})}getConfig(){let e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}};kd.className="Concatenate";J.registerClass(kd);function Oh(r,t){for(;r<0;)r+=t;return r}function g9(r,t,e){if(r.shape.length>3||t.shape.length>3)throw new Ae("batchDot is not implemented for tensors of 4D or higher rank yet");if(y.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),y.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),r.dtype==="complex64"||t.dtype==="complex64")throw new Ae("batchDot is not implemented for complex64-type Tensors yet.");let n=r.shape.length,o=t.shape.length;e==null&&(e=[n-1,o-2]);let s=e;return z(()=>{let a;if(n>o){a=n-o;let u=[];for(let l=0;l<a;++l)u.push(1);t=_(t,t.shape.concat(u))}else if(o>n){a=o-n;let u=[];for(let l=0;l<a;++l)u.push(1);r=_(r,r.shape.concat(u))}else a=0;let i;if(r.shape.length===2&&t.shape.length===2)s[0]===s[1]?i=he(E(r,t),s[0]):i=he(E(ze(r,[1,0]),t),s[1]);else{let u=s[0]!==r.shape.length-1,l=s[1]===t.shape.length-1;i=Ke(r,t,u,l)}if(a>0){let u;n>o?u=n+o-3:u=n-1;let l=[];for(let p=u;p<u+a;++p)l.push(p);i=Bs(i,l)}return i.shape.length===1&&(i=Lr(i,1)),i})}var Sd=class extends gu{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){y.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let n=e[0],o=e[1];if(n.length>3||o.length>3)throw new Ae("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(n,o);if(n[s[0]]!==o[s[1]])throw new B(`Dimension incompatibility: ${n[s[0]]} !== ${o[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new B(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let n=e[0],o=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((a,i)=>Oh(a,e[i].shape.length)):s=[Oh(this.axes,n.shape.length),Oh(this.axes,o.shape.length)],this.normalize&&(n=Rh(n,s[0]),o=Rh(o,s[1])),g9(n,o,s)}interpretAxes(e,n){let o;return Array.isArray(this.axes)?o=this.axes:o=[Oh(this.axes,e.length),Oh(this.axes,n.length)],o}computeOutputShape(e){y.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let n=e[0].slice(),o=e[1].slice();if(n.length>3||o.length>3)throw new Ae("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(n,o);n.splice(s[0],1),o.splice(s[1],1),o.splice(0,1);let a=n.concat(o);return a.length===1&&a.push(1),a}computeMask(e,n){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},n=super.getConfig();return Object.assign(e,n),e}};Sd.className="Dot";J.registerClass(Sd);var vd=class extends $e{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),n={stddev:this.stddev};return Object.assign(n,e),n}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=_e(e);return Cp(()=>X(vc(o.shape,0,this.stddev),o),()=>o,n.training||!1)})}};vd.className="GaussianNoise";J.registerClass(vd);var Ad=class extends $e{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=_e(e);return this.rate>0&&this.rate<1?Cp(()=>{let a=Math.sqrt(this.rate/(1-this.rate));return E(o,vc(o.shape,1,a))},()=>o,n.training||!1):o})}};Ad.className="GaussianDropout";J.registerClass(Ad);var wd=class extends $e{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||_e(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return z(()=>{if(this.rate<1&&this.rate>0){let o=this._getNoiseShape(e);return Cp(()=>{let a=_e(e),i=1.6732632423543772,u=1.0507009873554805,l=-i*u,p=_s(Ii(o),this.rate);p=pu(p,"float32");let m=((1-this.rate)*(1+this.rate*l**2))**-.5,c=-m*l*this.rate,d=X(E(a,p),E(X(p,-1),l));return X(E(d,m),c)},()=>_e(e),n.training||!1)}return e})}};wd.className="AlphaDropout";J.registerClass(wd);function zh(r,t,e,n,o,s=.001){let a;if(r.rank===2)a=Ob(r,t,e,n,o,s);else if(r.rank===3)a=zb(r,t,e,n,o,s);else if(r.rank===4)a=Gb(r,t,e,n,o,s);else throw new Ae(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return a}function b9(r,t,e,n,o=.001){return z(()=>{let s=rl(r,n),a=s.mean,i=s.variance;return[zh(r,a,i,e,t,o),a,i]})}function y9(r,t,e,n,o=.001){return z(()=>{let s=rl(r,n),a=s.mean,i=s.variance,u=[];for(let f of rn(0,r.rank))n.indexOf(f)!==-1?u.push(1):u.push(r.shape[f]);let l=_(a,u),p=_(i,u),m=t==null?null:_(t,u),c=e==null?null:_(e,u);return[zh(r,l,p,c,m,o),a,i]})}function T9(r,t,e,n,o=.001){return y.arraysEqual(n.slice().sort(),rn(0,r.rank-1))?b9(r,t,e,n,o):y9(r,t,e,n,o)}var Nd=class extends $e{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Ct(e.betaInitializer||"zeros"),this.gammaInitializer=Ct(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ct(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ct(e.movingVarianceInitializer||"ones"),this.betaConstraint=Xt(e.betaConstraint),this.gammaConstraint=Xt(e.gammaConstraint),this.betaRegularizer=wt(e.betaRegularizer),this.gammaRegularizer=wt(e.gammaRegularizer)}build(e){e=rt(e);let n=this.axis>=0?this.axis:this.axis+e.length,o=e[n];if(o==null)throw new B(`Axis ${n} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new At({ndim:e.length,axes:{[n]:o}})];let s=[o];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,n){return z(()=>{let o=n.training==null?!1:n.training,s=_e(e),a=s.shape,i=a.length,u=rn(0,i),l=this.axis>=0?this.axis:this.axis+i;u.splice(l,1);let p=Gs(1,i);p[l]=a[l];let m=u.slice();m.sort();let c=!y.arraysEqual(m,rn(0,i).slice(0,i-1)),d=()=>{if(c){let x=_(this.movingMean.read(),p),I=_(this.movingVariance.read(),p),k=this.center?_(this.beta.read(),p):null,A=this.scale?_(this.gamma.read(),p):null;return zh(s,x,I,k,A,this.epsilon)}else return zh(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!o)return d();let[f,h,g]=T9(s,this.gamma.read(),this.beta.read(),u,this.epsilon),b=(x,I,k)=>{z(()=>{let A=1-k,R=x.read(),F=E(le(R,I),A);x.write(le(R,F))})};return(()=>{b(this.movingMean,h,this.momentum),b(this.movingVariance,g,this.momentum)})(),f})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Pt(this.betaInitializer),gammaInitializer:Pt(this.gammaInitializer),movingMeanInitializer:Pt(this.movingMeanInitializer),movingVarianceInitializer:Pt(this.movingVarianceInitializer),betaRegularizer:gt(this.betaRegularizer),gammaRegularizer:gt(this.gammaRegularizer),betaConstraint:jt(this.betaConstraint),gammaConstraint:jt(this.gammaConstraint)},n=super.getConfig();return Object.assign(e,n),e}};Nd.className="BatchNormalization";J.registerClass(Nd);var Dd=class extends $e{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let n of this.axis)if(!Number.isInteger(n))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Ct(e.betaInitializer||"zeros"),this.gammaInitializer=Ct(e.gammaInitializer||"ones"),this.betaRegularizer=wt(e.betaRegularizer),this.gammaRegularizer=wt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=rt(e);let n=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=n);for(let a of this.axis)if(a<0||a>=n)throw new Error(`Invalid axis: ${a}`);if(this.axis.length!==Ws(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let o=this.axis.map(a=>e[a]),s=!0;this.scale?this.gamma=this.addWeight("gamma",o,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",o,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,n){let o=_e(e),s=o.shape,a=s.length;return z(()=>{let{mean:u,variance:l}=rl(o,this.axis,!0),p=Gs(1,a);for(let g of this.axis)p[g]=s[g];let m=g=>g!=null&&g.shape.length!==a?_(g,p):g,c=this.scale?m(this.gamma.read()):null,d=this.center?m(this.beta.read()):null,f=[],h=[];for(let g=0;g<a;++g)this.axis.indexOf(g)!==-1?(f.push(s[g]),h.push(1)):(f.push(1),h.push(s[g]));return u=Jr(u,f),l=Jr(l,f),c!=null&&(c=Jr(c,h)),d!=null&&(d=Jr(d,h)),zh(o,u,l,d,c,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Pt(this.betaInitializer),gammaInitializer:Pt(this.gammaInitializer),betaRegularizer:gt(this.betaRegularizer),gammaRegularizer:gt(this.gammaRegularizer)},n=super.getConfig();return Object.assign(e,n),e}};Dd.className="LayerNormalization";J.registerClass(Dd);function x9(r,t,e){return z(()=>{if(r.rank!==4)throw new B(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new B("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=yn()),e!=="channelsLast"&&e!=="channelsFirst")throw new B(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return e==="channelsFirst"?n=[[0,0],[0,0],t[0],t[1]]:n=[[0,0],t[0],t[1],[0,0]],jn(r,n)})}var Rd=class extends $e{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?yn():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new B(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let n,o;if(typeof e.padding[0]=="number")n=[e.padding[0],e.padding[0]],o=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new B(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(n=e.padding[0],e.padding[1].length!==2)throw new B(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);o=e.padding[1]}this.padding=[n,o]}this.inputSpec=[new At({ndim:4})]}computeOutputShape(e){e=rt(e);let n,o;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?n=e[2]+this.padding[0][0]+this.padding[0][1]:n=null,e[3]!=null&&e[3]>=0?o=e[3]+this.padding[1][0]+this.padding[1][1]:o=null,[e[0],e[1],n,o]):(e[1]!=null&&e[1]>=0?n=e[1]+this.padding[0][0]+this.padding[0][1]:n=null,e[2]!=null&&e[2]>=0?o=e[2]+this.padding[1][0]+this.padding[1][1]:o=null,[e[0],n,o,e[3]])}call(e,n){return z(()=>x9(_e(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}};Rd.className="ZeroPadding2D";J.registerClass(Rd);function LT(r,t,e,n,o,s){return z(()=>{Wt(o),yA(s),bn(n),e==null&&(e=[1,1]),n==null&&(n="valid"),o==null&&(o=yn()),s==null&&(s="max"),r=Bh(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=mc(r,t,e,i):a=oc(r,t,e,i),o==="channelsFirst"&&(a=ze(a,[0,3,1,2])),a})}function HE(r,t,e,n,o,s){return z(()=>{Wt(o),yA(s),bn(n),e==null&&(e=[1,1,1]),n==null&&(n="valid"),o==null&&(o=yn()),s==null&&(s="max"),r=OA(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=iy(r,t,e,i):a=Bb(r,t,e,i),o==="channelsFirst"&&(a=ze(a,[0,4,1,2,3])),a})}var RT=class extends $e{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new B(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(rr(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new B(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);rr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,bn(this.padding),this.inputSpec=[new At({ndim:3})]}computeOutputShape(e){e=rt(e);let n=$n(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],n,e[2]]}call(e,n){return z(()=>{this.invokeCallHook(e,n),e=lu(_e(e),2);let o=this.poolingFunction(_e(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Bs(o,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},n=super.getConfig();return Object.assign(e,n),e}},Fd=class extends RT{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Wt(s),bn(o),LT(t,e,n,o,s,"max")}};Fd.className="MaxPooling1D";J.registerClass(Fd);var Pd=class extends RT{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Wt(s),bn(o),LT(t,e,n,o,s,"avg")}};Pd.className="AveragePooling1D";J.registerClass(Pd);var FT=class extends $e{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new B(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];rr(this.poolSize,"poolSize"),rr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Wt(this.dataFormat),bn(this.padding),this.inputSpec=[new At({ndim:4})]}computeOutputShape(e){e=rt(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],o=this.dataFormat==="channelsFirst"?e[3]:e[2];return n=$n(n,this.poolSize[0],this.padding,this.strides[0]),o=$n(o,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],n,o]:[e[0],n,o,e[3]]}call(e,n){return z(()=>(this.invokeCallHook(e,n),this.poolingFunction(_e(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}},Md=class extends FT{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Wt(s),bn(o),LT(t,e,n,o,s,"max")}};Md.className="MaxPooling2D";J.registerClass(Md);var Ed=class extends FT{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Wt(s),bn(o),LT(t,e,n,o,s,"avg")}};Ed.className="AveragePooling2D";J.registerClass(Ed);var PT=class extends $e{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new B(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];rr(this.poolSize,"poolSize"),rr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Wt(this.dataFormat),bn(this.padding),this.inputSpec=[new At({ndim:5})]}computeOutputShape(e){e=rt(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],o=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return n=$n(n,this.poolSize[0],this.padding,this.strides[0]),o=$n(o,this.poolSize[1],this.padding,this.strides[1]),s=$n(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],n,o,s]:[e[0],n,o,s,e[4]]}call(e,n){return z(()=>(this.invokeCallHook(e,n),this.poolingFunction(_e(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}},Ld=class extends PT{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Wt(s),bn(o),HE(t,e,n,o,s,"max")}};Ld.className="MaxPooling3D";J.registerClass(Ld);var _d=class extends PT{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Wt(s),bn(o),HE(t,e,n,o,s,"avg")}};_d.className="AveragePooling3D";J.registerClass(_d);var MT=class extends $e{constructor(t){super(t),this.inputSpec=[new At({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Ae}},$d=class extends MT{constructor(t){super(t||{})}call(t,e){return z(()=>{let n=_e(t);return $t(n,1)})}};$d.className="GlobalAveragePooling1D";J.registerClass($d);var Bd=class extends MT{constructor(t){super(t||{})}call(t,e){return z(()=>{let n=_e(t);return hn(n,1)})}};Bd.className="GlobalMaxPooling1D";J.registerClass(Bd);var ET=class extends $e{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Wt(this.dataFormat),this.inputSpec=[new At({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,n){throw new Ae}getConfig(){let e={dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}},Od=class extends ET{call(t,e){return z(()=>{let n=_e(t);return this.dataFormat==="channelsLast"?$t(n,[1,2]):$t(n,[2,3])})}};Od.className="GlobalAveragePooling2D";J.registerClass(Od);var zd=class extends ET{call(t,e){return z(()=>{let n=_e(t);return this.dataFormat==="channelsLast"?hn(n,[1,2]):hn(n,[2,3])})}};zd.className="GlobalMaxPooling2D";J.registerClass(zd);var _T=class extends $e{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},n=super.getConfig();return Object.assign(e,n),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,n,o={}){let s=n.layer,a=In(s,o);delete n.layer;let i={layer:a};return Object.assign(i,n),new e(i)}},Gd=class extends _T{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=rt(t),t.length<3)throw new B(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];let e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=rt(t);let e=[t[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),o=t[1];return[n[0],o].concat(n.slice(1))}call(t,e){return z(()=>(t=_e(t),KA((a,i)=>[_e(this.layer.call(a,e)),[]],t,[],!1,null,null,!1,!0)[1]))}};Gd.className="TimeDistributed";J.registerClass(Gd);function I9(r){vi(rP,"BidirectionalMergeMode",r)}var C9="concat",Ud=class extends _T{constructor(e){super(e);let n=e.layer.getConfig(),o={};o.className=e.layer.getClassName(),o.config=n,this.forwardLayer=In(o),n.goBackwards=n.goBackwards!==!0;let s={};if(s.className=e.layer.getClassName(),s.config=n,this.backwardLayer=In(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?C9:e.mergeMode,I9(this.mergeMode),e.weights)throw new Ae("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let n=e.length,o=Math.floor(n/2);this.forwardLayer.setWeights(e.slice(0,o)),this.backwardLayer.setWeights(e.slice(o))}computeOutputShape(e){let n=this.forwardLayer.computeOutputShape(e);Array.isArray(n)&&Array.isArray(n[0])||(n=[n]),n=n;let o,s,a;return this.returnState&&(a=n.slice(1)),o=n[0],o=o,this.mergeMode==="concat"?(o[o.length-1]*=2,s=[o]):this.mergeMode==null?s=[o,o.slice()]:s=[o],this.returnState?this.mergeMode==null?s.concat(a).concat(a.slice()):[o].concat(a).concat(a.slice()):Rr(s)}apply(e,n){let o=n==null?null:n.initialState,s=n==null?null:n.constants;n==null&&(n={});let a=WA(e,o,s,this.numConstants);if(e=a.inputs,o=a.initialState,s=a.constants,Array.isArray(e)&&(o=e.slice(1),e=e[0]),(o==null||o.length===0)&&s==null)return super.apply(e,n);let i=[],u=[];if(o!=null){let p=o.length;if(p%2>0)throw new B("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");n.initialState=o,i.push(...o);let m=o.map(c=>new At({shape:c.shape}));this.forwardLayer.stateSpec=m.slice(0,p/2),this.backwardLayer.stateSpec=m.slice(p/2),u.push(...m)}if(s!=null)throw new Ae("Support for constants in Bidirectional layers is not implemented yet.");let l=i[0]instanceof on;for(let p of i)if(p instanceof on!==l)throw new B("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){let p=[e].concat(i),m=this.inputSpec.concat(u),c=this.inputSpec;this.inputSpec=m;let d=super.apply(p,n);return this.inputSpec=c,d}else return super.apply(e,n)}call(e,n){return z(()=>{let o=n.initialState,s,a;if(o==null)s=this.forwardLayer.call(e,n),a=this.backwardLayer.call(e,n);else{let l=o.slice(0,o.length/2),p=o.slice(o.length/2);s=this.forwardLayer.call(e,Object.assign(n,{initialState:l})),a=this.backwardLayer.call(e,Object.assign(n,{initialState:p}))}let i;this.returnState&&(Array.isArray(s)&&(i=s.slice(1).concat(a.slice(1))),s=s[0],a=a[0]),this.returnSequences&&(a=Nr(a,1));let u;return this.mergeMode==="concat"?u=Sc([s,a]):this.mergeMode==="sum"?u=X(s,a):this.mergeMode==="ave"?u=E(.5,X(s,a)):this.mergeMode==="mul"?u=E(s,a):this.mergeMode==null&&(u=[s,a]),this.returnState?this.mergeMode==null?u.concat(i):[u].concat(i):u})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Va(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Va(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,n){Array.isArray(n)&&(n=n[0]);let o;if(this.returnSequences?this.mergeMode==null?o=[n,n]:o=n:this.mergeMode==null?o=[null,null]:o=null,this.returnState){let a=this.forwardLayer.states.map(i=>null);return Array.isArray(o)?o.concat(a).concat(a):[o].concat(a).concat(a)}else return o}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},n=super.getConfig();return Object.assign(e,n),e}static fromConfig(e,n){let o=In(n.layer);if(delete n.layer,n.numConstants!=null)throw new Ae("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=n;return s.layer=o,new e(s)}};Ud.className="Bidirectional";J.registerClass(Ud);var Wd=class extends $e{constructor(e){super(e);this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset},n=super.getConfig();return Object.assign(e,n),e}call(e,n){return z(()=>(e=_e(e),e.dtype!=="float32"&&(e=pu(e,"float32")),X(E(e,this.scale),this.offset)))}};Wd.className="Rescaling";J.registerClass(Wd);function k9(r){return new qa(r)}function S9(r){return new Xc(r)}function v9(r){return new Hc(r)}function A9(r){return new qc(r)}function w9(r){return new jc(r)}function N9(r){return new Zc(r)}function D9(r){return new Yc(r)}function R9(r){return new td(r)}function F9(r){return new Al(r)}function P9(r){return new Qc(r)}function M9(r){return new wl(r)}function E9(r){return new Jc(r)}function L9(r){return new ed(r)}function _9(r){return new rd(r)}function $9(r){return new nd(r)}function B9(r){return new od(r)}function O9(r){return new cd(r)}function z9(r){return new ld(r)}function G9(r){return new Ml(r)}function U9(r){return new pd(r)}function W9(r){return new md(r)}function K9(r){return new dd(r)}function V9(r){return new fd(r)}function H9(r){return new hd(r)}function q9(r){return new bd(r)}function j9(r){return new yd(r)}function X9(r){return new xd(r)}function Y9(r){return new kd(r)}function Z9(r){return new Id(r)}function Q9(r){return new Cd(r)}function J9(r){return new Td(r)}function eee(r){return new Sd(r)}function tee(r){return new Nd(r)}function ree(r){return new Dd(r)}function nee(r){return new Rd(r)}function HA(r){return new Pd(r)}function oee(r){return HA(r)}function see(r){return HA(r)}function qA(r){return new Ed(r)}function aee(r){return qA(r)}function iee(r){return qA(r)}function jA(r){return new _d(r)}function uee(r){return jA(r)}function pee(r){return jA(r)}function lee(r){return new $d(r)}function mee(r){return new Od(r)}function qE(r){return new Bd(r)}function jE(r){return new zd(r)}function XE(r){return new Fd(r)}function YE(r){return new Md(r)}function cee(r){return new Ld(r)}function dee(r){return new ad(r)}function fee(r){return new Rl(r)}function hee(r){return new id(r)}function gee(r){return new du(r)}function bee(r){return new sd(r)}function yee(r){return new Dl(r)}function Tee(r){return new ud(r)}function xee(r){return new Pl(r)}function Iee(r){return new os(r)}function Cee(r){return new Fl(r)}function kee(r){return new Ud(r)}function See(r){return new Gd(r)}var vee=qE,Aee=jE,wee=XE,Nee=YE;function Dee(r){return new vd(r)}function Ree(r){return new Ad(r)}function Fee(r){return new wd(r)}function Pee(r){return new gd(r)}function Mee(r){return new Wd(r)}var QE={};He(QE,{MAPE:()=>Kee,MSE:()=>qee,binaryAccuracy:()=>Eee,binaryCrossentropy:()=>Lee,categoricalAccuracy:()=>$ee,categoricalCrossentropy:()=>Bee,cosineProximity:()=>Gee,mape:()=>Vee,meanAbsoluteError:()=>Uee,meanAbsolutePercentageError:()=>Wee,meanSquaredError:()=>Hee,mse:()=>jee,precision:()=>Oee,recall:()=>zee,sparseCategoricalAccuracy:()=>_ee});function Eee(r,t){return Mh(r,t)}function Lee(r,t){return nT(r,t)}function _ee(r,t){return oT(r,t)}function $ee(r,t){return Eh(r,t)}function Bee(r,t){return Lh(r,t)}function Oee(r,t){return RA(r,t)}function zee(r,t){return kE(r,t)}function Gee(r,t){return Ph(r,t)}function Uee(r,t){return Gc(r,t)}function Wee(r,t){return Sp(r,t)}function Kee(r,t){return Sp(r,t)}function Vee(r,t){return Sp(r,t)}function Hee(r,t){return wi(r,t)}function qee(r,t){return wi(r,t)}function jee(r,t){return wi(r,t)}var JE={};He(JE,{modelFromJSON:()=>OE});var eL={};He(eL,{l1:()=>Yee,l1l2:()=>Xee,l2:()=>Zee});function Xee(r){return new vp(r)}function Yee(r){return WE(r)}function Zee(r){return KE(r)}var BT=class extends cu{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof Yn))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function $T(r,t){return r<t}function tL(r,t){return r>t}var OT=class extends BT{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Ae("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=$T:this.mode==="max"?this.monitorFunc=tL:this.monitor.indexOf("acc")!==-1?this.monitorFunc=tL:this.monitorFunc=$T,this.monitorFunc===$T&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===$T?1/0:-1/0}async onEpochEnd(e,n){await Ai(n);let o=this.getMonitorValue(n);o!=null&&(this.monitorFunc(o-this.minDelta,this.best)?(this.best=o,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let n=e[this.monitor];return n==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),n}};function Qee(r){return new OT(r)}var Jee={earlyStopping:Qee};var ete=$();ete.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var XA=(Q=>(Q[Q.DT_INVALID=0]="DT_INVALID",Q[Q.DT_FLOAT=1]="DT_FLOAT",Q[Q.DT_DOUBLE=2]="DT_DOUBLE",Q[Q.DT_INT32=3]="DT_INT32",Q[Q.DT_UINT8=4]="DT_UINT8",Q[Q.DT_INT16=5]="DT_INT16",Q[Q.DT_INT8=6]="DT_INT8",Q[Q.DT_STRING=7]="DT_STRING",Q[Q.DT_COMPLEX64=8]="DT_COMPLEX64",Q[Q.DT_INT64=9]="DT_INT64",Q[Q.DT_BOOL=10]="DT_BOOL",Q[Q.DT_QINT8=11]="DT_QINT8",Q[Q.DT_QUINT8=12]="DT_QUINT8",Q[Q.DT_QINT32=13]="DT_QINT32",Q[Q.DT_BFLOAT16=14]="DT_BFLOAT16",Q[Q.DT_QINT16=15]="DT_QINT16",Q[Q.DT_QUINT16=16]="DT_QUINT16",Q[Q.DT_UINT16=17]="DT_UINT16",Q[Q.DT_COMPLEX128=18]="DT_COMPLEX128",Q[Q.DT_HALF=19]="DT_HALF",Q[Q.DT_RESOURCE=20]="DT_RESOURCE",Q[Q.DT_VARIANT=21]="DT_VARIANT",Q[Q.DT_UINT32=22]="DT_UINT32",Q[Q.DT_UINT64=23]="DT_UINT64",Q[Q.DT_FLOAT_REF=101]="DT_FLOAT_REF",Q[Q.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",Q[Q.DT_INT32_REF=103]="DT_INT32_REF",Q[Q.DT_UINT8_REF=104]="DT_UINT8_REF",Q[Q.DT_INT16_REF=105]="DT_INT16_REF",Q[Q.DT_INT8_REF=106]="DT_INT8_REF",Q[Q.DT_STRING_REF=107]="DT_STRING_REF",Q[Q.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",Q[Q.DT_INT64_REF=109]="DT_INT64_REF",Q[Q.DT_BOOL_REF=110]="DT_BOOL_REF",Q[Q.DT_QINT8_REF=111]="DT_QINT8_REF",Q[Q.DT_QUINT8_REF=112]="DT_QUINT8_REF",Q[Q.DT_QINT32_REF=113]="DT_QINT32_REF",Q[Q.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",Q[Q.DT_QINT16_REF=115]="DT_QINT16_REF",Q[Q.DT_QUINT16_REF=116]="DT_QUINT16_REF",Q[Q.DT_UINT16_REF=117]="DT_UINT16_REF",Q[Q.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",Q[Q.DT_HALF_REF=119]="DT_HALF_REF",Q[Q.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",Q[Q.DT_VARIANT_REF=121]="DT_VARIANT_REF",Q[Q.DT_UINT32_REF=122]="DT_UINT32_REF",Q[Q.DT_UINT64_REF=123]="DT_UINT64_REF",Q))(XA||{}),tte;(t=>{let r;(s=>(s[s.LEGACY=0]="LEGACY",s[s.V1=1]="V1",s[s.V2=2]="V2"))(r=t.CheckpointFormatVersion||={})})(tte||={});var YA={};function nte(r,t){let e={tfOpName:r,category:"custom",inputs:[],attrs:[],customExecutor:t};YA[r]=e}function zT(r){return YA[r]}function ote(r){delete YA[r]}function v(r,t,e,n,o){let s=t.inputParams[r];if(s&&s.inputIndexStart!==void 0){let i=s.inputIndexStart,u=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?i+1:s.inputIndexEnd;if(s.type==="tensor")return kr(t.inputNames[s.inputIndexStart],e,n,o);if(s.type==="tensors")return t.inputNames.slice(i,u).map(c=>kr(c,e,n,o));let l=kr(t.inputNames.slice(i)[0],e,n,o),p=l.dataSync();return s.type==="number"?p[0]:y.toNestedArray(l.shape,p)}let a=t.attrParams[r];return a&&a.value}function kr(r,t,e,n){let[o,s]=Cn(r);if(n!=null){let i=n.getHashTableHandleByName(o);if(i!=null)return i}let a=e.currentContextIds.find(i=>!!t[GT(o,i)]);return a!==void 0?t[GT(o,a)][s]:void 0}function rL(r,t,e){return t[GT(r,e.currentContextId)]}function js(r,t){let[e,n,o]=Cn(r);return[GT(e,t&&t.currentContextId),n,o]}function GT(r,t){return t?`${r}-${t}`:r}function Cn(r){let t=r.split(":");if(t.length===1)return[r,0,void 0];let e=t[0],n=t.length===3?t[1]:void 0,o=Number(t[t.length-1]);return[e,o,n]}function Gh(r,t,e){let n=v("pad",r,t,e);if(n==="explicit"){n=v("explicitPaddings",r,t,e);let o=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)o[s][0]=n[s*2],o[s][1]=n[s*2+1];return o}return n}function Qa(r){return r.kept?r:fn(r)}var ZA={};He(ZA,{json:()=>ste});var ste=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var QA={};He(QA,{json:()=>ate});var ate=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var JA={};He(JA,{json:()=>ite});var ite=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var ew={};He(ew,{json:()=>ute});var ute=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var tw={};He(tw,{json:()=>pte});var pte=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var rw={};He(rw,{json:()=>lte});var lte=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var nw={};He(nw,{json:()=>mte});var mte=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var ow={};He(ow,{json:()=>cte});var cte=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var sw={};He(sw,{json:()=>dte});var dte=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}];var aw={};He(aw,{json:()=>fte});var fte=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var iw={};He(iw,{json:()=>hte});var hte=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var uw={};He(uw,{json:()=>gte});var gte=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}];var pw={};He(pw,{json:()=>bte});var bte=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var lw={};He(lw,{json:()=>yte});var yte=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var mw={};He(mw,{json:()=>Tte});var Tte=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var cw={};He(cw,{json:()=>xte});var xte=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var dw={};He(dw,{json:()=>Ite});var Ite=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var fw={};He(fw,{json:()=>Cte});var Cte=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var hw={};He(hw,{json:()=>kte});var kte=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var Uh=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let t=[ZA,QA,JA,ew,tw,rw,nw,ow,sw,aw,iw,uw,pw,lw,mw,cw,dw,fw,hw],e=[].concat(...t.map(n=>n.json));this.opMappers=e.reduce((n,o)=>(n[o.tfOpName]=o,n),{})}transformGraph(t,e={}){let n=t.node,o=[],s=[],a=[],i=n.reduce((h,g)=>(h[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?o.push(h[g.name]):g.op==="Const"?s.push(h[g.name]):(g.input==null||g.input.length===0)&&a.push(h[g.name]),h),{}),u=[],l=[],p={},m={};e!=null&&(p=this.mapSignatureEntries(e.inputs),m=this.mapSignatureEntries(e.outputs));let c=Object.keys(i);c.forEach(h=>{let g=i[h];g.inputNames.forEach((b,T)=>{let[x,,I]=js(b),k=i[x];if(k.outputs!=null){let A=k.outputs.indexOf(I);if(A!==-1){let R=`${x}:${A}`;g.inputNames[T]=R}}g.inputs.push(k),k.children.push(g)})}),Object.keys(m).length===0?c.forEach(h=>{let g=i[h];g.children.length===0&&l.push(g)}):Object.keys(m).forEach(h=>{let[g]=js(h),b=i[g];b!=null&&(b.signatureKey=m[h],l.push(b))}),Object.keys(p).length>0?Object.keys(p).forEach(h=>{let[g]=js(h),b=i[g];b&&(b.signatureKey=p[h],u.push(b))}):u=o;let d={};t.library!=null&&t.library.function!=null&&(d=t.library.function.reduce((h,g)=>(h[g.signature.name]=this.mapFunction(g),h),{}));let f={nodes:i,inputs:u,outputs:l,weights:s,placeholders:o,signature:e,functions:d};return a.length>0&&(f.initNodes=a),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){let e=zT(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});let n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(o=>o.startsWith("^")?o.slice(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return e.inputs!=null&&(n.inputParams=e.inputs.reduce((o,s)=>(o[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},o),{})),e.attrs!=null&&(n.attrParams=e.attrs.reduce((o,s)=>{let a=s.type,i;switch(s.type){case"string":i=UT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=UT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":i=XT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=XT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":i=KT(t.attr,s.tfName,s.defaultValue||0),i===void 0&&!!s.tfDeprecatedName&&(i=KT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":i=jT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=jT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":i=WT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=WT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":i=ZT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=ZT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":i=qT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=qT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":i=YT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=YT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":i=VT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=VT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":i=HT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=HT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":i=nL(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=nL(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${t.op}`)}return o[s.name]={value:i,type:a},o},{})),n}mapFunction(t){let e=t.nodeDef,n=[],o=[],s={};e!=null&&(s=e.reduce((m,c)=>(m[c.name]=this.mapNode(c),c.op==="Const"&&o.push(m[c.name]),m),{}));let a=[],i=[];t.signature.inputArg.forEach(m=>{let[c]=js(m.name),d={name:c,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:gw(m.type),type:"dtype"}},children:[]};d.signatureKey=m.name,a.push(d),s[c]=d}),Object.keys(s).forEach(m=>{let c=s[m];c.inputNames.forEach((d,f)=>{let[h,,g]=js(d),b=s[h];if(b.outputs!=null){let T=b.outputs.indexOf(g);if(T!==-1){let x=`${h}:${T}`;c.inputNames[f]=x}}c.inputs.push(b),b.children.push(c)})});let l=t.ret;t.signature.outputArg.forEach(m=>{let[c,d]=js(l[m.name]),f=s[c];f!=null&&(f.defaultOutput=d,i.push(f))});let p=this.mapArgsToSignature(t);return{nodes:s,inputs:a,outputs:i,weights:o,placeholders:n,signature:p}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n),e),{}),outputs:t.signature.outputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e),{})}}mapArgToTensorInfo(t,e){let n=t.name;return e!=null&&(n=e[n]),{name:n,dtype:t.type}}};function Ste(r){let t=$().global;if(typeof t.atob<"u")return t.atob(r);if(typeof Buffer<"u")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function oL(r,t){let e=Array.isArray(r)?String.fromCharCode.apply(null,r):Ste(r);return t?e:e.toLowerCase()}function UT(r,t,e,n=!1){let o=r[t];return o!=null?oL(o.s,n):e}function WT(r,t,e){let n=r[t];return n?n.b:e}function KT(r,t,e){let n=r[t]||{},o=n.i!=null?n.i:n.f!=null?n.f:e;return typeof o=="number"?o:parseInt(o,10)}function gw(r){switch(typeof r=="string"&&(r=XA[r]),r){case 1:case 19:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 2:return"float32";case 7:return"string";default:return null}}function nL(r,t,e){let n=r[t];return n&&n.func?n.func.name:e}function VT(r,t,e){let n=r[t];return n&&n.type?gw(n.type):e}function HT(r,t,e){let n=r[t];return n&&n.list&&n.list.type?n.list.type.map(o=>gw(o)):e}function sL(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function qT(r,t,e){let n=r[t];return n&&n.shape?sL(n.shape):e}function jT(r,t,e){let n=r[t];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):e}function XT(r,t,e,n=!1){let o=r[t];return o&&o.list&&o.list.s?o.list.s.map(s=>oL(s,n)):e}function YT(r,t,e){let n=r[t];return n&&n.list&&n.list.shape?n.list.shape.map(o=>sL(o)):e}function ZT(r,t,e){let n=r[t];return n&&n.list&&n.list.b?n.list.b:e}var QT=class{constructor(t,e,n){this.node=t;this.tensorMap=e;this.context=n;this.inputs=[];this.attrs={};this.inputs=t.inputNames.map(o=>this.getInput(o)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((o,s)=>(o[s]=this.getAttr(s),o),{}))}getInput(t){return kr(t,this.tensorMap,this.context)}getAttr(t,e){let n=this.node.rawAttrs[t];if(n.tensor!=null)return kr(t,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return KT(this.node.rawAttrs,t,e);if(n.s!=null)return UT(this.node.rawAttrs,t,e);if(n.b!=null)return WT(this.node.rawAttrs,t,e);if(n.shape!=null)return qT(this.node.rawAttrs,t,e);if(n.type!=null)return VT(this.node.rawAttrs,t,e);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return jT(this.node.rawAttrs,t,e);if(n.list.s!=null)return XT(this.node.rawAttrs,t,e);if(n.list.shape!=null)return YT(this.node.rawAttrs,t,e);if(n.list.b!=null)return ZT(this.node.rawAttrs,t,e);if(n.list.type!=null)return HT(this.node.rawAttrs,t,e)}return e}};var ct={};He(ct,{OP_SCOPE_SUFFIX:()=>Nv,abs:()=>Gt,acos:()=>N2,acosh:()=>D2,add:()=>X,addN:()=>R2,all:()=>_b,any:()=>hh,argMax:()=>np,argMin:()=>F2,asin:()=>P2,asinh:()=>M2,atan:()=>E2,atan2:()=>L2,atanh:()=>_2,avgPool:()=>oc,avgPool3d:()=>Bb,basicLSTMCell:()=>O2,batchNorm:()=>sp,batchNorm2d:()=>Ob,batchNorm3d:()=>zb,batchNorm4d:()=>Gb,batchToSpaceND:()=>sc,bincount:()=>Ub,booleanMaskAsync:()=>TZ,broadcastArgs:()=>G2,broadcastTo:()=>ap,buffer:()=>Ie,cast:()=>re,ceil:()=>U2,clipByValue:()=>Gr,clone:()=>fn,complex:()=>Fn,concat:()=>mt,concat1d:()=>Wb,concat2d:()=>Kb,concat3d:()=>Vb,concat4d:()=>Hb,conv1d:()=>qb,conv2d:()=>ts,conv2dTranspose:()=>jb,conv3d:()=>Xb,conv3dTranspose:()=>Zb,cos:()=>ic,cosh:()=>Qb,cosineWindow:()=>Ch,cumprod:()=>gh,cumsum:()=>Jb,denseBincount:()=>W2,depthToSpace:()=>K2,depthwiseConv2d:()=>ip,diag:()=>V2,dilation2d:()=>H2,div:()=>ce,divNoNan:()=>q2,dot:()=>j2,dropout:()=>uA,einsum:()=>X2,elu:()=>up,enclosingPowerOfTwo:()=>pA,equal:()=>Qr,erf:()=>Y2,euclideanNorm:()=>J2,exp:()=>br,expandDims:()=>Lr,expm1:()=>eR,eye:()=>tl,fft:()=>bc,fill:()=>Es,floor:()=>pp,floorDiv:()=>Lb,fused:()=>dp,gather:()=>lp,gatherND:()=>NZ,greater:()=>ir,greaterEqual:()=>_s,ifft:()=>il,imag:()=>rp,image:()=>fp,inTopKAsync:()=>FZ,irfft:()=>Ty,isFinite:()=>tR,isInf:()=>rR,isNaN:()=>nR,leakyRelu:()=>uc,less:()=>ey,lessEqual:()=>$s,linalg:()=>mA,linspace:()=>oR,localResponseNormalization:()=>sR,log:()=>Ur,log1p:()=>pc,logSigmoid:()=>aR,logSoftmax:()=>ny,logSumExp:()=>oy,logicalAnd:()=>en,logicalNot:()=>lc,logicalOr:()=>sy,logicalXor:()=>iR,losses:()=>FQ,lowerBound:()=>uR,matMul:()=>Ke,max:()=>hn,maxPool:()=>mc,maxPool3d:()=>iy,maxPoolWithArgmax:()=>pR,maximum:()=>rs,mean:()=>$t,meshgrid:()=>lR,min:()=>yh,minimum:()=>mp,mirrorPad:()=>mR,mod:()=>cR,moments:()=>rl,movingAverage:()=>IZ,mul:()=>E,multiRNNCell:()=>dR,multinomial:()=>fR,neg:()=>Je,norm:()=>el,notEqual:()=>au,oneHot:()=>ep,ones:()=>yr,onesLike:()=>_r,op:()=>w,outerProduct:()=>hR,pad:()=>jn,pad1d:()=>gR,pad2d:()=>bR,pad3d:()=>yR,pad4d:()=>TR,pool:()=>xR,pow:()=>qn,prelu:()=>dc,print:()=>vb,prod:()=>IR,raggedGather:()=>CR,raggedTensorToTensor:()=>kR,rand:()=>SR,randomGamma:()=>GR,randomNormal:()=>sl,randomStandardNormal:()=>UR,randomUniform:()=>Ii,range:()=>cp,real:()=>ou,reciprocal:()=>WR,relu:()=>tn,relu6:()=>cy,reshape:()=>_,reverse:()=>Nr,reverse1d:()=>KR,reverse2d:()=>VR,reverse3d:()=>HR,reverse4d:()=>qR,rfft:()=>yc,round:()=>dy,rsqrt:()=>fy,scalar:()=>de,scatterND:()=>kZ,searchSorted:()=>Th,selu:()=>hy,separableConv2d:()=>gy,setdiff1dAsync:()=>jR,sigmoid:()=>Ln,sign:()=>XR,signal:()=>RQ,sin:()=>by,sinh:()=>yy,slice:()=>Oe,slice1d:()=>fc,slice2d:()=>Ih,slice3d:()=>hc,slice4d:()=>al,softmax:()=>gc,softplus:()=>su,spaceToBatchND:()=>cc,sparse:()=>PQ,sparseToDense:()=>AZ,spectral:()=>DQ,split:()=>Dr,sqrt:()=>_t,square:()=>qe,squaredDifference:()=>xy,squeeze:()=>Bs,stack:()=>Tr,step:()=>Ci,stridedSlice:()=>YR,string:()=>MQ,sub:()=>le,sum:()=>he,tan:()=>ZR,tanh:()=>op,tensor:()=>Ar,tensor1d:()=>qt,tensor2d:()=>Ga,tensor3d:()=>Rb,tensor4d:()=>QR,tensor5d:()=>JR,tensor6d:()=>eF,tile:()=>Jr,topk:()=>tF,transpose:()=>ze,truncatedNormal:()=>Tc,unique:()=>rF,unsortedSegmentSum:()=>Iy,unstack:()=>Wr,upperBound:()=>nF,variable:()=>Cy,where:()=>Ut,whereAsync:()=>Sy,zeros:()=>It,zerosLike:()=>we});var aL=(r,t,e,n=ct)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[n.add(v("a",r,t,e),v("b",r,t,e))];case"AddN":return[n.addN(v("tensors",r,t,e))];case"FloorMod":case"Mod":return[n.mod(v("a",r,t,e),v("b",r,t,e))];case"Mul":return[n.mul(v("a",r,t,e),v("b",r,t,e))];case"RealDiv":case"Div":return[n.div(v("a",r,t,e),v("b",r,t,e))];case"DivNoNan":return[n.divNoNan(v("a",r,t,e),v("b",r,t,e))];case"FloorDiv":return[n.floorDiv(v("a",r,t,e),v("b",r,t,e))];case"Sub":return[n.sub(v("a",r,t,e),v("b",r,t,e))];case"Minimum":return[n.minimum(v("a",r,t,e),v("b",r,t,e))];case"Maximum":return[n.maximum(v("a",r,t,e),v("b",r,t,e))];case"Pow":return[n.pow(v("a",r,t,e),v("b",r,t,e))];case"SquaredDifference":return[n.squaredDifference(v("a",r,t,e),v("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var iL=(r,t,e,n=ct)=>{switch(r.op){case"Abs":case"ComplexAbs":return[n.abs(v("x",r,t,e))];case"Acos":return[n.acos(v("x",r,t,e))];case"Acosh":return[n.acosh(v("x",r,t,e))];case"Asin":return[n.asin(v("x",r,t,e))];case"Asinh":return[n.asinh(v("x",r,t,e))];case"Atan":return[n.atan(v("x",r,t,e))];case"Atan2":return[n.atan2(v("x",r,t,e),v("y",r,t,e))];case"Atanh":return[n.atanh(v("x",r,t,e))];case"Ceil":return[n.ceil(v("x",r,t,e))];case"Complex":return[n.complex(v("real",r,t,e),v("imag",r,t,e))];case"Cos":return[n.cos(v("x",r,t,e))];case"Cosh":return[n.cosh(v("x",r,t,e))];case"Elu":return[n.elu(v("x",r,t,e))];case"Erf":return[n.erf(v("x",r,t,e))];case"Exp":return[n.exp(v("x",r,t,e))];case"Expm1":return[n.expm1(v("x",r,t,e))];case"Floor":return[n.floor(v("x",r,t,e))];case"Log":return[n.log(v("x",r,t,e))];case"Log1p":return[n.log1p(v("x",r,t,e))];case"Imag":return[n.imag(v("x",r,t,e))];case"Neg":return[n.neg(v("x",r,t,e))];case"Reciprocal":return[n.reciprocal(v("x",r,t,e))];case"Real":return[n.real(v("x",r,t,e))];case"Relu":return[n.relu(v("x",r,t,e))];case"Round":return[n.round(v("x",r,t,e))];case"Selu":return[n.selu(v("x",r,t,e))];case"Sigmoid":return[n.sigmoid(v("x",r,t,e))];case"Sin":return[n.sin(v("x",r,t,e))];case"Sign":return[n.sign(v("x",r,t,e))];case"Sinh":return[n.sinh(v("x",r,t,e))];case"Softplus":return[n.softplus(v("x",r,t,e))];case"Sqrt":return[n.sqrt(v("x",r,t,e))];case"Square":return[n.square(v("x",r,t,e))];case"Tanh":return[n.tanh(v("x",r,t,e))];case"Tan":return[n.tan(v("x",r,t,e))];case"ClipByValue":return[n.clipByValue(v("x",r,t,e),v("clipValueMin",r,t,e),v("clipValueMax",r,t,e))];case"Relu6":return[n.relu6(v("x",r,t,e))];case"Rsqrt":return[n.rsqrt(kr(r.inputNames[0],t,e))];case"Prod":return[n.prod(v("x",r,t,e),v("axes",r,t,e))];case"LeakyRelu":return[n.leakyRelu(v("x",r,t,e),v("alpha",r,t,e))];case"Prelu":return[n.prelu(v("x",r,t,e),v("alpha",r,t,e))];case"IsNan":return[n.isNaN(kr(r.inputNames[0],t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Zn(r,t,e=""){if(!(typeof r=="number"||typeof t=="number")){y.assert(r.length===t.length,()=>e+` Shapes ${r} and ${t} must match`);for(let n=0;n<r.length;n++){let o=r[n],s=t[n];y.assert(o<0||s<0||o===s,()=>e+` Shapes ${r} and ${t} must match`)}}}function uL(r){return!(typeof r=="number"||r.some(t=>t<0))}function Kd(r,t,e){let n=JT(r,e),o=!uL(n);if(o&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(o&&t.forEach(s=>{n=JT(s.shape,n)}),!uL(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function JT(r,t){if(typeof r=="number")return t;if(typeof t=="number")return r;if(r.length!==t.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${t}`);let e=[];for(let n=0;n<r.length;++n){let o=r[n],s=t[n];if(o>=0&&s>=0&&o!==s)throw new Error(`Incompatible shape during merge: ${r} vs. ${t}`);e[n]=o>=0?o:s}return e}var ex=class{constructor(t,e,n,o,s,a,i){this.name=t;this.dtype=e;this.maxSize=n;this.elementShape=o;this.identicalElementShapes=s;this.dynamicSize=a;this.clearAfterRead=i;this.tensors=[];this.closed_=!1;this.idTensor=de(0),zt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.tensor.id))&&e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);let e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=e.shape),Zn(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,zt(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((n,o)=>this.write(n,e[o]))}gather(t,e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let o=0;o<this.size();o++)t.push(o)}if(t.length===0)return Ar([],[0].concat(this.elementShape));let n=this.readMany(t);return Zn(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Tr(n,0)}concat(t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return Ar([],[0].concat(this.elementShape));let e=[];for(let o=0;o<this.size();o++)e.push(o);let n=this.readMany(e);return Zn(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),mt(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,Wr(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0,o=t.map(u=>(n+=u,n));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:e.size/n,a=[];z(()=>{e=_(e,[1,n,s]);for(let u=0;u<t.length;++u){let l=u===0?0:o[u-1],p=[0,l,0],m=[1,t[u],s];a[u]=_(Oe(e,p,m),this.elementShape)}return a});let i=[];for(let u=0;u<t.length;u++)i[u]=u;this.writeMany(i,a)}};var bu=class{constructor(t,e,n,o=-1){this.tensors=t;this.elementShape=e;this.elementDtype=n;t?.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);Zn(e,s.shape,"TensorList shape mismatch: "),zt(s)}),this.idTensor=de(0),this.maxNumElements=o,zt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new bu([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.id))&&e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Zn(t,this.elementShape,"TensorList shape mismatch: ");let o=Kd(this.elementShape,this.tensors,t);return z(()=>{let s=this.tensors.map(a=>_(a,o));return Tr(s,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=Kd(this.elementShape,this.tensors,t),o=this.tensors.pop();return o.kept=!1,Zn(o.shape,t,"TensorList shape mismatch: "),_(o,n)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Zn(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");zt(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let e=new bu([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let n=0;n<Math.min(this.tensors.length,t);++n)e.tensors[n]=this.tensors[n];return e}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);Zn(this.tensors[t].shape,e,"TensorList shape mismatch: ");let o=Kd(this.elementShape,this.tensors,e);return _(this.tensors[t],o)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Zn(this.elementShape,e.shape,"TensorList shape mismatch: "),zt(e),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);Zn(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());let o=Kd(this.elementShape,this.tensors,n);return t.length===0?Ar([],[0].concat(o)):z(()=>{let s=t.map(a=>_(this.tensors[a],o));return Tr(s,0)})}concat(t,e){if(!!t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);Zn(this.elementShape,e,"TensorList shape mismatch: ");let n=Kd(this.elementShape,this.tensors,e);return this.size()===0?Ar([],[0].concat(n)):z(()=>{let o=this.tensors.map(s=>_(s,n));return mt(o,0)})}};function pL(r,t,e){let n=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==e)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${e}`);let o=r.shape.slice(1);Zn(o,t,"TensorList shape mismatch: ");let s=Wr(r);return new bu(s,t,n)}function lL(r,t,e,n){return new bu([],r,t,n)}function mL(r,t,e,n){if(t.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${r.shape[0]}`);let o=Math.max(...t);if(n!=null&&n!==-1&&o>=n)throw new Error(`Max index must be < array size (${o}  vs. ${n})`);let s=new bu([],e,r.dtype,n),a=Wr(r,0);return t.forEach((i,u)=>{s.setItem(i,a[u])}),s}function cL(r,t,e){let n=0,o=t.map(p=>(n+=p,n));if(n!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${r.shape}`);let s=r.shape.slice(1),a=JT(s,e),i=n===0?0:r.size/n,u=z(()=>{let p=[];r=_(r,[1,n,i]);for(let m=0;m<t.length;++m){let c=m===0?0:o[m-1],d=[0,c,0],f=[1,t[m],i];p[m]=_(Oe(r,d,f),a)}return r.dispose(),p}),l=new bu([],e,r.dtype,t.length);for(let p=0;p<u.length;p++)l.setItem(p,u[p]);return l}var dL=async(r,t,e)=>{switch(r.op){case"If":case"StatelessIf":{let n=v("thenBranch",r,t,e),o=v("elseBranch",r,t,e),s=v("cond",r,t,e),a=v("args",r,t,e);return(await s.data())[0]?e.functionMap[n].executeFunctionAsync(a,e.tensorArrayMap,e.tensorListMap):e.functionMap[o].executeFunctionAsync(a,e.tensorArrayMap,e.tensorListMap)}case"While":case"StatelessWhile":{let n=v("body",r,t,e),o=v("cond",r,t,e),s=v("args",r,t,e),a=await e.functionMap[o].executeFunctionAsync(s,e.tensorArrayMap,e.tensorListMap),i=s.map(p=>p.id),u=await a[0].data();a.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&p.dispose()});let l=s;for(;u[0];){let p=l;l=await e.functionMap[n].executeFunctionAsync(l,e.tensorArrayMap,e.tensorListMap);let m=l.map(d=>d.id);p.forEach(d=>{!d.kept&&i.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()});let c=await e.functionMap[o].executeFunctionAsync(l,e.tensorArrayMap,e.tensorListMap);u=await c[0].data(),c.forEach(d=>{!d.kept&&i.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()})}return l}case"LoopCond":{let n=v("pred",r,t,e);return[Qa(n)]}case"Switch":{let n=v("pred",r,t,e),o=v("data",r,t,e);return o.kept||(o=Qa(o)),(await n.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{let n=r.inputNames.find(o=>kr(o,t,e)!==void 0);if(n){let o=kr(n,t,e);return[Qa(o)]}return}case"Enter":{let n=v("frameName",r,t,e),o=v("tensor",r,t,e);return e.enterFrame(n),[Qa(o)]}case"Exit":{let n=v("tensor",r,t,e);return e.exitFrame(),[Qa(n)]}case"NextIteration":{let n=v("tensor",r,t,e);return e.nextIteration(),[Qa(n)]}case"TensorArrayV3":{let n=v("size",r,t,e),o=v("dtype",r,t,e),s=v("elementShape",r,t,e),a=v("dynamicSize",r,t,e),i=v("clearAfterRead",r,t,e),u=v("identicalElementShapes",r,t,e),l=v("name",r,t,e),p=new ex(l,o,n,s,u,a,i);return e.addTensorArray(p),[p.idTensor,de(1)]}case"TensorArrayWriteV3":{let n=v("tensorArrayId",r,t,e),o=v("index",r,t,e),s=v("tensor",r,t,e),a=e.getTensorArray(n.id);return a.write(o,s),[a.idTensor]}case"TensorArrayReadV3":{let n=v("tensorArrayId",r,t,e),o=v("index",r,t,e);return[e.getTensorArray(n.id).read(o)]}case"TensorArrayGatherV3":{let n=v("tensorArrayId",r,t,e),o=v("indices",r,t,e),s=v("dtype",r,t,e);return[e.getTensorArray(n.id).gather(o,s)]}case"TensorArrayScatterV3":{let n=v("tensorArrayId",r,t,e),o=v("indices",r,t,e),s=v("tensor",r,t,e),a=e.getTensorArray(n.id);return a.scatter(o,s),[a.idTensor]}case"TensorArrayConcatV3":{let n=v("tensorArrayId",r,t,e),o=e.getTensorArray(n.id),s=v("dtype",r,t,e);return[o.concat(s)]}case"TensorArraySplitV3":{let n=v("tensorArrayId",r,t,e),o=v("tensor",r,t,e),s=v("lengths",r,t,e),a=e.getTensorArray(n.id);return a.split(s,o),[a.idTensor]}case"TensorArraySizeV3":{let n=v("tensorArrayId",r,t,e),o=e.getTensorArray(n.id);return[de(o.size(),"int32")]}case"TensorArrayCloseV3":{let n=v("tensorArrayId",r,t,e),o=e.getTensorArray(n.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{let n=v("tensorListId",r,t,e),o=v("index",r,t,e),s=v("tensor",r,t,e),a=e.getTensorList(n.id);return a.setItem(o,s),[a.idTensor]}case"TensorListGetItem":{let n=v("tensorListId",r,t,e),o=v("index",r,t,e),s=v("elementShape",r,t,e),a=v("elementDType",r,t,e);return[e.getTensorList(n.id).getItem(o,s,a)]}case"TensorListScatterV2":case"TensorListScatter":{let n=v("indices",r,t,e),o=v("tensor",r,t,e),s=v("elementShape",r,t,e),a=v("numElements",r,t,e),i=mL(o,n,s,a);return e.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=v("elementShape",r,t,e),o=v("elementDType",r,t,e),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let a=v(s,r,t,e),i=r.op==="TensorListReserve"?-1:a,u=lL(n,o,a,i);return e.addTensorList(u),[u.idTensor]}case"TensorListGather":{let n=v("tensorListId",r,t,e),o=v("indices",r,t,e),s=v("elementShape",r,t,e),a=v("elementDType",r,t,e);return[e.getTensorList(n.id).gather(o,a,s)]}case"TensorListStack":{let n=v("tensorListId",r,t,e),o=v("elementShape",r,t,e),s=v("elementDType",r,t,e),a=v("numElements",r,t,e);return[e.getTensorList(n.id).stack(o,s,a)]}case"TensorListFromTensor":{let n=v("tensor",r,t,e),o=v("elementShape",r,t,e),s=v("elementDType",r,t,e),a=pL(n,o,s);return e.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let n=v("tensorListId",r,t,e),o=e.getTensorList(n.id),s=v("dtype",r,t,e),a=v("elementShape",r,t,e);return[o.concat(s,a)]}case"TensorListPushBack":{let n=v("tensorListId",r,t,e),o=v("tensor",r,t,e),s=e.getTensorList(n.id);return s.pushBack(o),[s.idTensor]}case"TensorListPopBack":{let n=v("tensorListId",r,t,e),o=v("elementShape",r,t,e),s=v("elementDType",r,t,e);return[e.getTensorList(n.id).popBack(o,s)]}case"TensorListSplit":{let n=v("tensor",r,t,e),o=v("elementShape",r,t,e),s=v("lengths",r,t,e),a=cL(n,s,o);return e.addTensorList(a),[a.idTensor]}case"TensorListLength":{let n=v("tensorListId",r,t,e),o=e.getTensorList(n.id);return[de(o.size(),"int32")]}case"TensorListResize":{let n=v("tensorListId",r,t,e),o=v("size",r,t,e),a=e.getTensorList(n.id).resize(o);return e.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};function fL(r,t,e){let[n,o]=v("fusedOps",r,t,e),s=n==="biasadd",a=!s,i=o==="prelu",u=n==="fusedbatchnorm",l=v("numArgs",r,t,e);if(s){if(i&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let p=v("strides",r,t,e),m=Gh(r,t,e),c=v("dataFormat",r,t,e).toUpperCase(),d=v("dilations",r,t,e),[f,h]=v("args",r,t,e);a&&(h=f,f=void 0);let g=v("leakyreluAlpha",r,t,e);return{stride:p,pad:m,dataFormat:c,dilations:d,biasArg:f,preluArg:h,activationFunc:o,leakyreluAlpha:g}}var hL=(r,t,e,n=ct)=>{switch(r.op){case"Conv1D":{let o=v("stride",r,t,e),s=v("pad",r,t,e),a=v("dataFormat",r,t,e).toUpperCase(),i=v("dilation",r,t,e);return[n.conv1d(v("x",r,t,e),v("filter",r,t,e),o,s,a,i)]}case"Conv2D":{let o=v("strides",r,t,e),s=Gh(r,t,e),a=v("dataFormat",r,t,e).toUpperCase(),i=v("dilations",r,t,e);return[n.conv2d(v("x",r,t,e),v("filter",r,t,e),[o[1],o[2]],s,a,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:o,pad:s,dataFormat:a,dilations:i,biasArg:u,preluArg:l,activationFunc:p,leakyreluAlpha:m}=fL(r,t,e);return[n.fused.conv2d({x:v("x",r,t,e),filter:v("filter",r,t,e),strides:[o[1],o[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:p,preluActivationWeights:l,leakyreluAlpha:m})]}case"FusedDepthwiseConv2dNative":{let{stride:o,pad:s,dataFormat:a,dilations:i,biasArg:u,preluArg:l,activationFunc:p,leakyreluAlpha:m}=fL(r,t,e);return[n.fused.depthwiseConv2d({x:v("x",r,t,e),filter:v("filter",r,t,e),strides:[o[1],o[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:p,preluActivationWeights:l,leakyreluAlpha:m})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let o=v("outputShape",r,t,e),s=v("strides",r,t,e),a=Gh(r,t,e);return[n.conv2dTranspose(v("x",r,t,e),v("filter",r,t,e),o,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let o=v("strides",r,t,e),s=Gh(r,t,e),a=v("dilations",r,t,e),i=v("dataFormat",r,t,e).toUpperCase();return[n.depthwiseConv2d(v("input",r,t,e),v("filter",r,t,e),[o[1],o[2]],s,i,[a[1],a[2]])]}case"Conv3D":{let o=v("strides",r,t,e),s=v("pad",r,t,e),a=v("dataFormat",r,t,e).toUpperCase(),i=v("dilations",r,t,e);return[n.conv3d(v("x",r,t,e),v("filter",r,t,e),[o[1],o[2],o[3]],s,a,[i[1],i[2],i[3]])]}case"AvgPool":{let o=v("strides",r,t,e),s=v("pad",r,t,e),a=v("kernelSize",r,t,e);return[n.avgPool(v("x",r,t,e),[a[1],a[2]],[o[1],o[2]],s)]}case"MaxPool":{let o=v("strides",r,t,e),s=v("pad",r,t,e),a=v("kernelSize",r,t,e);return[n.maxPool(v("x",r,t,e),[a[1],a[2]],[o[1],o[2]],s)]}case"MaxPoolWithArgmax":{let o=v("strides",r,t,e),s=v("pad",r,t,e),a=v("kernelSize",r,t,e),i=v("includeBatchInIndex",r,t,e),{result:u,indexes:l}=n.maxPoolWithArgmax(v("x",r,t,e),[a[1],a[2]],[o[1],o[2]],s,i);return[u,l]}case"AvgPool3D":{let o=v("strides",r,t,e),s=v("pad",r,t,e),a=v("kernelSize",r,t,e);return[n.avgPool3d(v("x",r,t,e),[a[1],a[2],a[3]],[o[1],o[2],o[3]],s)]}case"MaxPool3D":{let o=v("strides",r,t,e),s=v("pad",r,t,e),a=v("kernelSize",r,t,e);return[n.maxPool3d(v("x",r,t,e),[a[1],a[2],a[3]],[o[1],o[2],o[3]],s)]}case"Dilation2D":{let o=v("strides",r,t,e),s=v("pad",r,t,e),a=v("dilations",r,t,e),i=o[1],u=o[2],l=a[1],p=a[2];return[n.dilation2d(v("x",r,t,e),v("filter",r,t,e),[i,u],s,[l,p],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var gL=(r,t,e,n=ct)=>{switch(r.op){case"Fill":{let o=v("shape",r,t,e),s=v("dtype",r,t,e),a=v("value",r,t,e);return[n.fill(o,a,s)]}case"LinSpace":{let o=v("start",r,t,e),s=v("stop",r,t,e),a=v("num",r,t,e);return[n.linspace(o,s,a)]}case"Multinomial":{let o=v("logits",r,t,e),s=v("numSamples",r,t,e),a=v("seed",r,t,e);return[n.multinomial(o,s,a)]}case"OneHot":{let o=v("indices",r,t,e),s=v("depth",r,t,e),a=v("onValue",r,t,e),i=v("offValue",r,t,e),u=v("dtype",r,t,e);return[n.oneHot(o,s,a,i,u)]}case"Ones":return[n.ones(v("shape",r,t,e),v("dtype",r,t,e))];case"OnesLike":return[n.onesLike(v("x",r,t,e))];case"RandomStandardNormal":return[n.randomStandardNormal(v("shape",r,t,e),v("dtype",r,t,e),v("seed",r,t,e))];case"RandomUniform":return[n.randomUniform(v("shape",r,t,e),v("minval",r,t,e),v("maxval",r,t,e),v("dtype",r,t,e))];case"Range":{let o=v("start",r,t,e),s=v("stop",r,t,e),a=v("step",r,t,e);return[n.range(o,s,a,v("dtype",r,t,e))]}case"TruncatedNormal":{let o=v("shape",r,t,e),s=v("mean",r,t,e),a=v("stdDev",r,t,e),i=v("seed",r,t,e);return[n.truncatedNormal(o,s,a,v("dtype",r,t,e),i)]}case"Zeros":return[n.zeros(v("shape",r,t,e),v("dtype",r,t,e))];case"ZerosLike":return[n.zerosLike(v("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function bw(r,t,e){let n=v("boxes",r,t,e),o=v("scores",r,t,e),s=v("maxOutputSize",r,t,e),a=v("iouThreshold",r,t,e),i=v("scoreThreshold",r,t,e),u=v("softNmsSigma",r,t,e);return{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:u}}var bL=async(r,t,e,n,o=ct)=>{switch(r.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:l,softNmsSigma:p}=bw(r,t,e),m=await o.image.nonMaxSuppressionWithScoreAsync(s,a,i,u,l,p);return[m.selectedIndices,m.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:l}=bw(r,t,e),p=v("padToMaxOutputSize",r,t,e),m=await o.image.nonMaxSuppressionPaddedAsync(s,a,i,u,l,p);return[m.selectedIndices,m.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:l}=bw(r,t,e);return[await o.image.nonMaxSuppressionAsync(s,a,i,u,l)]}case"Where":{let s=o.cast(v("condition",r,t,e),"bool"),a=[await o.whereAsync(s)];return s.dispose(),a}case"ListDiff":return o.setdiff1dAsync(v("x",r,t,e),v("y",r,t,e));default:throw TypeError(`Node type ${r.op} is not implemented`)}};var yL=(r,t,e,n=ct)=>{switch(r.op){case"LowerBound":{let o=v("sortedSequence",r,t,e),s=v("values",r,t,e);return[n.lowerBound(o,s)]}case"TopKV2":{let o=v("x",r,t,e),s=v("k",r,t,e),a=v("sorted",r,t,e),i=n.topk(o,s,a);return[i.values,i.indices]}case"UpperBound":{let o=v("sortedSequence",r,t,e),s=v("values",r,t,e);return[n.upperBound(o,s)]}case"Unique":{let o=v("x",r,t,e),s=n.unique(o);return[s.values,s.indices]}case"UniqueV2":{let o=v("x",r,t,e),s=v("axis",r,t,e),a=n.unique(o,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var TL=(r,t,e,n=ct)=>{switch(r.op){case"Const":return t[r.name];case"PlaceholderWithDefault":let o=v("default",r,t,e);return[kr(r.name,t,e)||o];case"Placeholder":return[kr(r.name,t,e)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let p=v("x",r,t,e);return[Qa(p)]}case"IdentityN":return v("x",r,t,e).map(p=>Qa(p));case"Snapshot":let s=v("x",r,t,e);return[Qa(s)];case"Shape":return[n.tensor1d(v("x",r,t,e).shape,"int32")];case"ShapeN":return v("x",r,t,e).map(p=>n.tensor1d(p.shape));case"Size":return[n.scalar(v("x",r,t,e).size,"int32")];case"Rank":return[n.scalar(v("x",r,t,e).rank,"int32")];case"NoOp":return[n.scalar(1)];case"Print":let a=v("x",r,t,e),i=v("data",r,t,e),u=v("message",r,t,e),l=v("summarize",r,t,e);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let p=0;p<i.length;p++)console.log(Array.prototype.slice.call(i[p].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var tx=class{constructor(t,e){this.keyDType=t;this.valueDType=e;this.handle=de(0),this.tensorMap=new Map,zt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return de(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);let n=await t.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),z(()=>{let o=Wr(e),s=n.length,a=o.length;y.assert(s===a,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${a} elements.`);for(let i=0;i<s;i++){let u=n[i],l=o[i];zt(l),this.tensorMap.set(u,l)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);let n=await t.data();return z(()=>{let o=[];for(let s=0;s<n.length;s++){let a=n[s],i=this.findWithDefault(a,e);o.push(i)}return Tr(o)})}findWithDefault(t,e){let n=this.tensorMap.get(t);return n??e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}};var xL=async(r,t,e,n)=>{switch(r.op){case"HashTable":case"HashTableV2":{let o=v("keyDType",r,t,e),s=v("valueDType",r,t,e),a=new tx(o,s);return n.addHashTable(r.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{let o=v("tableHandle",r,t,e,n),s=v("keys",r,t,e),a=v("values",r,t,e);return[await n.getHashTableById(o.id).import(s,a)]}case"LookupTableFind":case"LookupTableFindV2":{let o=v("tableHandle",r,t,e,n),s=v("keys",r,t,e),a=v("defaultValue",r,t,e);return[await n.getHashTableById(o.id).find(s,a)]}case"LookupTableSize":case"LookupTableSizeV2":{let o=v("tableHandle",r,t,e,n);return[n.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var IL=(r,t,e,n=ct)=>{switch(r.op){case"ResizeBilinear":{let o=v("images",r,t,e),s=v("size",r,t,e),a=v("alignCorners",r,t,e),i=v("halfPixelCenters",r,t,e);return[n.image.resizeBilinear(o,[s[0],s[1]],a,i)]}case"ResizeNearestNeighbor":{let o=v("images",r,t,e),s=v("size",r,t,e),a=v("alignCorners",r,t,e),i=v("halfPixelCenters",r,t,e);return[n.image.resizeNearestNeighbor(o,[s[0],s[1]],a,i)]}case"CropAndResize":{let o=v("image",r,t,e),s=v("boxes",r,t,e),a=v("boxInd",r,t,e),i=v("cropSize",r,t,e),u=v("method",r,t,e),l=v("extrapolationValue",r,t,e);return[n.image.cropAndResize(o,s,a,i,u,l)]}case"ImageProjectiveTransformV3":{let o=v("images",r,t,e),s=v("transforms",r,t,e),a=v("outputShape",r,t,e),i=v("fillValue",r,t,e),u=v("interpolation",r,t,e),l=v("fillMode",r,t,e);return[n.image.transform(o,s,u.toLowerCase(),l.toLowerCase(),i,a)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var CL=(r,t,e,n=ct)=>{switch(r.op){case"Equal":return[n.equal(v("a",r,t,e),v("b",r,t,e))];case"NotEqual":return[n.notEqual(v("a",r,t,e),v("b",r,t,e))];case"Greater":return[n.greater(v("a",r,t,e),v("b",r,t,e))];case"GreaterEqual":return[n.greaterEqual(v("a",r,t,e),v("b",r,t,e))];case"Less":return[n.less(v("a",r,t,e),v("b",r,t,e))];case"LessEqual":return[n.lessEqual(v("a",r,t,e),v("b",r,t,e))];case"LogicalAnd":return[n.logicalAnd(v("a",r,t,e),v("b",r,t,e))];case"LogicalNot":return[n.logicalNot(v("a",r,t,e))];case"LogicalOr":return[n.logicalOr(v("a",r,t,e),v("b",r,t,e))];case"Select":case"SelectV2":return[n.where(v("condition",r,t,e),v("a",r,t,e),v("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var kL=(r,t,e,n=ct)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[n.matMul(v("a",r,t,e),v("b",r,t,e),v("transposeA",r,t,e),v("transposeB",r,t,e))];case"Einsum":return[n.einsum(v("equation",r,t,e),...v("tensors",r,t,e))];case"Transpose":return[n.transpose(v("x",r,t,e),v("perm",r,t,e))];case"_FusedMatMul":let[o,s]=v("fusedOps",r,t,e),a=o==="biasadd",i=s==="prelu",u=v("numArgs",r,t,e),l=v("leakyreluAlpha",r,t,e);if(a){if(i&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[p,m]=v("args",r,t,e);return[n.fused.matMul({a:v("a",r,t,e),b:v("b",r,t,e),transposeA:v("transposeA",r,t,e),transposeB:v("transposeB",r,t,e),bias:p,activation:s,preluActivationWeights:m,leakyreluAlpha:l})];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var SL=(r,t,e,n=ct)=>{switch(r.op){case"EuclideanNorm":return[n.euclideanNorm(v("x",r,t,e),v("axis",r,t,e),v("keepDims",r,t,e))];case"FusedBatchNorm":case"FusedBatchNormV2":return[n.batchNorm(v("x",r,t,e),v("mean",r,t,e),v("variance",r,t,e),v("offset",r,t,e),v("scale",r,t,e),v("epsilon",r,t,e))];case"FusedBatchNormV3":return[n.batchNorm(v("x",r,t,e),v("mean",r,t,e),v("variance",r,t,e),v("offset",r,t,e),v("scale",r,t,e),v("epsilon",r,t,e))];case"LRN":return[n.localResponseNormalization(v("x",r,t,e),v("radius",r,t,e),v("bias",r,t,e),v("alpha",r,t,e),v("beta",r,t,e))];case"Softmax":return[n.softmax(v("x",r,t,e))];case"LogSoftmax":return[n.logSoftmax(v("x",r,t,e))];case"SparseToDense":return[n.sparseToDense(v("sparseIndices",r,t,e),v("outputShape",r,t,e),v("sparseValues",r,t,e),v("defaultValue",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var vL=(r,t,e,n=ct)=>{switch(r.op){case"Max":{let i=v("axis",r,t,e),u=v("keepDims",r,t,e);return[n.max(v("x",r,t,e),i,u)]}case"Mean":{let i=v("axis",r,t,e),u=v("keepDims",r,t,e);return[n.mean(v("x",r,t,e),i,u)]}case"Min":{let i=v("axis",r,t,e),u=v("keepDims",r,t,e);return[n.min(v("x",r,t,e),i,u)]}case"Sum":{let i=v("axis",r,t,e),u=v("keepDims",r,t,e);return[n.sum(v("x",r,t,e),i,u)]}case"All":{let i=v("axis",r,t,e),u=v("keepDims",r,t,e);return[n.all(v("x",r,t,e),i,u)]}case"Any":{let i=v("axis",r,t,e),u=v("keepDims",r,t,e);return[n.any(v("x",r,t,e),i,u)]}case"ArgMax":{let i=v("axis",r,t,e);return[n.argMax(v("x",r,t,e),i)]}case"ArgMin":{let i=v("axis",r,t,e);return[n.argMin(v("x",r,t,e),i)]}case"Prod":{let i=v("axis",r,t,e),u=v("keepDims",r,t,e);return[n.prod(v("x",r,t,e),i,u)]}case"Cumprod":{let i=v("axis",r,t,e),u=v("exclusive",r,t,e),l=v("reverse",r,t,e);return[n.cumprod(v("x",r,t,e),i,u,l)]}case"Cumsum":{let i=v("axis",r,t,e),u=v("exclusive",r,t,e),l=v("reverse",r,t,e);return[n.cumsum(v("x",r,t,e),i,u,l)]}case"Bincount":let o=v("x",r,t,e),s=v("weights",r,t,e),a=v("size",r,t,e);return[n.bincount(o,s,a)];case"DenseBincount":{let i=v("x",r,t,e),u=v("weights",r,t,e),l=v("size",r,t,e),p=v("binaryOutput",r,t,e);return[n.denseBincount(i,u,l,p)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var AL=(r,t,e,n=ct)=>{switch(r.op){case"ConcatV2":case"Concat":{let o=v("n",r,t,e),s=v("axis",r,t,e),a=v("tensors",r,t,e);return a=a.slice(0,o),[n.concat(a,s)]}case"Gather":{let o=v("x",r,t,e),s=v("indices",r,t,e);return[n.gather(o,n.cast(s,"int32"),0)]}case"GatherV2":{let o=v("axis",r,t,e),s=v("batchDims",r,t,e),a=v("x",r,t,e),i=v("indices",r,t,e);return[n.gather(a,n.cast(i,"int32"),o,s)]}case"Reverse":{let o=v("dims",r,t,e),s=[];for(let i=0;i<o.length;i++)o[i]&&s.push(i);let a=v("x",r,t,e);return[n.reverse(a,s)]}case"ReverseV2":{let o=v("axis",r,t,e),s=v("x",r,t,e);return[n.reverse(s,o)]}case"Slice":{let o=v("begin",r,t,e),s=v("size",r,t,e);return[n.slice(v("x",r,t,e),o,s)]}case"StridedSlice":{let o=v("begin",r,t,e),s=v("end",r,t,e),a=v("strides",r,t,e),i=v("beginMask",r,t,e),u=v("endMask",r,t,e),l=v("ellipsisMask",r,t,e),p=v("newAxisMask",r,t,e),m=v("shrinkAxisMask",r,t,e),c=v("x",r,t,e);return[n.stridedSlice(c,o,s,a,i,u,l,p,m)]}case"Pack":return z(()=>{let o=v("axis",r,t,e),s=v("tensors",r,t,e),a=s[0].shape,i=n.squeeze(s[0]).shape,u=s.map(l=>{let p=y.arraysEqual(l.shape,a);if(!p&&!y.arraysEqual(n.squeeze(l).shape,i))throw new Error("the input tensors shape does not match");return p?l:n.reshape(l,a)});return[n.stack(u,o)]});case"Unpack":{let o=v("axis",r,t,e),s=v("tensor",r,t,e);return n.unstack(s,o)}case"Tile":{let o=v("reps",r,t,e);return[n.tile(v("x",r,t,e),o)]}case"Split":case"SplitV":{let o=v("axis",r,t,e),s=v("numOrSizeSplits",r,t,e),a=v("x",r,t,e);return n.split(a,s,o)}case"ScatterNd":{let o=v("indices",r,t,e),s=v("values",r,t,e),a=v("shape",r,t,e);return[n.scatterND(o,s,a)]}case"GatherNd":{let o=v("x",r,t,e),s=v("indices",r,t,e);return[n.gatherND(o,s)]}case"SparseToDense":{let o=v("sparseIndices",r,t,e),s=v("outputShape",r,t,e),a=v("sparseValues",r,t,e),i=v("defaultValue",r,t,e);return[n.sparseToDense(o,a,s,a.dtype===i.dtype?i:n.cast(i,a.dtype))]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var wL=(r,t,e,n=ct)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:o,outputValues:s,emptyRowIndicator:a,reverseIndexMap:i}=n.sparse.sparseFillEmptyRows(v("indices",r,t,e),v("values",r,t,e),v("denseShape",r,t,e),v("defaultValue",r,t,e));return[o,s,a,i]}case"SparseReshape":{let{outputIndices:o,outputShape:s}=n.sparse.sparseReshape(v("inputIndices",r,t,e),v("inputShape",r,t,e),v("newShape",r,t,e));return[o,s]}case"SparseSegmentMean":return[n.sparse.sparseSegmentMean(v("data",r,t,e),v("indices",r,t,e),v("segmentIds",r,t,e))];case"SparseSegmentSum":return[n.sparse.sparseSegmentSum(v("data",r,t,e),v("indices",r,t,e),v("segmentIds",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var NL=(r,t,e,n=ct)=>{switch(r.op){case"FFT":return[n.fft(v("x",r,t,e))];case"IFFT":return[n.ifft(v("x",r,t,e))];case"RFFT":return[n.rfft(v("x",r,t,e))];case"IRFFT":return[n.irfft(v("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var DL=(r,t,e,n=ct)=>{switch(r.op){case"StringNGrams":{let{nGrams:o,nGramsSplits:s}=n.string.stringNGrams(v("data",r,t,e),v("dataSplits",r,t,e),v("separator",r,t,e),v("nGramWidths",r,t,e),v("leftPad",r,t,e),v("rightPad",r,t,e),v("padWidth",r,t,e),v("preserveShortSequences",r,t,e));return[o,s]}case"StringSplit":{let{indices:o,values:s,shape:a}=n.string.stringSplit(v("input",r,t,e),v("delimiter",r,t,e),v("skipEmpty",r,t,e));return[o,s,a]}case"StringToHashBucketFast":return[n.string.stringToHashBucketFast(v("input",r,t,e),v("numBuckets",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var RL=(r,t,e,n=ct)=>{switch(r.op){case"Cast":return[n.cast(v("x",r,t,e),v("dtype",r,t,e))];case"ExpandDims":{let o=v("axis",r,t,e);return[n.expandDims(v("x",r,t,e),o)]}case"Squeeze":{let o=v("axis",r,t,e);return[n.squeeze(v("x",r,t,e),o)]}case"Reshape":return[n.reshape(v("x",r,t,e),v("shape",r,t,e))];case"MirrorPad":return[n.mirrorPad(v("x",r,t,e),v("padding",r,t,e),v("mode",r,t,e))];case"PadV2":case"Pad":return[n.pad(v("x",r,t,e),v("padding",r,t,e),v("constantValue",r,t,e))];case"SpaceToBatchND":{let o=v("blockShape",r,t,e),s=v("paddings",r,t,e);return[n.spaceToBatchND(v("x",r,t,e),o,s)]}case"BatchToSpaceND":{let o=v("blockShape",r,t,e),s=v("crops",r,t,e);return[n.batchToSpaceND(v("x",r,t,e),o,s)]}case"DepthToSpace":{let o=v("blockSize",r,t,e),s=v("dataFormat",r,t,e).toUpperCase();return[n.depthToSpace(v("x",r,t,e),o,s)]}case"BroadcastTo":return[n.broadcastTo(v("x",r,t,e),v("shape",r,t,e))];case"BroadcastArgs":return[n.broadcastArgs(v("s0",r,t,e),v("s1",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function yw(r,t,e,n,o=z){let s=((a,i,u)=>{switch(a.category){case"arithmetic":return o(()=>aL(a,i,u));case"basic_math":return o(()=>iL(a,i,u));case"control":return dL(a,i,u);case"convolution":return o(()=>hL(a,i,u));case"creation":return o(()=>gL(a,i,u));case"dynamic":return bL(a,i,u);case"evaluation":return o(()=>yL(a,i,u));case"image":return o(()=>IL(a,i,u));case"graph":return o(()=>TL(a,i,u));case"logical":return o(()=>CL(a,i,u));case"matrices":return o(()=>kL(a,i,u));case"normalization":return o(()=>SL(a,i,u));case"reduction":return o(()=>vL(a,i,u));case"slice_join":return o(()=>AL(a,i,u));case"sparse":return o(()=>wL(a,i,u));case"spectral":return o(()=>NL(a,i,u));case"string":return o(()=>DL(a,i,u));case"transformation":return o(()=>RL(a,i,u));case"hash_table":return xL(a,i,u,n);case"custom":let l=zT(a.op);if(l&&l.customExecutor)return l.customExecutor(new QT(a,i,u));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,t,e);return y.isPromise(s)?s.then(a=>[].concat(a)):[].concat(s)}var Wh=class{constructor(t={},e={},n={},o={}){this.weightMap=t;this.tensorArrayMap=e;this.tensorListMap=n;this.functionMap=o;this.rootContext={id:0,frameName:"",iterationId:0};this.contexts=[this.rootContext];this.lastId=0;this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let t=[];for(let e=0;e<this.contexts.length-1;e++){let n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>e.id===0&&e.iterationId===0?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(let e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(let e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}};function Tw(r,t,e,n){let o=new Set,s=[],a=null,i=null,u=new Set,l=Object.keys(r).map(c=>Cn(c)[0]),p=[];n!=null&&(p=n.map(c=>Cn(c.name)[0]));let m=[...t];for(;m.length>0;){let c=m.pop();if((xw(c)||qte(c)||jte(c))&&a==null&&(a=c,i=a.children.map(d=>d.name).filter(d=>o.has(d))),o.add(c.name),e[c.name]==null&&l.indexOf(c.name)===-1&&p.indexOf(c.name)===-1){if(c.inputs.length===0){s.push(c.name);continue}c.inputs.forEach(d=>{u.has(d.name)||(u.add(d.name),m.push(d))})}}return{inputs:r,outputs:t,usedNodes:o,missingInputs:s,dynamicNode:a,syncInputs:i}}function FL(r,t,e){let{usedNodes:n,inputs:o}=e,s=[],a=Object.keys(o).map(p=>Cn(p)[0]).map(p=>r.nodes[p]),i=r.initNodes;a.forEach(p=>{n.has(p.name)&&s.push(p)}),r.weights.forEach(p=>{n.has(p.name)&&s.push(p)}),i?.forEach(p=>{n.has(p.name)&&s.push(p)});let u=new Set,l=[];for(;s.length>0;){let p=s.pop();u.add(p.name),t[p.name]||l.push(p),p.children.forEach(m=>{!u.has(m.name)&&n.has(m.name)&&m.inputs.every(c=>u.has(c.name))&&s.push(m)})}return l}var Kte=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Vte=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Hte=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function xw(r){return Kte.indexOf(r.op)>=0}function qte(r){return Vte.indexOf(r.op)>=0}function jte(r){return Hte.indexOf(r.op)>=0}var El=class{constructor(t,e){this.graph=t;this.parent=e;this.compiledMap=new Map;this._weightMap={};this.SEPERATOR=",";this._functions={};this._functionExecutorMap={};this.intermediateTensors={};this.keepTensorForDebug=!1;this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(n=>{this._functionExecutorMap[n]=new El(t.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){let e=Object.keys(t).map(n=>t[n].map(o=>o.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{let e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}getCompilationKey(t,e){let n=t.map(s=>s.name).sort(),o=e.map(s=>s.name).sort();return n.join(this.SEPERATOR)+"--"+o.join(this.SEPERATOR)}compile(t,e){let n=Tw(t,e,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:s,syncInputs:a}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(o.length>0){let i=e.map(l=>l.name),u=Object.keys(t);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${u}]. Missing the following inputs: [${o}]`)}return FL(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);let n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);let o=n.map(m=>this.graph.nodes[Cn(m)[0]]),s=e.map(m=>Cn(m)[0]),a=s.map(m=>this.graph.nodes[m]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);let i=this.getCompilationKey(o,a),u=this.compiledMap.get(i);u==null&&(u=this.compile(t,a),this.compiledMap.set(i,u));let l={},p={};return z(()=>{let m=new Wh(this.weightMap,l,p,this.functionExecutorMap),c={...this.weightMap};Object.keys(t).forEach(h=>{let[g,b]=Cn(h),T=[];T[b]=t[h],c[g]=T});let d=this.getFrozenTensorIds(c),f={};for(let h=0;h<u.length;h++){let g=u[h];if(!c[g.name]){let b=yw(g,c,m,this._resourceManager);if(y.isPromise(b))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);c[g.name]=b,this.checkTensorForDisposal(g.name,g,c,m,d,s,f)}}return this.parent==null&&m.dispose(d),e.map(h=>kr(h,c,m))})}getFrozenTensorIds(t){let e=[].concat.apply([],Object.keys(t).map(n=>t[n]).map(n=>n.map(o=>o.id)));return new Set(e)}checkTensorForDisposal(t,e,n,o,s,a,i){e.category==="control"||a.indexOf(t)!==-1||(n[t].forEach(u=>{u!=null&&(i[u.id]=(i[u.id]||0)+e.children.length)}),e.inputs.forEach(u=>{if(u.category!=="control"){let l=rL(u.name,n,o);l?.forEach(p=>{if(p&&!p.kept&&!s.has(p.id)){let m=i[p.id];if(m===1){if(!this.keepTensorForDebug)p.dispose();else{let[c,d]=js(e.name,o);this.intermediateTensors[c]?this.intermediateTensors[c][d]=p:(this.intermediateTensors[c]=[],this.intermediateTensors[c][d]=p)}delete i[p.id]}else m!=null&&i[p.id]--}})}}))}async executeAsync(t,e){return this._executeAsync(t,e)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(t=>this.intermediateTensors[t].forEach(e=>e.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(t=>{this.tensorsMap[t].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let t in this.intermediateTensors)this.intermediateTensors[t].forEach(e=>e.dispose()),delete this.intermediateTensors[t]}async _executeAsync(t,e,n=!1,o={},s={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepTensorForDebug=$().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){console.warn(p.message)}this.resetIntermediateTensors();let a=new Wh(this.weightMap,o,s,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(t,a,e,n);let i=e.map(p=>kr(p,this.tensorsMap,a)),u=i.map(p=>p.id),l=Object.keys(t).map(p=>t[p].id);return this.keepIds=new Set([...u,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),i}async executeFunctionAsync(t,e,n){let o=t.reduce((s,a,i)=>(s[this.inputs[i].name]=a,s),{});return this._executeAsync(o,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,o){let s=Object.keys(t),a=s.map(x=>this.graph.nodes[Cn(x)[0]]),i=n.map(x=>Cn(x)[0]),u=i.map(x=>this.graph.nodes[x]);u.length===0&&(u=this._outputs);let{usedNodes:l,missingInputs:p,dynamicNode:m,syncInputs:c}=Tw(t,u,this.weightMap,this._initNodes),d=[...a,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:e.currentContext})),f={...this.weightMap};Object.keys(t).forEach(x=>{let[I,k]=Cn(x),A=[];A[k]=t[x],f[I]=A});let h={},g=this.getFrozenTensorIds(f),b={};for(;d.length>0;){let x=this.processStack(a,d,e,f,b,g,i,h,l);await Promise.all(x)}m==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let T=u.filter(x=>!xw(x)&&!kr(x.name,f,e)).map(x=>x.name);if(T.length>0){let x="";throw m!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${T}] from the provided inputs [${s}]. Consider providing the following inputs: [${p}]. ${x}`)}return f}processStack(t,e,n,o,s,a,i,u,l){let p=[];for(;e.length>0;){let m=e.pop();n.currentContext=m.contexts;let c="";if(m.node.op==="Enter"&&v("isConstant",m.node,o,n)&&([c]=js(m.node.name,n)),o[m.node.name]==null){let d=yw(m.node,o,n,this._resourceManager);c||([c]=js(m.node.name,n));let f=n.currentContext;y.isPromise(d)?p.push(d.then(h=>(o[c]=h,n.currentContext=f,this.checkTensorForDisposal(c,m.node,o,n,a,i,u),this.processChildNodes(m.node,e,n,o,s,l),h))):(o[c]=d,this.checkTensorForDisposal(c,m.node,o,n,a,i,u),this.processChildNodes(m.node,e,n,o,s,l))}else this.processChildNodes(m.node,e,n,o,s,l)}return p}processChildNodes(t,e,n,o,s,a){t.children.forEach(i=>{let[u]=js(i.name,n);s[u]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(l=>!!kr(l,o,n))&&(s[u]=!0,e.push({contexts:n.currentContext,node:i})):i.inputNames.every(l=>!!kr(l,o,n))&&(s[u]=!0,e.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{let n=t[e],[o]=Cn(e),s=this.graph.nodes[o];if(s.attrParams.shape&&s.attrParams.shape.value){let a=s.attrParams.shape.value,i=a.length===n.shape.length&&n.shape.every((u,l)=>a[l]===-1||a[l]===u);y.assert(i,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&y.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(t){let e={};for(let n in t)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let o=this._signature.inputs[n];e[o.name]=t[n]}else e[n]=t[n];return e}checkInputs(t){let e=Object.keys(t).filter(n=>{let[o]=Cn(n);return this.graph.nodes[o]==null});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[e]!=null?this._signature.outputs[e].name:e,{})}checkOutputs(t){t.forEach(e=>{let[n]=Cn(e);if(!this.graph.nodes[n])throw new Error(`The output '${e}' is not found in the graph`)})}};var rx=class{constructor(t={},e={}){this.hashTableNameToHandle=t;this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(let t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(let t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}};var Xte="?tfjs-format=file",Yte="model.json",Kh=class{constructor(t,e={},n=Pn){this.modelUrl=t;this.loadOptions=e;this.version="n/a";this.io=n,e==null&&(this.loadOptions={}),this.resourceManager=new rx}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{let e=this.io.getLoadHandlers(t,this.loadOptions);if(e.length===0)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let t=this.handler.load();return y.isPromise(t)?t.then(e=>this.loadSync(e)):this.loadSync(t)}loadSync(t){this.artifacts=t;let e=this.artifacts.modelTopology,n=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let s=this.artifacts.userDefinedMetadata;s.signature!=null&&(n=s.signature),s.structuredOutputKeys!=null&&(this.structuredOutputKeys=s.structuredOutputKeys)}this.signature=n,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;let o=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new El(Uh.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null&&t.modelInitializer.node!=null){let s=Uh.Instance.transformGraph(t.modelInitializer);this.initializer=new El(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if(typeof t=="string"){let n=this.io.getSaveHandlers(t);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${t}'`);t=n[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){let n=this.execute(t,this.outputNodes);if(this.structuredOutputKeys){let o=n instanceof We?[n]:n,s={};return o.forEach((a,i)=>s[this.structuredOutputKeys[i]]=a),s}return n}normalizeInputs(t){if(!(t instanceof We)&&!Array.isArray(t))return t;if(t=Array.isArray(t)?t:[t],t.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce((e,n,o)=>(e[n]=t[o],e),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,n)=>(e[n]=[t[n]],e),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function Zte(r,t={},e=Pn){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof r=="string"&&(r=Jte(r));let n=new Kh(r,t,e);return await n.load(),n}function Qte(r){if(r==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide a url or an IOHandler that loads the model");if(!r.load)throw new Error(`modelUrl IO Handler ${r} has no load function`);let t=new Kh(r);return t.load(),t}function Jte(r){return r.endsWith("/")||(r=r+"/"),`${r}${Yte}${Xte}`}var ere="0.0.0";var QL={};He(QL,{CSVDataset:()=>qd,Dataset:()=>Ja,FileDataSource:()=>Qd,TextLineDataset:()=>Hd,URLDataSource:()=>Jd,array:()=>GL,csv:()=>HL,func:()=>qL,generator:()=>jL,microphone:()=>YL,version_data:()=>ZL,webcam:()=>XL,zip:()=>UL});var zL=hm(xh());var $L=hm(xh());function PL(r,t){return nx(r,t)}function nx(r,t,e=new Map,n=new Set){if(r==null)return null;if(typeof Blob=="function"&&r instanceof Blob)return r.slice();if(n.has(r))throw new Error("Circular references are not supported.");if(e.has(r))return e.get(r);let o=t(r);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(Np(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let a in r){let i=r[a],u=nx(i,t,e,n);s[a]=u}return n.delete(r),r.__proto__&&(s.__proto__=r.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return e.set(r,o.value),o.value}function ML(r,t=Cw){return EL(r,t)}function EL(r,t,e=new Set){let n=r[0];if(e.has(n))throw new Error("Circular references are not supported.");let o=t(r);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(Np(n)){let s=Array.isArray(n)?[]:{};e.add(n);for(let a in n){let i=r.map(l=>l[a]),u=EL(i,t,e);s[a]=u}return e.delete(n),s}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return o.value}function Cw(r){return r===null?null:Np(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}async function ox(r,t){let e=new Map;nx(r,t,e);for(let o of Array.from(e.keys())){let s=e.get(o);if(y.isPromise(s)){let a=await s;e.set(o,a)}}return nx(r,t,e)}function Np(r){let t=!1;if($().get("IS_BROWSER"))t=r instanceof TextDecoder;else{let{StringDecoder:e}=Iw();t=r instanceof e}return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof We)&&!(r instanceof Promise)&&!t)}function LL(r){return r==null||tre(r)||Array.isArray(r)||typeof r=="object"&&r instanceof We||y.isTypedArray(r)}function tre(r){return r===null||typeof r!="object"&&typeof r!="function"}function _L(r){return PL(r,rre)}function rre(r){return r instanceof We?{value:r.clone(),recurse:!1}:Np(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var Vd=class{constructor(t){this.capacity=t;this.begin=0;this.end=0;if(t==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(let e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}};var kw=class extends Vd{constructor(){super(kw.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){let t=this.capacity*2,e=new Array(t),n=this.length();for(let o=0;o<n;o++)e[o]=this.get(this.wrap(this.begin+o));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},Vh=kw;Vh.INITIAL_CAPACITY=32;function _w(r){return new Sw(r)}function Hh(r){return new vw(r)}function BL(r,t){return new ax(r,t)}function OL(r,t=$w.FAIL){return new Ew(r,t)}var nr=class{async toArray(){let t=[],e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){let t=this.prefetch(100),e=[],n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new Pw(this,t)}filter(t){return new Rw(this,t)}map(t){return new Fw(this,t)}mapAsync(t){return new sx(this,t)}serialMapAsync(t){return new sx(this,t).serial()}flatmap(t){return new Mw(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(e=>e===!0)}rowMajorBatch(t,e=!0){return new Dw(this,t,e)}columnMajorBatch(t,e=!0,n=Cw){return this.rowMajorBatch(t,e).map(s=>ML(s,n))}concatenate(t,e){return new ax(_w([this,t]),e)}take(t){return t<0||t==null?this:new Nw(this,t)}skip(t){return t<0||t==null?this:new ww(this,t)}prefetch(t){return new ix(this,t)}shuffle(t,e){return new Lw(this,t,e)}serial(){return new Aw(this)}},Sw=class extends nr{constructor(e){super();this.items=e;this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:_L(e),done:!1}}},vw=class extends nr{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},Aw=class extends nr{constructor(e){super();this.upstream=e;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},ww=class extends nr{constructor(e,n){super();this.upstream=e;this.maxCount=n;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Re(e.value)}return this.upstream.next()}},Nw=class extends nr{constructor(e,n){super();this.upstream=e;this.maxCount=n;this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},Dw=class extends nr{constructor(e,n,o=!0){super();this.upstream=e;this.batchSize=n;this.enableSmallLastBatch=o;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let n=await this.upstream.next();if(n.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(n.value)}return{value:e,done:!1}}},Rw=class extends nr{constructor(e,n){super();this.upstream=e;this.predicate=n;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Re(e.value)}}},Fw=class extends nr{constructor(e,n){super();this.upstream=e;this.transform=n}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let n=Ms.getTensorsInContainer(e.value),o=this.transform(e.value),s=Ms.getTensorsInContainer(o);for(let a of n)Ms.isTensorInList(a,s)||a.dispose();return{value:o,done:!1}}},Pw=class extends nr{constructor(e,n){super();this.upstream=e;this.handler=n;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},sx=class extends nr{constructor(e,n){super();this.upstream=e;this.transform=n}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let n=Ms.getTensorsInContainer(e.value),o=await this.transform(e.value),s=Ms.getTensorsInContainer(o);for(let a of n)Ms.isTensorInList(a,s)||a.dispose();return{value:o,done:!1}}},Ll=class extends nr{constructor(){super();this.outputQueue=new Vh,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},Mw=class extends Ll{constructor(e,n){super();this.upstream=e;this.transform=n}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let n=Ms.getTensorsInContainer(e.value),o=this.transform(e.value),s=Ms.getTensorsInContainer(o);this.outputQueue.pushAll(o);for(let a of n)Ms.isTensorInList(a,s)||a.dispose();return!0}},ax=class extends nr{constructor(e,n){super();this.baseErrorHandler=n;this.lastRead=null;this.iterator=null;this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let o=await this.moreIterators.next();if(o.done)return{value:null,done:!0};this.iterator=o.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let n=await this.iterator.next();return n.done?(this.iterator=null,this.readFromChain(e)):n}},$w=(n=>(n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST",n))($w||{}),Ew=class extends nr{constructor(e,n=0){super();this.iterators=e;this.mismatchMode=n;this.count=0;this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let n=0,o=0;function s(i){return i instanceof nr?{value:i.next().then(l=>(n++,l.done&&o++,l.value)),recurse:!1}:{value:null,recurse:!0}}let a=await ox(this.iterators,s);if(n===o)return{value:null,done:!0};if(o>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},ix=class extends nr{constructor(e,n){super();this.upstream=e;this.bufferSize=n;this.buffer=new Vd(n)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},Lw=class extends ix{constructor(e,n,o){super(e,n);this.upstream=e;this.windowSize=n;this.upstreamExhausted=!1;this.random=$L.alea(o||y.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),n=await this.buffer.shuffleExcise(e);if(n.done)this.upstreamExhausted=!0;else return this.refill(),n}return{value:null,done:!0}}};var Ja=class{constructor(){this.size=null}batch(t,e=!0){let n=this;y.assert(t>0,()=>`batchSize needs to be positive, but it is
      ${t}`);let o;return this.size===1/0||this.size==null?o=this.size:e?o=Math.ceil(this.size/t):o=Math.floor(this.size/t),Bn(async()=>(await n.iterator()).columnMajorBatch(t,e,nre),o)}concatenate(t){let e=this,n;return this.size===1/0||t.size===1/0?n=1/0:this.size!=null&&t.size!=null?n=this.size+t.size:n=null,Bn(async()=>(await e.iterator()).concatenate(await t.iterator()),n)}filter(t){let e=this,n;return this.size===1/0?n=1/0:n=null,Bn(async()=>(await e.iterator()).filter(o=>z(()=>t(o))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){let e=this;return Bn(async()=>(await e.iterator()).map(n=>z(()=>t(n))),this.size)}mapAsync(t){let e=this;return Bn(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(t==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let e=this;return Bn(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){let e=this,n;return this.size!=null&&t>0?n=this.size*t:t===0?n=0:this.size!=null&&(t===void 0||t<0)?n=1/0:n=null,Bn(async()=>{let o=Hh(async()=>({value:await e.iterator(),done:!1}));return BL(o.take(t))},n)}skip(t){let e=this,n;return this.size!=null&&t>=0&&this.size>=t?n=this.size-t:this.size!=null&&(this.size<t||t===void 0||t<0)?n=0:n=null,Bn(async()=>(await e.iterator()).skip(t),n)}shuffle(t,e,n=!0){if(t==null||t<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let o=this,s=zL.alea(e||y.now().toString());return Bn(async()=>{let a=s.int32();return n&&(a+=s.int32()),(await o.iterator()).shuffle(t,a.toString())},this.size)}take(t){let e=this,n;return this.size!=null&&this.size>t?n=t:this.size!=null&&this.size<=t?n=this.size:n=null,Bn(async()=>(await e.iterator()).take(t),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Ja.MAX_BUFFER_SIZE=1e4;function Bn(r,t=null){return new class extends Ja{constructor(){super(...arguments);this.size=t}async iterator(){return r()}}}function GL(r){return Bn(async()=>_w(r),r.length)}function UL(r){if(!Np(r))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(r))for(let e=0;e<r.length;e++)t=t==null?r[e].size:Math.min(t,r[e].size);else if(r instanceof Object)for(let e in r)t=t==null?r[e].size:Math.min(t,r[e].size);return Bn(async()=>{let e=await ox(r,n=>{if(n instanceof Ja)return{value:n.iterator(),recurse:!1};if(Np(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return OL(e,1)},t)}function nre(r){if(r===null)return null;let t=r[0];return LL(t)?{value:ore(r),recurse:!1}:{value:null,recurse:!0}}function ore(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof We?Tr(r):Ar(r)}var Hd=class extends Ja{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(s=>(s.endsWith("\r")&&(s=s.slice(0,-1)),s))}};var ux='"',qh=Symbol("out"),WL=Symbol("field"),px=Symbol("quote"),Bw=Symbol("quoteafterquote"),KL=Symbol("quoteinquote"),qd=class extends Ja{constructor(e,n){super();this.input=e;this.hasHeader=!0;this.fullColumnNames=null;this.columnNamesValidated=!1;this.columnConfigs=null;this.configuredColumnsOnly=!1;this.delimiter=",";this.delimWhitespace=!1;this.base=new Hd(e),n||(n={}),this.hasHeader=n.hasHeader!==!1,this.fullColumnNames=n.columnNames,this.columnConfigs=n.columnConfigs,this.configuredColumnsOnly=n.configuredColumnsOnly,n.delimWhitespace?(y.assert(n.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=n.delimiter?n.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&y.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let n=this.fullColumnNames.reduce((s,a)=>(s[a]=s[a]+1||1,s),{}),o=Object.keys(n).filter(s=>n[s]>1);if(y.assert(o.length===0,()=>"Duplicate column names found: "+o.toString()),this.columnConfigs){for(let s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let n=await(await this.base.iterator()).next();if(n.done)throw new Error("No data was found for CSV parsing.");let o=n.value;return this.parseRow(o,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(n=>this.makeDataElement(n))}makeDataElement(e){let n=this.parseRow(e),o={},s={};for(let a=0;a<this.fullColumnNames.length;a++){let i=this.fullColumnNames[a],u=this.columnConfigs?this.columnConfigs[i]:null;if(!(this.configuredColumnsOnly&&!u)){let l=n[a],p=null;if(l==="")if(u&&u.default!==void 0)p=u.default;else{if(u&&(u.required||u.isLabel))throw new Error(`Required column ${i} is empty in this line: ${e}`);p=void 0}else{let m=Number(l);if(isNaN(m))u&&u.dtype==="bool"?p=this.getBoolean(l):p=l;else if(!u||!u.dtype)p=m;else switch(u.dtype){case"float32":p=m;break;case"int32":p=Math.floor(m);break;case"bool":p=this.getBoolean(l);break;default:p=m}}u&&u.isLabel?s[i]=p:o[i]=p}}return Object.keys(s).length===0?o:{xs:o,ys:s}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,n=!0){let o=[],s=0,a=e.length,i=qh;for(let u=0;u<a;u++)switch(i){case qh:switch(e.charAt(u)){case ux:s=u+1,i=px;break;case this.delimiter:if(s=u+1,this.delimiter===" "&&this.delimWhitespace)break;o.push(""),i=qh;break;default:i=WL,s=u;break}break;case WL:switch(e.charAt(u)){case this.delimiter:o.push(e.substring(s,u)),i=qh,s=u+1;break;default:}break;case px:switch(e.charAt(u)){case ux:i=Bw;break;default:}break;case Bw:switch(e.charAt(u)){case this.delimiter:o.push(e.substring(s,u-1)),i=qh,s=u+1;break;case ux:i=px;break;default:i=KL;break}break;case KL:switch(e.charAt(u)){case ux:i=px;break;default:}break;default:}if(i===Bw?o.push(e.substring(s,a-1)):o.push(e.substring(s)),n&&o.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${o}`);return o}};var jd=class extends nr{constructor(e){super();this.microphoneConfig=e;this.isClosed=!1;this.fftSize=e.fftSize||1024;let n=Math.log2(this.fftSize);if(this.fftSize<0||n<4||n>14||!Number.isInteger(n))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!$().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let n=new jd(e);return await n.start(),n}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(o){throw new Error(`Error thrown while initializing video stream: ${o.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let n=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,n.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,n,o=await this.getAudioData();if(this.includeSpectrogram){let s=this.flattenQueue(o.freqDataQueue);e=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let s=this.flattenQueue(o.timeDataQueue);n=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:n},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],n=[],o=0;return new Promise(s=>{let a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:n}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),n.push(this.timeData.slice())),++o===this.numFrames&&(clearInterval(a),s({freqDataQueue:e,timeDataQueue:n}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let n=e[0].length,o=new Float32Array(e.length*n);return e.forEach((s,a)=>o.set(s,a*n)),o}getTensorFromAudioDataArray(e,n){let o=new Float32Array(y.sizeFromShape(n));return o.set(e,o.length-e.length),Ar(o,n)}};var Xd=class extends nr{constructor(e,n){super();this.webcamVideoElement=e;this.webcamConfig=n;this.isClosed=!0;this.resize=!1;if(this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=qt([0],"int32"),this.webcamConfig.centerCrop){let o=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,a=(1-o)/2,i=(1-s)/2,u=a+o,l=s+i;this.cropBox=Ga([i,a,l,u],[1,4])}else this.cropBox=Ga([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,n={}){if(!$().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!n.resizeWidth||!n.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=n.resizeWidth,e.height=n.resizeHeight}let o=new Xd(e,n);return await o.start(),o}async start(){this.webcamConfig.facingMode&&y.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Fb.fromPixels(this.webcamVideoElement)}catch(n){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(n)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(n){throw new Error(`Error thrown cropping the video: ${n.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return z(()=>{let n=Lr(re(e,"float32"),0),o;o=fp.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let s=o.shape;return _(o,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(n=>n.stop());try{this.webcamVideoElement.srcObject=null}catch(n){console.log(n),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}};var Yd=class{};var jh=class extends nr{split(t){return new Ow(this,t)}},Ow=class extends jh{constructor(e,n){super();this.upstream=e;this.impl=new zw(e,n)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},zw=class extends Ll{constructor(e,n){super();this.upstream=e;this.separator=n;this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let n=e.value.split(this.separator);n[0]=this.carryover+n[0];for(let o of n.slice(0,-1))this.outputQueue.push(o);return this.carryover=n[n.length-1],!0}};var lx=class extends nr{decodeUTF8(){return new Gw(this)}},Gw=class extends jh{constructor(e){super();this.upstream=e;this.impl=new Uw(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},Uw=class extends Ll{constructor(e){super();this.upstream=e;if($().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:n}=Iw();this.decoder=new n("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),n;if(e.done)return!1;n=e.value;let o;return $().get("IS_BROWSER")?o=this.decoder.decode(n,{stream:!0}):o=this.decoder.write(Buffer.from(n.buffer)),this.outputQueue.push(o),!0}};var Zd=class extends lx{constructor(e,n={}){super();this.file=e;this.options=n;y.assert(e instanceof Uint8Array||($().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=n.offset||0,this.chunkSize=n.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((n,o)=>{let s=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)n(new Uint8Array(this.file.slice(this.offset,s)));else{let a=new FileReader;a.onload=u=>{let l=a.result;if(l instanceof ArrayBuffer&&(l=new Uint8Array(l)),!(l instanceof Uint8Array))return o(new TypeError("FileReader returned unknown type."));n(l)},a.onabort=u=>o(new Error("Aborted")),a.onerror=u=>o(new Error(u.type));let i=this.file.slice(this.offset,s);a.readAsArrayBuffer(i)}this.offset=s}),done:!1}}};async function VL(r,t={},e){let n,o;typeof r=="string"?n=r:(n=r.url,o=sre(r));let s=await(e||y.fetch)(n,o);if(s.ok){let a=new Uint8Array(await s.arrayBuffer());return new Zd(a,t)}else throw new Error(s.statusText)}var sre=r=>({method:r.method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:r.referrer,integrity:r.integrity});function mx(r){return typeof r=="string"&&r.slice(0,7)==="file://"}var Qd=class extends Yd{constructor(e,n={}){super();this.input=e;this.options=n}async iterator(){if(mx(this.input)&&$().get("IS_NODE")){let e=Xh();this.input=e.readFileSync(this.input.slice(7))}return new Zd(this.input,this.options)}};var Jd=class extends Yd{constructor(e,n={}){super();this.url=e;this.fileOptions=n}async iterator(){return mx(this.url)?new Qd(this.url,this.fileOptions).iterator():VL(this.url,this.fileOptions)}};function HL(r,t={}){return new qd(new Jd(r),t)}function qL(r){let t=Hh(r);return Bn(async()=>t)}function jL(r){return Bn(async()=>{let t=await r();return Hh(()=>t.next())})}async function XL(r,t){return Xd.create(r,t)}async function YL(r){return jd.create(r)}var ZL="0.0.0";function te(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&y.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var are=xr.whereImpl,Ww=class extends oo{constructor(){super();this.blockSize=48;this.firstUse=!0;this.data=new ia(this,Mn())}nextDataId(){return Ww.nextDataId++}write(e,n,o){this.firstUse&&(this.firstUse=!1,$().get("IS_NODE")&&C.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:o,refCount:1}),s}makeTensorInfo(e,n,o){let s;if(n==="string"&&o!=null&&o.length>0&&y.isString(o[0])){let a=o.map(i=>y.encodeString(i));s=this.write(a,e,n)}else s=this.write(o,e,n);return{dataId:s,shape:e,dtype:n}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let n=this.data.get(e);n.refCount++}decRef(e){if(this.data.has(e)){let n=this.data.get(e);n.refCount--}}move(e,n,o,s,a){this.data.set(e,{values:n,dtype:s,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:n,complexTensorInfos:o}=this.data.get(e);if(n==="complex64"){let s=this.readSync(o.real.dataId),a=this.readSync(o.imag.dataId);return C.mergeRealAndImagArrays(s,a)}return this.data.get(e).values}bufferSync(e){let n=this.readSync(e.dataId);if(e.dtype==="string")try{let o=n.map(s=>y.decodeString(s));return Ie(e.shape,e.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ie(e.shape,e.dtype,n)}makeOutput(e,n,o){return Mn().makeTensorFromTensorInfo(this.makeTensorInfo(n,o,e),this)}disposeData(e,n=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!n&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:o}=this.data.get(e);o!=null&&(this.disposeData(o.real.dataId,!0),this.disposeData(o.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let n=y.now();return e(),{kernelMs:y.now()-n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){te([e],"where");let n=this.readSync(e.dataId);return are(e.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},ef=Ww;ef.nextDataId=0;var uf={};He(uf,{addImpl:()=>Hw,bincountImpl:()=>nf,bincountReduceImpl:()=>cx,castImpl:()=>Vw,ceilImpl:()=>qw,concatImpl:()=>_l,equalImpl:()=>jw,expImpl:()=>Yw,expm1Impl:()=>Qw,floorImpl:()=>Jw,gatherNdImpl:()=>dx,gatherV2Impl:()=>fx,greaterEqualImpl:()=>tN,greaterImpl:()=>eN,lessEqualImpl:()=>nN,lessImpl:()=>rN,linSpaceImpl:()=>hx,logImpl:()=>oN,maxImpl:()=>gx,maximumImpl:()=>sN,minimumImpl:()=>aN,multiplyImpl:()=>Yh,negImpl:()=>iN,notEqualImpl:()=>uN,prodImpl:()=>pN,raggedGatherImpl:()=>bx,raggedTensorToTensorImpl:()=>yx,rangeImpl:()=>Bl,rsqrtImpl:()=>lN,scatterImpl:()=>yu,sigmoidImpl:()=>A_,simpleAbsImpl:()=>Kw,sliceImpl:()=>Ol,sparseFillEmptyRowsImpl:()=>Tx,sparseReshapeImpl:()=>xx,sparseSegmentReductionImpl:()=>af,sqrtImpl:()=>D_,squaredDifferenceImpl:()=>cN,stridedSliceImpl:()=>Ix,stringNGramsImpl:()=>zl,stringSplitImpl:()=>Gl,stringToHashBucketFastImpl:()=>Ul,subImpl:()=>fN,tileImpl:()=>Cx,topKImpl:()=>kx,transposeImpl:()=>of,uniqueImpl:()=>Sx});function Kw(r){let t=new Float32Array(r.length);for(let e=0;e<r.length;++e)t[e]=Math.abs(r[e]);return t}var ire=r=>{let{x:t}=r.inputs,e=r.backend;te(t,"abs");let n=new Float32Array(y.sizeFromShape(t.shape)),o=e.data.get(t.dataId).values;return n=Kw(o),e.makeOutput(n,t.shape,t.dtype)},JL={kernelName:cs,backendName:"cpu",kernelFunc:ire};function ot(r){return(t,e,n,o,s)=>{let a=C.assertAndGetBroadcastShape(t,e),i=a.length,u=y.computeStrides(a),l=y.sizeFromShape(a),p=y.getTypedArrayFromDType(s,l),m=t.length,c=e.length,d=y.computeStrides(t),f=y.computeStrides(e),h=C.getBroadcastDims(t,a),g=C.getBroadcastDims(e,a);if(h.length+g.length===0)for(let b=0;b<p.length;++b)p[b]=r(n[b%n.length],o[b%o.length]);else for(let b=0;b<p.length;++b){let T=y.indexToLoc(b,i,u),x=T.slice(-m);h.forEach(R=>x[R]=0);let I=y.locToIndex(x,m,d),k=T.slice(-c);g.forEach(R=>k[R]=0);let A=y.locToIndex(k,c,f);p[b]=r(n[I],o[A])}return[p,a]}}function Sr(r){let{inputs:t,backend:e}=r,{real:n,imag:o}=t,s=e.data.get(n.dataId).values,a=e.data.get(o.dataId).values,i=e.makeTensorInfo(n.shape,"complex64"),u=e.data.get(i.dataId);return u.complexTensorInfos={real:e.makeTensorInfo(n.shape,"float32",s),imag:e.makeTensorInfo(o.shape,"float32",a)},i}var e_={kernelName:Eu,backendName:"cpu",kernelFunc:Sr};function tf(r,t,e="float32"){if(e==="complex64"){let o=tf(r,t,"float32"),s=tf(r,t,"float32");return Sr({inputs:{real:o,imag:s},backend:r})}let n=y.makeZerosTypedArray(y.sizeFromShape(t),e);return r.makeTensorInfo(t,e,n)}function jr(r){let{inputs:t,backend:e}=r,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var t_={kernelName:Vn,backendName:"cpu",kernelFunc:jr};function Xs(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.data.get(n.dataId).complexTensorInfos.real,s=e.data.get(o.dataId).values;return e.makeTensorInfo(o.shape,o.dtype,s)}var r_={kernelName:Uu,backendName:"cpu",kernelFunc:Xs};function Vw(r,t,e,n){if(n==="int32"){let o=Int32Array.from(r);return[t,"int32",o]}if(n==="bool"){let o=y.toTypedArray([0],e),[s,a]=ot((i,u)=>i!==u?1:0)(t,[],r,o,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${e} to ${n}`)}function Ys(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return jr({inputs:{x:o},backend:e});let p=tf(e,o.shape,o.dtype),m=Ys({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),c=Sr({inputs:{real:m,imag:p},backend:e});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),c}if(o.dtype==="complex64"){let p=Xs({inputs:{input:o},backend:e}),m=Ys({inputs:{x:p},backend:e,attrs:{dtype:s}});return e.disposeIntermediateTensorInfo(p),m}if(!y.hasEncodingLoss(o.dtype,s)){let p=jr({inputs:{x:o},backend:e});return{dataId:p.dataId,shape:p.shape,dtype:s}}let a=e.data.get(o.dataId).values,[i,u,l]=Vw(a,o.shape,o.dtype,s);return e.makeTensorInfo(i,u,l)}var n_={kernelName:Wn,backendName:"cpu",kernelFunc:Ys};function ut(r,t,e,n){return e==null?({inputs:o,backend:s})=>{let{a,b:i}=o,u=s;te([a,i],r);let l=u.data.get(a.dataId).values,p=u.data.get(i.dataId).values,m=a.dtype==="string"?C.fromUint8ToStringArray(l):l,c=a.dtype==="string"?C.fromUint8ToStringArray(p):p,d=n||a.dtype,[f,h]=t(a.shape,i.shape,m,c,d);return u.makeTensorInfo(h,d,f)}:({inputs:o,backend:s})=>{let{a,b:i}=o,u=s;if(a.dtype==="complex64"||i.dtype==="complex64"){let l=Ys({inputs:{x:a},backend:u,attrs:{dtype:"complex64"}}),p=u.data.get(l.dataId),m=p.complexTensorInfos.real,c=p.complexTensorInfos.imag,d=u.data.get(m.dataId).values,f=u.data.get(c.dataId).values,h=Ys({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(h.dataId),b=g.complexTensorInfos.real,T=g.complexTensorInfos.imag,x=u.data.get(b.dataId).values,I=u.data.get(T.dataId).values,[k,A,R]=e(a.shape,i.shape,d,f,x,I),F=u.makeTensorInfo(R,"float32",k),P=u.makeTensorInfo(R,"float32",A),L=Sr({inputs:{real:F,imag:P},backend:u});return u.disposeIntermediateTensorInfo(l),u.disposeIntermediateTensorInfo(h),u.disposeIntermediateTensorInfo(F),u.disposeIntermediateTensorInfo(P),L}else{let l=u.data.get(a.dataId).values,p=u.data.get(i.dataId).values,m=n||a.dtype,[c,d]=t(a.shape,i.shape,l,p,m);return u.makeTensorInfo(d,m,c)}}}function rf(r){return(t,e,n,o,s,a)=>{let i=C.assertAndGetBroadcastShape(t,e),u=y.sizeFromShape(i),l=i.length,p=y.computeStrides(i),m=y.getTypedArrayFromDType("float32",u),c=y.getTypedArrayFromDType("float32",u),d=C.getBroadcastDims(t,i),f=C.getBroadcastDims(e,i),h=C.mergeRealAndImagArrays(n,o),g=C.mergeRealAndImagArrays(s,a),b=t.length,T=y.computeStrides(t),x=e.length,I=y.computeStrides(e);if(d.length+f.length===0)for(let k=0;k<m.length;k++){let A=k%h.length,R=k%g.length,F=r(h[A*2],h[A*2+1],g[R*2],g[R*2+1]);m[k]=F.real,c[k]=F.imag}else for(let k=0;k<m.length;k++){let A=y.indexToLoc(k,l,p),R=A.slice(-b);d.forEach(G=>R[G]=0);let F=y.locToIndex(R,b,T),P=A.slice(-x);f.forEach(G=>P[G]=0);let L=y.locToIndex(P,x,I),O=r(h[F*2],h[F*2+1],g[L*2],g[L*2+1]);m[k]=O.real,c[k]=O.imag}return[m,c,i]}}var Hw=ot((r,t)=>r+t),ure=rf((r,t,e,n)=>({real:r+e,imag:t+n})),Ni=ut(Nn,Hw,ure),o_={kernelName:Nn,backendName:"cpu",kernelFunc:Ni};function nf(r,t,e,n,o){let s=y.sizeFromShape(n),a=y.makeZerosTypedArray(o,e);for(let i=0;i<r.length;i++){let u=r[i];if(u<0)throw new Error("Input x must be non-negative!");u>=o||(s>0?a[u]+=t[i]:a[u]+=1)}return a}function cx(r,t,e,n=!1){let o=r.shape[0],s=r.shape[1],a=Ie([o,e],t.dtype);for(let i=0;i<o;i++)for(let u=0;u<s;u++){let l=r.get(i,u);if(l<0)throw new Error("Input x must be non-negative!");l>=e||(n?a.set(1,i,l):t.size>0?a.set(a.get(i,l)+t.get(i,u),i,l):a.set(a.get(i,l)+1,i,l))}return a}function kn(r){return(t,e,n)=>{let o=y.getTypedArrayFromDType(e,t.length);for(let s=0;s<t.length;++s)o[s]=r(t[s],n);return o}}function Pe(r,t,e){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(te(a,r),a.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,u=i.data.get(a.dataId).values,l=y.sizeFromShape(a.shape),p=e||a.dtype,m=y.getArrayFromDType(p,l);for(let c=0;c<l;++c)m[c]=t(u[c],o);return i.makeTensorInfo(a.shape,p,m)}}function Zs(r,t,e){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(te(a,r),a.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,u=i.data.get(a.dataId).values,l=e||a.dtype,p=t(u,l,o);return i.makeTensorInfo(a.shape,l,p)}}var qw=kn(r=>Math.ceil(r)),pre=Zs(lo,qw),s_={kernelName:lo,backendName:"cpu",kernelFunc:pre};function _l(r,t,e,n){let o=y.getArrayFromDType(e,y.sizeFromShape(t));if(n&&e!=="string"){let s=0;r.forEach(a=>{let i=y.sizeFromShape(a.shape);o.set(a.vals,s),s+=i})}else{let s=0;r.forEach(a=>{let i=e==="string"?C.fromUint8ToStringArray(a.vals):a.vals,u=0;for(let l=0;l<a.shape[0];++l){let p=l*t[1]+s;for(let m=0;m<a.shape[1];++m)o[p+m]=i[u++]}s+=a.shape[1]})}return o}var jw=ot((r,t)=>r===t?1:0),Xw=ut(fa,jw,null,"bool"),a_={kernelName:fa,backendName:"cpu",kernelFunc:Xw};var Yw=kn(r=>Math.exp(r)),Zw=Zs(xo,Yw,"float32"),i_={kernelName:xo,backendName:"cpu",kernelFunc:Zw};var Qw=kn(r=>Math.expm1(r)),lre=Zs(ha,Qw),u_={kernelName:ha,backendName:"cpu",kernelFunc:lre};var Jw=kn(r=>Math.floor(r)),mre=Zs(Io,Jw),p_={kernelName:Io,backendName:"cpu",kernelFunc:mre};function dx(r,t,e,n,o,s,a,i,u){let l=Ie([n,s],e);for(let p=0;p<n;p++){let m=[],c=0;for(let d=0;d<o;d++){let f=r[p*o+d];c+=f*a[d],m.push(f)}if(c<0||c>=u/s)throw new Error(`Invalid indices: ${m} does not index into ${i}`);for(let d=0;d<s;d++)l.values[p*s+d]=t.get(...t.indexToLoc(c*s+d))}return l}function fx(r,t,e){let n=Ie(e,r.dtype);for(let o=0;o<n.size;++o){let a=n.indexToLoc(o).slice(),i=a[0],u=a[2],l=t.locToIndex([i,u]);a[2]=t.values[l];let p=r.locToIndex(a);0<=p&&p<r.values.length&&(n.values[o]=r.values[p])}return n}var eN=ot((r,t)=>r>t?1:0),cre=ut(ya,eN,null,"bool"),l_={kernelName:ya,backendName:"cpu",kernelFunc:cre};var tN=ot((r,t)=>r>=t?1:0),dre=ut(So,tN,null,"bool"),m_={kernelName:So,backendName:"cpu",kernelFunc:dre};var rN=ot((r,t)=>r<t?1:0),fre=ut(xa,rN,null,"bool"),c_={kernelName:xa,backendName:"cpu",kernelFunc:fre};var nN=ot((r,t)=>r<=t?1:0),hre=ut(Ia,nN,null,"bool"),d_={kernelName:Ia,backendName:"cpu",kernelFunc:hre};function hx(r,t,e){let n=(t-r)/(e-1),o=y.makeZerosTypedArray(e,"float32");o[0]=r;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}var oN=kn(r=>Math.log(r)),gre=Zs(Ao,oN),f_={kernelName:Ao,backendName:"cpu",kernelFunc:gre};function gx(r,t,e,n){let o=y.getTypedArrayFromDType(n,y.sizeFromShape(e));for(let s=0;s<o.length;++s){let a=s*t,i=r[a];for(let u=0;u<t;++u){let l=r[a+u];(Number.isNaN(l)||l>i)&&(i=l)}o[s]=i}return o}var sN=ot((r,t)=>Math.max(r,t)),bre=ut(No,sN),h_={kernelName:No,backendName:"cpu",kernelFunc:bre};var aN=ot((r,t)=>Math.min(r,t)),yre=ut(Po,aN),g_={kernelName:Po,backendName:"cpu",kernelFunc:yre};var Yh=ot((r,t)=>r*t),Tre=rf((r,t,e,n)=>({real:r*e-t*n,imag:r*n+t*e})),$l=ut(Eo,Yh,Tre),b_={kernelName:Eo,backendName:"cpu",kernelFunc:$l};function iN(r,t,e){let n=y.createScalarValue(-1,e);return Yh([],t,n,r,e)}function xre(r){let{inputs:t,backend:e}=r,{x:n}=t;te(n,"neg");let o=e.data.get(n.dataId).values,[s,a]=iN(o,n.shape,n.dtype);return e.makeTensorInfo(a,n.dtype,s)}var y_={kernelName:bs,backendName:"cpu",kernelFunc:xre};var uN=ot((r,t)=>r!==t?1:0),Ire=ut(Sa,uN,null,"bool"),T_={kernelName:Sa,backendName:"cpu",kernelFunc:Ire};function of(r,t,e,n,o){let s=t.length,a=y.sizeFromShape(t),i=y.computeStrides(t),u=y.computeStrides(o),l=y.getTypedArrayFromDType(e,y.sizeFromShape(o));for(let p=0;p<a;++p){let m=y.indexToLoc(p,s,i),c=new Array(m.length);for(let f=0;f<c.length;f++)c[f]=m[n[f]];let d=y.locToIndex(c,s,u);l[d]=r[p]}return l}function Yt(r){let{inputs:t,attrs:e,backend:n}=r,{x:o}=t,{perm:s}=e;te(o,"transpose");let a=o.shape.length,i=new Array(a);for(let m=0;m<i.length;m++)i[m]=o.shape[s[m]];let u=n.data.get(o.dataId).values,l=of(u,o.shape,o.dtype,s,i);return{dataId:n.write(l,i,o.dtype),shape:i,dtype:o.dtype}}var x_={kernelName:Rn,backendName:"cpu",kernelFunc:Yt};function pN(r,t,e,n){let[o,s]=C.computeOutAndReduceShapes(r,n),a=Et(t,"int32"),i=y.makeZerosTypedArray(y.sizeFromShape(o),a),u=y.sizeFromShape(s);for(let l=0;l<i.length;++l){let p=l*u,m=1;for(let c=0;c<u;++c)m*=e[p+c];i[l]=m}return{outVals:i,outShape:o,outDtype:a}}function Cre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;te(o,"prod");let i=o.shape.length,u=y.parseAxisParam(s,o.shape),l=C.getAxesPermutation(u,i),p=u,m=o,c=[];l!=null&&(m=Yt({inputs:{x:o},backend:e,attrs:{perm:l}}),c.push(m),p=C.getInnerMostAxes(p.length,i));let d=e.data.get(m.dataId).values,{outVals:f,outShape:h,outDtype:g}=pN(m.shape,m.dtype,d,p),b=h;return a&&(b=C.expandShapeToKeepDim(h,u)),c.forEach(T=>e.disposeIntermediateTensorInfo(T)),e.makeTensorInfo(b,g,f)}var I_={kernelName:Bo,backendName:"cpu",kernelFunc:Cre};function kre(r,t,e){r.forEach((n,o)=>{if(n<0||n>=e){let s=y.indexToLoc(o,t.length,y.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${n} is not in [0, ${e})`)}})}function Sre(r,t){for(let e=0;e<r.length;++e){let n=r[e],o=e===r.length-1?t:r[e+1].length;if(n.length===0)throw new Error("Ragged splits may not be empty");if(n[0]<0)throw new Error("Ragged splits must be non-negative");if(n[n.length-1]>o)throw new Error("Ragged splits must not point past values");for(let s=1;s<n.length;++s)if(n[s-1]>n[s])throw new Error("Ragged splits must be sorted in ascending order")}}function vre(r,t,e,n){let o=[],s=0,a=t.length-1+e.length,i=new Array(a).fill(null).map(()=>[0]);Sre(e,n);let u=1;for(let l=0;l<t.length-1;++l){u*=t[l];let p=t[l+1];for(let m=1;m<u+1;++m)i[l].push(m*p)}for(let l=0;l<r.length;++l){let p=r[l],m=r[l]+1;for(let c=0;c<e.length;++c){let d=e[c],f=c+t.length-1;if(f>=0){let h=i[f],g=h[h.length-1]-d[p];for(let b=p;b<m;++b)i[f].push(d[b+1]+g)}p=d[p],m=d[m]}m!==p&&(o.push([p,m]),s+=m-p)}return{outSplits:i,valueSlices:o,numValues:s}}function Are(r){let t=[];for(let e=0;e<r.length;++e){let n=r[e].length,o=y.getArrayFromDType("int32",n);t.push(o),r[e].forEach((s,a)=>o[a]=s)}return t}function C_(r,t){let e=r.slice(0,t);for(;e.length<t;)e.push(1);for(let n=t;n<r.length;n++)e[t-1]*=r[n];return e}function wre(r,t,e,n,o,s){let a=C_(t,2)[1],i=C_(s,2)[1],u=0;for(let l of e)for(let p=l[0];p<l[1];++p){for(let m=0;m<n;++m)o[u*i+m]=r[p*a+m];++u}}function Nre(r,t,e,n,o){let s=t.slice();s[0]=o;let a=y.getArrayFromDType(e,y.sizeFromShape(s)),i=r.length,u=i===0?0:i/t[0];return wre(r,t,n,u,a,s),[a,s]}function bx(r,t,e,n,o,s,a,i){if(r.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let u=t[0][0]-1;if(kre(s,a,u),n.length===0)throw new Error("params.rank must be nonzero");let l=n[0],{outSplits:p,valueSlices:m,numValues:c}=vre(s,a,r,l),d=Are(p),f=Nre(e,n,o,m,c);return[d,f[0],f[1]]}var Qs=C.RowPartitionType,sf=class{constructor(t,e,n,o,s,a,i,u,l,p){this.shape=t;this.shapeShape=e;this.values=n;this.valuesShape=o;this.valuesDType=s;this.defaultValue=a;this.defaultValueShape=i;this.rowPartitionValues=u;this.rowPartitionValuesShapes=l;this.rowPartitionTypes=C.getRowPartitionTypesHelper(p),this.raggedRank=C.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Qs.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Qs.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){let e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Qs.VALUE_ROWIDS:return sf.getMaxWidthValueRowID(e);case Qs.ROW_SPLITS:return sf.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${Qs[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){let e=t.length;if(e===0||e===1)return 0;let n=0;for(let o=0;o<e-1;++o){let s=t[o+1]-t[o];s>n&&(n=s)}return n}static getMaxWidthValueRowID(t){let e=t.length;if(e===0)return 0;let n=0,o=t[0],s=0;for(let a=1;a<e;++a){let i=t[a];i!==o&&(o=i,s=Math.max(a-n,s),n=a)}return Math.max(e-n,s)}tensorShapeFromTensor(t,e,n=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return S_(t,n)}calculateOutputSize(t){let e=this.valuesShape,n=this.defaultValueShape;C.validateDefaultValueShape(n,e);let o=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=C.combineRaggedTensorToTensorShapes(this.raggedRank,o,e);a[0]<0&&(a[0]=t);for(let i=1;i<=this.raggedRank;++i)a[i]<0&&(a[i]=this.getMaxWidth(i));return a}calculateFirstParentOutputIndex(t,e,n){let o=Math.min(t,n),s=[],a=0;for(let i=0;i<o;++i,a+=e)s.push(a);for(let i=o;i<t;++i)s.push(-1);return y.assert(s.length===t,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(t,e,n,o){let s=t.length,a=[];for(let i=0;i<s-1;++i){let u=t[i+1]-t[i],l=Math.min(o,u),p=e[i];p===-1&&(l=0);for(let m=0;m<l;++m)a.push(p),p+=n;for(let m=0;m<u-l;++m)a.push(-1)}if(s>0&&a.length!==t[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(t,e,n,o){let s=t.length,a=[];if(s===0)return[];let i=0,u=t[0];if(u>=e.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${e.length}`);let l=e[u];a.push(l);for(let p=1;p<s;++p){let m=t[p];if(m===u)l>=0&&(++i,i<o?l+=n:l=-1);else{if(i=0,u=m,m>=e.length)throw new Error(`Got nextValueRowId=${m} which is not less than ${e.length}`);l=e[m]}a.push(l)}if(a.length!==t.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(t,e,n,o){let s=this.getRowPartitionTensor(t),a=this.getRowPartitionTypeByDimension(t);switch(a){case Qs.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,e,n,o);case Qs.ROW_SPLITS:if(s.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(s,e,n,o);default:throw new Error(`Unsupported partition type: ${Qs[a]}`)}}getFirstDimensionSize(){let t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let e=this.rowPartitionTypes[0];switch(e){case Qs.FIRST_DIM_SIZE:return t[0];case Qs.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Qs.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Qs[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),n=this.calculateOutputSize(e),o=new Array(this.raggedRank+1);o[o.length-1]=1;for(let u=o.length-2;u>=0;--u)o[u]=o[u+1]*n[u+1];let s=S_(n,!1),a=y.getArrayFromDType(this.valuesDType,y.sizeFromShape(s));if(o[0]*n[0]>0){let u=this.calculateFirstParentOutputIndex(e,o[0],n[0]);for(let l=1;l<=this.raggedRank;++l)u=this.calculateOutputIndex(l-1,u,o[l],n[l]);this.setOutput(this.raggedRank,u,a,s)}return[s,a]}setOutput(t,e,n,o){if(n.length===0)return;let s=this.values,a=n,i=o.slice();i=i.slice(t+1);let u=y.sizeFromShape(i),l=e.length,p=this.defaultValue;if(p.length!==u&&p.length!==1){let f=this.defaultValueShape;z(()=>{let h=_(p,f);p=ap(h,i).dataSync()})}let m=0,c=0,d=0;for(let f=0;f<=l;++f){let h=f<l?e[f]:-1;if(h===d){++d;continue}if(c<d){let g=s.subarray(m*u),b=a.subarray(c*u),T=(d-c)*u;k_(b,g,T)}if(f>=l){let g=n.length;h=Math.floor(g/u)}if(h>d)if(this.defaultValue.length===1)a.subarray(d*u,h*u).fill(this.defaultValue[0]),d=h;else for(;h>d;){let g=a.slice(d*u);k_(g,p,u),++d}h<0?(m=f+1,c=d):(m=f,c=d,d=c+1)}}};function k_(r,t,e){for(let n=0;n<e;n++)r[n]=t[n]}function S_(r,t){let e=[];for(let n of r){if(n<0){if(!t)throw new Error(`Dimension ${n} must be >= 0`);if(n<-1)throw new Error(`Dimension ${n} must be >= -1`);n=-1}e.push(n)}return e}function yx(r,t,e,n,o,s,a,i,u,l){return new sf(r,t,e,n,o,s,a,i,u,l).compute()}function Bl(r,t,e,n){let o=r===t,s=r<t&&e<0,a=t<r&&e>1;if(o||s||a)return y.makeZerosTypedArray(0,n);let i=Math.abs(Math.ceil((t-r)/e)),u=y.makeZerosTypedArray(i,n);t<r&&e===1&&(e=-1),u[0]=r;for(let l=1;l<u.length;l++)u[l]=u[l-1]+e;return u}var lN=kn(r=>1/Math.sqrt(r)),Dre=Zs(Wo,lN),v_={kernelName:Wo,backendName:"cpu",kernelFunc:Dre};function yu(r,t,e,n,o,s,a,i,u,l){let p=[n/o,o],m=r.values,c=t.values;if(n===0)return Ie(e,t.dtype);let d=Ie(p,t.dtype);typeof u=="string"||typeof u=="number"?d.values.fill(u):typeof u=="boolean"&&d.values.fill(+u);for(let f=0;f<s;f++){let h=[],g=0;for(let b=0;b<a;b++){let T=m[f*a+b];h.push(T),g+=T*i[b]}if(g<0||g>=n/o)throw new Error(`Invalid indices: ${h} does not index into ${e}`);for(let b=0;b<o;b++)l?d.values[g*o+b]+=c[f*o+b]:d.values[g*o+b]=t.rank===0?c[0]:c[f*o+b]}return d}var A_=kn(r=>1/(1+Math.exp(-r))),mN=Pe(Vo,r=>1/(1+Math.exp(-r))),w_={kernelName:Vo,backendName:"cpu",kernelFunc:mN};function Ol(r,t,e,n,o){let s=xt.isSliceContinous(n,t,e),a=y.sizeFromShape(e),i=y.computeStrides(n);if(s){let m=xt.computeFlatOffset(t,i);return o==="string"?r.slice(m,m+a):r.subarray(m,m+a)}let u=o==="string"?C.fromUint8ToStringArray(r):r,l=Ie(n,o,u),p=Ie(e,o);for(let m=0;m<p.size;++m){let c=p.indexToLoc(m),d=c.map((f,h)=>f+t[h]);p.set(l.get(...d),...c)}return o==="string"?C.fromStringArrayToUint8(p.values):p.values}function Js(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,size:a}=n;te(o,"slice");let[i,u]=xt.parseSliceParams(o,s,a);xt.assertParamsValid(o,i,u);let l=e.data.get(o.dataId).values,p=Ol(l,i,u,o.shape,o.dtype);return e.makeTensorInfo(u,o.dtype,p)}var N_={kernelName:Cs,backendName:"cpu",kernelFunc:Js};function Tx(r,t,e,n,o,s,a){let i=t[0],u=s[0],l=new Array(u),p=new Array(i),m=t[1];if(u===0){if(i!==0)throw new Error(C.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));let g=y.getArrayFromDType(e,0),b=y.getArrayFromDType(o,0);return[g,[0,m],b,l,p]}let c=!0,d=0,f=new Array(u).fill(0);for(let g=0;g<i;++g){let b=r[g*m];if(b<0)throw new Error(C.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,b));if(b>=u)throw new Error(C.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,b,u));++f[b],c=c&&b>=d,d=b}let h=!0;for(let g=0;g<u;++g){let b=f[g]===0;l[g]=b,h=h&&!b,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(h&&c){let g=r,b=n;for(let T=0;T<i;++T)p[T]=T;return[g,[i,m],b,l,p]}else{let g=f[u-1],b=y.getArrayFromDType(e,g*m),T=y.getArrayFromDType(o,g),x=new Array(u).fill(0);for(let I=0;I<i;++I){let k=r[I*m],A=x[k],R=(k===0?0:f[k-1])+A;x[k]++;for(let F=0;F<m;++F)b[R*m+F]=r[I*m+F];T[R]=n[I],p[I]=R}for(let I=0;I<u;++I)if(x[I]===0){let A=I===0?0:f[I-1];b[A*m+0]=I;for(let R=1;R<m;++R)b[A*m+R]=0;T[A]=a}return[b,[g,m],T,l,p]}}function xx(r,t,e,n,o){let s=y.sizeFromShape(n),a=t[0],i=o.length,u=[],l=1,p=-1;for(let g=0;g<i;++g){let b=o[g];if(b===-1){if(p!==-1)throw new Error(C.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(p,g));p=g,u.push(1)}else{if(b<0)throw new Error(C.getSparseReshapeNegativeOutputDimErrorMessage(g,b));l*=b,u.push(b)}}if(p!==-1){if(l<=0)throw new Error(C.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(s/l);if(l*g!==s)throw new Error(C.getSparseReshapeInputOutputMultipleErrorMessage(n,u));u[p]=g}if(y.sizeFromShape(u)!==s)throw new Error(C.getSparseReshapeInputOutputMismatchErrorMessage(n,u));let c=n.length,d=[];if(c>0){d[c-1]=1;for(let g=c-2;g>=0;--g)d[g]=d[g+1]*n[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*u[g+1]}let h=y.getArrayFromDType(e,a*i);for(let g=0;g<a;++g){let b=0;for(let T=0;T<c;++T)b+=r[g*c+T]*d[T];for(let T=0;T<i;++T)h[g*i+T]=Math.trunc(b/f[T]),b%=f[T]}return[h,[a,i],u]}function af(r,t,e,n,o,s=!1,a=0){let i=n.length,u=[t[0],r.length/t[0]],l=u[1],m=i>0?o[i-1]+1:0;if(m<0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let c=t.slice();c[0]=m;let d=c.reduce((x,I)=>x*I,1),f=y.getArrayFromDType(e,d);if(i===0)return m>0&&f.fill(a),[f,c];if(m<=0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=0,g=1,b=0,T=o[h];for(;;){let x=0;if(g<i){if(x=o[g],T===x){++g;continue}if(T>=x)throw new Error(C.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(T<0||T>=m)throw new Error(C.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(T,m));T>b&&f.fill(a,b*l,T*l);for(let I=h;I<g;++I){let k=n[I];if(k<0||k>=u[0])throw new Error(C.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(I,n[I],u[0]));for(let A=0;A<l;A++)f[T*l+A]+=r[k*l+A]}if(s)for(let I=0;I<l;I++)f[T*l+I]/=g-h;if(h=g,++g,b=T+1,T=x,g>i)break}return b<m&&f.fill(a,b*l,m*l),[f,c]}var D_=kn(r=>Math.sqrt(r)),Rre=Pe(Ho,r=>Math.sqrt(r)),R_={kernelName:Ho,backendName:"cpu",kernelFunc:Rre};var cN=ot((r,t)=>{let e=r-t;return e*e}),Fre=ut(Xo,cN),F_={kernelName:Xo,backendName:"cpu",kernelFunc:Fre};function Ix(r,t,e,n){let o=Ie(r,t.dtype);for(let s=0;s<o.size;s++){let a=o.indexToLoc(s),i=new Array(a.length);for(let u=0;u<i.length;u++)i[u]=a[u]*e[u]+n[u];o.set(t.get(...i),...a)}return o}var dN=class{constructor(t,e,n,o,s,a){this.separator=y.encodeString(t),this.nGramWidths=e,this.leftPad=y.encodeString(n),this.rightPad=y.encodeString(o),this.padWidth=s,this.preserveShort=a}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){let n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,o,s,a){for(let i=0;i<s;++i){let u=this.getPadWidth(a),l=Math.max(0,u-i),p=Math.max(0,u-(s-(i+1))),m=a-(l+p),c=e+(l>0?0:i-u),d=0;d+=l*this.leftPad.length;for(let T=0;T<m;++T)d+=t[c+T].length;d+=p*this.rightPad.length,d+=(l+p+m-1)*this.separator.length,n[o+i]=new Uint8Array(d);let h=n[o+i],g=0,b=T=>T.forEach(x=>h[g++]=x);for(let T=0;T<l;++T)b(this.leftPad),b(this.separator);for(let T=0;T<m-1;++T)b(t[c+T]),b(this.separator);if(m>0){b(t[c+m-1]);for(let T=0;T<p;++T)b(this.separator),b(this.rightPad)}else{for(let T=0;T<p-1;++T)b(this.rightPad),b(this.separator);b(this.rightPad)}}}compute(t,e){let n=t.length,o=e.length;if(o>0){let u=e[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let l=1;l<o;++l){let p=e[l]>=u;if(p=p&&e[l]<=n,!p)throw new Error(`Invalid split value ${e[l]}, must be in [${u}, ${n}]`);u=e[l]}if(u!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${u}`)}let s=o-1,a=y.getArrayFromDType("int32",o);if(n===0||o===0){let u=new Array(n);for(let l=0;l<=s;++l)a[l]=0;return[u,a]}a[0]=0;for(let u=1;u<=s;++u){let l=e[u]-e[u-1],p=0;this.nGramWidths.forEach(m=>{p+=this.getNumNGrams(l,m)}),this.preserveShort&&l>0&&p===0&&(p=1),a[u]=a[u-1]+p}let i=new Array(a[s]);for(let u=0;u<s;++u){let l=e[u],p=a[u];if(this.nGramWidths.forEach(m=>{let c=e[u+1]-e[u],d=this.getNumNGrams(c,m);this.createNGrams(t,l,i,p,d,m),p+=d}),this.preserveShort&&p===a[u]){let m=e[u+1]-e[u];if(m===0)continue;let c=m+2*this.padWidth,d=1;this.createNGrams(t,l,i,p,d,c)}}return[i,a]}};function zl(r,t,e,n,o,s,a,i){return new dN(e,n,o,s,a,i).compute(r,t)}function Pre(r,t,e,n){if(!r.length)return;if(t.length===0){for(let s=0;s<r.length;++s)n.push(r.subarray(s,s+1));return}if(t.length===1){let s=t[0],a=r.indexOf(s);for(;a!==-1;){let i=r.subarray(0,a);(!e||i.length!==0)&&n.push(i),r=r.subarray(a+1),a=r.indexOf(s)}(!e||r.length!==0)&&n.push(r);return}let o=0;for(let s=0;s<r.length+1;s++)if(s===r.length||t.indexOf(r[s])!==-1){let a=r.subarray(o,s);(!e||a.length!==0)&&n.push(a),o=s+1}}function Gl(r,t,e){let n=r.length,o=[],s=0,a=0,i=new Array(n);for(let c=0;c<n;++c){let d=o.length;Pre(r[c],t,e,o);let f=o.length-d;i[c]=f,s+=f,a=Math.max(a,f)}let u=y.getArrayFromDType("int32",s*2),l=new Array(s),p=[n,a],m=0;for(let c=0;c<n;++c)for(let d=0;d<i[c];++d)u[m*2]=c,u[m*2+1]=d,l[m]=o[m],++m;return[u,l,p]}function Ul(r,t){let e=y.getArrayFromDType("int32",r.length);for(let n=0;n<r.length;++n)e[n]=y.fingerPrint64(r[n]).modulo(t).getLowBitsUnsigned();return e}var fN=ot((r,t)=>r-t),Mre=rf((r,t,e,n)=>({real:r-e,imag:t-n})),Zh=ut(Yo,fN,Mre),P_={kernelName:Yo,backendName:"cpu",kernelFunc:Zh};function Cx(r,t){let e=new Array(r.rank);for(let o=0;o<e.length;o++)e[o]=r.shape[o]*t[o];let n=Ie(e,r.dtype);for(let o=0;o<n.values.length;++o){let s=n.indexToLoc(o),a=new Array(r.rank);for(let u=0;u<a.length;u++)a[u]=s[u]%r.shape[u];let i=r.locToIndex(a);n.values[o]=r.values[i]}return n}var Qh=(r,t)=>{let e=t.value-r.value;return e===0?r.index-t.index:e};function M_(r,t,e=0,n=r.length-1){for(;n>e;){if(n-e>600){let i=n-e+1,u=t-e+1,l=Math.log(i),p=.5*Math.exp(2*l/3),m=.5*Math.sqrt(l*p*(i-p)/i)*Math.sign(u-i/2),c=Math.max(e,Math.floor(t-u*p/i+m)),d=Math.min(n,Math.floor(t+(i-u)*p/i+m));M_(r,t,c,d)}let o=r[t],s=e,a=n;for(y.swap(r,e,t),Qh(r[n],o)>0&&y.swap(r,e,n);s<a;){for(y.swap(r,s,a),s++,a--;Qh(r[s],o)<0;)s=s+1;for(;Qh(r[a],o)>0;)a=a-1}Qh(r[e],o)===0?y.swap(r,e,a):(a=a+1,y.swap(r,a,n)),a<=t&&(e=a+1),t<=a&&(n=a-1)}}function kx(r,t,e,n,o){let s=t[t.length-1],[a,i]=[r.length/s,s],u=y.getTypedArrayFromDType(e,a*n),l=y.getTypedArrayFromDType("int32",a*n);for(let m=0;m<a;m++){let c=m*i,d=r.subarray(c,c+i),f=new Array(d.length);d.forEach((T,x)=>f[x]={value:T,index:x}),n<f.length&&(M_(f,n),f=f.slice(0,n)),o&&f.sort(Qh);let h=m*n,g=u.subarray(h,h+n),b=l.subarray(h,h+n);for(let T=0;T<n;T++)g[T]=f[T].value,b[T]=f[T].index}let p=t.slice();return p[p.length-1]=n,[Ie(p,e,u),Ie(p,"int32",l)]}function Sx(r,t,e,n){let o=y.parseAxisParam(t,e)[0],s=[1,e[0],1];for(let f=0;f<o;f++)s[0]*=e[f];s[1]=e[o];for(let f=o+1;f<e.length;f++)s[2]*=e[f];let a={},i=new Int32Array(e[o]),u=new ht(s,n,r),l=[],p=s[0]===1&&s[2]===1;for(let f=0;f<e[o];f++){let h;if(p)h=r[f].toString();else{let g=[];for(let b=0;b<s[0];b++)for(let T=0;T<s[2];T++)g.push(u.get(b,f,T));h=g.join(",")}if(a[h]!==void 0)i[f]=a[h];else{let g=Object.keys(a).length;a[h]=g,i[f]=g,l.push(f)}}let m=s.slice();m[1]=Object.keys(a).length;let c=new ht(m,n);l.forEach((f,h)=>{for(let g=0;g<s[0];g++)for(let b=0;b<s[2];b++)c.set(u.get(g,f,b),g,h,b)});let d=e.slice();return d[o]=m[1],{outputValues:c.values,outputShape:d,indices:i}}var Ere="0.0.0";tp("cpu",()=>new ef,1);var hN=Pe(To,r=>r>=0?r:Math.exp(r)-1),E_={kernelName:To,backendName:"cpu",kernelFunc:hN};function gN(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{alpha:s}=n;te([o],"leakyRelu");let a=y.sizeFromShape(o.shape),i=e.data.get(o.dataId).values,u=y.getTypedArrayFromDType("float32",a);for(let l=0;l<i.length;l++)u[l]=i[l]<0?s*i[l]:i[l];return e.makeTensorInfo(o.shape,"float32",u)}var L_={kernelName:vo,backendName:"cpu",kernelFunc:gN};var Lre=ot((r,t)=>r<0?t*r:r);function bN(r){let{inputs:t,backend:e}=r,{x:n,alpha:o}=t;te([n,o],"prelu");let s=e.data.get(n.dataId).values,a=e.data.get(o.dataId).values,[i,u]=Lre(n.shape,o.shape,s,a,"float32");return e.makeTensorInfo(u,"float32",i)}var __={kernelName:$o,backendName:"cpu",kernelFunc:bN};var yN=Pe(Oo,r=>Math.max(0,r)),$_={kernelName:Oo,backendName:"cpu",kernelFunc:yN};var TN=Pe(Uo,r=>Math.min(Math.max(0,r),6)),B_={kernelName:Uo,backendName:"cpu",kernelFunc:TN};function Wl(r,t,e,n,o){if(e==="linear")return jr({inputs:{x:t},backend:r});if(e==="relu")return yN({inputs:{x:t},backend:r});if(e==="elu")return hN({inputs:{x:t},backend:r});if(e==="relu6")return TN({inputs:{x:t},backend:r});if(e==="prelu")return bN({inputs:{x:t,alpha:n},backend:r});if(e==="leakyrelu")return gN({inputs:{x:t},backend:r,attrs:{alpha:o}});if(e==="sigmoid")return mN({inputs:{x:t},backend:r});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}function et(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{shape:s}=n,a=y.sizeFromShape(o.shape),i=y.inferFromImplicitShape(s,a),u=y.sizeFromShape(i);y.assert(a===u,()=>`The new shape (${i}) has ${u} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.incRef(o.dataId);let l=e.data.get(o.dataId);if(l.complexTensorInfos!=null){let p=l.complexTensorInfos.real,m=l.complexTensorInfos.imag;p.shape=i,m.shape=i}return{dataId:o.dataId,shape:i,dtype:o.dtype}}var O_={kernelName:xs,backendName:"cpu",kernelFunc:et};function xN(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s}=t,{transposeA:a,transposeB:i}=n;te([o,s],"matMul");let u=o.shape.length,l=s.shape.length,p=a?o.shape[u-2]:o.shape[u-1],m=i?s.shape[l-1]:s.shape[l-2],c=a?o.shape[u-1]:o.shape[u-2],d=i?s.shape[l-2]:s.shape[l-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=y.sizeFromShape(f),b=y.sizeFromShape(h),x=wr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);y.assert(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let I=a?[g,p,c]:[g,c,p],k=i?[b,d,m]:[b,m,d],A=et({inputs:{x:o},backend:e,attrs:{shape:I}}),R=et({inputs:{x:s},backend:e,attrs:{shape:k}}),F=a?A.shape[1]:A.shape[2],P=a?A.shape[2]:A.shape[1],L=i?R.shape[1]:R.shape[2],O=Math.max(g,b),G=e.data.get(A.dataId).values,W=e.data.get(R.dataId).values,H=y.computeStrides(A.shape),V=y.computeStrides(R.shape),[q,Z,j]=a?[H[0],1,H[1]]:[H[0],H[1],1],[Y,se,ae]=i?[1,V[1],V[0]]:[V[1],1,V[0]],pe=P*L,oe=Ie([O,P,L],A.dtype),ge=oe.values,fe=e.blockSize;for(let ue=0;ue<O;ue++)for(let ve=0;ve<P;ve+=fe)for(let De=0;De<L;De+=fe)for(let Fe=0;Fe<F;Fe+=fe){let je=Math.min(ve+fe,P),Q=Math.min(De+fe,L),bt=Math.min(Fe+fe,F);for(let lt=ve;lt<je;lt++)for(let Dt=De;Dt<Q;Dt++){let Mt=0;for(let Tt=Fe;Tt<bt;Tt++){let st=Math.min(ue,g-1)*q,Vt=Math.min(ue,b-1)*ae,zn=G[st+lt*Z+Tt*j],pr=W[Tt*Y+Dt*se+Vt];Mt+=zn*pr}ge[ue*pe+(lt*L+Dt)]+=Mt}}return e.disposeIntermediateTensorInfo(A),e.disposeIntermediateTensorInfo(R),e.makeTensorInfo(x,oe.dtype,oe.values)}var z_={kernelName:po,backendName:"cpu",kernelFunc:xN};function _re(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=t,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:m}=n,c,d,f,h=[];c=xN({inputs:{a:o,b:s},attrs:{transposeA:u,transposeB:l},backend:e}),a&&(d=Ni({inputs:{a:c,b:a},backend:e}),h.push(c),c=d),p&&(f=Wl(e,c,p,i,m),h.push(c),c=f);for(let b of h)e.disposeIntermediateTensorInfo(b);return c}var G_={kernelName:Ns,backendName:"cpu",kernelFunc:_re};var $re=Pe(Mi,r=>Math.acos(r)),U_={kernelName:Mi,backendName:"cpu",kernelFunc:$re};var Bre=Pe(Ei,r=>Math.acosh(r)),W_={kernelName:Ei,backendName:"cpu",kernelFunc:Bre};function Ore(r){let{inputs:t,backend:e}=r,n=t;te(t,"addN");let o=n.map(i=>e.data.get(i.dataId).values),s=Ie(n[0].shape,n[0].dtype),a=s.values;for(let i=0;i<n.length;i++){let u=o[i];for(let l=0;l<a.length;l++)a[l]+=u[l]}return e.makeTensorInfo(s.shape,s.dtype,s.values)}var K_={kernelName:ao,backendName:"cpu",kernelFunc:Ore};function zre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;te(o,"all");let i=y.parseAxisParam(s,o.shape),u=i,l=C.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=Yt({inputs:{x:o},backend:e,attrs:{perm:l}}),u=C.getInnerMostAxes(u.length,o.shape.length)),C.assertAxesAreInnerMostDims("all",u,p.shape.length);let[m,c]=C.computeOutAndReduceShapes(p.shape,u),d=y.sizeFromShape(c),f=y.makeZerosTypedArray(y.sizeFromShape(m),p.dtype),h=e.data.get(p.dataId).values;for(let b=0;b<f.length;++b){let T=b*d,x=h[T];for(let I=0;I<d;++I){let k=h[T+I];x=x&&k}f[b]=x}l!=null&&e.disposeIntermediateTensorInfo(p);let g=e.makeTensorInfo(m,p.dtype,f);if(a){let b=C.expandShapeToKeepDim(m,i),T=et({inputs:{x:g},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(g),T}return g}var V_={kernelName:Li,backendName:"cpu",kernelFunc:zre};function Gre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;te(o,"any");let i=y.parseAxisParam(s,o.shape),u=i,l=C.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=Yt({inputs:{x:o},backend:e,attrs:{perm:l}}),u=C.getInnerMostAxes(u.length,o.shape.length)),C.assertAxesAreInnerMostDims("any",u,p.shape.length);let[m,c]=C.computeOutAndReduceShapes(p.shape,u),d=y.sizeFromShape(c),f=y.makeZerosTypedArray(y.sizeFromShape(m),p.dtype),h=e.data.get(p.dataId).values;for(let b=0;b<f.length;++b){let T=b*d,x=h[T];for(let I=0;I<d;++I){let k=h[T+I];x=x||k}f[b]=x}l!=null&&e.disposeIntermediateTensorInfo(p);let g=e.makeTensorInfo(m,p.dtype,f);if(a){let b=C.expandShapeToKeepDim(m,i),T=et({inputs:{x:g},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(g),T}return g}var H_={kernelName:_i,backendName:"cpu",kernelFunc:Gre};function Ure(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n;te(o,"argMax");let a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Yt({inputs:{x:o},backend:e,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),a=[a[0]],C.assertAxesAreInnerMostDims("argMax",a,u.shape.length);let[p,m]=C.computeOutAndReduceShapes(u.shape,a),c=y.sizeFromShape(p),d=y.makeZerosTypedArray(c,"int32"),f=y.sizeFromShape(m),h=e.data.get(u.dataId).values;for(let g=0;g<d.length;++g){let b=g*f,T=h[b],x=0;for(let I=0;I<f;++I){let k=h[b+I];k>T&&(T=k,x=I)}d[g]=x}return l.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(p,"int32",d)}var q_={kernelName:io,backendName:"cpu",kernelFunc:Ure};function Wre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n;te(o,"argMin");let a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Yt({inputs:{x:o},backend:e,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),a=[a[0]],C.assertAxesAreInnerMostDims("argMin",a,u.shape.length);let[p,m]=C.computeOutAndReduceShapes(u.shape,a),c=y.sizeFromShape(p),d=y.makeZerosTypedArray(c,"int32"),f=y.sizeFromShape(m),h=e.data.get(u.dataId).values;for(let g=0;g<d.length;++g){let b=g*f,T=h[b],x=0;for(let I=0;I<f;++I){let k=h[b+I];k<T&&(T=k,x=I)}d[g]=x}return l.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(p,"int32",d)}var j_={kernelName:mi,backendName:"cpu",kernelFunc:Wre};var Kre=Pe($i,r=>Math.asin(r)),X_={kernelName:$i,backendName:"cpu",kernelFunc:Kre};var Vre=Pe(Bi,r=>Math.asinh(r)),Y_={kernelName:Bi,backendName:"cpu",kernelFunc:Vre};var Hre=Pe(Oi,r=>Math.atan(r)),Z_={kernelName:Oi,backendName:"cpu",kernelFunc:Hre};var qre=ot((r,t)=>Math.atan2(r,t)),jre=ut(la,qre),Q_={kernelName:la,backendName:"cpu",kernelFunc:jre};var Xre=Pe(zi,r=>Math.atanh(r)),J_={kernelName:zi,backendName:"cpu",kernelFunc:Xre};function pf(r,t,e,n,o,s){let a=o.strideHeight,i=o.strideWidth,u=o.dilationHeight,l=o.dilationWidth,p=o.effectiveFilterHeight,m=o.effectiveFilterWidth,c=o.padInfo.top,d=o.padInfo.left,f=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=Ie(o.outShape,e),g=h.values,b=o.outShape[1]*o.outShape[2]*o.outShape[3],T=o.outShape[2]*o.outShape[3],x=o.outShape[3];for(let I=0;I<o.batchSize;++I){let k=I*b,A=I*n[0];for(let R=0;R<o.inChannels;++R)for(let F=0;F<o.outHeight;++F){let P=F*a-c,L=Math.max(0,P),O=Math.min(o.inHeight,p+P),G=k+F*T;for(let W=0;W<o.outWidth;++W){let H=W*i-d,V=Math.max(0,H),q=Math.min(o.inWidth,m+H),Z=f,j=0,Y=0;for(let ae=L;ae<O;ae+=u){let pe=A+ae*n[1];for(let oe=V;oe<q;oe+=l){let ge=pe+oe*n[2],fe=r[ge+R];s==="max"&&fe>Z?Z=fe:s==="avg"&&(j+=fe,Y++)}if(isNaN(Z))break}let se=G+W*x+R;g[se]=s==="avg"?j/Y:Z}}}return h}function vx(r,t,e,n,o=!1,s=!1){let a=Ie(n.outShape,"int32"),i=n.strideHeight,u=n.strideWidth,l=n.dilationHeight,p=n.dilationWidth,m=n.effectiveFilterHeight,c=n.effectiveFilterWidth,d=n.padInfo.top,f=n.padInfo.left,h=Ie(t,e,r);for(let g=0;g<n.batchSize;++g)for(let b=0;b<n.inChannels;++b)for(let T=0;T<n.outHeight;++T){let x=T*i-d,I=x;for(;I<0;)I+=l;let k=Math.min(n.inHeight,m+x);for(let A=0;A<n.outWidth;++A){let R=A*u-f,F=R;for(;F<0;)F+=p;let P=Math.min(n.inWidth,c+R),L=Number.NEGATIVE_INFINITY,O=-1;for(let G=I;G<k;G+=l){let W=G-x;for(let H=F;H<P;H+=p){let V=H-R,q=h.get(g,G,H,b);q>L&&(L=q,o?O=s?((g*n.inHeight+G)*n.inWidth+H)*n.inChannels+b:(G*n.inWidth+H)*n.inChannels+b:O=W*c+V)}}a.set(O,g,T,A,b)}}return a}function Ax(r,t,e,n,o,s){let a=o.strideDepth,i=o.strideHeight,u=o.strideWidth,l=o.dilationDepth,p=o.dilationHeight,m=o.dilationWidth,c=o.effectiveFilterDepth,d=o.effectiveFilterHeight,f=o.effectiveFilterWidth,h=o.padInfo.front,g=o.padInfo.top,b=o.padInfo.left,T=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Ie(o.outShape,e),I=x.values,k=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],A=o.outShape[2]*o.outShape[3]*o.outShape[4],R=o.outShape[3]*o.outShape[4],F=o.outShape[4];for(let P=0;P<o.batchSize;++P){let L=P*k,O=P*n[0];for(let G=0;G<o.inChannels;++G)for(let W=0;W<o.outDepth;++W){let H=W*a-h,V=H;for(;V<0;)V+=l;let q=Math.min(o.inDepth,c+H),Z=L+W*A;for(let j=0;j<o.outHeight;++j){let Y=j*i-g,se=Y;for(;se<0;)se+=p;let ae=Math.min(o.inHeight,d+Y),pe=Z+j*R;for(let oe=0;oe<o.outWidth;++oe){let ge=oe*u-b,fe=ge;for(;fe<0;)fe+=m;let ue=Math.min(o.inWidth,f+ge),ve=pe+oe*F,De=T,Fe=0,je=0;for(let bt=V;bt<q;bt+=l){let lt=O+bt*n[1];for(let Dt=se;Dt<ae;Dt+=p){let Mt=lt+Dt*n[2];for(let Tt=fe;Tt<ue;Tt+=m){let st=Mt+Tt*n[3],Vt=r[st+G];if(s==="max"&&Vt>De?De=Vt:s==="avg"&&(Fe+=Vt,je++),isNaN(De))break}if(isNaN(De))break}if(isNaN(De))break}let Q=ve+G;I[Q]=s==="avg"?Fe/je:De}}}}return x}function e$(r,t){let e=Ie(t.outShape,"int32"),n=t.strideDepth,o=t.strideHeight,s=t.strideWidth,a=t.dilationDepth,i=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,p=t.effectiveFilterHeight,m=t.effectiveFilterWidth,c=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let h=0;h<t.batchSize;++h)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){let T=b*n-c,x=T;for(;x<0;)x+=a;let I=Math.min(t.inDepth,l+T);for(let k=0;k<t.outHeight;++k){let A=k*o-d,R=A;for(;R<0;)R+=i;let F=Math.min(t.inHeight,p+A);for(let P=0;P<t.outWidth;++P){let L=P*s-f,O=L;for(;O<0;)O+=u;let G=Math.min(t.inWidth,m+L),W=Number.NEGATIVE_INFINITY,H=-1;for(let V=x;V<I;V+=a){let q=V-T;for(let Z=R;Z<F;Z+=i){let j=Z-A;for(let Y=O;Y<G;Y+=u){let se=Y-L,ae=r.get(h,V,Z,Y,g);ae>=W&&(W=ae,H=q*p*m+j*p+se)}}}e.set(H,h,b,k,P,g)}}}return e}function Yre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;te(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;y.assert(C.eitherStridesOrDilationsAreOne(a,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=C.computePool2DInfo(o.shape,s,a,l,i,u),m;if(p.filterWidth===1&&p.filterHeight===1&&y.arraysEqual(p.inShape,p.outShape))m=jr({inputs:{x:o},backend:e});else{let c=e.data.get(o.dataId).values,d=y.computeStrides(o.shape),f=pf(c,o.shape,o.dtype,d,p,"avg");m=e.makeTensorInfo(p.outShape,o.dtype,f.values)}return m}var t$={kernelName:uo,backendName:"cpu",kernelFunc:Yre};function Zre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=n;te(o,"avgPool3d");let p=C.computePool3DInfo(o.shape,s,a,1,i,u,l),m=e.data.get(o.dataId).values,c=Ax(m,o.shape,o.dtype,y.computeStrides(o.shape),p,"avg");return e.makeTensorInfo(c.shape,"float32",c.values)}var r$={kernelName:Mu,backendName:"cpu",kernelFunc:Zre};function Qre(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=n;te([o,s],"avgPool3DGrad");let p=C.computePool3DInfo(s.shape,a,i,1,u,l),m=p.strideDepth,c=p.strideHeight,d=p.strideWidth,f=p.filterDepth,h=p.filterHeight,g=p.filterWidth,b=p.dilationDepth,T=p.dilationHeight,x=p.dilationWidth,I=p.effectiveFilterDepth,k=p.effectiveFilterHeight,A=p.effectiveFilterWidth,R=I-1-p.padInfo.front,F=A-1-p.padInfo.left,P=k-1-p.padInfo.top,L=Ie(s.shape,"float32"),O=1/(f*h*g),G=e.bufferSync(o);for(let W=0;W<p.batchSize;++W)for(let H=0;H<p.inChannels;++H)for(let V=0;V<p.inDepth;++V)for(let q=0;q<p.inHeight;++q)for(let Z=0;Z<p.inWidth;++Z){let j=V-R,Y=q-P,se=Z-F,ae=0;for(let pe=0;pe<I;pe+=b){let oe=(j+pe)/m;if(!(oe<0||oe>=p.outDepth||Math.floor(oe)!==oe))for(let ge=0;ge<k;ge+=T){let fe=(Y+ge)/c;if(!(fe<0||fe>=p.outHeight||Math.floor(fe)!==fe))for(let ue=0;ue<A;ue+=x){let ve=(se+ue)/d;if(ve<0||ve>=p.outWidth||Math.floor(ve)!==ve)continue;ae+=G.get(W,oe,fe,ve,H)}}}L.set(ae*O,W,V,q,Z,H)}return e.makeTensorInfo(L.shape,L.dtype,L.values)}var n$={kernelName:Im,backendName:"cpu",kernelFunc:Qre};function Jre(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,a=s;te([o,s],"avgPoolGrad");let{filterSize:i,strides:u,pad:l}=n,p=C.computePool2DInfo(a.shape,i,u,1,l),m=p.strideHeight,c=p.strideWidth,d=p.filterHeight,f=p.filterWidth,h=p.dilationHeight,g=p.dilationWidth,b=p.effectiveFilterHeight,T=p.effectiveFilterWidth,x=T-1-p.padInfo.left,I=b-1-p.padInfo.top,k=Ie(a.shape,"float32"),A=1/(d*f),R=e.data.get(o.dataId).values,F=Ie(o.shape,"float32",R);for(let P=0;P<p.batchSize;++P)for(let L=0;L<p.inChannels;++L)for(let O=0;O<p.inHeight;++O)for(let G=0;G<p.inWidth;++G){let W=O-I,H=G-x,V=0;for(let q=0;q<b;q+=h){let Z=(W+q)/m;if(!(Z<0||Z>=p.outHeight||Math.floor(Z)!==Z))for(let j=0;j<T;j+=g){let Y=(H+j)/c;if(Y<0||Y>=p.outWidth||Math.floor(Y)!==Y)continue;V+=F.get(P,Z,Y,L)}}k.set(V*A,P,O,G,L)}return e.makeTensorInfo(k.shape,k.dtype,k.values)}var o$={kernelName:xm,backendName:"cpu",kernelFunc:Jre};function ene(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,scale:s,offset:a,mean:i,variance:u}=t;y.assert(i.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(s==null||i.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),te([o,i,u,s,a],"batchNorm");let{varianceEpsilon:l}=n;l==null&&(l=.001);let p=e.data.get(o.dataId).values,m=e.data.get(i.dataId).values,c=e.data.get(u.dataId).values,d=s?e.data.get(s.dataId).values:new Float32Array([1]),f=a?e.data.get(a.dataId).values:new Float32Array([0]),h=new Float32Array(p.length),g=f.length,b=d.length,T=c.length,x=m.length,I=0,k=0,A=0,R=0;for(let F=0;F<p.length;++F)h[F]=f[I++]+(p[F]-m[k++])*d[A++]/Math.sqrt(c[R++]+l),I>=g&&(I=0),k>=x&&(k=0),A>=b&&(A=0),R>=T&&(R=0);return e.makeTensorInfo(o.shape,o.dtype,h)}var s$={kernelName:ko,backendName:"cpu",kernelFunc:ene};function tne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,crops:a}=n;te([o],"batchToSpaceND");let i=s.reduce((b,T)=>b*T),u=C.getReshaped(o.shape,s,i),l=C.getPermuted(u.length,s.length),p=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(p,a,s.length),d=et({inputs:{x:o},backend:e,attrs:{shape:u}}),f=Yt({inputs:{x:d},backend:e,attrs:{perm:l}}),h=et({inputs:{x:f},backend:e,attrs:{shape:p}}),g=Js({inputs:{x:h},backend:e,attrs:{begin:m,size:c}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),g}var a$={kernelName:ds,backendName:"cpu",kernelFunc:tne};function rne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:a}=n,i=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,l=nf(i,u,s.dtype,s.shape,a);return e.makeTensorInfo([a],s.dtype,l)}var i$={kernelName:Cm,backendName:"cpu",kernelFunc:rne};function nne(r){let{inputs:t,backend:e}=r,{s0:n,s1:o}=t,s=e.data.get(n.dataId).values,a=e.data.get(o.dataId).values,i=C.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return e.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var u$={kernelName:km,backendName:"cpu",kernelFunc:nne};var one=Pe(Kn,(r,t)=>{let e=t;return r>e.clipValueMax?e.clipValueMax:r<e.clipValueMin?e.clipValueMin:r}),p$={kernelName:Kn,backendName:"cpu",kernelFunc:one};var sne=r=>{let{x:t}=r.inputs,e=r.backend,n=new Float32Array(y.sizeFromShape(t.shape)),o=e.data.get(t.dataId),s=o.complexTensorInfos.real,a=o.complexTensorInfos.imag,i=e.data.get(s.dataId).values,u=e.data.get(a.dataId).values;for(let l=0;l<i.length;l++){let p=i[l],m=u[l];n[l]=Math.hypot(p,m)}return e.makeOutput(n,t.shape,"float32")},l$={kernelName:Lu,backendName:"cpu",kernelFunc:sne};function Di(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.data.get(n.dataId).complexTensorInfos.imag,s=e.data.get(o.dataId).values;return e.makeTensorInfo(o.shape,o.dtype,s)}var m$={kernelName:Ou,backendName:"cpu",kernelFunc:Di};function Dp(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,t[0].shape)[0],a=t.map(h=>h.shape);C.assertParamsConsistent(a,s);let i=C.computeOutShape(t.map(h=>h.shape),s);if(y.sizeFromShape(i)===0)return e.makeTensorInfo(i,t[0].dtype,[]);let u=t.filter(h=>y.sizeFromShape(h.shape)>0);if(u.length===1)return jr({inputs:{x:u[0]},backend:e});if(u[0].dtype==="complex64"){let h=u.map(I=>Xs({inputs:{input:I},backend:e})),g=u.map(I=>Di({inputs:{input:I},backend:e})),b=Dp({inputs:h,backend:e,attrs:{axis:s}}),T=Dp({inputs:g,backend:e,attrs:{axis:s}}),x=Sr({inputs:{real:b,imag:T},backend:e});return h.forEach(I=>e.disposeIntermediateTensorInfo(I)),g.forEach(I=>e.disposeIntermediateTensorInfo(I)),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(T),x}let l=u.map(h=>{let g=y.sizeFromShape(h.shape.slice(s));return et({inputs:{x:h},backend:e,attrs:{shape:[-1,g]}})}),p=l.map(h=>({vals:e.data.get(h.dataId).values,shape:h.shape}));i=C.computeOutShape(l.map(h=>h.shape),1);let m=l[0].shape[0]===1,c=_l(p,i,t[0].dtype,m),d=C.computeOutShape(u.map(h=>h.shape),s),f=e.makeTensorInfo(d,t[0].dtype,c);return l.forEach(h=>e.disposeIntermediateTensorInfo(h)),f}var c$={kernelName:fs,backendName:"cpu",kernelFunc:Dp};function IN(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=n;te([o,s],"conv2d");let m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,s.shape,a,l,i,p,!1,m),d=c.filterHeight,f=c.filterWidth,h=c.dilationHeight,g=c.dilationWidth,b=c.padInfo.left,T=c.padInfo.top,x=c.dataFormat==="channelsLast",I=new ht(c.outShape,o.dtype),k=y.computeStrides(o.shape),A=y.computeStrides(s.shape),R=k[0],F=x?k[1]:k[2],P=x?k[2]:1,L=x?1:k[1],O=I.strides[0],G=x?I.strides[1]:I.strides[2],W=x?I.strides[2]:1,H=x?1:I.strides[1],V=e.data.get(o.dataId).values,q=e.data.get(s.dataId).values,Z=I.values;for(let j=0;j<c.batchSize;++j){let Y=j*R,se=j*O;for(let ae=0;ae<c.outHeight;++ae){let pe=se+ae*G,oe=ae*c.strideHeight-T;for(let ge=0;ge<d;++ge){let fe=oe+ge*h;if(fe<0||fe>=c.inHeight)continue;let ue=ge*A[0],ve=Y+fe*F;for(let De=0;De<c.outWidth;++De){let Fe=pe+De*W,je=De*c.strideWidth-b;for(let Q=0;Q<f;++Q){let bt=je+Q*g;if(bt<0||bt>=c.inWidth)continue;let lt=ue+Q*A[1],Dt=ve+bt*P,Mt=lt;for(let Tt=0;Tt<c.inChannels;++Tt){let st=V[Dt+Tt*L];for(let Vt=0;Vt<c.outChannels;++Vt)Z[Fe+Vt*H]+=st*q[Mt+Vt];Mt+=c.outChannels}}}}}}return e.makeTensorInfo(I.shape,I.dtype,Z)}var d$={kernelName:mo,backendName:"cpu",kernelFunc:IN};function ane(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:p}=n;te([o,s],"conv2dBackpropFilter");let m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,p,a,1,i,l,!1,m),{strideHeight:d,strideWidth:f,filterHeight:h,filterWidth:g}=c,b=c.dataFormat==="channelsLast",T=new ht(c.filterShape,"float32"),x=c.padInfo.left,I=c.padInfo.top,k=e.data.get(o.dataId).values,A=e.data.get(s.dataId).values,R=new ht(o.shape,o.dtype,k),F=new ht(s.shape,s.dtype,A);for(let P=0;P<h;++P){let L=Math.max(0,Math.ceil((I-P)/d)),O=Math.min(c.outHeight,(c.inHeight+I-P)/d);for(let G=0;G<g;++G){let W=Math.max(0,Math.ceil((x-G)/f)),H=Math.min(c.outWidth,(c.inWidth+x-G)/f);for(let V=0;V<c.inChannels;++V)for(let q=0;q<c.outChannels;++q){let Z=0;for(let j=0;j<c.batchSize;++j)for(let Y=L;Y<O;++Y){let se=P+Y*d-I;for(let ae=W;ae<H;++ae){let pe=G+ae*f-x;b?Z+=R.get(j,se,pe,V)*F.get(j,Y,ae,q):Z+=R.get(j,V,se,pe)*F.get(j,q,Y,ae)}}T.set(Z,P,G,V,q)}}}return e.makeTensorInfo(T.shape,T.dtype,T.values)}var f$={kernelName:Sm,backendName:"cpu",kernelFunc:ane};function ine(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:p}=n;te([o,s],"conv2dBackpropInput");let m=y.computeStrides(s.shape),c=y.computeStrides(o.shape),d=C.convertConv2DDataFormat(l),f=C.computeConv2DInfo(a,s.shape,i,1,u,p,!1,d),h=new ht(f.inShape,"float32"),g=h.values,b=e.data.get(o.dataId).values,T=e.data.get(s.dataId).values,[x,I,k]=m,{batchSize:A,filterHeight:R,filterWidth:F,inChannels:P,inHeight:L,inWidth:O,outChannels:G,outHeight:W,outWidth:H,strideHeight:V,strideWidth:q}=f;d=f.dataFormat;let Z=R-1-f.padInfo.top,j=F-1-f.padInfo.left,Y=d==="channelsLast",se=h.strides[0],ae=Y?h.strides[1]:h.strides[2],pe=Y?h.strides[2]:1,oe=Y?1:h.strides[1],ge=c[0],fe=Y?c[1]:c[2],ue=Y?c[2]:1,ve=Y?1:c[1];for(let De=0;De<A;++De)for(let Fe=0;Fe<P;++Fe)for(let je=0;je<L;++je){let Q=je-Z,bt=Math.max(0,Math.ceil(Q/V)),lt=Math.min(W,(R+Q)/V);for(let Dt=0;Dt<O;++Dt){let Mt=Dt-j,Tt=Math.max(0,Math.ceil(Mt/q)),st=Math.min(H,(F+Mt)/q),Vt=0;for(let pr=bt;pr<lt;++pr){let ro=pr*V-Q;for(let Br=Tt;Br<st;++Br){let ps=Br*q-Mt,un=ge*De+fe*pr+ue*Br,vr=x*(R-1-ro)+I*(F-1-ps)+k*Fe;for(let lr=0;lr<G;++lr){let Yr=b[un+ve*lr],Zr=T[vr+lr];Vt+=Yr*Zr}}}let zn=se*De+ae*je+pe*Dt+oe*Fe;g[zn]=Vt}}return e.makeTensorInfo(h.shape,h.dtype,h.values)}var h$={kernelName:co,backendName:"cpu",kernelFunc:ine};function une(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:u}=n;te([o,s],"conv3d");let l=C.computeConv3DInfo(o.shape,s.shape,a,u,i),{filterDepth:p,filterHeight:m,filterWidth:c,dilationDepth:d,dilationHeight:f,dilationWidth:h,padInfo:g}=l,b=g.front,T=g.left,x=g.top,I=new ht(l.outShape,o.dtype),k=e.data.get(o.dataId).values,A=e.data.get(s.dataId).values,R=I.values,F=y.computeStrides(o.shape),P=y.computeStrides(s.shape);for(let L=0;L<l.batchSize;++L){let O=L*F[0],G=L*I.strides[0];for(let W=0;W<l.outDepth;++W){let H=G+W*I.strides[1],V=W*l.strideDepth-b;for(let q=0;q<p;++q){let Z=V+q*d;if(Z<0||Z>=l.inDepth)continue;let j=q*P[0],Y=O+Z*F[1];for(let se=0;se<l.outHeight;++se){let ae=H+se*I.strides[2],pe=se*l.strideHeight-x;for(let oe=0;oe<m;++oe){let ge=pe+oe*f;if(ge<0||ge>=l.inHeight)continue;let fe=j+oe*P[1],ue=Y+ge*F[2];for(let ve=0;ve<l.outWidth;++ve){let De=ae+ve*l.outChannels,Fe=ve*l.strideWidth-T;for(let je=0;je<c;++je){let Q=Fe+je*h;if(Q<0||Q>=l.inWidth)continue;let bt=fe+je*P[2],lt=ue+Q*l.inChannels,Dt=bt;for(let Mt=0;Mt<l.inChannels;++Mt){let Tt=k[lt+Mt];for(let st=0;st<l.outChannels;++st)R[De+st]+=Tt*A[Dt+st];Dt+=l.outChannels}}}}}}}}return e.makeTensorInfo(I.shape,I.dtype,I.values)}var g$={kernelName:_u,backendName:"cpu",kernelFunc:une};function pne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,pad:i,filterShape:u}=n;te([o,s],"conv3dBackpropFilterV2");let l=y.computeStrides(o.shape),p=y.computeStrides(s.shape),m=C.computeConv3DInfo(o.shape,u,a,1,i),c=m.strideDepth,d=m.strideHeight,f=m.strideWidth,h=m.filterDepth,g=m.filterHeight,b=m.filterWidth,T=new ht(m.filterShape,"float32"),x=T.values,[I,k,A,R]=T.strides,F=e.data.get(s.dataId).values,[P,L,O,G]=p,W=e.data.get(o.dataId).values,[H,V,q,Z]=l,j=m.padInfo.front,Y=m.padInfo.left,se=m.padInfo.top;for(let ae=0;ae<h;++ae){let pe=Math.max(0,Math.ceil((j-ae)/c)),oe=Math.min(m.outDepth,(m.inDepth+j-ae)/c),ge=ae*I;for(let fe=0;fe<g;++fe){let ue=Math.max(0,Math.ceil((se-fe)/d)),ve=Math.min(m.outHeight,(m.inHeight+se-fe)/d),De=fe*k+ge;for(let Fe=0;Fe<b;++Fe){let je=Math.max(0,Math.ceil((Y-Fe)/f)),Q=Math.min(m.outWidth,(m.inWidth+Y-Fe)/f),bt=Fe*A+De;for(let lt=0;lt<m.inChannels;++lt){let Dt=lt*R+bt;for(let Mt=0;Mt<m.outChannels;++Mt){let Tt=0;for(let st=0;st<m.batchSize;++st){let Vt=st*H,zn=st*P;for(let pr=pe;pr<oe;++pr){let Br=(ae+pr*c-j)*V+Vt,ps=pr*L+zn;for(let un=ue;un<ve;++un){let lr=(fe+un*d-se)*q+Br,Yr=un*O+ps;for(let Zr=je;Zr<Q;++Zr){let ls=(Fe+Zr*f-Y)*Z+lr,Du=Zr*G+Yr;Tt+=W[ls+lt]*F[Du+Mt]}}}}x[Dt+Mt]=Tt}}}}}return e.makeTensorInfo(T.shape,T.dtype,T.values)}var b$={kernelName:vm,backendName:"cpu",kernelFunc:pne};function lne(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{pad:a,strides:i,inputShape:u}=n;te([o],"conv3dBackpropInputV2");let l=y.computeStrides(o.shape),p=y.computeStrides(s.shape),m=C.computeConv3DInfo(u,s.shape,i,1,a),c=new ht(m.inShape,"float32"),d=c.values,[f,h,g,b]=c.strides,T=e.data.get(o.dataId).values,[x,I,k,A]=l,R=e.data.get(s.dataId).values,[F,P,L,O]=p,{batchSize:G,filterDepth:W,filterHeight:H,filterWidth:V,inChannels:q,inDepth:Z,inHeight:j,inWidth:Y,outChannels:se,outDepth:ae,outHeight:pe,outWidth:oe,strideDepth:ge,strideHeight:fe,strideWidth:ue}=m,ve=W-1-m.padInfo.front,De=H-1-m.padInfo.top,Fe=V-1-m.padInfo.left;for(let je=0;je<G;++je)for(let Q=0;Q<q;++Q)for(let bt=0;bt<Z;++bt){let lt=bt-ve,Dt=Math.max(0,Math.ceil(lt/ge)),Mt=Math.min(ae,(W+lt)/ge);for(let Tt=0;Tt<j;++Tt){let st=Tt-De,Vt=Math.max(0,Math.ceil(st/fe)),zn=Math.min(pe,(H+st)/fe);for(let pr=0;pr<Y;++pr){let ro=pr-Fe,Br=Math.max(0,Math.ceil(ro/ue)),ps=Math.min(oe,(V+ro)/ue),un=0;for(let vr=Dt;vr<Mt;++vr){let lr=vr*ge-lt;for(let Yr=Vt;Yr<zn;++Yr){let Zr=Yr*fe-st;for(let ii=Br;ii<ps;++ii){let ls=ii*ue-ro,Du=x*je+I*vr+k*Yr+A*ii,um=F*(W-1-lr)+P*(H-1-Zr)+L*(V-1-ls)+O*Q;for(let ms=0;ms<se;++ms){let Or=T[Du+ms],$p=R[um+ms];un+=Or*$p}}}}d[f*je+h*bt+g*Tt+b*pr+Q]=un}}}return e.makeTensorInfo(c.shape,c.dtype,c.values)}var y$={kernelName:Am,backendName:"cpu",kernelFunc:lne};var mne=Pe(fo,r=>Math.cos(r)),T$={kernelName:fo,backendName:"cpu",kernelFunc:mne};var cne=Pe(ho,r=>Math.cosh(r)),x$={kernelName:ho,backendName:"cpu",kernelFunc:cne};function dne(r){let{inputs:t,backend:e,attrs:n}=r,{image:o,boxes:s,boxInd:a}=t,{cropSize:i,method:u,extrapolationValue:l}=n,[p,m,c,d]=o.shape,f=s.shape[0],[h,g]=i,b=Ie([f,h,g,d],"float32"),T=e.data.get(s.dataId).values,x=e.data.get(a.dataId).values,I=e.data.get(o.dataId).values,k=y.computeStrides(o.shape),A=y.computeStrides(b.shape);for(let R=0;R<f;R++){let F=R*4,P=T[F],L=T[F+1],O=T[F+2],G=T[F+3],W=x[R];if(W>=p)continue;let H=h>1?(O-P)*(m-1)/(h-1):0,V=g>1?(G-L)*(c-1)/(g-1):0;for(let q=0;q<h;q++){let Z=h>1?P*(m-1)+q*H:.5*(P+O)*(m-1);if(Z<0||Z>m-1){for(let j=0;j<g;j++)for(let Y=0;Y<d;Y++){let se=Y+j*A[2]+q*A[1]+R*A[0];b.values[se]=l}continue}if(u==="bilinear"){let j=Math.floor(Z),Y=Math.ceil(Z),se=Z-j;for(let ae=0;ae<g;ae++){let pe=g>1?L*(c-1)+ae*V:.5*(L+G)*(c-1);if(pe<0||pe>c-1){for(let ue=0;ue<d;ue++){let ve=ue+ae*A[2]+q*A[1]+R*A[0];b.values[ve]=l}continue}let oe=Math.floor(pe),ge=Math.ceil(pe),fe=pe-oe;for(let ue=0;ue<d;ue++){let ve=ue+oe*k[2]+j*k[1]+W*k[0],De=I[ve];ve=ue+ge*k[2]+j*k[1]+W*k[0];let Fe=I[ve];ve=ue+oe*k[2]+Y*k[1]+W*k[0];let je=I[ve];ve=ue+ge*k[2]+Y*k[1]+W*k[0];let Q=I[ve],bt=De+(Fe-De)*fe,lt=je+(Q-je)*fe;ve=ue+ae*A[2]+q*A[1]+R*A[0],b.values[ve]=bt+(lt-bt)*se}}}else for(let j=0;j<g;++j){let Y=g>1?L*(c-1)+j*V:.5*(L+G)*(c-1);if(Y<0||Y>c-1){for(let pe=0;pe<d;pe++){let oe=pe+j*A[2]+q*A[1]+R*A[0];b.values[oe]=l}continue}let se=Math.round(Y),ae=Math.round(Z);for(let pe=0;pe<d;pe++){let oe=pe+se*k[2]+ae*k[1]+W*k[0],ge=pe+j*A[2]+q*A[1]+R*A[0];b.values[ge]=I[oe]}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}var I$={kernelName:ca,backendName:"cpu",kernelFunc:dne};function fne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;te(o,"cumprod");let u=C.getAxesPermutation([s],o.shape.length),l=o;u!=null&&(l=Yt({inputs:{x:o},backend:e,attrs:{perm:u}}));let p=C.getInnerMostAxes(1,o.shape.length)[0];if(p!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${p}`);let m=Et(l.dtype,"int32"),c=y.makeOnesTypedArray(y.sizeFromShape(l.shape),m),d=e.data.get(l.dataId).values,f=l.shape[l.shape.length-1],h=i?(b,T)=>b+f-T-1:(b,T)=>b+T;for(let b=0;b<d.length;b+=f)for(let T=0;T<f;T++){let x=h(b,T);if(T===0)c[x]=a?1:d[x];else{let I=h(b,T-1);c[x]=a?d[I]*c[I]:d[x]*c[I]}}let g=e.makeTensorInfo(l.shape,m,c);if(u!=null){let b=C.getUndoAxesPermutation(u),T=Yt({inputs:{x:g},backend:e,attrs:{perm:b}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(l),T}return g}var C$={kernelName:ma,backendName:"cpu",kernelFunc:fne};function hne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;te(o,"cumsum");let u=C.getAxesPermutation([s],o.shape.length),l=o;u!=null&&(l=Yt({inputs:{x:o},backend:e,attrs:{perm:u}}));let p=C.getInnerMostAxes(1,o.shape.length)[0];if(p!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${p}`);let m=Et(l.dtype,"int32"),c=y.makeZerosTypedArray(y.sizeFromShape(l.shape),m),d=e.data.get(l.dataId).values,f=l.shape[l.shape.length-1],h=i?(b,T)=>b+f-T-1:(b,T)=>b+T;for(let b=0;b<d.length;b+=f)for(let T=0;T<f;T++){let x=h(b,T);if(T===0)c[x]=a?0:d[x];else{let I=h(b,T-1);c[x]=a?d[I]+c[I]:d[x]+c[I]}}let g=e.makeTensorInfo(l.shape,m,c);if(u!=null){let b=C.getUndoAxesPermutation(u),T=Yt({inputs:{x:g},backend:e,attrs:{perm:b}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(l),T}return g}var k$={kernelName:go,backendName:"cpu",kernelFunc:hne};function gne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let u=e.data.get(o.dataId).values,l=e.data.get(s.dataId).values,p=nf(u,l,s.dtype,s.shape,a);return e.makeTensorInfo([a],s.dtype,p)}else if(o.shape.length===2){let u=e.bufferSync(o),l=e.bufferSync(s),p=cx(u,l,a,i);return e.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var S$={kernelName:wm,backendName:"cpu",kernelFunc:gne};function bne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n;y.assert(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);let i=o.shape[0],u=o.shape[1],l=o.shape[2],p=o.shape[3],m=u*s,c=l*s,d=p/(s*s),f=e.data.get(o.dataId).values,h=new Float32Array(i*m*c*d),g=0;for(let b=0;b<i;++b)for(let T=0;T<m;++T){let x=Math.floor(T/s),I=T%s;for(let k=0;k<c;++k){let A=Math.floor(k/s),R=k%s,F=(I*s+R)*d;for(let P=0;P<d;++P){let O=P+F+p*(A+l*(x+u*b));h[g++]=f[O]}}}return e.makeTensorInfo([i,m,c,d],o.dtype,h)}var v$={kernelName:da,backendName:"cpu",kernelFunc:bne};function CN(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:u,dimRoundingMode:l}=n;te([o,s],"depthwiseConv2DNative");let p=y.computeStrides(o.shape),m=y.computeStrides(s.shape),c=u;c==null&&(c=[1,1]),y.assert(C.eitherStridesOrDilationsAreOne(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let d=C.computeConv2DInfo(o.shape,s.shape,a,c,i,l,!0),{filterHeight:f,filterWidth:h,dilationHeight:g,dilationWidth:b,padInfo:T}=d,x=T.left,I=T.top,k=d.outChannels/d.inChannels,A=new ht(d.outShape,o.dtype),R=e.data.get(o.dataId).values,F=e.data.get(s.dataId).values,P=A.values;for(let L=0;L<d.batchSize;++L){let O=L*p[0],G=L*A.strides[0];for(let W=0;W<d.outHeight;++W){let H=G+W*A.strides[1],V=W*d.strideHeight-I;for(let q=0;q<f;++q){let Z=V+q*g;if(Z<0||Z>=d.inHeight)continue;let j=q*m[0],Y=O+Z*p[1];for(let se=0;se<d.outWidth;++se){let ae=H+se*A.strides[2],pe=se*d.strideWidth-x;for(let oe=0;oe<h;++oe){let ge=pe+oe*b;if(ge<0||ge>=d.inWidth)continue;let fe=j+oe*m[1],ue=Y+ge*d.inChannels,ve=ae,De=fe;for(let Fe=0;Fe<d.inChannels;++Fe){let je=R[ue+Fe];for(let Q=0;Q<k;++Q)P[ve+Q]+=je*F[De+Q];ve+=k,De+=k}}}}}}return e.makeTensorInfo(A.shape,A.dtype,A.values)}var A$={kernelName:bo,backendName:"cpu",kernelFunc:CN};function yne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,dilations:i,pad:u,dimRoundingMode:l,filterShape:p}=n;te([o,s],"depthwiseConv2dNativeBackpropFilter");let m=C.computeConv2DInfo(o.shape,p,a,i,u,l,!0),{strideHeight:c,strideWidth:d,filterHeight:f,filterWidth:h}=m,g=new ht(m.filterShape,"float32"),b=m.padInfo.left,T=m.padInfo.top,x=m.outChannels/m.inChannels,I=e.data.get(o.dataId).values,k=new ht(o.shape,o.dtype,I),A=e.data.get(s.dataId).values,R=new ht(s.shape,s.dtype,A);for(let F=0;F<f;++F){let P=Math.max(0,Math.ceil((T-F)/c)),L=Math.min(m.outHeight,(m.inHeight+T-F)/c);for(let O=0;O<h;++O){let G=Math.max(0,Math.ceil((b-O)/d)),W=Math.min(m.outWidth,(m.inWidth+b-O)/d);for(let H=0;H<m.outChannels;++H){let V=Math.trunc(H/x),q=H%x,Z=0;for(let j=0;j<m.batchSize;++j)for(let Y=P;Y<L;++Y){let se=F+Y*c-T;for(let ae=G;ae<W;++ae){let pe=O+ae*d-b;Z+=k.get(j,se,pe,V)*R.get(j,Y,ae,H)}}g.set(Z,F,O,V,q)}}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}var w$={kernelName:Nm,backendName:"cpu",kernelFunc:yne};function Tne(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{strides:a,dilations:i,pad:u,dimRoundingMode:l,inputShape:p}=n;te([o,s],"depthwiseConv2DNativeBackpropInput");let m=y.computeStrides(o.shape),c=y.computeStrides(s.shape),d=C.computeConv2DInfo(p,s.shape,a,i,u,l,!0),f=new ht(d.inShape,"float32"),h=f.values,[g,b,T]=f.strides,x=e.data.get(o.dataId).values,[I,k,A]=m,R=e.data.get(s.dataId).values,[F,P,L]=c,{batchSize:O,filterHeight:G,filterWidth:W,inChannels:H,inHeight:V,inWidth:q,outChannels:Z,outHeight:j,outWidth:Y,strideHeight:se,strideWidth:ae}=d,pe=G-1-d.padInfo.top,oe=W-1-d.padInfo.left,ge=Z/H;for(let fe=0;fe<O;++fe)for(let ue=0;ue<H;++ue)for(let ve=0;ve<V;++ve){let De=ve-pe,Fe=Math.max(0,Math.ceil(De/se)),je=Math.min(j,(G+De)/se);for(let Q=0;Q<q;++Q){let bt=Q-oe,lt=Math.max(0,Math.ceil(bt/ae)),Dt=Math.min(Y,(W+bt)/ae),Mt=0;for(let Tt=Fe;Tt<je;++Tt){let st=Tt*se-De;for(let Vt=lt;Vt<Dt;++Vt){let zn=Vt*ae-bt,pr=I*fe+k*Tt+A*Vt,ro=F*(G-1-st)+P*(W-1-zn)+L*ue;for(let Br=0;Br<ge;++Br){let ps=ue*ge+Br,un=x[pr+ps],vr=R[ro+Br];Mt+=un*vr}}}h[g*fe+b*ve+T*Q+ue]=Mt}}return e.makeTensorInfo(f.shape,f.dtype,f.values)}var N$={kernelName:Dm,backendName:"cpu",kernelFunc:Tne};function xne(r){let{inputs:t,backend:e}=r,{x:n}=t,o=y.sizeFromShape(n.shape),s=e.data.get(n.dataId).values,a=Ie([o,o],n.dtype),i=a.values;for(let l=0;l<s.length;l++)i[l*o+l]=s[l];let u=[...n.shape,...n.shape];return e.makeTensorInfo(u,a.dtype,a.values)}var D$={kernelName:Rm,backendName:"cpu",kernelFunc:xne};var R$={kernelName:$u,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:n,filter:o}=r,{strides:s,pad:a,dilations:i}=e,u=t,l=u.data.get(n.dataId).values,p=n.shape.length,m=u.data.get(o.dataId).values,c=o.shape.length,{batchSize:d,inHeight:f,inWidth:h,inChannels:g,outHeight:b,outWidth:T,padInfo:x,strideHeight:I,strideWidth:k,filterHeight:A,filterWidth:R,dilationHeight:F,dilationWidth:P,outShape:L}=C.computeDilation2DInfo(n.shape,o.shape,s,a,"NHWC",i),O=y.sizeFromShape(L),G=L.length,W=y.getArrayFromDType(n.dtype,O);for(let V=0;V<d;++V)for(let q=0;q<b;++q){let Z=q*I-x.top;for(let j=0;j<T;++j){let Y=j*k-x.left;for(let se=0;se<g;++se){let ae=Number.MIN_SAFE_INTEGER;for(let oe=0;oe<A;++oe){let ge=Z+oe*F;if(ge>=0&&ge<f)for(let fe=0;fe<R;++fe){let ue=Y+fe*P;if(ue>=0&&ue<h){let ve=y.locToIndex([V,ge,ue,se],p,y.computeStrides(n.shape)),De=y.locToIndex([oe,fe,se],c,y.computeStrides(o.shape)),Fe=l[ve]+m[De];Fe>ae&&(ae=Fe)}}}let pe=y.locToIndex([V,q,j,se],G,y.computeStrides(L));W[pe]=ae}}}return{dataId:u.write(y.toTypedArray(W,n.dtype),L,n.dtype),shape:L,dtype:n.dtype}}};var F$={kernelName:eh,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:u}=e,l=t,p=y.toNestedArray(n.shape,l.data.get(n.dataId).values),m=y.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:b,padInfo:T,strideHeight:x,strideWidth:I,filterHeight:k,filterWidth:A,dilationHeight:R,dilationWidth:F,outShape:P}=C.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",u);y.assert(s.rank===P.length,()=>`Error in ${eh}, dy must have the same rank as output ${P.length}, but got ${s.rank}`);let L=y.toNestedArray(P,l.data.get(s.dataId).values),O=y.makeZerosNestedTypedArray(o.shape,o.dtype);for(let W=0;W<c;++W)for(let H=0;H<g;++H){let V=H*x-T.top;for(let q=0;q<b;++q){let Z=q*I-T.left;for(let j=0;j<h;++j){let Y=Number.MIN_SAFE_INTEGER,se=0,ae=0;for(let pe=0;pe<k;++pe){let oe=V+pe*R;if(oe>=0&&oe<d)for(let ge=0;ge<A;++ge){let fe=Z+ge*F;if(fe>=0&&fe<f){let ue=p[W][oe][fe][j]+m[pe][ge][j];ue>Y&&(Y=ue,se=pe,ae=ge)}}}O[se][ae][j]+=L[W][H][q][j]}}}return{dataId:l.write(y.toTypedArray(O,n.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var P$={kernelName:Jf,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:u}=e,l=t,p=y.toNestedArray(n.shape,l.data.get(n.dataId).values),m=y.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:b,padInfo:T,strideHeight:x,strideWidth:I,filterHeight:k,filterWidth:A,dilationHeight:R,dilationWidth:F,outShape:P}=C.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",u);y.assert(s.rank===P.length,()=>`Error in ${Jf}, dy must have the same rank as output ${P.length}, but got ${s.rank}`);let L=y.toNestedArray(P,l.data.get(s.dataId).values),O=y.makeZerosNestedTypedArray(n.shape,n.dtype);for(let W=0;W<c;++W)for(let H=0;H<g;++H){let V=H*x-T.top;for(let q=0;q<b;++q){let Z=q*I-T.left;for(let j=0;j<h;++j){let Y=Number.MIN_SAFE_INTEGER,se=V<0?0:V,ae=Z<0?0:Z;for(let pe=0;pe<k;++pe){let oe=V+pe*R;if(oe>=0&&oe<d)for(let ge=0;ge<A;++ge){let fe=Z+ge*F;if(fe>=0&&fe<f){let ue=p[W][oe][fe][j]+m[pe][ge][j];ue>Y&&(Y=ue,se=oe,ae=fe)}}}O[W][se][ae][j]+=L[W][H][q][j]}}}return{dataId:l.write(y.toTypedArray(O,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function Tu(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;te(o,"sum");let i;o.dtype==="bool"?i=Ys({inputs:{x:o},backend:e,attrs:{dtype:"int32"}}):i=jr({inputs:{x:o},backend:e});let u=i.shape.length,l=y.parseAxisParam(s,i.shape),p=C.getAxesPermutation(l,u),m=l,c=i;p!=null&&(c=Yt({inputs:{x:i},backend:e,attrs:{perm:p}}),m=C.getInnerMostAxes(m.length,u)),C.assertAxesAreInnerMostDims("sum",m,c.shape.length);let[d,f]=C.computeOutAndReduceShapes(c.shape,m),h=C.upcastType(c.dtype,"int32"),g=tf(e,d,h),b=y.sizeFromShape(f),T=e.data.get(g.dataId).values,x=e.data.get(c.dataId).values;for(let I=0;I<T.length;++I){let k=I*b,A=0;for(let R=0;R<b;++R)A+=x[k+R];T[I]=A}if(a){let I=C.expandShapeToKeepDim(g.shape,l),k=g;g=et({inputs:{x:g},backend:e,attrs:{shape:I}}),e.disposeIntermediateTensorInfo(k)}return e.disposeIntermediateTensorInfo(i),p!=null&&e.disposeIntermediateTensorInfo(c),g}var M$={kernelName:qo,backendName:"cpu",kernelFunc:Tu};function Ine(r){let{inputs:t,backend:e,attrs:n}=r,{equation:o}=n,s=t,{allDims:a,summedDims:i,idDims:u}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(a.length,u,s);let{path:l,steps:p}=C.getEinsumComputePath(i,u),m=p.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of p[h]){let{permutationIndices:b,expandDims:T}=C.getEinsumPermutation(d,u[g]),x;C.isIdentityPermutation(b)?x=s[g]:(x=Yt({inputs:{x:s[g]},backend:e,attrs:{perm:b}}),f.push(x));let I=x.shape.slice();for(let k=0;k<T.length;++k)I.splice(T[k],0,1);y.arraysEqual(x.shape,I)||(x=et({inputs:{x},backend:e,attrs:{shape:I}}),f.push(x)),c===null?c=x:(c=$l({inputs:{a:x,b:c},backend:e}),f.push(c))}h<m-1&&(l[h]>=0&&(c=Tu({inputs:{x:c},backend:e,attrs:{axis:l[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&e.disposeIntermediateTensorInfo(h);return c}var E$={kernelName:Bu,backendName:"cpu",kernelFunc:Ine};function Cne(r){let{inputs:t,backend:e}=r,{dy:n,y:o}=t;te([n,o],"eluGrad");let s=new Float32Array(y.sizeFromShape(o.shape)),a=e.data.get(o.dataId).values,i=e.data.get(n.dataId).values;for(let u=0;u<a.length;++u){let l=a[u];l>=1?s[u]=i[u]:s[u]=i[u]*(l+1)}return e.makeTensorInfo(o.shape,"float32",s)}var L$={kernelName:Fm,backendName:"cpu",kernelFunc:Cne};var kne=C.ERF_P,Sne=C.ERF_A1,vne=C.ERF_A2,Ane=C.ERF_A3,wne=C.ERF_A4,Nne=C.ERF_A5,Dne=Pe(Gi,r=>{let t=Math.sign(r),e=Math.abs(r),n=1/(1+kne*e);return t*(1-((((Nne*n+wne)*n+Ane)*n+vne)*n+Sne)*n*Math.exp(-e*e))}),_$={kernelName:Gi,backendName:"cpu",kernelFunc:Dne};function lf(r){let{inputs:t,backend:e,attrs:n}=r,{input:o}=t,{dim:s}=n,a=o.shape.length,i=o.shape.slice(),u=s;return s<0&&(y.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),et({inputs:{x:o},backend:e,attrs:{shape:i}})}var $$={kernelName:hs,backendName:"cpu",kernelFunc:lf};var Rne=ot((r,t)=>r/t),Jh=ut(yo,Rne),eg={kernelName:yo,backendName:"cpu",kernelFunc:Jh};function wx(r,t,e){let n=r.shape,o=n[0],s=n[1],a=e.data.get(r.dataId),i=a.complexTensorInfos.real,u=a.complexTensorInfos.imag,l=[o,s],p=y.sizeFromShape(l),m=y.getTypedArrayFromDType("float32",p),c=y.getTypedArrayFromDType("float32",p);for(let g=0;g<o;g++){let b=Js({inputs:{x:i},backend:e,attrs:{begin:[g,0],size:[1,s]}}),T=Js({inputs:{x:u},backend:e,attrs:{begin:[g,0],size:[1,s]}}),x=Sr({inputs:{real:b,imag:T},backend:e}),{real:I,imag:k}=Fne(x,t,e),A=C.mergeRealAndImagArrays(I,k);for(let R=0;R<s;R++){let F=C.getComplexWithIndex(A,R);m[g*s+R]=F.real,c[g*s+R]=F.imag}e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(T),e.disposeIntermediateTensorInfo(x)}let d=e.makeTensorInfo(l,"float32",m),f=e.makeTensorInfo(l,"float32",c),h=Sr({inputs:{real:d,imag:f},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),h}function Fne(r,t,e){let n=y.sizeFromShape(r.shape),o=e.data.get(r.dataId),s=e.data.get(o.complexTensorInfos.real.dataId).values,a=e.data.get(o.complexTensorInfos.imag.dataId).values;if(Pne(n)){let i=kN(s,a,n,t,e),u=[r.shape[0],r.shape[1]];if(t){let l=e.makeTensorInfo(u,"float32",i.real),p=e.makeTensorInfo(u,"float32",i.imag),m=e.makeTensorInfo([],"float32",y.createScalarValue(n,"float32")),c=jr({inputs:{x:m},backend:e}),d=eg.kernelFunc({inputs:{a:l,b:m},backend:e}),f=eg.kernelFunc({inputs:{a:p,b:c},backend:e}),h=e.data.get(d.dataId).values,g=e.data.get(f.dataId).values;return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),{real:h,imag:g}}return i}else{let i=C.mergeRealAndImagArrays(s,a),u=Mne(i,n,t);return C.splitRealAndImagArrays(u)}}function Pne(r){return(r&r-1)===0}function kN(r,t,e,n,o){if(e===1)return{real:r,imag:t};let s=C.mergeRealAndImagArrays(r,t),a=e/2,i=C.complexWithEvenIndex(s),u=i.real,l=i.imag,p=[u.length],m=o.makeTensorInfo(p,"float32",u),c=o.makeTensorInfo(p,"float32",l),d=Sr({inputs:{real:m,imag:c},backend:o}),f=C.complexWithOddIndex(s),h=f.real,g=f.imag,b=[h.length],T=o.makeTensorInfo(b,"float32",h),x=o.makeTensorInfo(b,"float32",g),I=Sr({inputs:{real:T,imag:x},backend:o}),k=kN(u,l,a,n,o),A=k.real,R=k.imag,F=[A.length],P=o.makeTensorInfo(F,"float32",A),L=o.makeTensorInfo(F,"float32",R),O=Sr({inputs:{real:P,imag:L},backend:o}),G=kN(h,g,a,n,o),W=G.real,H=G.imag,V=[W.length],q=o.makeTensorInfo(V,"float32",W),Z=o.makeTensorInfo(V,"float32",H),j=Sr({inputs:{real:q,imag:Z},backend:o}),Y=C.exponents(e,n),se=[Y.real.length],ae=o.makeTensorInfo(se,"float32",Y.real),pe=o.makeTensorInfo(se,"float32",Y.imag),oe=Sr({inputs:{real:ae,imag:pe},backend:o}),ge=$l({inputs:{a:oe,b:j},backend:o}),fe=Ni({inputs:{a:O,b:ge},backend:o}),ue=Zh({inputs:{a:O,b:ge},backend:o}),ve=Xs({inputs:{input:fe},backend:o}),De=Xs({inputs:{input:ue},backend:o}),Fe=Di({inputs:{input:fe},backend:o}),je=Di({inputs:{input:ue},backend:o}),Q=Dp({inputs:[ve,De],backend:o,attrs:{axis:0}}),bt=Dp({inputs:[Fe,je],backend:o,attrs:{axis:0}}),lt=o.data.get(Q.dataId).values,Dt=o.data.get(bt.dataId).values;return o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(I),o.disposeIntermediateTensorInfo(P),o.disposeIntermediateTensorInfo(L),o.disposeIntermediateTensorInfo(O),o.disposeIntermediateTensorInfo(q),o.disposeIntermediateTensorInfo(Z),o.disposeIntermediateTensorInfo(j),o.disposeIntermediateTensorInfo(ae),o.disposeIntermediateTensorInfo(pe),o.disposeIntermediateTensorInfo(oe),o.disposeIntermediateTensorInfo(ge),o.disposeIntermediateTensorInfo(fe),o.disposeIntermediateTensorInfo(ue),o.disposeIntermediateTensorInfo(ve),o.disposeIntermediateTensorInfo(Fe),o.disposeIntermediateTensorInfo(De),o.disposeIntermediateTensorInfo(je),o.disposeIntermediateTensorInfo(Q),o.disposeIntermediateTensorInfo(bt),{real:lt,imag:Dt}}function Mne(r,t,e){let n=new Float32Array(t*2);for(let o=0;o<t;o++){let s=0,a=0;for(let i=0;i<t;i++){let u=C.exponent(o*i,t,e),l=C.getComplexWithIndex(r,i);s+=l.real*u.real-l.imag*u.imag,a+=l.real*u.imag+l.imag*u.real}e&&(s/=t,a/=t),C.assignToTypedArray(n,s,a,o)}return n}function Ene(r){let{inputs:t,backend:e}=r,{input:n}=t,o=y.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=et({inputs:{x:n},backend:e,attrs:{shape:[a,s]}}),u=wx(i,!1,e),l=et({inputs:{x:u},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(u),l}var B$={kernelName:Pm,backendName:"cpu",kernelFunc:Ene};function tg(r){let{backend:t,attrs:e}=r,{shape:n,value:o,dtype:s}=e,a=s||y.inferDtype(o),i=y.getArrayFromDType(a,y.sizeFromShape(n));return Lne(i,o,a),t.makeTensorInfo(n,a,i)}var O$={kernelName:ci,backendName:"cpu",kernelFunc:tg};function Lne(r,t,e){r.fill(t)}var z$={kernelName:ga,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,o=e,s=y.getTypedArrayFromDType(n.dtype,y.sizeFromShape(n.shape)),[a,i,u,l]=n.shape,p=o.data.get(n.dataId).values;for(let c=0;c<a;c++){let d=c*u*i*l;for(let f=0;f<i;f++){let h=f*(u*l);for(let g=0;g<u;g++){let b=g*l;for(let T=0;T<l;T++){let x=Math.round(u-g-1),I=d+h+b+T,k=p[I];if(x>=0&&x<u){let A=x*l,R=d+h+A+T;k=p[R]}s[I]=k}}}}return{dataId:o.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var _ne=ot((r,t)=>Math.floor(r/t)),$ne=ut(Co,_ne,null,"int32"),G$={kernelName:Co,backendName:"cpu",kernelFunc:$ne};function Bne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=IN({inputs:{x:o,filter:s},backend:e,attrs:{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c}});if(a){let g=h;if(p==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){let b=et({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});h=Ni({inputs:{a:h,b},backend:e}),e.disposeIntermediateTensorInfo(b)}else h=Ni({inputs:{a:h,b:a},backend:e});e.disposeIntermediateTensorInfo(g)}if(d){let g=h;if(p==="NCHW"&&d==="prelu"&&i.shape.length===1&&i.shape[0]!==1){let b=et({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});h=Wl(e,h,d,b,f),e.disposeIntermediateTensorInfo(b)}else h=Wl(e,h,d,i,f);e.disposeIntermediateTensorInfo(g)}return h}var U$={kernelName:Ds,backendName:"cpu",kernelFunc:Bne};function One(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=CN({inputs:{x:o,filter:s},backend:e,attrs:{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c}});if(a){let g=h;h=Ni({inputs:{a:h,b:a},backend:e}),e.disposeIntermediateTensorInfo(g)}if(d){let g=h;h=Wl(e,h,d,i,f),e.disposeIntermediateTensorInfo(g)}return h}var W$={kernelName:Rs,backendName:"cpu",kernelFunc:One};function zne(r){let{inputs:t,backend:e}=r,{params:n,indices:o}=t,s=y.sizeFromShape(n.shape),a=o.shape,i=a[a.length-1],[u,l,p,m]=C.prepareAndValidate(n,o);if(l===0)return e.makeTensorInfo(u,n.dtype,[]);let c=e.data.get(o.dataId).values,d=e.bufferSync(n),f=dx(c,d,n.dtype,l,i,p,m,n.shape,s);return e.makeTensorInfo(u,n.dtype,f.values)}var K$={kernelName:ba,backendName:"cpu",kernelFunc:zne};function Gne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n;te([o,s],"gatherV2");let u=y.parseAxisParam(a,o.shape)[0],l=e.data.get(s.dataId).values,p=o.shape[u];for(let I=0;I<l.length;++I){let k=l[I];y.assert(k<=p-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${p-1}]`)}let m=i;i==null&&(m=0);let c=y.sizeFromShape(s.shape),d=C.segment_util.collectGatherOpShapeInfo(o,s,u,m),f=et({inputs:{x:o},backend:e,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),h=et({inputs:{x:s},backend:e,attrs:{shape:[d.batchSize,c/d.batchSize]}}),g=[d.batchSize,d.outerSize,c/d.batchSize,d.sliceSize],b=e.bufferSync(h),T=e.bufferSync(f),x=fx(T,b,g);return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),e.makeTensorInfo(d.outputShape,x.dtype,x.values)}var V$={kernelName:gs,backendName:"cpu",kernelFunc:Gne};function Une(r){let{inputs:t,backend:e}=r,{input:n}=t,o=y.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=et({inputs:{x:n},backend:e,attrs:{shape:[a,s]}}),u=wx(i,!0,e),l=et({inputs:{x:u},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(u),l}var H$={kernelName:Mm,backendName:"cpu",kernelFunc:Une};var Wne=Pe(Ui,r=>Number.isFinite(r)?1:0,"bool"),q$={kernelName:Ui,backendName:"cpu",kernelFunc:Wne};var Kne=Pe(Wi,r=>Math.abs(r)===1/0?1:0,"bool"),j$={kernelName:Wi,backendName:"cpu",kernelFunc:Kne};var Vne=Pe(Ta,r=>Number.isNaN(r)?1:0,"bool"),X$={kernelName:Ta,backendName:"cpu",kernelFunc:Vne};function Hne(r){let{backend:t,attrs:e}=r,{start:n,stop:o,num:s}=e,a=hx(n,o,s);return t.makeTensorInfo([a.length],"float32",a)}var Y$={kernelName:Em,backendName:"cpu",kernelFunc:Hne};var qne=Pe(Ki,r=>Math.log1p(r)),Z$={kernelName:Ki,backendName:"cpu",kernelFunc:qne};var jne=ot((r,t)=>r&&t),Xne=ut(Ca,jne,null,"bool"),Q$={kernelName:Ca,backendName:"cpu",kernelFunc:Xne};var Yne=Pe(ka,r=>r?0:1,"bool"),J$={kernelName:ka,backendName:"cpu",kernelFunc:Yne};var Zne=ot((r,t)=>r||t),Qne=ut(Vi,Zne,null,"bool"),eB={kernelName:Vi,backendName:"cpu",kernelFunc:Qne};function Jne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{depthRadius:s,bias:a,alpha:i,beta:u}=n;te(o,"LRN");let l=o.shape[3],p=l-1,m=e.data.get(o.dataId).values,c=y.sizeFromShape(o.shape),d=new Float32Array(c);function f(h){let g=h%l,b=h-g+Math.max(0,g-s),T=h-g+Math.min(g+s,p),x=0;for(;b<=T;b++){let I=m[b];x+=I*I}return x}for(let h=0;h<c;h++){let g=f(h),b=m[h]*Math.pow(a+i*g,-u);d[h]=b}return e.makeTensorInfo(o.shape,o.dtype,d)}var tB={kernelName:zu,backendName:"cpu",kernelFunc:Jne};function eoe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,y:s,dy:a}=t,{depthRadius:i,bias:u,alpha:l,beta:p}=n;te(a,"LRNGrad");let m=y.sizeFromShape(a.shape),c=a.shape[3],d=e.data.get(a.dataId).values,f=e.data.get(o.dataId).values,h=e.data.get(s.dataId).values,g=new Float32Array(m),b=m;for(let T=0;T<b;T++){let x=T%c,I=T-x+Math.max(0,x-i),k=T-x+Math.min(c,x+i+1),A=0;for(let R=I;R<k;R++)A+=Math.pow(f[R],2);A=l*A+u;for(let R=I;R<k;R++){let F=-2*l*p*f[R]*h[T]/A;T===R&&(F+=Math.pow(A,-p)),F*=d[T],g[R]+=F}}return e.makeTensorInfo(a.shape,o.dtype,g)}var rB={kernelName:Lm,backendName:"cpu",kernelFunc:eoe};function SN(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reductionIndices:s,keepDims:a}=n,i=e,u=o.shape,l=u.length,p=y.parseAxisParam(s,u),m=p,c=C.getAxesPermutation(m,l),d=i.data.get(o.dataId).values;if(c!=null){let I=new Array(l);for(let k=0;k<I.length;k++)I[k]=u[c[k]];d=of(d,u,o.dtype,c,I),m=C.getInnerMostAxes(m.length,l),u=I}te(o,"max"),C.assertAxesAreInnerMostDims("max",m,l);let[f,h]=C.computeOutAndReduceShapes(u,m),g=y.sizeFromShape(h),b=gx(d,g,f,o.dtype),T=i.write(b,f,o.dtype),x=f;return a&&(x=C.expandShapeToKeepDim(f,p)),{dataId:T,shape:x,dtype:o.dtype}}var nB={kernelName:wo,backendName:"cpu",kernelFunc:SN};function toe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;te(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;y.assert(C.eitherStridesOrDilationsAreOne(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=C.computePool2DInfo(o.shape,s,a,l,i,u),m;if(p.filterWidth===1&&p.filterHeight===1&&y.arraysEqual(p.inShape,p.outShape))m=jr({inputs:{x:o},backend:e});else{let c=e.data.get(o.dataId).values,d=y.computeStrides(o.shape),f=pf(c,o.shape,o.dtype,d,p,"max");m=e.makeTensorInfo(p.outShape,o.dtype,f.values)}return m}var oB={kernelName:Do,backendName:"cpu",kernelFunc:toe};function roe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=n;te(o,"maxPool3d");let p=C.computePool3DInfo(o.shape,s,a,1,i,u,l),m=e.data.get(o.dataId).values,c=Ax(m,o.shape,o.dtype,y.computeStrides(o.shape),p,"max");return e.makeTensorInfo(c.shape,"float32",c.values)}var sB={kernelName:Gu,backendName:"cpu",kernelFunc:roe};function noe(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=n;te([o,s],"maxPool3DGrad");let p=C.computePool3DInfo(s.shape,a,i,1,u,l),m=e.bufferSync(s),c=e$(m,p),d=p.strideDepth,f=p.strideHeight,h=p.strideWidth,g=p.dilationDepth,b=p.dilationHeight,T=p.dilationWidth,x=p.effectiveFilterDepth,I=p.effectiveFilterHeight,k=p.effectiveFilterWidth,A=x-1-p.padInfo.front,R=k-1-p.padInfo.left,F=I-1-p.padInfo.top,P=Ie(s.shape,"float32"),L=e.bufferSync(o);for(let O=0;O<p.batchSize;++O)for(let G=0;G<p.inChannels;++G)for(let W=0;W<p.inDepth;++W)for(let H=0;H<p.inHeight;++H)for(let V=0;V<p.inWidth;++V){let q=W-A,Z=H-F,j=V-R,Y=0;for(let se=0;se<x;se+=g){let ae=(q+se)/d;if(!(ae<0||ae>=p.outDepth||Math.floor(ae)!==ae))for(let pe=0;pe<I;pe+=b){let oe=(Z+pe)/f;if(!(oe<0||oe>=p.outHeight||Math.floor(oe)!==oe))for(let ge=0;ge<k;ge+=T){let fe=(j+ge)/h;if(fe<0||fe>=p.outWidth||Math.floor(fe)!==fe)continue;let ue=x*I*k-1-c.get(O,ae,oe,fe,G),ve=se*I*k+pe*k+ge,De=ue===ve?1:0;if(De===0)continue;Y+=L.get(O,ae,oe,fe,G)*De}}}P.set(Y,O,W,H,V,G)}return e.makeTensorInfo(P.shape,P.dtype,P.values)}var aB={kernelName:$m,backendName:"cpu",kernelFunc:noe};function ooe(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s,output:a}=t,i=s;te([s,a],"maxPoolGrad");let{filterSize:u,strides:l,pad:p,dimRoundingMode:m}=n,c=C.computePool2DInfo(i.shape,u,l,1,p,m),d=e.data.get(i.dataId).values,f=Ie(c.outShape,i.dtype,vx(d,i.shape,i.dtype,c).values),h=c.strideHeight,g=c.strideWidth,b=c.dilationHeight,T=c.dilationWidth,x=c.effectiveFilterHeight,I=c.effectiveFilterWidth,k=I-1-c.padInfo.left,A=x-1-c.padInfo.top,R=Ie(i.shape,"float32"),F=e.data.get(o.dataId).values,P=Ie(o.shape,"float32",F);for(let L=0;L<c.batchSize;++L)for(let O=0;O<c.inChannels;++O)for(let G=0;G<c.inHeight;++G)for(let W=0;W<c.inWidth;++W){let H=G-A,V=W-k,q=0;for(let Z=0;Z<x;Z+=b){let j=(H+Z)/h;if(!(j<0||j>=c.outHeight||Math.floor(j)!==j))for(let Y=0;Y<I;Y+=T){let se=(V+Y)/g;if(se<0||se>=c.outWidth||Math.floor(se)!==se)continue;let ae=x*I-1-f.get(L,j,se,O),pe=Z*I+Y,oe=ae===pe?1:0;if(oe===0)continue;q+=P.get(L,j,se,O)*oe}}R.set(q,L,G,W,O)}return e.makeTensorInfo(R.shape,R.dtype,R.values)}var iB={kernelName:_m,backendName:"cpu",kernelFunc:ooe};function uB(r,t,e,n,o){let s=y.computeStrides(t),a=pf(r,t,e,s,o,"max"),i=vx(r,t,e,o,!0,n);return[a.values,i.values]}var pB={kernelName:Bm,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=t,u=e;te(n,"MaxPoolWithArgmax");let l=u.data.get(n.dataId).values,p=C.computePool2DInfo(n.shape,o,s,[1,1],a),[m,c]=uB(l,n.shape,n.dtype,i,p),d=u.write(m,p.outShape,n.dtype),f=u.write(c,p.outShape,n.dtype);return[{dataId:d,shape:p.outShape,dtype:n.dtype},{dataId:f,shape:p.outShape,dtype:"int32"}]}};function soe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n,i=y.parseAxisParam(s,o.shape),l=C.computeOutAndReduceShapes(o.shape,i)[1],p=y.sizeFromShape(l),m=[],c=e.makeTensorInfo([],"float32",new Float32Array([p]));m.push(c);let d=Ys({inputs:{x:o},backend:e,attrs:{dtype:"float32"}});m.push(d);let f=Jh({inputs:{a:d,b:c},backend:e});m.push(f);let h=Tu({inputs:{x:f},backend:e,attrs:{axis:s,keepDims:a}});return m.forEach(g=>e.disposeIntermediateTensorInfo(g)),h}var lB={kernelName:Ro,backendName:"cpu",kernelFunc:soe};function aoe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;te(o,"min");let i=y.parseAxisParam(s,o.shape),u=i,l=C.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=Yt({inputs:{x:o},backend:e,attrs:{perm:l}}),u=C.getInnerMostAxes(u.length,o.shape.length)),C.assertAxesAreInnerMostDims("min",u,p.shape.length);let[m,c]=C.computeOutAndReduceShapes(p.shape,u),d=y.sizeFromShape(c),f=y.makeZerosTypedArray(y.sizeFromShape(m),p.dtype),h=e.data.get(p.dataId).values;for(let b=0;b<f.length;++b){let T=b*d,x=h[T];for(let I=0;I<d;++I){let k=h[T+I];(Number.isNaN(k)||k<x)&&(x=k)}f[b]=x}l!=null&&e.disposeIntermediateTensorInfo(p);let g=e.makeTensorInfo(m,p.dtype,f);if(a){let b=C.expandShapeToKeepDim(m,i),T=et({inputs:{x:g},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(g),T}return g}var mB={kernelName:Fo,backendName:"cpu",kernelFunc:aoe};function ioe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,mode:a}=n;te(o,"mirrorPad");let i=s.map((x,I)=>x[0]+o.shape[I]+x[1]),u=s.map(x=>x[0]),l=s.map((x,I)=>x[0]+o.shape[I]),p=a==="reflect"?0:1,m=e.data.get(o.dataId).values,c=o.shape.length,d=y.computeStrides(o.shape),f=y.sizeFromShape(i),h=i.length,g=y.computeStrides(i),b=y.getTypedArrayFromDType(o.dtype,f);for(let x=0;x<f;x++){let I=y.indexToLoc(x,h,g);for(let A=0;A<h;A++)I[A]<u[A]?I[A]=u[A]*2-I[A]-p:I[A]>=l[A]&&(I[A]=(l[A]-1)*2-I[A]+p);I=I.map((A,R)=>A-u[R]);let k=y.locToIndex(I,c,d);b[x]=m[k]}return{dataId:e.write(b,i,o.dtype),shape:i,dtype:o.dtype}}var cB={kernelName:Mo,backendName:"cpu",kernelFunc:ioe};var uoe=ot((r,t)=>{let e=r%t;return r<0&&t<0||r>=0&&t>=0?e:(e+t)%t}),poe=ut(Hi,uoe),dB={kernelName:Hi,backendName:"cpu",kernelFunc:poe};var hB=hm(xh());function vN(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{dim:s}=n,a=o.shape.length,i=s;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);let u=y.parseAxisParam([i],o.shape),l=SN({inputs:{x:o},backend:e,attrs:{reductionIndices:u,keepDims:!1}}),p=C.expandShapeToKeepDim(l.shape,u),m=et({inputs:{x:l},backend:e,attrs:{shape:p}}),c=Zh({inputs:{a:o,b:m},backend:e}),d=Zw({inputs:{x:c},backend:e}),f=Tu({inputs:{x:d},backend:e,attrs:{axis:u,keepDims:!1}}),h=et({inputs:{x:f},backend:e,attrs:{shape:p}}),g=Jh({inputs:{a:d,b:h},backend:e});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),g}var fB={kernelName:jo,backendName:"cpu",kernelFunc:vN};function loe(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{numSamples:s,seed:a,normalized:i}=n;te(o,"multinomial");let u=i?o:vN({inputs:{logits:o},backend:e,attrs:{dim:-1}}),l=u.shape[0],p=u.shape[1],m=e.data.get(u.dataId).values,c=[l,s],d=y.makeZerosTypedArray(y.sizeFromShape(c),"int32");for(let f=0;f<l;++f){let h=f*p,g=new Float32Array(p-1);g[0]=m[h];for(let x=1;x<g.length;++x)g[x]=g[x-1]+m[h+x];let b=hB.alea(a.toString()),T=f*s;for(let x=0;x<s;++x){let I=b();d[T+x]=g.length;for(let k=0;k<g.length;k++)if(I<g[k]){d[T+x]=k;break}}}return i||e.disposeIntermediateTensorInfo(u),e.makeTensorInfo(c,"int32",d)}var gB={kernelName:Om,backendName:"cpu",kernelFunc:loe};var moe=xr.nonMaxSuppressionV3Impl;function coe(r){let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=n;te(o,"NonMaxSuppression");let l=e.data.get(o.dataId).values,p=e.data.get(s.dataId).values,{selectedIndices:m}=moe(l,p,a,i,u);return e.makeTensorInfo([m.length],"int32",new Int32Array(m))}var bB={kernelName:va,backendName:"cpu",kernelFunc:coe};var doe=xr.nonMaxSuppressionV4Impl;function foe(r){let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=n;te(o,"NonMaxSuppressionPadded");let p=e.data.get(o.dataId).values,m=e.data.get(s.dataId).values,{selectedIndices:c,validOutputs:d}=doe(p,m,a,i,u,l);return[e.makeTensorInfo([c.length],"int32",new Int32Array(c)),e.makeTensorInfo([],"int32",new Int32Array([d]))]}var yB={kernelName:qi,backendName:"cpu",kernelFunc:foe};var hoe=xr.nonMaxSuppressionV5Impl;function goe(r){let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=n;te(o,"NonMaxSuppressionWithScore");let p=e.data.get(o.dataId).values,m=e.data.get(s.dataId).values,c=a,d=i,f=u,h=l,{selectedIndices:g,selectedScores:b}=hoe(p,m,c,d,f,h);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var TB={kernelName:Aa,backendName:"cpu",kernelFunc:goe};function boe(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o}=t,{dtype:s,depth:a,onValue:i,offValue:u}=n;te(o,"oneHot");let l=y.sizeFromShape(o.shape),p=new Float32Array(l*a);p.fill(u);let m=e.data.get(o.dataId).values;for(let c=0;c<l;++c)m[c]>=0&&m[c]<a&&(p[c*a+m[c]]=i);return e.makeTensorInfo([...o.shape,a],s,p)}var xB={kernelName:wa,backendName:"cpu",kernelFunc:boe};function rg(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Xs({inputs:{input:n},backend:e}),s=rg({inputs:{x:o},backend:e}),a=Di({inputs:{input:n},backend:e}),i=rg({inputs:{x:a},backend:e}),u=Sr({inputs:{real:s,imag:i},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),u}else return tg({backend:e,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var IB={kernelName:As,backendName:"cpu",kernelFunc:rg};function CB(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Xs({inputs:{input:n},backend:e}),s=CB({inputs:{x:o},backend:e}),a=Di({inputs:{input:n},backend:e}),i=rg({inputs:{x:a},backend:e}),u=Sr({inputs:{real:s,imag:i},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),u}else return tg({backend:e,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var kB={kernelName:ys,backendName:"cpu",kernelFunc:CB};function AN(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n;if(t.length===1)return lf({inputs:{input:t[0]},backend:e,attrs:{dim:o}});let s=t[0].shape,a=t[0].dtype;t.forEach(p=>{y.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=t.map(p=>{let m=lf({inputs:{input:p},backend:e,attrs:{dim:o}});return i.push(m),m}),l=Dp({inputs:u,backend:e,attrs:{axis:o}});return i.forEach(p=>e.disposeIntermediateTensorInfo(p)),l}var SB={kernelName:Ts,backendName:"cpu",kernelFunc:AN};function yoe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,constantValue:a}=n;te(o,"pad");let i=s.map((T,x)=>T[0]+o.shape[x]+T[1]),u=s.map(T=>T[0]),l=e.data.get(o.dataId).values,p=y.sizeFromShape(o.shape),m=o.shape.length,c=y.computeStrides(o.shape),d=y.sizeFromShape(i),f=i.length,h=y.computeStrides(i),g=y.getTypedArrayFromDType(o.dtype,d);a!==0&&g.fill(a);for(let T=0;T<p;T++){let I=y.indexToLoc(T,m,c).map((A,R)=>A+u[R]),k=y.locToIndex(I,f,h);g[k]=l[T]}return{dataId:e.write(g,i,o.dtype),shape:i,dtype:o.dtype}}var Nx={kernelName:Lo,backendName:"cpu",kernelFunc:yoe};var Toe=ot((r,t)=>Math.pow(r,t)),xoe=ut(_o,Toe),vB={kernelName:_o,backendName:"cpu",kernelFunc:xoe};function Ioe(r){let{inputs:t,backend:e,attrs:n}=r,{paramsNestedSplits:o,paramsDenseValues:s,indices:a}=t,{outputRaggedRank:i}=n,u=o.map(b=>e.data.get(b.dataId).values),l=o.map(b=>b.shape),p=e.data.get(s.dataId).values,m=e.data.get(a.dataId).values,[c,d,f]=bx(u,l,p,s.shape,s.dtype,m,a.shape,i),h=c.map(b=>e.makeTensorInfo([b.length],"int32",b)),g=e.makeTensorInfo(f,s.dtype,d);return h.concat([g])}var AB={kernelName:zm,backendName:"cpu",kernelFunc:Ioe};function Coe(r){let{inputs:t,backend:e,attrs:n}=r,{shape:o,values:s,defaultValue:a,rowPartitionTensors:i}=t,{rowPartitionTypes:u}=n,l=e.data.get(o.dataId).values,p=e.data.get(s.dataId).values,m=e.data.get(a.dataId).values,c=i.map(g=>e.data.get(g.dataId).values),d=i.map(g=>g.shape),[f,h]=yx(l,o.shape,p,s.shape,s.dtype,m,a.shape,c,d,u);return e.makeTensorInfo(f,s.dtype,h)}var wB={kernelName:Gm,backendName:"cpu",kernelFunc:Coe};function koe(r){let{backend:t,attrs:e}=r,{start:n,stop:o,dtype:s,step:a}=e,i=Bl(n,o,a,s);return t.makeTensorInfo([i.length],s,i)}var NB={kernelName:di,backendName:"cpu",kernelFunc:koe};var Soe=Pe(Na,r=>1/r),DB={kernelName:Na,backendName:"cpu",kernelFunc:Soe};function voe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n;te(o,"resizeBilinear");let u=y.computeStrides(o.shape),[l,p]=i,[m,c,d,f]=o.shape,h=e.data.get(o.dataId).values,g=new Float32Array(y.sizeFromShape([m,l,p,f])),b=[s&&l>1?c-1:c,s&&p>1?d-1:d],T=[s&&l>1?l-1:l,s&&p>1?p-1:p],x=0,I=b[0]/T[0],k=b[1]/T[1];for(let A=0;A<m;A++)for(let R=0;R<l;R++){let F;a?F=I*(R+.5)-.5:F=I*R;let P=Math.max(0,Math.floor(F)),L=F-P,O=Math.min(c-1,Math.ceil(F)),G=A*u[0]+P*u[1],W=A*u[0]+O*u[1];for(let H=0;H<p;H++){let V;a?V=k*(H+.5)-.5:V=k*H;let q=Math.max(0,Math.floor(V)),Z=V-q,j=Math.min(d-1,Math.ceil(V)),Y=G+q*u[2],se=W+q*u[2],ae=G+j*u[2],pe=W+j*u[2];for(let oe=0;oe<f;oe++){let ge=h[Y+oe],fe=h[se+oe],ue=h[ae+oe],ve=h[pe+oe],De=ge+(ue-ge)*Z,Fe=fe+(ve-fe)*Z,je=De+(Fe-De)*L;g[x++]=je}}}return e.makeTensorInfo([m,l,p,f],"float32",g)}var RB={kernelName:Go,backendName:"cpu",kernelFunc:voe};function Aoe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:a}=n;te([s,o],"resizeBilinearGrad");let i=y.computeStrides(o.shape),[u,l,p,m]=o.shape,[,c,d]=s.shape,f=new Float32Array(u*l*p*m),h=[a&&c>1?l-1:l,a&&d>1?p-1:p],g=[a&&c>1?c-1:c,a&&d>1?d-1:d],b=h[0]/g[0],T=h[1]/g[1],x=e.data.get(s.dataId).values,I=0;for(let k=0;k<u;k++){let A=k*i[0];for(let R=0;R<c;R++){let F=R*b,P=Math.floor(F),L=Math.min(Math.ceil(F),l-1),O=A+P*i[1],G=A+L*i[1],W=F-P,H=1-W;for(let V=0;V<d;V++){let q=V*T,Z=Math.floor(q),j=Math.min(Math.ceil(q),p-1),Y=q-Z,se=1-Y,ae=O+Z*i[2],pe=O+j*i[2],oe=G+Z*i[2],ge=G+j*i[2],fe=H*se,ue=H*Y,ve=W*se,De=W*Y;for(let Fe=0;Fe<m;Fe++){let je=x[I++];f[ae+Fe]+=je*fe,f[pe+Fe]+=je*ue,f[oe+Fe]+=je*ve,f[ge+Fe]+=je*De}}}}return e.makeTensorInfo([u,p,l,m],"float32",f)}var FB={kernelName:Wm,backendName:"cpu",kernelFunc:Aoe};function woe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n;te(o,"resizeNearestNeighbor");let u=y.computeStrides(o.shape),[l,p]=i,[m,c,d,f]=o.shape,h=e.data.get(o.dataId).values,g=new Float32Array(m*l*p*f),b=[s&&l>1?c-1:c,s&&p>1?d-1:d],T=[s&&l>1?l-1:l,s&&p>1?p-1:p],x=b[0]/T[0],I=b[1]/T[1],k=0;for(let A=0;A<m;A++){let R=A*u[0];for(let F=0;F<l;F++){let P=a?x*(F+.5):x*F,L=Math.min(c-1,s?Math.round(P):Math.floor(P));a&&(L=Math.max(0,L));let O=R+L*u[1];for(let G=0;G<p;G++){let W=a?I*(G+.5):I*G,H=Math.min(d-1,s?Math.round(W):Math.floor(W));a&&(H=Math.max(0,H));let V=O+H*u[2];for(let q=0;q<f;q++){let Z=h[V+q];g[k++]=Z}}}}return e.makeTensorInfo([m,l,p,f],o.dtype,g)}var PB={kernelName:zo,backendName:"cpu",kernelFunc:woe};function Noe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:a}=n;te([s,o],"resizeNearestNeighborGrad");let i=y.computeStrides(o.shape),u=y.computeStrides(s.shape),[l,p,m,c]=o.shape,[,d,f]=s.shape,h=new Float32Array(l*p*m*c),g=e.data.get(s.dataId).values,b=[a&&d>1?p-1:p,a&&f>1?m-1:m],T=[a&&d>1?d-1:d,a&&f>1?f-1:f],x=b[0]/T[0],I=b[1]/T[1],k=1/x,A=1/I,R=Math.ceil(k)*2+2,F=Math.ceil(A)*2+2;for(let P=0;P<l;P++){let L=P*i[0];for(let O=0;O<p;O++){let G=L+O*i[1],W=Math.floor(O*k),H=Math.floor(W-R/2);for(let V=0;V<m;V++){let q=G+V*i[2],Z=Math.floor(V*A),j=Math.floor(Z-F/2);for(let Y=0;Y<c;Y++){let se=0;for(let ae=0;ae<R;ae++){let pe=ae+H;if(pe<0||pe>=d)continue;let oe=L+pe*u[1],ge=pe*x,fe=Math.min(p-1,a?Math.round(ge):Math.floor(ge));if(O===fe)for(let ue=0;ue<F;ue++){let ve=ue+j;if(ve<0||ve>=f)continue;let De=oe+ve*u[2],Fe=ve*I,je=Math.min(m-1,a?Math.round(Fe):Math.floor(Fe));V===je&&(se+=g[De+Y])}}h[q+Y]=se}}}}return e.makeTensorInfo(o.shape,o.dtype,h)}var MB={kernelName:Um,backendName:"cpu",kernelFunc:Noe};function Doe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dims:s}=n;te(o,"reverse");let a=o.shape.length,i=y.parseAxisParam(s,o.shape);if(a===0)return jr({inputs:{x:o},backend:e});let u=new ht(o.shape,o.dtype),l=e.bufferSync(o);for(let p=0;p<u.size;p++){let m=u.indexToLoc(p),c=m.slice();i.forEach(d=>c[d]=o.shape[d]-1-c[d]),u.set(l.get(...c),...m)}return e.makeTensorInfo(u.shape,u.dtype,u.values)}var EB={kernelName:Da,backendName:"cpu",kernelFunc:Doe};var LB={kernelName:$a,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=t,i=e,u=y.getTypedArrayFromDType(n.dtype,y.sizeFromShape(n.shape)),[l,p,m,c]=n.shape,[d,f]=C.getImageCenter(a,p,m),h=255,g=Math.sin(o),b=Math.cos(o),T=i.data.get(n.dataId).values;for(let I=0;I<l;I++){let k=I*m*p*c;for(let A=0;A<p;A++){let R=A*(m*c);for(let F=0;F<m;F++){let P=F*c;for(let L=0;L<c;L++){let O=[l,A,F,L],G=O[2],W=O[1],H=(G-d)*b-(W-f)*g,V=(G-d)*g+(W-f)*b;H=Math.round(H+d),V=Math.round(V+f);let q=s;if(typeof s!="number"&&(L===3?q=h:q=s[L]),H>=0&&H<m&&V>=0&&V<p){let j=V*(m*c),Y=H*c,se=k+j+Y+L;q=T[se]}let Z=k+R+P+L;u[Z]=q}}}}return{dataId:i.write(u,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var Roe=Pe(Ra,r=>{let t=Math.floor(r);return r-t<.5?Math.floor(r):r-t>.5?Math.ceil(r):t%2===0?t:t+1}),_B={kernelName:Ra,backendName:"cpu",kernelFunc:Roe};function Foe(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,{sliceRank:i,numUpdates:u,sliceSize:l,strides:p,outputSize:m}=C.calculateShapes(s,o,a),c=!0,d=e.bufferSync(o),f=e.bufferSync(s),h=yu(d,f,a,m,l,u,i,p,0,c);return e.makeTensorInfo(a,h.dtype,h.values)}var $B={kernelName:Fa,backendName:"cpu",kernelFunc:Foe};function Poe(r,t){let e=0,n=r.length,o=0;for(;e<n;)o=Math.floor((e+n)/2),r[o]<t?e=o+1:n=o;return n}function Moe(r,t){let e=0,n=r.length,o=0;for(;e<n;)o=Math.floor((e+n)/2),r[o]<=t?e=o+1:n=o;return n}function BB(r,t,e,n,o,s){let a=y.getArrayFromDType("int32",e*o);for(let i=0;i<e;++i){let u=r.slice(i*n,(i+1)*n),l=i*o;for(let p=0;p<o;++p)a[l+p]=s==="left"?Poe(u,t[p+l]):Moe(u,t[p+l])}return a}function Eoe(r){let{inputs:t,backend:e,attrs:n}=r,{sortedSequence:o,values:s}=t,{side:a}=n,i=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,l=BB(i,u,o.shape[0],o.shape[1],s.shape[1],a);return e.makeTensorInfo(s.shape,"int32",l)}var OB={kernelName:Km,backendName:"cpu",kernelFunc:Eoe};function Loe(r){let{inputs:t,backend:e}=r,{condition:n,t:o,e:s}=t;te([n,o,s],"select");let a=n.shape.length,i=e.data.get(n.dataId).values,u=e.data.get(o.dataId).values,l=e.data.get(s.dataId).values,p=Et(o.dtype,s.dtype),m=y.makeZerosTypedArray(y.sizeFromShape(o.shape),p),c=0,d=a===0||a>1||o.shape.length===1?1:y.sizeFromShape(o.shape.slice(1));for(let f=0;f<i.length;f++)for(let h=0;h<d;h++)i[f]===1?m[c++]=u[f]:m[c++]=l[f];return e.makeTensorInfo(o.shape,p,m)}var zB={kernelName:Is,backendName:"cpu",kernelFunc:Loe};var _oe=C.SELU_SCALEALPHA,$oe=C.SELU_SCALE,Boe=Pe(ji,r=>r>=0?$oe*r:_oe*(Math.exp(r)-1)),GB={kernelName:ji,backendName:"cpu",kernelFunc:Boe};var Ooe=Pe(Xi,r=>r<0?-1:r>0?1:0),UB={kernelName:Xi,backendName:"cpu",kernelFunc:Ooe};var zoe=Pe(Ko,r=>Math.sin(r)),WB={kernelName:Ko,backendName:"cpu",kernelFunc:zoe};var Goe=Pe(Pa,r=>Math.sinh(r)),KB={kernelName:Pa,backendName:"cpu",kernelFunc:Goe};var Uoe=11920928955078125e-23,VB=Math.log(Uoe)+2,Woe=Pe(Yi,r=>{let t=r>-VB,e=r<VB,n=Math.exp(r),o;return e?o=n:t?o=r:o=Math.log(1+n),o}),HB={kernelName:Yi,backendName:"cpu",kernelFunc:Woe};function Koe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,paddings:a}=n;te([o],"spaceToBatchND");let i=y.sizeFromShape(s),u=[[0,0]];u.push(...a);for(let A=1+s.length;A<o.shape.length;++A)u.push([0,0]);let l=Nx.kernelFunc({inputs:{x:o},backend:e,attrs:{paddings:u,constantValue:0}}),p=C.getReshaped(l.shape,s,i,!1),m=C.getPermuted(p.length,s.length,!1),c=C.getReshapedPermuted(l.shape,s,i,!1),h=et({inputs:{x:l},backend:e,attrs:{shape:p}}),T=Yt({inputs:{x:h},backend:e,attrs:{perm:m}}),k=et({inputs:{x:T},backend:e,attrs:{shape:c}});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(T),k}var qB={kernelName:ks,backendName:"cpu",kernelFunc:Koe};function Voe(r){let{inputs:t,backend:e}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=e.data.get(n.dataId).values,u=e.data.get(o.dataId).values,l=e.data.get(s.dataId).values,p=e.data.get(a.dataId).values[0],[m,c,d,f,h]=Tx(i,n.shape,n.dtype,u,o.dtype,l,p);return[e.makeTensorInfo(c,n.dtype,m),e.makeTensorInfo([c[0]],o.dtype,d),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),e.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var jB={kernelName:Wu,backendName:"cpu",kernelFunc:Voe};function Hoe(r){let{inputs:t,backend:e}=r,{inputIndices:n,inputShape:o,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(e.data.get(o.dataId).values),i=e.data.get(n.dataId).values,u=Array.from(e.data.get(s.dataId).values),[l,p,m]=xx(i,n.shape,n.dtype,a,u);return[e.makeTensorInfo(p,n.dtype,l),e.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var XB={kernelName:Zi,backendName:"cpu",kernelFunc:Hoe};function qoe(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let a=e.data.get(n.dataId).values,i=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,[l,p]=af(a,n.shape,n.dtype,i,u,!0);return e.makeTensorInfo(p,n.dtype,l)}var YB={kernelName:Ku,backendName:"cpu",kernelFunc:qoe};function joe(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let a=e.data.get(n.dataId).values,i=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,[l,p]=af(a,n.shape,n.dtype,i,u);return e.makeTensorInfo(p,n.dtype,l)}var ZB={kernelName:Vu,backendName:"cpu",kernelFunc:joe};function Xoe(r){let{inputs:t,backend:e,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=t,{outputShape:i}=n,{sliceRank:u,numUpdates:l,sliceSize:p,strides:m,outputSize:c}=C.calculateShapes(s,o,i),d=!1,f=e.bufferSync(o),h;switch(s.dtype){case"bool":{let g=e.bufferSync(s),b=Boolean(e.data.get(a.dataId).values[0]);h=yu(f,g,i,c,p,l,u,m,b,d);break}case"float32":{let g=e.bufferSync(s),b=e.data.get(a.dataId).values[0];h=yu(f,g,i,c,p,l,u,m,b,d);break}case"int32":{let g=e.bufferSync(s),b=e.data.get(a.dataId).values[0];h=yu(f,g,i,c,p,l,u,m,b,d);break}case"string":{let g=e.bufferSync(s),b=y.decodeString(e.data.get(a.dataId).values[0]);h=yu(f,g,i,c,p,l,u,m,b,d);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return e.makeTensorInfo(i,h.dtype,h.values)}var QB={kernelName:Hu,backendName:"cpu",kernelFunc:Xoe};function Yoe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],u=C.prepareSplitSize(o,s,i),l=new Array(o.shape.length).fill(0),p=o.shape.slice();return u.map(m=>{let c=[...p];c[i]=m;let d=Js({inputs:{x:o},backend:e,attrs:{begin:l,size:c}});return l[i]+=m,d})}var JB={kernelName:Ss,backendName:"cpu",kernelFunc:Yoe};var eO={kernelName:fi,backendName:"cpu",kernelFunc:({inputs:r,backend:t})=>{let{x:e}=r,n=t;te(e,"square");let o=n.data.get(e.dataId).values,s=new Float32Array(o.length);for(let i=0;i<o.length;++i){let u=o[i];s[i]=u*u}return{dataId:n.write(s,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};var Zoe=Pe(ws,(r,t)=>{let e=t;return isNaN(r)?NaN:r>0?1:e.alpha}),tO={kernelName:ws,backendName:"cpu",kernelFunc:Zoe};function Qoe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:m,shrinkAxisMask:c}=n;te(o,"stridedSlice");let{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:T,end:x,strides:I}=xt.sliceInfo(o.shape,s,a,i,u,l,p,m,c),k;if(h)k=et({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let A=xt.computeOutShape(T,x,I),R=Js({inputs:{x:o},backend:e,attrs:{begin:T,size:A}});k=et({inputs:{x:R},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(R)}else{let A=e.bufferSync(o),R=Ix(d,A,I,T);k=e.makeTensorInfo(f,R.dtype,R.values)}return k}var rO={kernelName:Ma,backendName:"cpu",kernelFunc:Qoe};function Joe(r){let{inputs:t,backend:e,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:m}=t,c=e.data.get(p.dataId).values,d=e.data.get(m.dataId).values,[f,h]=zl(c,d,o,s,a,i,u,l);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(m.shape,"int32",h)]}var nO={kernelName:hi,backendName:"cpu",kernelFunc:Joe};function ese(r){let{inputs:t,backend:e,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=e.data.get(s.dataId).values,u=e.data.get(a.dataId).values[0],[l,p,m]=Gl(i,u,o),c=p.length;return[e.makeTensorInfo([c,2],"int32",l),e.makeTensorInfo([c],"string",p),e.makeTensorInfo([2],"int32",new Int32Array(m))]}var oO={kernelName:qu,backendName:"cpu",kernelFunc:ese};function tse(r){let{inputs:t,backend:e,attrs:n}=r,{numBuckets:o}=n,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=e.data.get(s.dataId).values,i=Ul(a,o);return e.makeTensorInfo(s.shape,"int32",i)}var sO={kernelName:ju,backendName:"cpu",kernelFunc:tse};var rse=Pe(Ea,r=>Math.tan(r)),aO={kernelName:Ea,backendName:"cpu",kernelFunc:rse};var nse=Pe(Zo,r=>Math.tanh(r)),iO={kernelName:Zo,backendName:"cpu",kernelFunc:nse};function ose(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reps:s}=n;te(o,"tile");let a=Cx(e.bufferSync(o),s);return e.makeTensorInfo(a.shape,a.dtype,a.values)}var uO={kernelName:Dn,backendName:"cpu",kernelFunc:ose};function sse(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{k:s,sorted:a}=n;te(o,"topk");let i=e.data.get(o.dataId).values,[u,l]=kx(i,o.shape,o.dtype,s,a);return[e.makeTensorInfo(u.shape,u.dtype,u.values),e.makeTensorInfo(l.shape,l.dtype,l.values)]}var pO={kernelName:La,backendName:"cpu",kernelFunc:sse};function ase(r){let{inputs:t,attrs:e,backend:n}=r,{image:o,transforms:s}=t,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=e,[p,m,c,d]=o.shape,[f,h]=l??[m,c],g=[p,f,h,d],b=y.computeStrides(o.shape),T=b[0],x=b[1],I=b[2],k=y.computeStrides(g),A=k[0],R=k[1],F=k[2],P=y.getTypedArrayFromDType(o.dtype,y.sizeFromShape(g));P.fill(u);let L=n.data.get(o.dataId).values,O=n.data.get(s.dataId).values;for(let W=0;W<p;++W){let H=s.shape[0]===1?O:O.subarray(W*8,W*8+8);for(let V=0;V<f;++V)for(let q=0;q<h;++q)for(let Z=0;Z<d;++Z){let j,Y=H[6]*q+H[7]*V+1;if(Y===0)continue;let se=(H[0]*q+H[1]*V+H[2])/Y,ae=(H[3]*q+H[4]*V+H[5])/Y,pe=lO(se,c,i),oe=lO(ae,m,i);switch(a){case"nearest":j=mse(L,m,c,T,x,I,W,oe,pe,Z,u);break;case"bilinear":j=cse(L,m,c,T,x,I,W,oe,pe,Z,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}let ge=W*A+V*R+q*F+Z;P[ge]=j}return n.makeTensorInfo(g,o.dtype,P)}return{dataId:n.write(P,g,o.dtype),shape:o.shape,dtype:o.dtype}}var mO={kernelName:_a,backendName:"cpu",kernelFunc:ase};function lO(r,t,e){switch(e){case"reflect":return ise(r,t);case"wrap":return use(r,t);case"nearest":return lse(r,t);case"constant":default:return pse(r,t)}}function ise(r,t){let e=r;if(e<0)if(t<=1)e=0;else{let n=2*t;e<n&&(e=n*Math.trunc(-e/n)+e),e=e<-t?e+n:-e-1}else if(e>t-1)if(t<=1)e=0;else{let n=2*t;e-=n*Math.trunc(e/n),e>=t&&(e=n-e-1)}return y.clamp(0,e,t-1)}function use(r,t){let e=r;if(e<0)if(t<=1)e=0;else{let n=t-1;e+=t*(Math.trunc(-e/n)+1)}else if(e>t-1)if(t<=1)e=0;else{let n=t-1;e-=t*Math.trunc(e/n)}return y.clamp(0,e,t-1)}function pse(r,t){return r}function lse(r,t){return y.clamp(0,r,t-1)}function ng(r,t,e,n,o,s,a,i,u,l,p){let m=a*n+i*o+u*s+l;return 0<=i&&i<t&&0<=u&&u<e?r[m]:p}function mse(r,t,e,n,o,s,a,i,u,l,p){let m=Math.round(i),c=Math.round(u);return ng(r,t,e,n,o,s,a,m,c,l,p)}function cse(r,t,e,n,o,s,a,i,u,l,p){let m=Math.floor(i),c=Math.floor(u),d=m+1,f=c+1,h=(f-u)*ng(r,t,e,n,o,s,a,m,c,l,p)+(u-c)*ng(r,t,e,n,o,s,a,m,f,l,p),g=(f-u)*ng(r,t,e,n,o,s,a,d,c,l,p)+(u-c)*ng(r,t,e,n,o,s,a,d,f,l,p);return(d-i)*h+(i-m)*g}function dse(r){let{inputs:t,attrs:e,backend:n}=r,{axis:o}=e,{x:s}=t;te(s,"unique");let a=n.data.get(s.dataId).values,{outputValues:i,outputShape:u,indices:l}=Sx(a,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,i),n.makeTensorInfo([l.length],"int32",l)]}var cO={kernelName:Vm,backendName:"cpu",kernelFunc:dse};function fse(r){let{inputs:t,backend:e,attrs:n}=r,{value:o}=t,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape.length,i=o.shape[s],u=new Array(a-1),l=0;for(let d=0;d<a;d++)d!==s&&(u[l++]=o.shape[d]);let p=new Array(a).fill(0),m=o.shape.slice();m[s]=1;let c=new Array(i);for(let d=0;d<c.length;d++){p[s]=d;let f=Js({inputs:{x:o},backend:e,attrs:{begin:p,size:m}});c[d]=et({inputs:{x:f},backend:e,attrs:{shape:u}}),e.disposeIntermediateTensorInfo(f)}return c}var dO={kernelName:vs,backendName:"cpu",kernelFunc:fse};function hse(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,segmentIds:s}=t,{numSegments:a}=n;te(o,"unsortedSegmentSum");let i=o.shape.length,u=s.shape.length,l=[],p=[],m=i-u,c=s;for(let f=0;f<m;++f){let h=lf({inputs:{input:c},backend:e,attrs:{dim:f+1}});c=h,p.push(h)}for(let f=0;f<a;++f){let h=y.createScalarValue(f,"int32"),g=e.makeTensorInfo([],"int32",h),b=Xw({inputs:{a:g,b:c},backend:e}),T=Ys({inputs:{x:b},backend:e,attrs:{dtype:"float32"}}),x=$l({inputs:{a:T,b:o},backend:e}),I=Tu({inputs:{x},backend:e,attrs:{axis:0,keepDims:!1}});l.push(I),p.push(g),p.push(b),p.push(T),p.push(x),p.push(I)}let d=AN({inputs:l,backend:e,attrs:{axis:0}});return p.forEach(f=>e.disposeIntermediateTensorInfo(f)),d}var fO={kernelName:Xu,backendName:"cpu",kernelFunc:hse};var gse=[G_,JL,U_,W_,o_,K_,V_,H_,q_,j_,X_,Y_,Z_,Q_,J_,t$,r$,n$,o$,z_,s$,a$,i$,u$,n_,s_,p$,e_,l$,c$,d$,f$,h$,g$,b$,y$,T$,x$,I$,C$,k$,S$,v$,A$,w$,N$,D$,R$,F$,P$,E$,E_,L$,a_,_$,i_,$$,u_,B$,O$,z$,p_,G$,U$,W$,K$,V$,l_,m_,t_,H$,m$,q$,j$,X$,L_,c_,d_,Y$,f_,Z$,Q$,J$,eB,tB,rB,nB,h_,oB,sB,aB,iB,pB,lB,mB,g_,cB,dB,gB,b_,y_,bB,yB,TB,T_,xB,kB,SB,Nx,vB,__,I_,AB,wB,NB,r_,eg,DB,$_,B_,O_,RB,FB,PB,MB,EB,LB,_B,v_,$B,OB,zB,GB,w_,UB,WB,KB,N_,fB,HB,qB,jB,XB,YB,ZB,QB,JB,R_,eO,F_,tO,rO,nO,oO,sO,P_,M$,aO,iO,uO,pO,mO,x_,cO,dO,fO,IB];for(let r of gse)Qi(r);var df={};He(df,{assertNotComplex:()=>ei,bindCanvasToFramebuffer:()=>vse,bindColorTextureToFramebuffer:()=>ig,bindTextureToProgramUniformSampler:()=>UN,bindTextureUnit:()=>yO,bindVertexBufferToProgramAttribute:()=>Ex,callAndCheck:()=>Ce,canBeRepresented:()=>RN,createFragmentShader:()=>PN,createFramebuffer:()=>ON,createProgram:()=>MN,createStaticIndexBuffer:()=>_N,createStaticVertexBuffer:()=>LN,createTexture:()=>$N,createVertexShader:()=>FN,getBatchDim:()=>Iu,getExtensionOrThrow:()=>mf,getFramebufferErrorMessage:()=>TO,getMaxTexturesInShader:()=>VN,getNumChannels:()=>kse,getProgramUniformLocation:()=>GN,getProgramUniformLocationOrThrow:()=>zN,getRowsCols:()=>Cu,getShapeAs3D:()=>ug,getTextureShapeFromLogicalShape:()=>WN,getWebGLDisjointQueryTimerVersion:()=>HN,getWebGLErrorMessage:()=>bO,getWebGLMaxTextureSize:()=>KN,hasExtension:()=>Jn,isCapableOfRenderingToFloatTexture:()=>qN,isDownloadFloatTextureEnabled:()=>jN,isReshapeFree:()=>Rp,isWebGLFenceEnabled:()=>XN,isWebGLVersionEnabled:()=>_x,linkProgram:()=>EN,logShaderSourceAndInfoLog:()=>Mx,resetMaxTextureSize:()=>Ase,resetMaxTexturesInShader:()=>wse,unbindColorTextureFromFramebuffer:()=>Lx,unbindTextureUnit:()=>Sse,validateFramebuffer:()=>cf,validateProgram:()=>ag,validateTextureSize:()=>BN});var Kl={},Dx={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function wN(r,t){Kl[r]=t}function Qn(r,t){if(!(r in Kl)||t!=null){let n=yse(r,t);if(n!==null)Kl[r]=n;else return console.log("Could not get context for WebGL version",r),null}let e=Kl[r];return e==null||e.isContextLost()?(delete Kl[r],Qn(r)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Kl[r])}function bse(r){if(typeof OffscreenCanvas<"u"&&r===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function yse(r,t){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let e=t??bse(r);return e.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete Kl[r]},!1),$().getBool("SOFTWARE_WEBGL_ENABLED")&&(Dx.failIfMajorPerformanceCaveat=!1),r===1?e.getContext("webgl",Dx)||e.getContext("experimental-webgl",Dx):e.getContext("webgl2",Dx)}function Vl(r,t){return[t,r]}function hO(r,t){return r*t}function og(r){let t=y.sizeFromShape(r),e=Math.ceil(t/4);return y.sizeToSquarishShape(e)}function Ri(r,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(r/2))]}function gO(r,t){let[e,n]=Ri(r,t);return e*n*4}function sg(r,t){let e=r,n,o,s,a,i,u,l,p,m,c;return $().getNumber("WEBGL_VERSION")===2?(n=e.R32F,o=e.R16F,s=e.RGBA16F,a=e.RGBA32F,i=e.RED,l=4,p=1,m=e.HALF_FLOAT,c=e.FLOAT,u=e.RGBA8):(n=r.RGBA,o=r.RGBA,s=r.RGBA,a=e.RGBA,i=r.RGBA,l=4,p=4,m=t!=null?t.HALF_FLOAT_OES:null,c=r.FLOAT,u=r.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:p,textureTypeHalfFloat:m,textureTypeFloat:c}}function Ce(r,t){let e=t();return $().getBool("DEBUG")&&Tse(r),e}function Tse(r){let t=r.getError();if(t!==r.NO_ERROR)throw new Error("WebGL Error: "+bO(r,t))}var xse=596e-10,Ise=65504;function RN(r){return!!($().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||xse<Math.abs(r)&&Math.abs(r)<Ise)}function bO(r,t){switch(t){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function mf(r,t){return xu(r,()=>r.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function FN(r,t){let e=xu(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ce(r,()=>r.shaderSource(e,t)),Ce(r,()=>r.compileShader(e)),r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function PN(r,t){let e=xu(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ce(r,()=>r.shaderSource(e,t)),Ce(r,()=>r.compileShader(e)),$().get("ENGINE_COMPILE_ONLY"))return e;if(r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw Mx(t,r.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}var Cse=/ERROR: [0-9]+:([0-9]+):/g;function Mx(r,t){let e=Cse.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(r);return}let n=+e[1],o=r.split(`
`),s=o.length.toString().length+2,a=o.map((m,c)=>y.rightPad((c+1).toString(),s)+m),i=0;for(let m=0;m<a.length;m++)i=Math.max(a[m].length,i);let u=a.slice(0,n-1),l=a.slice(n-1,n),p=a.slice(n);console.log(u.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${y.rightPad(l[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join(`
`))}function MN(r){return xu(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function EN(r,t){if(Ce(r,()=>r.linkProgram(t)),!$().get("ENGINE_COMPILE_ONLY")&&r.getProgramParameter(t,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function ag(r,t){if(Ce(r,()=>r.validateProgram(t)),r.getProgramParameter(t,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function LN(r,t){let e=xu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return Ce(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),Ce(r,()=>r.bufferData(r.ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function _N(r,t){let e=xu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return Ce(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e)),Ce(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function kse(){return $().getNumber("WEBGL_VERSION")===2?1:4}function $N(r){return xu(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function BN(r,t){let e=$().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||t<=0){let n=`[${r}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(r>e||t>e){let n=`[${r}x${t}]`,o=`[${e}x${e}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+o+".")}}function ON(r){return xu(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Ex(r,t,e,n,o,s,a){let i=r.getAttribLocation(t,e);return i===-1?!1:(Ce(r,()=>r.bindBuffer(r.ARRAY_BUFFER,n)),Ce(r,()=>r.vertexAttribPointer(i,o,r.FLOAT,!1,s,a)),Ce(r,()=>r.enableVertexAttribArray(i)),!0)}function yO(r,t,e){xO(r,e),Ce(r,()=>r.activeTexture(r.TEXTURE0+e)),Ce(r,()=>r.bindTexture(r.TEXTURE_2D,t))}function Sse(r,t){xO(r,t),Ce(r,()=>r.activeTexture(r.TEXTURE0+t)),Ce(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function zN(r,t,e){return xu(r,()=>r.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function GN(r,t,e){return r.getUniformLocation(t,e)}function UN(r,t,e,n){Ce(r,()=>yO(r,t,n)),Ce(r,()=>r.uniform1i(e,n))}function vse(r){Ce(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,null)),Ce(r,()=>r.viewport(0,0,r.canvas.width,r.canvas.height)),Ce(r,()=>r.scissor(0,0,r.canvas.width,r.canvas.height))}function ig(r,t,e){Ce(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),Ce(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0))}function Lx(r,t){Ce(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),Ce(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function cf(r){let t=r.checkFramebufferStatus(r.FRAMEBUFFER);if(t!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+TO(r,t))}function TO(r,t){switch(t){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function xu(r,t,e){let n=Ce(r,()=>t());if(n==null)throw new Error(e);return n}function xO(r,t){let e=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=t+r.TEXTURE0;if(n<r.TEXTURE0||n>e){let o=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${o}.`)}}function Iu(r,t=2){return y.sizeFromShape(r.slice(0,r.length-t))}function Cu(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function ug(r){let t=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(t=[Iu(r),...Cu(r)]),t}function WN(r,t=!1){let e=$().getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=$().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&$().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=e/2),t&&(e=e*2,n=n*2,r=r.map((i,u)=>u>=r.length-2?y.nearestLargerEven(r[u]):r[u]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=y.squeezeShape(r).newShape);let o=y.sizeFromShape(r),s=null;r.length<=1&&o<=e?s=[1,o]:r.length===2&&r[0]<=e&&r[1]<=e?s=r:r.length===3&&r[0]*r[1]<=e&&r[2]<=e?s=[r[0]*r[1],r[2]]:r.length===3&&r[0]<=e&&r[1]*r[2]<=e?s=[r[0],r[1]*r[2]]:r.length===4&&r[0]*r[1]*r[2]<=e&&r[3]<=e?s=[r[0]*r[1]*r[2],r[3]]:r.length===4&&r[0]<=e&&r[1]*r[2]*r[3]<=e&&(s=[r[0],r[1]*r[2]*r[3]]);let a=s!=null&&Math.max(...s)>n&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(s==null||a)if(t){let i=Iu(r),u=2,l=2;r.length&&([u,l]=Cu(r)),o=i*(u/2)*(l/2),s=y.sizeToSquarishShape(o).map(p=>p*2)}else s=y.sizeToSquarishShape(o);return s}function Rx(r){return r%2===0}function Rp(r,t){if(r=r.slice(-2),t=t.slice(-2),y.arraysEqual(r,t)||!r.length||!t.length||r[0]===0||r[1]===0||t[0]===0||t[1]===0)return!0;if(r.length!==t.length){let e=r.slice(-1)[0],n=t.slice(-1)[0];if(e===n||Rx(e)&&Rx(n)&&(r[0]===1||t[0]===1))return!0}return r[1]===t[1]&&Rx(r[0])&&Rx(t[0])}var Fx,Px;function KN(r){if(Fx==null){let t=Qn(r);Fx=t.getParameter(t.MAX_TEXTURE_SIZE)}return Fx}function Ase(){Fx=null}function wse(){Px=null}function VN(r){if(Px==null){let t=Qn(r);Px=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Px)}function HN(r){if(r===0)return 0;let t,e=Qn(r);return Jn(e,"EXT_disjoint_timer_query_webgl2")&&r===2?t=2:Jn(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function Jn(r,t){return r.getExtension(t)!=null}function _x(r){try{if(Qn(r)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function qN(r){if(r===0)return!1;let t=Qn(r);if(r===1){if(!Jn(t,"OES_texture_float"))return!1}else if(!Jn(t,"EXT_color_buffer_float"))return!1;return DN(t)}function jN(r){if(r===0)return!1;let t=Qn(r);if(r===1){if(!Jn(t,"OES_texture_float")||!Jn(t,"WEBGL_color_buffer_float"))return!1}else{if(Jn(t,"EXT_color_buffer_float"))return DN(t);let n="EXT_color_buffer_half_float";if(Jn(t,n)){let o=t.getExtension(n);return Nse(t,o)}return!1}return DN(t)}function DN(r){let t=sg(r),e=r.createTexture();r.bindTexture(r.TEXTURE_2D,e);let n=1,o=1;r.texImage2D(r.TEXTURE_2D,0,t.internalFormatFloat,n,o,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(e),r.deleteFramebuffer(s),a}function Nse(r,t){let e=sg(r,t),n=r.createTexture();r.bindTexture(r.TEXTURE_2D,n);let o=1,s=1;r.texImage2D(r.TEXTURE_2D,0,e.internalFormatHalfFloat,o,s,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);let a=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,a),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,n,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(n),r.deleteFramebuffer(a),i}function XN(r){return r!==2?!1:Qn(r).fenceSync!=null}function ei(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&y.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Me=$();Me.registerFlag("HAS_WEBGL",()=>Me.getNumber("WEBGL_VERSION")>0);Me.registerFlag("WEBGL_VERSION",()=>_x(2)?2:_x(1)?1:0);Me.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Me.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Me.get("WEBGL_VERSION")===2);Me.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Me.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Me.registerFlag("WEBGL_PACK",()=>Me.getBool("HAS_WEBGL"));Me.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_CLIP",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_REDUCE",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_LAZILY_UNPACK",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_CONV_IM2COL",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>KN(Me.getNumber("WEBGL_VERSION")));Me.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>VN(Me.getNumber("WEBGL_VERSION")));Me.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=Me.getNumber("WEBGL_VERSION");return r===0?0:HN(r)});Me.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Me.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Qu.isMobile());Me.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>qN(Me.getNumber("WEBGL_VERSION")));Me.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Me.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Me.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Me.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>jN(Me.getNumber("WEBGL_VERSION")));Me.registerFlag("WEBGL_FENCE_API_ENABLED",()=>XN(Me.getNumber("WEBGL_VERSION")));Me.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Me.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Me.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});Me.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Qu.isMobile()?1:-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});Me.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Me.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Me.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Me.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Me.registerFlag("WEBGL_EXP_CONV",()=>!1);Me.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Me.getBool("IS_TEST"));Me.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Me.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);function Zt(){let r,t,e,n,o,s,a,i,u,l;return $().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",t="in",e="out",n="in",o="texture",s="outputColor",a="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,u="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",t="attribute",e="varying",n="varying",o="texture2D",s="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:t,varyingVs:e,varyingFs:n,texture2D:o,output:s,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:u,defineRound:l}}function ti(r,t,e="index"){let n=y.computeStrides(t);return n.map((o,s)=>{let a=`int ${r[s]} = ${e} / ${o}`,i=s===n.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * ${o}`:`index -= ${r[s]} * ${o}`;return`${a}; ${i};`}).join("")}function Hl(r,t,e="index"){let n=y.computeStrides(t);return n.map((o,s)=>{let a=`int ${r[s]} = ${e} / outShapeStrides[${s}]`,i=s===n.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * outShapeStrides[${s}]`:`index -= ${r[s]} * outShapeStrides[${s}]`;return`${a}; ${i};`}).join("")}function Dse(r,t){let e=r.length,n=r.map(s=>`${t}[${s}]`),o=new Array(e-1);o[e-2]=n[e-1];for(let s=e-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function IO(r,t,e="index"){let n=r.map((s,a)=>a),o=Dse(n,t);return o.map((s,a)=>{let i=`int ${r[a]} = ${e} / ${o[a]}`,u=a===o.length-1?`int ${r[a+1]} = ${e} - ${r[a]} * ${o[a]}`:`index -= ${r[a]} * ${o[a]}`;return`${i}; ${u};`}).join("")}function ff(r){let t=y.computeStrides(r).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function hf(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var $x=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:CO}=C;function kO(r,t,e){let n=[];if(r.forEach(d=>{let f=y.sizeFromShape(d.shapeInfo.logicalShape);if(d.shapeInfo.isUniform?n.push(`uniform float ${d.name}${f>1?`[${f}]`:""};`):(n.push(`uniform sampler2D ${d.name};`),n.push(`uniform int offset${d.name};`)),e.enableShapeUniforms){let{uniformShape:h}=Bx(e.packedInputs,d.shapeInfo.logicalShape,d.shapeInfo.texShape);switch(h.length){case 1:n.push(`uniform int ${d.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${d.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${d.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${d.name}Shape;`);break;default:break}n.push(`uniform ivec2 ${d.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break;default:break}n.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(d=>{n.push(`uniform ${d.type} ${d.name}${d.arrayIndex?`[${d.arrayIndex}]`:""};`)});let o=n.join(`
`),s=r.map(d=>Rse(d,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),a=t.texShape,i=Zt(),u=Mse(i),l,p,m=_se(i);return t.isPacked?(l=Fse(t.logicalShape,a,e.enableShapeUniforms),p=Lse(i)):(l=Pse(t.logicalShape,a,e.enableShapeUniforms),p=Ese(i)),e.packedInputs&&(m+=zse),[m,u,p,o,l,s,e.userCode].join(`
`)}function bf(r,t=!1){let e=r.shapeInfo.logicalShape;switch(e.length){case 0:return Qse(r,t);case 1:return eae(r,t);case 2:return rae(r,t);case 3:return oae(r,t);case 4:return aae(r,t);case 5:return iae(r);case 6:return uae(r);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function SO(r,t){switch(r.shapeInfo.logicalShape.length){case 0:return Zse(r);case 1:return Jse(r,t);case 2:return tae(r,t);case 3:return nae(r,t);default:return sae(r,t)}}function Rse(r,t,e=!1,n){let o="";e?o+=SO(r,n):o+=bf(r,n);let s=r.shapeInfo.logicalShape,a=t.logicalShape;return s.length<=a.length&&(e?o+=pae(r,t):o+=lae(r,t)),o}function Fse(r,t,e){switch(r.length){case 0:return vO();case 1:return Gse(r,t,e);case 2:return Xse(r,t,e);case 3:return Wse(r,t,e);default:return Vse(r,t,e)}}function Pse(r,t,e){switch(r.length){case 0:return vO();case 1:return Use(r,t,e);case 2:return Yse(r,t,e);case 3:return Kse(r,t,e);case 4:return Hse(r,t,e);case 5:return qse(r,t);case 6:return jse(r,t);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function Mse(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function Ese(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function Lse(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function _se(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${$se}
    ${Bse}
    ${Ose}
  `}var $se=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Bse=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Ose=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,zse=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function vO(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function Gse(r,t,e){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return n[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function Use(r,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function Wse(r,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(r[2]/2),s=o*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function Kse(r,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Hl(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let n=ti(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function Vse(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(r[r.length-1]/2),s=o*Math.ceil(r[r.length-2]/2),a=s,i="",u="b, r, c";for(let l=2;l<r.length-1;l++)a*=r[r.length-l-1],i=`
      int b${l} = index / ${a};
      index -= b${l} * ${a};
    `+i,u=`b${l}, `+u;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${i}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${r.length}(${u});
    }
  `}function Hse(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Hl(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let n=ti(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function qse(r,t){let e=ti(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function jse(r,t){let e=ti(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Xse(r,t,e){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(y.arraysEqual(r,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let o=Math.ceil(r[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function Yse(r,t,e){return y.arraysEqual(r,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:r[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function ql(r){return`offset${r}`}function Zse(r){let t=r.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),n=Zt();return`
    vec4 ${e}() {
      return ${n.texture2D}(${t}, halfCR);
    }
  `}function Qse(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;let[o,s]=r.shapeInfo.texShape;if(o===1&&s===1)return`
      float ${n}() {
        return sampleTexture(${e}, halfCR);
      }
    `;let a=ql(e);if(t)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${a});
      return sampleTexture(${e}, uv);
    }
  `;let[i,u]=r.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${i}, ${u}, ${a});
      return sampleTexture(${e}, uv);
    }
  `}function Jse(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),o=r.shapeInfo.texShape,s=Zt();if(t)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${e}, uv);
    }
  `;let a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${s.texture2D}(${e}, uv);
    }
  `}function eae(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${yf(r)}
      }
    `;let o=r.shapeInfo.texShape,s=o[0],a=o[1];if(a===1&&s===1)return`
      float ${n}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;let i=ql(e);return a===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);
        return sampleTexture(${e}, uv);
      }
    `:s===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${i});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});
      return sampleTexture(${e}, uv);
    }
  `}function tae(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=s[0],i=s[1],u=Zt();if(s!=null&&y.arraysEqual(e,s))return t?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${u.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${u.texture2D}(${n}, uv);
      }
    `;if(t)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `;let l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],p=Math.ceil(e[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${p}, ${l[0]}, ${l[1]}, row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `}function rae(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape;if(s!=null&&y.arraysEqual(e,s)){if(t)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;let c=s[0],d=s[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${d}.0, ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:a,keptDims:i}=y.squeezeShape(e),u=a;if(u.length<e.length){let c=Tf(r,u),d=["row","col"];return`
      ${bf(c,t)}
      float ${o}(int row, int col) {
        return ${o}(${xf(d,i)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${yf(r)}
      }
    `;let l=s[0],p=s[1],m=ql(n);return p===1?t?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${n}, uv);
    }
  `:l===1?t?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:t?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${m};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${m};
    vec2 uv = uvFromFlat(${l}, ${p}, index);
    return sampleTexture(${n}, uv);
  }
`}function nae(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(e[0]===1){let c=e.slice(1),d=[1,2],f=Tf(r,c),h=["b","row","col"];return`
        ${SO(f,t)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${xf(h,d)});
        }
      `}let i=Zt();if(t)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `;let u=a[0],l=a[1],p=Math.ceil(e[2]/2),m=p*Math.ceil(e[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${l}, ${m}, ${p}, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `}function oae(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[1]*e[2],a=e[2],{newShape:i,keptDims:u}=y.squeezeShape(e),l=i;if(l.length<e.length){let h=Tf(r,l),g=["row","col","depth"];return`
        ${bf(h,t)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${xf(g,u)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${a}, 1)));
        ${yf(r)}
      }
    `;let p=r.shapeInfo.texShape,m=p[0],c=p[1],d=r.shapeInfo.flatOffset;if(c===s&&d==null)return t?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${c}.0, ${m}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(c===a&&d==null)return t?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${m}.0);
      return sampleTexture(${n}, uv);
    }
  `;let f=ql(n);return t?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${a} + depth + ${f};
        vec2 uv = uvFromFlat(${m}, ${c}, index);
        return sampleTexture(${n}, uv);
      }
  `}function sae(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),o=Zt();if(t)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${e}, uv);
    }
  `;let s=r.shapeInfo.logicalShape,a=s.length,i=r.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=u[0],p=u[1],m=Math.ceil(s[a-1]/2),c=m*Math.ceil(s[a-2]/2),d="int b, int row, int col",f=`b * ${c} + (row / 2) * ${m} + (col / 2)`;for(let h=2;h<a-1;h++)d=`int b${h}, `+d,c*=s[a-h-1],f=`b${h} * ${c} + `+f;return`
    vec4 ${n}(${d}) {
      int index = ${f};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${l});
      return ${o.texture2D}(${e}, uv);
    }
  `}function aae(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[3],a=e[2]*s,i=e[1]*a,{newShape:u,keptDims:l}=y.squeezeShape(e);if(u.length<e.length){let T=Tf(r,u),x=["row","col","depth","depth2"];return`
      ${bf(T,t)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${xf(x,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${s}, 1)));
        ${yf(r)}
      }
    `;let p=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1],f=`int stride2 = ${n}Shape[3];`,h=`int stride1 = ${n}Shape[2] * stride2;`,g=`int stride0 = ${n}Shape[1] * stride1;`;if(d===i&&p==null)return t?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${f}
        ${h}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(d===s&&p==null)return t?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;let b=ql(n);return t?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${h}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${b});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${c}, ${d}, index + ${b});
      return sampleTexture(${n}, uv);
    }
  `}function iae(r){let t=r.shapeInfo.logicalShape,e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),o=t[4],s=t[3]*o,a=t[2]*s,i=t[1]*a,{newShape:u,keptDims:l}=y.squeezeShape(t);if(u.length<t.length){let h=Tf(r,u),g=["row","col","depth","depth2","depth3"];return`
      ${bf(h)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${xf(g,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${s}, ${o})) +
          depth3;
        ${yf(r)}
      }
    `;let p=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1];if(d===i&&p==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(d===o&&p==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${e}, uv);
      }
    `;let f=ql(e);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${s} +
          depth2 * ${o} + depth3 + ${f};
      vec2 uv = uvFromFlat(${c}, ${d}, index);
      return sampleTexture(${e}, uv);
    }
  `}function uae(r){let t=r.shapeInfo.logicalShape,e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:o,keptDims:s}=y.squeezeShape(t);if(o.length<t.length){let g=Tf(r,o),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${bf(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${xf(b,s)});
      }
    `}let a=t[5],i=t[4]*a,u=t[3]*i,l=t[2]*u,p=t[1]*l;if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${p}, ${l}, ${u}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${yf(r)}
      }
    `;let m=r.shapeInfo.flatOffset,c=r.shapeInfo.texShape,d=c[0],f=c[1];if(f===p&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${u}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===a&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;let h=ql(e);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${p} + col * ${l} + depth * ${u} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${h};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function yf(r){let t=r.name,e=y.sizeFromShape(r.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function pae(r,t){let e=r.name,n=e.charAt(0).toUpperCase()+e.slice(1),o="get"+n+"AtOutCoords",s=r.shapeInfo.logicalShape.length,a=t.logicalShape.length,i=CO(r.shapeInfo.logicalShape,t.logicalShape),u=Ve(a),l=a-s,p,m=["x","y","z","w","u","v"];s===0?p="":a<2&&i.length>=1?p="coords = 0;":p=i.map(T=>`coords.${m[T+l]} = 0;`).join(`
`);let c="";a<2&&s>0?c="coords":c=r.shapeInfo.logicalShape.map((T,x)=>`coords.${m[x+l]}`).join(", ");let d="return outputValue;",h=y.sizeFromShape(r.shapeInfo.logicalShape)===1,b=y.sizeFromShape(t.logicalShape)===1;if(s===1&&!h&&!b)d=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(h&&!b)a===1?d=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:d=`
        return vec4(outputValue.x);
      `;else if(i.length){let T=s-2,x=s-1;i.indexOf(T)>-1&&i.indexOf(x)>-1?d="return vec4(outputValue.x);":i.indexOf(T)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(x)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${u} coords = getOutputCoords();
      ${p}
      vec4 outputValue = get${n}(${c});
      ${d}
    }
  `}function lae(r,t){let e=r.name,n=e.charAt(0).toUpperCase()+e.slice(1),o="get"+n+"AtOutCoords",s=t.texShape,a=r.shapeInfo.texShape,i=r.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!r.shapeInfo.isUniform&&i===u&&r.shapeInfo.flatOffset==null&&y.arraysEqual(a,s))return`
      float ${o}() {
        return sampleTexture(${e}, resultUV);
      }
    `;let l=Ve(u),p=CO(r.shapeInfo.logicalShape,t.logicalShape),m=u-i,c,d=["x","y","z","w","u","v"];i===0?c="":u<2&&p.length>=1?c="coords = 0;":c=p.map(h=>`coords.${d[h+m]} = 0;`).join(`
`);let f="";return u<2&&i>0?f="coords":f=r.shapeInfo.logicalShape.map((h,g)=>`coords.${d[g+m]}`).join(", "),`
    float ${o}() {
      ${l} coords = getOutputCoords();
      ${c}
      return get${n}(${f});
    }
  `}function Ve(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function Bx(r,t,e){let{newShape:n,keptDims:o}=y.squeezeShape(t),s=t.length,a=r&&s===3&&t[0]===1,i=a?t.slice(1):n,u=!r&&s>1&&!y.arraysEqual(t,e)&&n.length<s||a;return{useSqueezeShape:u,uniformShape:u?i:t,keptDims:o}}function Tf(r,t){let e=JSON.parse(JSON.stringify(r));return e.shapeInfo.logicalShape=t,e}function xf(r,t){return t.map(e=>r[e]).join(", ")}function wO(r,t,e,n){let o=e.map((p,m)=>{let c={logicalShape:p.shape,texShape:p.isUniform?null:p.texData.texShape,isUniform:p.isUniform,isPacked:p.isUniform?!1:p.texData.isPacked,flatOffset:null};return p.texData!=null&&p.texData.slice!=null&&p.texData.slice.flatOffset>0&&(c.flatOffset=p.texData.slice.flatOffset),{name:t.variableNames[m],shapeInfo:c}}),s=o.map(p=>p.shapeInfo),a={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},i=kO(o,a,t),u=PN(r.gl,i),l=r.createProgram(u);return $().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:a,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:{program:t,fragmentShader:u,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:a,...YN(r,t,l)}}function YN(r,t,e){let n={},o={},s={},a=[],i,u,l,p=null,m=null;m=r.getUniformLocation(e,"NAN",!1),$().getNumber("WEBGL_VERSION")===1&&(p=r.getUniformLocation(e,"INFINITY",!1));let c=!1;for(let d=0;d<t.variableNames.length;d++){let f=t.variableNames[d];n[f]=r.getUniformLocation(e,f,c),n[`offset${f}`]=r.getUniformLocation(e,`offset${f}`,c),t.enableShapeUniforms&&(o[`${f}Shape`]=r.getUniformLocation(e,`${f}Shape`,c),s[`${f}TexShape`]=r.getUniformLocation(e,`${f}TexShape`,c))}return t.enableShapeUniforms&&(i=r.getUniformLocation(e,"outShape",c),l=r.getUniformLocation(e,"outShapeStrides",c),u=r.getUniformLocation(e,"outTexShape",c)),t.customUniforms&&t.customUniforms.forEach((d,f)=>{a[f]=r.getUniformLocation(e,d.name,c)}),{uniformLocations:n,customUniformLocations:a,infLoc:p,nanLoc:m,inShapesLocations:o,inTexShapesLocations:s,outShapeLocation:i,outShapeStridesLocation:l,outTexShapeLocation:u}}function AO(r,t){if(r.length!==t.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${t.length} inputs`);r.forEach((e,n)=>{let o=e.logicalShape,s=t[n],a=s.shape;if(!y.arraysEqual(o,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${a} must match`);if(e.isUniform&&s.isUniform)return;let i=e.texShape,u=s.isUniform?null:s.texData.texShape;if(!y.arraysEqual(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)})}function NO(r,t,e,n,o){t.program.enableShapeUniforms||(AO(t.inShapeInfos,e),AO([t.outShapeInfo],[n]));let s=n.texData.texture,a=n.texData.texShape;n.texData.isPacked?r.setOutputPackedMatrixTexture(s.texture,a[0],a[1]):r.setOutputMatrixTexture(s.texture,a[0],a[1]),r.setProgram(t.webGLProgram),$().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&r.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&r.gl.uniform1f(t.nanLoc,NaN),e.forEach((u,l)=>{let p=t.program.variableNames[l],m=t.uniformLocations[p],c=t.uniformLocations[`offset${p}`],d=t.inShapesLocations[`${p}Shape`],f=t.inTexShapesLocations[`${p}TexShape`];if(d){let{uniformShape:h}=Bx(t.program.packedInputs,u.shape,u.texData.texShape);switch(h.length){case 1:r.gl.uniform1iv(d,new Int32Array(h));break;case 2:r.gl.uniform2iv(d,new Int32Array(h));break;case 3:r.gl.uniform3iv(d,new Int32Array(h));break;case 4:r.gl.uniform4iv(d,new Int32Array(h));break;default:break}}if(f&&r.gl.uniform2i(f,u.texData.texShape[0],u.texData.texShape[1]),m!=null){if(u.isUniform){if(y.sizeFromShape(u.shape)<2)r.gl.uniform1f(m,u.uniformValues[0]);else{let h=u.uniformValues;h instanceof Float32Array||(h=new Float32Array(h)),r.gl.uniform1fv(m,h)}return}u.texData.slice!=null&&c!=null&&r.gl.uniform1i(c,u.texData.slice.flatOffset),r.setInputMatrixTexture(u.texData.texture.texture,m,l)}});let i=t.outShapeLocation;if(i)switch(n.shape.length){case 1:r.gl.uniform1iv(i,new Int32Array(n.shape));break;case 2:r.gl.uniform2iv(i,new Int32Array(n.shape));break;case 3:r.gl.uniform3iv(i,new Int32Array(n.shape));break;case 4:r.gl.uniform4iv(i,new Int32Array(n.shape));break;default:break}if(t.outShapeStridesLocation){let u=y.computeStrides(n.shape);switch(n.shape.length){case 2:r.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(u));break;case 3:r.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(u));break;case 4:r.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(u));break;default:break}}t.outTexShapeLocation&&r.gl.uniform2i(t.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),t.program.customUniforms&&o&&t.program.customUniforms.forEach((u,l)=>{let p=t.customUniformLocations[l],m=o[l];if(u.type==="float")r.gl.uniform1fv(p,m);else if(u.type==="vec2")r.gl.uniform2fv(p,m);else if(u.type==="vec3")r.gl.uniform3fv(p,m);else if(u.type==="vec4")r.gl.uniform4fv(p,m);else if(u.type==="int")r.gl.uniform1iv(p,m);else if(u.type==="ivec2")r.gl.uniform2iv(p,m);else if(u.type==="ivec3")r.gl.uniform3iv(p,m);else if(u.type==="ivec4")r.gl.uniform4iv(p,m);else throw Error(`uniform type ${u.type} is not supported yet.`)}),r.executeProgram()}function DO(r,t,e){let n="";t.concat(e).forEach(a=>{let i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!a.isUniform){let u=a.texData.texShape,{useSqueezeShape:l,uniformShape:p,keptDims:m}=Bx(r.packedInputs,a.shape,u),c="",d="",f="";if(p.length===1&&r.packedInputs){let k=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];c=`${k[0]>1}_${k[1]>1}`}else if(p.length===2&&!r.packedInputs)d=`${p[0]>1}_${p[1]>1}`;else if(p.length>2&&!r.packedInputs){let k=y.computeStrides(p);f=`${k[0]===u[1]}_${k[k.length-1]===u[1]}`}let h=a.shape.length,g=p.length===2&&y.arraysEqual(a.shape,u),b=y.sizeFromShape(a.shape)===1,T=C.getBroadcastDims(a.shape,e.shape),x=!r.packedInputs&&h===e.shape.length&&y.arraysEqual(u,e.texData.texShape),I=r.packedInputs||p.length>2?"":`${u[0]>1}_${u[1]>1}`;n+=`${h}_${x}_${l?m:""}_${p.length}_${b}_${T}_${g}_${c}_${d}_${f}_${I}_${i}`}else{let u=a.isUniform?"uniform":a.texData.texShape;n+=`${a.shape}_${u}_${i}`}});let o=r.userCode,s=r.constructor.name;return s+="_"+n+"_"+o+`${$().getNumber("WEBGL_VERSION")}`,s}function Nt(r){return $().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var Ox=class{constructor(t){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.outPackingScheme=0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=Zt();this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Hl(["r","c","d"],t):ti(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}};var zx=class{constructor(t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outPackingScheme=0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=Zt();this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Hl(["r","c","d"],t):ti(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}};var Gx=class{constructor(t){this.variableNames=["A"];this.outTexUsage=3;let e=Zt();this.outputShape=t,this.userCode=`
      ${$x}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}};var Wx=class{constructor(t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outTexUsage=3;let e=Zt();this.outputShape=t,this.userCode=`
      ${$x}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}};var Kx=class{constructor(t,e=!1){this.variableNames=["A"];this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Zt();this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length);let o="result";e&&(o="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?hf():ff(t)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${o}, 0., 0., 0.);
      }
    `}};var Vx=class{constructor(t,e=!1){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Zt();this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length);let o="",s="result";e&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){let u=a*2+i;o+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?hf():ff(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${n.output} = ${s};
        }
    `}};var dD={};He(dD,{bindVertexProgramAttributeStreams:()=>sD,createBufferFromOutputTexture:()=>uD,createFloat16MatrixTexture:()=>tD,createFloat16PackedMatrixTexture:()=>oD,createFloat32MatrixTexture:()=>eD,createIndexBuffer:()=>JN,createPackedMatrixTexture:()=>nD,createUnsignedBytesMatrixTexture:()=>rD,createVertexBuffer:()=>QN,createVertexShader:()=>ZN,downloadByteEncodedFloatMatrixFromOutputTexture:()=>lD,downloadFloat32MatrixFromBuffer:()=>pD,downloadMatrixFromPackedOutputTexture:()=>cD,downloadPackedMatrixFromBuffer:()=>mD,getInternalFormatForFloat16MatrixTexture:()=>qx,getInternalFormatForFloat16PackedMatrixTexture:()=>Yx,getInternalFormatForFloat32MatrixTexture:()=>Hx,getInternalFormatForPackedMatrixTexture:()=>Xx,getInternalFormatForUnsignedBytesMatrixTexture:()=>jx,uploadDenseMatrixToTexture:()=>aD,uploadPixelDataToTexture:()=>iD});function ZN(r){let t=Zt(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return FN(r,e)}function QN(r){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return LN(r,t)}function JN(r){let t=new Uint16Array([0,1,2,2,1,3]);return _N(r,t)}function pg(r,t,e,n,o,s){BN(t,e);let a=$N(r),i=r.TEXTURE_2D;return Ce(r,()=>r.bindTexture(i,a)),Ce(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),Ce(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),Ce(r,()=>r.texParameteri(i,r.TEXTURE_MIN_FILTER,r.NEAREST)),Ce(r,()=>r.texParameteri(i,r.TEXTURE_MAG_FILTER,r.NEAREST)),$().getNumber("WEBGL_VERSION")===1?Ce(r,()=>r.texImage2D(i,0,n,t,e,0,o,s,null)):Ce(r,()=>r.texStorage2D(i,1,n,t,e)),Ce(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:a,texShape:[e,t]}}function Hx(r){return r.internalFormatFloat}function eD(r,t,e,n){let[o,s]=Vl(t,e);return pg(r,o,s,Hx(n),n.textureFormatFloat,r.FLOAT)}function qx(r){return r.internalFormatHalfFloat}function tD(r,t,e,n){let[o,s]=Vl(t,e);return pg(r,o,s,qx(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function jx(r){return r.downloadTextureFormat}function rD(r,t,e,n){let[o,s]=Vl(t,e);return pg(r,o,s,jx(n),r.RGBA,r.UNSIGNED_BYTE)}function Xx(r){return r.internalFormatPackedFloat}function nD(r,t,e,n){let[o,s]=Ri(t,e);return pg(r,o,s,Xx(n),r.RGBA,r.FLOAT)}function Yx(r){return r.internalFormatPackedHalfFloat}function oD(r,t,e,n){let[o,s]=Ri(t,e);return pg(r,o,s,Yx(n),r.RGBA,n.textureTypeHalfFloat)}function sD(r,t,e){return Ce(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),Ex(r,t,"clipSpacePos",e,3,20,0)&&Ex(r,t,"uv",e,2,20,12)}function aD(r,t,e,n,o,s){Ce(r,()=>r.bindTexture(r.TEXTURE_2D,t));let a,i,u;o instanceof Uint8Array?(a=new Uint8Array(e*n*4),i=r.UNSIGNED_BYTE,u=r.RGBA):(a=new Float32Array(e*n*4),i=r.FLOAT,u=s.internalFormatPackedFloat),a.set(o),$().getNumber("WEBGL_VERSION")===2?Ce(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e,n,r.RGBA,i,a)):Ce(r,()=>r.texImage2D(r.TEXTURE_2D,0,u,e,n,0,r.RGBA,i,a)),Ce(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function iD(r,t,e){Ce(r,()=>r.bindTexture(r.TEXTURE_2D,t)),e.data instanceof Uint8Array?$().getNumber("WEBGL_VERSION")===2?Ce(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e.width,e.height,r.RGBA,r.UNSIGNED_BYTE,e.data)):Ce(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,e.width,e.height,0,r.RGBA,r.UNSIGNED_BYTE,e.data)):$().getNumber("WEBGL_VERSION")===2?Ce(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,e)):Ce(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,e)),Ce(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function uD(r,t,e,n){let o=r.createBuffer();Ce(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,o));let i=4*4*t*e;return Ce(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,i,r.STREAM_READ)),Ce(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,0)),Ce(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),o}function pD(r,t,e){let n=r,o=new Float32Array(e);return n.bindBuffer(n.PIXEL_PACK_BUFFER,t),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,o),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),o}function lD(r,t,e,n){let[o,s]=Vl(t,e),a=4,i=new Uint8Array(hO(t*e,a));return Ce(r,()=>r.readPixels(0,0,o,s,n.downloadTextureFormat,r.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function mD(r,t,e,n,o,s,a,i){let u=r,l=new Float32Array(gO(s,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function cD(r,t,e){let n=new Float32Array(t*e*4);return Ce(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,n)),n}var jl=class{constructor(t){this.outputTexture=null;this.program=null;this.disposed=!1;this.vertexAttrsAreBound=!1;this.itemsToPoll=[];let e=$().getNumber("WEBGL_VERSION");t!=null?(this.gl=t,wN(e,t)):this.gl=Qn(e);let n="WEBGL_color_buffer_float",o="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),$().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=mf(this.gl,s),Jn(this.gl,a))this.textureHalfFloatExtension=mf(this.gl,a);else if($().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Jn(this.gl,o))this.colorBufferHalfFloatExtension=mf(this.gl,o);else if($().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Jn(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Jn(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=QN(this.gl),this.indexBuffer=JN(this.gl),this.framebuffer=ON(this.gl),this.textureConfig=sg(this.gl,this.textureHalfFloatExtension)}get debug(){return $().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let t=this.gl;Ce(t,()=>t.finish()),Ce(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Ce(t,()=>t.deleteFramebuffer(this.framebuffer)),Ce(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Ce(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Ce(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),eD(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),tD(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),rD(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),iD(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,o){this.throwIfDisposed(),aD(this.gl,t,e,n,o,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),oD(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),nD(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Lx(this.gl,this.framebuffer),this.outputTexture=null),Ce(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>lD(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,o,s,a){return mD(this.gl,t,e,n,o,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return pD(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);let o=uD(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){let t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if($().getBool("WEBGL_FENCE_API_ENABLED")){let o=t,s=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{let a=o.clientWaitSync(s,0,0);return a===o.ALREADY_SIGNALED||a===o.CONDITION_SATISFIED},e=s}else $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>cD(this.gl,e,n))}createProgram(t){this.throwIfDisposed();let e=this.gl;this.vertexShader==null&&(this.vertexShader=ZN(e));let n=MN(e);return Ce(e,()=>e.attachShader(n,this.vertexShader)),Ce(e,()=>e.attachShader(n,t)),EN(e,n),this.debug&&ag(e,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=sD(e,this.program,this.vertexBuffer)),n}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&Ce(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&ag(this.gl,this.program),Ce(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?zN(this.gl,t,e):GN(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Ce(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),UN(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();let[o,s]=Ri(e,n);this.setOutputMatrixTextureDriver(t,o,s)}setOutputMatrixWriteRegion(t,e,n,o){this.setOutputMatrixWriteRegionDriver(n,t,o,e)}setOutputPackedMatrixWriteRegion(t,e,n,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&ag(this.gl,this.program),cf(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let t=this.gl;this.debug&&this.debugValidate(),Ce(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ce(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=mf(this.gl,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,s),s}let t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let e=this.gl,n=this.getQueryTimerExtensionWebGL2();e.endQuery(n.TIME_ELAPSED_EXT);return}let t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await y.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){let n=this.gl;return n.getQueryParameter(t,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(t,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(t,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),o=n.getQueryObjectEXT(t,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){let t=dae(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){let{resolveFn:n}=this.itemsToPoll[e];n()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),!(this.itemsToPoll.length>1)&&y.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),ig(this.gl,t,this.framebuffer),this.debug&&cf(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(ig(this.gl,this.outputTexture,this.framebuffer),this.debug&&cf(this.gl)):Lx(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);let n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();let o=this.gl;ig(o,t,this.framebuffer),this.debug&&cf(o),this.outputTexture=t,Ce(o,()=>o.viewport(0,0,e,n)),Ce(o,()=>o.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,o){this.throwIfDisposed(),Ce(this.gl,()=>this.gl.scissor(t,e,n,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function dae(r){let t=0;for(;t<r.length&&r[t]();++t);return t-1}var{addImpl:FO,bincountImpl:Zx,bincountReduceImpl:PO,castImpl:MO,ceilImpl:EO,concatImpl:LO,equalImpl:_O,expImpl:$O,expm1Impl:BO,floorImpl:OO,gatherNdImpl:zO,gatherV2Impl:GO,greaterImpl:UO,greaterEqualImpl:WO,lessImpl:KO,lessEqualImpl:VO,linSpaceImpl:HO,logImpl:qO,maxImpl:jO,maximumImpl:XO,minimumImpl:YO,multiplyImpl:ZO,negImpl:QO,notEqualImpl:JO,prodImpl:ez,raggedGatherImpl:tz,raggedTensorToTensorImpl:rz,rangeImpl:nz,rsqrtImpl:oz,scatterImpl:sz,sigmoidImpl:az,simpleAbsImpl:Qx,sliceImpl:iz,sparseFillEmptyRowsImpl:uz,sparseReshapeImpl:pz,sparseSegmentReductionImpl:Jx,sqrtImpl:lz,stridedSliceImpl:mz,stringNGramsImpl:cz,stringSplitImpl:dz,stringToHashBucketFastImpl:fz,subImpl:hz,tileImpl:gz,topKImpl:bz,transposeImpl:Xl,uniqueImpl:yz}=uf;function fD(r,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${r}.${e}`)}function or(r,t){return t===1?[r]:fD(r,t)}function Tz(r,t){if(r===1)return"rc";let e="";for(let n=0;n<r;n++)e+=t[n],n<r-1&&(e+=",");return e}var eI=class{constructor(t){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;if(this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=Nt(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=or("rc",this.rank),n=Ve(this.rank),o=this.getOutOfBoundsCondition(e),s=this.getSetup(e),a=this.getOutput(e);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(t){let e=[];for(let n=0;n<=1;n++)for(let o=0;o<=1;o++){let s=`${n===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)s=`${t[t.length-1-a]},`+s;e.push(s)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let n=this.rank-2;n<this.rank;n++)e+=`${t[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";let e=t.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${o};
    `}getOutput(t){let e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}};var If=class{constructor(t,e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec3"}];this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length);let n="";for(let o=0;o<4;o++){let s="thisRC = rc;";o%2===1&&(s+="thisRC.z += 1;"),o>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${fae(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?hf():ff(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${n}

        setOutput(result);
      }
    `}};function fae(r,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?IO(["r","c","d"],"inputShape"):ti(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var tI=class{constructor(t){this.gpgpu=t;this.numUsedTextures=0;this.numFreeTextures=0;this._numBytesAllocated=0;this._numBytesFree=0;this.freeTextures={};this.logEnabled=!1;this.usedTextures={}}acquireTexture(t,e,n){let o=Iz(e,n),s=Cz(t,o,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let a=xz(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let u=this.freeTextures[s].shift();return this.usedTextures[s].push(u),u}let i;return o===3?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):o===4?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):o===1?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):o===0?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):o===2&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(t,e,n,o){if(this.freeTextures==null)return;let s=Iz(n,o),a=Cz(e,s,o);a in this.freeTextures||(this.freeTextures[a]=[]);let i=xz(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,o),u=$().get("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[a],p=l.indexOf(t);if(p<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(p,1),this.log()}log(){if(!this.logEnabled)return;let t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);let e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function hae(r,t){let e=r;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===r.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function xz(r,t,e,n,o){let s=gae(t,n),a;if(o){let[u,l]=Ri(r[0],r[1]);a=u*l}else{let[u,l]=Vl(r[0],r[1]);a=u*l}let i=hae(e,s);return a*i}function gae(r,t){switch(r){case 3:return Xx(t);case 4:return Yx(t);case 1:return Hx(t);case 0:return qx(t);case 2:return jx(t);default:throw new Error(`Unknown physical texture type ${r}`)}}function bae(r){return $().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?3:1:r?4:0}function Iz(r,t){if(r===1)return 3;if(r===0||r==null)return bae(t);if(r===3||r===2)return 2;throw new Error(`Unknown logical texture type ${r}`)}function Cz(r,t,e){return`${r[0]}_${r[1]}_${t}_${e}`}var an=class{constructor(t,e){this.variableNames=["A"];this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Ir="if (isnan(x)) return x;",kz="return x;",hD="return abs(x);";var Sz="return (x >= 0.0) ? x : (exp(x) - 1.0);",vz=Ir+`
  return (x < 0.0) ? 0.0 : x;
`,Az=Ir+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Yl="return x;",wz="return 1.0 / (1.0 + exp(-1.0 * x));";var Dz="return x;",Rz=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Fz=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Pz=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Mz="return 1.0 / (1.0 + exp(-1.0 * x));",ss=class{constructor(t,e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var rI=class{constructor(t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length);let e=t.length,n=or("rc",e),o=Ve(e),s=Tz(e,n),a=n.slice(-2),i=e<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}};var Tae=xr.whereImpl,xae=1e-7,Iae=1e-4,nI={};function Cae(r){return r in nI||(nI[r]={}),nI[r]}var kae=$().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Sae=600;function vae(){return $().global.screen==null?1024:$().global.screen.height*$().global.screen.width*window.devicePixelRatio*Sae/1024/1024}var gD=class extends oo{constructor(e){super();this.pendingRead=new WeakMap;this.pendingDisposal=new WeakSet;this.dataRefCount=new WeakMap;this.numBytesInGPU=0;this.uploadWaitMs=0;this.downloadWaitMs=0;this.lastGlFlushTime=0;this.warnedAboutMemory=!1;this.pendingDeletes=0;this.disposed=!1;if(!$().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let n;if(e!=null){if(e instanceof jl)n=e;else{let o=Qn($().getNumber("WEBGL_VERSION"),e);n=new jl(o)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let o=Qn($().getNumber("WEBGL_VERSION"));n=new jl(o),this.binaryCache=Cae($().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=n,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new tI(this.gpgpu),this.numMBBeforeWarning=vae(),this.texData=new ia(this,Mn())}nextDataId(){return gD.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,n,o){if(($().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||$().getBool("DEBUG"))&&this.checkNumericalProblems(e),o==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:n,dtype:o,values:e,usage:1,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let n=this.texData.get(e);n.refCount++}decRef(e){if(this.texData.has(e)){let n=this.texData.get(e);n.refCount--}}move(e,n,o,s,a){if($().getBool("DEBUG")&&this.checkNumericalProblems(n),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:o,dtype:s,values:n,usage:1,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let n=this.texData.get(e),{values:o,dtype:s,complexTensorInfos:a,slice:i,shape:u,isPacked:l}=n;if(i!=null){let d;l?d=new ss(u,Yl):d=new an(u,Yl);let f=this.runWebGLProgram(d,[{dataId:e,shape:u,dtype:s}],s),h=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),h}if(o!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return o;let p=this.activeTimers!=null,m;p&&(m=y.now());let c;if(s==="complex64"){let d=this.readSync(a.real.dataId),f=this.readSync(a.imag.dataId);c=C.mergeRealAndImagArrays(d,f)}else c=this.getValuesFromTexture(e);return p&&(this.downloadWaitMs+=y.now()-m),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(g=>h.push(g))}let n=this.texData.get(e),{values:o,shape:s,slice:a,dtype:i,complexTensorInfos:u,isPacked:l}=n;if(a!=null){let h;l?h=new ss(s,Yl):h=new an(s,Yl);let g=this.runWebGLProgram(h,[{dataId:e,shape:s,dtype:i}],i),b=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),b}if(o!=null)return this.convertAndCacheOnCPU(e);if($().getBool("DEBUG")&&!$().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&$().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let p=null,m;if(i!=="complex64"&&$().get("WEBGL_BUFFER_SUPPORTED")){m=this.decode(e);let h=this.texData.get(m.dataId);p=this.gpgpu.createBufferFromTexture(h.texture.texture,...og(s))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let c;if(i==="complex64"){let h=await Promise.all([this.read(u.real.dataId),this.read(u.imag.dataId)]),g=h[0],b=h[1];c=C.mergeRealAndImagArrays(g,b)}else if(p==null)c=this.getValuesFromTexture(e);else{let h=y.sizeFromShape(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(p,h)}if(m!=null&&this.disposeIntermediateTensorInfo(m),p!=null){let h=this.gpgpu.gl;Ce(h,()=>h.deleteBuffer(p))}let d=this.convertAndCacheOnCPU(e,c),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(h=>h(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Mn().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,n={}){let o=this.texData.get(e),{values:s,shape:a,slice:i,dtype:u,isPacked:l,texture:p}=o;if(u==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let f;l?f=new ss(a,Yl):f=new an(a,Yl);let h=this.runWebGLProgram(f,[{dataId:e,shape:a,dtype:u}],u),g=this.readToGPU(h,n);return this.disposeIntermediateTensorInfo(h),g}if(p==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let m=this.decode(e,n.customTexShape),c=Mn().makeTensorFromTensorInfo(m),d=this.texData.get(m.dataId);return{tensorRef:c,...d.texture}}bufferSync(e){let n=this.readSync(e.dataId);if(e.dtype==="string")try{let o=n.map(s=>y.decodeString(s));return Ie(e.shape,e.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ie(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let n=0;n<e.length;n++){let o=e[n];if(!RN(o))throw $().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${o} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${o} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:n,dtype:o,isPacked:s}=this.texData.get(e),a=y.sizeFromShape(n);if($().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let d=this.decode(e),f=this.texData.get(d.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...og(n)).subarray(0,a);return this.disposeIntermediateTensorInfo(d),h}let i=$().getBool("WEBGL_PACK")&&s===!0,u=i?ug(n):n,l=i?new Wx(u):new Gx(u),p=this.runWebGLProgram(l,[{shape:u,dtype:o,dataId:e}],"float32"),m=this.texData.get(p.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(m.texture.texture,m.texShape[0],m.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(p),c}timerAvailable(){return $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let n=this.activeTimers,o=[],s=!1;this.programTimersStack==null?(this.programTimersStack=o,s=!0):this.activeTimers.push(o),this.activeTimers=o,e();let a=y.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=y.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=n,s&&(this.programTimersStack=null);let u={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let l=await Promise.all(a);u.kernelMs=y.sum(l),u.getExtraProfileInfo=()=>l.map((p,m)=>({name:i[m],ms:p})).map(p=>`${p.name}: ${p.ms}`).join(", ")}else u.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,u})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:y.now(),endMs:null}}endTimer(e){return $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=y.now(),e)}async getQueryTime(e){if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let n=e;return n.endMs-n.startMs}disposeData(e,n=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(n?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!n&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:o}=this.texData.get(e);return o!=null&&(this.disposeData(o.real.dataId,n),this.disposeData(o.imag.dataId,n)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:n,dtype:o,texShape:s,usage:a,isPacked:i,slice:u}=this.texData.get(e),l=u&&u.origDataId||e,p=this.dataRefCount.get(l);p>1?this.dataRefCount.set(l,p-1):(this.dataRefCount.delete(l),n!=null&&(this.numBytesInGPU-=this.computeBytes(s,o),this.textureManager.releaseTexture(n,s,a,i)));let m=this.texData.get(e);m.texture=null,m.texShape=null,m.isPacked=!1,m.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,n=kae){return $().getBool("WEBGL_CPU_FORWARD")&&e.every(o=>this.texData.get(o.dataId).texture==null&&y.sizeFromShape(o.shape)<n)}getGPGPUContext(){return this.gpgpu}where(e){C.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let n=e.dataSync();return Tae(e.shape,n)}packedUnaryOp(e,n,o){let s=new ss(e.shape,n),a=this.compileAndRun(s,[e],o);return Mn().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let s=Qx(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if($().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,hD,e.dtype);let n=new an(e.shape,hD),o=this.compileAndRun(n,[e]);return Mn().makeTensorFromTensorInfo(o)}makeTensorInfo(e,n,o){let s;if(n==="string"&&o!=null&&o.length>0&&y.isString(o[0])){let a=o.map(i=>y.encodeString(i));s=this.write(a,e,n)}else s=this.write(o,e,n);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:n}}makeOutput(e,n,o){return Mn().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,o),this)}unpackTensor(e){let n=new rI(e.shape);return this.runWebGLProgram(n,[e],e.dtype)}packTensor(e){let n=new eI(e.shape),o=!0;return this.runWebGLProgram(n,[e],e.dtype,null,o)}packedReshape(e,n){let o=[Iu(e.shape),...Cu(e.shape)],s={dtype:e.dtype,shape:o,dataId:e.dataId},a=[Iu(n),...Cu(n)],i=new If(a,o),u=!0,l=[o],p=this.runWebGLProgram(i,[s],e.dtype,l,u);return{dataId:p.dataId,shape:n,dtype:p.dtype}}decode(e,n){let o=this.texData.get(e),{isPacked:s,shape:a,dtype:i}=o;if(n!=null){let d=y.sizeFromShape(a),f=n[0]*n[1]*4;y.assert(d<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let u=ug(a),l;s?l=new zx(u):l=new Ox(u);let p=!0,m=[n??og(u)],c=this.runWebGLProgram(l,[{shape:u,dtype:i,dataId:e}],i,m,p,n);return{dtype:i,shape:a,dataId:c.dataId}}runWebGLProgram(e,n,o,s,a=!1,i){let u=this.makeTensorInfo(e.outputShape,o),l=this.texData.get(u.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===0){let T=i??og(e.outputShape);l.texShape=T.map(x=>x*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),y.sizeFromShape(u.shape)===0)return l.values=y.getTypedArrayFromDType(u.dtype,0),u;let p=[],m=n.map(T=>{if(T.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(T.dataId);if(x.texture==null){if(!e.packedInputs&&y.sizeFromShape(T.shape)<=$().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:T.shape,texData:null,isUniform:!0,uniformValues:x.values};e.packedInputs&&(x.isPacked=!0,x.shape=T.shape)}if(this.uploadToGPU(T.dataId),!!x.isPacked!=!!e.packedInputs)T=x.isPacked?this.unpackTensor(T):this.packTensor(T),p.push(T),x=this.texData.get(T.dataId);else if(x.isPacked&&!Rp(x.shape,T.shape)){let I=T,k=T.shape;T.shape=x.shape,T=this.packedReshape(T,k),p.push(T),x=this.texData.get(T.dataId),I.shape=k}return{shape:T.shape,texData:x,isUniform:!1}});this.uploadToGPU(u.dataId);let c={shape:u.shape,texData:l,isUniform:!1},d=DO(e,m,c),f=this.getAndSaveBinary(d,()=>wO(this.gpgpu,e,m,c)),h=this.activeTimers!=null,g;h&&(g=this.startTimer()),$().get("ENGINE_COMPILE_ONLY")||NO(this.gpgpu,f,m,c,s),p.forEach(T=>this.disposeIntermediateTensorInfo(T)),h&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));let b=$().get("WEBGL_FLUSH_THRESHOLD");if(b>0){let T=y.now();T-this.lastGlFlushTime>b&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=T)}if(!$().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&a===!1){let T=this.unpackTensor(u);return this.disposeIntermediateTensorInfo(u),T}return u}compileAndRun(e,n,o,s,a=!1){return o=o||n[0].dtype,this.runWebGLProgram(e,n,o,s,a)}getAndSaveBinary(e,n){return e in this.binaryCache||(this.binaryCache[e]=n()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||($().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(n=>{this.gpgpu.deleteProgram(this.binaryCache[n].webGLProgram),delete this.binaryCache[n]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=z(()=>{if(!$().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=$().getBool("DEBUG");$().set("DEBUG",!1);let n=this.abs(de(1e-8)).dataSync()[0];if($().set("DEBUG",e),n>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?xae:Iae}uploadToGPU(e){let n=this.texData.get(e),{shape:o,dtype:s,values:a,texture:i,usage:u,isPacked:l}=n;if(i!=null)return;let p=this.activeTimers!=null,m;p&&(m=y.now());let c=n.texShape;if(c==null&&(c=WN(o,l),n.texShape=c),a!=null){let d=ug(o),f,h=c[1],g=c[0],b=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(l||!b)&&([h,g]=Ri(c[0],c[1])),l?f=new Vx(d,b):f=new Kx(d,b);let T=b?[g,h]:c,x=this.makeTensorInfo(T,s),I=this.texData.get(x.dataId);b?I.usage=2:I.usage=1,I.texShape=T,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),h,g,a);let k=[[g,h]],A=!0,R=this.runWebGLProgram(f,[x],s,k,A),F=this.texData.get(R.dataId);n.texShape=F.texShape,n.isPacked=F.isPacked,n.usage=F.usage,$().get("ENGINE_COMPILE_ONLY")?this.disposeData(R.dataId):(n.texture=F.texture,n.values=null,this.texData.delete(R.dataId)),this.disposeIntermediateTensorInfo(x),p&&(this.uploadWaitMs+=y.now()-m)}else{let d=this.acquireTexture(c,u,s,l);n.texture=d}}convertAndCacheOnCPU(e,n){let o=this.texData.get(e),{dtype:s}=o;return this.releaseGPUData(e),n!=null&&(o.values=Aae(n,s)),o.values}acquireTexture(e,n,o,s){if(this.numBytesInGPU+=this.computeBytes(e,o),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${a} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,n,s)}computeBytes(e,n){return e[0]*e[1]*y.bytesPerElement(n)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,n]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(n));return Promise.all(e)}else{for(let[,n]of Object.entries(this.binaryCache)){let o=new Promise(s=>{try{this.checkCompletion_(n),s(!0)}catch(a){throw a}});e.push(o)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await kh(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Mx(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:n,customUniformLocations:o,infLoc:s,nanLoc:a,inShapesLocations:i,inTexShapesLocations:u,outShapeLocation:l,outShapeStridesLocation:p,outTexShapeLocation:m}=YN(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=n,e.customUniformLocations=o,e.infLoc=s,e.nanLoc=a,e.inShapesLocations=i,e.inTexShapesLocations=u,e.outShapeLocation=l,e.outShapeStridesLocation=p,e.outTexShapeLocation=m}}},Cf=gD;Cf.nextDataId=0;function Aae(r,t){if(t==="float32"||t==="complex64")return r;if(t==="int32"||t==="bool"){let e=t==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let n=0;n<e.length;++n)e[n]=Math.round(r[n]);return e}else throw new Error(`Unknown dtype ${t}`)}var wae="0.0.0";function Ez(){$().set("WEBGL_FORCE_F16_TEXTURES",!0)}Qu.isBrowser()&&tp("webgl",()=>new Cf,2);var S8t={forceHalfFloat:Ez};var oI=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var as=class{constructor(t,e,n){this.variableNames=["A","B"];this.outputShape=C.assertAndGetBroadcastShape(e,n),this.enableShapeUniforms=Nt(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var Fp=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;var ea=class{constructor(t,e,n,o=!1){this.variableNames=["A","B"];this.supportsBroadcasting=!0;this.packedInputs=!0;this.packedOutput=!0;this.outputShape=C.assertAndGetBroadcastShape(e,n);let s=this.outputShape.length;this.enableShapeUniforms=Nt(s);let a="";if(o)if(s===0||y.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Ve(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let u=or("coords",s);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function sr(r){let{inputs:t,backend:e}=r,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var Lz={kernelName:Vn,backendName:"webgl",kernelFunc:sr};function On(r){let{inputs:t,backend:e}=r,{real:n,imag:o}=t,s=e.makeTensorInfo(n.shape,"complex64"),a=e.texData.get(s.dataId),i=sr({inputs:{x:n},backend:e}),u=sr({inputs:{x:o},backend:e});return a.complexTensorInfos={real:i,imag:u},s}var _z={kernelName:Eu,backendName:"webgl",kernelFunc:On};var bD="return (a < 0.) ? b * a : a;",yD=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Nae(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{alpha:s}=n,a=e.makeTensorInfo([],"float32",y.createScalarValue(s,"float32")),i=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ea(yD,o.shape,a.shape):new as(bD,o.shape,a.shape),u=e.runWebGLProgram(i,[o,a],"float32");return e.disposeIntermediateTensorInfo(a),u}var $z={kernelName:vo,backendName:"webgl",kernelFunc:Nae};var TD="return (a < 0.) ? b * a : a;",xD=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Dae(r){let{inputs:t,backend:e}=r,{x:n,alpha:o}=t,s=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ea(xD,n.shape,o.shape):new as(TD,n.shape,o.shape);return e.runWebGLProgram(s,[n,o],"float32")}var Bz={kernelName:$o,backendName:"webgl",kernelFunc:Dae};var ta="if (isnan(x)) return x;",Oz=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,zz=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Se({opSnippet:r,packedOpSnippet:t,cpuKernelImpl:e,dtype:n}){return({inputs:o,backend:s})=>{let{x:a}=o,i=s,u=n||a.dtype;if(i.shouldExecuteOnCPU([a])&&e!=null){let m=i.texData.get(a.dataId),c=e(m.values,u);return i.makeTensorInfo(a.shape,u,c)}let l=$().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,p;return l?p=new ss(a.shape,t):p=new an(a.shape,r),i.runWebGLProgram(p,[a],u)}}function dt({opSnippet:r,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:n=!1,cpuKernelImpl:o,dtype:s}){return({inputs:a,backend:i})=>{let{a:u,b:l}=a,p=i;if(n&&u.dtype==="complex64"){let f=p.texData.get(u.dataId),h=p.texData.get(l.dataId),[g,b]=[[f.complexTensorInfos.real,h.complexTensorInfos.real],[f.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(x=>{let[I,k]=x,A={dataId:I.dataId,dtype:I.dtype,shape:u.shape},R={dataId:k.dataId,dtype:k.dtype,shape:l.shape},F=new as(r,u.shape,l.shape);return p.runWebGLProgram(F,[A,R],Et(I.dtype,k.dtype))}),T=On({inputs:{real:g,imag:b},backend:p});return p.disposeIntermediateTensorInfo(g),p.disposeIntermediateTensorInfo(b),T}let m=s||Et(u.dtype,l.dtype);if((u.dtype==="string"||l.dtype==="string"||p.shouldExecuteOnCPU([u,l]))&&o!=null){let f=p.texData.get(u.dataId).values,h=p.texData.get(l.dataId).values,g=u.dtype==="string"?C.fromUint8ToStringArray(f):f,b=u.dtype==="string"?C.fromUint8ToStringArray(h):h,[T,x]=o(u.shape,l.shape,g,b,m),I=p.makeTensorInfo(x,m),k=p.texData.get(I.dataId);return k.values=T,I}let c=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,d;return c?d=new ea(t,u.shape,l.shape,e):d=new as(r,u.shape,l.shape),p.runWebGLProgram(d,[u,l],m)}}function ku(r,t=!1){if(r==="linear")return t?Dz:kz;if(r==="relu")return t?Fz:vz;if(r==="elu")return t?Rz:Sz;if(r==="relu6")return t?Pz:Az;if(r==="prelu")return t?xD:TD;if(r==="leakyrelu")return t?yD:bD;if(r==="sigmoid")return t?Mz:wz;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var kf=class{constructor(t,e,n,o=!1,s=!1,a=!1,i=null,u=!1,l=!1){this.variableNames=["matrixA","matrixB"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=n,this.enableShapeUniforms=Nt(this.outputShape.length);let p=o?t[1]:t[2],m=Math.ceil(p/2),c=o?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",f=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",b="";i&&(u?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,b="result = activation(result);");let T=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",I="rc.x";t[0]<e[0]?x=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(I=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${m}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${m}; i++) {
          int batchA = ${x};
          int batchB = ${I};
          vec4 a = getMatrixA(batchA, ${c});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${h[0]});
          result += (${f[1]} * ${h[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${T}

        ${b}

        setOutput(result);
      }
    `}};var ID={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},lg=class{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.outputShape=C.assertAndGetBroadcastShape(e,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var Gz="return a * b;";function mg(r){let{inputs:t,backend:e}=r,{a:n,b:o}=t,s=C.upcastType(n.dtype,o.dtype);if(n.dtype==="complex64"){let i=e.texData.get(n.dataId),u=e.texData.get(o.dataId),l=new lg(ID.REAL,n.shape,o.shape),p=new lg(ID.IMAG,n.shape,o.shape),m=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:n.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:o.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:o.shape}],c=e.runWebGLProgram(l,m,"float32"),d=e.runWebGLProgram(p,m,"float32"),f=On({inputs:{real:c,imag:d},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),f}if(e.shouldExecuteOnCPU([n,o])){let i=e.texData.get(n.dataId),u=e.texData.get(o.dataId),[l,p]=ZO(n.shape,o.shape,i.values,u.values,s),m=e.makeTensorInfo(p,s),c=e.texData.get(m.dataId);return c.values=l,m}let a;return $().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new ea(Gz,n.shape,o.shape):a=new as(Gz,n.shape,o.shape),e.runWebGLProgram(a,[n,o],s)}var Uz={kernelName:Eo,backendName:"webgl",kernelFunc:mg};function Wz(r,t,e){let n=[Iu(r.shape),...Cu(r.shape)],o={dtype:r.dtype,shape:n,dataId:r.dataId},s=[Iu(t),...Cu(t)],a=new If(s,n),i=!0,u=[n],l=e.runWebGLProgram(a,[o],r.dtype,u,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}function ie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{shape:s}=n,a=e,i=y.sizeFromShape(o.shape),u=y.inferFromImplicitShape(s,i),l=y.sizeFromShape(u);y.assert(i===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let p=a.texData.get(o.dataId);return p.isPacked&&!Rp(o.shape,u)&&!(p.texture!==null&&Rp(p.shape,u))?Wz(o,u,a):(a.incRef(o.dataId),{dataId:o.dataId,shape:u,dtype:o.dtype})}var Kz={kernelName:xs,backendName:"webgl",kernelFunc:ie};var cg=class{constructor(t,e){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=t;this.outputShape=[o,a];let i=Math.floor(n/4)*4,u=n%4,l="sumValue += dot(values, ones);";if(e!=null){let m=1/e;l=`sumValue += dot(values * ${y.isInt(m)?m.toPrecision(2):m}, ones);`}let p="";s%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}};var sI=class{constructor(t,e){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=t;this.outputShape=[o,a];let i="0.0",u="";e==="prod"?i="1.0":e==="min"?(i="1.0 / 1e-20",u="min"):e==="max"&&(i="-1.0 / 1e-20",u="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?l="sumValue":e==="prod"?l="prodValue":e==="all"?l="allValue":e==="any"&&(l="anyValue");let p=Math.floor(n/4)*4,m=n%4,c=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";e==="all"?(i="1.0",c=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):e==="any"&&(i="0.0",c=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${p};
        if (${m===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${c}
        }
        setOutput(${l});
      }
    `}};function Fae(r){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let e=t.length?t[t.length-1].outSize:r[1],n=C.computeOptimalWindowSize(e);t.push({inSize:e,windowSize:n,outSize:Math.ceil(e/n)})}return t}function eo(r,t,e,n){let o=Fae(r.shape),s=r;for(let a=0;a<o.length;a++){let{inSize:i,windowSize:u,outSize:l}=o[a],p,m;e==="mean"?p=a===0?new cg({windowSize:u,inSize:i,batchSize:r.shape[0],outSize:l},i):new cg({windowSize:u,inSize:i,batchSize:r.shape[0],outSize:l}):p=new sI({windowSize:u,inSize:i,batchSize:r.shape[0],outSize:l},e),m=s,s=n.runWebGLProgram(p,[s],t),m.dataId!==r.dataId&&n.disposeIntermediateTensorInfo(m)}return s}var aI=class{constructor(t,e){this.variableNames=["A"];let n=new Array(t.length);for(let a=0;a<n.length;a++)n[a]=t[e[a]];this.outputShape=n,this.rank=n.length;let o=Ve(this.rank),s=Pae(e);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function Pae(r){let t=r.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(t);for(let o=0;o<r.length;o++)n[r[o]]=e[o];return n.join()}var iI=class{constructor(t,e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;let n=new Array(t.length);for(let p=0;p<n.length;p++)n[p]=t[e[p]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let o=Ve(this.rank),s=fD("rc",this.rank),a=new Array(this.rank);for(let p=0;p<e.length;p++)a[e[p]]=s[p];let i=`vec2(${a.slice(-2).join()})`,u=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${u}) {
        result[1] = ${l};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${u}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function Pp(r,t,e){let n=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iI(r.shape,t):new aI(r.shape,t);return e.runWebGLProgram(n,[r],r.dtype)}function Vz(r,t,e,n){let o=t,s=r.shape.length,a=y.parseAxisParam(o,r.shape),i=a,u=C.getAxesPermutation(i,s),l=u!=null,p=r;l&&(p=Pp(r,u,n),i=C.getInnerMostAxes(i.length,s)),C.assertAxesAreInnerMostDims("sum",i,s);let[m,c]=C.computeOutAndReduceShapes(p.shape,i),d=m;e&&(d=C.expandShapeToKeepDim(m,a));let f=y.sizeFromShape(c),g=y.sizeFromShape(r.shape)/f,b=ie({inputs:{x:p},attrs:{shape:[g,f]},backend:n}),T=tu(r.dtype),x=eo(b,T,"sum",n),I=ie({inputs:{x},attrs:{shape:d},backend:n});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x),l&&n.disposeIntermediateTensorInfo(p),I}function Zl(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;return Vz(o,s,a,e)}var Hz={kernelName:qo,backendName:"webgl",kernelFunc:Zl};function Kt(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{perm:s}=n,a=e,i=o.shape.length,u=new Array(i);for(let p=0;p<u.length;p++)u[p]=o.shape[s[p]];let l;if(a.shouldExecuteOnCPU([o])){let m=a.texData.get(o.dataId).values,c=Xl(m,o.shape,o.dtype,s,u);l=a.makeTensorInfo(u,o.dtype);let d=a.texData.get(l.dataId);d.values=c}else l=Pp(o,s,a);return l}var qz={kernelName:Rn,backendName:"webgl",kernelFunc:Kt};var CD=1e3;function Ql({a:r,b:t,transposeA:e,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){let l=r.shape.length,p=t.shape.length,m=e?r.shape[l-2]:r.shape[l-1],c=n?t.shape[p-1]:t.shape[p-2],d=e?r.shape[l-1]:r.shape[l-2],f=n?t.shape[p-2]:t.shape[p-1],h=r.shape.slice(0,-2),g=t.shape.slice(0,-2),b=y.sizeFromShape(h),T=y.sizeFromShape(g),I=wr.assertAndGetBroadcastShape(r.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);y.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${t.shape} and transposeA=${e} and transposeB=${n} must match.`);let k=e?[b,m,d]:[b,d,m],A=n?[T,f,c]:[T,c,f],R=ie({inputs:{x:r},backend:o,attrs:{shape:k}}),F=ie({inputs:{x:t},backend:o,attrs:{shape:A}}),P=[R,F],L=Math.max(b,T),O=e?R.shape[1]:R.shape[2],G=s!=null,W=a!=null,H=u==="leakyrelu",V=u!=null?ku(u,!0):null,q=G||W||H||V!=null,Z;if((d===1||f===1)&&O>CD&&q===!1){let Y=R,se=F;e&&(Y=Kt({inputs:{x:R},backend:o,attrs:{perm:[0,2,1]}}),P.push(Y)),n&&(se=Kt({inputs:{x:F},backend:o,attrs:{perm:[0,2,1]}}),P.push(se));let ae=f!==1,pe=f===1,oe=Y;ae&&(oe=ie({inputs:{x:Y},backend:o,attrs:{shape:[L,O,1]}}),P.push(oe));let ge=f===1?2:1,fe=se;pe&&(fe=ie({inputs:{x:se},backend:o,attrs:{shape:[L,1,O]}}),P.push(fe));let ue=mg({inputs:{a:oe,b:fe},backend:o});Z=Zl({inputs:{x:ue},backend:o,attrs:{axis:ge,keepDims:!0}}),P.push(ue)}else{let Y=Et(r.dtype,t.dtype),se=new kf(k,A,[L,d,f],e,n,G,V,W,H),ae=[R,F];if(s!=null&&ae.push(s),W&&ae.push(a),H){let pe=o.makeTensorInfo([],"float32",y.createScalarValue(i,"float32"));ae.push(pe),P.push(pe)}Z=o.runWebGLProgram(se,ae,Y)}let j=ie({inputs:{x:Z},backend:o,attrs:{shape:I}});P.push(Z);for(let Y of P)o.disposeIntermediateTensorInfo(Y);return j}function Mae(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=t,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:m}=n;return Ql({a:o,b:s,transposeA:u,transposeB:l,backend:e,bias:a,preluActivationWeights:i,leakyreluAlpha:m,activation:p})}var jz={kernelName:Ns,backendName:"webgl",kernelFunc:Mae};var Xz="return abs(x);";function Eae(r){let{inputs:t,backend:e}=r,{x:n}=t;if(e.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=e.texData.get(n.dataId),a=Qx(s.values);return e.makeTensorInfo(n.shape,n.dtype,a)}let o;return $().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new ss(n.shape,Xz):o=new an(n.shape,Xz),e.runWebGLProgram(o,[n],n.dtype)}var Yz={kernelName:cs,backendName:"webgl",kernelFunc:Eae};var Lae=Ir+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,_ae=Se({opSnippet:Lae}),Zz={kernelName:Mi,backendName:"webgl",kernelFunc:_ae};var $ae=Ir+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Bae=Se({opSnippet:$ae}),Qz={kernelName:Ei,backendName:"webgl",kernelFunc:Bae};var Jz="return a + b;",Oae=dt({opSnippet:Jz,packedOpSnippet:Jz,supportsComplex:!0,cpuKernelImpl:FO}),e3={kernelName:Nn,backendName:"webgl",kernelFunc:Oae};var uI=class{constructor(t,e){this.outputShape=[];this.outputShape=t,this.variableNames=e.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}};var pI=class{constructor(t,e){this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=t,this.variableNames=e.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}};function lI(r){let{inputs:t,backend:e}=r,n=t;if(n.length===1)return sr({inputs:{x:n[0]},backend:e});if(n.length>$().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(n.length/2),l=lI({inputs:n.slice(0,u),backend:e}),p=lI({inputs:n.slice(u),backend:e});return lI({inputs:[l,p],backend:e})}let o=n.map(u=>u.dtype).reduce((u,l)=>Et(u,l)),s=n.map(u=>u.shape),i=$().getBool("WEBGL_PACK")?new pI(n[0].shape,s):new uI(n[0].shape,s);return e.runWebGLProgram(i,n,o)}var t3={kernelName:ao,backendName:"webgl",kernelFunc:lI};function zae(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n,i=o.shape.length,u=y.parseAxisParam(s,o.shape),l=u,p=C.getAxesPermutation(l,i),m=o;p!=null&&(m=Kt({inputs:{x:o},backend:e,attrs:{perm:p}}),l=C.getInnerMostAxes(l.length,i)),C.assertAxesAreInnerMostDims("all",l,i);let[c,d]=C.computeOutAndReduceShapes(m.shape,l),f=y.sizeFromShape(d),h=ie({inputs:{x:m},backend:e,attrs:{shape:[-1,f]}}),g=eo(h,h.dtype,"all",e),b;if(a){let T=C.expandShapeToKeepDim(c,u);b=ie({inputs:{x:g},backend:e,attrs:{shape:T}})}else b=ie({inputs:{x:g},backend:e,attrs:{shape:c}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(g),p!=null&&e.disposeIntermediateTensorInfo(m),b}var r3={kernelName:Li,backendName:"webgl",kernelFunc:zae};function Gae(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n,i=o.shape.length,u=y.parseAxisParam(s,o.shape),l=u,p=C.getAxesPermutation(l,i),m=o;p!=null&&(m=Kt({inputs:{x:o},backend:e,attrs:{perm:p}}),l=C.getInnerMostAxes(l.length,i)),C.assertAxesAreInnerMostDims("any",l,i);let[c,d]=C.computeOutAndReduceShapes(m.shape,l),f=y.sizeFromShape(d),h=ie({inputs:{x:m},backend:e,attrs:{shape:[-1,f]}}),g=eo(h,h.dtype,"any",e),b;if(a){let T=C.expandShapeToKeepDim(c,u);b=ie({inputs:{x:g},backend:e,attrs:{shape:T}})}else b=ie({inputs:{x:g},backend:e,attrs:{shape:c}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(g),p!=null&&e.disposeIntermediateTensorInfo(m),b}var n3={kernelName:_i,backendName:"webgl",kernelFunc:Gae};var mI=class{constructor(t,e,n){this.variableNames=["A"];let{windowSize:o,batchSize:s,outSize:a}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];let i=e==="max"?">":"<",u=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var cI=class{constructor(t,e,n,o){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;y.assert(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=t[t.length-1],a=Math.ceil(s/e);this.outputShape=t.slice(0,-1),a>1&&this.outputShape.push(a),o||this.variableNames.push("bestIndicesA");let i=this.outputShape,u=i.length,l=Ve(u),p=or("coords",u),m,c;if(a===1){c=u+1;let F=Ve(c);m=`
        ${F} sourceLocR = ${F}(${p.join()}, 0);
        ++${p[u-1]};
        ${F} sourceLocG = ${F}(${p.join()}, 0);
        ++${p[u-2]};
        ${F} sourceLocA = ${F}(${p.join()}, 0);
        --${p[u-1]};
        ${F} sourceLocB = ${F}(${p.join()}, 0);
        --${p[u-2]};`}else c=u,m=`
        ${l} sourceLocR = coords;
        ++${p[u-1]};
        ${l} sourceLocG = coords;
        ++${p[u-2]};
        ${l} sourceLocA = coords;
        --${p[u-1]};
        ${l} sourceLocB = coords;
        --${p[u-2]};`;let d=["x","y","z","w","u","v"].slice(0,c),f="."+d[c-1],h=d.map(F=>"int "+F),g=or("sourceLocR",c-1).concat("inIdx.r"),b=or("sourceLocG",c-1).concat("inIdx.g"),T=or("sourceLocB",c-1).concat("inIdx.b"),x=or("sourceLocA",c-1).concat("inIdx.a"),I=n==="max"?"greaterThan":"lessThan",k=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${T.join()}),
                             getBestIndicesAChannel(${x.join()})));`,A=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${b.join()}) : 0.,
            hasNextRow ? getAChannel(${T.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,R=o?"":`
      float getBestIndicesAChannel(${h.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${h.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${R}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${p[u-1]} < ${i[u-1]-1};
        bool hasNextRow = ${p[u-2]} < ${i[u-2]-1};
        ${m}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${A};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${k}
          vec4 candidate = ${A};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${I}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function o3(r,t,e,n=null){let o=t.shape[0],s=t.shape[1];n!=null&&(o=n.shape[0],s=n.shape[1]);let a=C.computeOptimalWindowSize(s),i={windowSize:a,inSize:s,batchSize:o,outSize:Math.ceil(s/a)},u=new mI(i,e,n==null),l=[t];n!=null&&l.push(n);let p=r.runWebGLProgram(u,l,"int32");if(p.shape[1]===1)return p;let m=o3(r,t,e,p);return r.disposeIntermediateTensorInfo(p),m}function s3(r,t,e,n=null){let o=n!=null?n.shape:t.shape,s=o[o.length-1],a=C.computeOptimalWindowSize(s),i=new cI(o,a,e,n==null),u=n==null?[t]:[t,n],l=r.runWebGLProgram(i,u,"int32");if(l.shape.length===t.shape.length){let p=s3(r,t,e,l);return r.disposeIntermediateTensorInfo(l),p}return l}function dI(r,t,e,n){let o=[e];if(C.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,t.shape.length),!$().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],a=r.texData.get(t.dataId),i=a!==null&&a.isPacked,u=t;i&&(u=r.unpackTensor(t),s.push(u));let[l,p]=C.computeOutAndReduceShapes(u.shape,o),m=y.sizeFromShape(p),c=ie({inputs:{x:u},backend:r,attrs:{shape:[-1,m]}});s.push(c);let d=o3(r,c,n);s.push(d);let f=ie({inputs:{x:d},backend:r,attrs:{shape:l}});return s.forEach(h=>r.disposeIntermediateTensorInfo(h)),f}return s3(r,t,n)}function Uae(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Kt({inputs:{x:o},backend:e,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMax",[a[0]],u.shape.length);let p=dI(e,u,a[0],"max");return l.forEach(m=>e.disposeIntermediateTensorInfo(m)),p}var a3={kernelName:io,backendName:"webgl",kernelFunc:Uae};function Wae(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Kt({inputs:{x:o},backend:e,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMin",[a[0]],u.shape.length);let p=dI(e,u,a[0],"min");return l.forEach(m=>e.disposeIntermediateTensorInfo(m)),p}var i3={kernelName:mi,backendName:"webgl",kernelFunc:Wae};var Kae=Ir+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Vae=Se({opSnippet:Kae}),u3={kernelName:$i,backendName:"webgl",kernelFunc:Vae};var Hae=Ir+"return log(x + sqrt(x * x + 1.0));",qae=Se({opSnippet:Hae}),p3={kernelName:Bi,backendName:"webgl",kernelFunc:qae};var jae=Ir+`
  return atan(x);
`,Xae=Se({opSnippet:jae}),l3={kernelName:Oi,backendName:"webgl",kernelFunc:Xae};var Yae=Oz+`
  return atan(a, b);
`,Zae=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+zz+`
  return result;
`,Qae=dt({opSnippet:Yae,packedOpSnippet:Zae}),m3={kernelName:la,backendName:"webgl",kernelFunc:Qae};var Jae=Ir+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,eie=Se({opSnippet:Jae}),c3={kernelName:zi,backendName:"webgl",kernelFunc:eie};var ri=class{constructor(t,e,n,o=!1,s=!1){this.variableNames=["x"];if(e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=t.filterWidth,i=t.strideHeight,u=t.strideWidth,l=t.dilationHeight,p=t.dilationWidth,m=t.effectiveFilterHeight,c=t.effectiveFilterWidth,d=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;let h=e==="avg",g=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,b=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`,T="0.0";if(h||(T="-1.0 / 1e-20"),n){let F=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${u});
        const ivec2 pads = ivec2(${d}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${m};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${c};
                wC += ${p}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${F} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?s?g:b:`wR * ${c} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",I=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(I="avgValue / count");let k=Math.floor(a/4)*4,A=a%4,R=`
      if (${h}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${u});
      const ivec2 pads = ivec2(${d}, ${f});
      const float initializationValue = ${T};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${T});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${m};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${k}; wC += 4) {
            int xC = xCCorner + wC * ${p};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              getValue(batch, xR, xC + 3 * ${p}, d)
            );

            ${R}
          }

          int xC = xCCorner + ${k};
          if (${A===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${R}
          } else if (${A===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              initializationValue,
              initializationValue
            );

            ${R}
          } else if (${A===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              initializationValue
            );

            ${R}
          }
        }
        setOutput(${I});
      }
    `}},Mp=class{constructor(t,e,n,o=!1,s=!1){this.variableNames=["x"];if(e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=t.filterWidth,i=t.strideDepth,u=t.strideHeight,l=t.strideWidth,p=t.dilationDepth,m=t.dilationHeight,c=t.dilationWidth,d=t.effectiveFilterDepth,f=t.effectiveFilterHeight,h=t.effectiveFilterWidth,g=t.padInfo.front,b=t.padInfo.top,T=t.padInfo.left;this.outputShape=t.outShape;let x=e==="avg",I="0.0";if(x||(I="-1.0 / 1e-20"),n){let L=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${u}, ${l});
        const ivec3 pads = ivec3(${g}, ${b}, ${T});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${p}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${m}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${h};
                  wC += ${c}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${L} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${h} +
                      wR * ${h} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let k="max",A=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(A="avgValue / count");let R=Math.floor(a/4)*4,F=a%4,P=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${k}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${u}, ${l});
      const ivec3 pads = ivec3(${g}, ${b}, ${T});
      const float initializationValue = ${I};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${I});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${p}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${m}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${R}; wC += 4) {
              int xC = xCCorner + wC * ${c};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                getValue(batch, xD, xR, xC + 3 * ${c}, ch)
              );

              ${P}
            }

            int xC = xCCorner + ${R};
            if (${F===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${P}
            } else if (${F===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                initializationValue,
                initializationValue
              );

              ${P}
            } else if (${F===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                initializationValue
              );

              ${P}
            }
          }
          setOutput(${A});
        }
      }
    `}};function tie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;ei(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;y.assert(C.eitherStridesOrDilationsAreOne(a,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=C.computePool2DInfo(o.shape,s,a,l,i,u);if(p.filterWidth===1&&p.filterHeight===1&&y.arraysEqual(p.inShape,p.outShape))return sr({inputs:{x:o},backend:e});let m=new ri(p,"avg",!1);return e.runWebGLProgram(m,[o],"float32")}var d3={kernelName:uo,backendName:"webgl",kernelFunc:tie};function rie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=n,p=[1,1,1],m=C.computePool3DInfo(o.shape,s,a,p,i,u,l),c=new Mp(m,"avg",!1);return e.runWebGLProgram(c,[o],"float32")}var f3={kernelName:Mu,backendName:"webgl",kernelFunc:rie};var fI=class{constructor(t){this.variableNames=["dy"];this.outputShape=t.inShape;let e=t.filterHeight,n=t.filterWidth,o=t.strideHeight,s=t.strideWidth,a=t.dilationHeight,i=t.dilationWidth,u=t.effectiveFilterHeight,l=t.effectiveFilterWidth,p=u-1-t.padInfo.top,m=l-1-t.padInfo.left,c=1/(e*n);this.userCode=`
      const ivec2 pads = ivec2(${p}, ${m});
      const float avgMultiplier = float(${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},hI=class{constructor(t){this.variableNames=["dy"];this.outputShape=t.inShape;let e=t.filterDepth,n=t.filterHeight,o=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,u=t.dilationDepth,l=t.dilationHeight,p=t.dilationWidth,m=t.effectiveFilterDepth,c=t.effectiveFilterHeight,d=t.effectiveFilterWidth,f=m-1-t.padInfo.front,h=c-1-t.padInfo.top,g=d-1-t.padInfo.left,b=1/(e*n*o);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${h}, ${g});
      const float avgMultiplier = float(${b});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${m};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${p}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function nie(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,a=s,{filterSize:i,strides:u,pad:l,dimRoundingMode:p}=n,m=[1,1,1],c=C.computePool3DInfo(a.shape,i,u,m,l,p),d=new hI(c);return e.runWebGLProgram(d,[o],a.dtype)}var h3={kernelName:Im,backendName:"webgl",kernelFunc:nie};function oie(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,a=s;ei([o,s],"avgPoolGrad");let{filterSize:i,strides:u,pad:l}=n,p=C.computePool2DInfo(a.shape,i,u,1,l),m=new fI(p);return e.runWebGLProgram(m,[o],a.dtype)}var g3={kernelName:xm,backendName:"webgl",kernelFunc:oie};function sie(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s}=t,{transposeA:a,transposeB:i}=n;return Ql({a:o,b:s,transposeA:a,transposeB:i,backend:e})}var b3={kernelName:po,backendName:"webgl",kernelFunc:sie};var gI=class{constructor(t,e,n,o,s,a){this.outputShape=[];this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(t,e),C.assertAndGetBroadcastShape(t,n);let i="0.0";o!=null&&(C.assertAndGetBroadcastShape(t,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";s!=null&&(C.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var bI=class{constructor(t,e,n,o,s,a){this.packedInputs=!0;this.packedOutput=!0;this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(t,e),C.assertAndGetBroadcastShape(t,n);let i="vec4(0.0)";o!=null&&(C.assertAndGetBroadcastShape(t,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";s!=null&&(C.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var aie=({inputs:r,backend:t,attrs:e})=>{let{x:n,mean:o,variance:s,offset:a,scale:i}=r;y.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=e;u==null&&(u=.001);let l=[n,o,s],p=null;a!=null&&(p=a.shape,l.push(a));let m=null;i!=null&&(m=i.shape,l.push(i));let c=$().getBool("WEBGL_PACK_NORMALIZATION")?new bI(n.shape,o.shape,s.shape,p,m,u):new gI(n.shape,o.shape,s.shape,p,m,u);return t.runWebGLProgram(c,l,l[0].dtype)},y3={kernelName:ko,backendName:"webgl",kernelFunc:aie};var yI=class{constructor(t){this.variableNames=["source"];this.outputShape=t,this.rank=t.length;let e=Ve(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=iie(this.rank),o,s=t.map((a,i)=>`sourceLoc.${kD[i]} = start[${i}] + coords.${kD[i]};`);o=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${n}));
      }
    `}},kD=["x","y","z","w","u","v"];function iie(r){if(r===1)return"sourceLoc";if(r<=6)return kD.slice(0,r).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var TI=class{constructor(t){this.variableNames=["source"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let e=Ve(this.rank),n=or("coords",this.rank),o=or("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,a=`getChannel(getSource(${o.join()}), ${s})`,i=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${a};
        --${o[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((p,m)=>`start[${m}]`).join()});`:t.map((p,m)=>`${o[m]} = ${n[m]} + start[${m}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${u}
        setOutput(result);
      }
    `}};function uie(r,t,e,n){let o=n.texData.get(r.dataId),s=n.makeTensorInfo(e,r.dtype),a=n.texData.get(s.dataId);Object.assign(a,o),a.refCount=1,a.shape=e,a.dtype=r.dtype;let i=xt.computeFlatOffset(t,y.computeStrides(r.shape));o.slice&&(i+=o.slice.flatOffset),a.slice={flatOffset:i,origDataId:o.slice&&o.slice.origDataId||r.dataId};let u=n.dataRefCount.get(a.slice.origDataId)||1;return n.dataRefCount.set(a.slice.origDataId,u+1),s}function ni(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,size:a}=n,[i,u]=xt.parseSliceParams(o,s,a);if(xt.assertParamsValid(o,i,u),y.sizeFromShape(u)===0)return e.makeTensorInfo(u,o.dtype,[]);if(e.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=e.texData.get(o.dataId),c=iz(m.values,i,u,o.shape,o.dtype);return e.makeTensorInfo(u,o.dtype,c)}let{isPacked:l}=e.texData.get(o.dataId),p=xt.isSliceContinous(o.shape,i,u);if(l||!p){let m=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new TI(u):new yI(u),c=[i];return e.runWebGLProgram(m,[o],o.dtype,c)}return e.uploadToGPU(o.dataId),uie(o,i,u,e)}var T3={kernelName:Cs,backendName:"webgl",kernelFunc:ni};var pie=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,crops:a}=n;y.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((T,x)=>T*x),u=C.getReshaped(o.shape,s,i),l=C.getPermuted(u.length,s.length),p=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(p,a,s.length),d=[],f=ie({inputs:{x:o},backend:e,attrs:{shape:u}}),h=Kt({inputs:{x:f},backend:e,attrs:{perm:l}}),g=ie({inputs:{x:h},backend:e,attrs:{shape:p}}),b=ni({inputs:{x:g},backend:e,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(T=>e.disposeIntermediateTensorInfo(T)),b},x3={kernelName:ds,backendName:"webgl",kernelFunc:pie};function lie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:a}=n,i=e.readSync(o.dataId),u=e.readSync(s.dataId),l=Zx(i,u,s.dtype,s.shape,a);return e.makeTensorInfo([a],s.dtype,l)}var I3={kernelName:Cm,backendName:"webgl",kernelFunc:lie};function mie(r){let{inputs:t,backend:e}=r,{s0:n,s1:o}=t,s=e.readSync(n.dataId),a=e.readSync(o.dataId),i=C.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return e.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var C3={kernelName:km,backendName:"webgl",kernelFunc:mie};var cie="return float(a != b);",SD=dt({opSnippet:cie,cpuKernelImpl:JO,dtype:"bool"}),k3={kernelName:Sa,backendName:"webgl",kernelFunc:SD};function Su(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.texData.get(n.dataId);return sr({inputs:{x:o.complexTensorInfos.real},backend:e})}var S3={kernelName:Uu,backendName:"webgl",kernelFunc:Su};var die="return float(int(x));";function v3(r,t){let e=new an(r.shape,die),n=t.runWebGLProgram(e,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function vD(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return sr({inputs:{x:o},backend:e});let a=It(o.shape),i=vD({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),u=On({inputs:{real:i,imag:a},backend:e});return a.dispose(),e.disposeIntermediateTensorInfo(i),u}if(o.dtype==="complex64"){let a=Su({inputs:{input:o},backend:e}),i=vD({inputs:{x:a},backend:e,attrs:{dtype:s}});return e.disposeIntermediateTensorInfo(a),i}if(!y.hasEncodingLoss(o.dtype,s)){let a=sr({inputs:{x:o},backend:e});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(e.shouldExecuteOnCPU([o])){let a=e.texData.get(o.dataId).values,[i,u,l]=MO(a,o.shape,o.dtype,s);return e.makeTensorInfo(i,u,l)}if(s==="int32")return v3(o,e);if(s==="bool"){let a=e.makeTensorInfo([],"bool",y.getTypedArrayFromDType("bool",1)),u=SD({inputs:{a:o,b:a},backend:e});return e.disposeIntermediateTensorInfo(a),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var A3={kernelName:Wn,backendName:"webgl",kernelFunc:vD};var w3="return ceil(x);",fie=Se({opSnippet:w3,packedOpSnippet:w3,cpuKernelImpl:EO}),N3={kernelName:lo,backendName:"webgl",kernelFunc:fie};var xI=class{constructor(t){this.variableNames=["A"];this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var II=class{constructor(t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function hie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{clipValueMin:s,clipValueMax:a}=n,i;$().getBool("WEBGL_PACK_CLIP")?i=new II(o.shape):i=new xI(o.shape);let u=[[s],[a]];return e.runWebGLProgram(i,[o],o.dtype,u)}var D3={kernelName:Kn,backendName:"webgl",kernelFunc:hie};var CI=class{constructor(t){this.variableNames=["real","imag"];this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function R3(r,t){return{dataId:t.dataId,dtype:t.dtype,shape:r.shape}}function gie(r){let{inputs:t,backend:e}=r,{x:n}=t,o=e.texData.get(n.dataId),s=new CI(n.shape),a=[R3(n,o.complexTensorInfos.real),R3(n,o.complexTensorInfos.imag)];return e.runWebGLProgram(s,a,a[0].dtype)}var F3={kernelName:Lu,backendName:"webgl",kernelFunc:gie};var kI=class{constructor(t){this.outputShape=[];this.outputShape=C.computeOutShape(t,1),this.variableNames=t.map((a,i)=>`T${i}`);let e=new Array(t.length-1);e[0]=t[0][1];for(let a=1;a<e.length;a++)e[a]=e[a-1]+t[a][1];let n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<e.length;a++){let i=e[a-1];n.push(`else if (yC < ${e[a]}) setOutput(getT${a}(yR, yC-${i}));`)}let o=e.length,s=e[e.length-1];n.push(`else setOutput(getT${o}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}};var vI=class{constructor(t,e){this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];this.outputShape=C.computeOutShape(t,e);let n=this.outputShape,o=n.length,s=Ve(o),a=or("coords",o),i=["x","y","z","w","u","v"].slice(0,o);this.variableNames=t.map((h,g)=>`T${g}`);let u=new Array(t.length-1);u[0]=t[0][e];for(let h=1;h<u.length;h++)u[h]=u[h-1]+t[h][e];let l=i[e],p=i.slice(-2),m=i.join(),c=`if (${l} < ${u[0]}) {
        return getChannel(
            getT0(${m}), vec2(${p.join()}));
        }`;for(let h=1;h<u.length;h++){let g=u[h-1];c+=`
        if (${l} < ${u[h]}  && ${l} >= ${u[h-1]}) {
          return getChannel(
            getT${h}(${SI(i,l,g)}),
            vec2(${SI(p,l,g)}));
        }`}let d=u.length,f=u[u.length-1];c+=`
        return getChannel(
          getT${d}(${SI(i,l,f)}),
          vec2(${SI(p,l,f)}));`,this.userCode=`
      float getValue(${i.map(h=>"int "+h)}) {
        ${c}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[o-1]} = ${a[o-1]} + 1;
        if (${a[o-1]} < ${n[o-1]}) {
          result.g = getValue(${a});
        }

        ${a[o-2]} = ${a[o-2]} + 1;
        if (${a[o-2]} < ${n[o-2]}) {
          result.a = getValue(${a});
        }

        ${a[o-1]} = ${a[o-1]} - 1;
        if (${a[o-2]} < ${n[o-2]} &&
            ${a[o-1]} < ${n[o-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function SI(r,t,e){let n=r.indexOf(t);return r.map((s,a)=>a===n?`${s} - ${e}`:s).join()}function Jl(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.texData.get(n.dataId);return sr({inputs:{x:o.complexTensorInfos.imag},backend:e})}var P3={kernelName:Ou,backendName:"webgl",kernelFunc:Jl};function Sf(r,t,e){let n=r[0].dtype;if(n==="complex64"){let m=r.map(g=>Su({inputs:{input:g},backend:e})),c=r.map(g=>Jl({inputs:{input:g},backend:e})),d=Sf(m,t,e),f=Sf(c,t,e),h=On({inputs:{real:d,imag:f},backend:e});return m.forEach(g=>e.disposeIntermediateTensorInfo(g)),c.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),h}let o=e.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let m=r.map(T=>{let x=y.sizeFromShape(T.shape.slice(t));return ie({inputs:{x:T},backend:e,attrs:{shape:[-1,x]}})}),c=m.map(T=>({vals:e.readSync(T.dataId),shape:T.shape})),d=C.computeOutShape(m.map(T=>T.shape),1),f=m[0].shape[0]===1,h=LO(c,d,n,f),g=C.computeOutShape(r.map(T=>T.shape),t),b=e.makeTensorInfo(g,n,h);return m.forEach(T=>e.disposeIntermediateTensorInfo(T)),b}let s=$().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>s){let m=[];for(let d=0;d<r.length;d+=s){let f=r.slice(d,d+s);m.push(Sf(f,t,e))}let c=Sf(m,t,e);for(let d of m)e.disposeIntermediateTensorInfo(d);return c}if($().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1){let m=new vI(r.map(c=>c.shape),t);return e.runWebGLProgram(m,r,n)}let{tensors2D:a,outShape:i}=bie(r,t,e),u=new kI(a.map(m=>m.shape)),l=e.runWebGLProgram(u,a,n);a.forEach(m=>e.disposeIntermediateTensorInfo(m));let p=ie({inputs:{x:l},attrs:{shape:i},backend:e});return e.disposeIntermediateTensorInfo(l),p}function bie(r,t,e){let n=C.computeOutShape(r.map(s=>s.shape),t);return{tensors2D:r.map(s=>ie({inputs:{x:s},attrs:{shape:[-1,y.sizeFromShape(s.shape.slice(t))]},backend:e})),outShape:n}}function AD(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,t[0].shape)[0],a=t.map(l=>l.shape);C.assertParamsConsistent(a,s);let i=C.computeOutShape(t.map(l=>l.shape),s);if(y.sizeFromShape(i)===0)return e.makeTensorInfo(i,t[0].dtype,[]);let u=t.filter(l=>y.sizeFromShape(l.shape)>0);return u.length===1?sr({inputs:{x:u[0]},backend:e}):Sf(u,s,e)}var M3={kernelName:fs,backendName:"webgl",kernelFunc:AD};var vf=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.outputShape=t.outShape;let a=t.padInfo.top,i=t.padInfo.left,u=t.strideHeight,l=t.strideWidth,p=t.dilationHeight,m=t.dilationWidth,c=t.filterHeight,d=t.filterWidth,f=Math.floor(t.inChannels/4)*4,h=t.inChannels%4,g=t.dataFormat==="channelsLast",b=g?1:2,T=g?2:3,x=g?3:1,I="",k="";n&&(o?I=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?I=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:I=`
          float activation(float x) {
            ${n}
          }
        `,k="result = activation(result);");let A=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${I}

      const ivec2 strides = ivec2(${u}, ${l});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${b}], coords[${T}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c}; wR++) {
          int xR = xRCorner + wR * ${p};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${m};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${h===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${h===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${h===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${A}
        ${k}
        setOutput(result);
      }
    `}},AI=class{constructor(t){this.variableNames=["x","W"];this.outputShape=t.outShape;let e=t.padInfo.front,n=t.padInfo.top,o=t.padInfo.left,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,u=t.dilationDepth,l=t.dilationHeight,p=t.dilationWidth,m=t.filterDepth,c=t.filterHeight,d=t.filterWidth,f=Math.floor(t.inChannels/4)*4,h=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${a}, ${i});
      const ivec3 pads = ivec3(${e}, ${n}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${m}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${p};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${h===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${h===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${h===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var Af=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=t.outShape,this.enableShapeUniforms=Nt(this.outputShape.length);let a=t.padInfo.left,i=t.strideWidth,u=t.dilationWidth,l=t.filterHeight,p=t.filterWidth,m=p,c=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<p;g++)c+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;c+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let g=0;g<p;g++)c+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;c+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(m+1)/2;g++){let b=g*2;if(c+=`
           xC = xCCorner + ${b*u};
           `,i===1){if(b<p&&(a%2===1?(c+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }
               `,u===1&&b>0?c+=`
                 xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                 `:c+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                   } else {
                     xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                   }
                   `):c+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xC${b} = xTexelC${b};
                 `,b+1<p)){let T=a%2===0?y.nearestLargerEven(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(c+=`
                   xCOffset = xC + imod(pads[1], 2) + ${T};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                     xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${b+1}.zw = vec2(0.0);
                     }
                     xTexelC${b+1}Ready = 1;
                   }
                   `,u>1?c+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                     } else {
                      xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                     }
                     `:c+=`
                     xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                     `):T===1?c+=`
                     xC${b+1} = xTexelC${b};
                     `:c+=`
                     xCOffset = xC + ${T};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                       xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${b+1}.zw = vec2(0.0);
                       }
                       xTexelC${b+1}Ready = 1;
                     }

                     xC${b+1} = xTexelC${b+1};
                     `}}else b<p&&(a%2===1?(c+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.0);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
               `,b+1<p&&(c+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                 `)):(c+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(
                   xTexelC${b}.xy, xTexelC${b+1}.xy);
               `,b+1<p&&(c+=`
                   xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                 `)));b<p&&(c+=`
             wTexel = getW(r, ${b}, d1, d2);
             dotProd += xC${b}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${b}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,b+1<p&&(c+=`
               wTexel = getW(r, ${b+1}, d1, d2);
               dotProd += xC${b+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${b+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}c+=`
     }
   `,c+=`
     }
   `,c+=`
     }
   `;let d="",f="";n&&(o?d=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:s?d=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:d=`vec4 activation(vec4 x) {
           ${n}
         }`,f="result = activation(result);");let h=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${d}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${c}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${h}
         ${f}
         setOutput(result);
       }
     `}};var wI=class{constructor(t,e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}];this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length);let{dataFormat:n}=e,o=Zt(),s=n==="channelsLast",a=s?1:2,i=s?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`,l="";for(let p=0;p<=1;p++)for(let m=0;m<=1;m++)l+=`
          blockIndex = rc.z + ${m};
          pos = rc.y + ${p};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${p*2+m}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${p*2+m}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${o.output} = result;
      }
    `}};function NI(r,t){let e=r.length;return e>=3?t?[...r.slice(0,-3),r[e-3]*r[e-2],r[e-1]]:[...r.slice(0,-3),r[e-3],r[e-2]*r[e-1]]:!t&&e===1&&r[0]>1?[r[0],1]:null}function DI({x:r,filter:t,convInfo:e,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let u=r.shape,l=n.texData.get(r.dataId),p=e.inChannels,m=u[0]*u[1]*u[2],c=e.outChannels,d=e.dataFormat==="channelsLast",f=!1,h=!1,g,b=[];if(s!=null){let I=NI(s.shape,d);I!=null&&(s=ie({inputs:{x:s},backend:n,attrs:{shape:I}}),b.push(s))}if(o!=null){let I=NI(o.shape,d);I!=null&&(o=ie({inputs:{x:o},backend:n,attrs:{shape:I}}),b.push(o))}if(!((m===1||c===1)&&p>CD)&&l.isPacked&&d&&l.texture!=null&&u[2]%2!==0&&y.arraysEqual(l.shape.slice(-3),u.slice(-3))){let I=u[0]*u[1]*(u[2]+1),k={dataId:r.dataId,shape:[1,I,e.inChannels],dtype:r.dtype},A=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,y.assert(Rp(l.shape,k.shape),()=>`packed reshape ${l.shape} to ${k.shape} isn't free`);let R=ie({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}});b.push(R);let F=Ql({a:k,b:R,backend:n,transposeA:f,transposeB:h,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),P=n.texData.get(F.dataId);y.assert(P.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=A,P.shape=e.outShape,g=sr({inputs:{x:F},backend:n}),g.shape=e.outShape,b.push(F)}else{let I=e.outHeight*e.outWidth,k=ie({inputs:{x:r},backend:n,attrs:{shape:d?[e.batchSize,I,e.inChannels]:[e.batchSize,e.inChannels,I]}}),A=ie({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}}),R=Ql({a:d?k:A,b:d?A:k,transposeA:!d,transposeB:h,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});g=ie({inputs:{x:R},backend:n,attrs:{shape:e.outShape}}),b.push(k),b.push(A),b.push(R)}for(let I of b)n.disposeIntermediateTensorInfo(I);return g}function RI({x:r,filter:t,convInfo:e,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let{filterWidth:u,filterHeight:l,inChannels:p,outWidth:m,outHeight:c,dataFormat:d}=e,f=d==="channelsLast",h=u*l*p,g=c*m,b=[e.batchSize,h,g],T=!0,x=!1,I=[];if(s!=null){let j=NI(s.shape,f);j!=null&&(s=ie({inputs:{x:s},backend:n,attrs:{shape:j}}),I.push(s))}if(o!=null){let j=NI(o.shape,f);j!=null&&(o=ie({inputs:{x:o},backend:n,attrs:{shape:j}}),I.push(o))}let k=ie({inputs:{x:t},backend:n,attrs:{shape:[1,h,y.sizeFromShape(t.shape)/h]}});I.push(k);let A=new wI(b,e),R=[r.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],F=n.runWebGLProgram(A,[r],"float32",R),P=ie({inputs:{x:F},backend:n,attrs:{shape:b}});I.push(F),I.push(P);let L=o!=null,O=s!=null,G=i==="leakyrelu",W=i?ku(i,!0):null,H=new kf(f?P.shape:k.shape,f?k.shape:P.shape,f?[e.batchSize,g,e.outChannels]:[e.batchSize,e.outChannels,g],T,x,L,W,O,G),V=f?[P,k]:[k,P];if(o&&V.push(o),O&&V.push(s),G){let j=n.makeTensorInfo([],"float32",y.createScalarValue(a,"float32"));V.push(j),I.push(j)}let q=n.runWebGLProgram(H,V,"float32"),Z=ie({inputs:{x:q},backend:n,attrs:{shape:e.outShape}});I.push(q);for(let j of I)n.disposeIntermediateTensorInfo(j);return Z}function yie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=n,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,s.shape,a,l,i,p,!1,m),d;if(c.filterHeight===1&&c.filterWidth===1&&c.dilationHeight===1&&c.dilationWidth===1&&c.strideHeight===1&&c.strideWidth===1&&(c.padInfo.type==="SAME"||c.padInfo.type==="VALID"))d=DI({x:o,filter:s,convInfo:c,backend:e});else if(c.strideWidth<=2&&m==="channelsLast"&&$().getBool("WEBGL_EXP_CONV")){let h=new Af(c),g=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];d=e.runWebGLProgram(h,[o,s],"float32",g)}else if($().getBool("WEBGL_CONV_IM2COL"))d=RI({x:o,filter:s,convInfo:c,backend:e});else{let h=new vf(c);d=e.runWebGLProgram(h,[o,s],"float32")}let f=ie({inputs:{x:d},backend:e,attrs:{shape:c.outShape}});return e.disposeIntermediateTensorInfo(d),f}var E3={kernelName:mo,backendName:"webgl",kernelFunc:yie};var FI=class{constructor(t){this.variableNames=["x","dy"];this.outputShape=t.filterShape;let e=t.strideHeight,n=t.strideWidth,o=t.padInfo.top,s=t.padInfo.left,a=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},PI=class{constructor(t){this.variableNames=["dy","W"];this.outputShape=t.inShape;let e=t.filterHeight,n=t.filterWidth,o=t.strideHeight,s=t.strideWidth,a=t.dataFormat==="channelsLast",i=e-1-t.padInfo.top,u=n-1-t.padInfo.left,l=a?1:2,p=a?2:3,m=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${m}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${p}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},MI=class{constructor(t){this.variableNames=["x","dy"];this.outputShape=t.filterShape;let e=t.strideDepth,n=t.strideHeight,o=t.strideWidth,s=t.padInfo.front,a=t.padInfo.top,i=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${s};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${i};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},EI=class{constructor(t){this.variableNames=["dy","W"];this.outputShape=t.inShape;let e=t.filterDepth,n=t.filterHeight,o=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,u=e-1-t.padInfo.front,l=n-1-t.padInfo.top,p=o-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${l}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Tie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:p}=n,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,p,a,1,i,l,!1,m),d=new FI(c);return e.runWebGLProgram(d,[o,s],"float32")}var L3={kernelName:Sm,backendName:"webgl",kernelFunc:Tie};function xie(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:p}=n,m=C.convertConv2DDataFormat(l),c=C.computeConv2DInfo(a,s.shape,i,1,u,p,!1,m),d=new PI(c);return e.runWebGLProgram(d,[o,s],"float32")}var _3={kernelName:co,backendName:"webgl",kernelFunc:xie};function Iie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:u}=n,l=C.computeConv3DInfo(o.shape,s.shape,a,u,i),p=new AI(l);return e.runWebGLProgram(p,[o,s],"float32")}var $3={kernelName:_u,backendName:"webgl",kernelFunc:Iie};function Cie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,pad:i,filterShape:u}=n,l=C.computeConv3DInfo(o.shape,u,a,1,i),p=new MI(l);return e.runWebGLProgram(p,[o,s],"float32")}var B3={kernelName:vm,backendName:"webgl",kernelFunc:Cie};function kie(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{pad:a,strides:i,inputShape:u}=n,l=C.computeConv3DInfo(u,s.shape,i,1,a),p=new EI(l);return e.runWebGLProgram(p,[o,s],"float32")}var O3={kernelName:Am,backendName:"webgl",kernelFunc:kie};var Sie=ta+`
  return cos(x);
`,vie=Se({opSnippet:Sie}),z3={kernelName:fo,backendName:"webgl",kernelFunc:vie};var Aie=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,wie=Se({opSnippet:Aie}),G3={kernelName:ho,backendName:"webgl",kernelFunc:wie};var LI=class{constructor(t,e,n,o,s){this.variableNames=["Image","Boxes","BoxInd"];this.outputShape=[];let[a,i,u,l]=t,[p]=e,[m,c]=n;this.outputShape=[p,m,c,l];let d=o==="bilinear"?1:0,[f,h]=[`${i-1}.0`,`${u-1}.0`],[g,b,T]=m>1?[`${(i-1)/(m-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[x,I,k]=c>1?[`${(u-1)/(c-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${b};
        float width_scale = ${I};

        float in_y = ${T};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${k};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var Nie=r=>{let{inputs:t,backend:e,attrs:n}=r,{image:o,boxes:s,boxInd:a}=t,{cropSize:i,method:u,extrapolationValue:l}=n,p=new LI(o.shape,s.shape,i,u,l);return e.runWebGLProgram(p,[o,s,a],"float32")},U3={kernelName:ca,backendName:"webgl",kernelFunc:Nie};var dg=class{constructor(t,e,n,o){this.op=t;this.outputShape=e;this.variableNames=["x"];this.customUniforms=[{name:"index",type:"float"}];let s=this.outputShape.length,a=this.op==="*"?"1.0":"0.0",i=n?a:`getX(${W3(s,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1],l="",p="";n?(l=o?`end != ${u-1}`:"end != 0",p=o?"end + 1":"end - 1"):(l=o?`end + pow2 < ${u}`:"end >= pow2",p=o?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Ve(s)} coords = getOutputCoords();
        int end = ${K3(s,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${p};
          ${K3(s,"coords",this.op)} = idx;
          val ${this.op}= getX(${W3(s,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function W3(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.x, ${t}.y`;if(r===3)return`${t}.x, ${t}.y, ${t}.z`;if(r===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function K3(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.y`;if(r===3)return`${t}.z`;if(r===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function _I(r,t,e,n,o,s){let a=t.shape.length,i=C.getAxesPermutation([n],a),u=t;i!=null&&(u=Kt({inputs:{x:t},backend:e,attrs:{perm:i}}));let l=C.getInnerMostAxes(1,a)[0];if(l!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let p=u.shape[l],m=sr({inputs:{x:u},backend:e});for(let c=0;c<=Math.ceil(Math.log2(p))-1;c++){let d=new dg(r,u.shape,!1,s),f=[[c]],h=m;m=e.runWebGLProgram(d,[m],m.dtype,f),e.disposeIntermediateTensorInfo(h)}if(o){let c=new dg(r,u.shape,o,s),d=m;m=e.runWebGLProgram(c,[m],m.dtype),e.disposeIntermediateTensorInfo(d)}if(i!=null){let c=C.getUndoAxesPermutation(i),d=Kt({inputs:{x:m},backend:e,attrs:{perm:c}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(u),d}return m}function Rie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;return _I("*",o,e,s,a,i)}var V3={kernelName:ma,backendName:"webgl",kernelFunc:Rie};function Fie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;return _I("+",o,e,s,a,i)}var H3={kernelName:go,backendName:"webgl",kernelFunc:Fie};function Pie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let u=e.readSync(o.dataId),l=e.readSync(s.dataId),p=Zx(u,l,s.dtype,s.shape,a);return e.makeTensorInfo([a],s.dtype,p)}else if(o.shape.length===2){let u=e.bufferSync(o),l=e.bufferSync(s),p=PO(u,l,a,i);return e.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var q3={kernelName:wm,backendName:"webgl",kernelFunc:Pie};var $I=class{constructor(t,e,n){this.variableNames=["x"];this.outputShape=[];this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Mie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n,i=o.shape[0],u=a==="NHWC"?o.shape[1]:o.shape[2],l=a==="NHWC"?o.shape[2]:o.shape[3],p=a==="NHWC"?o.shape[3]:o.shape[1],m=u*s,c=l*s,d=p/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=new $I(f,s,a);return e.runWebGLProgram(h,[o],o.dtype)}var j3={kernelName:da,backendName:"webgl",kernelFunc:Mie};var wf=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=t.outShape,this.enableShapeUniforms=Nt(this.outputShape.length);let a=t.filterHeight,i=t.filterWidth,u=t.outChannels/t.inChannels,l="",p="";n&&(o?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,p="result = activation(result);");let m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${m}
        ${p}
        setOutput(result);
      }
    `}};var Nf=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=t.outShape,this.enableShapeUniforms=Nt(this.outputShape.length);let a=t.outChannels/t.inChannels,i=t.padInfo.left,u=t.strideWidth,l=t.dilationWidth,p=t.filterHeight,m=t.filterWidth,c=m,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let b=0;b<m;b++)d+=`
          vec4 xTexelC${b*2};
          int xTexelC${b*2}Ready;
          vec4 xTexelC${b*2+1};
          int xTexelC${b*2+1}Ready;
          vec4 xC${b};`;d+=`
    for (int r = 0; r < ${p}; r++) {
      `;for(let b=0;b<m;b++)d+=`
          xTexelC${b*2} = vec4(0.0);
          xTexelC${b*2}Ready = 0;
          xTexelC${b*2+1} = vec4(0.0);
          xTexelC${b*2+1}Ready = 0;
          xC${b} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let b=0;b<(c+1)/2;b++){let T=b*2;if(d+=`
          xC = xCCorner + ${T*l};
          `,u===1){if(T<m&&(i%2===1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }
              `,l===1&&T>0?d+=`
                xC${T} = vec4(xTexelC${T-2}.zw, xTexelC${T}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${T} = vec4(previous.zw, xTexelC${T}.xy);
                  } else {
                    xC${T} = vec4(0.0, 0.0, xTexelC${T}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                xC${T} = xTexelC${T};
                `,T+1<m)){let x=i%2===0?y.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                    xTexelC${T+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${T+1}.zw = vec2(0.0);
                    }
                    xTexelC${T+1}Ready = 1;
                  }
                  `,l>1?d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${T+1} = vec4(previous.zw, xTexelC${T+1}.xy);
                    } else {
                     xC${T+1} = vec4(0.0, 0.0, xTexelC${T+1}.xy);
                    }
                    `:d+=`
                    xC${T+1} = vec4(xTexelC${T}.zw, xTexelC${T+1}.xy);
                    `):x===1?d+=`
                    xC${T+1} = xTexelC${T};
                    `:d+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                      xTexelC${T+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${T+1}.zw = vec2(0.0);
                      }
                      xTexelC${T+1}Ready = 1;
                    }

                    xC${T+1} = xTexelC${T+1};
                    `}}else T<m&&(i%2===1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${T+1}Ready == 0) {
                  xTexelC${T+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${T+1}.zw = vec2(0.0);
                  }
                  xTexelC${T+1}Ready = 1;
                }

                xC${T} = vec4(xTexelC${T}.zw, xTexelC${T+1}.zw);
              `,T+1<m&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${T+1} = vec4(xTexelC${T+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                  xTexelC${T+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T+1}.zw = vec2(0.);
                  }
                  xTexelC${T+1}Ready = 1;
                }

                xC${T} = vec4(
                  xTexelC${T}.xy, xTexelC${T+1}.xy);
              `,T+1<m&&(d+=`
                  xC${T+1} = vec4(xTexelC${T}.zw, xTexelC${T+1}.zw);
                `)));T<m&&(d+=`
            wTexel = getW(r, ${T}, d1, q);
            dotProd += xC${T} * vec4(wTexel.xz, wTexel.xz);
          `,T+1<m&&(d+=`
              wTexel = getW(r, ${T+1}, d1, q);
              dotProd += xC${T+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let f="",h="";n&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:f=`vec4 activation(vec4 x) {
          ${n}
        }`,h="result = activation(result);");let g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${h}
        setOutput(result);
      }
    `}};function Eie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:u,dimRoundingMode:l}=n,p=u;p==null&&(p=[1,1]),y.assert(C.eitherStridesOrDilationsAreOne(a,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${p}'`);let m=C.computeConv2DInfo(o.shape,s.shape,a,p,i,l,!0),c;$().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1?c=new Nf(m):c=new wf(m);let d=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];return e.runWebGLProgram(c,[o,s],"float32",d)}var X3={kernelName:bo,backendName:"webgl",kernelFunc:Eie};var BI=class{constructor(t){this.variableNames=["x","dy"];this.outputShape=t.filterShape;let e=t.strideHeight,n=t.strideWidth,o=t.padInfo.top,s=t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},OI=class{constructor(t){this.variableNames=["dy","W"];this.outputShape=t.inShape;let e=t.filterHeight,n=t.filterWidth,o=t.strideHeight,s=t.strideWidth,a=e-1-t.padInfo.top,i=n-1-t.padInfo.left,u=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Lie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,dilations:i,pad:u,dimRoundingMode:l,filterShape:p}=n,m=C.computeConv2DInfo(o.shape,p,a,i,u,l,!0),c=new BI(m);return e.runWebGLProgram(c,[o,s],"float32")}var Y3={kernelName:Nm,backendName:"webgl",kernelFunc:Lie};function _ie(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{strides:a,dilations:i,pad:u,dimRoundingMode:l,inputShape:p}=n,m=C.computeConv2DInfo(p,s.shape,a,i,u,l,!0),c=new OI(m);return e.runWebGLProgram(c,[o,s],"float32")}var Z3={kernelName:Dm,backendName:"webgl",kernelFunc:_ie};var zI=class{constructor(t){this.variableNames=["X"];this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function $ie(r){let{inputs:t,backend:e}=r,{x:n}=t,o=[...n.shape,...n.shape],s=y.sizeFromShape(n.shape),a=ie({inputs:{x:n},backend:e,attrs:{shape:[s]}}),i=new zI(s),u=e.runWebGLProgram(i,[a],a.dtype),l=ie({inputs:{x:u},backend:e,attrs:{shape:o}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(u),l}var Q3={kernelName:Rm,backendName:"webgl",kernelFunc:$ie};var GI=class{constructor(t){this.variableNames=["x","W"];this.outputShape=t.outShape;let{inHeight:e,inWidth:n,padInfo:o,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:u,dilationHeight:l,dilationWidth:p}=t,{top:m,left:c}=o;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${a});
      const ivec2 pads = ivec2(${m}, ${c});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${p};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function Bie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:u}=n,l=C.computeDilation2DInfo(o.shape,s.shape,a,i,"NHWC",u),p,m=new GI(l);p=e.runWebGLProgram(m,[o,s],"float32");let c=ie({inputs:{x:p},backend:e,attrs:{shape:l.outShape}});return e.disposeIntermediateTensorInfo(p),c}var J3={kernelName:$u,backendName:"webgl",kernelFunc:Bie};function Oie(r){let{inputs:t,backend:e,attrs:n}=r,{equation:o}=n,s=t,{allDims:a,summedDims:i,idDims:u}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(a.length,u,s);let{path:l,steps:p}=C.getEinsumComputePath(i,u),m=p.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of p[h]){let{permutationIndices:b,expandDims:T}=C.getEinsumPermutation(d,u[g]),x;C.isIdentityPermutation(b)?x=s[g]:(x=Kt({inputs:{x:s[g]},backend:e,attrs:{perm:b}}),f.push(x));let I=x.shape.slice();for(let k=0;k<T.length;++k)I.splice(T[k],0,1);y.arraysEqual(x.shape,I)||(x=ie({inputs:{x},backend:e,attrs:{shape:I}}),f.push(x)),c===null?c=x:(c=mg({inputs:{a:x,b:c},backend:e}),f.push(c))}h<m-1&&(l[h]>=0&&(c=Zl({inputs:{x:c},backend:e,attrs:{axis:l[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&e.disposeIntermediateTensorInfo(h);return c}var eG={kernelName:Bu,backendName:"webgl",kernelFunc:Oie};var zie="return (x >= 0.0) ? x : (exp(x) - 1.0);",Gie=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Uie=Se({opSnippet:zie,packedOpSnippet:Gie}),tG={kernelName:To,backendName:"webgl",kernelFunc:Uie};var Wie="return (b >= 1.0) ? a : a * (b + 1.0);",Kie=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Vie=r=>{let{inputs:t,backend:e}=r,{dy:n,y:o}=t,s=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ea(Kie,n.shape,o.shape):new as(Wie,n.shape,o.shape);return e.runWebGLProgram(s,[n,o],n.dtype)},rG={kernelName:Fm,backendName:"webgl",kernelFunc:Vie};var Hie=`
  return vec4(equal(a, b));
`,qie="return float(a == b);",jie=dt({opSnippet:qie,packedOpSnippet:Hie,dtype:"bool",cpuKernelImpl:_O}),nG={kernelName:fa,backendName:"webgl",kernelFunc:jie};var Xie=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${C.ERF_P};
  float a1 = ${C.ERF_A1};
  float a2 = ${C.ERF_A2};
  float a3 = ${C.ERF_A3};
  float a4 = ${C.ERF_A4};
  float a5 = ${C.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Yie=Se({opSnippet:Xie}),oG={kernelName:Gi,backendName:"webgl",kernelFunc:Yie};var Zie=ta+`
  return exp(x);
`,Qie=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,wD=Se({opSnippet:Zie,packedOpSnippet:Qie,cpuKernelImpl:$O,dtype:"float32"}),sG={kernelName:xo,backendName:"webgl",kernelFunc:wD};function UI(r){let{inputs:t,attrs:e,backend:n}=r,{dim:o}=e,{input:s}=t,a=s.shape.length,i=s.shape.slice(),u=o;return o<0&&(y.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+o+1),i.splice(u,0,1),ie({inputs:{x:s},backend:n,attrs:{shape:i}})}var aG={kernelName:hs,backendName:"webgl",kernelFunc:UI};var iG="return exp(x) - 1.0;",Jie=Se({opSnippet:iG,packedOpSnippet:iG,cpuKernelImpl:BO}),uG={kernelName:ha,backendName:"webgl",kernelFunc:Jie};var fg=class{constructor(t,e,n){this.variableNames=["real","imag"];let o=e[1];this.outputShape=e;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${o}.0`:"1.0",i;if(t==="real")i="return real * expR - imag * expI;";else if(t==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function WI(r,t,e){let n=e.texData.get(r.dataId),o=y.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],a=o/s,i=ie({inputs:{x:r},backend:e,attrs:{shape:[a,s]}}),u=i.shape,l=new fg("real",u,t),p=new fg("imag",u,t),m=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:u},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:u}],c=e.runWebGLProgram(l,m,"float32"),d=e.runWebGLProgram(p,m,"float32"),f=On({inputs:{real:c,imag:d},backend:e});e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d);let h=ie({inputs:{x:f},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(f),h}function eue(r){let{inputs:t,backend:e}=r,{input:n}=t;return WI(n,!1,e)}var pG={kernelName:Pm,backendName:"webgl",kernelFunc:eue};var KI=class{constructor(t,e){this.outputShape=[];this.customUniforms=[{name:"value",type:"float"}];this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function vu(r){let{backend:t,attrs:e}=r,{shape:n,value:o}=e,{dtype:s}=e;if(s=s||y.inferDtype(o),s==="string"){let a=y.getArrayFromDType(s,y.sizeFromShape(n));return a.fill(o),t.makeTensorInfo(n,s,a)}else{let a=new KI(n,o),i=[[o]];return t.runWebGLProgram(a,[],s,i)}}var lG={kernelName:ci,backendName:"webgl",kernelFunc:vu};var VI=class{constructor(t){this.variableNames=["Image"];this.outputShape=[];let e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var mG={kernelName:ga,backendName:"webgl",kernelFunc:({inputs:r,backend:t})=>{let{image:e}=r,n=t,o=new VI(e.shape);return n.runWebGLProgram(o,[e],e.dtype)}};var cG="return floor(x);",tue=Se({opSnippet:cG,packedOpSnippet:cG,cpuKernelImpl:OO}),dG={kernelName:Io,backendName:"webgl",kernelFunc:tue};var rue=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,nue=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,oue=dt({opSnippet:rue,packedOpSnippet:nue,dtype:"int32"}),fG={kernelName:Co,backendName:"webgl",kernelFunc:oue};var HI=class{constructor(t){this.variableNames=["A"];let e=Zt(),[n,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${n}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var qI=class{constructor(t){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;let e=Zt(),[n,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${n}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}};var hG={kernelName:Vp,backendName:"webgl",kernelFunc:sue},Df,ND=$().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function sue(r){let{inputs:t,backend:e,attrs:n}=r,{pixels:o}=t,{numChannels:s}=n,a=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,[u,l]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],p=[l,u],m=[l,u,s];if(i||a){let h=$().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Df==null||h!==ND)&&(ND=h,Df=document.createElement("canvas").getContext("2d",{willReadFrequently:ND})),Df.canvas.width=u,Df.canvas.height=l,Df.drawImage(o,0,0,u,l),o=Df.canvas}let c=e.makeTensorInfo(p,"int32");e.texData.get(c.dataId).usage=2,e.gpgpu.uploadPixelDataToTexture(e.getTexture(c.dataId),o);let d=$().getBool("WEBGL_PACK")?new qI(m):new HI(m),f=e.runWebGLProgram(d,[c],"int32");return e.disposeData(c.dataId),f}function aue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=C.convertConv2DDataFormat(p),g=C.computeConv2DInfo(o.shape,s.shape,u,m,l,c,!1,h),b,T=[],x=a!=null,I=i!=null,k=d==="leakyrelu",A=()=>{let F=[o,s],P=(L,O)=>{if(O==="NCHW"&&L.shape.length===1&&L.shape[0]!==1){let G=ie({inputs:{x:L},backend:e,attrs:{shape:[L.shape[0],1,1]}});return T.push(G),G}return L};if(x&&F.push(P(a,p)),I&&F.push(P(i,p)),k){let L=e.makeTensorInfo([],"float32",y.createScalarValue(f,"float32"));F.push(L),T.push(L)}return F};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))b=DI({x:o,filter:s,convInfo:g,backend:e,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else if(g.strideWidth<=2&&h==="channelsLast"&&$().getBool("WEBGL_EXP_CONV")){let F=d?ku(d,!0):null,P=new Af(g,x,F,I,k),L=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],O=A();b=e.runWebGLProgram(P,O,"float32",L)}else if($().getBool("WEBGL_CONV_IM2COL"))b=RI({x:o,filter:s,convInfo:g,backend:e,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else{let F=d?ku(d,!1):null,P=new vf(g,x,F,I,k),L=A();b=e.runWebGLProgram(P,L,"float32")}let R=ie({inputs:{x:b},backend:e,attrs:{shape:g.outShape}});return T.push(b),T.forEach(F=>e.disposeIntermediateTensorInfo(F)),R}var gG={kernelName:Ds,backendName:"webgl",kernelFunc:aue};function iue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:l,dilations:p,dimRoundingMode:m,activation:c,leakyreluAlpha:d}=n,f=[],h=p;h==null&&(h=[1,1]),y.assert(C.eitherStridesOrDilationsAreOne(u,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${h}'`);let g=C.computeConv2DInfo(o.shape,s.shape,u,h,l,m,!0),b=$().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,T=c?ku(c,b):null,x=[o,s],I=a!=null,k=i!=null,A=c==="leakyrelu";if(I&&x.push(a),k&&x.push(i),A){let L=e.makeTensorInfo([],"float32",y.createScalarValue(d,"float32"));x.push(L),f.push(L)}let R;b?R=new Nf(g,I,T,k,A):R=new wf(g,I,T,k,A);let F=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],P=e.runWebGLProgram(R,x,"float32",F);return f.forEach(L=>e.disposeIntermediateTensorInfo(L)),P}var bG={kernelName:Rs,backendName:"webgl",kernelFunc:iue};var jI=class{constructor(t,e,n,o){this.sliceDim=t;this.strides=e;this.paramsShape=o;this.variableNames=["x","indices"];this.outputShape=n;let s=Ve(n.length),a=`
    int index;`;for(let i=0;i<this.sliceDim;i++)a+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function uue(r){let{inputs:t,backend:e}=r,{params:n,indices:o}=t,s=o.shape,a=s[s.length-1],i=y.sizeFromShape(n.shape),[u,l,p,m]=C.prepareAndValidate(n,o),c=ie({inputs:{x:o},backend:e,attrs:{shape:[l,a]}}),d=ie({inputs:{x:n},backend:e,attrs:{shape:[y.sizeFromShape(n.shape)/p,p]}});if(e.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let b=e.readSync(o.dataId),T=e.bufferSync(n),x=zO(b,T,n.dtype,l,a,p,m,n.shape,i);return e.makeTensorInfo(u,n.dtype,x.values)}let f=new jI(a,m,[l,p],n.shape),h=e.runWebGLProgram(f,[d,c],d.dtype),g=ie({inputs:{x:h},backend:e,attrs:{shape:u}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(h),g}var yG={kernelName:ba,backendName:"webgl",kernelFunc:uue};var XI=class{constructor(t,e){this.variableNames=["A","indices"];this.outputShape=e,this.rank=e.length;let n=Ve(this.rank),o=pue(t,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}};function pue(r,t){let e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push("index"):n.push(`${e[o]}`);return n.join()}function DD(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n,u=y.parseAxisParam(a,o.shape)[0];if($().get("DEBUG")){let T=e.readSync(s.dataId),x=o.shape[u];for(let I=0;I<T.length;++I){let k=T[I];y.assert(k<=x-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${x-1}]`)}}let l=C.segment_util.collectGatherOpShapeInfo(o,s,u,i),p=y.sizeFromShape(s.shape),m=[],c=ie({inputs:{x:o},backend:e,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=ie({inputs:{x:s},backend:e,attrs:{shape:[l.batchSize,p/l.batchSize]}});m.push(c),m.push(d);let f=[l.batchSize,l.outerSize,p/l.batchSize,l.sliceSize];if(e.shouldExecuteOnCPU([o,s])||o.dtype==="string"){let T=e.bufferSync(d),x=e.bufferSync(c),I=GO(x,T,f);return m.forEach(k=>e.disposeIntermediateTensorInfo(k)),e.makeTensorInfo(l.outputShape,I.dtype,I.values)}let h=new XI(c.shape,f),g=e.runWebGLProgram(h,[c,d],c.dtype);m.push(g);let b=ie({inputs:{x:g},backend:e,attrs:{shape:l.outputShape}});return m.forEach(T=>e.disposeIntermediateTensorInfo(T)),b}var TG={kernelName:gs,backendName:"webgl",kernelFunc:DD};var lue="return float(a > b);",mue=`
  return vec4(greaterThan(a, b));
`,cue=dt({opSnippet:lue,packedOpSnippet:mue,cpuKernelImpl:UO,dtype:"bool"}),xG={kernelName:ya,backendName:"webgl",kernelFunc:cue};var due="return float(a >= b);",fue=`
  return vec4(greaterThanEqual(a, b));
`,hue=dt({opSnippet:due,packedOpSnippet:fue,dtype:"bool",cpuKernelImpl:WO}),IG={kernelName:So,backendName:"webgl",kernelFunc:hue};function gue(r){let{inputs:t,backend:e}=r,{input:n}=t;return WI(n,!0,e)}var CG={kernelName:Mm,backendName:"webgl",kernelFunc:gue};var bue="return float(!isnan(x) && !isinf(x));",yue=Se({opSnippet:bue,dtype:"bool"}),kG={kernelName:Ui,backendName:"webgl",kernelFunc:yue};var Tue="return float(isinf(x));",xue=Se({opSnippet:Tue,dtype:"bool"}),SG={kernelName:Wi,backendName:"webgl",kernelFunc:xue};var Iue="return float(isnan(x));",Cue=Se({opSnippet:Iue,dtype:"bool"}),vG={kernelName:Ta,backendName:"webgl",kernelFunc:Cue};var kue="return float(a < b);",Sue=`
  return vec4(lessThan(a, b));
`,vue=dt({opSnippet:kue,packedOpSnippet:Sue,cpuKernelImpl:KO,dtype:"bool"}),AG={kernelName:xa,backendName:"webgl",kernelFunc:vue};var Aue="return float(a <= b);",wue=`
  return vec4(lessThanEqual(a, b));
`,Nue=dt({opSnippet:Aue,packedOpSnippet:wue,cpuKernelImpl:VO,dtype:"bool"}),wG={kernelName:Ia,backendName:"webgl",kernelFunc:Nue};function Due(r){let{backend:t,attrs:e}=r,{start:n,stop:o,num:s}=e,a=HO(n,o,s);return t.makeTensorInfo([a.length],"float32",a)}var NG={kernelName:Em,backendName:"webgl",kernelFunc:Due};var Rue=ta+`
  return x < 0.0 ? 0./0. : log(x);
`,Fue=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Pue=Se({opSnippet:Rue,packedOpSnippet:Fue,cpuKernelImpl:qO}),DG={kernelName:Ao,backendName:"webgl",kernelFunc:Pue};var Mue=ta+`
  return log(1.0 + x);
`,Eue=Se({opSnippet:Mue}),RG={kernelName:Ki,backendName:"webgl",kernelFunc:Eue};var Lue="return float(a >= 1.0 && b >= 1.0);",_ue=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,$ue=dt({opSnippet:Lue,packedOpSnippet:_ue,dtype:"bool"}),FG={kernelName:Ca,backendName:"webgl",kernelFunc:$ue};var Bue="return float(!(x >= 1.0));",Oue=Se({opSnippet:Bue}),PG={kernelName:ka,backendName:"webgl",kernelFunc:Oue};var zue="return float(a >= 1.0 || b >= 1.0);",Gue=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Uue=dt({opSnippet:zue,packedOpSnippet:Gue,dtype:"bool"}),MG={kernelName:Vi,backendName:"webgl",kernelFunc:Uue};var YI=class{constructor(t,e,n,o,s){this.variableNames=["x"];this.outputShape=[];let a=e,i=t[3]-1;this.outputShape=t;let u,l=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${l})`:s===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}};var ZI=class{constructor(t,e,n,o,s){this.variableNames=["x"];this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;let a=e,i=t[3]-1;this.outputShape=t;let u,l=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${l})`:s===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}};var Wue=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{depthRadius:s,bias:a,alpha:i,beta:u}=n,l=$().getBool("WEBGL_PACK_NORMALIZATION")?new ZI(o.shape,s,a,i,u):new YI(o.shape,s,a,i,u);return e.runWebGLProgram(l,[o],o.dtype)},EG={kernelName:zu,backendName:"webgl",kernelFunc:Wue};var QI=class{constructor(t,e,n,o,s){this.variableNames=["inputImage","outputImage","dy"];this.outputShape=[];this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=o,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${s})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var Kue=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o,y:s,dy:a}=t,{depthRadius:i,bias:u,alpha:l,beta:p}=n,m=new QI(o.shape,i,u,l,p);return e.runWebGLProgram(m,[o,s,a],o.dtype)},LG={kernelName:Lm,backendName:"webgl",kernelFunc:Kue};function _G(r,t,e,n){let o=y.sizeFromShape(t),a=y.sizeFromShape(r.shape)/o,i=ie({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),u=eo(i,r.dtype,"max",n),l=ie({inputs:{x:u},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}function RD(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reductionIndices:s,keepDims:a}=n,i=o.shape.length,u=y.parseAxisParam(s,o.shape),l=u,p=C.getAxesPermutation(l,i),m=p!=null,c=e.shouldExecuteOnCPU([o]),d=o;if(m){if(c){let x=e.texData.get(d.dataId).values,I=new Array(i);for(let R=0;R<I.length;R++)I[R]=o.shape[p[R]];let k=Xl(x,o.shape,o.dtype,p,I);d=e.makeTensorInfo(I,o.dtype);let A=e.texData.get(d.dataId);A.values=k}else d=Pp(o,p,e);l=C.getInnerMostAxes(l.length,i)}C.assertAxesAreInnerMostDims("max",l,i);let[f,h]=C.computeOutAndReduceShapes(d.shape,l),g=f;a&&(g=C.expandShapeToKeepDim(f,u));let b;if(c){let x=e.texData.get(d.dataId).values,I=jO(x,y.sizeFromShape(h),g,o.dtype);b=e.makeTensorInfo(g,o.dtype);let k=e.texData.get(b.dataId);k.values=I}else b=_G(d,h,g,e);return m&&e.disposeIntermediateTensorInfo(d),b}var $G={kernelName:wo,backendName:"webgl",kernelFunc:RD};var Vue=oI+`
  return max(a, b);
`,Hue=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Fp+`
  return result;
`,que=dt({opSnippet:Vue,packedOpSnippet:Hue,cpuKernelImpl:XO}),BG={kernelName:No,backendName:"webgl",kernelFunc:que};function jue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;ei(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1;y.assert(C.eitherStridesOrDilationsAreOne(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let p=C.computePool2DInfo(o.shape,s,a,l,i,u);if(p.filterWidth===1&&p.filterHeight===1&&y.arraysEqual(p.inShape,p.outShape))return sr({inputs:{x:o},backend:e});let m=new ri(p,"max",!1);return e.runWebGLProgram(m,[o],o.dtype)}var OG={kernelName:Do,backendName:"webgl",kernelFunc:jue};function Xue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dataFormat:u,dimRoundingMode:l}=n,p=[1,1,1],m=C.computePool3DInfo(o.shape,s,a,p,i,l,u),c=new Mp(m,"max",!1);return e.runWebGLProgram(c,[o],o.dtype)}var zG={kernelName:Gu,backendName:"webgl",kernelFunc:Xue};var JI=class{constructor(t){this.variableNames=["dy","maxPos"];this.outputShape=t.inShape;let e=t.strideHeight,n=t.strideWidth,o=t.dilationHeight,s=t.effectiveFilterHeight,a=t.effectiveFilterWidth,i=s-1-t.padInfo.top,u=a-1-t.padInfo.left,l=s*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},eC=class{constructor(t){this.variableNames=["dy","maxPos"];this.outputShape=t.inShape;let e=t.strideDepth,n=t.strideHeight,o=t.strideWidth,s=t.dilationDepth,a=t.dilationHeight,i=t.dilationWidth,u=t.effectiveFilterDepth,l=t.effectiveFilterHeight,p=t.effectiveFilterWidth,m=u-1-t.padInfo.front,c=l-1-t.padInfo.top,d=p-1-t.padInfo.left,f=u*l*p-1;this.userCode=`
      const ivec3 pads = ivec3(${m}, ${c}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${p} +
                  wR * ${p} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Yue(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,a=s,{filterSize:i,strides:u,pad:l,dimRoundingMode:p}=n,m=[1,1,1],c=C.computePool3DInfo(a.shape,i,u,m,l,p),d=new Mp(c,"max",!0),f=e.runWebGLProgram(d,[a],a.dtype),h=new eC(c),g=e.runWebGLProgram(h,[o,f],a.dtype);return e.disposeIntermediateTensorInfo(f),g}var GG={kernelName:$m,backendName:"webgl",kernelFunc:Yue};function Zue(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s,output:a}=t,i=s;ei([s,a],"maxPoolGrad");let{filterSize:u,strides:l,pad:p,dimRoundingMode:m}=n,c=C.computePool2DInfo(i.shape,u,l,1,p,m),d=!0,f=new ri(c,"max",d),h=e.runWebGLProgram(f,[i],i.dtype),g=new JI(c),b=e.runWebGLProgram(g,[o,h],i.dtype);return e.disposeIntermediateTensorInfo(h),b}var UG={kernelName:_m,backendName:"webgl",kernelFunc:Zue};function WG(r,t,e,n){let o=new ri(e,"max",!1),s=n.runWebGLProgram(o,[r],"float32");o=new ri(e,"max",!0,!0,t);let a=n.runWebGLProgram(o,[r],"float32");return[s,a]}var KG={kernelName:Bm,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=t,u=e;y.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let l=[1,1];y.assert(C.eitherStridesOrDilationsAreOne(s,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`);let p=C.computePool2DInfo(n.shape,o,s,l,a),[m,c]=WG(n,i,p,u);return[m,c]}};function VG(r,t,e,n){let o=y.sizeFromShape(t),a=y.sizeFromShape(r.shape)/o,i=ie({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),u=eo(i,"float32","mean",n),l=ie({inputs:{x:u},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}var HG={kernelName:Ro,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{keepDims:o,axis:s}=t,a=e,i=n.shape.length,u=y.parseAxisParam(s,n.shape),l=u,p=C.getAxesPermutation(l,i),m=p!=null,c=a.shouldExecuteOnCPU([n]),d=[],f=n;if(m){if(c){let I=a.texData.get(f.dataId).values,k=new Array(i);for(let F=0;F<k.length;F++)k[F]=n.shape[p[F]];let A=Xl(I,n.shape,n.dtype,p,k);f=a.makeTensorInfo(k,n.dtype);let R=a.texData.get(f.dataId);R.values=A}else f=Pp(n,p,a);d.push(f),l=C.getInnerMostAxes(l.length,i)}C.assertAxesAreInnerMostDims("sum",l,i);let[h,g]=C.computeOutAndReduceShapes(f.shape,l),b=h;o&&(b=C.expandShapeToKeepDim(h,u));let T=VG(f,g,b,a);for(let x of d)a.disposeIntermediateTensorInfo(x);return T}};function Que(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n,i=o.shape.length,u=y.parseAxisParam(s,o.shape),l=u,p=C.getAxesPermutation(l,i),m=o;p!=null&&(m=Kt({inputs:{x:o},backend:e,attrs:{perm:p}}),l=C.getInnerMostAxes(l.length,o.shape.length)),C.assertAxesAreInnerMostDims("min",l,i);let[c,d]=C.computeOutAndReduceShapes(m.shape,l),f=y.sizeFromShape(d),h=ie({inputs:{x:m},backend:e,attrs:{shape:[-1,f]}}),g=eo(h,h.dtype,"min",e),b;if(a){let T=C.expandShapeToKeepDim(c,u);b=ie({inputs:{x:g},backend:e,attrs:{shape:T}})}else b=ie({inputs:{x:g},backend:e,attrs:{shape:c}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(g),p!=null&&e.disposeIntermediateTensorInfo(m),b}var qG={kernelName:Fo,backendName:"webgl",kernelFunc:Que};var Jue=oI+`
  return min(a, b);
`,epe=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Fp+`
  return result;
`,tpe=dt({opSnippet:Jue,packedOpSnippet:epe,cpuKernelImpl:YO}),jG={kernelName:Po,backendName:"webgl",kernelFunc:tpe};var tC=class{constructor(t,e,n){this.variableNames=["x"];this.outputShape=e.map((p,m)=>p[0]+t[m]+p[1]);let o=t.length,s=Ve(o),a=e.map(p=>p[0]).join(","),i=e.map((p,m)=>p[0]+t[m]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),l=n==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}};var rC=class{constructor(t,e,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e.map((f,h)=>f[0]+t[h]+f[1]);let o=t.length,s=Ve(o),a=e.map(f=>f[0]).join(","),i=e.map((f,h)=>f[0]+t[h]).join(","),u=or("rc",o),l=or("source",o),p=`${u[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${l.slice(-2).join()})`,c=n==="reflect"?0:1,d="";if(o===1){let f=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${c};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${c};
        }
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${m});
        ${u[o-1]} += 1;
        if(${p}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${m});
        }
      `}else{let f=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${c}) +
                gte * ((end - 1) * 2 - source + ${c});
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${m});
        ${u[o-1]} += 1;
        if(${p}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${m});
        }
        rc = outputLoc;
        ${u[o-2]} += 1;
        if(${u[o-2]} < ${this.outputShape[o-2]}) {
          ${f}
          result[2] = getChannel(getX(${l.join()}), ${m});
          ${u[o-1]} += 1;
          if(${p}) {
            ${f}
            result[3] = getChannel(getX(${l.join()}), ${m});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}};var rpe=({inputs:r,backend:t,attrs:e})=>{let{x:n}=r,{paddings:o,mode:s}=e,a=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rC(n.shape,o,s):new tC(n.shape,o,s);return t.runWebGLProgram(a,[n],n.dtype)},XG={kernelName:Mo,backendName:"webgl",kernelFunc:rpe};var npe=`if (b == 0.0) return NAN;
  return mod(a, b);`,ope=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+Fp+`
  return result;
`,spe=dt({opSnippet:npe,packedOpSnippet:ope}),YG={kernelName:Hi,backendName:"webgl",kernelFunc:spe};var nC=class{constructor(t,e,n){this.variableNames=["probs"];this.customUniforms=[{name:"seed",type:"float"}];this.outputShape=[t,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}};var ape=`
if (a == b) {
  return 1.0;
};
return a / b;`,ipe=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,FD=dt({opSnippet:ape,packedOpSnippet:ipe,checkOutOfBounds:!0}),ZG={kernelName:yo,backendName:"webgl",kernelFunc:FD};var QG="return a - b;",PD=dt({opSnippet:QG,packedOpSnippet:QG,supportsComplex:!0,cpuKernelImpl:hz}),JG={kernelName:Yo,backendName:"webgl",kernelFunc:PD};function MD(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{dim:s}=n,a=y.parseAxisParam([s],o.shape),i=RD({inputs:{x:o},backend:e,attrs:{reductionIndices:a,keepDims:!1}}),u=C.expandShapeToKeepDim(i.shape,a),l=ie({inputs:{x:i},backend:e,attrs:{shape:u}}),p=PD({inputs:{a:o,b:l},backend:e}),m=wD({inputs:{x:p},backend:e}),c=Zl({inputs:{x:m},backend:e,attrs:{axis:a,keepDims:!1}}),d=ie({inputs:{x:c},backend:e,attrs:{shape:u}}),f=FD({inputs:{a:m,b:d},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),f}var eU={kernelName:jo,backendName:"webgl",kernelFunc:MD};function upe(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{numSamples:s,seed:a,normalized:i}=n,u=i?o:MD({inputs:{logits:o},backend:e,attrs:{dim:o.shape.length-1}}),l=u.shape[0],p=u.shape[1],m=new nC(l,p,s),c=[[a]],d=e.runWebGLProgram(m,[u],"int32",c);return i||e.disposeIntermediateTensorInfo(u),d}var tU={kernelName:Om,backendName:"webgl",kernelFunc:upe};var ppe=Ir+`
  return -x;
`,lpe=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function mpe(r){let{inputs:t,backend:e}=r,{x:n}=t;if(e.shouldExecuteOnCPU([n])){let s=e.texData.get(n.dataId),[a,i]=QO(s.values,n.shape,n.dtype);return e.makeTensorInfo(i,n.dtype,a)}let o;return $().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new ss(n.shape,lpe):o=new an(n.shape,ppe),e.runWebGLProgram(o,[n],n.dtype)}var rU={kernelName:bs,backendName:"webgl",kernelFunc:mpe};var cpe=xr.nonMaxSuppressionV3Impl;function dpe(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=n,l=e.readSync(o.dataId),p=e.readSync(s.dataId),{selectedIndices:m}=cpe(l,p,a,i,u);return e.makeTensorInfo([m.length],"int32",new Int32Array(m))}var nU={kernelName:va,backendName:"webgl",kernelFunc:dpe};var fpe=xr.nonMaxSuppressionV4Impl;function hpe(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=n,p=e.readSync(o.dataId),m=e.readSync(s.dataId),{selectedIndices:c,validOutputs:d}=fpe(p,m,a,i,u,l);return[e.makeTensorInfo([c.length],"int32",new Int32Array(c)),e.makeTensorInfo([],"int32",new Int32Array([d]))]}var oU={kernelName:qi,backendName:"webgl",kernelFunc:hpe};var gpe=xr.nonMaxSuppressionV5Impl;function bpe(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=n,p=e.readSync(o.dataId),m=e.readSync(s.dataId),c=a,d=i,f=u,h=l,{selectedIndices:g,selectedScores:b}=gpe(p,m,c,d,f,h);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var sU={kernelName:Aa,backendName:"webgl",kernelFunc:bpe};var oC=class{constructor(t,e,n,o){this.variableNames=["indices"];this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${n}),
                      float(index == coords.y)));
      }
    `}};var ype=r=>{let{inputs:t,backend:e,attrs:n}=r,{indices:o}=t,{dtype:s,depth:a,onValue:i,offValue:u}=n,l=y.sizeFromShape(o.shape),p=new oC(l,a,i,u),m=ie({inputs:{x:o},backend:e,attrs:{shape:[l]}}),c=e.runWebGLProgram(p,[m],s);e.disposeIntermediateTensorInfo(m);let d=[...o.shape,a],f=ie({inputs:{x:c},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(c),f},aU={kernelName:wa,backendName:"webgl",kernelFunc:ype};function hg(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="complex64"){let o=Su({inputs:{input:n},backend:e}),s=hg({inputs:{x:o},backend:e}),a=Jl({inputs:{input:n},backend:e}),i=hg({inputs:{x:a},backend:e}),u=On({inputs:{real:s,imag:i},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),u}else return vu({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:e})}var iU={kernelName:As,backendName:"webgl",kernelFunc:hg};function uU(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=Su({inputs:{input:n},backend:e}),s=uU({inputs:{x:o},backend:e}),a=Jl({inputs:{input:n},backend:e}),i=hg({inputs:{x:a},backend:e}),u=On({inputs:{real:s,imag:i},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),u}else return vu({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:e})}var pU={kernelName:ys,backendName:"webgl",kernelFunc:uU};function Tpe(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n;if(t.length===1)return UI({inputs:{input:t[0]},backend:e,attrs:{dim:o}});let s=t[0].shape,a=t[0].dtype;t.forEach(p=>{y.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=t.map(p=>{let m=UI({inputs:{input:p},backend:e,attrs:{dim:o}});return i.push(m),m}),l=AD({inputs:u,backend:e,attrs:{axis:o}});return i.forEach(p=>e.disposeIntermediateTensorInfo(p)),l}var lU={kernelName:Ts,backendName:"webgl",kernelFunc:Tpe};var sC=class{constructor(t,e,n){this.variableNames=["x"];this.customUniforms=[{name:"value",type:"float"}];this.outputShape=e.map((l,p)=>l[0]+t[p]+l[1]);let o=t.length,s=Ve(o),a=e.map(l=>l[0]).join(","),i=e.map((l,p)=>l[0]+t[p]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}};var aC=class{constructor(t,e,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"value",type:"float"}];this.outputShape=e.map((h,g)=>h[0]+t[g]+h[1]);let o=t.length,s=Ve(o),a=e.map(h=>h[0]).join(","),i=e.map((h,g)=>h[0]+t[g]).join(","),u=or("rc",o),l=or("source",o),p=`${u[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${l.slice(-2).join()})`,c=[`${s} rc = outputLoc;`,`${u[o-1]} += 1;
       if(${p}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${u[o-2]} += 1;
       if(${u[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${u[o-1]} += 1;
         if(${p}) {`],d=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",f="";for(let h=0,g=o===1?2:4;h<g;h++)f+=`
        ${c[h]}
        if (${d}) {
          result[${h}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${h}] = getChannel(getX(${l.join()}), ${m});
        }
      `;f+=o===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var ED=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,constantValue:a}=n;if(y.sizeFromShape(o.shape)===0){let l=s.map((p,m)=>p[0]+o.shape[m]+p[1]);return vu({backend:e,attrs:{shape:l,value:a,dtype:o.dtype}})}let i=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new aC(o.shape,s,a):new sC(o.shape,s,a),u=[[a]];return e.runWebGLProgram(i,[o],o.dtype,u)},mU={kernelName:Lo,backendName:"webgl",kernelFunc:ED};var xpe=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Ipe=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+Fp+`
  return result;
`,Cpe=dt({opSnippet:xpe,packedOpSnippet:Ipe}),cU={kernelName:_o,backendName:"webgl",kernelFunc:Cpe};function kpe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n,i=o.shape.length,u=[],l=y.parseAxisParam(s,o.shape),p=l,m=C.getAxesPermutation(p,i),c=o;m!=null&&(c=Kt({inputs:{x:o},backend:e,attrs:{perm:m}}),p=C.getInnerMostAxes(p.length,i),u.push(c)),C.assertAxesAreInnerMostDims("prod",p,i);let d;if(e.shouldExecuteOnCPU([c])){let f=e.texData.get(c.dataId).values,{outVals:h,outShape:g,outDtype:b}=ez(c.shape,c.dtype,f,p);d=e.makeTensorInfo(g,b,h)}else{let[f,h]=C.computeOutAndReduceShapes(c.shape,p),g=y.sizeFromShape(h),b=ie({inputs:{x:c},backend:e,attrs:{shape:[-1,g]}}),T=tu(o.dtype),x=eo(b,T,"prod",e);d=ie({inputs:{x},backend:e,attrs:{shape:f}}),u.push(b),u.push(x)}if(a){u.push(d);let f=C.expandShapeToKeepDim(d.shape,l);d=ie({inputs:{x:d},backend:e,attrs:{shape:f}})}return u.forEach(f=>e.disposeIntermediateTensorInfo(f)),d}var dU={kernelName:Bo,backendName:"webgl",kernelFunc:kpe};function Spe(r){let{inputs:t,backend:e,attrs:n}=r,{paramsNestedSplits:o,paramsDenseValues:s,indices:a}=t,{outputRaggedRank:i}=n,u=o.map(b=>e.readSync(b.dataId)),l=o.map(b=>b.shape),p=e.readSync(s.dataId),m=e.readSync(a.dataId),[c,d,f]=tz(u,l,p,s.shape,s.dtype,m,a.shape,i),h=c.map(b=>e.makeTensorInfo([b.length],"int32",b)),g=e.makeTensorInfo(f,s.dtype,d);return h.concat([g])}var fU={kernelName:zm,backendName:"webgl",kernelFunc:Spe};function vpe(r){let{inputs:t,backend:e,attrs:n}=r,{shape:o,values:s,defaultValue:a,rowPartitionTensors:i}=t,{rowPartitionTypes:u}=n,l=e.readSync(o.dataId),p=e.readSync(s.dataId),m=e.readSync(a.dataId),c=i.map(g=>e.readSync(g.dataId)),d=i.map(g=>g.shape),[f,h]=rz(l,o.shape,p,s.shape,s.dtype,m,a.shape,c,d,u);return e.makeTensorInfo(f,s.dtype,h)}var hU={kernelName:Gm,backendName:"webgl",kernelFunc:vpe};var LD=r=>{let{backend:t,attrs:e}=r,{start:n,stop:o,step:s,dtype:a}=e,i=nz(n,o,s,a);return t.makeTensorInfo([i.length],a,i)},gU={kernelName:di,backendName:"webgl",kernelFunc:LD};var Ape="return 1.0 / x;",wpe=Se({opSnippet:Ape}),bU={kernelName:Na,backendName:"webgl",kernelFunc:wpe};var Npe=Ir+`
  return (x < 0.0) ? 0.0 : x;
`,Dpe=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Rpe=Se({opSnippet:Npe,packedOpSnippet:Dpe}),yU={kernelName:Oo,backendName:"webgl",kernelFunc:Rpe};var Fpe=Ir+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Ppe=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Mpe=Se({opSnippet:Fpe,packedOpSnippet:Ppe}),TU={kernelName:Uo,backendName:"webgl",kernelFunc:Mpe};var iC=class{constructor(t,e,n,o,s){this.variableNames=["A"];this.outputShape=[];let[a,i,u,l]=t;this.outputShape=[a,e,n,l];let p=[o&&e>1?i-1:i,o&&n>1?u-1:u],m=[o&&e>1?e-1:e,o&&n>1?n-1:n],c;s?c="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":c="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/m[0]},
          ${p[1]/m[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var uC=class{constructor(t,e,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[a,i,u,l]=t;this.outputShape=[a,e,n,l];let p=[o&&e>1?i-1:i,o&&n>1?u-1:u],m=[o&&e>1?e-1:e,o&&n>1?n-1:n],c;s?c="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":c="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/m[0]},
          ${p[1]/m[1]},
          ${p[1]/m[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function Epe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,p=$().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new uC(o.shape,u,l,s,a):new iC(o.shape,u,l,s,a);return e.runWebGLProgram(p,[o],"float32")}var xU={kernelName:Go,backendName:"webgl",kernelFunc:Epe};var pC=class{constructor(t,e,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=e;let[,o,s]=e,[,a,i]=t,u=[n&&a>1?o-1:o,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],p=u[0]/l[0],m=u[1]/l[1],c=1/p,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Lpe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:a}=n,i=new pC(s.shape,o.shape,a);return e.runWebGLProgram(i,[s],s.dtype)}var IU={kernelName:Wm,backendName:"webgl",kernelFunc:Lpe};var lC=class{constructor(t,e,n,o,s){this.variableNames=["A"];this.outputShape=[];let[a,i,u,l]=t;this.outputShape=[a,e,n,l];let p=[o&&e>1?i-1:i,o&&n>1?u-1:u],m=[o&&e>1?e-1:e,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/m[0]},
          ${p[1]/m[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var mC=class{constructor(t,e,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[a,i,u,l]=t;this.outputShape=[a,e,n,l];let p=[o&&e>1?i-1:i,o&&n>1?u-1:u],m=[o&&e>1?e-1:e,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/m[0]},
          ${p[1]/m[1]},
          ${p[1]/m[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function _pe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,p=$().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new mC(o.shape,u,l,s,a):new lC(o.shape,u,l,s,a);return e.runWebGLProgram(p,[o],o.dtype)}var CU={kernelName:zo,backendName:"webgl",kernelFunc:_pe};var cC=class{constructor(t,e,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=e;let[,o,s]=e,[,a,i]=t,u=[n&&a>1?o-1:o,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],p=u[0]/l[0],m=u[1]/l[1],c=1/p,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function $pe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:a}=n,i=new cC(s.shape,o.shape,a);return e.runWebGLProgram(i,[s],s.dtype)}var kU={kernelName:Um,backendName:"webgl",kernelFunc:$pe};var dC=class{constructor(t,e){this.variableNames=["x"];let n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}let o=i=>e.indexOf(i)!==-1&&t[i]!==1?`${t[i]} - coords[${i}] - 1`:`coords[${i}]`,s=t.map((i,u)=>o(u)).join(","),a=Ve(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var fC=class{constructor(t,e){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;let n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;let o=or("rc",n),s=`${o[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${o[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Ve(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(o.slice())};
          if(${s}){
            result.g = ${l(o.slice())};
          }
          if(${a}) {
            result.b = ${p(o.slice())};
            if(${s}) {
              result.a = ${m(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(f){return c(f)}function l(f){return f[n-1]="("+f[n-1]+" + 1)",c(f)}function p(f){return f[n-2]="("+f[n-2]+" + 1)",c(f)}function m(f){return f[n-1]="("+f[n-1]+" + 1)",f[n-2]="("+f[n-2]+" + 1)",c(f)}function c(f){let h=t.map((T,x)=>d(x,f)),g=h.join(","),b=h.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${b}))`}function d(f,h){return e.indexOf(f)!==-1&&t[f]!==1?`${t[f]} - ${h[f]} - 1`:`${h[f]}`}}};function Bpe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dims:s}=n,a=o.shape.length,i=y.parseAxisParam(s,o.shape);if(a===0)return sr({inputs:{x:o},backend:e});let u=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fC(o.shape,i):new dC(o.shape,i);return e.runWebGLProgram(u,[o],o.dtype)}var SU={kernelName:Da,backendName:"webgl",kernelFunc:Bpe};var hC=class{constructor(t,e){this.variableNames=["Image"];this.outputShape=[];this.customUniforms=[{name:"params",type:"vec4"}];let n=t[1],o=t[2];this.outputShape=t;let s="";typeof e=="number"?s=`float outputValue = ${e.toFixed(2)};`:s=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var vU={kernelName:$a,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=t,i=e,u=new hC(n.shape,s),[l,p]=C.getImageCenter(a,n.shape[1],n.shape[2]),m=[[l,p,Math.sin(o),Math.cos(o)]];return i.runWebGLProgram(u,[n],n.dtype,m)}};var Ope=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,zpe=Se({opSnippet:Ope}),AU={kernelName:Ra,backendName:"webgl",kernelFunc:zpe};var Gpe="return inversesqrt(x);",Upe=Se({opSnippet:Gpe,cpuKernelImpl:oz}),wU={kernelName:Wo,backendName:"webgl",kernelFunc:Upe};var Rf=class{constructor(t,e,n,o,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"];this.outputShape=a;let u=Ve(s.length),l=Ve(a.length),p="";n===1?p="i":n===2&&(p="i, j");let m=`getIndices(${p})`,c="";o===1?c="i":o===2&&(c="i, coords[1]");let d=`getUpdates(${c})`,f=e>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${s});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${m});
              flattenedIndex += index * ${f};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function Wpe(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,{sliceRank:i,numUpdates:u,sliceSize:l,strides:p,outputSize:m}=C.calculateShapes(s,o,a),c=[m/l,l];if(m===0)return e.makeTensorInfo(a,o.dtype);let d=ie({inputs:{x:o},backend:e,attrs:{shape:[u,i]}}),f=ie({inputs:{x:s},backend:e,attrs:{shape:[u,l]}}),h=e.makeTensorInfo([],"float32",new Float32Array([0])),g=new Rf(u,i,d.shape.length,f.shape.length,p,c),b=e.runWebGLProgram(g,[f,d,h],f.dtype),T=ie({inputs:{x:b},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(h),T}var NU={kernelName:Fa,backendName:"webgl",kernelFunc:Wpe};var gC=class{constructor(t,e,n,o){this.variableNames=["sortedSequence","values"];this.customUniforms=[{name:"numInputs",type:"int"}];this.outputShape=[t,n];let s="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,i=$().getNumber("WEBGL_VERSION")===2?s:a,u=o==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function Kpe(r){let{inputs:t,backend:e,attrs:n}=r,{sortedSequence:o,values:s}=t,{side:a}=n,i=new gC(o.shape[0],o.shape[1],s.shape[1],a),u=[[o.shape[1]]];return e.runWebGLProgram(i,[o,s],"int32",u)}var DU={kernelName:Km,backendName:"webgl",kernelFunc:Kpe};var bC=class{constructor(t,e,n){this.variableNames=["c","a","b"];this.outputShape=e;let o,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",o="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],l=[];for(let p=0;p<e.length;p++)l.push(`${i[p]}`),p<t&&u.push(`${i[p]}`);o=u.join(),s=l.join()}let a=Ve(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function Vpe(r){let{inputs:t,backend:e}=r,{condition:n,t:o,e:s}=t,a=new bC(n.shape.length,o.shape,o.shape.length);return e.runWebGLProgram(a,[n,o,s],Et(o.dtype,s.dtype))}var RU={kernelName:Is,backendName:"webgl",kernelFunc:Vpe};var Hpe=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${C.SELU_SCALEALPHA};
  float scale = ${C.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,qpe=Se({opSnippet:Hpe}),FU={kernelName:ji,backendName:"webgl",kernelFunc:qpe};var jpe=ta+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Xpe=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Ype=Se({opSnippet:jpe,packedOpSnippet:Xpe,cpuKernelImpl:az}),PU={kernelName:Vo,backendName:"webgl",kernelFunc:Ype};var Zpe=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Qpe=Se({opSnippet:Zpe}),MU={kernelName:Xi,backendName:"webgl",kernelFunc:Qpe};var Jpe=ta+`
  return sin(x);
`,ele=Se({opSnippet:Jpe}),EU={kernelName:Ko,backendName:"webgl",kernelFunc:ele};var tle=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,rle=Se({opSnippet:tle}),LU={kernelName:Pa,backendName:"webgl",kernelFunc:rle};var nle=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,ole=Se({opSnippet:nle}),_U={kernelName:Yi,backendName:"webgl",kernelFunc:ole};var sle=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,paddings:a}=n;y.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((b,T)=>b*T),u=[[0,0]];u.push(...a);for(let b=1+s.length;b<o.shape.length;++b)u.push([0,0]);let l=[],p=ED({inputs:{x:o},backend:e,attrs:{paddings:u,constantValue:0}}),m=C.getReshaped(p.shape,s,i,!1),c=C.getPermuted(m.length,s.length,!1),d=C.getReshapedPermuted(p.shape,s,i,!1),f=ie({inputs:{x:p},backend:e,attrs:{shape:m}}),h=Kt({inputs:{x:f},backend:e,attrs:{perm:c}}),g=ie({inputs:{x:h},backend:e,attrs:{shape:d}});return l.push(p),l.push(f),l.push(h),l.forEach(b=>e.disposeIntermediateTensorInfo(b)),g},$U={kernelName:ks,backendName:"webgl",kernelFunc:sle};function ale(r){let{inputs:t,backend:e}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=e.readSync(n.dataId),u=e.readSync(o.dataId),l=e.readSync(s.dataId),p=e.readSync(a.dataId)[0],[m,c,d,f,h]=uz(i,n.shape,n.dtype,u,o.dtype,l,p);return[e.makeTensorInfo(c,n.dtype,m),e.makeTensorInfo([c[0]],o.dtype,d),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),e.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var BU={kernelName:Wu,backendName:"webgl",kernelFunc:ale};function ile(r){let{inputs:t,backend:e}=r,{inputIndices:n,inputShape:o,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(e.readSync(o.dataId)),i=e.readSync(n.dataId),u=Array.from(e.readSync(s.dataId)),[l,p,m]=pz(i,n.shape,n.dtype,a,u);return[e.makeTensorInfo(p,n.dtype,l),e.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var OU={kernelName:Zi,backendName:"webgl",kernelFunc:ile};function ule(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let a=e.readSync(n.dataId),i=e.readSync(o.dataId),u=e.readSync(s.dataId),[l,p]=Jx(a,n.shape,n.dtype,i,u,!0);return e.makeTensorInfo(p,n.dtype,l)}var zU={kernelName:Ku,backendName:"webgl",kernelFunc:ule};function ple(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let a=e.readSync(n.dataId),i=e.readSync(o.dataId),u=e.readSync(s.dataId),[l,p]=Jx(a,n.shape,n.dtype,i,u);return e.makeTensorInfo(p,n.dtype,l)}var GU={kernelName:Vu,backendName:"webgl",kernelFunc:ple};function lle(r){let{inputs:t,backend:e,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=t,{outputShape:i}=n,{sliceRank:u,numUpdates:l,sliceSize:p,strides:m,outputSize:c}=C.calculateShapes(s,o,i),d=!1;if(s.dtype==="string"){let b=e.bufferSync(o),T=e.bufferSync(s),x=y.decodeString(e.readSync(a.dataId)[0]),I=sz(b,T,i,c,p,l,u,m,x,d);return e.makeTensorInfo(i,I.dtype,I.values)}let f=new Rf(l,u,o.shape.length,s.shape.length,m,[c,1],d),h=e.runWebGLProgram(f,[s,o,a],s.dtype),g=ie({inputs:{x:h},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(h),g}var UU={kernelName:Hu,backendName:"webgl",kernelFunc:lle};function mle(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],u=C.prepareSplitSize(o,s,i),l=o.shape.length,p=new Array(l).fill(0),m=o.shape.slice();return u.map(c=>{let d=[...m];d[i]=c;let f=ni({inputs:{x:o},backend:e,attrs:{begin:p,size:d}});return p[i]+=c,f})}var WU={kernelName:Ss,backendName:"webgl",kernelFunc:mle};var KU="return sqrt(x);",cle=Se({opSnippet:KU,packedOpSnippet:KU,cpuKernelImpl:lz}),VU={kernelName:Ho,backendName:"webgl",kernelFunc:cle};var dle="return x * x;",fle=Se({opSnippet:dle}),HU={kernelName:fi,backendName:"webgl",kernelFunc:fle};var qU="return (a - b) * (a - b);",hle=dt({opSnippet:qU,packedOpSnippet:qU}),jU={kernelName:Xo,backendName:"webgl",kernelFunc:hle};function gle({inputs:r,attrs:t,backend:e}){let{x:n}=r,o=Ir+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new an(n.shape,o);return e.runWebGLProgram(s,[n],n.dtype)}var XU={kernelName:ws,backendName:"webgl",kernelFunc:gle};var yC=class{constructor(t,e,n){this.variableNames=["x"];this.outputShape=n;let o=n.length,s=Ve(n.length),a=Ve(n.length),i="";if(o===1)i="coords * strides + begin";else{let u=0;i=n.map((l,p)=>(u++,n.length===1?`coords * strides[${p}] + begin[${p}]`:`coords[${u-1}] * strides[${p}] + begin[${p}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${t});
      ${s} strides = ${s}(${e});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function ble(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:T,end:x,strides:I}=xt.sliceInfo(o.shape,s,a,i,u,l,p,m,c),k;if(h)k=ie({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let R=xt.computeOutShape(T,x,I),F=ni({inputs:{x:o},backend:e,attrs:{begin:T,size:R}});k=ie({inputs:{x:F},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(F)}else if(e.shouldExecuteOnCPU([o])){let F=e.readSync(o.dataId),P=Ie(o.shape,o.dtype,F),L=mz(d,P,I,T);k=e.makeTensorInfo(f,o.dtype,L.values)}else{let F=new yC(T,I,d);k=e.runWebGLProgram(F,[o],o.dtype)}let A=ie({inputs:{x:k},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(k),A}var YU={kernelName:Ma,backendName:"webgl",kernelFunc:ble};function yle(r){let{inputs:t,backend:e,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:m}=t,c=e.readSync(p.dataId),d=e.readSync(m.dataId),[f,h]=cz(c,d,o,s,a,i,u,l);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(m.shape,"int32",h)]}var ZU={kernelName:hi,backendName:"webgl",kernelFunc:yle};function Tle(r){let{inputs:t,backend:e,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=e.readSync(s.dataId),u=e.readSync(a.dataId)[0],[l,p,m]=dz(i,u,o),c=p.length;return[e.makeTensorInfo([c,2],"int32",l),e.makeTensorInfo([c],"string",p),e.makeTensorInfo([2],"int32",new Int32Array(m))]}var QU={kernelName:qu,backendName:"webgl",kernelFunc:Tle};function xle(r){let{inputs:t,backend:e,attrs:n}=r,{numBuckets:o}=n,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=e.readSync(s.dataId),i=fz(a,o);return e.makeTensorInfo(s.shape,"int32",i)}var JU={kernelName:ju,backendName:"webgl",kernelFunc:xle};var Ile="return tan(x);",Cle=Se({opSnippet:Ile}),eW={kernelName:Ea,backendName:"webgl",kernelFunc:Cle};var kle=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Sle=Se({opSnippet:kle}),tW={kernelName:Zo,backendName:"webgl",kernelFunc:Sle};var TC=class{constructor(t,e){this.variableNames=["A"];let n=new Array(t.length);for(let a=0;a<n.length;a++)n[a]=t[a]*e[a];this.outputShape=n,this.rank=n.length;let o=Ve(this.rank),s=vle(t);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function vle(r){let t=r.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${r[0]})`;let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let o=0;o<r.length;o++)n.push(`imod(${e[o]}, ${r[o]})`);return n.join()}function _D(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reps:s}=n;if(o.dtype==="string"||o.shape.length>5){let u=e.readSync(o.dataId),l=o.dtype==="string"?u.map(c=>y.decodeString(c)):u,p=Ie(o.shape,o.dtype,l),m=gz(p,s);return e.makeTensorInfo(m.shape,m.dtype,m.values)}let a=new TC(o.shape,s);return e.runWebGLProgram(a,[o],o.dtype)}var rW={kernelName:Dn,backendName:"webgl",kernelFunc:_D};var xC=class{constructor(t){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}];this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},IC=class{constructor(t){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}];this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function em(r,t){t!==null&&r.disposeIntermediateTensorInfo(t)}function nW(r){let t=1;for(;t<r;)t*=2;return t}function Ale(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{k:s,sorted:a}=n,i=$().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=$().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=o.shape,p=l[l.length-1];if(e.shouldExecuteOnCPU([o])||p<i||s>u){let L=e.readSync(o.dataId),[O,G]=bz(L,l,o.dtype,s,a);return[e.makeTensorInfo(O.shape,O.dtype,O.values),e.makeTensorInfo(G.shape,G.dtype,G.values)]}if(s===0)return l[l.length-1]=0,[e.makeTensorInfo(l,o.dtype,[]),e.makeTensorInfo(l,"int32",[])];if(p===1)return[o,vu({attrs:{shape:l,dtype:"int32",value:0},backend:e})];let m=e.texData.get(o.dataId),c=m!==null&&m.isPacked,d=c?e.unpackTensor(o):o,h=y.sizeFromShape(l)/p,g=ie({inputs:{x:d},attrs:{shape:[h,p]},backend:e});c&&em(e,d);let b=nW(s),T=nW(p),x=null,I=()=>x===null?[g,g]:[g,x],k=(L,O,G)=>{let W=I(),H=new xC(G),q=[[p],[x===null?1:0],[Number.NEGATIVE_INFINITY],[L],[O]],Z=x;x=e.runWebGLProgram(H,W,"int32",q),em(e,Z)};for(let L=1;L<b;L*=2){let O=L*2;for(let G=L;G>=1;G/=2)k(O,G,[h,T])}for(let L=T;L>b;L/=2){let O=I(),G=new IC([h,L/2]),H=[[p],[x===null?1:0],[b]],V=x;x=e.runWebGLProgram(G,O,"int32",H),em(e,V);let q=b/2,Z=q*2;for(let j=q;j>=1;j/=2)k(Z,j,x.shape)}let A=x;x=ni({inputs:{x},backend:e,attrs:{begin:0,size:[h,s]}}),em(e,A);let R=DD({inputs:{x:g,indices:x},backend:e,attrs:{axis:1,batchDims:1}});em(e,g);let F=l.slice(0,-1);F.push(s),A=x,x=ie({inputs:{x},attrs:{shape:F},backend:e}),em(e,A);let P=R;return R=ie({inputs:{x:R},attrs:{shape:F},backend:e}),em(e,P),[R,x]}var oW={kernelName:La,backendName:"webgl",kernelFunc:Ale};var CC=class{constructor(t,e,n,o,s,a){this.variableNames=["Image","Transforms"];this.outputShape=a;let i=n==="nearest"?1:2,u;switch(o){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function wle(r){let{inputs:t,backend:e,attrs:n}=r,{image:o,transforms:s}=t,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=n,[p,m,c,d]=o.shape,[f,h]=l??[m,c],g=[p,f,h,d],b=new CC(m,c,a,i,u,g);return e.runWebGLProgram(b,[o,s],"float32")}var sW={kernelName:_a,backendName:"webgl",kernelFunc:wle};function Nle(r){let{inputs:t,attrs:e,backend:n}=r,{axis:o}=e,{x:s}=t;ei(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let a=n.readSync(s.dataId),{outputValues:i,outputShape:u,indices:l}=yz(a,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,i),n.makeTensorInfo([l.length],"int32",l)]}var aW={kernelName:Vm,backendName:"webgl",kernelFunc:Nle};function Dle(r){let{inputs:t,backend:e,attrs:n}=r,{value:o}=t,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,u=o.shape[s],l=new Array(i-1),p=0;for(let h=0;h<i;h++)h!==s&&(l[p++]=a.shape[h]);let m=[],c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let f=new Array(u);for(let h=0;h<f.length;h++){c[s]=h;let g=ni({inputs:{x:a},backend:e,attrs:{begin:c,size:d}}),b=ie({inputs:{x:g},backend:e,attrs:{shape:l}});f[h]=b,m.push(g)}return m.forEach(h=>e.disposeIntermediateTensorInfo(h)),f}var iW={kernelName:vs,backendName:"webgl",kernelFunc:Dle};var kC=class{constructor(t,e){this.variableNames=["x","segmentIds"];let n=t.windowSize,o=t.batchSize,s=t.inSize,a=t.numSegments,i=a*Math.ceil(s/n);this.outputShape=[o,i];let u="0.0",l="sumValue",p=Math.floor(n/4)*4,m=n%4,c=`
        sumValue += dot(values, segFilter);
    `,d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${c}
        }

        int inIdx = inOffset + ${p};
        if (${m===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${c}
        } else if (${m===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${c}
        } else if (${m===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${c}
        }
        setOutput(${l});
      }
    `}};function Rle(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,segmentIds:s}=t,{numSegments:a}=n,i=o.shape.length,u=[],l=0,p=C.getAxesPermutation([l],i),m=o;p!=null&&(m=Kt({inputs:{x:o},backend:e,attrs:{perm:p}}),u.push(m),l=C.getInnerMostAxes(1,i)[0]);let c=C.segment_util.computeOutShape(m.shape,l,a),d=y.sizeFromShape([m.shape[l]]),f=ie({inputs:{x:m},backend:e,attrs:{shape:[-1,d]}});u.push(f);let h=tu(o.dtype),g=(I,k,A,R,F)=>{let P=I.shape[0],L=I.shape[1],O=C.segment_util.segOpComputeOptimalWindowSize(L,F),G={windowSize:O,inSize:L,batchSize:P,numSegments:F},W=new kC(G,k),H=e.compileAndRun(W,[I,A],R);if(u.push(H),H.shape[1]===F)return H;let V=LD({backend:e,attrs:{start:0,stop:F,step:1,dtype:"float32"}}),q=_D({inputs:{x:V},backend:e,attrs:{reps:[L/O]}});return u.push(V),u.push(q),g(H,k,q,R,F)},b=g(f,"unsortedSegmentSum",s,h,a),T=ie({inputs:{x:b},backend:e,attrs:{shape:c}}),x=T;if(p!=null){u.push(T);let I=C.getUndoAxesPermutation(p);x=Kt({inputs:{x},backend:e,attrs:{perm:I}})}return u.forEach(I=>e.disposeIntermediateTensorInfo(I)),x}var uW={kernelName:Xu,backendName:"webgl",kernelFunc:Rle};var Fle=[jz,Yz,Zz,Qz,e3,t3,r3,n3,a3,i3,u3,p3,l3,m3,c3,d3,f3,h3,g3,b3,y3,x3,I3,C3,A3,N3,D3,_z,F3,M3,E3,L3,_3,$3,B3,O3,z3,G3,U3,V3,H3,q3,j3,X3,Y3,Z3,Q3,J3,eG,tG,rG,nG,oG,sG,aG,uG,pG,lG,mG,dG,fG,hG,gG,bG,yG,TG,xG,IG,Lz,CG,P3,kG,SG,vG,$z,AG,wG,NG,DG,RG,FG,PG,MG,EG,LG,$G,BG,OG,zG,GG,UG,KG,HG,qG,jG,XG,YG,tU,Uz,rU,nU,oU,sU,k3,aU,pU,lU,mU,cU,Bz,dU,fU,hU,gU,S3,ZG,bU,yU,TU,Kz,xU,IU,CU,kU,SU,vU,AU,wU,NU,DU,RU,FU,PU,MU,EU,LU,T3,eU,_U,$U,BU,OU,zU,GU,UU,WU,VU,HU,jU,XU,YU,ZU,QU,JU,JG,Hz,eW,tW,rW,oW,sW,qz,aW,iW,uW,iU];for(let r of Fle)Qi(r);var Au=$();Au.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Au.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Au.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);Au.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);Au.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Au.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Au.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Au.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);Au.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);var SC=class{constructor(t){this.device=t;this.numUsedBuffers=0;this.numFreeBuffers=0;this.freeBuffers=new Map;this.usedBuffers=new Map;this.numBytesUsed=0;this.numBytesAllocated=0}acquireUploadBuffer(t,e){return this.acquireBuffer(t,e,!0)}acquireBuffer(t,e,n=!1){let o=pW(t,e);if(this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.usedBuffers.has(o)||this.usedBuffers.set(o,[]),this.numBytesUsed+=t,this.numUsedBuffers++,this.freeBuffers.get(o).length>0){this.numFreeBuffers--;let a=this.freeBuffers.get(o).shift();return this.usedBuffers.get(o).push(a),a}this.numBytesAllocated+=t;let s=this.device.createBuffer({size:t,usage:e,mappedAtCreation:n});return this.usedBuffers.get(o).push(s),s}releaseBuffer(t,e,n){if(this.freeBuffers.size===0)return;let o=pW(e,n);this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.freeBuffers.get(o).push(t),this.numFreeBuffers++,this.numUsedBuffers--;let s=this.usedBuffers.get(o),a=s.indexOf(t);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");s.splice(a,1),this.numBytesUsed-=e}releaseUploadBuffer(t,e,n){t.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(t,e,n)},o=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((t,e)=>{t.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((t,e)=>{t.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function pW(r,t){return`${r}_${t}`}var vC=class{constructor(t){this.device=t;this.numUsedTextures=0;this.numFreeTextures=0;this.freeTextures=new Map;this.usedTextures=new Map;this.numBytesUsed=0;this.numBytesAllocated=0}acquireTexture(t,e,n,o){let s=mW(n),a=t*e*s,i=lW(t,e,n,o);if(this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.usedTextures.has(i)||this.usedTextures.set(i,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(i).length>0){this.numFreeTextures--;let l=this.freeTextures.get(i).shift();return this.usedTextures.get(i).push(l),l}this.numBytesAllocated+=a;let u=this.device.createTexture({size:[t,e],format:n,usage:o});return this.usedTextures.get(i).push(u),u}releaseTexture(t,e,n,o,s){if(this.freeTextures.size===0)return;let a=lW(e,n,o,s);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(t),this.numFreeTextures++,this.numUsedTextures--;let i=this.usedTextures.get(a),u=i.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(u,1);let l=mW(o),p=e*n*l;this.numBytesUsed-=p}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((t,e)=>{t.forEach(n=>{n.destroy()})}),this.usedTextures.forEach((t,e)=>{t.forEach(n=>{n.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function lW(r,t,e,n){return`${r}_${t}_${e}_${n}`}function mW(r){if(r==="rgba8unorm")return 16;throw new Error(`${r} is not supported!`)}function cW(r,t){if(Math.max(...r)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let e=r.length,n=r.map(s=>`${t}[${s}]`),o=new Array(e-1);o[e-2]=n[e-1];for(let s=e-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}var hW=(r,t,e,n)=>{let o={dtype:n.dtype,shape:n.shape},s=Ple(e,o,t),a=r.createShaderModule({code:s,label:t.constructor.name});return r.createComputePipeline({compute:{module:a,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})};function ar(r){if(r<=1)return"i32";if(r===2)return"vec2<i32>";if(r===3)return"vec3<i32>";if(r===4)return"vec4<i32>";if(r===5)return"vec5";if(r===6)return"vec6";throw Error(`GPU for rank ${r} is not yet supported`)}function ra(r){if(r===0)return"x";if(r===1)return"y";if(r===2)return"z";if(r===3)return"w";if(r===4)return"u";if(r===5)return"v";throw Error(`Index ${r} is not yet supported`)}function xe(...r){let t;switch(r.length){case 0:t=`
        ${Ep()}
        fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                  @builtin(global_invocation_id) GlobalId : vec3<u32>,
                  @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
          localId = LocalId;
          globalId = GlobalId;
          numWorkgroups = NumWorkgroups;
          main();
        }

        fn main()
      `;break;case 1:t=`
        ${Ep()}
        fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                  @builtin(global_invocation_id) GlobalId : vec3<u32>,
                  @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
          localId = LocalId;
          globalId = GlobalId;
          numWorkgroups = NumWorkgroups;
          main(getGlobalIndex());
        }

        fn main(${r[0]} : i32)
      `;break;default:throw Error("Unreachable")}return t}function Ep(){return`
  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function Ple(r,t,e){let n=[];if(n.push(`
      const workGroupSizeX = ${e.workGroupSize[0]}u;
      const workGroupSizeY = ${e.workGroupSize[1]}u;
      const workGroupSizeZ = ${e.workGroupSize[2]}u;

      var<private> localId: vec3<u32>;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${bW(e)?"  return i32(globalId.x);":`  let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
                   localId.y * workGroupSizeX + localId.x;
               let workGroupID = (globalId - localId)/vec3<u32>(
                   workGroupSizeX, workGroupSizeY, workGroupSizeZ);

               return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
                   workGroupID.y * numWorkgroups.x + workGroupID.x) *
                   (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
                   localInvocationIndex);
        `}
      }
    `),e.isFromPixels)return n.push(`
        struct Uniform {
          size            : i32,
          numChannels     : i32,
          outShapeStrides : vec2<i32>,
        };

        @group(0) @binding(0) var<storage, read_write> result: array<${Ff(t.dtype,e.isVec4)}>;
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `),[dW,n.join(`
`),fW(t.shape),e.getUserCode()].join(`
`);let o="struct Uniforms { NAN : f32, ";e.variableNames.forEach((c,d)=>{let f=ar(r[d].shape.length);o+=`${c.charAt(0).toLowerCase()+c.slice(1)}Shape : ${f}, `}),o+=`outShape : ${ar(t.shape.length)}, `;let a=t.shape.length-1;o+=`
         outShapeStrides: ${ar(a)}, `,e.size&&(o+="size : i32, "),e.uniforms&&(o+=e.uniforms),o+="};",o=Ole(o),n.push(o),e.atomic?n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${Ff(t.dtype,e.isVec4)}>;
    `),e.variableNames.forEach((c,d)=>{n.push(`
      @group(0) @binding(${1+d}) var<storage, read> ${c}: array<${e.variableTypes?e.variableTypes[d]:Ff(r[d].dtype,e.isVec4)}>;
        `)}),o!==""&&n.push(`
      @group(0) @binding(${1+e.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);let u=_le(t.shape,e.dispatchLayout),l=[dW,n.join(`
`),fW(t.shape),u,$le(t.shape.length)];e.atomic||l.push(Ble(t.shape,t.dtype,e.isVec4));let p=r.map((c,d)=>Lle(c,t.shape,e.variableTypes?e.variableTypes[d]==="vec4<f32>":e.isVec4,e.dispatchLayout.x.length===t.shape.length)).join(`
`);return l.push(p),l.push(e.getUserCode()),l.join(`
`)}function gW(r,t,e,n){let o=r.shaderKey;if(r.isFromPixels)return o;let s=e.map(p=>p.dtype).concat(n.dtype),a=e.map(p=>C.getBroadcastDims(p.shape,n.shape)),i=e.map(p=>y.arraysEqual(p.shape,n.shape)).join("_"),u=a.map(p=>p.join("_")).join(";"),l=bW(r)?"flatDispatch":"";return o+="_"+(r.workGroupSize?r.workGroupSize.join(","):"")+t.map(p=>p.length).join(",")+s.join(",")+r.variableNames.join(",")+u+i+l,o}var dW=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let modulo: i32 = a % b;
    if (sign < 0. && modulo != 0) {
      res = res - 1;
    }
    return res;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));
  }
`;function fW(r){let t=r.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let e=y.computeStrides(r),n=ar(t),o=[];for(let a=0;a<t;a++)o.push(`d${a}`);if(e.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let s;return s="var index2 = index;"+e.map((a,i)=>{let u=`let ${o[i]} = index2 / uniforms.outShapeStrides.${ra(i)}`,l=i===e.length-1?`let ${o[i+1]} = index2 - ${o[i]} * uniforms.outShapeStrides.${ra(i)}`:`index2 = index2 - ${o[i]} * uniforms.outShapeStrides.${ra(i)}`;return`${u}; ${l};`}).join(""),`
    fn getCoordsFromIndex(index : i32) -> ${n} {
      ${s}
      return ${n}(${o.join(",")});
    }
  `}function Mle(r,t){let e=r.name,n=r.shape.length,o=ar(n),s="get"+e.charAt(0).toUpperCase()+e.slice(1),a=["d0","d1","d2","d3","d4","d5"].slice(0,n),i=a.map(p=>`${p} : i32`).join(", ");if(n<1)return t?`
        fn ${s}() -> vec4<f32> {
          return vec4<f32>(${e}[0]);
        }
      `:`
      fn ${s}() ->f32 {
        return f32(${e}[0]);
      }
    `;let u=`uniforms.${e.charAt(0).toLowerCase()+e.slice(1)}Shape`,l=`${n}D`;return n===0&&(l="1D"),t?`
      fn ${s}(${i}) -> vec4<f32> {
        return vec4<f32>(${e}[getIndexFromCoords${l}(${o}(${a.join(",")}),
          ${u}) / 4]);
      }
      `:`
    fn ${s}(${i}) -> f32 {
      return f32(${e}[getIndexFromCoords${l}(${o}(${a.join(",")}),
        ${u})]);
    }
   `}function Ele(r,t,e,n){let o=r.name,s=o.charAt(0).toUpperCase()+o.slice(1),a="get"+s+"ByOutput",i=r.shape.length,u=t.length,l=ar(u);if(y.arraysEqual(r.shape,t)&&n)return e?`
      fn ${a}Index(globalIndex : i32) -> vec4<f32> {
        return vec4<f32>(${o}[globalIndex]);
      }

      fn ${a}Coords(coords : ${l}) -> vec4<f32> {
        return vec4<f32>(${o}[${u>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
      }
      `:`
    fn ${a}Index(globalIndex : i32) -> f32 {
      return f32(${o}[globalIndex]);
    }

    fn ${a}Coords(coords : ${l}) -> f32 {
      return f32(${o}[${u>1?"getOutputIndexFromCoords(coords)":"coords"}]);
    }
    `;let p=C.getBroadcastDims(r.shape,t),m=u-i,c="";if(i===0)return e?`
    fn ${a}Index(globalIndex : i32) -> vec4<f32> {
      return get${s}();
    }

    fn ${a}Coords(coords : ${l}) -> vec4<f32> {
      return get${s}();
    }
  `:`
    fn ${a}Index(globalIndex : i32) -> f32{
      return get${s}();
    }

    fn ${a}Coords(coords : ${l}) -> f32{
      return get${s}();
    }
  `;u<2&&p.length>=1?c="coords = 0;":c=p.map(g=>`coords.${ra(g+m)} = 0;`).join(`
`);let d="";if(u<2&&i>0)d="coords";else if(u>1){let g=ar(i),b=r.shape.map((T,x)=>`coords.${ra(x+m)}`).join(", ");d=`${g}(${b})`}else d="coords";let f=`uniforms.${o.charAt(0).toLowerCase()+o.slice(1)}Shape`,h=`${i}D`;return e?`
    fn ${a}Index(globalIndex : i32) -> vec4<f32> {
      var coords = getCoordsFromIndex(globalIndex);
      ${c}
      return ${o}[getIndexFromCoords${h}(${d}, ${f}) / 4];
    }

    fn ${a}Coords(coordsIn : ${l}) -> vec4<f32> {
      var coords = coordsIn;
      ${c}
      return ${o}[getIndexFromCoords${h}(${d}, ${f}) / 4];
    }
  `:`
  fn ${a}Index(globalIndex : i32) -> f32 {
    var coords = getCoordsFromIndex(globalIndex);
    ${c}
    return f32(${o}[getIndexFromCoords${h}(${d}, ${f})]);
  }

  fn ${a}Coords(coordsIn : ${l}) -> f32 {
    var coords = coordsIn;
    ${c}
    return f32(${o}[getIndexFromCoords${h}(${d}, ${f})]);
  }
`}function Lle(r,t,e,n){let o=Mle(r,e);return r.shape.length<=t.length&&(o+=Ele(r,t,e,n)),o}function _le(r,t){let{x:e,y:n=[],z:o=[]}=t,s=r.length,a=e.length+n.length+o.length;if(a!==s)return"";if(e.length===s)return`fn getOutputCoords() -> ${ar(s)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let i="",u=[e,n,o];for(let c=0;c<u.length;c++){let d=u[c];if(d.length!==0)if(d.length===1)i+=`let d${d[0]} = i32(globalId[${c}]);`;else{let f=cW(d,"uniforms.outShape");i+=`var index${c} = i32(globalId[${c}]);`;for(let h=0;h<f.length;h++)i+=`let d${d[h]} = index${c} / ${f[h]};`,h===f.length-1?i+=`let d${d[h+1]} = index${c} - d${d[h]} * ${f[h]};`:i+=`index${c} = index${c} - d${d[h]} * ${f[h]};`}}let l=[];for(let c=0;c<a;c++)l.push(`d${c}`);let p=ar(a),m=`fn getOutputCoords() -> ${p} {
  ${i}
`;return l.length===0?m+=`return ${p}(0); }`:m+=`return ${p}(${l.join(",")}); }`,m}function $le(r){let t="";switch(r){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:t+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:t+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:y.assert(!1,()=>`Unsupported ${r}D shape`);break}return t}function bW(r){return r.dispatch[1]===1&&r.dispatch[2]===1}function Ff(r,t){return r==="float32"?t?"vec4<f32>":"f32":r==="int32"||r==="bool"?t?"vec4<i32>":"i32":r}function Ble(r,t,e){let n=r.length,o=Ff(t,e),s;if(e?s=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result[flatIndex] = ${o}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result[flatIndex] = ${o}(value);
    }`:s=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result[flatIndex] = ${o}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result[flatIndex] = ${o}(value);
    }`,n>=2){let a=["d0","d1","d2","d3","d4","d5"].slice(0,n),i=ar(n);e?s+=`
      fn setOutputAtCoords(${a.map(u=>`${u} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${a.map(u=>`${u} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:s+=`
      fn setOutputAtCoords(${a.map(u=>`${u} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${a.map(u=>`${u} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return s}function Ole(r){let t=/(\w+)\s*:\s*vec(5|6)/g;r=r.replace(t,n=>"@align(16) "+n);let e=/vec(5|6)\s*,\s*(\w+)/g;return r=r.replace(e,(n,o,s)=>`vec${o}, @align(16) ${s}`),r}var GD={};He(GD,{ArrayBufferToTypedArray:()=>OD,GPUBytesPerElement:()=>BD,MatMulProgramType:()=>zD,computeDispatch:()=>ye,computeWorkGroupInfoForMatMul:()=>$D,computeWorkGroupSizeForConv2d:()=>gg,computeWorkPerThreadForConv2d:()=>bg,flatDispatchLayout:()=>ke,isWebGPUSupported:()=>yg,tilesFitEvenlyIntoShape:()=>Gle});var tm=r=>{let t=1;for(let e=0;e<r.length;e++)t*=r[e];return t};function Gle(r,t){if(r.length!==t.length)throw new Error(`Cannot compute whether rank ${r.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((e,n)=>e%r[n]===0)}function ye(r,t,e=[1,1,1],n=[1,1,1]){let[o,s,a]=[Math.ceil(tm(r.x.map(i=>t[i]))/(e[0]*n[0])),r.y?Math.ceil(tm(r.y.map(i=>t[i]))/(e[1]*n[1])):1,r.z?Math.ceil(tm(r.z.map(i=>t[i]))/(e[2]*n[2])):1];return[o,s,a]}function $D(r,t,e,n=!1){let o=[8,8,1],s=[4,4,1];return n||(r<=8&&(s[1]=1),t<=16&&e<=16&&(o[0]=4)),{workGroupSize:o,elementsPerThread:s}}function gg(r,t,e=!1){if(e)return[8,8,1];let n=tm(r.x.map(s=>t[s])),o=tm(r.y.map(s=>t[s]));return n<=4?[4,16,1]:o<=4?[16,4,1]:[16,16,1]}function bg(r,t,e=!1){if(e)return[4,4,1];let n=tm(r.x.map(s=>t[s])),o=tm(r.y.map(s=>t[s]));return n<=4?[1,2,1]:o<=4?[2,1,1]:[2,2,1]}function ke(r){return{x:r.map((t,e)=>e)}}function BD(r){if(r==="float32"||r==="int32"||r==="bool"||r==="string")return 4;if(r==="complex64")return 8;throw new Error(`Unknown dtype ${r}`)}function OD(r,t){if(t==="float32")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${t}`)}function yg(){return(typeof window<"u"||typeof WorkerGlobalScope<"u")&&!!navigator.gpu}var zD=(s=>(s[s.MatMulReduceProgram=0]="MatMulReduceProgram",s[s.MatMulSplitKProgram=1]="MatMulSplitKProgram",s[s.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",s[s.MatMulPackedProgram=3]="MatMulPackedProgram",s[s.MatMulMax=4]="MatMulMax",s))(zD||{});var Ule=$().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),Wle=(r,t)=>{let e=r.limits.maxComputeWorkgroupsPerDimension,n=t.dispatchLayout,o=t.dispatch;if(o.every(a=>a<=e))return o;y.assert(o[0]>e&&n.y===void 0&&n.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let s=Math.ceil(Math.sqrt(o[0]));return s>e?(s=Math.ceil(Math.cbrt(o[0])),y.assert(s<=e,()=>"Total dispatch size exceeds WebGPU maximum."),[s,s,s]):[s,s,1]},UD=class extends oo{constructor(e){super();this.commandQueueOwnedIds=new WeakSet;this.dispatchNumberInEncoder=0;this.disposed=!1;this.downloadWaitMs=0;this.tensorDataPendingDisposal=[];this.stagingPendingDisposal=[];this.uniformPendingDisposal=[];this.uploadWaitMs=0;if(!yg())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=e.features.has("timestamp-query"),this.bufferManager=new SC(this.device),this.textureManager=new vC(this.device),this.tensorMap=new ia(this,Mn()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),$().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return UD.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}disposeData(e,n=!1){if(this.tensorDataPendingDisposal.indexOf(e)>=0)return!1;if(!this.tensorMap.has(e))return!0;let o=this.tensorMap.get(e);if(this.decRef(e),!n&&o.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDataPendingDisposal.push(e),!1;let{complexTensorInfos:s}=this.tensorMap.get(e);return s!=null&&(this.disposeData(s.real.dataId,n),this.disposeData(s.imag.dataId,n)),this.releaseResource(e),this.tensorMap.delete(e),!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let n=this.tensorMap.get(e);if(!(!n||!n.resourceInfo)){if("texture"in n.resourceInfo){let o=n.resourceInfo;o.texture instanceof GPUTexture&&this.textureManager.releaseTexture(o.texture,o.width,o.height,o.format,o.usage),o.texture=null}else{let o=n.resourceInfo;this.bufferManager.releaseBuffer(o.buffer,o.size,o.usage),o.buffer=null}n.resourceInfo=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let n=this.tensorMap.get(e);n.refCount++}decRef(e){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);n.refCount--}}write(e,n,o){if(o==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.tensorMap.set(s,{dtype:o,shape:n,values:e,refCount:1}),s}move(e,n,o,s,a){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:s,shape:o,values:n,refCount:a})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.size,e.usage)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.size,e.usage)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.end(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e,n){let o=this.bufferManager.acquireBuffer(n,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,o,0,n),this.submitQueue(),await o.mapAsync(GPUMapMode.READ);let s=o.getMappedRange().slice(0);return o.unmap(),o!=null&&this.bufferManager.releaseBuffer(o,n,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),$().getBool("WEBGPU_USE_PROFILE_TOOL")&&(y.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),s}convertAndCacheOnCPU(e,n){let o=this.tensorMap.get(e);return this.releaseResource(e),o.values=n,o.values}readSync(e){let n=this.tensorMap.get(e),{values:o}=n;if(o==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return o}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let n=this.tensorMap.get(e),{values:o}=n;if(o!=null)return this.convertAndCacheOnCPU(e,o);let s;if(n.dtype==="complex64"){let a=await Promise.all([this.read(n.complexTensorInfos.real.dataId),this.read(n.complexTensorInfos.imag.dataId)]),i=a[0],u=a[1];s=C.mergeRealAndImagArrays(i,u)}else{let a=n.resourceInfo,i=await this.getBufferData(a.buffer,a.size);s=OD(i,n.dtype)}return this.convertAndCacheOnCPU(e,s),s}readToGPU(e){let n=this.tensorMap.get(e),{values:o,dtype:s,shape:a,resourceInfo:i}=n;if(s==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(i==null)throw o!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=i.size,l=this.bufferManager.acquireBuffer(u,i.usage);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(i.buffer,0,l,0,u),this.submitQueue();let p=this.makeTensorInfo(a,s),m=Mn().makeTensorFromTensorInfo(p),c=this.tensorMap.get(p.dataId);return c.resourceInfo={size:u,usage:this.defaultGpuBufferUsage(),buffer:l},{tensorRef:m,buffer:l,bufSize:u}}bufferSync(e){let n=this.readSync(e.dataId);if(e.dtype==="string")try{let o=n.map(s=>y.decodeString(s));return Ie(e.shape,e.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ie(e.shape,e.dtype,n)}async time(e){this.supportTimeQuery||console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled. Using performance.now is not workable for webgpu since it doesn't support synchronous data read from GPU.");let n=this.activeTimers,o=[],s=!1;this.programTimersStack==null?(this.programTimersStack=o,s=!0):this.activeTimers.push(o),this.activeTimers=o,e();let a=y.flatten(this.activeTimers.map(p=>p.query)).filter(p=>p!=null),i=y.flatten(this.activeTimers.map(p=>p.name)).filter(p=>p!=null);this.activeTimers=n,s&&(this.programTimersStack=null);let u={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},l=await Promise.all(a);return u.kernelMs=y.sum(l),u.getExtraProfileInfo=()=>l.map((p,m)=>({name:i[m],ms:p})).map(p=>`${p.name}: ${p.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,u}makeTensorInfo(e,n,o){return n==="string"&&o!=null&&o.length>0&&y.isString(o[0])&&(o=o.map(a=>y.encodeString(a))),{dataId:this.write(o,e,n),shape:e,dtype:n}}tensorToBinding(e){if(!e)return null;let n=this.tensorMap.get(e.dataId);if("texture"in n.resourceInfo){let s=n.resourceInfo;return s.texture instanceof GPUExternalTexture?s.texture:s.texture.createView()}let o=n.resourceInfo;return{offset:0,size:o.size,buffer:o.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let n=this.tensorMap.get(e);if(n.resourceInfo)return;let o=BD(n.dtype)*y.sizeFromShape(n.shape),s=this.bufferManager.acquireBuffer(o,this.defaultGpuBufferUsage());if(n.resourceInfo={size:o,usage:this.defaultGpuBufferUsage(),buffer:s},n.values){let a=this.bufferManager.acquireUploadBuffer(o,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),i=a.getMappedRange();n.dtype==="int32"||n.dtype==="bool"?new Int32Array(i).set(n.values):new Float32Array(i).set(n.values),a.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(a,0,s,0,o);let u={size:o,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:a};this.stagingPendingDisposal.push(u)}}makeUniforms(e){let n=0,o=0,s=[];e.forEach(l=>{l.data.length===0&&(l.data=[1]);let p;switch(l.data.length){case 1:p=4;break;case 2:p=8;break;case 3:p=16;break;case 4:p=16;break;case 5:p=16;break;case 6:p=16;break;default:y.assert(!1,()=>`Unsupported ${l.data.length}D shape`)}(o===5||o===6)&&(p=16),n=Math.ceil(n/p)*p,o=l.data.length,s.push(n),n+=l.data.length*4});let a=new ArrayBuffer(n);e.forEach((l,p)=>{let m=s[p];l.type==="int32"?new Int32Array(a,m,l.data.length).set(l.data):l.type==="uint32"?new Uint32Array(a,m,l.data.length).set(l.data):new Float32Array(a,m,l.data.length).set(l.data)});let i=this.bufferManager.acquireBuffer(n,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.queue.writeBuffer(i,0,a,0,n);let u={size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:i};return this.uniformPendingDisposal.push(u),{offset:0,size:n,buffer:i}}runWebGPUProgram(e,n,o,s,a){if(a||(a=this.makeTensorInfo(e.outputShape,o)),y.sizeFromShape(a.shape)===0)return this.tensorMap.get(a.dataId).values=y.getTypedArrayFromDType(a.dtype,0),a;this.uploadToGPU(a.dataId),e.dispatch=Wle(this.device,e);let i=[],u=[];if(!e.isFromPixels){i.push({type:"float32",data:[NaN]}),u=n.concat(a).map(T=>T.shape);let g="int32";u.map(T=>{i.push({type:g,data:T})});let b=y.computeStrides(a.shape);if(i.push({type:g,data:b}),e.size){let T=y.sizeFromShape(e.outputShape);i.push({type:g,data:[e.isVec4?T/4:T]})}}let l=n.map((g,b)=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(g.dataId),{dtype:this.tensorMap.get(g.dataId).dtype,shape:g.shape,name:e.variableNames[b]}}),p=gW(e,u,l,a),m;p in this.pipelineCache?m=this.pipelineCache[p]:(m=hW(this.device,e,l,a),this.pipelineCache[p]=m),s&&(i=[...i,...s]);let c=[this.tensorToBinding(a),...n.map(g=>this.tensorToBinding(g)),this.makeUniforms(i)],d=this.device.createBindGroup({layout:m.getBindGroupLayout(0),entries:c.map((g,b)=>({binding:b,resource:g}))});this.ensureCommandEncoderReady();let f=this.getComputePass(),h=this.activeTimers!=null;return h&&this.supportTimeQuery&&f.writeTimestamp(this.querySet,0),f.setPipeline(m),f.setBindGroup(0,d),f.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),h&&this.supportTimeQuery&&f.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,n.forEach(g=>{this.commandQueueOwnedIds.add(g.dataId)}),this.commandQueueOwnedIds.add(a.dataId),$().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),h&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),a}async getTimeFromQuerySet(e){let n=this.bufferManager.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),o=this.bufferManager.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,n,0),this.currentCommandEncoder.copyBufferToBuffer(n,0,o,0,16),this.submitQueue(),await o.mapAsync(GPUMapMode.READ);let s=new BigUint64Array(o.getMappedRange()),a=Number(s[1]-s[0]);return o.unmap(),this.bufferManager.releaseBuffer(o,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),a/1e6}shouldExecuteOnCPU(e,n=Ule){return $().getBool("WEBGPU_CPU_FORWARD")&&e.every(o=>this.tensorMap.get(o.dataId).resourceInfo==null&&y.sizeFromShape(o.shape)<n)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}},Pf=UD;Pf.nextDataId=0;yg()&&tp("webgpu",async()=>{$().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let r={powerPreference:$().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(r),e=t.limits,n={},o=t.features.has("timestamp-query");n.requiredLimits={maxComputeWorkgroupStorageSize:e.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:e.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:e.maxStorageBufferBindingSize},o&&(n.requiredFeatures=["timestamp-query"]);let s=await t.requestDevice(n);return new Pf(s)},3);var Kle=`
  if (isnan(a)) { return a; }
  if (isnan(b)) { return b; }
  `,yW=`
  if (isNaN.r) {
    resultTemp.r = valueForNaN;
  }
  if (isNaN.g) {
    resultTemp.g = valueForNaN;
  }
  if (isNaN.b) {
    resultTemp.b = valueForNaN;
  }
  if (isNaN.a) {
    resultTemp.a = valueForNaN;
  }
  `,TW=`
  let isNaN = isnanVec4(a) | isnanVec4(b);
  ${yW}
  `,Vle="return a + b;",Hle="return areal * breal - aimag * bimag;",qle="return areal * bimag + aimag * breal;",jle="return a / b;",Xle="return a * b;",Yle="return (a - b) * (a - b);",Zle="return a - b;",Qle="return f32(a == b);",Jle="return vec4<f32>(a == b);",eme="return f32(a > b);",tme="return vec4<f32>(a > b);",rme="return f32(a >= b);",nme="return vec4<f32>(a >= b);",ome="return f32(a < b);",sme="return vec4<f32>(a < b);",ame="return f32(a <= b);",ime="return vec4<f32>(a <= b);",ume="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",pme=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,lme=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,mme=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,cme=`
  if (isnan(a) || isnan(b)) {
    return 1.0;
  }
  return f32(a != b);
`,dme=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
  ${TW}

  return resultTemp;
`,fme=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,hme=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
  let valueForNaN = uniforms.NAN;
  ${yW}
  return resultTemp;
  `,gme="if (a < 0.0) { return b * a; }  return a;",bme=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function WD(r,t,e="uniforms.NAN"){let n=t?TW:Kle;return t?`
    let valueForNaN = ${e};
    var resultTemp = vec4<f32>(${r}(a, b));
    `+n+`
    return resultTemp;
  `:n+`
    return ${r}(a, b);
  `}function Mf(r,t){switch(r){case 0:return Xle;case 1:return Vle;case 2:return WD("atan2",t);case 3:return Zle;case 4:return jle;case 5:return t?Jle:Qle;case 6:return t?tme:eme;case 7:return t?nme:rme;case 8:return t?sme:ome;case 9:return t?ime:ame;case 10:return t?pme:ume;case 11:return t?dme:cme;case 12:return Yle;case 13:return t?mme:lme;case 15:return t?bme:gme;case 16:return WD("max",t);case 17:return WD("min",t);case 14:return t?hme:fme;case 18:return Hle;case 19:return qle;default:throw new Error(`BinaryType ${r} is not implemented!`)}}var yme="return abs(a);",Tme="return ceil(a);",xme="return cos(a);",Ime=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Cme="return exp(a) - 1.0;",kme="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Sme=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,vme="return exp(a);",Ame="return floor(a);",wme="return f32(isnan(a));",Nme="return a;",Dme=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,Rme="return f32(!(a >= 1.0));",Fme="return -a;",Pme="if (a < 0.0) { return uniforms.alpha * a; } return a;",Mme=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,Eme="return 1.0 / a;",Lme="return select(a, 0.0, a < 0.0);",_me="return clamp(a, 0.0, 6.0);",$me="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Bme=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,Ome="return 1.0/sqrt(a);",zme="return 1.0 / (1.0 + exp(-1.0 * a));",Gme="return sin(a);",Ume=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Wme="return sqrt(a);",Kme="return a * a;",Vme=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,Hme="return f32(i32((a)));";function wu(r,t){switch(r){case 0:return yme;case 2:return xme;case 3:return Ime;case 1:return Tme;case 4:return t?Sme:kme;case 5:return vme;case 6:return Cme;case 7:return Ame;case 8:return wme;case 9:return Nme;case 10:return Dme;case 11:return Rme;case 12:return Fme;case 15:return t?Mme:Pme;case 16:return Eme;case 13:return t?Bme:Lme;case 14:return t?$me:_me;case 17:return Ome;case 20:return zme;case 18:return Gme;case 19:return Ume;case 21:return Wme;case 22:return Kme;case 23:return Vme;case 24:return Hme;default:throw new Error(`BinaryType ${r} is not implemented!`)}}var tr=r=>{switch(r){case 1:return"f32";case 2:return"vec2<f32>";case 3:return"vec3<f32>";case 4:return"vec4<f32>";default:throw new Error(`${r}-component is not supported.`)}};function Xr(r,t=!1,e=!1,n=3){if(r===null)return"";let o="";if(r==="linear")o=wu(9);else if(r==="relu")o=wu(13,e);else if(r==="elu")o=wu(4,e);else if(r==="relu6")o=wu(14,e);else if(r==="prelu")o=Mf(15,e);else if(r==="sigmoid")o=wu(20,e);else if(r==="leakyrelu")o=wu(15,e);else throw new Error(`Activation ${r} has not been implemented for the WebGPU backend.`);let a=tr(e?4:1),i="";return t?i=`
      fn activation(a : ${a}, coords : vec${n}<i32>) -> ${a} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${o}
      }`:i=`
      fn activation(a : ${a}, coords : vec${n}<i32>) -> ${a} {
        ${o}
      }`,i}function to(r,t){return`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      ${t?"value = activation(value, coords);":""}
      `}function KD(r,t,e,n,o=!1,s=!1,a=!1,i=1){y.assert(e&&i===1||!e,()=>`transposeA ${e} is not compatible with component size ${i}`);let u=`
      let batch = ${r?"0":"batchIn"};
      ${e?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,l=n?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batchIn: i32, row: i32, colIn: i32) -> ${tr(i)} {
    var value = ${tr(i)}(0.0);
    let col = colIn * ${i};
    ${o&&a?u:`
    ${e?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${u}
    }
    `}
    return value;
  }

  fn mm_readB(batchIn: i32, row: i32, colIn: i32) -> ${tr(i)} {
    let col = colIn * ${i};
    let batch = ${t?"0":"batchIn"};
    var value = ${tr(i)}(0.0);
    ${l}
    return value;
  }
  `}function Tg(r,t,e,n,o,s,a=!1,i=!1,u=!1,l=1){return`
  ${KD(e,n,o,s,a,i,u,l)}
  fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${tr(l)}) {
    let col = colIn * ${l};
    ${a&&i?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${to(r,t)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}var qme=r=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / InnerElementSize + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / InnerElementSize + inputCol);
        `,jme=(r,t)=>r?`
        let ACached0 = mm_Asub[k * InnerElementSize][localRow];
        let ACached1 = mm_Asub[k * InnerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * InnerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * InnerElementSize + 3][localRow];"}
        for (var i = 0; i < RowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < RowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`;function rm(r,t,e=!1,n=32,o=!1,s=32,a=!1){let i=t[1]*r[1],u=t[0]*r[0],l=e?i:n,p=e?n:i,m=l/t[0],c=n/t[1];return y.assert((e&&m===4&&r[1]===4||!e&&(m===3||m===4))&&l%t[0]===0&&n%t[1]===0&&r[0]===4,()=>`If transposeA ${e} is true, innerElementSize ${m} and workPerThread[1] ${r[1]} must be 4.
          Otherwise, innerElementSize ${m} must be 3 or 4.
      tileAWidth ${l} must be divisible by workGroupSize[0]${t[0]}. tileInner ${n} must be divisible by workGroupSize[1] ${t[1]}. ColPerThread ${r[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${m}<f32>, ${l/m}>, ${p}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${u/r[0]}>, ${n}>;

  const RowPerThread = ${r[1]};
  const ColPerThread = ${r[0]};
  const InnerElementSize = ${m};
  const TileInner = ${n};

  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
  fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
            @builtin(global_invocation_id) GlobalId : vec3<u32>,
            @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
            @builtin(workgroup_id) workgroupId: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;

    let localRow = i32(localId.y);
    let tileRow = ${a?"0":"localRow * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${a?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let batch = ${o?"0":"i32(globalId.z)"};
    let globalRowStart = i32(workgroupId.y) * ${i};

    let numTiles = ${o?`${Math.ceil(s/n)}`:"(uniforms.dimInner - 1) / TileInner + 1"};
    var kStart = ${o?`i32(globalId.z) * ${s}`:"0"};

    var acc: array<vec4<f32>, RowPerThread>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${c};
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${qme(e)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${c}; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol);
        }
        kStart = kStart + TileInner;
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / InnerElementSize; k = k + 1) {
            let BCached0 = mm_Bsub[k * InnerElementSize][tileCol];
            let BCached1 = mm_Bsub[k * InnerElementSize + 1][tileCol];
            let BCached2 = mm_Bsub[k * InnerElementSize + 2][tileCol];
            ${m===3?"":"let BCached3 = mm_Bsub[k * InnerElementSize + 3][tileCol];"}

            ${jme(e,m)}
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}var Xme=r=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,Yme=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function nm(r,t,e=!1,n=32,o=!1,s=32){let a=r[1]*t[1],i=r[0]*t[0],u=e?a:n,l=e?n:a;y.assert(l%t[1]===0&&u%t[0]===0&&n%t[1]===0,()=>`tileAHight ${l} must be divisible by workGroupSize[1]${t[1]}, tileAWidth ${u} must be divisible by workGroupSize[0]${t[0]}, tileInner ${n} must be divisible by workGroupSize[1]${t[1]}`);let p=l/t[1],m=u/t[0],c=n/t[1];return`
    var<workgroup> mm_Asub : array<array<f32, ${u}>, ${l}>;
    var<workgroup> mm_Bsub : array<array<f32, ${i}>, ${n}>;
    const RowPerThread = ${r[1]};
    const ColPerThread = ${r[0]};
    const TileInner = ${n};

    @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
    fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
              @builtin(global_invocation_id) GlobalId : vec3<u32>,
              @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
              @builtin(workgroup_id) workgroupId: vec3<u32>) {
      localId = LocalId;
      globalId = GlobalId;
      numWorkgroups = NumWorkgroups;

      let tileRow = i32(localId.y) * RowPerThread;
      let tileCol = i32(localId.x) * ColPerThread;

      let globalRow = i32(globalId.y) * RowPerThread;
      let globalCol = i32(globalId.x) * ColPerThread;
      let batch = ${o?"0":"i32(globalId.z)"};
      let globalRowStart = i32(workgroupId.y) * ${a};

      let numTiles = ${o?`${Math.ceil(s/n)}`:"(uniforms.dimInner - 1) / TileInner + 1"};
      var kStart = ${o?`i32(globalId.z) * ${s}`:"0"};

      var acc : array<array<f32, ColPerThread>, RowPerThread>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let tileRowA = i32(localId.y) * ${p};
      let tileColA = i32(localId.x) * ${m};
      let tileRowB = i32(localId.y) * ${c};
      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${p}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${m}; innerCol = innerCol + 1) {
            let inputRow = tileRowA + innerRow;
            let inputCol = tileColA + innerCol;
            ${Xme(e)}
          }
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${c}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batch,
              kStart + inputRow,
              globalCol + innerCol);
          }
        }
        kStart = kStart + TileInner;
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ColPerThread>;
        for (var k = 0; k < TileInner; k = k + 1) {
          for (var inner = 0; inner < ColPerThread; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            ${Yme(e)}
            for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          mm_write(batch, globalRow + innerRow, globalCol + innerCol,
              acc[innerRow][innerCol]);
        }
      }
    }
  `}var Zme=r=>r?`
      mm_readA(batch, colA, globalRow),
      mm_readA(batch, colA + 1, globalRow),
      mm_readA(batch, colA + 2, globalRow),
      mm_readA(batch, colA + 3, globalRow)
  `:`
      mm_readA(batch, globalRow, colA),
      mm_readA(batch, globalRow, colA + 1),
      mm_readA(batch, globalRow, colA + 2),
      mm_readA(batch, globalRow, colA + 3)
  `;function Qme(r,t=!1){return y.assert(r[1]===1&&r[2]===1,()=>`A linear work group size is required. But got ${r}.`),`
    const TileSize = ${r[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;

    ${xe()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;
      let batch = i32(globalId.z);
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${Zme(t)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(batch, rowB, globalCol),
                              mm_readB(batch, rowB + 1, globalCol),
                              mm_readB(batch, rowB + 2, globalCol),
                              mm_readB(batch, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}var AC=class{constructor(t,e,n,o,s=!1,a=!1,i=null,u=null,l=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0]};let p=s?t[1]:t[2];if(this.isVec4=(p%4===0&&!s||e[1]%4===0&&s)&&e[2]%4===0&&!a,this.isVectorA=e[1]===1&&!s,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workGroupSize=[32,1,1];else{let d=$D(e[1],p,e[2],s);this.workGroupSize=d.workGroupSize,this.elementsPerThread=d.elementsPerThread}this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let m=i!=null,c=l!=null;m&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),this.transposeA=s,this.transposeB=a,this.addBias=m,this.activation=u,this.hasPreluActivationWeights=c,this.batchAEqualOne=n,this.batchBEqualOne=o,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(e[1],e[2],p),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${s}_${a}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getShapeFit(t,e,n){let o=this.workGroupSize[1]*this.elementsPerThread[1],s=this.workGroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workGroupSize[0]*4:this.tileInner=s;let a=t%o===0,i=e%s===0,u=n%this.tileInner===0;return[a,i,u]}getUserCode(){return`
      ${Xr(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${Tg(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?rm(this.elementsPerThread,this.workGroupSize,this.transposeA,this.tileInner,!1,null,this.isVectorA):this.isVectorA?Qme(this.workGroupSize,this.transposeA):nm(this.elementsPerThread,this.workGroupSize,this.transposeA,this.tileInner)}
    `}};function Jme(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${xe()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var wC=class{constructor(t,e,n,o=!1,s=!1,a=null,i=null,u=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[256,1,1];this.outputShape=t,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize);let l=a!=null,p=u!=null;l&&this.variableNames.push("bias"),p&&this.variableNames.push("preluActivationWeights"),this.transposeA=o,this.transposeB=s,this.addBias=l,this.activation=i,this.hasPreluActivationWeights=p,this.batchAEqualOne=e,this.batchBEqualOne=n,this.shaderKey=`matMulReduce_${this.activation}_${o}_${s}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){return`
      ${Xr(this.activation,this.hasPreluActivationWeights)}
      ${Tg(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      ${Jme()}
    `}};function ece(r){let t=r[1],e=r[0],n=t>e?t:e;return`
  var<workgroup> mm_Asub : array<array<f32, ${n}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<f32, ${e}>, ${n}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${xe()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batch, globalRow, globalColA);
    var regB0 = mm_readB(batch, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batch, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${n};
    globalRowB = globalRowB + ${n};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batch, globalRow, globalColA);
      regB0 = mm_readB(batch, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batch, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${n};
      globalRowB = globalRowB + ${n};

      for (var k = 0; k < ${n}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}var NC=class{constructor(t,e,n,o=!1,s=!1,a=null,i=null,u=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[16,8,1];this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]/this.workGroupSize[1]),n[0]];let l=a!=null;l&&this.variableNames.push("bias");let p=u!=null;p&&this.variableNames.push("preluActivationWeights"),this.transposeA=o,this.transposeB=s,this.addBias=l,this.activation=i,this.hasPreluActivationWeights=p,this.batchAEqualOne=t[0]===1,this.batchBEqualOne=e[0]===1,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${o}_${s}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){return`
      ${Xr(this.activation,this.hasPreluActivationWeights)}
      ${Tg(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      ${ece(this.workGroupSize)}
    `}};var DC=class{constructor(t,e,n,o,s=!1,a=!1){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[8,8,1];this.atomic=!0;this.isVec4=!1;this.splitedDimInner=128;y.assert(t[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0,3]},this.isVec4=(s&&this.outputShape[1]%4===0||!s&&e%4===0)&&this.outputShape[2]%4===0,this.elementsPerThread=[4,4,this.splitedDimInner],this.isVec4||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=ye(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],e],this.workGroupSize,this.elementsPerThread),this.transposeA=s,this.transposeB=a,this.batchAEqualOne=n,this.batchBEqualOne=o,this.shaderKey=`matMulSplitK_${s}_${a}_${n}_${o}_${this.elementsPerThread}_${this.isVec4}`}getUserCode(){let t=o=>`
      for (var i = 0; i < ${o}; i = i + 1)
      {
        var oldValue = atomicLoad(&(result[flatIndex + i]));
        var exchanged = false;
        for (; !exchanged;) {
          let newValueF32 = bitcast<f32>(oldValue) + ${o>1?"value[i]":"value"};
          let newValue = bitcast<i32>(newValueF32);
          let res = atomicCompareExchangeWeak(&(result[flatIndex + i]), oldValue, newValue);
          oldValue = res.old_value;
          exchanged = res.exchanged;
        }
      }
      `,e=this.isVec4?4:1;return`
      ${KD(this.batchAEqualOne,this.batchBEqualOne,!1,this.transposeB,!1,!1,!1,e)}
      fn mm_write(batch: i32, row : i32, colIn : i32, value : ${tr(e)}) {
        let col = colIn * ${e};
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          ${t(e)}
        }
      }
      ${this.isVec4?rm(this.elementsPerThread,this.workGroupSize,this.transposeA,32,!0,this.splitedDimInner):nm(this.elementsPerThread,this.workGroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}},RC=class{constructor(t,e=null,n=null,o=null){this.uniforms="";this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.addBias=e!=null,this.hasPreluActivationWeights=o!=null,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${n}`}getUserCode(){return`
    ${Xr(this.activation,this.hasPreluActivationWeights)}
    ${xe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${to(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}};var FC=class{constructor(t){this.variableNames=[];this.outputShape=[];this.uniforms="value : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${xe("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function is(r){let{backend:t,attrs:e}=r,{shape:n,value:o}=e,{dtype:s}=e;if(s=s||y.inferDtype(o),s==="string"){let a=y.getArrayFromDType(s,y.sizeFromShape(n));return a.fill(o),t.makeTensorInfo(n,s,a)}else{let a=new FC(n),i=[{type:"float32",data:[o]}];return t.runWebGPUProgram(a,[],s,i)}}var xW={kernelName:ci,backendName:"webgpu",kernelFunc:is};function Ne(r){let{inputs:t,attrs:e}=r,{x:n}=t,{shape:o}=e,s=y.sizeFromShape(n.shape),a=y.inferFromImplicitShape(o,s),i=y.sizeFromShape(a);return y.assert(s===i,()=>`The new shape (${a}) has ${i} elements and the old shape (${n.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var IW={kernelName:xs,backendName:"webgpu",kernelFunc:Ne};function Ef({a:r,b:t,transposeA:e,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){let l=r.shape.length,p=t.shape.length,m=e?r.shape[l-2]:r.shape[l-1],c=n?t.shape[p-1]:t.shape[p-2],d=e?r.shape[l-1]:r.shape[l-2],f=n?t.shape[p-2]:t.shape[p-1],h=r.shape.slice(0,-2),g=t.shape.slice(0,-2),b=y.sizeFromShape(h),T=y.sizeFromShape(g),I=wr.assertAndGetBroadcastShape(r.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);y.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${t.shape} and transposeA=${e} and transposeB=${n} must match.`);let k=e?[b,m,d]:[b,d,m],A=n?[T,f,c]:[T,c,f],R=Ne({inputs:{x:r},backend:o,attrs:{shape:k}}),F=Ne({inputs:{x:t},backend:o,attrs:{shape:A}}),P=[R,F],L=Math.max(b,T),O=b===1,G=T===1,W=[R,F],H=[{type:"int32",data:[d]},{type:"int32",data:[f]},{type:"int32",data:[m]}],V,q,Z=[L,d,f],j=$().get("WEBGPU_MATMUL_PROGRAM_TYPE");switch(j<0&&(d*f<=128?j=0:L===1&&d<=128&&f<=48&&c>=2e3?j=1:d<=16&&(f<=512||c>=2*f)||f<=16&&(d<=512||m>=2*d)?j=2:j=3),j){case 0:V=new wC(Z,O,G,e,n,s,u,a);break;case 1:{if(q=is({backend:o,attrs:{shape:Z,value:0,dtype:r.dtype}}),V=new DC(Z,c,O,G,e,n),s||u){q=o.runWebGPUProgram(V,W,r.dtype,H,q);let se=new RC(q.shape,s,u,a),ae=null,pe=[q];s&&pe.push(s),a&&pe.push(a),u==="leakyrelu"&&(ae=[{type:"float32",data:[i]}],se.uniforms+=" alpha : f32,");let oe=o.runWebGPUProgram(se,pe,q.dtype,ae);P.push(q);let ge=Ne({inputs:{x:oe},backend:o,attrs:{shape:I}});P.push(oe);for(let fe of P)o.disposeData(fe.dataId);return ge}break}case 2:V=new NC(k,A,Z,e,n,s,u,a);break;case 3:V=new AC(k,Z,O,G,e,n,s,u,a);break;default:throw new Error(`Unsupported MatMulProgramType ${j}.`)}s&&W.push(s),a&&W.push(a),u==="leakyrelu"&&(H.push({type:"float32",data:[i]}),V.uniforms+=" alpha : f32,"),q=o.runWebGPUProgram(V,W,r.dtype,H,q);let Y=Ne({inputs:{x:q},backend:o,attrs:{shape:I}});P.push(q);for(let se of P)o.disposeData(se.dataId);return Y}function tce(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=t,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:m}=n;return Ef({a:o,b:s,transposeA:u,transposeB:l,backend:e,bias:a,preluActivationWeights:i,leakyreluAlpha:m,activation:p})}var CW={kernelName:Ns,backendName:"webgpu",kernelFunc:tce};var xg=class{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.workGroupSize=[128,1,1];this.size=!0;this.outputShape=C.assertAndGetBroadcastShape(e,n),this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${t}`,this.op=t}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Mf(this.op,!1)}
      }

      ${xe("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};var om=class{constructor(t,e,n){this.size=!0;this.variableNames=["A","B"];this.outputShape=C.assertAndGetBroadcastShape(e,n),this.dispatchLayout=ke(this.outputShape),this.op=t,this.useSharedMemoryWithA=e.length<=1&&n.length>1&&e[0]<128,this.useSharedMemoryWithB=n.length<=1&&e.length>1&&n[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB?(this.isVec4=!1,this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:e[0],this.shaderKey=`binary_${this.type}_${t}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`,this.type="shared",this.workGroupSize=[256,1,1],this.workPerThread=1):(y.arraysEqual(e,n)&&y.sizeFromShape(e)%4===0?(this.isVec4=!0,this.type="vec4",this.workPerThread=4):(this.isVec4=!1,this.type="plain",this.workPerThread=1),this.shaderKey=`binary_${this.type}_${t}`,this.workGroupSize=[128,1,1]),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1])}getUserCode(){let t,e=this.isVec4?"vec4<f32>":"f32",n=`
    fn binaryOperation(a : ${e}, b : ${e}) -> ${e} {
      ${Mf(this.op,this.isVec4)}
    };
    `;if(this.type==="shared"){let o=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",s=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${o}];`:`let a = sharedBuf[${o}];
          let b = getBByOutputIndex(index);`;t=`
        ${n}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${xe("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${s}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else t=`
       ${n}
       ${xe("index")} {
         if (index < uniforms.size) {
           let a = getAByOutputIndex(index);
           let b = getBByOutputIndex(index);
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return t}};function fr(r){let{inputs:t}=r,{x:e}=t;return r.backend.incRef(e.dataId),{dataId:e.dataId,shape:e.shape,dtype:e.dtype}}var kW={kernelName:Vn,backendName:"webgpu",kernelFunc:fr};function oi(r){let{inputs:t,backend:e}=r,{real:n,imag:o}=t,s=e.makeTensorInfo(n.shape,"complex64"),a=e.tensorMap.get(s.dataId),i=fr({inputs:{x:n},backend:e}),u=fr({inputs:{x:o},backend:e});return a.complexTensorInfos={real:i,imag:u},s}var SW={kernelName:Eu,backendName:"webgpu",kernelFunc:oi};var na=class{constructor(t,e){this.variableNames=["A"];this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=e,this.shaderKey=`unary_${e}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${wu(this.op,!1)}
      }
      ${xe("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function it({opType:r,cpuKernelImpl:t,dtype:e}){return({inputs:n,backend:o})=>{let{x:s}=n,a=o,i=e||s.dtype;if(a.shouldExecuteOnCPU([s])&&t!=null){let l=a.tensorMap.get(s.dataId),p=t(l.values,i);return a.makeTensorInfo(s.shape,i,p)}let u=new na(s.shape,r);return a.runWebGPUProgram(u,[s],i)}}function yt({opType:r,cpuKernelImpl:t,supportsComplex:e=!1,dtype:n}){return({inputs:o,backend:s})=>{let{a,b:i}=o,u=s;if(e&&a.dtype==="complex64"){let m=u.tensorMap.get(a.dataId),c=u.tensorMap.get(i.dataId),d,f;if(r!==0)[d,f]=[[m.complexTensorInfos.real,c.complexTensorInfos.real],[m.complexTensorInfos.imag,c.complexTensorInfos.imag]].map(g=>{let[b,T]=g,x={dataId:b.dataId,dtype:b.dtype,shape:a.shape},I={dataId:T.dataId,dtype:T.dtype,shape:i.shape},k=new om(r,a.shape,i.shape);return u.runWebGPUProgram(k,[x,I],Et(b.dtype,T.dtype))});else{let g=new xg(18,a.shape,i.shape),b=new xg(19,a.shape,i.shape),T=[{dataId:m.complexTensorInfos.real.dataId,dtype:m.complexTensorInfos.real.dtype,shape:a.shape},{dataId:m.complexTensorInfos.imag.dataId,dtype:m.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:i.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:i.shape}];d=u.runWebGPUProgram(g,T,"float32"),f=u.runWebGPUProgram(b,T,"float32")}let h=oi({inputs:{real:d,imag:f},backend:u});return u.disposeData(d.dataId),u.disposeData(f.dataId),h}let l=n||Et(a.dtype,i.dtype);if((a.dtype==="string"||i.dtype==="string"||u.shouldExecuteOnCPU([a,i]))&&t!=null){let m=u.tensorMap.get(a.dataId).values,c=u.tensorMap.get(i.dataId).values,d=a.dtype==="string"?C.fromUint8ToStringArray(m):m,f=a.dtype==="string"?C.fromUint8ToStringArray(c):c,[h,g]=t(a.shape,i.shape,d,f,l);return u.makeTensorInfo(g,l,h)}let p=new om(r,a.shape,i.shape);return u.runWebGPUProgram(p,[a,i],l)}}var{addImpl:vW,castImpl:AW,ceilImpl:wW,concatImpl:NW,equalImpl:DW,expImpl:RW,expm1Impl:FW,floorImpl:PW,gatherNdImpl:MW,gatherV2Impl:EW,greaterEqualImpl:LW,greaterImpl:_W,lessEqualImpl:$W,lessImpl:BW,logImpl:OW,maxImpl:zW,maximumImpl:GW,minimumImpl:UW,multiplyImpl:WW,negImpl:KW,notEqualImpl:VW,prodImpl:HW,rangeImpl:qW,rsqrtImpl:jW,scatterImpl:XW,simpleAbsImpl:YW,sliceImpl:ZW,stridedSliceImpl:QW,stringNGramsImpl:JW,subImpl:eK,tileImpl:tK,topKImpl:rK,transposeImpl:nK,uniqueImpl:mwr}=uf;var rce=it({opType:0,cpuKernelImpl:YW}),oK={kernelName:cs,backendName:"webgpu",kernelFunc:rce};var nce=yt({opType:1,cpuKernelImpl:vW,supportsComplex:!0}),sK={kernelName:Nn,backendName:"webgpu",kernelFunc:nce};var PC=class{constructor(t){this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t[0],this.variableNames=t.map((e,n)=>`T${n}`),this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let t=[];this.variableNames.forEach(o=>{t.push(`let v${o} = get${o}ByOutputCoords(coords);`)});let e=this.variableNames.map(o=>`v${o}`).join(" + ");return`
      ${xe("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${t.join(`
        `)}
            setOutputAtIndex(flatIndex, ${e});
          }
        }
      }
    `}};function oce(r){let{inputs:t,backend:e}=r,n=t;if(n.length===1)return fr({inputs:{x:n[0]},backend:e});let o=n.map(i=>i.dtype).reduce((i,u)=>Et(i,u)),s=n.map(i=>i.shape),a=new PC(s);return e.runWebGPUProgram(a,n,o)}var aK={kernelName:ao,backendName:"webgpu",kernelFunc:oce};var Lf=class{constructor(t,e,n){this.workGroupSize=[64,1,1];this.variableNames=["x"];this.uniforms="infinityValue : f32,";this.size=!0;let o=[e];this.op=n==="min"?"<":">";let[s,a]=C.computeOutAndReduceShapes(t,o);this.outputShape=s.length===0?[1]:s,this.dispatchLayout=ke(this.outputShape),y.sizeFromShape(a)<32||y.sizeFromShape(s)>1e3?(this.type="plain",this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize)):(this.type="shared",this.dispatch=ye(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=t,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){let t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${ra(this.inputShape.length-1)}`,e=()=>{let n="";if(this.outputShape.length===1)this.inputShape.length!==1&&(n+="outputCoords,");else for(let o=0;o<this.outputShape.length;o++)n+=`outputCoords.${ra(o)},`;return n};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `}

      ${xe("index")} {
        let outputIndex = index / i32(workGroupSizeX);
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = getX(${e()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${xe("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${e()} 0);
          let reduceLength = ${t()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${e()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}};var MC=class{constructor(t,e){this.variableNames=["A"];this.workGroupSize=[16,16,1];let n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[e[o]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      const TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${Ep()}
      fn _start(@builtin(local_invocation_id) localId : vec3<u32>,
                @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = A[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}};var EC=class{constructor(t,e){this.variableNames=["A"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;let n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[e[o]];this.outputShape=n,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=e,this.shaderKey=`transpose_${e}`}getUserCode(){let t=ar(this.outputShape.length),e=sce(this.newDim);return`
      ${xe("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${t}(${e}), uniforms.aShape)]);
          }
        }
      }
    `}};function sce(r){let t=r.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=new Array(t);for(let n=0;n<r.length;n++)e[r[n]]=`resRC.${ra(n)}`;return e.join()}function Sn(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{perm:s}=n,a=e,i=o.shape.length,u=new Array(i);for(let p=0;p<u.length;p++)u[p]=o.shape[s[p]];if(e.shouldExecuteOnCPU([o])){let m=a.tensorMap.get(o.dataId).values,c=nK(m,o.shape,o.dtype,s,u);return e.makeTensorInfo(u,o.dtype,c)}if(o.shape.length===2&&y.arraysEqual(s,[1,0])){let p=new MC(o.shape,s);return a.runWebGPUProgram(p,[o],o.dtype)}let l=new EC(o.shape,s);return a.runWebGPUProgram(l,[o],o.dtype)}var iK={kernelName:Rn,backendName:"webgpu",kernelFunc:Sn};function ace(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Sn({inputs:{x:o},backend:e,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMax",[a[0]],u.shape.length);let p=new Lf(u.shape,a[0],"max"),m=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],c=e.runWebGPUProgram(p,[u],"int32",m);return l.forEach(d=>e.disposeData(d.dataId)),c}var uK={kernelName:io,backendName:"webgpu",kernelFunc:ace};function ice(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,l=[];i!=null&&(u=Sn({inputs:{x:o},backend:e,attrs:{perm:i}}),l.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMin",[a[0]],u.shape.length);let p=new Lf(u.shape,a[0],"min"),m=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],c=e.runWebGPUProgram(p,[u],"int32",m);return l.forEach(d=>e.disposeData(d.dataId)),c}var pK={kernelName:mi,backendName:"webgpu",kernelFunc:ice};var uce=yt({opType:2}),lK={kernelName:la,backendName:"webgpu",kernelFunc:uce};var Ig=class{constructor(t,e){this.variableNames=["x"];this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,";this.workGroupSize=[128,1,1];this.size=!0;this.outputShape=t.outShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${e}`,this.poolType=e}getUserCode(){let t="resultValue = max(value, resultValue);";this.poolType==="avg"&&(t="resultValue = resultValue + value; count = count + 1.0;");let e="resultValue";return this.poolType==="avg"&&(e="resultValue / count"),`
      ${xe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${t}
            }
          }

          setOutputAtIndex(index, ${e});
        }
      }
    `}};var LC=class{constructor(t){this.variableNames=["x"];this.uniforms="stride : vec2<i32>,";this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=t.outShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${xe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};var _C=class{constructor(t,e){this.workGroupSize=[64,1,1];this.variableNames=["x"];this.uniforms="reduceSize : i32,";this.size=!0;this.inputShape=[t.batchSize,t.inSize];let[n]=C.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=e,this.shaderKey=`reduce_${e}`}getUserCode(){let t="",e="0.0";this.reduceType==="min"||this.reduceType==="max"?(t=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,e="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?t=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(t=" bestValue = bestValue * candidate; ",e="1.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${xe("index")} {
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${e};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x[offset + k]);
           ${t}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${t}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function Fi(r,t,e,n,o){let s=r.shape.length,a=[],i=y.parseAxisParam(t,r.shape),u=i,l=C.getAxesPermutation(u,s),p=r;l!=null&&(p=Sn({inputs:{x:r},attrs:{perm:l},backend:o}),u=C.getInnerMostAxes(u.length,s),a.push(p)),C.assertAxesAreInnerMostDims(n,u,s);let[m,c]=C.computeOutAndReduceShapes(p.shape,u),d=m;e&&(d=C.expandShapeToKeepDim(m,i));let f;if((n==="max"||n==="prod")&&o.shouldExecuteOnCPU([p])){let h=o.tensorMap.get(p.dataId).values;switch(n){case"max":let g=zW(h,y.sizeFromShape(c),d,r.dtype);f=o.makeTensorInfo(d,r.dtype,g);break;case"prod":let{outVals:b,outShape:T,outDtype:x}=HW(p.shape,p.dtype,h,u);f=o.makeTensorInfo(T,x,b);break;default:throw new Error(`${n} CPU implementation is not yet supported.`)}}else{let h=y.sizeFromShape(c),b=y.sizeFromShape(p.shape)/h,T={windowSize:h,inSize:h,batchSize:b,outSize:1},x=n==="mean"?"float32":tu(r.dtype),I=[{type:"int32",data:[h]}],k=new _C(T,n),A=o.runWebGPUProgram(k,[p],x,I);a.push(A),f=Ne({inputs:{x:A},attrs:{shape:d},backend:o})}return a.forEach(h=>o.disposeData(h.dataId)),f}function Cg(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reductionIndices:s,keepDims:a}=n;return Fi(o,s,a,"max",e)}var mK={kernelName:wo,backendName:"webgpu",kernelFunc:Cg};function VD(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{keepDims:s,axis:a}=n;return Fi(o,a,s,"mean",e)}var cK={kernelName:Ro,backendName:"webgpu",kernelFunc:VD};function $C(r,t,e,n){if(t.filterWidth===1&&t.filterHeight===1&&y.arraysEqual(t.inShape,t.outShape))return fr({inputs:{x:r},backend:n});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&t.batchSize===1&&t.padInfo.type==="VALID"){let a=r.shape.length,i=Ne({inputs:{x:r},backend:n,attrs:{shape:[r.shape[a-3]*r.shape[a-2],r.shape[a-1]]}}),u;e==="avg"?u=VD({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}}):(y.assert(e==="max",()=>`Invalid pool type ${e}`),u=Cg({inputs:{x:i},backend:n,attrs:{reductionIndices:0,keepDims:!1}}));let l=Ne({inputs:{x:u},backend:n,attrs:{shape:t.outShape}});return n.disposeData(i.dataId),n.disposeData(u.dataId),l}let o,s=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return t.filterHeight===1&&t.filterWidth===1?o=new LC(t):(e==="avg"?o=new Ig(t,"avg"):(y.assert(e==="max",()=>`Invalid pool type ${e}`),o=new Ig(t,"max")),s.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),n.runWebGPUProgram(o,[r],r.dtype,s)}function pce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1,p=C.computePool2DInfo(o.shape,s,a,l,i,u);return $C(o,p,"avg",e)}var dK={kernelName:uo,backendName:"webgpu",kernelFunc:pce};function lce(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s}=t,{transposeA:a,transposeB:i}=n;return Ef({a:o,b:s,transposeA:a,transposeB:i,backend:e})}var fK={kernelName:po,backendName:"webgpu",kernelFunc:lce};var BC=class{constructor(t,e){this.variableNames=["source"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.rank=e.length,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=t,this.uniforms=`start : ${ar(t.length)}, `,this.shaderKey="slice"}getUserCode(){let t=ar(this.rank),e=mce(this.rank),n;return this.start.length===1?n=this.outputShape.map((s,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((s,a)=>`sourceLoc.${HD[a]} = uniforms.start.${ra(a)} + coords.${HD[a]};`),`
      ${xe("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${t};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${e}));
        }
      }
    `}},HD=["x","y","z","w","u","v"];function mce(r){if(r===1)return"sourceLoc";if(r<=6)return HD.slice(0,r).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}function si(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,size:a}=n,[i,u]=xt.parseSliceParams(o,s,a);if(xt.assertParamsValid(o,i,u),e.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=e.tensorMap.get(o.dataId),c=ZW(m.values,i,u,o.shape,o.dtype);return e.makeTensorInfo(u,o.dtype,c)}if(y.sizeFromShape(u)===0)return e.makeTensorInfo(u,o.dtype,[]);let l=new BC(i,u),p=[{type:"int32",data:i}];return e.runWebGPUProgram(l,[o],o.dtype,p)}var hK={kernelName:Cs,backendName:"webgpu",kernelFunc:si};var cce=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,crops:a}=n;y.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((T,x)=>T*x),u=C.getReshaped(o.shape,s,i),l=C.getPermuted(u.length,s.length),p=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(p,a,s.length),d=[],f=Ne({inputs:{x:o},backend:e,attrs:{shape:u}}),h=Sn({inputs:{x:f},backend:e,attrs:{perm:l}}),g=Ne({inputs:{x:h},backend:e,attrs:{shape:p}}),b=si({inputs:{x:g},backend:e,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(T=>e.disposeData(T.dataId)),b},gK={kernelName:ds,backendName:"webgpu",kernelFunc:cce};var qD=yt({opType:11,dtype:"bool",cpuKernelImpl:VW}),bK={kernelName:Sa,backendName:"webgpu",kernelFunc:qD};function Nu(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.tensorMap.get(n.dataId);return fr({inputs:{x:o.complexTensorInfos.real},backend:e})}var yK={kernelName:Uu,backendName:"webgpu",kernelFunc:Nu};function TK(r,t){let e=new na(r.shape,24),n=t.runWebGPUProgram(e,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function jD(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return fr({inputs:{x:o},backend:e});let a=It(o.shape),i=jD({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),u=oi({inputs:{real:i,imag:a},backend:e});return a.dispose(),e.disposeData(i.dataId),u}if(o.dtype==="complex64"){let a=Nu({inputs:{input:o},backend:e}),i=jD({inputs:{x:a},backend:e,attrs:{dtype:s}});return e.disposeData(a.dataId),i}if(!y.hasEncodingLoss(o.dtype,s)){let a=fr({inputs:{x:o},backend:e});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(e.shouldExecuteOnCPU([o])){let a=e.tensorMap.get(o.dataId).values,[i,u,l]=AW(a,o.shape,o.dtype,s);return e.makeTensorInfo(i,u,l)}if(s==="int32")return TK(o,e);if(s==="bool"){let a=e.makeTensorInfo([],"bool",y.getTypedArrayFromDType("bool",1)),u=qD({inputs:{a:o,b:a},backend:e});return e.disposeData(a.dataId),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var xK={kernelName:Wn,backendName:"webgpu",kernelFunc:jD};var dce=it({opType:1,cpuKernelImpl:wW}),IK={kernelName:lo,backendName:"webgpu",kernelFunc:dce};var OC=class{constructor(t){this.variableNames=["A"];this.uniforms="minVal : f32, maxVal : f32,";this.workPerThread=4;this.workGroupSize=[64,1,1];this.isVec4=!0;this.size=!0;this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${xe("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isnan(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}};var zC=class{constructor(t){this.variableNames=["A"];this.uniforms="minVal : f32, maxVal : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${xe("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function fce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{clipValueMin:s,clipValueMax:a}=n,i,u=[{type:"float32",data:[s]},{type:"float32",data:[a]}];return y.sizeFromShape(o.shape)%4===0?i=new OC(o.shape):i=new zC(o.shape),e.runWebGPUProgram(i,[o],o.dtype,u)}var CK={kernelName:Kn,backendName:"webgpu",kernelFunc:fce};var GC=class{constructor(t){this.uniforms="";this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=C.computeOutShape(t,1),this.variableNames=t.map((e,n)=>`T${n}`),this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=t.length-1;for(let e=0;e<this.offsetLength;e++)this.uniforms+=`offset${e} : i32,`;this.shaderKey="concat"}getUserCode(){let t=[];if(this.offsetLength>0){t.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let s=1;s<this.offsetLength;s++)t.push(`else if (yC < uniforms.offset${[s]}){ setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${s-1})); }`);let n=this.offsetLength,o=this.offsetLength-1;t.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${o})); }`)}else t.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${xe("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${t.join(`
        `)}
          }
        }
      }
    `}};function sm(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.tensorMap.get(n.dataId);return fr({inputs:{x:o.complexTensorInfos.imag},backend:e})}var kK={kernelName:Ou,backendName:"webgpu",kernelFunc:sm};function _f(r,t,e){let n=r[0].dtype;if(n==="complex64"){let f=r.map(x=>Nu({inputs:{input:x},backend:e})),h=r.map(x=>sm({inputs:{input:x},backend:e})),g=_f(f,t,e),b=_f(h,t,e),T=oi({inputs:{real:g,imag:b},backend:e});return f.forEach(x=>e.disposeData(x.dataId)),h.forEach(x=>e.disposeData(x.dataId)),e.disposeData(g.dataId),e.disposeData(b.dataId),T}let o=e.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let f=r.map(k=>{let A=y.sizeFromShape(k.shape.slice(t));return Ne({inputs:{x:k},backend:e,attrs:{shape:[-1,A]}})}),h=f.map(k=>({vals:e.readSync(k.dataId),shape:k.shape})),g=C.computeOutShape(f.map(k=>k.shape),1),b=f[0].shape[0]===1,T=NW(h,g,n,b),x=C.computeOutShape(r.map(k=>k.shape),t),I=e.makeTensorInfo(x,n,T);return f.forEach(k=>e.disposeData(k.dataId)),I}let s=e.device.limits.maxStorageBuffersPerShaderStage-1;if(r.length>s){let f=[];for(let g=0;g<r.length;g+=s){let b=r.slice(g,g+s);f.push(_f(b,t,e))}let h=_f(f,t,e);for(let g of f)e.disposeData(g.dataId);return h}let{tensors2D:a,outShape:i}=hce(r,t,e),u=a.map(f=>f.shape),l=new GC(u),p=[],m=new Array(u.length-1);if(m.length>0){m[0]=u[0][1],p.push({type:"int32",data:[m[0]]});for(let f=1;f<m.length;f++)m[f]=m[f-1]+u[f][1],p.push({type:"int32",data:[m[f]]})}let c=e.runWebGPUProgram(l,a,a[0].dtype,p);a.forEach(f=>e.disposeData(f.dataId));let d=Ne({inputs:{x:c},backend:e,attrs:{shape:i}});return e.disposeData(c.dataId),d}function hce(r,t,e){let n=C.computeOutShape(r.map(s=>s.shape),t);return{tensors2D:r.map(s=>Ne({inputs:{x:s},backend:e,attrs:{shape:[y.sizeFromShape(s.shape.slice(0,t)),y.sizeFromShape(s.shape.slice(t))]}})),outShape:n}}function XD(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,t[0].shape)[0],a=t.map(l=>l.shape);C.assertParamsConsistent(a,s);let i=C.computeOutShape(t.map(l=>l.shape),s);if(y.sizeFromShape(i)===0)return e.makeTensorInfo(i,t[0].dtype,[]);let u=t.filter(l=>y.sizeFromShape(l.shape)>0);return u.length===1?fr({inputs:{x:u[0]},backend:e}):_f(u,s,e)}var SK={kernelName:fs,backendName:"webgpu",kernelFunc:XD};function gce(r,t,e,n,o=!1,s=null,a=!1,i=4,u=4,l=4){let p=P=>{switch(P){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${P} is not supported.`)}},m=P=>{switch(P){case 1:return"return W[row * uniforms.wShape[3] + colIn];";case 4:return"return W[row * uniforms.wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${P} is not supported.`)}},c=r?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,d=r?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=r?"uniforms.xShape[1]":"uniforms.xShape[2]",h=r?"uniforms.xShape[2]":"uniforms.xShape[3]",g=r?"row":"col",b=r?"col":"row",T=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${g} / outWidth;
      let outCol = ${g} % outWidth;

      let WRow = ${b} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${b} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
      let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
      let xCh = ${b} % inChannels;
      var resData = ${tr(i)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${h}) {
        ${c}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${p(i)}
      }
      return resData;`,x=r?t&&n?`
      let col = colIn * ${i};
      ${T}`:`
      let col = colIn * ${i};
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${T}
      }
      return ${tr(i)}(0.0);`:n&&e?`
      let col = colIn * ${i};
      ${T}`:`
      let col = colIn * ${i};
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${T}
      }
      return ${tr(i)}(0.0);`,I=`${m(u)}`,k=tr(l),A=r?tr(i):tr(u),R=r?tr(u):tr(i);return`
      ${Xr(s,a,l===4,4)}
      fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${A} {
        ${r?x:I}
      }

      fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${R} {
        ${r?I:x}
      }

      fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${k}) {
        let col = colIn * ${l};
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${d}
        ${to(o,s)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}var UC=class{constructor(t,e,n,o,s=!1,a=null,i=!1){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.outputShape=t.outShape,this.isChannelsLast=t.dataFormat==="channelsLast",this.isVec4=((t.inChannels%4===0||t.inChannels%3===0)&&this.isChannelsLast||t.outWidth%4===0&&!this.isChannelsLast)&&t.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workGroupSize=gg(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=bg(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4?(this.isChannelsLast&&t.inChannels%4!==0?(this.innerElementSize=3,this.variableTypes=["f32","vec4<f32>"]):(this.innerElementSize=4,this.variableTypes=["vec4<f32>","vec4<f32>"]),s&&(this.variableNames.push("bias"),this.variableTypes.push("vec4<f32>")),i&&(this.variableNames.push("preluActivationWeights"),this.variableTypes.push("vec4<f32>"))):(this.innerElementSize=this.elementsPerThread[0],s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights")),this.addBias=s,this.activation=a,this.hasPreluActivationWeights=i,this.tileAOuter=this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workGroupSize[0]*this.innerElementSize,this.workGroupSize[1]),this.fitAOuter=e%this.tileAOuter===0,this.fitBOuter=n%this.tileBOuter===0,this.fitInner=o%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}`}getUserCode(){let t=this.isVec4?rm(this.elementsPerThread,this.workGroupSize,!this.isChannelsLast,this.tileInner):nm(this.elementsPerThread,this.workGroupSize,!this.isChannelsLast,this.tileInner),e=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${gce(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,e[0],e[1],e[2])}
    ${t}
  `}};var WC=class{constructor(t,e=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="filterDims: vec2<i32>, pad: vec2<i32>, stride: vec2<i32>, dilation: vec2<i32>,";this.workGroupSize=[4,4,8];this.outputShape=t.outShape,this.isChannelsLast=t.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.addBias=e,this.activation=n,this.hasPreluActivationWeights=o,e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${Xr(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${to(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${xe("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
             let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}};function vK(r,t){let e=r.length;return e>=3?t?[...r.slice(0,-3),r[e-3]*r[e-2],r[e-1]]:[...r.slice(0,-3),r[e-3],r[e-2]*r[e-1]]:!t&&e===1&&r[0]>1?[r[0],1]:null}function bce({x:r,filter:t,convInfo:e,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let u=e.dataFormat==="channelsLast",l=!u,p=!1,m=u&&e.filterHeight===e.inHeight&&e.filterWidth===e.inWidth&&e.padInfo.type==="VALID",c=[],d,f;if(m){let b=e.inHeight*e.inWidth*e.inChannels;d=Ne({inputs:{x:r},backend:n,attrs:{shape:[1,e.batchSize,b]}}),f=Ne({inputs:{x:t},backend:n,attrs:{shape:[1,b,e.outChannels]}})}else d=Ne({inputs:{x:r},backend:n,attrs:{shape:u?[e.batchSize,e.inHeight*e.inWidth,e.inChannels]:[e.batchSize,e.inChannels,e.inHeight*e.inWidth]}}),f=Ne({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}});if(c.push(d),c.push(f),s!=null){let b=vK(s.shape,u);b!=null&&(s=Ne({inputs:{x:s},backend:n,attrs:{shape:b}}),c.push(s))}if(o!=null){let b=vK(o.shape,u);b!=null&&(o=Ne({inputs:{x:o},backend:n,attrs:{shape:b}}),c.push(o))}let h=Ef({a:u?d:f,b:u?f:d,transposeA:l,transposeB:p,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),g=Ne({inputs:{x:h},backend:n,attrs:{shape:e.outShape}});c.push(h);for(let b of c)n.disposeData(b.dataId);return g}function KC({x:r,filter:t,convInfo:e,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let u=o!=null,l=s!=null,p=e.dataFormat==="channelsLast",m=p&&e.filterHeight===e.inHeight&&e.filterWidth===e.inWidth&&e.padInfo.type==="VALID",c=$().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!c&&(m||e.filterHeight===1&&e.filterWidth===1&&e.dilationHeight===1&&e.dilationWidth===1&&e.strideHeight===1&&e.strideWidth===1&&(e.padInfo.type==="SAME"||e.padInfo.type==="VALID")))return bce({x:r,filter:t,convInfo:e,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});let d,f=[e.padInfo.top,e.padInfo.left],h=[{type:"int32",data:[e.filterHeight,e.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[e.strideHeight,e.strideWidth]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]}];if(c)d=new WC(e,u,i,l);else{let x=p?e.outHeight*e.outWidth:e.outChannels,I=p?e.outChannels:e.outHeight*e.outWidth,k=e.filterHeight*e.filterWidth*e.inChannels;h.push({type:"int32",data:[x]},{type:"int32",data:[I]},{type:"int32",data:[k]}),d=new UC(e,x,I,k,u,i,l)}let g=[],b=[r,t];u&&(!p&&o.shape.length===1&&(o=Ne({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}}),g.push(o)),b.push(o)),l&&(!p&&s.shape.length===1&&(s=Ne({inputs:{x:s},backend:n,attrs:{shape:[s.shape[0],1,1]}}),g.push(s)),b.push(s)),i==="leakyrelu"&&(h.push({type:"float32",data:[a]}),d.uniforms+=" alpha : f32,");let T=n.runWebGPUProgram(d,b,r.dtype,h);for(let x of g)n.disposeData(x.dataId);return T}function yce(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=e,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,s.shape,a,l,i,p,!1,m);return KC({x:o,filter:s,convInfo:c,backend:n})}var AK={kernelName:mo,backendName:"webgpu",kernelFunc:yce};function Tce(r=4){let t=s=>{switch(s){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${s} is not supported.`)}},n=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${tr(r)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${tr(r)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${r}];`}
      }
      return ${tr(r)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${tr(r)} {
    let col = colIn * ${r};
    ${n}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${tr(r)} {
    let col = colIn * ${r};
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${t(r)}
    }
    return ${tr(r)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${tr(r)}) {
    let col = colIn * ${r};
    if (row < uniforms.dimAOuter && (col + ${r-1}) < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${r}] = value;
    }
  }`}var VC=class{constructor(t){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.outputShape=t.inShape,y.assert(t.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=t.inChannels%4===0&&t.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=gg(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=bg(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4&&(this.variableTypes=["vec4<f32>","f32"]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){let t=this.isVec4?rm(this.elementsPerThread,this.workGroupSize):nm(this.elementsPerThread,this.workGroupSize);return`
    ${Tce(this.isVec4?4:1)}
    ${t}
    `}};var HC=class{constructor(t){this.variableNames=["dy","W"];this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t.inShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=t.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let t=this.isChannelsLast?1:2,e=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${xe("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${t}], coords[${e}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function xce(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:p}=n,m=C.convertConv2DDataFormat(l),c=C.computeConv2DInfo(a,s.shape,i,1,u,p,!1,m),d=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.filterHeight-1-c.padInfo.top,c.filterWidth-1-c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize,c.outHeight,c.outWidth,c.outChannels]}],f;if($().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||c.filterHeight<=2&&c.filterWidth<=2&&c.outChannels<=16&&c.inChannels===1)f=new HC(c);else{f=new VC(c);let h=c.inHeight*c.inWidth,g=c.inChannels,b=c.filterHeight*c.filterWidth*c.outChannels;d.push({type:"uint32",data:[h]},{type:"uint32",data:[g]},{type:"uint32",data:[b]})}return e.runWebGPUProgram(f,[o,s],"float32",d)}var wK={kernelName:co,backendName:"webgpu",kernelFunc:xce};var Ice=it({opType:2}),NK={kernelName:fo,backendName:"webgpu",kernelFunc:Ice};var Cce=it({opType:3}),DK={kernelName:ho,backendName:"webgpu",kernelFunc:Cce};var qC=class{constructor(t,e,n,o){this.variableNames=["Image","Boxes","BoxInd"];this.uniforms="extrapolationValue : f32,";this.workGroupSize=[64,1,1];this.size=!0;let[s]=e;this.outputShape=[s,n[0],n[1],t],this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=o==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[t,e]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,o,s]=this.cropHeightBiggerThan1?[`(${t} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${t} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${t}`],[a,i,u]=this.cropWidthBiggerThan1?[`(${e} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${e} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${e}`];return`
    ${xe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${o};
        let width_scale = ${i};
        let in_y = ${s};
        if( in_y < 0.0 || in_y > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${u};
        if( in_x < 0.0 || in_x > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}};var kce=r=>{let{inputs:t,backend:e,attrs:n}=r,{image:o,boxes:s,boxInd:a}=t,{cropSize:i,method:u,extrapolationValue:l}=n,p=new qC(o.shape[3],s.shape,i,u),m=[{type:"float32",data:[l]}];return e.runWebGPUProgram(p,[o,s,a],"float32",m)},RK={kernelName:ca,backendName:"webgpu",kernelFunc:kce};var kg=class{constructor(t,e,n,o){this.variableNames=["x"];this.uniforms="index : f32,";this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.exclusive=n,this.reverse=o,this.op=t,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let t=this.outputShape.length,e=this.op==="*"?"1.0":"0.0",n=this.exclusive?e:`getX(${FK(t,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],s="",a="";return this.exclusive?(s=this.reverse?`end != ${o-1}`:"end != 0",a=this.reverse?"end + 1":"end - 1"):(s=this.reverse?`end + pow2 < ${o}`:"end >= pow2",a=this.reverse?"end + pow2":"end - pow2"),`
      ${xe("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${PK(t,"coords",this.op)};
         var val = ${n};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${s}) {
           let idx = ${a};
           ${PK(t,"coords",this.op)} = idx;
           val ${this.op}= getX(${FK(t,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function FK(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.x, ${t}.y`;if(r===3)return`${t}.x, ${t}.y, ${t}.z`;if(r===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function PK(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.y`;if(r===3)return`${t}.z`;if(r===4)return`${t}.w`;throw Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function jC(r,t,e,n,o,s){let a=t.shape.length,i=C.getAxesPermutation([n],a),u=t;i!=null&&(u=Sn({inputs:{x:t},backend:e,attrs:{perm:i}}));let l=C.getInnerMostAxes(1,a)[0];if(l!==a-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let p=u.shape[l],m=fr({inputs:{x:u},backend:e});for(let c=0;c<=Math.ceil(Math.log2(p))-1;c++){let d=new kg(r,u.shape,!1,s),f=m,h=[{type:"float32",data:[c]}];m=e.runWebGPUProgram(d,[m],m.dtype,h),e.disposeData(f.dataId)}if(o){let c=new kg(r,u.shape,o,s),d=m,f=[{type:"float32",data:[0]}];m=e.runWebGPUProgram(c,[m],m.dtype,f),e.disposeData(d.dataId)}if(i!=null){let c=C.getUndoAxesPermutation(i),d=Sn({inputs:{x:m},backend:e,attrs:{perm:c}});return e.disposeData(m.dataId),e.disposeData(u.dataId),d}return m}function vce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;return jC("*",o,e,s,a,i)}var MK={kernelName:ma,backendName:"webgpu",kernelFunc:vce};function Ace(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;return jC("+",o,e,s,a,i)}var EK={kernelName:go,backendName:"webgpu",kernelFunc:Ace};var XC=class{constructor(t,e){this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.uniforms="blockSize : i32,";this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${e}`,this.dataFormat=e}getUserCode(){return`
      ${xe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function wce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n,i=o.shape[0],u=a==="NHWC"?o.shape[1]:o.shape[2],l=a==="NHWC"?o.shape[2]:o.shape[3],p=a==="NHWC"?o.shape[3]:o.shape[1],m=u*s,c=l*s,d=p/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=[{type:"int32",data:[s]}],g=new XC(f,a);return e.runWebGPUProgram(g,[o],o.dtype,h)}var LK={kernelName:da,backendName:"webgpu",kernelFunc:wce};var YC=class{constructor(t,e,n,o=!1,s=null,a=!1){this.variableNames=["x","W"];this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,";this.workGroupSize=[16,16,1];this.outputShape=t,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),o&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.addBias=o,this.activation=s,this.hasPreluActivation=a,this.filterHeight=e,this.filterWidth=n,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let t=this.filterWidth*this.filterHeight,e=this.workGroupSize[0]*this.workGroupSize[1]*this.workGroupSize[2],n=this.workGroupSize[1]+this.filterHeight-1,o=this.workGroupSize[0]+this.filterWidth-1;return`
      ${Xr(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${o}>, ${n}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${Ep()}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
        localId = LocalId;
        globalId = GlobalId;
        let localIndex = i32(LocalIndex);
        numWorkgroups = NumWorkgroups;
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pad;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${this.workGroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${o}; inputCol = inputCol + ${this.workGroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = localIndex;
        ${t<e?`if (wIndex < ${t})`:`for(; wIndex < ${t}; wIndex = wIndex + ${e})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${to(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};var $f=class{constructor(t,e=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,";this.workGroupSize=[4,4,4];this.workPerThread=4;this.isVec4=!0;this.outputShape=t.outShape,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,[4,this.workPerThread,1]),y.assert(t.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=t,this.addBias=e,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwiseVec4_${n}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){let t=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth;return`
      ${Xr(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      const strideHeight = ${this.convInfo.strideHeight};
      const strideWidth = ${this.convInfo.strideWidth};
      ${Ep()}
      fn _start(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = i32(globalId.z) / uniforms.outShape[1];
        let r = i32(globalId.z) % uniforms.outShape[1];
        let c = i32(globalId.y) * ${this.workPerThread};
        let d1 = i32(globalId.x) * 4;
        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(strideHeight, strideWidth) - uniforms.pad;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${t}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${t}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * strideWidth + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${to(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}};var Bf=class{constructor(t,e=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms=`pad : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, stride : vec2<i32>, dilation : vec2<i32>,`;this.workGroupSize=[256,1,1];this.outputShape=t.outShape,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=t.dataFormat==="channelsLast",e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=t,this.addBias=e,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let t=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${Xr(this.activation,this.hasPreluActivation,!1,4)}

      ${xe()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.stride - uniforms.pad;
        let d2 = coords[${this.isChannelsLast?3:1}];
        let channelMul = uniforms.wShape[3];
        let d1 = d2 / channelMul;
        let q = d2 % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
        // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
        // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
        // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
        var value = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = ${t};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = ${t};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          }
          ${to(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};function Nce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:p}=n,m=C.convertConv2DDataFormat(u),c=l;c==null&&(c=[1,1]);let d=C.computeConv2DInfo(o.shape,s.shape,a,c,i,p,!0,m),f=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inHeight,d.inWidth]}],h=d.dataFormat==="channelsLast",g;return!h&&d.inHeight>16&&d.inWidth>16&&d.strideHeight===1&&d.strideWidth===1&&d.dilationWidth===1&&d.dilationHeight===1&&d.inChannels===d.outChannels?g=new YC(d.outShape,d.filterHeight,d.filterWidth):h&&d.inHeight>4&&d.inWidth>4&&d.strideWidth<=2&&d.inChannels===d.outChannels&&d.dilationHeight===1&&d.dilationWidth===1&&d.inChannels%4===0?g=new $f(d):(g=new Bf(d),f.push({type:"int32",data:[d.filterHeight]},{type:"int32",data:[d.filterWidth]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]})),e.runWebGPUProgram(g,[o,s],o.dtype,f)}var _K={kernelName:bo,backendName:"webgpu",kernelFunc:Nce};var YD=yt({opType:0,cpuKernelImpl:WW,supportsComplex:!0}),$K={kernelName:Eo,backendName:"webgpu",kernelFunc:YD};function Sg(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;return Fi(o,s,a,"sum",e)}var BK={kernelName:qo,backendName:"webgpu",kernelFunc:Sg};function Dce(r){let{inputs:t,backend:e,attrs:n}=r,{equation:o}=n,s=t,{allDims:a,summedDims:i,idDims:u}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(a.length,u,s);let{path:l,steps:p}=C.getEinsumComputePath(i,u),m=p.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of p[h]){let{permutationIndices:b,expandDims:T}=C.getEinsumPermutation(d,u[g]),x;C.isIdentityPermutation(b)?x=s[g]:(x=Sn({inputs:{x:s[g]},backend:e,attrs:{perm:b}}),f.push(x));let I=x.shape.slice();for(let k=0;k<T.length;++k)I.splice(T[k],0,1);y.arraysEqual(x.shape,I)||(x=Ne({inputs:{x},backend:e,attrs:{shape:I}}),f.push(x)),c===null?c=x:(c=YD({inputs:{a:x,b:c},backend:e}),f.push(c))}h<m-1&&(l[h]>=0&&(c=Sg({inputs:{x:c},backend:e,attrs:{axis:l[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&e.disposeData(h.dataId);return c}var OK={kernelName:Bu,backendName:"webgpu",kernelFunc:Dce};var Rce=it({opType:4}),zK={kernelName:To,backendName:"webgpu",kernelFunc:Rce};var Fce=yt({opType:5,dtype:"bool",cpuKernelImpl:DW}),GK={kernelName:fa,backendName:"webgpu",kernelFunc:Fce};var ZD=it({opType:5,cpuKernelImpl:RW,dtype:"float32"}),UK={kernelName:xo,backendName:"webgpu",kernelFunc:ZD};function ZC(r){let{inputs:t,attrs:e,backend:n}=r,{dim:o}=e,{input:s}=t,a=s.shape.length,i=s.shape.slice(),u=o;return o<0&&(y.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+o+1),i.splice(u,0,1),Ne({inputs:{x:s},backend:n,attrs:{shape:i}})}var WK={kernelName:hs,backendName:"webgpu",kernelFunc:ZC};var Pce=it({opType:6,cpuKernelImpl:FW}),KK={kernelName:ha,backendName:"webgpu",kernelFunc:Pce};var QC=class{constructor(t){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${xe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}};var VK={kernelName:ga,backendName:"webgpu",kernelFunc:({inputs:r,backend:t})=>{let{image:e}=r,n=t,o=new QC(e.shape);return n.runWebGPUProgram(o,[e],e.dtype)}};var Mce=it({opType:7,cpuKernelImpl:PW}),HK={kernelName:Io,backendName:"webgpu",kernelFunc:Mce};var Ece=yt({opType:13,dtype:"int32"}),qK={kernelName:Co,backendName:"webgpu",kernelFunc:Ece};var JC=class{constructor(t,e,n=!1){this.isFromPixels=!0;this.outputShape=[0];this.variableNames=[];this.workGroupSize=[256,1,1];this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,[e,1,1]),this.importVideo=n,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let t=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${xe("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${t};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}};var jK={kernelName:Vp,backendName:"webgpu",kernelFunc:Lce},Of,QD=$().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU"),ek=new Map;function Lce(r){let{inputs:t,backend:e,attrs:n}=r,{pixels:o}=t,{numChannels:s}=n;if(o==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let a=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,u=typeof HTMLCanvasElement<"u"&&o instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&o instanceof OffscreenCanvas,l=typeof ImageBitmap<"u"&&o instanceof ImageBitmap,[p,m]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],c=[m,p,s],d=$().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&a,f=a||i;if(l||u||f){let T;if(d){let L=o;if(!ek.has(L)||ek.get(L).expired){let O={source:L};ek.set(L,e.device.importExternalTexture(O))}T={width:p,height:m,format:null,usage:null,texture:ek.get(L)}}else{if(f){let W=$().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Of==null||W!==QD)&&(QD=W,Of=document.createElement("canvas").getContext("2d",{willReadFrequently:QD})),Of.canvas.width=p,Of.canvas.height=m,Of.drawImage(o,0,0,p,m),o=Of.canvas}let L=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,O="rgba8unorm",G=e.textureManager.acquireTexture(c[1],c[0],O,L);e.queue.copyExternalImageToTexture({source:o},{texture:G},[c[1],c[0]]),T={width:p,height:m,format:O,usage:L,texture:G}}let x=y.sizeFromShape(c),I=y.computeStrides(c),k=new JC(c,s,d),A=[{type:"uint32",data:[x]},{type:"uint32",data:[s]},{type:"uint32",data:[...I]}],R=e.makeTensorInfo([m,p],"int32"),F=e.tensorMap.get(R.dataId);F.resourceInfo=T;let P=e.runWebGPUProgram(k,[R],"int32",A);return e.disposeData(R.dataId),P}let h=o.data,g=h;if(s!=null&&s!==4){g=new Uint8Array(o.width*o.height*s);let T=h.length,x=0;for(let I=0;I<T;I++)I%4<s&&(g[x++]=h[I])}let b=e.makeTensorInfo(c,"int32",new Int32Array(g));return e.uploadToGPU(b.dataId),b}var tk=class{constructor(t,e,n,o,s){this.uniforms="varianceEpsilon : f32,";this.workGroupSize=[128,1,1];this.size=!0;this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(t,e),C.assertAndGetBroadcastShape(t,n),this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),o!=null&&(C.assertAndGetBroadcastShape(t,o),this.variableNames.push("offset")),s!=null&&(C.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale")),this.offsetShape=o,this.scaleShape=s,this.shaderKey="batchNorm"}getUserCode(){let t="0.0";this.offsetShape!=null&&(t="getOffsetByOutputIndex(index)");let e="1.0";return this.scaleShape!=null&&(e="getScaleByOutputIndex(index)"),`
      ${xe("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${t};
          let scaleValue = ${e};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}};var XK={kernelName:ko,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n,scale:o,offset:s,mean:a,variance:i}=r,{varianceEpsilon:u}=t,l=e,p=[n,a,i],m=null;s!=null&&(m=s.shape,p.push(s));let c=null;o!=null&&(c=o.shape,p.push(o));let d=new tk(n.shape,a.shape,i.shape,m,c),f=[{type:"float32",data:[u]}];return l.runWebGPUProgram(d,p,n.dtype,f)}};function _ce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:p,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=C.convertConv2DDataFormat(p),g=C.computeConv2DInfo(o.shape,s.shape,u,m,l,c,!1,h);return KC({x:o,filter:s,convInfo:g,backend:e,bias:a,preluActivationWeights:i,leakyreluAlpha:f,activation:d})}var YK={kernelName:Ds,backendName:"webgpu",kernelFunc:_ce};function $ce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:l,dilations:p,dimRoundingMode:m,activation:c,leakyreluAlpha:d}=n,f=p;f==null&&(f=[1,1]),y.assert(C.eitherStridesOrDilationsAreOne(u,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`);let h=C.computeConv2DInfo(o.shape,s.shape,u,f,l,m,!0),g=[o,s],b=a!=null,T=i!=null;b&&g.push(a),T&&g.push(i);let x=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inHeight,h.inWidth]}],I;return h.inHeight>4&&h.inWidth>4&&h.strideWidth<=2&&h.inChannels===h.outChannels&&h.dilationHeight===1&&h.dilationWidth===1&&h.inChannels%4===0?I=new $f(h,b,c,T):(I=new Bf(h,b,c,T),x.push({type:"int32",data:[h.filterHeight]},{type:"int32",data:[h.filterWidth]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]})),c==="leakyrelu"&&(x.push({type:"float32",data:[d]}),I.uniforms+=" alpha : f32,"),e.runWebGPUProgram(I,g,"float32",x)}var ZK={kernelName:Rs,backendName:"webgpu",kernelFunc:$ce};var rk=class{constructor(t,e){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${t}`,this.sliceDim=t,this.uniforms=`sliceDim : i32, strides : ${ar(t)},`}getUserCode(){let t;return this.sliceDim>1?t="uniforms.strides[j]":t="uniforms.strides",`
      ${xe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${t};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function Bce(r){let{inputs:t,backend:e}=r,{params:n,indices:o}=t,s=o.shape,a=s[s.length-1],i=y.sizeFromShape(n.shape),[u,l,p,m]=C.prepareAndValidate(n,o),c=Ne({inputs:{x:o},backend:e,attrs:{shape:[l,a]}}),d=Ne({inputs:{x:n},backend:e,attrs:{shape:[y.sizeFromShape(n.shape)/p,p]}});if(e.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let T=e.readSync(o.dataId),x=e.bufferSync(n),I=MW(T,x,n.dtype,l,a,p,m,n.shape,i);return e.makeTensorInfo(u,n.dtype,I.values)}let f=new rk(a,[l,p]),h=[{type:"int32",data:[a]},{type:"int32",data:m}],g=e.runWebGPUProgram(f,[d,c],d.dtype,h),b=Ne({inputs:{x:g},backend:e,attrs:{shape:u}});return e.disposeData(c.dataId),e.disposeData(d.dataId),e.disposeData(g.dataId),b}var QK={kernelName:ba,backendName:"webgpu",kernelFunc:Bce};var nk=class{constructor(t,e){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t.slice(),this.aShape=t,this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let t=Oce(this.aShape);return`
      ${xe("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${t}));
        }
      }
    `}};function Oce(r){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],e=[];for(let n=0;n<r.length;n++)n===2?e.push("indexZ"):e.push(`${t[n]}`);return e.join()}function JD(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n,u=y.parseAxisParam(a,o.shape)[0],l=C.segment_util.collectGatherOpShapeInfo(o,s,u,i),p=y.sizeFromShape(s.shape),m=[],c=Ne({inputs:{x:o},backend:e,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=Ne({inputs:{x:s},backend:e,attrs:{shape:[l.batchSize,p/l.batchSize]}});m.push(c),m.push(d);let f=[l.batchSize,l.outerSize,p/l.batchSize,l.sliceSize];if(e.shouldExecuteOnCPU([o,s])){let x=e.tensorMap.get(d.dataId).values,I=Ie(d.shape,d.dtype,x),A=e.tensorMap.get(c.dataId).values,R=Ie(c.shape,c.dtype,A),F=EW(R,I,f);return m.forEach(P=>e.disposeData(P.dataId)),e.makeTensorInfo(l.outputShape,F.dtype,F.values)}let h=new nk(c.shape,f),g=e.runWebGPUProgram(h,[c,d],c.dtype);m.push(g);let b=Ne({inputs:{x:g},backend:e,attrs:{shape:l.outputShape}});return m.forEach(T=>e.disposeData(T.dataId)),b}var JK={kernelName:gs,backendName:"webgpu",kernelFunc:JD};var zce=yt({opType:6,cpuKernelImpl:_W,dtype:"bool"}),eV={kernelName:ya,backendName:"webgpu",kernelFunc:zce};var Gce=yt({opType:7,dtype:"bool",cpuKernelImpl:LW}),tV={kernelName:So,backendName:"webgpu",kernelFunc:Gce};var Uce=it({opType:8,dtype:"bool"}),rV={kernelName:Ta,backendName:"webgpu",kernelFunc:Uce};function Wce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{alpha:s}=n,a=[{type:"float32",data:[s]}],i=new na(o.shape,15);return i.uniforms="alpha : f32,",e.runWebGPUProgram(i,[o],"float32",a)}var nV={kernelName:vo,backendName:"webgpu",kernelFunc:Wce};var Kce=yt({opType:8,dtype:"bool",cpuKernelImpl:BW}),oV={kernelName:xa,backendName:"webgpu",kernelFunc:Kce};var Vce=yt({opType:9,dtype:"bool",cpuKernelImpl:$W}),sV={kernelName:Ia,backendName:"webgpu",kernelFunc:Vce};var Hce=it({opType:10,cpuKernelImpl:OW}),aV={kernelName:Ao,backendName:"webgpu",kernelFunc:Hce};var qce=yt({opType:10,dtype:"bool"}),iV={kernelName:Ca,backendName:"webgpu",kernelFunc:qce};var jce=it({opType:11}),uV={kernelName:ka,backendName:"webgpu",kernelFunc:jce};var Xce=yt({opType:16,cpuKernelImpl:GW}),pV={kernelName:No,backendName:"webgpu",kernelFunc:Xce};function Yce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,l=1,p=C.computePool2DInfo(o.shape,s,a,l,i,u);return $C(o,p,"max",e)}var lV={kernelName:Do,backendName:"webgpu",kernelFunc:Yce};function Zce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;return Fi(o,s,a,"min",e)}var mV={kernelName:Fo,backendName:"webgpu",kernelFunc:Zce};var Qce=yt({opType:17,cpuKernelImpl:UW}),cV={kernelName:Po,backendName:"webgpu",kernelFunc:Qce};var ok=class{constructor(t,e,n){this.uniforms="";this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e.map((o,s)=>o[0]+t[s]+o[1]),this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=t,e.map((o,s)=>{this.uniforms+=` pad${s} : vec2<i32>,`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let t=this.xShape.length,e=this.xShape.map((l,p)=>`uniforms.pad${p}[0]`).join(","),n=this.xShape.map((l,p)=>`uniforms.pad${p}[0] + uniforms.xShape${t>1?`[${p}]`:""}`).join(","),o=t===1?"start":"start[i]",s=t===1?"end":"end[i]",a=t===1?"outC":"outC[i]",i=ar(t),u=t>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,t):"coords";return`
      ${xe("index")} {
        if (index < uniforms.size) {
          let start = ${i}(${e});
          let end = ${i}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${t}; i = i + 1) {
            if (${a} < ${o}) {
              ${a} = ${o} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${s}) {
              ${a} = (${s} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${u}));
        }
      }
    `}};var dV={kernelName:Mo,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{paddings:o,mode:s}=t,a=e,i=o.map(p=>({type:"int32",data:[p[0],p[1]]})),u=new ok(n.shape,o,s);return a.runWebGPUProgram(u,[n],n.dtype,i)}};function Jce(r){let{inputs:t,backend:e}=r,{x:n}=t;if(e.shouldExecuteOnCPU([n])){let s=e.tensorMap.get(n.dataId),[a,i]=KW(s.values,n.shape,n.dtype);return e.makeTensorInfo(i,n.dtype,a)}let o=new na(n.shape,12);return e.runWebGPUProgram(o,[n],n.dtype)}var fV={kernelName:bs,backendName:"webgpu",kernelFunc:Jce};function ede(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=n,l=e.readSync(o.dataId),p=e.readSync(s.dataId),{selectedIndices:m}=xr.nonMaxSuppressionV3Impl(l,p,a,i,u);return e.makeTensorInfo([m.length],"int32",new Int32Array(m))}var hV={kernelName:va,backendName:"webgpu",kernelFunc:ede};function tde(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=n,p=e.readSync(o.dataId),m=e.readSync(s.dataId),c=a,d=i,f=u,h=l,{selectedIndices:g,selectedScores:b}=xr.nonMaxSuppressionV5Impl(p,m,c,d,f,h);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var gV={kernelName:Aa,backendName:"webgpu",kernelFunc:tde};function vg(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="complex64"){let o=Nu({inputs:{input:n},backend:e}),s=vg({inputs:{x:o},backend:e}),a=sm({inputs:{input:n},backend:e}),i=vg({inputs:{x:a},backend:e}),u=oi({inputs:{real:s,imag:i},backend:e});return e.disposeData(o.dataId),e.disposeData(s.dataId),e.disposeData(a.dataId),e.disposeData(i.dataId),u}else return is({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:e})}var bV={kernelName:As,backendName:"webgpu",kernelFunc:vg};function yV(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=Nu({inputs:{input:n},backend:e}),s=yV({inputs:{x:o},backend:e}),a=sm({inputs:{input:n},backend:e}),i=vg({inputs:{x:a},backend:e}),u=oi({inputs:{real:s,imag:i},backend:e});return e.disposeData(o.dataId),e.disposeData(s.dataId),e.disposeData(a.dataId),e.disposeData(i.dataId),u}else return is({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:e})}var TV={kernelName:ys,backendName:"webgpu",kernelFunc:yV};function rde(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n;if(t.length===1)return ZC({inputs:{input:t[0]},backend:e,attrs:{dim:o}});let s=t[0].shape,a=t[0].dtype;t.forEach(p=>{y.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=t.map(p=>{let m=ZC({inputs:{input:p},backend:e,attrs:{dim:o}});return i.push(m),m}),l=XD({inputs:u,backend:e,attrs:{axis:o}});return i.forEach(p=>e.disposeData(p.dataId)),l}var xV={kernelName:Ts,backendName:"webgpu",kernelFunc:rde};var sk=class{constructor(t,e){this.variableNames=["x"];this.uniforms="constantValue : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e.map((n,o)=>n[0]+t[o]+n[1]),this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),e.map((n,o)=>{this.uniforms+=` pad${o} : vec2<i32>,`}),this.xShape=t,this.shaderKey="pad"}getUserCode(){let t=this.xShape.length,e=ar(t),n=this.xShape.map((m,c)=>`uniforms.pad${c}[0]`).join(","),o=this.xShape.map((m,c)=>`uniforms.pad${c}[0] + uniforms.xShape${t>1?`[${c}]`:""}`).join(","),s=t>1?`${e}(${n})`:`${n}`,a=t>1?`${e}(${o})`:`${o}`,i=t>1?"any(outC < start)":"outC < start",u=t>1?"any(outC >= end)":"outC >= end",l=t>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,t):"coords";return`
      ${xe("index")} {
        if (index < uniforms.size) {
          let start = ${s};
          let end = ${a};
          let outC = getCoordsFromIndex(index);

          if (${i} || ${u}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${l}));
          }
        }
      }
    `}};var e0=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,constantValue:a}=n;if(s.every(l=>y.arraysEqual(l,[0,0])))return fr({inputs:{x:o},backend:e});if(y.sizeFromShape(o.shape)===0){let l=s.map((p,m)=>p[0]+o.shape[m]+p[1]);return is({backend:e,attrs:{shape:l,value:a,dtype:o.dtype}})}let i=[{type:"float32",data:[a]}];s.map(l=>i.push({type:"int32",data:[l[0],l[1]]}));let u=new sk(o.shape,s);return e.runWebGPUProgram(u,[o],o.dtype,i)},IV={kernelName:Lo,backendName:"webgpu",kernelFunc:e0};var nde=yt({opType:14}),CV={kernelName:_o,backendName:"webgpu",kernelFunc:nde};function ode(r){let{inputs:t,backend:e}=r,{x:n,alpha:o}=t,s=new om(15,n.shape,o.shape);return e.runWebGPUProgram(s,[n,o],"float32")}var kV={kernelName:$o,backendName:"webgpu",kernelFunc:ode};function sde(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;return Fi(o,s,a,"prod",e)}var SV={kernelName:Bo,backendName:"webgpu",kernelFunc:sde};var ade=r=>{let{backend:t,attrs:e}=r,{start:n,stop:o,step:s,dtype:a}=e,i=qW(n,o,s,a);return t.makeTensorInfo([i.length],a,i)},vV={kernelName:di,backendName:"webgpu",kernelFunc:ade};var t0=yt({opType:4}),AV={kernelName:yo,backendName:"webgpu",kernelFunc:t0};var ide=it({opType:16}),wV={kernelName:Na,backendName:"webgpu",kernelFunc:ide};var ude=it({opType:13}),NV={kernelName:Oo,backendName:"webgpu",kernelFunc:ude};var pde=it({opType:14}),DV={kernelName:Uo,backendName:"webgpu",kernelFunc:pde};var ak=class{constructor(t,e,n){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=[t[0],e,n,t[3]],this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${xe("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function lde(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,size:a,halfPixelCenters:i}=n,[u,l]=a,p=s&&u>1?1:0,m=s&&l>1?1:0,d=[{type:"float32",data:[p,m]},{type:"float32",data:[i?.5:0]}],f=new ak(o.shape,u,l);return e.runWebGPUProgram(f,[o],"float32",d)}var RV={kernelName:Go,backendName:"webgpu",kernelFunc:lde};var ik=class{constructor(t,e,n,o){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=[t[0],e,n,t[3]],this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=o,this.shaderKey=`resizeNearest_${o}`}getUserCode(){let t;return this.halfPixelCenters?t="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":t="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${xe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${t};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function mde(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,p=s&&u>1?1:0,m=s&&l>1?1:0,d=[{type:"float32",data:[p,m]},{type:"float32",data:[s?.5:0]}],f=new ik(o.shape,u,l,a);return e.runWebGPUProgram(f,[o],o.dtype,d)}var FV={kernelName:zo,backendName:"webgpu",kernelFunc:mde};var uk=class{constructor(t,e){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=t,typeof e=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${xe("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}};var PV={kernelName:$a,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=t,i=e,u=new uk(n.shape,s),[l,p]=C.getImageCenter(a,n.shape[1],n.shape[2]),m=[{type:"float32",data:[l]},{type:"float32",data:[p]},{type:"float32",data:[Math.sin(o)]},{type:"float32",data:[Math.cos(o)]}];return typeof s=="number"?m.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):m.push({type:"float32",data:s}),i.runWebGPUProgram(u,[n],n.dtype,m)}};var cde=it({opType:17,cpuKernelImpl:jW}),MV={kernelName:Wo,backendName:"webgpu",kernelFunc:cde};var Lp=class{constructor(t,e,n,o,s,a,i,u=!0){this.variableNames=["updates","indices"];this.workGroupSize=[64,1,1];this.atomic=!0;this.outputShape=a,this.type=i,this.sumDupeIndices=u,this.dispatchLayout=ke(t),this.dispatch=ye(this.dispatchLayout,t,this.workGroupSize),this.sliceDimGreaterThanOne=e>1,this.shaderKey=`scatter_${n}_${o}_${this.sliceDimGreaterThanOne}_${i}_${u}`;let l=ar(s.length);this.uniforms=`sliceDim : i32, strides: ${l}, size: i32,`,this.updatesRank=o,this.indicesRank=n}getUserCode(){let t="";this.indicesRank===1?t="coords[0]":this.indicesRank===2&&(t="coords[0], j");let e=`getIndices(${t})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",o="",s="";this.dispatchLayout.x.length===1?(o="flattenedIndex",s=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(o="vec2<i32>(flattenedIndex, coords[1])",s=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);let i=`getUpdates(${Array.from({length:this.updatesRank},(p,m)=>`coords[${m}]`).join(", ")})`,u=(p,m)=>{let c=`atomicAdd(${p}, bitcast<i32>(${m}))`;this.type==="float32"&&(c=`
          {
            var oldBits = 0;
            var newBits = bitcast<i32>(${m});
            loop {
              let info = atomicCompareExchangeWeak(${p}, oldBits, newBits);
              if (info.exchanged) {
                break;
              }
              oldBits = info.old_value;
              let oldValue = bitcast<f32>(oldBits);
              let newValue = oldValue + (${m});
              newBits = bitcast<i32>(newValue);
            }
          }
        `);let d=`atomicStore(${p}, bitcast<i32>(${m}));`;return this.sumDupeIndices?c:d};return`
    ${s}

      ${xe("index")} {
        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${e}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue =
              ${Ff(this.type,!1)}(${i});
          let flatIndex = getOutputIndexFromCoords(${o});

          ${u("&result[flatIndex]","updateValue")};
        }
      }`}};function dde(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,{sliceRank:i,numUpdates:u,sliceSize:l,strides:p,outputSize:m}=C.calculateShapes(s,o,a),c=[m/l,l];if(m===0)return e.makeTensorInfo(a,o.dtype);let d=Ne({inputs:{x:o},backend:e,attrs:{shape:[u,i]}}),f=Ne({inputs:{x:s},backend:e,attrs:{shape:[u,l]}}),h=f.dtype,g=is({backend:e,attrs:{shape:c,value:0,dtype:h}}),b=y.sizeFromShape(f.shape),T=[{type:"int32",data:[i]},{type:"int32",data:p},{type:"int32",data:[b]}],x=new Lp(f.shape,i,d.shape.length,f.shape.length,p,c,h),I=e.runWebGPUProgram(x,[f,d],h,T,g),k=Ne({inputs:{x:I},backend:e,attrs:{shape:a}});return e.disposeData(d.dataId),e.disposeData(f.dataId),e.disposeData(I.dataId),k}var EV={kernelName:Fa,backendName:"webgpu",kernelFunc:dde};var pk=class{constructor(t,e,n){this.variableNames=["c","a","b"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=t,this.rank=n,this.shaderKey="select"}getUserCode(){let t,e;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)e="resRC",t="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],a=[];for(let i=0;i<this.outputShape.length;i++)a.push(`${o[i]}`),i<this.cRank&&s.push(`${o[i]}`);t=s.join(),e=a.join()}return`
      ${xe("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${t});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${e}));
          } else {
            setOutputAtIndex(index, getB(${e}));
          }
        }
      }
    `}};function fde(r){let{inputs:t,backend:e}=r,{condition:n,t:o,e:s}=t,a=new pk(n.shape.length,o.shape,o.shape.length);return e.runWebGPUProgram(a,[n,o,s],Et(o.dtype,s.dtype))}var LV={kernelName:Is,backendName:"webgpu",kernelFunc:fde};var hde=it({opType:20}),_V={kernelName:Vo,backendName:"webgpu",kernelFunc:hde};var gde=it({opType:18}),$V={kernelName:Ko,backendName:"webgpu",kernelFunc:gde};var bde=it({opType:19}),BV={kernelName:Pa,backendName:"webgpu",kernelFunc:bde};var r0=yt({opType:3,cpuKernelImpl:eK,supportsComplex:!0}),OV={kernelName:Yo,backendName:"webgpu",kernelFunc:r0};function yde(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{dim:s}=n,a=y.parseAxisParam([s],o.shape),i=Cg({inputs:{x:o},backend:e,attrs:{reductionIndices:a,keepDims:!1}}),u=C.expandShapeToKeepDim(i.shape,a),l=Ne({inputs:{x:i},backend:e,attrs:{shape:u}}),p=r0({inputs:{a:o,b:l},backend:e}),m=ZD({inputs:{x:p},backend:e}),c=Sg({inputs:{x:m},backend:e,attrs:{axis:a,keepDims:!1}}),d=Ne({inputs:{x:c},backend:e,attrs:{shape:u}}),f=t0({inputs:{a:m,b:d},backend:e});return e.disposeData(i.dataId),e.disposeData(l.dataId),e.disposeData(p.dataId),e.disposeData(m.dataId),e.disposeData(c.dataId),e.disposeData(d.dataId),f}var zV={kernelName:jo,backendName:"webgpu",kernelFunc:yde};var Tde=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,paddings:a}=n;y.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((b,T)=>b*T),u=[[0,0]];u.push(...a);for(let b=1+s.length;b<o.shape.length;++b)u.push([0,0]);let l=[],p=e0({inputs:{x:o},backend:e,attrs:{paddings:u,constantValue:0}}),m=C.getReshaped(p.shape,s,i,!1),c=C.getPermuted(m.length,s.length,!1),d=C.getReshapedPermuted(p.shape,s,i,!1),f=Ne({inputs:{x:p},backend:e,attrs:{shape:m}}),h=Sn({inputs:{x:f},backend:e,attrs:{perm:c}}),g=Ne({inputs:{x:h},backend:e,attrs:{shape:d}});return l.push(p),l.push(f),l.push(h),l.forEach(b=>e.disposeData(b.dataId)),g},GV={kernelName:ks,backendName:"webgpu",kernelFunc:Tde};var lk=class{constructor(t,e){this.variableNames=["A"];this.workGroupSize=[64,1,1];this.size=!0;let n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[o]*e[o];this.outputShape=n,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let t=xde(this.rank,"uniforms.");return`
      ${xe("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${t}));
        }
      }
    `}};function xde(r,t=""){if(r>=5)throw Error(`Tile for rank ${r} is not yet supported`);if(r===1)return`(resRC % ${t}aShape)`;let e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r;o++)n.push(`(${e[o]} % ${t}aShape[${o}])`);return n.join()}function n0(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reps:s}=n;if(e.shouldExecuteOnCPU([o])||o.dtype==="string"||o.shape.length>=5){let u=e.readSync(o.dataId),l=o.dtype==="string"?u.map(c=>y.decodeString(c)):u,p=Ie(o.shape,o.dtype,l),m=tK(p,s);return e.makeTensorInfo(m.shape,m.dtype,m.values)}let a=new lk(o.shape,s);return e.runWebGPUProgram(a,[o],o.dtype)}var UV={kernelName:Dn,backendName:"webgpu",kernelFunc:n0};function Ide(r){let{inputs:t,backend:e,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=t,{outputShape:i}=n,{sliceRank:u,numUpdates:l,sliceSize:p,strides:m,outputSize:c}=C.calculateShapes(s,o,i),d=!1;if(s.dtype==="string"){let F=e.bufferSync(o),P=e.bufferSync(s),L=y.decodeString(e.readSync(a.dataId)[0]),O=XW(F,P,i,c,p,l,u,m,L,d);return e.makeTensorInfo(i,O.dtype,O.values)}let f=[c/p,p],h=Ne({inputs:{x:o},backend:e,attrs:{shape:[l,u]}}),g=s.shape.length?Ne({inputs:{x:s},backend:e,attrs:{shape:[l,p]}}):fr({inputs:{x:s},backend:e}),b=g.dtype,T=e.makeTensorInfo([],b,y.makeZerosTypedArray(1,b)),x=Ne({inputs:{x:a},backend:e,attrs:{shape:Array(f.length).fill(1)}}),I=n0({inputs:{x},backend:e,attrs:{reps:f}}),k=y.sizeFromShape([l,p]),A=[{type:"int32",data:[u]},{type:"int32",data:m},{type:"int32",data:[k]}];switch(l){case 0:break;case 1:{let F=new Lp([l,p],u,h.shape.length,g.shape.length,m,f,b,d);e.runWebGPUProgram(F,[g,h],b,A,I)}break;default:{let F=new Lp([l,p],u,h.shape.length,T.shape.length,m,f,b,d);e.runWebGPUProgram(F,[T,h],b,A,I)}{let F=new Lp([l,p],u,h.shape.length,g.shape.length,m,f,b);e.runWebGPUProgram(F,[g,h],b,A,I)}}let R=Ne({inputs:{x:I},backend:e,attrs:{shape:i}});return e.disposeData(h.dataId),e.disposeData(g.dataId),e.disposeData(x.dataId),e.disposeData(T.dataId),e.disposeData(I.dataId),R}var WV={kernelName:Hu,backendName:"webgpu",kernelFunc:Ide};function Cde(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],u=C.prepareSplitSize(o,s,i),l=o.shape.length,p=new Array(l).fill(0),m=o.shape.slice();return u.map(c=>{let d=[...m];d[i]=c;let f=si({inputs:{x:o},backend:e,attrs:{begin:p,size:d}});return p[i]+=c,f})}var KV={kernelName:Ss,backendName:"webgpu",kernelFunc:Cde};var kde=it({opType:21}),VV={kernelName:Ho,backendName:"webgpu",kernelFunc:kde};var HV={kernelName:fi,backendName:"webgpu",kernelFunc:({inputs:r,backend:t})=>{let{x:e}=r,n=t,o=new na(e.shape,22);return n.runWebGPUProgram(o,[e],e.dtype)}};var Sde=yt({opType:12}),qV={kernelName:Xo,backendName:"webgpu",kernelFunc:Sde};var mk=class{constructor(t){this.variableNames=["x"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let e=ar(this.outputShape.length);this.uniforms=`begin : ${e},  strides : ${e}, `,this.shaderKey="stridedSlice"}getUserCode(){let t=this.outputShape.length,e="";if(t===1)e="coords * uniforms.strides + uniforms.begin";else{let o=0;e=this.outputShape.map((s,a)=>(o++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${o-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${xe("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${e}));
         }
       }
     `}};function vde(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:T,end:x,strides:I}=xt.sliceInfo(o.shape,s,a,i,u,l,p,m,c),k;if(h)k=Ne({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let A=xt.computeOutShape(T,x,I),R=si({inputs:{x:o},backend:e,attrs:{begin:T,size:A}});k=Ne({inputs:{x:R},backend:e,attrs:{shape:f}}),e.disposeData(R.dataId)}else if(e.shouldExecuteOnCPU([o])){let R=e.readSync(o.dataId),F=Ie(o.shape,o.dtype,R),P=QW(d,F,I,T);k=e.makeTensorInfo(f,o.dtype,P.values)}else{let R=new mk(d),F=[{type:"int32",data:T},{type:"int32",data:I}],P=e.runWebGPUProgram(R,[o],o.dtype,F);k=Ne({inputs:{x:P},backend:e,attrs:{shape:f}}),e.disposeData(P.dataId)}return k}var jV={kernelName:Ma,backendName:"webgpu",kernelFunc:vde};function Ade(r){let{inputs:t,backend:e,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:m}=t,c=e.readSync(p.dataId),d=e.readSync(m.dataId),[f,h]=JW(c,d,o,s,a,i,u,l);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(m.shape,"int32",h)]}var XV={kernelName:hi,backendName:"webgpu",kernelFunc:Ade};var wde=it({opType:23}),YV={kernelName:Zo,backendName:"webgpu",kernelFunc:wde};var ck=class{constructor(t){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${xe("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},dk=class{constructor(t){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${xe("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function zf(r,t){t!==null&&r.disposeData(t.dataId)}function ZV(r){let t=1;for(;t<r;)t*=2;return t}function Nde(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{k:s,sorted:a}=n,i=o.shape,u=i[i.length-1];if(e.shouldExecuteOnCPU([o])){let k=e.readSync(o.dataId),[A,R]=rK(k,i,o.dtype,s,a);return[e.makeTensorInfo(A.shape,A.dtype,A.values),e.makeTensorInfo(R.shape,R.dtype,R.values)]}if(s===0)return i[i.length-1]=0,[e.makeTensorInfo(i,o.dtype,[]),e.makeTensorInfo(i,"int32",[])];if(u===1)return[o,is({attrs:{shape:i,dtype:"int32",value:0},backend:e})];let p=y.sizeFromShape(i)/u,m=Ne({inputs:{x:o},attrs:{shape:[p,u]},backend:e}),c=ZV(s),d=ZV(u),f=null,h=()=>f===null?[m,m]:[m,f],g=(k,A,R)=>{let F=h(),P=new ck(R),O=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[k]},{type:"int32",data:[A]}],G=f;f=e.runWebGPUProgram(P,F,"int32",O),zf(e,G)};for(let k=1;k<c;k*=2){let A=k*2;for(let R=k;R>=1;R/=2)g(A,R,[p,d])}for(let k=d;k>c;k/=2){let A=h(),R=new dk([p,k/2]),P=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[c]}],L=f;f=e.runWebGPUProgram(R,A,"int32",P),zf(e,L);let O=c/2,G=O*2;for(let W=O;W>=1;W/=2)g(G,W,f.shape)}let b=f;f=si({inputs:{x:f},backend:e,attrs:{begin:0,size:[p,s]}}),zf(e,b);let T=JD({inputs:{x:m,indices:f},backend:e,attrs:{axis:1,batchDims:1}});zf(e,m);let x=i.slice(0,-1);x.push(s),b=f,f=Ne({inputs:{x:f},attrs:{shape:x},backend:e}),zf(e,b);let I=T;return T=Ne({inputs:{x:T},attrs:{shape:x},backend:e}),zf(e,I),[T,f]}var QV={kernelName:La,backendName:"webgpu",kernelFunc:Nde};var fk=class{constructor(t){this.variableNames=["Image","Transforms"];this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=ke(this.outputShape),this.dispatch=ye(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${xe("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function Dde(r){let{inputs:t,backend:e,attrs:n}=r,{image:o,transforms:s}=t,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=n,[p,m,c,d]=o.shape,[f,h]=l??[m,c],g=[p,f,h,d],b=new fk(g),T=a==="nearest"?1:2,x;switch(i){case"constant":x=1;break;case"reflect":x=2;break;case"wrap":x=3;break;case"nearest":x=4;break;default:x=1;break}let I=[{type:"int32",data:[T]},{type:"int32",data:[x]},{type:"float32",data:[u]}];return e.runWebGPUProgram(b,[o,s],"float32",I)}var JV={kernelName:_a,backendName:"webgpu",kernelFunc:Dde};function Rde(r){let{inputs:t,backend:e,attrs:n}=r,{value:o}=t,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,u=o.shape[s],l=new Array(i-1),p=0;for(let h=0;h<i;h++)h!==s&&(l[p++]=a.shape[h]);let m=[],c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let f=new Array(u);for(let h=0;h<f.length;h++){c[s]=h;let g=si({inputs:{x:a},backend:e,attrs:{begin:c,size:d}}),b=Ne({inputs:{x:g},backend:e,attrs:{shape:l}});f[h]=b,m.push(g)}return m.forEach(h=>e.disposeData(h.dataId)),f}var e4={kernelName:vs,backendName:"webgpu",kernelFunc:Rde};var Fde=[CW,oK,sK,aK,uK,pK,lK,dK,fK,gK,xK,IK,CK,SW,SK,AK,wK,NK,DK,RK,MK,EK,LK,_K,OK,zK,GK,UK,WK,KK,xW,VK,jK,HK,qK,XK,YK,ZK,QK,JK,eV,tV,kW,kK,rV,nV,oV,sV,aV,iV,uV,mK,pV,lV,cK,mV,cV,dV,$K,fV,hV,gV,bK,TV,xV,IV,CV,kV,SV,vV,yK,AV,wV,NV,DV,IW,RV,FV,PV,MV,EV,LV,_V,$V,BV,hK,jV,XV,zV,GV,WV,KV,VV,HV,qV,OV,BK,YV,UV,QV,JV,iK,e4,bV];for(let r of Fde)Qi(r);var Ze=(s=>(s[s.float32=0]="float32",s[s.int32=1]="int32",s[s.bool=2]="bool",s[s.string=3]="string",s[s.complex64=4]="complex64",s))(Ze||{}),am=(i=>(i[i.linear=0]="linear",i[i.relu=1]="relu",i[i.relu6=2]="relu6",i[i.prelu=3]="prelu",i[i.leakyrelu=4]="leakyrelu",i[i.sigmoid=5]="sigmoid",i[i.elu=6]="elu",i))(am||{});var t4;function Pde(r){t4=r.wasm.cwrap(Ns,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Mde(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=t;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:m}=n,c=e.dataIdMap.get(o.dataId).id,d=e.dataIdMap.get(s.dataId).id,f=0;if(a!=null){let F=e.dataIdMap.get(a.dataId);if(F.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${F.shape.length}.`);f=F.id}let h=i==null?0:e.dataIdMap.get(i.dataId).id,g=am[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);let b=u?o.shape[2]:o.shape[1],T=l?s.shape[1]:s.shape[2],x=wr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)),I=e.makeOutput([...x,b,T],o.dtype),k=e.dataIdMap.get(I.dataId).id,A=new Uint8Array(new Int32Array(o.shape).buffer),R=new Uint8Array(new Int32Array(s.shape).buffer);return t4(c,A,o.shape.length,d,R,s.shape.length,u,l,g,f,h,m||0,k),I}var r4={kernelName:Ns,backendName:"wasm",setupFunc:Pde,kernelFunc:Mde};function pt(r,t){let e;function n(s){e=s.wasm.cwrap(r,null,["number","number","number"])}function o(s){let{backend:a,inputs:{x:i}}=s,u=a.dataIdMap.get(i.dataId).id,l=a.makeOutput(i.shape,t||i.dtype),p=a.dataIdMap.get(l.dataId).id;return y.sizeFromShape(l.shape)===0||e(u,Ze[i.dtype],p),l}return{kernelName:r,backendName:"wasm",setupFunc:n,kernelFunc:o}}var n4=pt(cs);function ft(r,t,e){let n;function o(a){n=a.wasm.cwrap(r,null,["number","array","number","number","array","number","number","number"])}function s(a){let{backend:i,inputs:u}=a,{a:l,b:p}=u,m=i.dataIdMap.get(l.dataId).id,c=i.dataIdMap.get(p.dataId).id,d=e??l.dtype,f=C.assertAndGetBroadcastShape(l.shape,p.shape),h=i.makeOutput(f,d);if(y.sizeFromShape(f)===0)return h;let g=new Uint8Array(new Int32Array(l.shape).buffer),b=new Uint8Array(new Int32Array(p.shape).buffer),T=i.dataIdMap.get(h.dataId).id;return(()=>n(m,g,l.shape.length,c,b,p.shape.length,Ze[l.dtype],T))(),h}return{kernelName:r,backendName:"wasm",setupFunc:o,kernelFunc:s}}var Ede=!0,o4=ft(Nn,Ede);var s4;function Lde(r){s4=r.wasm.cwrap(ao,null,["array","number","number","number"])}function _de(r){let{inputs:t,backend:e}=r,n=e.makeOutput(t[0].shape,t[0].dtype);if(y.sizeFromShape(n.shape)===0)return n;let o=t.map(i=>e.dataIdMap.get(i.dataId).id),s=new Uint8Array(new Int32Array(o).buffer),a=e.dataIdMap.get(n.dataId).id;return s4(s,o.length,Ze[n.dtype],a),n}var a4={kernelName:ao,backendName:"wasm",setupFunc:Lde,kernelFunc:_de};function im(r){let{inputs:{x:t},backend:e}=r,n=e.makeOutput(t.shape,t.dtype),o=e.typedArrayFromHeap(t);return e.typedArrayFromHeap(n).set(o),n}var i4={kernelName:Vn,backendName:"wasm",kernelFunc:im};var u4;function $de(r){u4=r.wasm.cwrap(Rn,null,["number","array","number","number","number","array","number"])}function us(r){let{inputs:t,backend:e,attrs:n}=r,[o,s]=Ode(t.x.shape,n.perm),a=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(a=!1);let i=Bde(t.x.shape,n.perm),u={dataId:t.x.dataId,shape:o,dtype:t.x.dtype};if(a){let f=im({inputs:t,backend:e});return f.shape=i,f}let l=e.makeOutput(i,u.dtype),p=e.dataIdMap.get(u.dataId).id,m=e.dataIdMap.get(l.dataId).id,c=new Uint8Array(new Int32Array(s).buffer),d=new Uint8Array(new Int32Array(u.shape).buffer);return u4(p,d,u.shape.length,Ze[u.dtype],m,c,s.length),l}function Bde(r,t){let e=new Array(r.length);for(let n=0;n<e.length;n++)e[n]=r[t[n]];return e}function Ode(r,t){let e=[],n=[];for(let o=0;o<r.length;++o)r[o]!==1&&e.push(r[o]),r[t[o]]!==1&&n.push(t[o]);for(let o=0;o<n.length;++o){let s=-1;for(let a=0;a<n.length;++a)n[a]>=o&&(s===-1||n[s]>n[a])&&(s=a);n[s]=o}return[e,n]}var p4={kernelName:Rn,backendName:"wasm",kernelFunc:us,setupFunc:$de};function vn(r,t,e){let n=r.shape,o=r.shape.length,s=y.parseAxisParam(t,n),a=s,i=C.getAxesPermutation(a,o),u=null,l=!1;if(i!=null){let p=new Array(o);for(let d=0;d<p.length;d++)p[d]=n[i[d]];a=C.getInnerMostAxes(a.length,o),u=us({inputs:{x:r},attrs:{perm:i},backend:e});let m=e.dataIdMap.get(r.dataId).id;e.dataIdMap.get(u.dataId).id!==m&&(l=!0)}return{transposed:u,originalAxes:s,axes:a,inputWasTransposed:l}}var l4;function zde(r){l4=r.wasm.cwrap(Li,null,["number, number, number"])}function Gde(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,u=t.dataIdMap.get(a.dataId).id,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(a,o,t);if(d){let x=t.dataIdMap.get(p.dataId).id;l=p,u=x}let f=l.shape.length;C.assertAxesAreInnerMostDims("all",m,f);let[h,g]=C.computeOutAndReduceShapes(l.shape,m),b=y.sizeFromShape(g),T=t.makeOutput(h,a.dtype);if(y.sizeFromShape(l.shape)!==0){let x=t.dataIdMap.get(T.dataId).id;l4(u,b,x)}if(d&&t.disposeData(p.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var m4={kernelName:Li,backendName:"wasm",setupFunc:zde,kernelFunc:Gde};var c4;function Ude(r){c4=r.wasm.cwrap(_i,null,["number, number, number"])}function Wde(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,u=t.dataIdMap.get(a.dataId).id,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(a,o,t);if(d){let x=t.dataIdMap.get(p.dataId).id;l=p,u=x}let f=l.shape.length;C.assertAxesAreInnerMostDims("any",m,f);let[h,g]=C.computeOutAndReduceShapes(l.shape,m),b=y.sizeFromShape(g),T=t.makeOutput(h,a.dtype);if(y.sizeFromShape(l.shape)!==0){let x=t.dataIdMap.get(T.dataId).id;c4(u,b,x)}if(d&&t.disposeData(p.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var d4={kernelName:_i,backendName:"wasm",setupFunc:Ude,kernelFunc:Wde};var f4;function Kde(r){f4=r.wasm.cwrap(io,null,["number","number","number","number","number"])}function Vde(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o}=n,{x:s}=e,a=t.dataIdMap.get(s.dataId).id,i=a,u=s,{transposed:l,axes:p,inputWasTransposed:m}=vn(s,o,t);if(m){let b=t.dataIdMap.get(l.dataId).id;b!==a&&(u=l,i=b)}let c=u.shape.slice(0,-1),d=t.makeOutput(c,"int32"),f=t.dataIdMap.get(d.dataId).id,h=y.sizeFromShape(d.shape),g=u.shape[p[0]];return f4(i,Ze[u.dtype],h,g,f),m&&t.disposeData(l.dataId),d}var h4={kernelName:io,backendName:"wasm",kernelFunc:Vde,setupFunc:Kde};var g4;function Hde(r){g4=r.wasm.cwrap(uo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function qde(r){let{inputs:t,attrs:e,backend:n}=r,o=t.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=e,p=C.computePool2DInfo(o.shape,a,i,1,u,l),m=p.filterHeight,c=p.filterWidth,d=p.padInfo.top,f=p.padInfo.right,h=p.padInfo.bottom,g=p.padInfo.left,b=p.strideHeight,T=p.strideWidth,x=p.inChannels;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);if(p.dilationWidth!==1||p.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${p.dilationHeight}, ${p.dilationWidth}].`);let I=n.makeOutput(p.outShape,"float32"),k=n.dataIdMap.get(I.dataId).id;return g4(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,b,T,x,k),I}var b4={kernelName:uo,backendName:"wasm",setupFunc:Hde,kernelFunc:qde};function hr(r){let{inputs:t,attrs:e}=r,{x:n}=t,{shape:o}=e,s=y.sizeFromShape(n.shape),a=y.inferFromImplicitShape(o,s);return y.assert(s===y.sizeFromShape(a),()=>`new shape: ${a}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var y4={kernelName:xs,backendName:"wasm",kernelFunc:hr};var T4;function jde(r){T4=r.wasm.cwrap(po,null,["number","array","number","number","array","number","number","number","number"])}function Xde(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s}=t,{transposeA:a,transposeB:i}=n;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let u=o.shape.length,l=s.shape.length,p=a?o.shape[u-2]:o.shape[u-1],m=i?s.shape[l-1]:s.shape[l-2],c=a?o.shape[u-1]:o.shape[u-2],d=i?s.shape[l-2]:s.shape[l-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=y.sizeFromShape(f),b=y.sizeFromShape(h),x=wr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);y.assert(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let I=a?[g,p,c]:[g,c,p],k=i?[b,d,m]:[b,m,d],A=hr({inputs:{x:o},backend:e,attrs:{shape:I}}),R=hr({inputs:{x:s},backend:e,attrs:{shape:k}}),F=e.dataIdMap.get(A.dataId).id,P=e.dataIdMap.get(R.dataId).id,L=a?A.shape[2]:A.shape[1],O=i?R.shape[1]:R.shape[2],G=Math.max(g,b),W=e.makeOutput([G,L,O],A.dtype),H=e.dataIdMap.get(W.dataId).id,V=new Uint8Array(new Int32Array(A.shape).buffer),q=new Uint8Array(new Int32Array(R.shape).buffer);return T4(F,V,A.shape.length,P,q,R.shape.length,a,i,H),e.disposeData(A.dataId),e.disposeData(R.dataId),W.shape=x,W}var x4={kernelName:po,backendName:"wasm",setupFunc:jde,kernelFunc:Xde};function oa(r){let{inputs:{x:t},attrs:{begin:e,size:n},backend:o}=r,[s,a]=xt.parseSliceParams(t,e,n),i=xt.isSliceContinous(t.shape,s,a),u=o.readSync(t.dataId),l=o.makeOutput(a,t.dtype),p=y.computeStrides(t.shape),m=o.dataIdMap.get(l.dataId);if(i){let f=xt.computeFlatOffset(s,p);return t.dtype==="string"?m.stringBytes=u.slice(f,f+y.sizeFromShape(a)):o.typedArrayFromHeap(l).set(u.subarray(f,f+y.sizeFromShape(a))),l}if(t.dtype==="string"){let f=Ol(u,s,a,t.shape,t.dtype);return m.stringBytes=f,l}let c=o.typedArrayFromHeap(l),d=t.shape.length;if(d===2)Yde(u,p[0],c,s,a);else if(d===3)Zde(u,p[0],p[1],c,s,a);else if(d===4)Qde(u,p[0],p[1],p[2],c,s,a);else{let f=Ol(u,s,a,t.shape,t.dtype);c.set(f)}return l}function Yde(r,t,e,n,o){let s=0,a=n[0],i=n[1],u=a+o[0];for(let l=a;l<u;l++){let p=l*t+i;e.set(r.subarray(p,p+o[1]),s),s+=o[1]}}function Zde(r,t,e,n,o,s){let a=0,i=o[0],u=o[1],l=o[2],p=i+s[0],m=u+s[1];for(let c=i;c<p;c++)for(let d=u;d<m;d++){let f=c*t+d*e+l;n.set(r.subarray(f,f+s[2]),a),a+=s[2]}}function Qde(r,t,e,n,o,s,a){let i=0,u=s[0],l=s[1],p=s[2],m=u+a[0],c=l+a[1],d=p+a[2],f=s[3];for(let h=u;h<m;h++)for(let g=l;g<c;g++)for(let b=p;b<d;b++){let T=h*t+g*e+b*n+f;o.set(r.subarray(T,T+a[3]),i),i+=a[3]}}var I4={kernelName:Cs,backendName:"wasm",kernelFunc:oa};function Jde(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,crops:a}=n,i=s.reduce((b,T)=>b*T),u=C.getReshaped(o.shape,s,i),l=C.getPermuted(u.length,s.length),p=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(p,a,s.length),d=hr({inputs:{x:o},backend:e,attrs:{shape:u}}),f=us({inputs:{x:d},backend:e,attrs:{perm:l}}),h=hr({inputs:{x:f},backend:e,attrs:{shape:p}}),g=oa({inputs:{x:h},backend:e,attrs:{begin:m,size:c}});return e.disposeData(d.dataId),e.disposeData(f.dataId),e.disposeData(d.dataId),g}var C4={kernelName:ds,backendName:"wasm",kernelFunc:Jde};function ai(r){let{inputs:{x:t},attrs:{dtype:e},backend:n}=r,o=n.makeOutput(t.shape,e),s=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(o).set(s),o}var k4={kernelName:Wn,backendName:"wasm",kernelFunc:ai};var S4=pt(lo);var v4;function efe(r){v4=r.wasm.cwrap(Kn,null,["number","number","number","number"])}function tfe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{clipValueMin:s,clipValueMax:a}=n,i=e.dataIdMap.get(o.dataId).id,u=e.makeOutput(o.shape,o.dtype),l=e.dataIdMap.get(u.dataId).id;return v4(i,s,a,l),u}var A4={kernelName:Kn,backendName:"wasm",setupFunc:efe,kernelFunc:tfe};function o0(r){let{inputs:t,backend:e}=r,n=y.parseAxisParam(r.attrs.axis,t[0].shape)[0],o=t.map(d=>d.shape);C.assertParamsConsistent(o,n);let s=C.computeOutShape(t.map(d=>d.shape),n),a=t.filter(d=>y.sizeFromShape(d.shape)>0);if(a.length===1)return im({inputs:{x:a[0]},backend:e});let i=e.makeOutput(s,t[0].dtype);if(y.sizeFromShape(s)===0)return i;if(a[0].dtype==="string"){let d=a.map(x=>{let I=y.sizeFromShape(x.shape.slice(n));return hr({inputs:{x},backend:e,attrs:{shape:[-1,I]}})}),f=d.map(x=>({vals:e.readSync(x.dataId),shape:x.shape}));s=C.computeOutShape(d.map(x=>x.shape),1);let h=d[0].shape[0]===1,g=_l(f,s,t[0].dtype,h),b=C.computeOutShape(a.map(x=>x.shape),n);i.shape=b;let T=e.dataIdMap.get(i.dataId);return T.stringBytes=C.fromStringArrayToUint8(g),d.forEach(x=>e.disposeData(x.dataId)),i}let u=y.sizeFromShape(a[0].shape.slice(0,n)),l=0,p=a.map(d=>{let f=y.sizeFromShape(d.shape.slice(n));return l+=f,f}),m=a.map(d=>e.typedArrayFromHeap(d)),c=e.typedArrayFromHeap(i);for(let d=0;d<u;d++){let f=d*l;for(let h=0;h<m.length;h++){let g=p[h],b=d*g,T=m[h].subarray(b,b+g);c.set(T,f),f+=g}}return i}var w4={kernelName:fs,backendName:"wasm",kernelFunc:o0};var N4;function rfe(r){N4=r.wasm.cwrap(mo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function nfe(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s}=t,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:p,dimRoundingMode:m,dataFormat:c}=e,d=C.convertConv2DDataFormat(c),f=C.computeConv2DInfo(o.shape,s.shape,u,l,p,m,!1,d),h=f.filterHeight,g=f.filterWidth,b=f.padInfo.top,T=f.padInfo.right,x=f.padInfo.bottom,I=f.padInfo.left,k=f.dilationHeight,A=f.dilationWidth,R=f.strideHeight,F=f.strideWidth,P=f.inChannels,L=f.outChannels,O=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let G=n.makeOutput(f.outShape,"float32"),W=n.dataIdMap.get(G.dataId).id;return N4(a,o.shape[0],o.shape[1],o.shape[2],i,h,g,b,T,x,I,O,k,A,R,F,P,L,W),G}var D4={kernelName:mo,backendName:"wasm",setupFunc:rfe,kernelFunc:nfe};var R4;function ofe(r){R4=r.wasm.cwrap(co,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function sfe(r){let{backend:t,inputs:e,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,inputShape:p}=n,m=1,c=C.convertConv2DDataFormat(u),d=C.computeConv2DInfo(p,s.shape,a,m,i,l,!1,c),{batchSize:f,filterHeight:h,filterWidth:g,inChannels:b,inHeight:T,inWidth:x,outChannels:I,outHeight:k,outWidth:A,strideHeight:R,strideWidth:F}=d,P=h-1-d.padInfo.top,L=g-1-d.padInfo.left,O=d.dataFormat==="channelsLast",G=y.computeStrides(d.inShape),W=y.computeStrides(o.shape),[H,V,q]=y.computeStrides(s.shape),Z=G[0],j=O?G[1]:G[2],Y=O?G[2]:1,se=O?1:G[1],ae=W[0],pe=O?W[1]:W[2],oe=O?W[2]:1,ge=O?1:W[1],fe=t.makeOutput(d.inShape,"float32"),ue=t.dataIdMap.get(fe.dataId).id,ve=t.dataIdMap.get(o.dataId).id,De=t.dataIdMap.get(s.dataId).id;return R4(ve,De,f,h,g,T,x,b,k,A,I,R,F,P,L,H,V,q,Z,j,Y,se,ae,pe,oe,ge,ue),fe}var F4={kernelName:co,backendName:"wasm",setupFunc:ofe,kernelFunc:sfe};var P4=pt(fo);var M4=pt(ho);var E4=(e=>(e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest",e))(E4||{}),L4;function afe(r){L4=r.wasm.cwrap(ca,null,["number","number","number","number","array","number","number","number","number","number"])}function ife(r){let{backend:t,inputs:e,attrs:n}=r,{method:o,extrapolationValue:s,cropSize:a}=n,{image:i,boxes:u,boxInd:l}=e,p=u.shape[0],[m,c]=a,d=[p,m,c,i.shape[3]],f=t.dataIdMap.get(i.dataId),h;i.dtype!=="float32"&&(h=ai({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(h.dataId));let g=f.id,b=t.dataIdMap.get(u.dataId).id,T=t.dataIdMap.get(l.dataId).id,x=t.makeOutput(d,"float32"),I=t.dataIdMap.get(x.dataId).id,k=new Uint8Array(new Int32Array(i.shape).buffer);return L4(g,b,T,p,k,m,c,E4[o],s,I),h!=null&&t.disposeData(h.dataId),x}var _4={kernelName:ca,backendName:"wasm",setupFunc:afe,kernelFunc:ife};var $4;function ufe(r){$4=r.wasm.cwrap(ma,null,["number","number","number","number","number","number"])}function pfe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n,u=o.shape.length;y.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumprod does not support ${o.dtype} tensors in the WASM backend`);let l=C.getAxesPermutation([s],u),p=o;l!==null&&(p=us({inputs:{x:o},attrs:{perm:l},backend:e}));let m=C.getInnerMostAxes(1,u)[0];C.assertAxesAreInnerMostDims("cumprod",[m],u);let c=e.makeOutput(p.shape,p.dtype),d=p.shape[m],f=e.dataIdMap.get(p.dataId).id,h=e.dataIdMap.get(c.dataId).id;$4(f,a?1:0,i?1:0,d,h,Ze[o.dtype]);let g=c;if(l!==null){let b=C.getUndoAxesPermutation(l);g=us({inputs:{x:c},attrs:{perm:b},backend:e}),e.disposeData(p.dataId),e.disposeData(c.dataId)}return g}var B4={kernelName:ma,backendName:"wasm",setupFunc:ufe,kernelFunc:pfe};var O4;function lfe(r){O4=r.wasm.cwrap(go,null,["number","number","number","number","number","number"])}function mfe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n,u=o.shape.length;y.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumsum does not support ${o.dtype} tensors in the WASM backend`);let l=C.getAxesPermutation([s],u),p=o;l!==null&&(p=us({inputs:{x:o},attrs:{perm:l},backend:e}));let m=C.getInnerMostAxes(1,u)[0];C.assertAxesAreInnerMostDims("cumsum",[m],u);let c=e.makeOutput(p.shape,p.dtype),d=p.shape[m],f=e.dataIdMap.get(p.dataId).id,h=e.dataIdMap.get(c.dataId).id;O4(f,a?1:0,i?1:0,d,h,Ze[o.dtype]);let g=c;if(l!==null){let b=C.getUndoAxesPermutation(l);g=us({inputs:{x:c},attrs:{perm:b},backend:e}),e.disposeData(p.dataId),e.disposeData(c.dataId)}return g}var z4={kernelName:go,backendName:"wasm",setupFunc:lfe,kernelFunc:mfe};var G4;function cfe(r){G4=r.wasm.cwrap(da,null,["number","number","number","array","number","array","array","number","number"])}function dfe(r){let{backend:t,inputs:e,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n,i=o.shape[0],u=a==="NHWC"?o.shape[1]:o.shape[2],l=a==="NHWC"?o.shape[2]:o.shape[3],p=a==="NHWC"?o.shape[3]:o.shape[1],m=u*s,c=l*s,d=p/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=t.makeOutput(f,"float32"),b=t.dataIdMap.get(o.dataId).id,T=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),x=new Uint8Array(new Int32Array(f).buffer),I=new Uint8Array(new Int32Array(y.computeStrides(f)).buffer),k=t.dataIdMap.get(h.dataId).id;return G4(b,s,a==="NHWC"?1:0,T,o.shape.length-1,x,I,f.length,k),h}var U4={kernelName:da,backendName:"wasm",setupFunc:cfe,kernelFunc:dfe};var W4;function ffe(r){W4=r.wasm.cwrap(bo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function hfe(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s}=t,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:p,dimRoundingMode:m}=e,c=l??[1,1],d=C.computeConv2DInfo(o.shape,s.shape,u,c,p,m,!0),f=d.filterHeight,h=d.filterWidth,g=d.padInfo.top,b=d.padInfo.right,T=d.padInfo.bottom,x=d.padInfo.left,I=d.dilationHeight,k=d.dilationWidth,A=d.strideHeight,R=d.strideWidth,F=d.inChannels,P=d.outChannels,L=d.padInfo.type==="SAME"?1:0;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let O=n.makeOutput(d.outShape,"float32"),G=n.dataIdMap.get(O.dataId).id;return W4(a,o.shape[0],o.shape[1],o.shape[2],i,f,h,g,b,T,x,L,I,k,A,R,F,P,G),O}var K4={kernelName:bo,backendName:"wasm",setupFunc:ffe,kernelFunc:hfe};var V4=pt(To);var gfe=!1,H4=ft(fa,gfe,"bool");var q4=pt(xo,"float32");function hk(r){let{inputs:t,attrs:e,backend:n}=r,{input:o}=t,{dim:s}=e,a=o.shape.length,i=o.shape.slice(),u=s;return s<0&&(y.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),hr({inputs:{x:o},backend:n,attrs:{shape:i}})}var j4={kernelName:hs,backendName:"wasm",kernelFunc:hk};function s0(r){let{attrs:{shape:t,value:e,dtype:n},backend:o}=r,s=o.makeOutput(t,n);return o.typedArrayFromHeap(s).fill(e),s}var X4={kernelName:ci,backendName:"wasm",kernelFunc:s0};var Y4;function bfe(r){Y4=r.wasm.cwrap(ga,null,["number","number","number","number","number","number"])}function yfe(r){let{inputs:t,backend:e}=r,{image:n}=t,o=e.makeOutput(n.shape,n.dtype),s=e.dataIdMap.get(n.dataId).id,a=e.dataIdMap.get(o.dataId).id,[i,u,l,p]=n.shape;return Y4(s,i,u,l,p,a),o}var Z4={kernelName:ga,backendName:"wasm",kernelFunc:yfe,setupFunc:bfe};var Q4=pt(Io);var Tfe=!1,J4=ft(Co,Tfe);var eH;function xfe(r){eH=r.wasm.cwrap(ko,null,["number","number","number","number","number","number","number"])}function Ife(r){let{backend:t,inputs:e,attrs:n}=r,{varianceEpsilon:o}=n,{x:s,mean:a,variance:i,offset:u,scale:l}=e,p=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(i.dataId).id,d=u!=null?t.dataIdMap.get(u.dataId).id:0,f=l!=null?t.dataIdMap.get(l.dataId).id:0,h=t.makeOutput(s.shape,s.dtype);if(y.sizeFromShape(s.shape)===0)return h;let g=t.dataIdMap.get(h.dataId).id;return eH(p,m,c,d,f,o,g),h}var tH={kernelName:ko,backendName:"wasm",setupFunc:xfe,kernelFunc:Ife};var rH;function Cfe(r){rH=r.wasm.cwrap(Ds,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function kfe(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:l,dilations:p,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=e,h=C.computeConv2DInfo(o.shape,s.shape,u,p,l,c),g=am[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let b=n.dataIdMap.get(o.dataId).id,T=n.dataIdMap.get(s.dataId).id,x=h.outChannels,I=0;if(a!=null){let oe=n.dataIdMap.get(a.dataId);if(oe.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${oe.shape.length}.`);if(oe.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${oe.shape}) does not match the number of output channels (${x})`);I=oe.id}let k=h.filterHeight,A=h.filterWidth,R=h.padInfo.top,F=h.padInfo.right,P=h.padInfo.bottom,L=h.padInfo.left,O=h.dilationHeight,G=h.dilationWidth,W=h.strideHeight,H=h.strideWidth,V=h.inChannels,q=h.padInfo.type==="SAME"?1:0,Z=h.batchSize,j=h.inHeight,Y=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let se=n.makeOutput(h.outShape,"float32"),ae=n.dataIdMap.get(se.dataId).id,pe=i==null?0:n.dataIdMap.get(i.dataId).id;return rH(b,Z,j,Y,T,k,A,I,R,F,P,L,q,O,G,W,H,V,x,g,pe,f||0,ae),se}var nH={kernelName:Ds,backendName:"wasm",setupFunc:Cfe,kernelFunc:kfe};var oH;function Sfe(r){oH=r.wasm.cwrap(Rs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function vfe(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:l,dilations:p,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=e,h=C.computeConv2DInfo(o.shape,s.shape,u,p,l,c,!0),g=am[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let b=n.dataIdMap.get(o.dataId).id,T=n.dataIdMap.get(s.dataId).id,x=h.outChannels,I=0;if(a!=null){let oe=n.dataIdMap.get(a.dataId);if(oe.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${oe.shape.length}.`);if(oe.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${oe.shape}) does not match the number of output channels (${x})`);I=oe.id}let k=h.filterHeight,A=h.filterWidth,R=h.padInfo.top,F=h.padInfo.right,P=h.padInfo.bottom,L=h.padInfo.left,O=h.dilationHeight,G=h.dilationWidth,W=h.strideHeight,H=h.strideWidth,V=h.inChannels,q=h.padInfo.type==="SAME"?1:0,Z=h.batchSize,j=h.inHeight,Y=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let se=n.makeOutput(h.outShape,"float32"),ae=n.dataIdMap.get(se.dataId).id,pe=i==null?0:n.dataIdMap.get(i.dataId).id;return oH(b,Z,j,Y,T,k,A,I,R,F,P,L,q,O,G,W,H,V,x,g,pe,f||0,ae),se}var sH={kernelName:Rs,backendName:"wasm",setupFunc:Sfe,kernelFunc:vfe};var aH;function Afe(r){aH=r.wasm.cwrap(ba,null,["number","number","number","number","number","number","array","number"])}function wfe(r){let{backend:t,inputs:e}=r,{params:n,indices:o}=e,[s,a,i,u]=Pb.prepareAndValidate(n,o),l=t.makeOutput(s,n.dtype);if(a===0)return l;let p=o.shape,m=p[p.length-1],d=t.dataIdMap.get(n.dataId).id,h=t.dataIdMap.get(o.dataId).id,g=new Uint8Array(new Int32Array(u).buffer),b=t.dataIdMap.get(l.dataId).id;return aH(d,Ze[n.dtype],h,a,m,i,g,b),l}var iH={kernelName:ba,backendName:"wasm",setupFunc:Afe,kernelFunc:wfe};var uH;function Nfe(r){uH=r.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Dfe(r){let{backend:t,inputs:e,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n,u=y.parseAxisParam(a,o.shape)[0],l=t.readSync(s.dataId),p=o.shape[u];for(let P=0;P<l.length;++P){let L=l[P];y.assert(L<=p-1&&L>=0,()=>`GatherV2: the index value ${L} is not in [0, ${p-1}]`)}let m=C.segment_util.collectGatherOpShapeInfo(o,s,u,i),c=hr({inputs:{x:o},attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]},backend:t}),d=y.sizeFromShape(s.shape),f=hr({inputs:{x:s},attrs:{shape:[m.batchSize,d/m.batchSize]},backend:t}),h=[m.batchSize,m.outerSize,d/m.batchSize,m.sliceSize],g=t.makeOutput(h,o.dtype);if(y.sizeFromShape(o.shape)===0)return g;let b=c.shape.length-1,x=t.dataIdMap.get(c.dataId).id,k=t.dataIdMap.get(f.dataId).id,A=t.dataIdMap.get(g.dataId).id,R=new Uint8Array(new Int32Array(y.computeStrides(c.shape)).buffer),F=new Uint8Array(new Int32Array(y.computeStrides(h)).buffer);return uH(x,Ze[o.dtype],R,b,k,m.batchSize,F,A),t.disposeData(c.dataId),t.disposeData(f.dataId),g.shape=m.outputShape,g}var pH={kernelName:gs,backendName:"wasm",setupFunc:Nfe,kernelFunc:Dfe};var Rfe=!1,lH=ft(ya,Rfe,"bool");var Ffe=!1,mH=ft(So,Ffe,"bool");var cH;function Pfe(r){cH=r.wasm.cwrap(vo,null,["number","number","number","number"])}function Mfe(r){let{inputs:{x:t},attrs:{alpha:e},backend:n}=r,o=n.dataIdMap.get(t.dataId).id,s=n.makeOutput(t.shape,"float32");if(y.sizeFromShape(t.shape)!==0){let a=n.dataIdMap.get(s.dataId).id;cH(o,Ze[t.dtype],e,a)}return s}var dH={kernelName:vo,backendName:"wasm",setupFunc:Pfe,kernelFunc:Mfe};var Efe=!1,fH=ft(xa,Efe,"bool");var Lfe=!1,hH=ft(Ia,Lfe,"bool");var gH=pt(Ao);var _fe=!1,bH=ft(Ca,_fe,"bool");var yH=pt(ka);var $fe=!1,TH=ft(Vi,$fe,"bool");var Bfe=!1,xH=ft(e1,Bfe,"bool");var IH;function Ofe(r){IH=r.wasm.cwrap(wo,null,["number","number","number","number"])}function zfe(r){let{backend:t,inputs:e,attrs:n}=r,{reductionIndices:o,keepDims:s}=n,{x:a}=e,u=t.dataIdMap.get(a.dataId).id,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(a,o,t);if(d){let x=t.dataIdMap.get(p.dataId).id;l=p,u=x}let f=l.shape.length;C.assertAxesAreInnerMostDims("max",m,f);let[h,g]=C.computeOutAndReduceShapes(l.shape,m),b=y.sizeFromShape(g),T=t.makeOutput(h,a.dtype);if(y.sizeFromShape(l.shape)!==0){let x=t.dataIdMap.get(T.dataId).id;IH(u,Ze[a.dtype],b,x)}if(d&&t.disposeData(p.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var CH={kernelName:wo,backendName:"wasm",setupFunc:Ofe,kernelFunc:zfe};var Gfe=!1,kH=ft(No,Gfe);var SH;function Ufe(r){SH=r.wasm.cwrap(Do,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Wfe(r){let{inputs:t,attrs:e,backend:n}=r,o=t.x,s=n.dataIdMap.get(o.dataId).id;y.assert(o.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${o.dtype}.`);let{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=e,p=C.computePool2DInfo(o.shape,a,i,1,u,l),m=p.filterHeight,c=p.filterWidth,d=p.padInfo.top,f=p.padInfo.right,h=p.padInfo.bottom,g=p.padInfo.left,b=p.dilationHeight,T=p.dilationWidth,x=p.strideHeight,I=p.strideWidth,k=p.inChannels,A=p.outChannels;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);let R=n.makeOutput(p.outShape,"float32"),F=n.dataIdMap.get(R.dataId).id;return SH(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,b,T,x,I,k,A,F),R}var vH={kernelName:Do,backendName:"wasm",setupFunc:Ufe,kernelFunc:Wfe};var AH;function Kfe(r){AH=r.wasm.cwrap(Ro,null,["number, number, number"])}function Vfe(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,i=t.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(a,o,t),f=m;if(d){let I=t.dataIdMap.get(p.dataId).id;I!==i&&(l=p,u=I,f=C.getInnerMostAxes(f.length,l.shape.length))}C.assertAxesAreInnerMostDims("mean",f,l.shape.length);let[h,g]=C.computeOutAndReduceShapes(l.shape,f),b=y.sizeFromShape(g),T=l;l.dtype!=="float32"&&(T=ai({backend:t,inputs:{x:l},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(T.dataId).id);let x=t.makeOutput(h,"float32");if(y.sizeFromShape(l.shape)!==0){let I=t.dataIdMap.get(x.dataId).id;AH(u,b,I)}if(d&&t.disposeData(p.dataId),s){let I=C.expandShapeToKeepDim(x.shape,c);x.shape=I}return l.dtype!=="float32"&&t.disposeData(T.dataId),x}var wH={kernelName:Ro,backendName:"wasm",setupFunc:Kfe,kernelFunc:Vfe};var NH;function Hfe(r){NH=r.wasm.cwrap(Fo,null,["number","number","number","number"])}function qfe(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,i=t.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(a,o,t);if(d){let x=t.dataIdMap.get(p.dataId).id;x!==i&&(l=p,u=x)}let f=l.shape.length;C.assertAxesAreInnerMostDims("min",m,f);let[h,g]=C.computeOutAndReduceShapes(l.shape,m),b=y.sizeFromShape(g),T=t.makeOutput(h,l.dtype);if(y.sizeFromShape(l.shape)!==0){let x=t.dataIdMap.get(T.dataId).id;NH(u,Ze[a.dtype],b,x)}if(d&&t.disposeData(p.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var DH={kernelName:Fo,backendName:"wasm",setupFunc:Hfe,kernelFunc:qfe};var jfe=!1,RH=ft(Po,jfe);var FH=(e=>(e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric",e))(FH||{}),PH;function Xfe(r){PH=r.wasm.cwrap(Mo,null,["number","array","number","number","array","array","number","number"])}function Yfe(r){let{inputs:{x:t},backend:e,attrs:{paddings:n,mode:o}}=r,s=n.map((f,h)=>f[0]+t.shape[h]+f[1]),a=e.dataIdMap.get(t.dataId).id,i=e.makeOutput(s,t.dtype),u=e.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),p=n.map(f=>f[0]),m=n.map(f=>f[1]),c=new Uint8Array(new Int32Array(p).buffer),d=new Uint8Array(new Int32Array(m).buffer);return PH(a,l,t.shape.length,Ze[t.dtype],c,d,FH[o],u),i}var MH={kernelName:Mo,backendName:"wasm",kernelFunc:Yfe,setupFunc:Xfe};var Zfe=!0,EH=ft(Eo,Zfe);var LH=pt(bs);function Gf(r,t){let e=new Int32Array(r.wasm.HEAPU8.buffer,t,4),n=e[0],o=e[1],s=e[2],a=e[3];return r.wasm._free(t),{pSelectedIndices:n,selectedSize:o,pSelectedScores:s,pValidOutputs:a}}var _H;function Qfe(r){_H=r.wasm.cwrap(va,"number",["number","number","number","number","number"])}function Jfe(r){let{backend:t,inputs:e,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a}=n,{boxes:i,scores:u}=e,l=t.dataIdMap.get(i.dataId).id,p=t.dataIdMap.get(u.dataId).id,m=_H(l,p,s,o,a),{pSelectedIndices:c,selectedSize:d,pSelectedScores:f,pValidOutputs:h}=Gf(t,m);return t.wasm._free(f),t.wasm._free(h),t.makeOutput([d],"int32",c)}var $H={kernelName:va,backendName:"wasm",setupFunc:Qfe,kernelFunc:Jfe};var BH;function ehe(r){BH=r.wasm.cwrap(qi,"number",["number","number","number","number","number","bool"])}function the(r){let{backend:t,inputs:e,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,padToMaxOutputSize:i}=n,{boxes:u,scores:l}=e,p=t.dataIdMap.get(u.dataId).id,m=t.dataIdMap.get(l.dataId).id,c=BH(p,m,s,o,a,i),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=Gf(t,c);t.wasm._free(h);let b=t.makeOutput([f],"int32",d),T=t.makeOutput([],"int32",g);return[b,T]}var OH={kernelName:qi,backendName:"wasm",setupFunc:ehe,kernelFunc:the};var zH;function rhe(r){zH=r.wasm.cwrap(Aa,"number",["number","number","number","number","number","number"])}function nhe(r){let{backend:t,inputs:e,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,softNmsSigma:i}=n,{boxes:u,scores:l}=e,p=t.dataIdMap.get(u.dataId).id,m=t.dataIdMap.get(l.dataId).id,c=zH(p,m,s,o,a,i),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=Gf(t,c);t.wasm._free(g);let b=t.makeOutput([f],"int32",d),T=t.makeOutput([f],"float32",h);return[b,T]}var GH={kernelName:Aa,backendName:"wasm",setupFunc:rhe,kernelFunc:nhe};var ohe=!1,UH=ft(Sa,ohe,"bool");var WH;function she(r){WH=r.wasm.cwrap(wa,null,["number","number","number","number","number"])}function ahe(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o}=t,{dtype:s,depth:a,onValue:i,offValue:u}=n,l=e.makeOutput([...o.shape,a],s),p=e.dataIdMap.get(l.dataId).id,c=e.dataIdMap.get(o.dataId).id;return WH(c,a,i,u,p),l}var KH={kernelName:wa,backendName:"wasm",setupFunc:she,kernelFunc:ahe};function ihe(r){let{inputs:{x:t},backend:e}=r,n=e.makeOutput(t.shape,t.dtype);return e.typedArrayFromHeap(n).fill(1),n}var VH={kernelName:ys,backendName:"wasm",kernelFunc:ihe};function uhe(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n;if(t.length===1)return hk({inputs:{input:t[0]},backend:e,attrs:{dim:o}});let s=t[0].shape,a=t[0].dtype;t.forEach(p=>{y.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=t.map(p=>{let m=hk({inputs:{input:p},backend:e,attrs:{dim:o}});return i.push(m),m}),l=o0({inputs:u,backend:e,attrs:{axis:o}});return i.forEach(p=>e.disposeData(p.dataId)),l}var HH={kernelName:Ts,backendName:"wasm",kernelFunc:uhe};var qH;function phe(r){qH=r.wasm.cwrap(Lo,null,["number","array","number","number","array","array","number","number"])}function lhe(r){let{inputs:{x:t},backend:e,attrs:{paddings:n,constantValue:o}}=r,s=n.map((h,g)=>h[0]+t.shape[g]+h[1]);if(y.sizeFromShape(t.shape)===0)return s0({backend:e,attrs:{shape:s,value:o,dtype:t.dtype}});let a=e.dataIdMap.get(t.dataId).id,i=e.makeOutput(s,t.dtype),l=e.dataIdMap.get(i.dataId).id,p=new Uint8Array(new Int32Array(t.shape).buffer),m=n.map(h=>h[0]),c=n.map(h=>h[1]),d=new Uint8Array(new Int32Array(m).buffer),f=new Uint8Array(new Int32Array(c).buffer);return qH(a,p,t.shape.length,Ze[t.dtype],d,f,o,l),i}var gk={kernelName:Lo,backendName:"wasm",kernelFunc:lhe,setupFunc:phe};var mhe=!1,jH=ft(_o,mhe);var XH;function che(r){XH=r.wasm.cwrap($o,null,["number","number","number"])}function dhe(r){let{inputs:t,backend:e}=r,{x:n,alpha:o}=t,s=e.dataIdMap.get(n.dataId).id,a=e.dataIdMap.get(o.dataId).id,i=s,u=n,l=u;u.dtype!=="float32"&&(l=ai({backend:e,inputs:{x:n},attrs:{dtype:"float32"}}),i=e.dataIdMap.get(l.dataId).id);let p=e.makeOutput(n.shape,"float32"),m=e.dataIdMap.get(p.dataId).id;return XH(i,a,m),u.dtype!=="float32"&&e.disposeData(l.dataId),p}var YH={kernelName:$o,backendName:"wasm",setupFunc:che,kernelFunc:dhe};var ZH;function fhe(r){ZH=r.wasm.cwrap(Bo,null,["number","number","number","number"])}function hhe(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,i=t.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(a,o,t),f=m;if(d){let x=t.dataIdMap.get(p.dataId).id;x!==i&&(l=p,u=x,f=C.getInnerMostAxes(f.length,l.shape.length))}C.assertAxesAreInnerMostDims("prod",f,l.shape.length);let[h,g]=C.computeOutAndReduceShapes(l.shape,f),b=y.sizeFromShape(g),T=t.makeOutput(h,l.dtype);if(y.sizeFromShape(l.shape)!==0){let x=t.dataIdMap.get(T.dataId).id;ZH(u,b,Ze[T.dtype],x)}if(d&&t.disposeData(p.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var QH={kernelName:Bo,backendName:"wasm",setupFunc:fhe,kernelFunc:hhe};var ghe=r=>{let{backend:t,attrs:e}=r,{start:n,stop:o,step:s,dtype:a}=e,i=Bl(n,o,s,a),u=t.makeOutput([i.length],a);return t.typedArrayFromHeap(u).set(i),u},JH={kernelName:di,backendName:"wasm",kernelFunc:ghe};var bhe=!0,eq=ft(yo,bhe);var tq=pt(Oo);var rq=pt(Uo);var nq;function yhe(r){nq=r.wasm.cwrap(Go,null,["number","number","number","number","number","number","number","number","number","number"])}function The(r){let{backend:t,inputs:e,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,[p,m,c,d]=o.shape,f=[p,u,l,d],h=t.dataIdMap.get(o.dataId),g;h.dtype!=="float32"&&(g=ai({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),h=t.dataIdMap.get(g.dataId));let b=h.id,T=t.makeOutput(f,"float32");if(y.sizeFromShape(o.shape)===0)return T;let x=t.dataIdMap.get(T.dataId).id;return nq(b,p,m,c,d,u,l,s?1:0,a?1:0,x),g!=null&&t.disposeData(g.dataId),T}var oq={kernelName:Go,backendName:"wasm",setupFunc:yhe,kernelFunc:The};var sq;function xhe(r){sq=r.wasm.cwrap(zo,null,["number","number","number","number","number","number","number","number","number","number"])}function Ihe(r){let{backend:t,inputs:e,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,l]=i,[p,m,c,d]=o.shape,f=[p,u,l,d],h=t.makeOutput(f,"float32");if(y.sizeFromShape(o.shape)===0)return h;let g=t.dataIdMap.get(o.dataId),b;g.dtype!=="float32"&&(b=ai({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(b.dataId));let T=g.id,x=t.dataIdMap.get(h.dataId).id;return sq(T,p,m,c,d,u,l,s?1:0,a?1:0,x),b!=null&&t.disposeData(b.dataId),h}var aq={kernelName:zo,backendName:"wasm",setupFunc:xhe,kernelFunc:Ihe};var iq;function Che(r){iq=r.wasm.cwrap(Da,null,["number","array","number","array","number","number"])}function khe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dims:s}=n,a=y.parseAxisParam(s,o.shape);if(o.shape.length===0)return im({inputs:{x:o},backend:e});let i=e.makeOutput(o.shape,o.dtype),u=e.dataIdMap.get(o.dataId).id,l=e.dataIdMap.get(i.dataId).id,p=new Uint8Array(new Int32Array(a).buffer),m=new Uint8Array(new Int32Array(o.shape).buffer);iq(u,p,a.length,m,o.shape.length,l);let c=hr({inputs:{x:i},attrs:{shape:o.shape},backend:e});return e.disposeData(i.dataId),c}var uq={kernelName:Da,backendName:"wasm",kernelFunc:khe,setupFunc:Che};var pq;function She(r){pq=r.wasm.cwrap($a,null,["number","number","number","number","number","number","number","number","array","number","number"])}function vhe(r){let{inputs:t,backend:e,attrs:n}=r,{image:o}=t,{radians:s,fillValue:a,center:i}=n,u=e.makeOutput(o.shape,o.dtype),l=e.dataIdMap.get(o.dataId).id,p=e.dataIdMap.get(u.dataId).id,[m,c,d,f]=o.shape,[h,g]=C.getImageCenter(i,c,d),b=a===0,T=255,x=typeof a=="number"?[a,a,a,b?0:T]:[...a,T],I=new Uint8Array(new Int32Array(x).buffer);return pq(l,m,c,d,f,s,h,g,I,x.length,p),u}var lq={kernelName:$a,backendName:"wasm",kernelFunc:vhe,setupFunc:She};var mq=pt(Ra);var cq=pt(Wo);var dq;function Ahe(r){dq=r.wasm.cwrap(Fa,null,["number","number","number","number","number","number","array","number","number"])}function whe(r){let{backend:t,inputs:e,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,i=t.makeOutput(a,s.dtype);if(y.sizeFromShape(a)===0)return i;let{sliceRank:u,numUpdates:l,sliceSize:p,strides:m,outputSize:c}=dh.calculateShapes(s,o,a),f=t.dataIdMap.get(o.dataId).id,g=t.dataIdMap.get(s.dataId).id,b=new Uint8Array(new Int32Array(m).buffer),T=t.dataIdMap.get(i.dataId).id;return dq(f,g,Ze[s.dtype],u,l,p,b,c,T),i}var fq={kernelName:Fa,backendName:"wasm",setupFunc:Ahe,kernelFunc:whe};var hq;function Nhe(r){hq=r.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Dhe(r){let{inputs:t,backend:e}=r,{condition:n,t:o,e:s}=t,a=e.dataIdMap.get(n.dataId).id,i=e.dataIdMap.get(o.dataId).id,u=e.dataIdMap.get(s.dataId).id,l=e.makeOutput(o.shape,o.dtype),p=e.dataIdMap.get(l.dataId).id,m=n.shape.length,c=o.shape.length,d=m===0||m>1||c===1?1:y.sizeFromShape(o.shape.slice(1));return hq(a,i,u,d,p),l}var gq={kernelName:Is,backendName:"wasm",kernelFunc:Dhe,setupFunc:Nhe};var bq;function Rhe(r){bq=r.wasm.cwrap(Vo,null,["number","number"])}function Fhe(r){let{backend:t,inputs:{x:e}}=r,n=t.dataIdMap.get(e.dataId).id,o=t.makeOutput(e.shape,e.dtype),s=t.dataIdMap.get(o.dataId).id;return y.sizeFromShape(o.shape)===0||bq(n,s),o}var yq={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Rhe,kernelFunc:Fhe};var Tq=pt(Ko);var xq;function Phe(r){xq=r.wasm.cwrap(jo,null,["number","number","number","number"])}function Mhe(r){let{backend:t,inputs:{logits:e},attrs:{dim:n}}=r,o=t.dataIdMap.get(e.dataId).id,s=t.makeOutput(e.shape,e.dtype),a=t.dataIdMap.get(s.dataId).id,i=e.shape[n],u=y.sizeFromShape(e.shape)/i;return y.sizeFromShape(s.shape)===0||xq(o,a,i,u),s}var Iq={kernelName:jo,backendName:"wasm",setupFunc:Phe,kernelFunc:Mhe};function Ehe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,paddings:a}=n,i=y.sizeFromShape(s),u=[[0,0]];u.push(...a);for(let A=1+s.length;A<o.shape.length;++A)u.push([0,0]);let l=gk.kernelFunc({inputs:{x:o},backend:e,attrs:{paddings:u,constantValue:0}}),p=C.getReshaped(l.shape,s,i,!1),m=C.getPermuted(p.length,s.length,!1),c=C.getReshapedPermuted(l.shape,s,i,!1),h=hr({inputs:{x:l},backend:e,attrs:{shape:p}}),T=us({inputs:{x:h},backend:e,attrs:{perm:m}}),k=hr({inputs:{x:T},backend:e,attrs:{shape:c}});return e.disposeData(l.dataId),e.disposeData(h.dataId),e.disposeData(T.dataId),k}var Cq={kernelName:ks,backendName:"wasm",kernelFunc:Ehe};var kq;function Lhe(r){kq=r.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function _he(r){let{backend:t,inputs:e}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=e,i=n.shape[0],u=n.shape[1],l=t.readSync(s.dataId)[0],p=[i+l,u],m=t.dataIdMap.get(n.dataId).id,c=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(a.dataId).id,f=t.makeOutput(p,n.dtype),h=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(p.slice(0,1),o.dtype),b=t.dataIdMap.get(g.dataId).id,T=t.makeOutput([l],"bool"),x=t.dataIdMap.get(T.dataId).id,I=t.makeOutput([i],n.dtype),k=t.dataIdMap.get(I.dataId).id,A=t.makeOutput([4],"int32"),R=t.dataIdMap.get(A.dataId).id,F=kq(m,c,Ze[o.dtype],i,l,u,d,h,b,x,k,R),P=t.readSync(A.dataId),L;switch(P[0]){case 1:{L=C.getSparseFillEmptyRowsIndicesDenseShapeMismatch(P[1]);break}case 2:{L=C.getSparseFillEmptyRowsNegativeIndexErrorMessage(P[1],P[2]);break}case 3:L=C.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(P[1],P[2],P[3]);break;default:L=""}if(t.disposeData(A.dataId),L)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(T.dataId),t.disposeData(I.dataId),new Error(L);let O=f,G=g;return F!==p[0]&&(O=oa({inputs:{x:f},attrs:{begin:0,size:[F,u]},backend:t}),G=oa({inputs:{x:g},attrs:{begin:0,size:F},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[O,G,T,I]}var Sq={kernelName:Wu,backendName:"wasm",setupFunc:Lhe,kernelFunc:_he};var vq;function $he(r){vq=r.wasm.cwrap(Zi,null,["number","number","number","number","number","number","number"])}function Bhe(r){let{backend:t,inputs:e}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(s.dataId).id,l=n.shape[0],p=y.sizeFromShape(s.shape),m=t.makeOutput([l,p],n.dtype),c=t.dataIdMap.get(m.dataId).id,d=t.makeOutput([p],s.dtype),f=t.dataIdMap.get(d.dataId).id,h=t.makeOutput([3],"int32"),g=t.dataIdMap.get(h.dataId).id;vq(a,i,u,l,c,f,g);let b=t.readSync(h.dataId),T;switch(b[0]){case 0:{T=C.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(b[1],b[2]);break}case 1:{T=C.getSparseReshapeNegativeOutputDimErrorMessage(b[1],b[2]);break}case 2:T=C.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let x=Array.from(t.readSync(o.dataId)),I=Array.from(t.readSync(d.dataId));T=C.getSparseReshapeInputOutputMultipleErrorMessage(x,I);break}case 4:{let x=Array.from(t.readSync(o.dataId)),I=Array.from(t.readSync(d.dataId));T=C.getSparseReshapeInputOutputMismatchErrorMessage(x,I);break}default:T=""}if(t.disposeData(h.dataId),T)throw t.disposeData(m.dataId),t.disposeData(d.dataId),new Error(T);return[m,d]}var Aq={kernelName:Zi,backendName:"wasm",setupFunc:$he,kernelFunc:Bhe};var wq;function bk(r){wq=r.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function yk(r,t){let{backend:e,inputs:n}=r,{data:o,indices:s,segmentIds:a}=n,i=s.shape[0],u=e.readSync(a.dataId,i-1,i)[0],p=i>0?u+1:0;if(p<0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=o.shape.slice();m[0]=p;let c=e.dataIdMap.get(o.dataId).id,d=e.dataIdMap.get(s.dataId).id,f=e.dataIdMap.get(a.dataId).id,h=e.makeOutput(m,o.dtype),g=e.dataIdMap.get(h.dataId).id,b=e.makeOutput([4],"int32"),T=e.dataIdMap.get(b.dataId).id;wq(c,Ze[o.dtype],o.shape[0],d,f,g,T,t,0);let x=e.readSync(b.dataId),I;switch(x[0]){case 0:{I=C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{I=C.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:I=C.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:I=C.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:I=""}if(e.disposeData(b.dataId),I)throw e.disposeData(h.dataId),new Error(I);return h}function Ohe(r){return yk(r,!0)}var Nq={kernelName:Ku,backendName:"wasm",setupFunc:bk,kernelFunc:Ohe};function zhe(r){return yk(r,!1)}var Dq={kernelName:Vu,backendName:"wasm",setupFunc:bk,kernelFunc:zhe};function Ghe(r){let{inputs:t,attrs:e,backend:n}=r,{x:o}=t,{numOrSizeSplits:s,axis:a}=e,i=y.parseAxisParam(a,o.shape)[0],u=C.prepareSplitSize(o,s,i),l=new Array(o.shape.length).fill(0),p=o.shape.slice();return u.map(m=>{let c=[...p];c[i]=m;let d=oa({inputs:{x:o},attrs:{begin:l,size:c},backend:n});return l[i]+=m,d})}var Rq={kernelName:Ss,backendName:"wasm",kernelFunc:Ghe};var Fq=pt(Ho);var Pq=pt(fi);var Uhe=!0,Mq=ft(Xo,Uhe);var Eq;function Whe(r){Eq=r.wasm.cwrap(ws,null,["number","number","number","number"])}function Khe(r){let{backend:t,inputs:e,attrs:n}=r,{alpha:o}=n,{x:s}=e,a=t.dataIdMap.get(s.dataId).id,i=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(i.dataId).id;return Eq(a,o,Ze[s.dtype],u),i}var Lq={kernelName:ws,backendName:"wasm",setupFunc:Whe,kernelFunc:Khe};var _q;function Vhe(r){_q=r.wasm.cwrap(Ma,null,["number","array","number","array","array","array","array","array","number","number"])}function Hhe(r){let{backend:t,inputs:e,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:T,end:x,strides:I}=xt.sliceInfo(o.shape,s,a,i,u,l,p,m,c),k;if(h)k=hr({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let A=xt.computeOutShape(T,x,I),R=oa({inputs:{x:o},backend:t,attrs:{begin:T,size:A}});k=hr({inputs:{x:R},backend:t,attrs:{shape:f}}),t.disposeData(R.dataId)}else{let A=t.makeOutput(d,"float32"),R=t.dataIdMap.get(o.dataId).id,F=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),P=new Uint8Array(new Int32Array(T).buffer),L=new Uint8Array(new Int32Array(x).buffer),O=new Uint8Array(new Int32Array(I).buffer),G=new Uint8Array(new Int32Array(d).buffer),W=new Uint8Array(new Int32Array(y.computeStrides(d)).buffer),H=t.dataIdMap.get(A.dataId).id;_q(R,F,o.shape.length,P,L,O,G,W,d.length,H),k=hr({inputs:{x:A},backend:t,attrs:{shape:f}}),t.disposeData(A.dataId)}return k}var $q={kernelName:Ma,backendName:"wasm",setupFunc:Vhe,kernelFunc:Hhe};function qhe(r){let{backend:t,inputs:e,attrs:n}=r,{data:o,dataSplits:s}=e,{separator:a,nGramWidths:i,leftPad:u,rightPad:l,padWidth:p,preserveShortSequences:m}=n,c=t.readSync(o.dataId),d=t.readSync(s.dataId),[f,h]=zl(c,d,a,i,u,l,p,m),g=t.makeOutput([f.length],"string"),b=t.dataIdMap.get(g.dataId);b.stringBytes=f;let T=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(T).set(h),[g,T]}var Bq={kernelName:hi,backendName:"wasm",kernelFunc:qhe};function jhe(r){let{backend:t,inputs:e,attrs:n}=r,{input:o,delimiter:s}=e,{skipEmpty:a}=n,i=t.readSync(o.dataId),u=t.readSync(s.dataId),[l,p,m]=Gl(i,u[0],a),c=p.length,d=t.makeOutput([c,2],"int32");t.typedArrayFromHeap(d).set(l);let h=t.makeOutput([c],"string"),g=t.dataIdMap.get(h.dataId);g.stringBytes=p;let b=t.makeOutput([2],"int32");return t.typedArrayFromHeap(b).set(m),[d,h,b]}var Oq={kernelName:qu,backendName:"wasm",kernelFunc:jhe};function Xhe(r){let{backend:t,inputs:e,attrs:n}=r,{input:o}=e,{numBuckets:s}=n,a=t.readSync(o.dataId),i=Ul(a,s),u=t.makeOutput(o.shape,"int32");return t.typedArrayFromHeap(u).set(i),u}var zq={kernelName:ju,backendName:"wasm",kernelFunc:Xhe};var Yhe=!0,Gq=ft(Yo,Yhe);var Uq;function Zhe(r){Uq=r.wasm.cwrap(qo,null,["number","number","number","number"])}function Qhe(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,i=t.dataIdMap.get(a.dataId).id,u=i,l=a,{transposed:p,axes:m,originalAxes:c,inputWasTransposed:d}=vn(a,o,t),f=m;if(d){let x=t.dataIdMap.get(p.dataId).id;x!==i&&(l=p,u=x,f=C.getInnerMostAxes(f.length,l.shape.length))}C.assertAxesAreInnerMostDims("sum",f,l.shape.length);let[h,g]=C.computeOutAndReduceShapes(l.shape,f),b=y.sizeFromShape(g),T=t.makeOutput(h,l.dtype);if(y.sizeFromShape(l.shape)!==0){let x=t.dataIdMap.get(T.dataId).id;Uq(u,b,Ze[T.dtype],x)}if(d&&t.disposeData(p.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var Wq={kernelName:qo,backendName:"wasm",setupFunc:Zhe,kernelFunc:Qhe};var Kq=pt(Ea);var Vq=pt(Zo);var Hq;function Jhe(r){Hq=r.wasm.cwrap(Dn,null,["number","array","number","array","number","number"])}function ege(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,s=e.dataIdMap.get(o.dataId).id,{reps:a}=n,i=new Array(o.shape.length);for(let c=0;c<i.length;c++)i[c]=o.shape[c]*a[c];let u=new Uint8Array(new Int32Array(o.shape).buffer),l=new Uint8Array(new Int32Array(i).buffer),p=e.makeOutput(i,o.dtype),m=e.dataIdMap.get(p.dataId).id;return Hq(s,u,o.shape.length,l,i.length,Ze[p.dtype],m),p}var qq={kernelName:Dn,backendName:"wasm",setupFunc:Jhe,kernelFunc:ege};var jq;function tge(r){jq=r.wasm.cwrap(La,null,["number","array","number","number","number","bool","number","number"])}var rge=({inputs:r,backend:t,attrs:e})=>{let{x:n}=r,{k:o,sorted:s}=e,a=t.dataIdMap.get(n.dataId).id,i=new Uint8Array(new Int32Array(n.shape).buffer),u=n.shape.slice();u[u.length-1]=o;let l=t.makeOutput(u,n.dtype),p=t.dataIdMap.get(l.dataId).id,m=t.makeOutput(u,"int32"),c=t.dataIdMap.get(m.dataId).id;return jq(a,i,n.shape.length,Ze[n.dtype],o,s,p,c),[l,m]},Xq={kernelName:La,backendName:"wasm",setupFunc:tge,kernelFunc:rge};var Yq;function nge(r){Yq=r.wasm.cwrap(_a,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function oge(r){let{backend:t,inputs:e,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=n,[p,m,c,d]=o.shape,[f,h]=l??[m,c],g=[p,f,h,d],b=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),T=new Uint8Array(new Int32Array(y.computeStrides(g)).buffer),x=t.makeOutput(g,o.dtype),I=t.dataIdMap.get(x.dataId).id,A=t.dataIdMap.get(o.dataId).id,F=t.dataIdMap.get(s.dataId).id,P=a==="nearest"?1:2,L;switch(i){case"constant":L=1;break;case"reflect":L=2;break;case"wrap":L=3;break;case"nearest":L=4;break;default:L=1;break}return Yq(A,F,s.shape[0]>1,p,f,h,d,c,m,b,o.shape.length-1,T,g.length-1,P,L,u,I),x}var Zq={kernelName:_a,backendName:"wasm",setupFunc:nge,kernelFunc:oge};function sge(r){let{inputs:t,backend:e,attrs:n}=r,{value:o}=t,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape[s],i=o.shape.length,u=new Array(i-1),l=0;for(let d=0;d<i;d++)d!==s&&(u[l++]=o.shape[d]);let p=new Array(a),m=new Array(i).fill(0),c=o.shape.slice();c[s]=1;for(let d=0;d<p.length;d++)m[s]=d,p[d]=oa({inputs:{x:o},attrs:{begin:m,size:c},backend:e});return p.map(({dataId:d,dtype:f})=>({dataId:d,dtype:f,shape:u}))}var Qq={kernelName:vs,backendName:"wasm",kernelFunc:sge};function age(r){let{inputs:{x:t},backend:e}=r,n=e.makeOutput(t.shape,t.dtype);return e.typedArrayFromHeap(n).fill(0),n}var Jq={kernelName:As,backendName:"wasm",kernelFunc:age};var ige=[r4,n4,o4,a4,m4,d4,h4,b4,x4,C4,k4,S4,A4,w4,D4,F4,P4,M4,_4,B4,z4,U4,K4,V4,H4,q4,j4,X4,Z4,Q4,J4,tH,nH,sH,iH,pH,lH,mH,i4,dH,fH,hH,gH,bH,yH,TH,xH,CH,kH,vH,wH,DH,RH,MH,EH,LH,$H,OH,GH,UH,KH,VH,HH,gk,jH,YH,QH,JH,eq,tq,rq,y4,oq,aq,uq,lq,mq,cq,fq,gq,yq,Tq,I4,Iq,Cq,Sq,Aq,Nq,Dq,Rq,Fq,Pq,Mq,Lq,$q,Bq,Oq,zq,Gq,Wq,Kq,Vq,qq,Xq,Zq,p4,Qq,Jq];for(let r of ige)Qi(r);var a0=$();a0.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch{return!1}});a0.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(a0.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var y0=hm(rj());var Qt={},oj=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";oj&&(l0=i0(),m0=l0.parentPort,m0.on("message",r=>onmessage({data:r})),f0=Xh(),Object.assign(global,{self:global,require:H0,Module:Qt,location:{href:__filename},Worker:l0.Worker,importScripts:function(r){(0,eval)(f0.readFileSync(r,"utf8"))},postMessage:function(r){m0.postMessage(r)},performance:global.performance||{now:function(){return Date.now()}}}));var l0,m0,f0,c0=!1,d0=[];function uge(){var r=Array.prototype.slice.call(arguments).join(" ");if(oj){f0.writeSync(2,r+`
`);return}console.error(r)}function pge(){var r=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:r,threadId:Qt._pthread_self()})}var nj=uge;self.alert=pge;Qt.instantiateWasm=(r,t)=>{var e=new WebAssembly.Instance(Qt.wasmModule,r);return t(e),Qt.wasmModule=null,e.exports};self.onunhandledrejection=r=>{throw r.reason??r};self.onmessage=r=>{try{if(r.data.cmd==="load"){if(Qt.wasmModule=r.data.wasmModule,Qt.wasmMemory=r.data.wasmMemory,Qt.buffer=Qt.wasmMemory.buffer,Qt.ENVIRONMENT_IS_PTHREAD=!0,typeof r.data.urlOrBlob=="string")importScripts(r.data.urlOrBlob);else{var t=URL.createObjectURL(r.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}WasmBackendModuleThreadedSimd(Qt).then(function(e){Qt=e})}else if(r.data.cmd==="run"){Qt.__performance_now_clock_drift=performance.now()-r.data.time,Qt.__emscripten_thread_init(r.data.pthread_ptr,0,0,1),Qt.establishStackSpace(),Qt.PThread.receiveObjectTransfer(r.data),Qt.PThread.threadInitTLS(),c0||(d0.forEach(e=>{Qt.executeNotifiedProxyingQueue(e)}),d0=[],c0=!0);try{Qt.invokeEntryPoint(r.data.start_routine,r.data.arg)}catch(e){if(e!="unwind")if(e instanceof Qt.ExitStatus)Qt.keepRuntimeAlive()||Qt.__emscripten_thread_exit(e.status);else throw e}}else r.data.cmd==="cancel"?Qt._pthread_self()&&Qt.__emscripten_thread_exit(-1):r.data.target==="setimmediate"||(r.data.cmd==="processProxyingQueue"?c0?Qt.executeNotifiedProxyingQueue(r.data.queue):d0.push(r.data.queue):(nj("worker.js received unknown command "+r.data.cmd),nj(r.data)))}catch(e){throw Qt.__emscripten_thread_crashed&&Qt.__emscripten_thread_crashed(),e}};var T0=hm(sj());var aj=y0.default||y0,lge=T0.default||T0,Rg=class extends oo{constructor(e){super();this.wasm=e;this.dataIdNextNumber=1;this.wasm.tfjs.initWithThreadsCount(lj),b0=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new ia(this,Mn())}write(e,n,o){let s={id:this.dataIdNextNumber++};return this.move(s,e,n,o,1),s}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let n=y.now();return e(),{kernelMs:y.now()-n}}move(e,n,o,s,a){let i=this.dataIdNextNumber++;if(s==="string"){let m=n;this.dataIdMap.set(e,{id:i,stringBytes:m,shape:o,dtype:s,memoryOffset:null,refCount:a});return}let u=y.sizeFromShape(o),l=u*y.bytesPerElement(s),p=this.wasm._malloc(l);this.dataIdMap.set(e,{id:i,memoryOffset:p,shape:o,dtype:s,refCount:a}),this.wasm.tfjs.registerTensor(i,u,p),n!=null&&this.wasm.HEAPU8.set(new Uint8Array(n.buffer,n.byteOffset,l),p)}async read(e){return this.readSync(e)}readSync(e,n,o){let{memoryOffset:s,dtype:a,shape:i,stringBytes:u}=this.dataIdMap.get(e);if(a==="string")return(n==null||n===0)&&(o==null||o>=u.length)?u:u.slice(n,o);n=n||0,o=o||y.sizeFromShape(i);let l=y.bytesPerElement(a),p=this.wasm.HEAPU8.slice(s+n*l,s+o*l);return cge(p.buffer,a)}disposeData(e,n=!1){if(this.dataIdMap.has(e)){let o=this.dataIdMap.get(e);if(o.refCount--,!n&&o.refCount>0)return!1;this.wasm._free(o.memoryOffset),this.wasm.tfjs.disposeData(o.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let n=this.dataIdMap.get(e);n!=null&&n.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,n,o){let s;if(o==null)s=this.write(null,e,n);else{let a=this.dataIdNextNumber++;s={id:a},this.dataIdMap.set(s,{id:a,memoryOffset:o,shape:e,dtype:n,refCount:1});let i=y.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,i,o)}return{dataId:s,shape:e,dtype:n}}typedArrayFromHeap({shape:e,dtype:n,dataId:o}){let s=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(o),i=y.sizeFromShape(e);switch(n){case"float32":return new Float32Array(s,a,i);case"int32":return new Int32Array(s,a,i);case"bool":return new Uint8Array(s,a,i);default:throw new Error(`Unknown dtype ${n}`)}}};function mge(r){return(t,e)=>(y.fetch(r,{credentials:"same-origin"}).then(n=>{n.ok||t.env.a(`failed to load wasm binary file at '${r}'`),n.arrayBuffer().then(o=>{WebAssembly.instantiate(o,t).then(s=>{e(s.instance,s.module)})})}),{})}function ij(r,t,e){if(Ik!=null)return Ik;let n="tfjs-backend-wasm.wasm";return r&&t?n="tfjs-backend-wasm-threaded-simd.wasm":r&&(n="tfjs-backend-wasm-simd.wasm"),Ng!=null&&Ng[n]!=null?Ng[n]:e+n}async function pj(){let[r,t]=await Promise.all([$().getAsync("WASM_HAS_SIMD_SUPPORT"),$().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((e,n)=>{let o={};o.locateFile=(i,u)=>{if(i.endsWith(".worker.js")){let l=(void 0).replace(/\n/g,"\\n"),p=new Blob([l],{type:"application/javascript"});return URL.createObjectURL(p)}return i.endsWith(".wasm")?ij(r,t,wg??u):u+i},x0&&(o.instantiateWasm=mge(ij(r,t,wg??"")));let s=!1;o.onAbort=()=>{if(s||Dg)return;Dg=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let a;t&&r&&Ik==null?(o.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+aj.toString()],{type:"text/javascript"}),a=aj(o)):a=lge(o),a.then(i=>{s=!0,Dg=!1;let u=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",u,["number"]),dispose:i.cwrap("dispose",u,[])},e({wasm:i})}).catch(n)})}function cge(r,t){switch(t){case"float32":return new Float32Array(r);case"int32":return new Int32Array(r);case"bool":return new Uint8Array(r);default:throw new Error(`Unknown dtype ${t}`)}}var dge=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Ik=null,wg=null,Ng={},Dg=!1,x0=!1;function fge(r,t=!1){if(Wv("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Dg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Ik=r,x0=t}function hge(r,t=!1){if(Dg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof r=="string")wg=r;else{Ng=r;let e=dge.filter(n=>Ng[n]==null);if(e.length>0)throw new Error(`There were no entries found for the following binaries: ${e.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}x0=t}var lj=-1,b0=-1;function gge(r){lj=r}function bge(){if(b0===-1)throw new Error("WASM backend not initialized.");return b0}var yge="0.0.0";var Tge=2;tp("wasm",async()=>{let{wasm:r}=await pj();return new Rg(r)},Tge);var _p="3.20.0-20220924",XJr={tfjs:_p,"tfjs-core":_p,"tfjs-data":_p,"tfjs-layers":_p,"tfjs-converter":_p,"tfjs-backend-cpu":_p,"tfjs-backend-webgl":_p,"tfjs-backend-wasm":_p};export{cs as Abs,Mi as Acos,Ei as Acosh,hp as AdadeltaOptimizer,gp as AdagradOptimizer,bp as AdamOptimizer,yp as AdamaxOptimizer,Nn as Add,ao as AddN,Li as All,_i as Any,io as ArgMax,mi as ArgMin,$i as Asin,Bi as Asinh,Oi as Atan,la as Atan2,zi as Atanh,uo as AvgPool,Mu as AvgPool3D,Im as AvgPool3DGrad,xm as AvgPoolGrad,Rg as BackendWasm,po as BatchMatMul,ds as BatchToSpaceND,Cm as Bincount,km as BroadcastArgs,J0 as BroadcastTo,BT as Callback,Yy as CallbackList,Wn as Cast,lo as Ceil,Kn as ClipByValue,Eu as Complex,Lu as ComplexAbs,fs as Concat,mo as Conv2D,Sm as Conv2DBackpropFilter,co as Conv2DBackpropInput,_u as Conv3D,vm as Conv3DBackpropFilterV2,Am as Conv3DBackpropInputV2,fo as Cos,ho as Cosh,ca as CropAndResize,ma as Cumprod,go as Cumsum,Qy as CustomCallback,ia as DataStorage,wm as DenseBincount,da as DepthToSpace,bo as DepthwiseConv2dNative,Nm as DepthwiseConv2dNativeBackpropFilter,Dm as DepthwiseConv2dNativeBackpropInput,Rm as Diag,$u as Dilation2D,eh as Dilation2DBackpropFilter,Jf as Dilation2DBackpropInput,mv as ENV,OT as EarlyStopping,Bu as Einsum,To as Elu,Fm as EluGrad,Zf as Environment,fa as Equal,Gi as Erf,xo as Exp,hs as ExpandDims,ha as Expm1,Pm as FFT,ci as Fill,ga as FlipLeftRight,Io as Floor,Co as FloorDiv,Vp as FromPixels,ko as FusedBatchNorm,Ds as FusedConv2D,Rs as FusedDepthwiseConv2D,jl as GPGPUContext,ba as GatherNd,gs as GatherV2,Kh as GraphModel,ya as Greater,So as GreaterEqual,Zy as History,Mm as IFFT,Vn as Identity,Ou as Imag,At as InputSpec,Ui as IsFinite,Wi as IsInf,Ta as IsNan,oo as KernelBackend,zu as LRN,Lm as LRNGrad,Nh as LayerVariable,Yn as LayersModel,vo as LeakyRelu,xa as Less,Ia as LessEqual,Em as LinSpace,Ao as Log,Ki as Log1p,t1 as LogSoftmax,Ca as LogicalAnd,ka as LogicalNot,Vi as LogicalOr,e1 as LogicalXor,vge as LowerBound,ef as MathBackendCPU,Cf as MathBackendWebGL,wo as Max,Do as MaxPool,Gu as MaxPool3D,$m as MaxPool3DGrad,_m as MaxPoolGrad,Bm as MaxPoolWithArgmax,No as Maximum,Ro as Mean,Fo as Min,Po as Minimum,Mo as MirrorPad,Hi as Mod,Tp as MomentumOptimizer,Om as Multinomial,Eo as Multiply,bs as Neg,va as NonMaxSuppressionV3,qi as NonMaxSuppressionV4,Aa as NonMaxSuppressionV5,Sa as NotEqual,Nv as OP_SCOPE_SUFFIX,wa as OneHot,ys as OnesLike,Vr as Optimizer,Wa as OptimizerConstructors,Ts as Pack,Lo as PadV2,Age as Pool,_o as Pow,$o as Prelu,Bo as Prod,xp as RMSPropOptimizer,os as RNN,zm as RaggedGather,Gm as RaggedTensorToTensor,di as Range,v1 as Rank,Uu as Real,yo as RealDiv,Na as Reciprocal,Ua as Reduction,Oo as Relu,Uo as Relu6,xs as Reshape,Go as ResizeBilinear,Wm as ResizeBilinearGrad,zo as ResizeNearestNeighbor,Um as ResizeNearestNeighborGrad,Da as Reverse,$a as RotateWithOffset,Ra as Round,Wo as Rsqrt,ki as SGDOptimizer,Fa as ScatterNd,Km as SearchSorted,Is as Select,ji as Selu,vl as Sequential,Vo as Sigmoid,Xi as Sign,Ko as Sin,Pa as Sinh,Cs as Slice,jo as Softmax,Yi as Softplus,ks as SpaceToBatchND,Wu as SparseFillEmptyRows,Zi as SparseReshape,Ku as SparseSegmentMean,Vu as SparseSegmentSum,Hu as SparseToDense,Ss as SplitV,Ho as Sqrt,fi as Square,Xo as SquaredDifference,ws as Step,Ma as StridedSlice,hi as StringNGrams,qu as StringSplit,ju as StringToHashBucketFast,Yo as Sub,qo as Sum,on as SymbolicTensor,Ea as Tan,Zo as Tanh,We as Tensor,ht as TensorBuffer,Dn as Tile,La as TopK,_a as Transform,Rn as Transpose,Vm as Unique,vs as Unpack,Xu as UnsortedSegmentSum,wge as UpperBound,eu as Variable,Pf as WebGPUBackend,As as ZerosLike,Ns as _FusedMatMul,Gt as abs,N2 as acos,D2 as acosh,X as add,R2 as addN,_b as all,hh as any,np as argMax,F2 as argMin,P2 as asin,M2 as asinh,E2 as atan,L2 as atan2,_2 as atanh,oc as avgPool,Bb as avgPool3d,u2 as backend,C as backend_util,O2 as basicLSTMCell,sp as batchNorm,Ob as batchNorm2d,zb as batchNorm3d,Gb as batchNorm4d,sc as batchToSpaceND,Ub as bincount,TZ as booleanMaskAsync,G2 as broadcastArgs,ap as broadcastTo,wr as broadcast_util,Fb as browser,Ie as buffer,Jee as callbacks,re as cast,U2 as ceil,Gr as clipByValue,fn as clone,Fn as complex,mt as concat,Wb as concat1d,Kb as concat2d,Vb as concat3d,Hb as concat4d,TE as constraints,qb as conv1d,ts as conv2d,jb as conv2dTranspose,Xb as conv3d,Zb as conv3dTranspose,Ege as copyRegisteredKernels,ic as cos,Qb as cosh,Ch as cosineWindow,gh as cumprod,Jb as cumsum,gn as customGrad,QL as data,W2 as denseBincount,Wv as deprecationWarn,K2 as depthToSpace,ip as depthwiseConv2d,ote as deregisterOp,Qu as device_util,V2 as diag,H2 as dilation2d,Axe as disableDeprecationWarnings,Re as dispose,wxe as disposeVariables,ce as div,q2 as divNoNan,j2 as dot,uA as dropout,X2 as einsum,up as elu,vxe as enableDebugMode,Sxe as enableProdMode,pA as enclosingPowerOfTwo,Mn as engine,$ as env,Qr as equal,Y2 as erf,J2 as euclideanNorm,br as exp,Lr as expandDims,eR as expm1,tl as eye,bc as fft,Es as fill,Mxe as findBackend,Exe as findBackendFactory,pp as floor,Lb as floorDiv,Ez as forceHalfFloat,dp as fused,lp as gather,NZ as gatherND,Pb as gather_util,Fxe as getBackend,fv as getGradient,rh as getKernel,cb as getKernelsForBackend,bge as getThreadsCount,dD as gpgpu_util,_8 as grad,$8 as grads,ir as greater,_s as greaterEqual,il as ifft,rp as imag,fp as image,FZ as inTopKAsync,xE as initializers,_A as input,Pn as io,Ty as irfft,tR as isFinite,rR as isInf,nR as isNaN,zt as keep,xr as kernel_impls,ZE as layers,uc as leakyRelu,ey as less,$s as lessEqual,mA as linalg,oR as linspace,Zte as loadGraphModel,Qte as loadGraphModelSync,l9 as loadLayersModel,sR as localResponseNormalization,Ur as log,pc as log1p,aR as logSigmoid,ny as logSoftmax,oy as logSumExp,en as logicalAnd,lc as logicalNot,sy as logicalOr,iR as logicalXor,FQ as losses,uR as lowerBound,Ke as matMul,l2 as math,hn as max,mc as maxPool,iy as maxPool3d,pR as maxPoolWithArgmax,rs as maximum,$t as mean,ch as memory,lR as meshgrid,QE as metrics,yh as min,mp as minimum,mR as mirrorPad,cR as mod,u9 as model,JE as models,rl as moments,IZ as movingAverage,E as mul,dR as multiRNNCell,fR as multinomial,Je as neg,kh as nextFrame,el as norm,au as notEqual,ep as oneHot,yr as ones,_r as onesLike,w as op,hR as outerProduct,jn as pad,gR as pad1d,bR as pad2d,yR as pad3d,TR as pad4d,xR as pool,qn as pow,dc as prelu,vb as print,IR as prod,Nxe as profile,CR as raggedGather,kR as raggedTensorToTensor,SR as rand,GR as randomGamma,sl as randomNormal,UR as randomStandardNormal,Ii as randomUniform,cp as range,Rxe as ready,ou as real,WR as reciprocal,tp as registerBackend,m9 as registerCallbackConstructor,n1 as registerGradient,Qi as registerKernel,nte as registerOp,eL as regularizers,tn as relu,cy as relu6,Pxe as removeBackend,_ as reshape,Nr as reverse,KR as reverse1d,VR as reverse2d,HR as reverse3d,qR as reverse4d,yc as rfft,dy as round,fy as rsqrt,de as scalar,kZ as scatterND,dh as scatter_util,Th as searchSorted,hy as selu,gy as separableConv2d,p9 as sequential,J as serialization,g5 as setBackend,Lxe as setPlatform,gge as setThreadsCount,fge as setWasmPath,hge as setWasmPaths,wN as setWebGLContext,jR as setdiff1dAsync,uf as shared,Ln as sigmoid,XR as sign,RQ as signal,by as sin,yy as sinh,Oe as slice,fc as slice1d,Ih as slice2d,hc as slice3d,al as slice4d,xt as slice_util,gc as softmax,su as softplus,cc as spaceToBatchND,PQ as sparse,AZ as sparseToDense,DQ as spectral,Dr as split,_t as sqrt,qe as square,xy as squaredDifference,Bs as squeeze,Tr as stack,Ci as step,YR as stridedSlice,MQ as string,le as sub,he as sum,tu as sumOutType,ZR as tan,op as tanh,Ar as tensor,qt as tensor1d,Ga as tensor2d,Rb as tensor3d,QR as tensor4d,JR as tensor5d,eF as tensor6d,Ms as tensor_util,w2 as test_util,z as tidy,Jr as tile,Dxe as time,tF as topk,cl as train,ze as transpose,Tc as truncatedNormal,rF as unique,Mge as unregisterGradient,Pge as unregisterKernel,Iy as unsortedSegmentSum,Wr as unstack,Et as upcastType,nF as upperBound,y as util,B8 as valueAndGrad,O8 as valueAndGrads,Cy as variable,ty as variableGrads,XJr as version,ere as version_converter,H5 as version_core,Ere as version_cpu,$h as version_layers,yge as version_wasm,wae as version_webgl,S8t as webgl,df as webgl_util,GD as webgpu_util,Ut as where,Sy as whereAsync,It as zeros,we as zerosLike};
/**
 * @license
 * Copyright 2009 The Closure Library Authors
 * Copyright 2020 Daniel Wirtz / The long.js Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/** @license See the LICENSE file. */
//# sourceMappingURL=tfjs.min.esm.js.map
