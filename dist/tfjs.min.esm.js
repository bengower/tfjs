var Pj=Object.create;var Jg=Object.defineProperty;var Fj=Object.getOwnPropertyDescriptor;var Mj=Object.getOwnPropertyNames;var Ej=Object.getPrototypeOf,Rj=Object.prototype.hasOwnProperty;var XN=r=>Jg(r,"__esModule",{value:!0});var Sr=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),Ye=(r,e)=>{XN(r);for(var t in e)Jg(r,t,{get:e[t],enumerable:!0})},Lj=(r,e,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of Mj(e))!Rj.call(r,n)&&n!=="default"&&Jg(r,n,{get:()=>e[n],enumerable:!(t=Fj(e,n))||t.enumerable});return r},xl=r=>Lj(XN(Jg(r!=null?Pj(Ej(r)):{},"default",r&&r.__esModule&&"default"in r?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);var hD=Sr((vme,dD)=>{dD.exports=Jt;var Ss=null;try{Ss=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Jt(r,e,t){this.low=r|0,this.high=e|0,this.unsigned=!!t}Jt.prototype.__isLong__;Object.defineProperty(Jt.prototype,"__isLong__",{value:!0});function Un(r){return(r&&r.__isLong__)===!0}Jt.isLong=Un;var sD={},aD={};function vl(r,e){var t,n,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(n=aD[r],n)?n:(t=er(r,(r|0)<0?-1:0,!0),o&&(aD[r]=t),t)):(r|=0,(o=-128<=r&&r<128)&&(n=sD[r],n)?n:(t=er(r,r<0?-1:0,!1),o&&(sD[r]=t),t))}Jt.fromInt=vl;function _s(r,e){if(isNaN(r))return e?wl:As;if(e){if(r<0)return wl;if(r>=uD)return fD}else{if(r<=-lD)return Kn;if(r+1>=lD)return mD}return r<0?_s(-r,e).neg():er(r%Sc|0,r/Sc|0,e)}Jt.fromNumber=_s;function er(r,e,t){return new Jt(r,e,t)}Jt.fromBits=er;var ob=Math.pow;function Ek(r,e,t){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return As;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var n;if((n=r.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return Ek(r.substring(1),e,t).neg();for(var o=_s(ob(t,8)),s=As,i=0;i<r.length;i+=8){var a=Math.min(8,r.length-i),u=parseInt(r.substring(i,i+a),t);if(a<8){var l=_s(ob(t,a));s=s.mul(l).add(_s(u))}else s=s.mul(o),s=s.add(_s(u))}return s.unsigned=e,s}Jt.fromString=Ek;function ka(r,e){return typeof r=="number"?_s(r,e):typeof r=="string"?Ek(r,e):er(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}Jt.fromValue=ka;var iD=1<<16,sH=1<<24,Sc=iD*iD,uD=Sc*Sc,lD=uD/2,pD=vl(sH),As=vl(0);Jt.ZERO=As;var wl=vl(0,!0);Jt.UZERO=wl;var _c=vl(1);Jt.ONE=_c;var cD=vl(1,!0);Jt.UONE=cD;var Rk=vl(-1);Jt.NEG_ONE=Rk;var mD=er(4294967295|0,2147483647|0,!1);Jt.MAX_VALUE=mD;var fD=er(4294967295|0,4294967295|0,!0);Jt.MAX_UNSIGNED_VALUE=fD;var Kn=er(0,2147483648|0,!1);Jt.MIN_VALUE=Kn;var ke=Jt.prototype;ke.toInt=function(){return this.unsigned?this.low>>>0:this.low};ke.toNumber=function(){return this.unsigned?(this.high>>>0)*Sc+(this.low>>>0):this.high*Sc+(this.low>>>0)};ke.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Kn)){var t=_s(e),n=this.div(t),o=n.mul(t).sub(this);return n.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var s=_s(ob(e,6),this.unsigned),i=this,a="";;){var u=i.div(s),l=i.sub(u.mul(s)).toInt()>>>0,p=l.toString(e);if(i=u,i.isZero())return p+a;for(;p.length<6;)p="0"+p;a=""+p+a}};ke.getHighBits=function(){return this.high};ke.getHighBitsUnsigned=function(){return this.high>>>0};ke.getLowBits=function(){return this.low};ke.getLowBitsUnsigned=function(){return this.low>>>0};ke.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Kn)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return this.high!=0?t+33:t+1};ke.isZero=function(){return this.high===0&&this.low===0};ke.eqz=ke.isZero;ke.isNegative=function(){return!this.unsigned&&this.high<0};ke.isPositive=function(){return this.unsigned||this.high>=0};ke.isOdd=function(){return(this.low&1)==1};ke.isEven=function(){return(this.low&1)==0};ke.equals=function(e){return Un(e)||(e=ka(e)),this.unsigned!==e.unsigned&&this.high>>>31==1&&e.high>>>31==1?!1:this.high===e.high&&this.low===e.low};ke.eq=ke.equals;ke.notEquals=function(e){return!this.eq(e)};ke.neq=ke.notEquals;ke.ne=ke.notEquals;ke.lessThan=function(e){return this.comp(e)<0};ke.lt=ke.lessThan;ke.lessThanOrEqual=function(e){return this.comp(e)<=0};ke.lte=ke.lessThanOrEqual;ke.le=ke.lessThanOrEqual;ke.greaterThan=function(e){return this.comp(e)>0};ke.gt=ke.greaterThan;ke.greaterThanOrEqual=function(e){return this.comp(e)>=0};ke.gte=ke.greaterThanOrEqual;ke.ge=ke.greaterThanOrEqual;ke.compare=function(e){if(Un(e)||(e=ka(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};ke.comp=ke.compare;ke.negate=function(){return!this.unsigned&&this.eq(Kn)?Kn:this.not().add(_c)};ke.neg=ke.negate;ke.add=function(e){Un(e)||(e=ka(e));var t=this.high>>>16,n=this.high&65535,o=this.low>>>16,s=this.low&65535,i=e.high>>>16,a=e.high&65535,u=e.low>>>16,l=e.low&65535,p=0,c=0,m=0,f=0;return f+=s+l,m+=f>>>16,f&=65535,m+=o+u,c+=m>>>16,m&=65535,c+=n+a,p+=c>>>16,c&=65535,p+=t+i,p&=65535,er(m<<16|f,p<<16|c,this.unsigned)};ke.subtract=function(e){return Un(e)||(e=ka(e)),this.add(e.neg())};ke.sub=ke.subtract;ke.multiply=function(e){if(this.isZero())return As;if(Un(e)||(e=ka(e)),Ss){var t=Ss.mul(this.low,this.high,e.low,e.high);return er(t,Ss.get_high(),this.unsigned)}if(e.isZero())return As;if(this.eq(Kn))return e.isOdd()?Kn:As;if(e.eq(Kn))return this.isOdd()?Kn:As;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(pD)&&e.lt(pD))return _s(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,o=this.high&65535,s=this.low>>>16,i=this.low&65535,a=e.high>>>16,u=e.high&65535,l=e.low>>>16,p=e.low&65535,c=0,m=0,f=0,d=0;return d+=i*p,f+=d>>>16,d&=65535,f+=s*p,m+=f>>>16,f&=65535,f+=i*l,m+=f>>>16,f&=65535,m+=o*p,c+=m>>>16,m&=65535,m+=s*l,c+=m>>>16,m&=65535,m+=i*u,c+=m>>>16,m&=65535,c+=n*p+o*l+s*u+i*a,c&=65535,er(f<<16|d,c<<16|m,this.unsigned)};ke.mul=ke.multiply;ke.divide=function(e){if(Un(e)||(e=ka(e)),e.isZero())throw Error("division by zero");if(Ss){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?Ss.div_u:Ss.div_s)(this.low,this.high,e.low,e.high);return er(t,Ss.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?wl:As;var n,o,s;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return wl;if(e.gt(this.shru(1)))return cD;s=wl}else{if(this.eq(Kn)){if(e.eq(_c)||e.eq(Rk))return Kn;if(e.eq(Kn))return _c;var i=this.shr(1);return n=i.div(e).shl(1),n.eq(As)?e.isNegative()?_c:Rk:(o=this.sub(e.mul(n)),s=n.add(o.div(e)),s)}else if(e.eq(Kn))return this.unsigned?wl:As;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=As}for(o=this;o.gte(e);){n=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),u=a<=48?1:ob(2,a-48),l=_s(n),p=l.mul(e);p.isNegative()||p.gt(o);)n-=u,l=_s(n,this.unsigned),p=l.mul(e);l.isZero()&&(l=_c),s=s.add(l),o=o.sub(p)}return s};ke.div=ke.divide;ke.modulo=function(e){if(Un(e)||(e=ka(e)),Ss){var t=(this.unsigned?Ss.rem_u:Ss.rem_s)(this.low,this.high,e.low,e.high);return er(t,Ss.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};ke.mod=ke.modulo;ke.rem=ke.modulo;ke.not=function(){return er(~this.low,~this.high,this.unsigned)};ke.and=function(e){return Un(e)||(e=ka(e)),er(this.low&e.low,this.high&e.high,this.unsigned)};ke.or=function(e){return Un(e)||(e=ka(e)),er(this.low|e.low,this.high|e.high,this.unsigned)};ke.xor=function(e){return Un(e)||(e=ka(e)),er(this.low^e.low,this.high^e.high,this.unsigned)};ke.shiftLeft=function(e){return Un(e)&&(e=e.toInt()),(e&=63)==0?this:e<32?er(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):er(0,this.low<<e-32,this.unsigned)};ke.shl=ke.shiftLeft;ke.shiftRight=function(e){return Un(e)&&(e=e.toInt()),(e&=63)==0?this:e<32?er(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):er(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};ke.shr=ke.shiftRight;ke.shiftRightUnsigned=function(e){if(Un(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var n=this.low;return er(n>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?er(t,0,this.unsigned):er(t>>>e-32,0,this.unsigned)};ke.shru=ke.shiftRightUnsigned;ke.shr_u=ke.shiftRightUnsigned;ke.toSigned=function(){return this.unsigned?er(this.low,this.high,!1):this};ke.toUnsigned=function(){return this.unsigned?this:er(this.low,this.high,!0)};ke.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};ke.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};ke.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};Jt.fromBytes=function(e,t,n){return n?Jt.fromBytesLE(e,t):Jt.fromBytesBE(e,t)};Jt.fromBytesLE=function(e,t){return new Jt(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};Jt.fromBytesBE=function(e,t){return new Jt(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}});var JD=Sr(()=>{});var e0=Sr(()=>{});var L0=Sr((R0,tC)=>{(function(r,e,t){function n(a){var u=this,l=i();u.next=function(){var p=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=p-(u.c=p|0)},u.c=1,u.s0=l(" "),u.s1=l(" "),u.s2=l(" "),u.s0-=l(a),u.s0<0&&(u.s0+=1),u.s1-=l(a),u.s1<0&&(u.s1+=1),u.s2-=l(a),u.s2<0&&(u.s2+=1),l=null}function o(a,u){return u.c=a.c,u.s0=a.s0,u.s1=a.s1,u.s2=a.s2,u}function s(a,u){var l=new n(a),p=u&&u.state,c=l.next;return c.int32=function(){return l.next()*4294967296|0},c.double=function(){return c()+(c()*2097152|0)*11102230246251565e-32},c.quick=c,p&&(typeof p=="object"&&o(p,l),c.state=function(){return o(l,{})}),c}function i(){var a=4022871197,u=function(l){l=String(l);for(var p=0;p<l.length;p++){a+=l.charCodeAt(p);var c=.02519603282416938*a;a=c>>>0,c-=a,c*=a,a=c>>>0,c-=a,a+=c*4294967296}return(a>>>0)*23283064365386963e-26};return u}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(R0,typeof tC=="object"&&tC,typeof define=="function"&&define)});var $0=Sr((B0,rC)=>{(function(r,e,t){function n(i){var a=this,u="";a.x=0,a.y=0,a.z=0,a.w=0,a.next=function(){var p=a.x^a.x<<11;return a.x=a.y,a.y=a.z,a.z=a.w,a.w^=a.w>>>19^p^p>>>8},i===(i|0)?a.x=i:u+=i;for(var l=0;l<u.length+64;l++)a.x^=u.charCodeAt(l)|0,a.next()}function o(i,a){return a.x=i.x,a.y=i.y,a.z=i.z,a.w=i.w,a}function s(i,a){var u=new n(i),l=a&&a.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var c=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(B0,typeof rC=="object"&&rC,typeof define=="function"&&define)});var z0=Sr((O0,nC)=>{(function(r,e,t){function n(i){var a=this,u="";a.next=function(){var p=a.x^a.x>>>2;return a.x=a.y,a.y=a.z,a.z=a.w,a.w=a.v,(a.d=a.d+362437|0)+(a.v=a.v^a.v<<4^(p^p<<1))|0},a.x=0,a.y=0,a.z=0,a.w=0,a.v=0,i===(i|0)?a.x=i:u+=i;for(var l=0;l<u.length+64;l++)a.x^=u.charCodeAt(l)|0,l==u.length&&(a.d=a.x<<10^a.x>>>4),a.next()}function o(i,a){return a.x=i.x,a.y=i.y,a.z=i.z,a.w=i.w,a.v=i.v,a.d=i.d,a}function s(i,a){var u=new n(i),l=a&&a.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var c=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(O0,typeof nC=="object"&&nC,typeof define=="function"&&define)});var W0=Sr((G0,oC)=>{(function(r,e,t){function n(i){var a=this;a.next=function(){var l=a.x,p=a.i,c,m,f;return c=l[p],c^=c>>>7,m=c^c<<24,c=l[p+1&7],m^=c^c>>>10,c=l[p+3&7],m^=c^c>>>3,c=l[p+4&7],m^=c^c<<7,c=l[p+7&7],c=c^c<<13,m^=c^c<<9,l[p]=m,a.i=p+1&7,m};function u(l,p){var c,m,f=[];if(p===(p|0))m=f[0]=p;else for(p=""+p,c=0;c<p.length;++c)f[c&7]=f[c&7]<<15^p.charCodeAt(c)+f[c+1&7]<<13;for(;f.length<8;)f.push(0);for(c=0;c<8&&f[c]===0;++c);for(c==8?m=f[7]=-1:m=f[c],l.x=f,l.i=0,c=256;c>0;--c)l.next()}u(a,i)}function o(i,a){return a.x=i.x.slice(),a.i=i.i,a}function s(i,a){i==null&&(i=+new Date);var u=new n(i),l=a&&a.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var c=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=u.next,p.quick=p,l&&(l.x&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(G0,typeof oC=="object"&&oC,typeof define=="function"&&define)});var K0=Sr((U0,sC)=>{(function(r,e,t){function n(i){var a=this;a.next=function(){var l=a.w,p=a.X,c=a.i,m,f;return a.w=l=l+1640531527|0,f=p[c+34&127],m=p[c=c+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=p[c]=f^m,a.i=c,f+(l^l>>>16)|0};function u(l,p){var c,m,f,d,h,g=[],x=128;for(p===(p|0)?(m=p,p=null):(p=p+"\0",m=0,x=Math.max(x,p.length)),f=0,d=-32;d<x;++d)p&&(m^=p.charCodeAt((d+32)%p.length)),d===0&&(h=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,d>=0&&(h=h+1640531527|0,c=g[d&127]^=m+h,f=c==0?f+1:0);for(f>=128&&(g[(p&&p.length||0)&127]=-1),f=127,d=4*128;d>0;--d)m=g[f+34&127],c=g[f=f+1&127],m^=m<<13,c^=c<<17,m^=m>>>15,c^=c>>>12,g[f]=m^c;l.w=h,l.X=g,l.i=f}u(a,i)}function o(i,a){return a.i=i.i,a.w=i.w,a.X=i.X.slice(),a}function s(i,a){i==null&&(i=+new Date);var u=new n(i),l=a&&a.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var c=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=u.next,p.quick=p,l&&(l.X&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(U0,typeof sC=="object"&&sC,typeof define=="function"&&define)});var j0=Sr((V0,aC)=>{(function(r,e,t){function n(i){var a=this,u="";a.next=function(){var p=a.b,c=a.c,m=a.d,f=a.a;return p=p<<25^p>>>7^c,c=c-m|0,m=m<<24^m>>>8^f,f=f-p|0,a.b=p=p<<20^p>>>12^c,a.c=c=c-m|0,a.d=m<<16^c>>>16^f,a.a=f-p|0},a.a=0,a.b=0,a.c=2654435769|0,a.d=1367130551,i===Math.floor(i)?(a.a=i/4294967296|0,a.b=i|0):u+=i;for(var l=0;l<u.length+20;l++)a.b^=u.charCodeAt(l)|0,a.next()}function o(i,a){return a.a=i.a,a.b=i.b,a.c=i.c,a.d=i.d,a}function s(i,a){var u=new n(i),l=a&&a.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var c=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},p.int32=u.next,p.quick=p,l&&(typeof l=="object"&&o(l,u),p.state=function(){return o(u,{})}),p}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(V0,typeof aC=="object"&&aC,typeof define=="function"&&define)});var H0=Sr(()=>{});var X0=Sr((q0,Ab)=>{(function(r,e,t){var n=256,o=6,s=52,i="random",a=t.pow(n,o),u=t.pow(2,s),l=u*2,p=n-1,c;function m(T,k,C){var N=[];k=k==!0?{entropy:!0}:k||{};var A=g(h(k.entropy?[T,y(e)]:T??x(),3),N),M=new f(N),E=function(){for(var B=M.g(o),W=a,U=0;B<u;)B=(B+U)*n,W*=n,U=M.g(1);for(;B>=l;)B/=2,W/=2,U>>>=1;return(B+U)/W};return E.int32=function(){return M.g(4)|0},E.quick=function(){return M.g(4)/4294967296},E.double=E,g(y(M.S),e),(k.pass||C||function(B,W,U,K){return K&&(K.S&&d(K,M),B.state=function(){return d(M,{})}),U?(t[i]=B,W):B})(E,A,"global"in k?k.global:this==t,k.state)}function f(T){var k,C=T.length,N=this,A=0,M=N.i=N.j=0,E=N.S=[];for(C||(T=[C++]);A<n;)E[A]=A++;for(A=0;A<n;A++)E[A]=E[M=p&M+T[A%C]+(k=E[A])],E[M]=k;(N.g=function(B){for(var W,U=0,K=N.i,j=N.j,V=N.S;B--;)W=V[K=p&K+1],U=U*n+V[p&(V[K]=V[j=p&j+W])+(V[j]=W)];return N.i=K,N.j=j,U})(n)}function d(T,k){return k.i=T.i,k.j=T.j,k.S=T.S.slice(),k}function h(T,k){var C=[],N=typeof T,A;if(k&&N=="object")for(A in T)try{C.push(h(T[A],k-1))}catch{}return C.length?C:N=="string"?T:T+"\0"}function g(T,k){for(var C=T+"",N,A=0;A<C.length;)k[p&A]=p&(N^=k[p&A]*19)+C.charCodeAt(A++);return y(k)}function x(){try{var T;return c&&(T=c.randomBytes)?T=T(n):(T=new Uint8Array(n),(r.crypto||r.msCrypto).getRandomValues(T)),y(T)}catch{var k=r.navigator,C=k&&k.plugins;return[+new Date,r,C,r.screen,y(e)]}}function y(T){return String.fromCharCode.apply(0,T)}if(g(t.random(),e),typeof Ab=="object"&&Ab.exports){Ab.exports=m;try{c=H0()}catch{}}else typeof define=="function"&&define.amd?define(function(){return m}):t["seed"+i]=m})(typeof self!="undefined"?self:q0,[],Math)});var Lf=Sr((R1e,Y0)=>{var h8=L0(),g8=$0(),b8=z0(),y8=W0(),x8=K0(),T8=j0(),Kl=X0();Kl.alea=h8;Kl.xor128=g8;Kl.xorwow=b8;Kl.xorshift7=y8;Kl.xor4096=x8;Kl.tychei=T8;Y0.exports=Kl});var iw=Sr(()=>{});var Ph=Sr(()=>{});var Km=Sr(()=>{});var S4=Sr(()=>{});var _4=Sr(()=>{});var A4=Sr(()=>{});var N4=Sr((Qx,DN)=>{var NN=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(e){e=e||{};function t(){return se.buffer!=st&&zr(se.buffer),Wt}function n(){return se.buffer!=st&&zr(se.buffer),Rn}function o(){return se.buffer!=st&&zr(se.buffer),Or}function s(){return se.buffer!=st&&zr(se.buffer),ts}function i(){return se.buffer!=st&&zr(se.buffer),Ln}var a=typeof e!="undefined"?e:{},u,l;a.ready=new Promise(function(S,F){u=S,l=F});var p;typeof process!="undefined"&&process.listeners&&(p={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var c={},m;for(m in a)a.hasOwnProperty(m)&&(c[m]=a[m]);var f=[],d="./this.program",h=function(S,F){throw F},g=!1,x=!1,y=!1,T=!1;g=typeof window=="object",x=typeof importScripts=="function",y=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",T=!g&&!y&&!x;var k=a.ENVIRONMENT_IS_PTHREAD||!1;k&&(st=a.buffer);var C="";function N(S){return a.locateFile?a.locateFile(S,C):C+S}var A,M,E,B,W,U;if(y){x?C=Km().dirname(C)+"/":C=__dirname+"/",A=function(F,z){return W||(W=Ph()),U||(U=Km()),F=U.normalize(F),W.readFileSync(F,z?null:"utf8")},E=function(F){var z=A(F,!0);return z.buffer||(z=new Uint8Array(z)),Te(z.buffer),z},process.argv.length>1&&(d=process.argv[1].replace(/\\/g,"/")),f=process.argv.slice(2),process.on("uncaughtException",function(S){if(!(S instanceof nf))throw S}),process.on("unhandledRejection",yi),h=function(S){process.exit(S)},a.inspect=function(){return"[Emscripten Module object]"};var K;try{K=S4()}catch(S){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),S}global.Worker=K.Worker}else T?(typeof read!="undefined"&&(A=function(F){return read(F)}),E=function(F){var z;return typeof readbuffer=="function"?new Uint8Array(readbuffer(F)):(z=read(F,"binary"),Te(typeof z=="object"),z)},typeof scriptArgs!="undefined"?f=scriptArgs:typeof arguments!="undefined"&&(f=arguments),typeof quit=="function"&&(h=function(S){quit(S)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(g||x)&&(x?C=self.location.href:typeof document!="undefined"&&document.currentScript&&(C=document.currentScript.src),typeof r!="undefined"&&r&&(C=r),C.indexOf("blob:")!==0?C=C.substr(0,C.lastIndexOf("/")+1):C="",y?(A=function(F,z){return W||(W=Ph()),U||(U=Km()),F=U.normalize(F),W.readFileSync(F,z?null:"utf8")},E=function(F){var z=A(F,!0);return z.buffer||(z=new Uint8Array(z)),Te(z.buffer),z}):(A=function(S){var F=new XMLHttpRequest;return F.open("GET",S,!1),F.send(null),F.responseText},x&&(E=function(S){var F=new XMLHttpRequest;return F.open("GET",S,!1),F.responseType="arraybuffer",F.send(null),new Uint8Array(F.response)}),M=function(S,F,z){var H=new XMLHttpRequest;H.open("GET",S,!0),H.responseType="arraybuffer",H.onload=function(){if(H.status==200||H.status==0&&H.response){F(H.response);return}z()},H.onerror=z,H.send(null)}),B=function(S){document.title=S});y&&typeof performance=="undefined"&&(global.performance=_4().performance);var j=a.print||console.log.bind(console),V=a.printErr||console.warn.bind(console);for(m in c)c.hasOwnProperty(m)&&(a[m]=c[m]);c=null,a.arguments&&(f=a.arguments),a.thisProgram&&(d=a.thisProgram),a.quit&&(h=a.quit);function q(S){q.shown||(q.shown={}),q.shown[S]||(q.shown[S]=1,V(S))}var ee=Atomics.load,Z=Atomics.store,te=Atomics.compareExchange,oe;a.wasmBinary&&(oe=a.wasmBinary);var ie=a.noExitRuntime||!0;typeof WebAssembly!="object"&&yi("no native wasm support detected");var se,ue,ye=!1,de;function Te(S,F){S||yi("Assertion failed: "+F)}function Se(S){var F=a["_"+S];return Te(F,"Cannot call unknown function "+S+", make sure it is exported"),F}function Be(S,F,z,H,xe){var ge={string:function(nn){var Vp=0;if(nn!=null&&nn!==0){var qN=(nn.length<<2)+1;Vp=Wp(qN),Ct(nn,Vp,qN)}return Vp},array:function(nn){var Vp=Wp(nn.length);return Gt(nn,Vp),Vp}};function be(nn){return F==="string"?Y(nn):F==="boolean"?Boolean(nn):nn}var Fe=Se(S),Pt=[],Pr=0;if(H)for(var wr=0;wr<H.length;wr++){var _u=ge[z[wr]];_u?(Pr===0&&(Pr=rf()),Pt[wr]=_u(H[wr])):Pt[wr]=H[wr]}var Kp=Fe.apply(null,Pt);return Kp=be(Kp),Pr!==0&&Gp(Pr),Kp}function $e(S,F,z,H){z=z||[];var xe=z.every(function(be){return be==="number"}),ge=F!=="string";return ge&&xe&&!H?Se(S):function(){return Be(S,F,z,arguments,H)}}function Ke(S,F,z){for(var H=F+z,xe="";!(F>=H);){var ge=S[F++];if(!ge)return xe;if(!(ge&128)){xe+=String.fromCharCode(ge);continue}var be=S[F++]&63;if((ge&224)==192){xe+=String.fromCharCode((ge&31)<<6|be);continue}var Fe=S[F++]&63;if((ge&240)==224?ge=(ge&15)<<12|be<<6|Fe:ge=(ge&7)<<18|be<<12|Fe<<6|S[F++]&63,ge<65536)xe+=String.fromCharCode(ge);else{var Pt=ge-65536;xe+=String.fromCharCode(55296|Pt>>10,56320|Pt&1023)}}return xe}function Y(S,F){return S?Ke(n(),S,F):""}function bt(S,F,z,H){if(!(H>0))return 0;for(var xe=z,ge=z+H-1,be=0;be<S.length;++be){var Fe=S.charCodeAt(be);if(Fe>=55296&&Fe<=57343){var Pt=S.charCodeAt(++be);Fe=65536+((Fe&1023)<<10)|Pt&1023}if(Fe<=127){if(z>=ge)break;F[z++]=Fe}else if(Fe<=2047){if(z+1>=ge)break;F[z++]=192|Fe>>6,F[z++]=128|Fe&63}else if(Fe<=65535){if(z+2>=ge)break;F[z++]=224|Fe>>12,F[z++]=128|Fe>>6&63,F[z++]=128|Fe&63}else{if(z+3>=ge)break;F[z++]=240|Fe>>18,F[z++]=128|Fe>>12&63,F[z++]=128|Fe>>6&63,F[z++]=128|Fe&63}}return F[z]=0,z-xe}function Ct(S,F,z){return bt(S,n(),F,z)}function Dt(S){for(var F=0,z=0;z<S.length;++z){var H=S.charCodeAt(z);H>=55296&&H<=57343&&(H=65536+((H&1023)<<10)|S.charCodeAt(++z)&1023),H<=127?++F:H<=2047?F+=2:H<=65535?F+=3:F+=4}return F}function Gt(S,F){t().set(S,F)}function ht(S,F){return S%F>0&&(S+=F-S%F),S}var st,Wt,Rn,lr,es,Or,ts,Tn,Ln;function zr(S){st=S,a.HEAP8=Wt=new Int8Array(S),a.HEAP16=lr=new Int16Array(S),a.HEAP32=Or=new Int32Array(S),a.HEAPU8=Rn=new Uint8Array(S),a.HEAPU16=es=new Uint16Array(S),a.HEAPU32=ts=new Uint32Array(S),a.HEAPF32=Tn=new Float32Array(S),a.HEAPF64=Ln=new Float64Array(S)}var Zn=a.INITIAL_MEMORY||16777216;if(k)se=a.wasmMemory,st=a.buffer;else if(a.wasmMemory)se=a.wasmMemory;else if(se=new WebAssembly.Memory({initial:Zn/65536,maximum:2147483648/65536,shared:!0}),!(se.buffer instanceof SharedArrayBuffer))throw V("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),y&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");se&&(st=se.buffer),Zn=st.byteLength,zr(st);var gr,rs=[],ns=[],dl=[],Vm=[],Bn=[],Rp=!1,jm=!1;k||ns.push({func:function(){Kg()}});function _g(){if(!k){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)tT(a.preRun.shift());Lp(rs)}}function Ag(){Rp=!0,!k&&Lp(ns)}function Ng(){k||Lp(dl)}function kn(){k||(jm=!0)}function Dg(){if(!k){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)rT(a.postRun.shift());Lp(Bn)}}function tT(S){rs.unshift(S)}function rT(S){Bn.unshift(S)}var os=0,Hm=null,hl=null;function nT(S){Te(!k,"addRunDependency cannot be used in a pthread worker"),os++,a.monitorRunDependencies&&a.monitorRunDependencies(os)}function oT(S){if(os--,a.monitorRunDependencies&&a.monitorRunDependencies(os),os==0&&(Hm!==null&&(clearInterval(Hm),Hm=null),hl)){var F=hl;hl=null,F()}}a.preloadedImages={},a.preloadedAudios={};function yi(S){a.onAbort&&a.onAbort(S),k&&console.error("Pthread aborting at "+new Error().stack),S+="",V(S),ye=!0,de=1,S="abort("+S+"). Build with -s ASSERTIONS=1 for more info.";var F=new WebAssembly.RuntimeError(S);throw l(F),F}function gl(S,F){return String.prototype.startsWith?S.startsWith(F):S.indexOf(F)===0}var sT="data:application/octet-stream;base64,";function Pg(S){return gl(S,sT)}var aT="file://";function Fg(S){return gl(S,aT)}var In="tfjs-backend-wasm-threaded-simd.wasm";Pg(In)||(In=N(In));function iT(S){try{if(S==In&&oe)return new Uint8Array(oe);if(E)return E(S);throw"both async and sync fetching of the wasm failed"}catch(F){yi(F)}}function Mg(){if(!oe&&(g||x)){if(typeof fetch=="function"&&!Fg(In))return fetch(In,{credentials:"same-origin"}).then(function(S){if(!S.ok)throw"failed to load wasm binary file at '"+In+"'";return S.arrayBuffer()}).catch(function(){return iT(In)});if(M)return new Promise(function(S,F){M(In,function(z){S(new Uint8Array(z))},F)})}return Promise.resolve().then(function(){return iT(In)})}function uT(){var S={a:ek};function F(be,Fe){var Pt=be.exports;if(a.asm=Pt,gr=a.asm.kb,ue=Fe,!k){var Pr=Me.unusedWorkers.length;Me.unusedWorkers.forEach(function(wr){Me.loadWasmModuleToWorker(wr,function(){--Pr||oT("wasm-instantiate")})})}}k||nT("wasm-instantiate");function z(be){F(be.instance,be.module)}function H(be){return Mg().then(function(Fe){return WebAssembly.instantiate(Fe,S)}).then(be,function(Fe){V("failed to asynchronously prepare wasm: "+Fe),yi(Fe)})}function xe(){return!oe&&typeof WebAssembly.instantiateStreaming=="function"&&!Pg(In)&&!Fg(In)&&typeof fetch=="function"?fetch(In,{credentials:"same-origin"}).then(function(be){var Fe=WebAssembly.instantiateStreaming(be,S);return Fe.then(z,function(Pt){return V("wasm streaming compile failed: "+Pt),V("falling back to ArrayBuffer instantiation"),H(z)})}):H(z)}if(a.instantiateWasm)try{var ge=a.instantiateWasm(S,F);return ge}catch(be){return V("Module.instantiateWasm callback failed with error: "+be),!1}return xe().catch(l),{}}var Eg={10128:function(){throw"Canceled!"},10146:function(S,F){setTimeout(function(){WN(S,F)},0)}};function lT(){Me.initRuntime()}function Lp(S){for(;S.length>0;){var F=S.shift();if(typeof F=="function"){F(a);continue}var z=F.func;typeof z=="number"?F.arg===void 0?gr.get(z)():gr.get(z)(F.arg):z(F.arg===void 0?null:F.arg)}}var Iu={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function qm(S,F){if(S<=0||S>t().length||S&!0||F<0)return-28;if(F==0)return 0;F>=2147483647&&(F=1/0);var z=Atomics.load(o(),Up>>2),H=0;if(z==S){var xe=Atomics.compareExchange(o(),Up>>2,z,0);if(xe==z&&(--F,H=1,F<=0))return 1}var ge=Atomics.notify(o(),S>>2,F);if(ge>=0)return ge+H;throw"Atomics.notify returned an unexpected value "+ge}a._emscripten_futex_wake=qm;function pT(S){if(k)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in killThread!";o()[S+12>>2]=0;var F=Me.pthreads[S];F.worker.terminate(),Me.freeThreadData(F),Me.runningWorkers.splice(Me.runningWorkers.indexOf(F.worker),1),F.worker.pthread=void 0}function cT(S){if(k)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in cancelThread!";var F=Me.pthreads[S];F.worker.postMessage({cmd:"cancel"})}function Rg(S){if(k)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in cleanupThread!";var F=Me.pthreads[S];if(F){o()[S+12>>2]=0;var z=F.worker;Me.returnWorkerToPool(z)}}var Me={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var S=8,F=0;F<S;++F)Me.allocateUnusedWorker()},initRuntime:function(){for(var S=yl(228),F=0;F<228/4;++F)s()[S/4+F]=0;o()[S+12>>2]=S;var z=S+152;o()[z>>2]=z;for(var H=yl(512),F=0;F<128;++F)s()[H/4+F]=0;Atomics.store(s(),S+100>>2,H),Atomics.store(s(),S+40>>2,S),kk(S,!x,1),zN(S)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Me.threadExitHandlers.length>0;)Me.threadExitHandlers.pop()();k&&Su()&&ON()},runExitHandlersAndDeinitThread:function(S,F){Atomics.store(s(),S+56>>2,1),Atomics.store(s(),S+60>>2,0),Me.runExitHandlers(),Atomics.store(s(),S+4>>2,F),Atomics.store(s(),S+0>>2,1),qm(S+0,2147483647),kk(0,0,0)},threadExit:function(S){var F=Su();F&&(Me.runExitHandlersAndDeinitThread(F,S),k&&postMessage({cmd:"exit"}))},threadCancel:function(){Me.runExitHandlersAndDeinitThread(Su(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var S in Me.pthreads){var F=Me.pthreads[S];F&&F.worker&&Me.returnWorkerToPool(F.worker)}Me.pthreads={};for(var z=0;z<Me.unusedWorkers.length;++z){var H=Me.unusedWorkers[z];H.terminate()}Me.unusedWorkers=[];for(var z=0;z<Me.runningWorkers.length;++z){var H=Me.runningWorkers[z],F=H.pthread;Me.freeThreadData(F),H.terminate()}Me.runningWorkers=[]},freeThreadData:function(S){if(!!S){if(S.threadInfoStruct){var F=o()[S.threadInfoStruct+100>>2];o()[S.threadInfoStruct+100>>2]=0,tf(F),tf(S.threadInfoStruct)}S.threadInfoStruct=0,S.allocatedOwnStack&&S.stackBase&&tf(S.stackBase),S.stackBase=0,S.worker&&(S.worker.pthread=null)}},returnWorkerToPool:function(S){Me.runWithoutMainThreadQueuedCalls(function(){delete Me.pthreads[S.pthread.threadInfoStruct],Me.unusedWorkers.push(S),Me.runningWorkers.splice(Me.runningWorkers.indexOf(S),1),Me.freeThreadData(S.pthread),S.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(S){o()[HN>>2]=0;try{S()}finally{o()[HN>>2]=1}},receiveObjectTransfer:function(S){},loadWasmModuleToWorker:function(S,F){S.onmessage=function(z){var H=z.data,xe=H.cmd;if(S.pthread&&(Me.currentProxiedOperationCallerThread=S.pthread.threadInfoStruct),H.targetThread&&H.targetThread!=Su()){var ge=Me.pthreads[H.targetThread];ge?ge.worker.postMessage(z.data,H.transferList):console.error('Internal error! Worker sent a message "'+xe+'" to target pthread '+H.targetThread+", but that thread no longer exists!"),Me.currentProxiedOperationCallerThread=void 0;return}if(xe==="processQueuedMainThreadWork")Xg();else if(xe==="spawnThread")Wg(z.data);else if(xe==="cleanupThread")Rg(H.thread);else if(xe==="killThread")pT(H.thread);else if(xe==="cancelThread")cT(H.thread);else if(xe==="loaded")S.loaded=!0,F&&F(S),S.runPthread&&(S.runPthread(),delete S.runPthread);else if(xe==="print")j("Thread "+H.threadId+": "+H.text);else if(xe==="printErr")V("Thread "+H.threadId+": "+H.text);else if(xe==="alert")alert("Thread "+H.threadId+": "+H.text);else if(xe==="exit"){var be=S.pthread&&Atomics.load(s(),S.pthread.threadInfoStruct+64>>2);be&&Me.returnWorkerToPool(S)}else if(xe==="exitProcess")try{Nj(H.returnCode)}catch(Fe){if(Fe instanceof nf)return;throw Fe}else xe==="cancelDone"?Me.returnWorkerToPool(S):xe==="objectTransfer"?Me.receiveObjectTransfer(z.data):z.data.target==="setimmediate"?S.postMessage(z.data):V("worker sent an unknown command "+xe);Me.currentProxiedOperationCallerThread=void 0},S.onerror=function(z){V("pthread sent an error! "+z.filename+":"+z.lineno+": "+z.message)},y&&(S.on("message",function(z){S.onmessage({data:z})}),S.on("error",function(z){S.onerror(z)}),S.on("exit",function(z){})),S.postMessage({cmd:"load",urlOrBlob:a.mainScriptUrlOrBlob||r,wasmMemory:se,wasmModule:ue})},allocateUnusedWorker:function(){var S=N("tfjs-backend-wasm-threaded-simd.worker.js");Me.unusedWorkers.push(new Worker(S))},getNewWorker:function(){return Me.unusedWorkers.length==0&&(Me.allocateUnusedWorker(),Me.loadWasmModuleToWorker(Me.unusedWorkers[0])),Me.unusedWorkers.length>0?Me.unusedWorkers.pop():null},busySpinWait:function(S){for(var F=performance.now()+S;performance.now()<F;);}};function mT(S,F){VN(S,F),Gp(S)}a.establishStackSpace=mT;function fT(){return ie}a.getNoExitRuntime=fT;function dT(S,F){return gr.get(S)(F)}a.invokeEntryPoint=dT;function hT(S,F,z,H){yi("Assertion failed: "+Y(S)+", at: "+[F?Y(F):"unknown filename",z,H?Y(H):"unknown function"])}function gT(S,F){var z=_main(S,F)}var bl;y?bl=function(){var S=process.hrtime();return S[0]*1e3+S[1]/1e6}:k?bl=function(){return performance.now()-a.__performance_now_clock_drift}:typeof dateNow!="undefined"?bl=dateNow:bl=function(){return performance.now()};function bT(S){return o()[BN()>>2]=S,S}function yT(S,F){if(k)return Cu(1,1,S,F)}function xT(S,F){if(S==F)postMessage({cmd:"processQueuedMainThreadWork"});else if(k)postMessage({targetThread:S,cmd:"processThreadQueue"});else{var z=Me.pthreads[S],H=z&&z.worker;if(!H)return;H.postMessage({cmd:"processThreadQueue"})}return 1}function TT(){yi()}function kT(S,F,z){var H=wT(F,z);return Eg[S].apply(null,H)}function IT(S,F){}function Lg(S,F,z){if(S<=0||S>t().length||S&!0)return-28;if(g){if(Atomics.load(o(),S>>2)!=F)return-6;for(var xe=performance.now(),ge=xe+z,be=Atomics.exchange(o(),Up>>2,S);;){if(xe=performance.now(),xe>ge)return be=Atomics.exchange(o(),Up>>2,0),-73;if(be=Atomics.exchange(o(),Up>>2,0),be==0)break;if(Xg(),Atomics.load(o(),S>>2)!=F)return-6;be=Atomics.exchange(o(),Up>>2,S)}return 0}else{var H=Atomics.wait(o(),S>>2,F,z);if(H==="timed-out")return-73;if(H==="not-equal")return-6;if(H==="ok")return 0;throw"Atomics.wait returned an unexpected value "+H}}function CT(S,F,z){n().copyWithin(S,F,F+z)}function vT(){return y?A4().cpus().length:navigator.hardwareConcurrency}function Cu(S,F){for(var z=arguments.length-2,H=rf(),xe=z,ge=Wp(xe*8),be=ge>>3,Fe=0;Fe<z;Fe++){var Pt=arguments[2+Fe];i()[be+Fe]=Pt}var Pr=KN(S,xe,ge,F);return Gp(H),Pr}var Xm=[],Ym=[];function wT(S,F){Ym.length=0;var z;for(F>>=2;z=n()[S++];){var H=z<105;H&&F&1&&F++,Ym.push(H?i()[F++>>1]:o()[F]),++F}return Ym}function ST(S,F,z){Xm.length=F;for(var H=z>>3,xe=0;xe<F;xe++)Xm[xe]=i()[H+xe];var ge=S<0,be=ge?Eg[-S-1]:JT[S];return be.apply(null,Xm)}function _T(){return n().length}function AT(S){try{return se.grow(S-st.byteLength+65535>>>16),zr(se.buffer),1}catch{}}function NT(S){var F=_T();if(S<=F)return!1;var z=2147483648;if(S>z)return!1;for(var H=1;H<=4;H*=2){var xe=F*(1+.2/H);xe=Math.min(xe,S+100663296);var ge=Math.min(z,ht(Math.max(S,xe),65536)),be=AT(ge);if(be)return!0}return!1}var rt={inEventHandler:0,removeAllEventListeners:function(){for(var S=rt.eventHandlers.length-1;S>=0;--S)rt._removeHandler(S);rt.eventHandlers=[],rt.deferredCalls=[]},registerRemoveEventListeners:function(){rt.removeEventListenersRegistered||(Vm.push(rt.removeAllEventListeners),rt.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(S,F,z){function H(be,Fe){if(be.length!=Fe.length)return!1;for(var Pt in be)if(be[Pt]!=Fe[Pt])return!1;return!0}for(var xe in rt.deferredCalls){var ge=rt.deferredCalls[xe];if(ge.targetFunction==S&&H(ge.argsList,z))return}rt.deferredCalls.push({targetFunction:S,precedence:F,argsList:z}),rt.deferredCalls.sort(function(be,Fe){return be.precedence<Fe.precedence})},removeDeferredCalls:function(S){for(var F=0;F<rt.deferredCalls.length;++F)rt.deferredCalls[F].targetFunction==S&&(rt.deferredCalls.splice(F,1),--F)},canPerformEventHandlerRequests:function(){return rt.inEventHandler&&rt.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!rt.canPerformEventHandlerRequests())for(var S=0;S<rt.deferredCalls.length;++S){var F=rt.deferredCalls[S];rt.deferredCalls.splice(S,1),--S,F.targetFunction.apply(null,F.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(S,F){for(var z=0;z<rt.eventHandlers.length;++z)rt.eventHandlers[z].target==S&&(!F||F==rt.eventHandlers[z].eventTypeString)&&rt._removeHandler(z--)},_removeHandler:function(S){var F=rt.eventHandlers[S];F.target.removeEventListener(F.eventTypeString,F.eventListenerFunc,F.useCapture),rt.eventHandlers.splice(S,1)},registerOrRemoveHandler:function(S){var F=function(xe){++rt.inEventHandler,rt.currentEventHandler=S,rt.runDeferredCalls(),S.handlerFunc(xe),rt.runDeferredCalls(),--rt.inEventHandler};if(S.callbackfunc)S.eventListenerFunc=F,S.target.addEventListener(S.eventTypeString,F,S.useCapture),rt.eventHandlers.push(S),rt.registerRemoveEventListeners();else for(var z=0;z<rt.eventHandlers.length;++z)rt.eventHandlers[z].target==S.target&&rt.eventHandlers[z].eventTypeString==S.eventTypeString&&rt._removeHandler(z--)},queueEventHandlerOnThread_iiii:function(S,F,z,H,xe){var ge=rf(),be=Wp(12);o()[be>>2]=z,o()[be+4>>2]=H,o()[be+8>>2]=xe,Tk(0,S,637534208,F,H,be),Gp(ge)},getTargetThreadForEventCallback:function(S){switch(S){case 1:return 0;case 2:return Me.currentProxiedOperationCallerThread;default:return S}},getNodeNameForTarget:function(S){return S?S==window?"#window":S==screen?"#screen":S&&S.nodeName?S.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function DT(S){var F=Dt(S)+1,z=yl(F);return Ct(S,z,F),z}function PT(S,F,z,H){var xe=rf(),ge=Wp(12),be=0;F&&(be=DT(F)),o()[ge>>2]=be,o()[ge+4>>2]=z,o()[ge+8>>2]=H,Tk(0,S,657457152,0,be,ge),Gp(xe)}function FT(S,F,z,H){F=F?Y(F):"",PT(S,F,z,H)}function MT(S){return S>2?Y(S):S}var ET=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function RT(S){S=MT(S);var F=ET[S]||(typeof document!="undefined"?document.querySelector(S):void 0);return F}function Qm(S){return RT(S)}function Bg(S,F,z){var H=Qm(S);if(!H)return-4;if(H.canvasSharedPtr&&(o()[H.canvasSharedPtr>>2]=F,o()[H.canvasSharedPtr+4>>2]=z),H.offscreenCanvas||!H.controlTransferredOffscreen){H.offscreenCanvas&&(H=H.offscreenCanvas);var xe=!1;if(H.GLctxObject&&H.GLctxObject.GLctx){var ge=H.GLctxObject.GLctx.getParameter(2978);xe=ge[0]===0&&ge[1]===0&&ge[2]===H.width&&ge[3]===H.height}H.width=F,H.height=z,xe&&H.GLctxObject.GLctx.viewport(0,0,F,z)}else if(H.canvasSharedPtr){var be=o()[H.canvasSharedPtr+8>>2];return FT(be,S,F,z),1}else return-4;return 0}function $g(S,F,z){return k?Cu(2,1,S,F,z):Bg(S,F,z)}function LT(S,F,z){var H=Qm(S);return H?Bg(S,F,z):$g(S,F,z)}function BT(S){}function $T(S,F){}function OT(S){var F=S.getExtension("ANGLE_instanced_arrays");if(F)return S.vertexAttribDivisor=function(z,H){F.vertexAttribDivisorANGLE(z,H)},S.drawArraysInstanced=function(z,H,xe,ge){F.drawArraysInstancedANGLE(z,H,xe,ge)},S.drawElementsInstanced=function(z,H,xe,ge,be){F.drawElementsInstancedANGLE(z,H,xe,ge,be)},1}function zT(S){var F=S.getExtension("OES_vertex_array_object");if(F)return S.createVertexArray=function(){return F.createVertexArrayOES()},S.deleteVertexArray=function(z){F.deleteVertexArrayOES(z)},S.bindVertexArray=function(z){F.bindVertexArrayOES(z)},S.isVertexArray=function(z){return F.isVertexArrayOES(z)},1}function GT(S){var F=S.getExtension("WEBGL_draw_buffers");if(F)return S.drawBuffers=function(z,H){F.drawBuffersWEBGL(z,H)},1}function WT(S){return!!(S.multiDrawWebgl=S.getExtension("WEBGL_multi_draw"))}var vt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(F){vt.lastError||(vt.lastError=F)},getNewId:function(S){for(var F=vt.counter++,z=S.length;z<F;z++)S[z]=null;return F},getSource:function(S,F,z,H){for(var xe="",ge=0;ge<F;++ge){var be=H?o()[H+ge*4>>2]:-1;xe+=Y(o()[z+ge*4>>2],be<0?void 0:be)}return xe},createContext:function(S,F){var z=S.getContext("webgl",F);if(!z)return 0;var H=vt.registerContext(z,F);return H},registerContext:function(S,F){var z=yl(8);o()[z+4>>2]=Su();var H={handle:z,attributes:F,version:F.majorVersion,GLctx:S};return S.canvas&&(S.canvas.GLctxObject=H),vt.contexts[z]=H,(typeof F.enableExtensionsByDefault=="undefined"||F.enableExtensionsByDefault)&&vt.initExtensions(H),z},makeContextCurrent:function(S){return vt.currentContext=vt.contexts[S],a.ctx=vu=vt.currentContext&&vt.currentContext.GLctx,!(S&&!vu)},getContext:function(S){return vt.contexts[S]},deleteContext:function(S){vt.currentContext===vt.contexts[S]&&(vt.currentContext=null),typeof rt=="object"&&rt.removeAllHandlersOnTarget(vt.contexts[S].GLctx.canvas),vt.contexts[S]&&vt.contexts[S].GLctx.canvas&&(vt.contexts[S].GLctx.canvas.GLctxObject=void 0),tf(vt.contexts[S].handle),vt.contexts[S]=null},initExtensions:function(S){if(S||(S=vt.currentContext),!S.initExtensionsDone){S.initExtensionsDone=!0;var F=S.GLctx;OT(F),zT(F),GT(F),F.disjointTimerQueryExt=F.getExtension("EXT_disjoint_timer_query"),WT(F);var z=F.getSupportedExtensions()||[];z.forEach(function(H){H.indexOf("lose_context")<0&&H.indexOf("debug")<0&&F.getExtension(H)})}},populateUniformTable:function(S){for(var F=vt.programs[S],z=vt.programInfos[S]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},H=z.uniforms,xe=vu.getProgramParameter(F,35718),ge=0;ge<xe;++ge){var be=vu.getActiveUniform(F,ge),Fe=be.name;z.maxUniformLength=Math.max(z.maxUniformLength,Fe.length+1),Fe.slice(-1)=="]"&&(Fe=Fe.slice(0,Fe.lastIndexOf("[")));var Pt=vu.getUniformLocation(F,Fe);if(Pt){var Pr=vt.getNewId(vt.uniforms);H[Fe]=[be.size,Pr],vt.uniforms[Pr]=Pt;for(var wr=1;wr<be.size;++wr){var _u=Fe+"["+wr+"]";Pt=vu.getUniformLocation(F,_u),Pr=vt.getNewId(vt.uniforms),vt.uniforms[Pr]=Pt}}}}},UT=["default","low-power","high-performance"];function KT(S,F){var z=F>>2,H=o()[z+(24>>2)],xe={alpha:!!o()[z+(0>>2)],depth:!!o()[z+(4>>2)],stencil:!!o()[z+(8>>2)],antialias:!!o()[z+(12>>2)],premultipliedAlpha:!!o()[z+(16>>2)],preserveDrawingBuffer:!!o()[z+(20>>2)],powerPreference:UT[H],failIfMajorPerformanceCaveat:!!o()[z+(28>>2)],majorVersion:o()[z+(32>>2)],minorVersion:o()[z+(36>>2)],enableExtensionsByDefault:o()[z+(40>>2)],explicitSwapControl:o()[z+(44>>2)],proxyContextToMainThread:o()[z+(48>>2)],renderViaOffscreenBackBuffer:o()[z+(52>>2)]},ge=Qm(S);if(!ge||xe.explicitSwapControl)return 0;var be=vt.createContext(ge,xe);return be}function VT(S,F){return KT(S,F)}var Bp={mappings:{},buffers:[null,[],[]],printChar:function(S,F){var z=Bp.buffers[S];F===0||F===10?((S===1?j:V)(Ke(z,0)),z.length=0):z.push(F)},varargs:void 0,get:function(){Bp.varargs+=4;var S=o()[Bp.varargs-4>>2];return S},getStr:function(S){var F=Y(S);return F},get64:function(S,F){return S}};function Og(S){return k?Cu(3,1,S):0}function zg(S,F,z,H,xe){if(k)return Cu(4,1,S,F,z,H,xe)}function Gg(S,F,z,H){if(k)return Cu(5,1,S,F,z,H);for(var xe=0,ge=0;ge<z;ge++){for(var be=o()[F+ge*8>>2],Fe=o()[F+(ge*8+4)>>2],Pt=0;Pt<Fe;Pt++)Bp.printChar(S,n()[be+Pt]);xe+=Fe}return o()[H>>2]=xe,0}function jT(S){var F=Me.threadExitHandlers.pop();S&&F()}function HT(S,F){Me.threadExitHandlers.push(function(){gr.get(S)(F)})}function Wg(S){if(k)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var F=Me.getNewWorker();if(F.pthread!==void 0)throw"Internal error!";if(!S.pthread_ptr)throw"Internal error, no pthread ptr!";Me.runningWorkers.push(F);for(var z=yl(128*4),H=0;H<128;++H)o()[z+H*4>>2]=0;var xe=S.stackBase+S.stackSize,ge=Me.pthreads[S.pthread_ptr]={worker:F,stackBase:S.stackBase,stackSize:S.stackSize,allocatedOwnStack:S.allocatedOwnStack,threadInfoStruct:S.pthread_ptr},be=ge.threadInfoStruct>>2;Atomics.store(s(),be+(64>>2),S.detached),Atomics.store(s(),be+(100>>2),z),Atomics.store(s(),be+(40>>2),ge.threadInfoStruct),Atomics.store(s(),be+(80>>2),S.stackSize),Atomics.store(s(),be+(76>>2),xe),Atomics.store(s(),be+(104>>2),S.stackSize),Atomics.store(s(),be+(104+8>>2),xe),Atomics.store(s(),be+(104+12>>2),S.detached);var Fe=$N(),Pt=Fe+40;Atomics.store(s(),be+(172>>2),Pt),F.pthread=ge;var Pr={cmd:"run",start_routine:S.startRoutine,arg:S.arg,threadInfoStruct:S.pthread_ptr,stackBase:S.stackBase,stackSize:S.stackSize};F.runPthread=function(){Pr.time=performance.now(),F.postMessage(Pr,S.transferList)},F.loaded&&(F.runPthread(),delete F.runPthread)}function qT(S,F,z,H){if(typeof SharedArrayBuffer=="undefined")return V("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!S)return V("pthread_create called with a null thread pointer!"),28;var xe=[],ge=0;if(k&&(xe.length===0||ge))return UN(687865856,S,F,z,H);if(ge)return ge;var be=0,Fe=0,Pt=0;F&&F!=-1?(be=o()[F>>2],be+=81920,Fe=o()[F+8>>2],Pt=o()[F+12>>2]!==0):be=2097152;var Pr=Fe==0;Pr?Fe=jN(16,be):(Fe-=be,Te(Fe>0));for(var wr=yl(228),_u=0;_u<228>>2;++_u)s()[(wr>>2)+_u]=0;o()[S>>2]=wr,o()[wr+12>>2]=wr;var Kp=wr+152;o()[Kp>>2]=Kp;var nn={stackBase:Fe,stackSize:be,allocatedOwnStack:Pr,detached:Pt,startRoutine:z,pthread_ptr:wr,arg:H,transferList:xe};return k?(nn.cmd="spawnThread",postMessage(nn,xe)):Wg(nn),0}function XT(){if(!!k){var S=Su();if(!!S){var F=Atomics.load(s(),S+56>>2);if(!F){var z=Atomics.load(s(),S+0>>2);if(z==2)throw"Canceled!"}}}}function YT(){y||x||q("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function QT(S,F,z){if(!S)return V("pthread_join attempted on a null thread pointer!"),Iu.ESRCH;if(k&&Su()==S)return V("PThread "+S+" is attempting to join to itself!"),Iu.EDEADLK;if(!k&&GN()==S)return V("Main thread "+S+" is attempting to join to itself!"),Iu.EDEADLK;var H=o()[S+12>>2];if(H!==S)return V("pthread_join attempted on thread "+S+", which does not point to a valid thread, or does not exist anymore!"),Iu.ESRCH;var xe=Atomics.load(s(),S+64>>2);if(xe)return V("Attempted to join thread "+S+", which was already detached!"),Iu.EINVAL;for(z&&YT();;){var ge=Atomics.load(s(),S+0>>2);if(ge==1){var be=Atomics.load(s(),S+4>>2);return F&&(o()[F>>2]=be),Atomics.store(s(),S+64>>2,1),k?postMessage({cmd:"cleanupThread",thread:S}):Rg(S),0}if(!z)return Iu.EBUSY;XT(),k||Xg(),Lg(S+0,ge,k?100:1)}}function ZT(S,F){return QT(S,F,!0)}function Ug(S){if(k)return Cu(6,1,S);switch(S){case 30:return 16384;case 85:var F=2147483648;return F/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return bT(28),-1}k||Me.initMainThreadBlock();var vu,JT=[null,yT,$g,Og,zg,Gg,Ug],ek={e:hT,r:gT,x:xT,b:TT,y:kT,j:IT,d:Lg,c:qm,f:bl,p:CT,A:vT,u:ST,q:NT,v:LT,i:BT,s:$T,w:VT,l:Og,n:zg,g:Gg,o:lT,a:se||a.wasmMemory,z:jT,k:HT,h:qT,m:ZT,t:Ug},LN=uT(),Kg=a.___wasm_call_ctors=function(){return(Kg=a.___wasm_call_ctors=a.asm.B).apply(null,arguments)},tk=a._init=function(){return(tk=a._init=a.asm.C).apply(null,arguments)},rk=a._init_with_threads_count=function(){return(rk=a._init_with_threads_count=a.asm.D).apply(null,arguments)},nk=a._get_threads_count=function(){return(nk=a._get_threads_count=a.asm.E).apply(null,arguments)},ok=a._register_tensor=function(){return(ok=a._register_tensor=a.asm.F).apply(null,arguments)},sk=a._dispose_data=function(){return(sk=a._dispose_data=a.asm.G).apply(null,arguments)},ak=a._dispose=function(){return(ak=a._dispose=a.asm.H).apply(null,arguments)},ik=a._Abs=function(){return(ik=a._Abs=a.asm.I).apply(null,arguments)},uk=a._Add=function(){return(uk=a._Add=a.asm.J).apply(null,arguments)},lk=a._AddN=function(){return(lk=a._AddN=a.asm.K).apply(null,arguments)},pk=a._All=function(){return(pk=a._All=a.asm.L).apply(null,arguments)},ck=a._Any=function(){return(ck=a._Any=a.asm.M).apply(null,arguments)},mk=a._ArgMax=function(){return(mk=a._ArgMax=a.asm.N).apply(null,arguments)},fk=a._AvgPool=function(){return(fk=a._AvgPool=a.asm.O).apply(null,arguments)},dk=a._BatchMatMul=function(){return(dk=a._BatchMatMul=a.asm.P).apply(null,arguments)},hk=a._Ceil=function(){return(hk=a._Ceil=a.asm.Q).apply(null,arguments)},gk=a._ClipByValue=function(){return(gk=a._ClipByValue=a.asm.R).apply(null,arguments)},bk=a._Conv2D=function(){return(bk=a._Conv2D=a.asm.S).apply(null,arguments)},Vg=a._Conv2DBackpropInput=function(){return(Vg=a._Conv2DBackpropInput=a.asm.T).apply(null,arguments)},jg=a._Cos=function(){return(jg=a._Cos=a.asm.U).apply(null,arguments)},Zm=a._Cosh=function(){return(Zm=a._Cosh=a.asm.V).apply(null,arguments)},$p=a._CropAndResize=function(){return($p=a._CropAndResize=a.asm.W).apply(null,arguments)},yk=a._Cumsum=function(){return(yk=a._Cumsum=a.asm.X).apply(null,arguments)},Jm=a._DepthToSpace=function(){return(Jm=a._DepthToSpace=a.asm.Y).apply(null,arguments)},Op=a._DepthwiseConv2dNative=function(){return(Op=a._DepthwiseConv2dNative=a.asm.Z).apply(null,arguments)},zp=a._Elu=function(){return(zp=a._Elu=a.asm._).apply(null,arguments)},xk=a._Equal=function(){return(xk=a._Equal=a.asm.$).apply(null,arguments)},Q=a._Exp=function(){return(Q=a._Exp=a.asm.aa).apply(null,arguments)},ae=a._FlipLeftRight=function(){return(ae=a._FlipLeftRight=a.asm.ba).apply(null,arguments)},Ne=a._Floor=function(){return(Ne=a._Floor=a.asm.ca).apply(null,arguments)},yt=a._FloorDiv=function(){return(yt=a._FloorDiv=a.asm.da).apply(null,arguments)},pr=a._FusedBatchNorm=function(){return(pr=a._FusedBatchNorm=a.asm.ea).apply(null,arguments)},tr=a._FusedConv2D=function(){return(tr=a._FusedConv2D=a.asm.fa).apply(null,arguments)},it=a._FusedDepthwiseConv2D=function(){return(it=a._FusedDepthwiseConv2D=a.asm.ga).apply(null,arguments)},lt=a._Gather=function(){return(lt=a._Gather=a.asm.ha).apply(null,arguments)},Gr=a._GatherNd=function(){return(Gr=a._GatherNd=a.asm.ia).apply(null,arguments)},xi=a._Greater=function(){return(xi=a._Greater=a.asm.ja).apply(null,arguments)},Ti=a._GreaterEqual=function(){return(Ti=a._GreaterEqual=a.asm.ka).apply(null,arguments)},Hg=a._LeakyRelu=function(){return(Hg=a._LeakyRelu=a.asm.la).apply(null,arguments)},ef=a._Less=function(){return(ef=a._Less=a.asm.ma).apply(null,arguments)},$n=a._LessEqual=function(){return($n=a._LessEqual=a.asm.na).apply(null,arguments)},wu=a._Log=function(){return(wu=a._Log=a.asm.oa).apply(null,arguments)},qg=a._LogicalAnd=function(){return(qg=a._LogicalAnd=a.asm.pa).apply(null,arguments)},L4=a._Max=function(){return(L4=a._Max=a.asm.qa).apply(null,arguments)},B4=a._MaxPool=function(){return(B4=a._MaxPool=a.asm.ra).apply(null,arguments)},$4=a._Maximum=function(){return($4=a._Maximum=a.asm.sa).apply(null,arguments)},O4=a._Mean=function(){return(O4=a._Mean=a.asm.ta).apply(null,arguments)},z4=a._Min=function(){return(z4=a._Min=a.asm.ua).apply(null,arguments)},G4=a._Minimum=function(){return(G4=a._Minimum=a.asm.va).apply(null,arguments)},W4=a._MirrorPad=function(){return(W4=a._MirrorPad=a.asm.wa).apply(null,arguments)},U4=a._Multiply=function(){return(U4=a._Multiply=a.asm.xa).apply(null,arguments)},K4=a._Neg=function(){return(K4=a._Neg=a.asm.ya).apply(null,arguments)},V4=a._NonMaxSuppressionV3=function(){return(V4=a._NonMaxSuppressionV3=a.asm.za).apply(null,arguments)},j4=a._NonMaxSuppressionV4=function(){return(j4=a._NonMaxSuppressionV4=a.asm.Aa).apply(null,arguments)},H4=a._NonMaxSuppressionV5=function(){return(H4=a._NonMaxSuppressionV5=a.asm.Ba).apply(null,arguments)},q4=a._NotEqual=function(){return(q4=a._NotEqual=a.asm.Ca).apply(null,arguments)},X4=a._OneHot=function(){return(X4=a._OneHot=a.asm.Da).apply(null,arguments)},Y4=a._PadV2=function(){return(Y4=a._PadV2=a.asm.Ea).apply(null,arguments)},Q4=a._Pow=function(){return(Q4=a._Pow=a.asm.Fa).apply(null,arguments)},Z4=a._Prelu=function(){return(Z4=a._Prelu=a.asm.Ga).apply(null,arguments)},J4=a._Prod=function(){return(J4=a._Prod=a.asm.Ha).apply(null,arguments)},ej=a._RealDiv=function(){return(ej=a._RealDiv=a.asm.Ia).apply(null,arguments)},tj=a._Relu=function(){return(tj=a._Relu=a.asm.Ja).apply(null,arguments)},rj=a._Relu6=function(){return(rj=a._Relu6=a.asm.Ka).apply(null,arguments)},nj=a._ResizeBilinear=function(){return(nj=a._ResizeBilinear=a.asm.La).apply(null,arguments)},oj=a._Reverse=function(){return(oj=a._Reverse=a.asm.Ma).apply(null,arguments)},sj=a._RotateWithOffset=function(){return(sj=a._RotateWithOffset=a.asm.Na).apply(null,arguments)},aj=a._Round=function(){return(aj=a._Round=a.asm.Oa).apply(null,arguments)},ij=a._Rsqrt=function(){return(ij=a._Rsqrt=a.asm.Pa).apply(null,arguments)},uj=a._ScatterNd=function(){return(uj=a._ScatterNd=a.asm.Qa).apply(null,arguments)},lj=a._SelectV2=function(){return(lj=a._SelectV2=a.asm.Ra).apply(null,arguments)},pj=a._Sigmoid=function(){return(pj=a._Sigmoid=a.asm.Sa).apply(null,arguments)},cj=a._Sin=function(){return(cj=a._Sin=a.asm.Ta).apply(null,arguments)},mj=a._Softmax=function(){return(mj=a._Softmax=a.asm.Ua).apply(null,arguments)},fj=a._Sqrt=function(){return(fj=a._Sqrt=a.asm.Va).apply(null,arguments)},dj=a._Square=function(){return(dj=a._Square=a.asm.Wa).apply(null,arguments)},hj=a._SquaredDifference=function(){return(hj=a._SquaredDifference=a.asm.Xa).apply(null,arguments)},gj=a._Step=function(){return(gj=a._Step=a.asm.Ya).apply(null,arguments)},bj=a._StridedSlice=function(){return(bj=a._StridedSlice=a.asm.Za).apply(null,arguments)},yj=a._Sub=function(){return(yj=a._Sub=a.asm._a).apply(null,arguments)},xj=a._Sum=function(){return(xj=a._Sum=a.asm.$a).apply(null,arguments)},Tj=a._Tan=function(){return(Tj=a._Tan=a.asm.ab).apply(null,arguments)},kj=a._Tanh=function(){return(kj=a._Tanh=a.asm.bb).apply(null,arguments)},Ij=a._Tile=function(){return(Ij=a._Tile=a.asm.cb).apply(null,arguments)},Cj=a._TopK=function(){return(Cj=a._TopK=a.asm.db).apply(null,arguments)},vj=a._Transform=function(){return(vj=a._Transform=a.asm.eb).apply(null,arguments)},wj=a._Transpose=function(){return(wj=a._Transpose=a.asm.fb).apply(null,arguments)},Sj=a.__FusedMatMul=function(){return(Sj=a.__FusedMatMul=a.asm.gb).apply(null,arguments)},yl=a._malloc=function(){return(yl=a._malloc=a.asm.hb).apply(null,arguments)},tf=a._free=function(){return(tf=a._free=a.asm.ib).apply(null,arguments)},BN=a.___errno_location=function(){return(BN=a.___errno_location=a.asm.jb).apply(null,arguments)},$N=a._emscripten_get_global_libc=function(){return($N=a._emscripten_get_global_libc=a.asm.lb).apply(null,arguments)},Su=a._pthread_self=function(){return(Su=a._pthread_self=a.asm.mb).apply(null,arguments)},ON=a.___pthread_tsd_run_dtors=function(){return(ON=a.___pthread_tsd_run_dtors=a.asm.nb).apply(null,arguments)},Xg=a._emscripten_main_thread_process_queued_calls=function(){return(Xg=a._emscripten_main_thread_process_queued_calls=a.asm.ob).apply(null,arguments)},_j=a._emscripten_current_thread_process_queued_calls=function(){return(_j=a._emscripten_current_thread_process_queued_calls=a.asm.pb).apply(null,arguments)},zN=a._emscripten_register_main_browser_thread_id=function(){return(zN=a._emscripten_register_main_browser_thread_id=a.asm.qb).apply(null,arguments)},GN=a._emscripten_main_browser_thread_id=function(){return(GN=a._emscripten_main_browser_thread_id=a.asm.rb).apply(null,arguments)},WN=a.__emscripten_do_dispatch_to_thread=function(){return(WN=a.__emscripten_do_dispatch_to_thread=a.asm.sb).apply(null,arguments)},UN=a._emscripten_sync_run_in_main_thread_4=function(){return(UN=a._emscripten_sync_run_in_main_thread_4=a.asm.tb).apply(null,arguments)},KN=a._emscripten_run_in_main_runtime_thread_js=function(){return(KN=a._emscripten_run_in_main_runtime_thread_js=a.asm.ub).apply(null,arguments)},Tk=a.__emscripten_call_on_thread=function(){return(Tk=a.__emscripten_call_on_thread=a.asm.vb).apply(null,arguments)},Aj=a._emscripten_tls_init=function(){return(Aj=a._emscripten_tls_init=a.asm.wb).apply(null,arguments)},kk=a.__emscripten_thread_init=function(){return(kk=a.__emscripten_thread_init=a.asm.xb).apply(null,arguments)},rf=a.stackSave=function(){return(rf=a.stackSave=a.asm.yb).apply(null,arguments)},Gp=a.stackRestore=function(){return(Gp=a.stackRestore=a.asm.zb).apply(null,arguments)},Wp=a.stackAlloc=function(){return(Wp=a.stackAlloc=a.asm.Ab).apply(null,arguments)},VN=a._emscripten_stack_set_limits=function(){return(VN=a._emscripten_stack_set_limits=a.asm.Bb).apply(null,arguments)},jN=a._memalign=function(){return(jN=a._memalign=a.asm.Cb).apply(null,arguments)},HN=a.__emscripten_allow_main_runtime_queued_calls=10120,Up=a.__emscripten_main_thread_futex=10332;a.cwrap=$e,a.PThread=Me,a.PThread=Me,a.wasmMemory=se,a.ExitStatus=nf;var Yg;function nf(S){this.name="ExitStatus",this.message="Program terminated with exit("+S+")",this.status=S}hl=function S(){Yg||Ik(),Yg||(hl=S)};function Ik(S){if(S=S||f,os>0)return;if(k){u(a),Ag(),postMessage({cmd:"loaded"});return}if(_g(),os>0)return;function F(){Yg||(Yg=!0,a.calledRun=!0,!ye&&(Ag(),Ng(),u(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),Dg()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),F()},1)):F()}a.run=Ik;function Nj(S,F){if(!(F&&ie&&S===0)){if(!F&&k)throw postMessage({cmd:"exitProcess",returnCode:S}),new nf(S);ie||(Me.terminateAllThreads(),de=S,kn(),a.onExit&&a.onExit(S),ye=!0),h(S,new nf(S))}}if(a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();k&&(ie=!1,Me.initWorker()),Ik();var Qg;p&&(Qg={uncaughtException:process.listeners("uncaughtException").filter(function(S){return!p.uncaughtException.indexOf(S)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(S){return!p.unhandledRejection.indexOf(S)>-1})});var Zg;if(typeof WasmBackendModule!="undefined")Zg=WasmBackendModule;else if(typeof e!="undefined")Zg=e;else throw new Error("Could not find wasm module in post.js");if(Qg){var Dj=Zg._dispose;Zg._dispose=function(){Dj(),Qg.uncaughtException.forEach(function(S){process.removeListener("uncaughtException",S)}),Qg.unhandledRejection.forEach(function(S){process.removeListener("unhandledRejection",S)})}}return e.ready}}();typeof Qx=="object"&&typeof DN=="object"?DN.exports=NN:typeof define=="function"&&define.amd?define([],function(){return NN}):typeof Qx=="object"&&(Qx.WasmBackendModuleThreadedSimd=NN)});var P4=Sr((Zx,FN)=>{var PN=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(e){e=e||{};var t=typeof e!="undefined"?e:{},n,o;t.ready=new Promise(function(Q,ae){n=Q,o=ae});var s;typeof process!="undefined"&&process.listeners&&(s={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var i={},a;for(a in t)t.hasOwnProperty(a)&&(i[a]=t[a]);var u=[],l="./this.program",p=function(Q,ae){throw ae},c=!1,m=!1,f=!1,d=!1;c=typeof window=="object",m=typeof importScripts=="function",f=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",d=!c&&!f&&!m;var h="";function g(Q){return t.locateFile?t.locateFile(Q,h):h+Q}var x,y,T,k,C,N;f?(m?h=Km().dirname(h)+"/":h=__dirname+"/",x=function(ae,Ne){return C||(C=Ph()),N||(N=Km()),ae=N.normalize(ae),C.readFileSync(ae,Ne?null:"utf8")},T=function(ae){var Ne=x(ae,!0);return Ne.buffer||(Ne=new Uint8Array(Ne)),j(Ne.buffer),Ne},process.argv.length>1&&(l=process.argv[1].replace(/\\/g,"/")),u=process.argv.slice(2),process.on("uncaughtException",function(Q){if(!(Q instanceof yk))throw Q}),process.on("unhandledRejection",Bn),p=function(Q){process.exit(Q)},t.inspect=function(){return"[Emscripten Module object]"}):d?(typeof read!="undefined"&&(x=function(ae){return read(ae)}),T=function(ae){var Ne;return typeof readbuffer=="function"?new Uint8Array(readbuffer(ae)):(Ne=read(ae,"binary"),j(typeof Ne=="object"),Ne)},typeof scriptArgs!="undefined"?u=scriptArgs:typeof arguments!="undefined"&&(u=arguments),typeof quit=="function"&&(p=function(Q){quit(Q)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(c||m)&&(m?h=self.location.href:typeof document!="undefined"&&document.currentScript&&(h=document.currentScript.src),r&&(h=r),h.indexOf("blob:")!==0?h=h.substr(0,h.lastIndexOf("/")+1):h="",x=function(Q){var ae=new XMLHttpRequest;return ae.open("GET",Q,!1),ae.send(null),ae.responseText},m&&(T=function(Q){var ae=new XMLHttpRequest;return ae.open("GET",Q,!1),ae.responseType="arraybuffer",ae.send(null),new Uint8Array(ae.response)}),y=function(Q,ae,Ne){var yt=new XMLHttpRequest;yt.open("GET",Q,!0),yt.responseType="arraybuffer",yt.onload=function(){if(yt.status==200||yt.status==0&&yt.response){ae(yt.response);return}Ne()},yt.onerror=Ne,yt.send(null)},k=function(Q){document.title=Q});var A=t.print||console.log.bind(console),M=t.printErr||console.warn.bind(console);for(a in i)i.hasOwnProperty(a)&&(t[a]=i[a]);i=null,t.arguments&&(u=t.arguments),t.thisProgram&&(l=t.thisProgram),t.quit&&(p=t.quit);var E;t.wasmBinary&&(E=t.wasmBinary);var B=t.noExitRuntime||!0;typeof WebAssembly!="object"&&Bn("no native wasm support detected");var W,U=!1,K;function j(Q,ae){Q||Bn("Assertion failed: "+ae)}function V(Q){var ae=t["_"+Q];return j(ae,"Cannot call unknown function "+Q+", make sure it is exported"),ae}function q(Q,ae,Ne,yt,pr){var tr={string:function($n){var wu=0;if($n!=null&&$n!==0){var qg=($n.length<<2)+1;wu=Zm(qg),se($n,wu,qg)}return wu},array:function($n){var wu=Zm($n.length);return ue($n,wu),wu}};function it($n){return ae==="string"?oe($n):ae==="boolean"?Boolean($n):$n}var lt=V(Q),Gr=[],xi=0;if(yt)for(var Ti=0;Ti<yt.length;Ti++){var Hg=tr[Ne[Ti]];Hg?(xi===0&&(xi=Vg()),Gr[Ti]=Hg(yt[Ti])):Gr[Ti]=yt[Ti]}var ef=lt.apply(null,Gr);return ef=it(ef),xi!==0&&jg(xi),ef}function ee(Q,ae,Ne,yt){Ne=Ne||[];var pr=Ne.every(function(it){return it==="number"}),tr=ae!=="string";return tr&&pr&&!yt?V(Q):function(){return q(Q,ae,Ne,arguments,yt)}}var Z=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function te(Q,ae,Ne){for(var yt=ae+Ne,pr=ae;Q[pr]&&!(pr>=yt);)++pr;if(pr-ae>16&&Q.subarray&&Z)return Z.decode(Q.subarray(ae,pr));for(var tr="";ae<pr;){var it=Q[ae++];if(!(it&128)){tr+=String.fromCharCode(it);continue}var lt=Q[ae++]&63;if((it&224)==192){tr+=String.fromCharCode((it&31)<<6|lt);continue}var Gr=Q[ae++]&63;if((it&240)==224?it=(it&15)<<12|lt<<6|Gr:it=(it&7)<<18|lt<<12|Gr<<6|Q[ae++]&63,it<65536)tr+=String.fromCharCode(it);else{var xi=it-65536;tr+=String.fromCharCode(55296|xi>>10,56320|xi&1023)}}return tr}function oe(Q,ae){return Q?te(Se,Q,ae):""}function ie(Q,ae,Ne,yt){if(!(yt>0))return 0;for(var pr=Ne,tr=Ne+yt-1,it=0;it<Q.length;++it){var lt=Q.charCodeAt(it);if(lt>=55296&&lt<=57343){var Gr=Q.charCodeAt(++it);lt=65536+((lt&1023)<<10)|Gr&1023}if(lt<=127){if(Ne>=tr)break;ae[Ne++]=lt}else if(lt<=2047){if(Ne+1>=tr)break;ae[Ne++]=192|lt>>6,ae[Ne++]=128|lt&63}else if(lt<=65535){if(Ne+2>=tr)break;ae[Ne++]=224|lt>>12,ae[Ne++]=128|lt>>6&63,ae[Ne++]=128|lt&63}else{if(Ne+3>=tr)break;ae[Ne++]=240|lt>>18,ae[Ne++]=128|lt>>12&63,ae[Ne++]=128|lt>>6&63,ae[Ne++]=128|lt&63}}return ae[Ne]=0,Ne-pr}function se(Q,ae,Ne){return ie(Q,Se,ae,Ne)}function ue(Q,ae){Te.set(Q,ae)}function ye(Q,ae){return Q%ae>0&&(Q+=ae-Q%ae),Q}var de,Te,Se,Be,$e,Ke,Y,bt,Ct;function Dt(Q){de=Q,t.HEAP8=Te=new Int8Array(Q),t.HEAP16=Be=new Int16Array(Q),t.HEAP32=Ke=new Int32Array(Q),t.HEAPU8=Se=new Uint8Array(Q),t.HEAPU16=$e=new Uint16Array(Q),t.HEAPU32=Y=new Uint32Array(Q),t.HEAPF32=bt=new Float32Array(Q),t.HEAPF64=Ct=new Float64Array(Q)}var Gt=t.INITIAL_MEMORY||16777216,ht,st=[],Wt=[],Rn=[],lr=[],es=!1;Wt.push({func:function(){Mg()}});function Or(){if(t.preRun)for(typeof t.preRun=="function"&&(t.preRun=[t.preRun]);t.preRun.length;)zr(t.preRun.shift());os(st)}function ts(){es=!0,os(Wt)}function Tn(){os(Rn)}function Ln(){if(t.postRun)for(typeof t.postRun=="function"&&(t.postRun=[t.postRun]);t.postRun.length;)Zn(t.postRun.shift());os(lr)}function zr(Q){st.unshift(Q)}function Zn(Q){lr.unshift(Q)}var gr=0,rs=null,ns=null;function dl(Q){gr++,t.monitorRunDependencies&&t.monitorRunDependencies(gr)}function Vm(Q){if(gr--,t.monitorRunDependencies&&t.monitorRunDependencies(gr),gr==0&&(rs!==null&&(clearInterval(rs),rs=null),ns)){var ae=ns;ns=null,ae()}}t.preloadedImages={},t.preloadedAudios={};function Bn(Q){t.onAbort&&t.onAbort(Q),Q+="",M(Q),U=!0,K=1,Q="abort("+Q+"). Build with -s ASSERTIONS=1 for more info.";var ae=new WebAssembly.RuntimeError(Q);throw o(ae),ae}function Rp(Q,ae){return String.prototype.startsWith?Q.startsWith(ae):Q.indexOf(ae)===0}var jm="data:application/octet-stream;base64,";function _g(Q){return Rp(Q,jm)}var Ag="file://";function Ng(Q){return Rp(Q,Ag)}var kn="tfjs-backend-wasm.wasm";_g(kn)||(kn=g(kn));function Dg(Q){try{if(Q==kn&&E)return new Uint8Array(E);if(T)return T(Q);throw"both async and sync fetching of the wasm failed"}catch(ae){Bn(ae)}}function tT(){if(!E&&(c||m)){if(typeof fetch=="function"&&!Ng(kn))return fetch(kn,{credentials:"same-origin"}).then(function(Q){if(!Q.ok)throw"failed to load wasm binary file at '"+kn+"'";return Q.arrayBuffer()}).catch(function(){return Dg(kn)});if(y)return new Promise(function(Q,ae){y(kn,function(Ne){Q(new Uint8Array(Ne))},ae)})}return Promise.resolve().then(function(){return Dg(kn)})}function rT(){var Q={a:In};function ae(it,lt){var Gr=it.exports;t.asm=Gr,W=t.asm.h,Dt(W.buffer),ht=t.asm.Sa,Vm("wasm-instantiate")}dl("wasm-instantiate");function Ne(it){ae(it.instance)}function yt(it){return tT().then(function(lt){return WebAssembly.instantiate(lt,Q)}).then(it,function(lt){M("failed to asynchronously prepare wasm: "+lt),Bn(lt)})}function pr(){return!E&&typeof WebAssembly.instantiateStreaming=="function"&&!_g(kn)&&!Ng(kn)&&typeof fetch=="function"?fetch(kn,{credentials:"same-origin"}).then(function(it){var lt=WebAssembly.instantiateStreaming(it,Q);return lt.then(Ne,function(Gr){return M("wasm streaming compile failed: "+Gr),M("falling back to ArrayBuffer instantiation"),yt(Ne)})}):yt(Ne)}if(t.instantiateWasm)try{var tr=t.instantiateWasm(Q,ae);return tr}catch(it){return M("Module.instantiateWasm callback failed with error: "+it),!1}return pr().catch(o),{}}function os(Q){for(;Q.length>0;){var ae=Q.shift();if(typeof ae=="function"){ae(t);continue}var Ne=ae.func;typeof Ne=="number"?ae.arg===void 0?ht.get(Ne)():ht.get(Ne)(ae.arg):Ne(ae.arg===void 0?null:ae.arg)}}function Hm(){Bn()}function hl(Q,ae,Ne){Se.copyWithin(Q,ae,ae+Ne)}function nT(){return Se.length}function oT(Q){try{return W.grow(Q-de.byteLength+65535>>>16),Dt(W.buffer),1}catch{}}function yi(Q){var ae=nT(),Ne=2147483648;if(Q>Ne)return!1;for(var yt=1;yt<=4;yt*=2){var pr=ae*(1+.2/yt);pr=Math.min(pr,Q+100663296);var tr=Math.min(Ne,ye(Math.max(Q,pr),65536)),it=oT(tr);if(it)return!0}return!1}var gl={mappings:{},buffers:[null,[],[]],printChar:function(Q,ae){var Ne=gl.buffers[Q];ae===0||ae===10?((Q===1?A:M)(te(Ne,0)),Ne.length=0):Ne.push(ae)},varargs:void 0,get:function(){gl.varargs+=4;var Q=Ke[gl.varargs-4>>2];return Q},getStr:function(Q){var ae=oe(Q);return ae},get64:function(Q,ae){return Q}};function sT(Q){return 0}function Pg(Q,ae,Ne,yt,pr){}function aT(Q,ae,Ne,yt){for(var pr=0,tr=0;tr<Ne;tr++){for(var it=Ke[ae+tr*8>>2],lt=Ke[ae+(tr*8+4)>>2],Gr=0;Gr<lt;Gr++)gl.printChar(Q,Se[it+Gr]);pr+=lt}return Ke[yt>>2]=pr,0}function Fg(){return 28}var In={a:Hm,d:hl,e:yi,f:sT,c:Pg,b:aT,g:Fg},iT=rT(),Mg=t.___wasm_call_ctors=function(){return(Mg=t.___wasm_call_ctors=t.asm.i).apply(null,arguments)},uT=t._init=function(){return(uT=t._init=t.asm.j).apply(null,arguments)},Eg=t._init_with_threads_count=function(){return(Eg=t._init_with_threads_count=t.asm.k).apply(null,arguments)},lT=t._get_threads_count=function(){return(lT=t._get_threads_count=t.asm.l).apply(null,arguments)},Lp=t._register_tensor=function(){return(Lp=t._register_tensor=t.asm.m).apply(null,arguments)},Iu=t._dispose_data=function(){return(Iu=t._dispose_data=t.asm.n).apply(null,arguments)},qm=t._dispose=function(){return(qm=t._dispose=t.asm.o).apply(null,arguments)},pT=t._Abs=function(){return(pT=t._Abs=t.asm.p).apply(null,arguments)},cT=t._Add=function(){return(cT=t._Add=t.asm.q).apply(null,arguments)},Rg=t._AddN=function(){return(Rg=t._AddN=t.asm.r).apply(null,arguments)},Me=t._All=function(){return(Me=t._All=t.asm.s).apply(null,arguments)},mT=t._Any=function(){return(mT=t._Any=t.asm.t).apply(null,arguments)},fT=t._ArgMax=function(){return(fT=t._ArgMax=t.asm.u).apply(null,arguments)},dT=t._AvgPool=function(){return(dT=t._AvgPool=t.asm.v).apply(null,arguments)},hT=t._BatchMatMul=function(){return(hT=t._BatchMatMul=t.asm.w).apply(null,arguments)},gT=t._Ceil=function(){return(gT=t._Ceil=t.asm.x).apply(null,arguments)},bl=t._ClipByValue=function(){return(bl=t._ClipByValue=t.asm.y).apply(null,arguments)},bT=t._Conv2D=function(){return(bT=t._Conv2D=t.asm.z).apply(null,arguments)},yT=t._Conv2DBackpropInput=function(){return(yT=t._Conv2DBackpropInput=t.asm.A).apply(null,arguments)},xT=t._Cos=function(){return(xT=t._Cos=t.asm.B).apply(null,arguments)},TT=t._Cosh=function(){return(TT=t._Cosh=t.asm.C).apply(null,arguments)},kT=t._CropAndResize=function(){return(kT=t._CropAndResize=t.asm.D).apply(null,arguments)},IT=t._Cumsum=function(){return(IT=t._Cumsum=t.asm.E).apply(null,arguments)},Lg=t._DepthToSpace=function(){return(Lg=t._DepthToSpace=t.asm.F).apply(null,arguments)},CT=t._DepthwiseConv2dNative=function(){return(CT=t._DepthwiseConv2dNative=t.asm.G).apply(null,arguments)},vT=t._Elu=function(){return(vT=t._Elu=t.asm.H).apply(null,arguments)},Cu=t._Equal=function(){return(Cu=t._Equal=t.asm.I).apply(null,arguments)},Xm=t._Exp=function(){return(Xm=t._Exp=t.asm.J).apply(null,arguments)},Ym=t._FlipLeftRight=function(){return(Ym=t._FlipLeftRight=t.asm.K).apply(null,arguments)},wT=t._Floor=function(){return(wT=t._Floor=t.asm.L).apply(null,arguments)},ST=t._FloorDiv=function(){return(ST=t._FloorDiv=t.asm.M).apply(null,arguments)},_T=t._FusedBatchNorm=function(){return(_T=t._FusedBatchNorm=t.asm.N).apply(null,arguments)},AT=t._FusedConv2D=function(){return(AT=t._FusedConv2D=t.asm.O).apply(null,arguments)},NT=t._FusedDepthwiseConv2D=function(){return(NT=t._FusedDepthwiseConv2D=t.asm.P).apply(null,arguments)},rt=t._Gather=function(){return(rt=t._Gather=t.asm.Q).apply(null,arguments)},DT=t._GatherNd=function(){return(DT=t._GatherNd=t.asm.R).apply(null,arguments)},PT=t._Greater=function(){return(PT=t._Greater=t.asm.S).apply(null,arguments)},FT=t._GreaterEqual=function(){return(FT=t._GreaterEqual=t.asm.T).apply(null,arguments)},MT=t._LeakyRelu=function(){return(MT=t._LeakyRelu=t.asm.U).apply(null,arguments)},ET=t._Less=function(){return(ET=t._Less=t.asm.V).apply(null,arguments)},RT=t._LessEqual=function(){return(RT=t._LessEqual=t.asm.W).apply(null,arguments)},Qm=t._Log=function(){return(Qm=t._Log=t.asm.X).apply(null,arguments)},Bg=t._LogicalAnd=function(){return(Bg=t._LogicalAnd=t.asm.Y).apply(null,arguments)},$g=t._Max=function(){return($g=t._Max=t.asm.Z).apply(null,arguments)},LT=t._MaxPool=function(){return(LT=t._MaxPool=t.asm._).apply(null,arguments)},BT=t._Maximum=function(){return(BT=t._Maximum=t.asm.$).apply(null,arguments)},$T=t._Mean=function(){return($T=t._Mean=t.asm.aa).apply(null,arguments)},OT=t._Min=function(){return(OT=t._Min=t.asm.ba).apply(null,arguments)},zT=t._Minimum=function(){return(zT=t._Minimum=t.asm.ca).apply(null,arguments)},GT=t._MirrorPad=function(){return(GT=t._MirrorPad=t.asm.da).apply(null,arguments)},WT=t._Multiply=function(){return(WT=t._Multiply=t.asm.ea).apply(null,arguments)},vt=t._Neg=function(){return(vt=t._Neg=t.asm.fa).apply(null,arguments)},UT=t._NonMaxSuppressionV3=function(){return(UT=t._NonMaxSuppressionV3=t.asm.ga).apply(null,arguments)},KT=t._NonMaxSuppressionV4=function(){return(KT=t._NonMaxSuppressionV4=t.asm.ha).apply(null,arguments)},VT=t._NonMaxSuppressionV5=function(){return(VT=t._NonMaxSuppressionV5=t.asm.ia).apply(null,arguments)},Bp=t._NotEqual=function(){return(Bp=t._NotEqual=t.asm.ja).apply(null,arguments)},Og=t._OneHot=function(){return(Og=t._OneHot=t.asm.ka).apply(null,arguments)},zg=t._PadV2=function(){return(zg=t._PadV2=t.asm.la).apply(null,arguments)},Gg=t._Pow=function(){return(Gg=t._Pow=t.asm.ma).apply(null,arguments)},jT=t._Prelu=function(){return(jT=t._Prelu=t.asm.na).apply(null,arguments)},HT=t._Prod=function(){return(HT=t._Prod=t.asm.oa).apply(null,arguments)},Wg=t._RealDiv=function(){return(Wg=t._RealDiv=t.asm.pa).apply(null,arguments)},qT=t._Relu=function(){return(qT=t._Relu=t.asm.qa).apply(null,arguments)},XT=t._Relu6=function(){return(XT=t._Relu6=t.asm.ra).apply(null,arguments)},YT=t._ResizeBilinear=function(){return(YT=t._ResizeBilinear=t.asm.sa).apply(null,arguments)},QT=t._Reverse=function(){return(QT=t._Reverse=t.asm.ta).apply(null,arguments)},ZT=t._RotateWithOffset=function(){return(ZT=t._RotateWithOffset=t.asm.ua).apply(null,arguments)},Ug=t._Round=function(){return(Ug=t._Round=t.asm.va).apply(null,arguments)},vu=t._Rsqrt=function(){return(vu=t._Rsqrt=t.asm.wa).apply(null,arguments)},JT=t._ScatterNd=function(){return(JT=t._ScatterNd=t.asm.xa).apply(null,arguments)},ek=t._SelectV2=function(){return(ek=t._SelectV2=t.asm.ya).apply(null,arguments)},LN=t._Sigmoid=function(){return(LN=t._Sigmoid=t.asm.za).apply(null,arguments)},Kg=t._Sin=function(){return(Kg=t._Sin=t.asm.Aa).apply(null,arguments)},tk=t._Softmax=function(){return(tk=t._Softmax=t.asm.Ba).apply(null,arguments)},rk=t._Sqrt=function(){return(rk=t._Sqrt=t.asm.Ca).apply(null,arguments)},nk=t._Square=function(){return(nk=t._Square=t.asm.Da).apply(null,arguments)},ok=t._SquaredDifference=function(){return(ok=t._SquaredDifference=t.asm.Ea).apply(null,arguments)},sk=t._Step=function(){return(sk=t._Step=t.asm.Fa).apply(null,arguments)},ak=t._StridedSlice=function(){return(ak=t._StridedSlice=t.asm.Ga).apply(null,arguments)},ik=t._Sub=function(){return(ik=t._Sub=t.asm.Ha).apply(null,arguments)},uk=t._Sum=function(){return(uk=t._Sum=t.asm.Ia).apply(null,arguments)},lk=t._Tan=function(){return(lk=t._Tan=t.asm.Ja).apply(null,arguments)},pk=t._Tanh=function(){return(pk=t._Tanh=t.asm.Ka).apply(null,arguments)},ck=t._Tile=function(){return(ck=t._Tile=t.asm.La).apply(null,arguments)},mk=t._TopK=function(){return(mk=t._TopK=t.asm.Ma).apply(null,arguments)},fk=t._Transform=function(){return(fk=t._Transform=t.asm.Na).apply(null,arguments)},dk=t._Transpose=function(){return(dk=t._Transpose=t.asm.Oa).apply(null,arguments)},hk=t.__FusedMatMul=function(){return(hk=t.__FusedMatMul=t.asm.Pa).apply(null,arguments)},gk=t._malloc=function(){return(gk=t._malloc=t.asm.Qa).apply(null,arguments)},bk=t._free=function(){return(bk=t._free=t.asm.Ra).apply(null,arguments)},Vg=t.stackSave=function(){return(Vg=t.stackSave=t.asm.Ta).apply(null,arguments)},jg=t.stackRestore=function(){return(jg=t.stackRestore=t.asm.Ua).apply(null,arguments)},Zm=t.stackAlloc=function(){return(Zm=t.stackAlloc=t.asm.Va).apply(null,arguments)};t.cwrap=ee;var $p;function yk(Q){this.name="ExitStatus",this.message="Program terminated with exit("+Q+")",this.status=Q}ns=function Q(){$p||Jm(),$p||(ns=Q)};function Jm(Q){if(Q=Q||u,gr>0||(Or(),gr>0))return;function ae(){$p||($p=!0,t.calledRun=!0,!U&&(ts(),Tn(),n(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),Ln()))}t.setStatus?(t.setStatus("Running..."),setTimeout(function(){setTimeout(function(){t.setStatus("")},1),ae()},1)):ae()}if(t.run=Jm,t.preInit)for(typeof t.preInit=="function"&&(t.preInit=[t.preInit]);t.preInit.length>0;)t.preInit.pop()();Jm();var Op;s&&(Op={uncaughtException:process.listeners("uncaughtException").filter(function(Q){return!s.uncaughtException.indexOf(Q)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(Q){return!s.unhandledRejection.indexOf(Q)>-1})});var zp;if(typeof e!="undefined")zp=e;else if(typeof WasmBackendModuleThreadedSimd!="undefined")zp=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(Op){var xk=zp._dispose;zp._dispose=function(){xk(),Op.uncaughtException.forEach(function(Q){process.removeListener("uncaughtException",Q)}),Op.unhandledRejection.forEach(function(Q){process.removeListener("unhandledRejection",Q)})}}return e.ready}}();typeof Zx=="object"&&typeof FN=="object"?FN.exports=PN:typeof define=="function"&&define.amd?define([],function(){return PN}):typeof Zx=="object"&&(Zx.WasmBackendModule=PN)});var Bj=1e-7,$j=1e-4,Ga=class{constructor(e,t){this.backend=e;this.dataMover=t;this.data=new WeakMap;this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},ss=class{refCount(e){return as("refCount")}incRef(e){return as("incRef")}timerAvailable(){return!0}time(e){return as("time")}read(e){return as("read")}readSync(e){return as("readSync")}numDataIds(){return as("numDataIds")}disposeData(e,t){return as("disposeData")}write(e,t,n){return as("write")}move(e,t,n,o,s){return as("move")}memory(){return as("memory")}floatPrecision(){return as("floatPrecision")}epsilon(){return this.floatPrecision()===32?Bj:$j}dispose(){return as("dispose")}};function as(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function YN(r){let e=r.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,eb(r,e,t)}function Oj(r,e){if(r.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${e.length}`);let t=r.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,eb(r,t,n),eb(e,t,n)}function jp(r,e,t){return Math.max(r,Math.min(e,t))}function zj(r){return r%2==0?r:r+1}function eb(r,e,t){let n=r[e];r[e]=r[t],r[t]=n}function Gj(r){let e=0;for(let t=0;t<r.length;t++)e+=r[t];return e}function Wj(r,e){let t=Math.random();return e*t+(1-t)*r}function Uj(r,e){let t=0;for(let n=0;n<r.length;n++){let o=Number(r[n])-Number(e[n]);t+=o*o}return t}function P(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function Ut(r,e,t=""){P(On(r,e),()=>t+` Shapes ${r} and ${e} must match`)}function Jn(r){P(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Hs(r,e=[],t=!1){if(e==null&&(e=[]),Array.isArray(r)||Tr(r)&&!t)for(let n=0;n<r.length;++n)Hs(r[n],e,t);else e.push(r);return e}function pt(r){if(r.length===0)return 1;let e=r[0];for(let t=1;t<r.length;t++)e*=r[t];return e}function Kj(r){return r.length===0}function On(r,e){if(r===e)return!0;if(r==null||e==null||r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==e[t])return!1;return!0}function ct(r){return r%1==0}function Vj(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let e=Math.exp(2*r);return(e-1)/(e+1)}}function jj(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}function Hj(r){let e=new Uint32Array(r);for(let t=0;t<r;++t)e[t]=t;return YN(e),e}function Tl(r,e){return e<=r.length?r:r+" ".repeat(e-r.length)}function qj(r,e=n=>0,t){return new Promise((n,o)=>{let s=0,i=()=>{if(r()){n();return}s++;let a=e(s);if(t!=null&&s>=t){o();return}setTimeout(i,a)};i()})}function Xj(r,e){let t=1,n=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)t*=r[s];else if(r[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(n===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${r}`);return r}if(t===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(e%t!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);let o=r.slice();return o[n]=e/t,o}function br(r,e){let t=e.length;return r=r==null?e.map((n,o)=>o):[].concat(r),P(r.every(n=>n>=-t&&n<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${r}`),P(r.every(n=>ct(n)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(n=>n<0?t+n:n)}function Ck(r,e){let t=[],n=[],o=e!=null&&Array.isArray(e)&&e.length===0,s=e==null||o?null:br(e,r).sort(),i=0;for(let a=0;a<r.length;++a){if(s!=null){if(s[i]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(s[i]==null||s[i]>a)&&r[a]===1&&(t.push(r[a]),n.push(a)),s[i]<=a&&i++}r[a]!==1&&(t.push(r[a]),n.push(a))}return{newShape:t,keptDims:n}}function vk(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${r}`);return t}function wk(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else if(r==="string")t=new Array(e);else throw new Error(`Unknown data type ${r}`);return t}function Sk(r,e){for(let t=0;t<r.length;t++){let n=r[t];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${e} being uploaded contains ${n}.`)}}function _k(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function Yj(r,e){return!(e==="complex64"||e==="float32"&&r!=="complex64"||e==="int32"&&r!=="float32"&&r!=="complex64"||e==="bool"&&r==="bool")}function Tr(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}function tb(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function Ak(r){if(r==null)return 0;let e=0;return r.forEach(t=>e+=t.length),e}function qs(r){return typeof r=="string"||r instanceof String}function QN(r){return typeof r=="boolean"}function ZN(r){return typeof r=="number"}function Hp(r){return Array.isArray(r)?Hp(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":ZN(r)?"float32":qs(r)?"string":QN(r)?"bool":"float32"}function Wa(r){return!!(r&&r.constructor&&r.call&&r.apply)}function qp(r,e){for(let t=e;t<r;++t)if(r%t==0)return t;return r}function Ua(r){let e=r.length;if(e<2)return[];let t=new Array(e-1);t[e-2]=r[e-1];for(let n=e-3;n>=0;--n)t[n]=t[n+1]*r[n+1];return t}function JN(r,e,t,n=!1){let o=new Array;if(e.length===1){let s=e[0]*(n?2:1);for(let i=0;i<s;i++)o[i]=t[r+i]}else{let s=e[0],i=e.slice(1),a=i.reduce((u,l)=>u*l)*(n?2:1);for(let u=0;u<s;u++)o[u]=JN(r+u*a,i,t,n)}return o}function kl(r,e,t=!1){if(r.length===0)return e[0];let n=r.reduce((o,s)=>o*s)*(t?2:1);if(n===0)return[];if(n!==e.length)throw new Error(`[${r}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return JN(0,r,e,t)}function of(r,e){let t=Xp(r,e);for(let n=0;n<t.length;n++)t[n]=1;return t}function Xp(r,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${e}`)}function Qj(r,e){let t=r.reduce((n,o)=>n*o,1);if(e==null||e==="float32")return kl(r,new Float32Array(t));if(e==="int32")return kl(r,new Int32Array(t));if(e==="bool")return kl(r,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function sf(r){r.forEach(e=>{P(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function Zj(r,e,t){if(e===0)return 0;if(e===1)return r[0];let n=r[r.length-1];for(let o=0;o<r.length-1;++o)n+=t[o]*r[o];return n}function Jj(r,e,t){if(e===0)return[];if(e===1)return[r];let n=new Array(e);for(let o=0;o<n.length-1;++o)n[o]=Math.floor(r/t[o]),r-=n[o]*t[o];return n[n.length-1]=r,n}function af(r){return r&&r.then&&typeof r.then=="function"}var eD="tfjsflags",rb=class{constructor(e){this.global=e;this.flags={};this.flagRegistry={};this.urlFlags={};this.getQueryParams=eH;this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&($().getBool("IS_TEST")||$().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let o=this.urlFlags[e];$().getBool("IS_TEST")||$().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${o}.`),this.set(e,o)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(af(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);eD in e&&e[eD].split(",").forEach(n=>{let[o,s]=n.split(":");this.urlFlags[o]=rH(o,s)})}};function eH(r){let e={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(tH(e,n[0],n[1]),n.join("="))),e}function tH(r,e,t){r[decodeURIComponent(e)]=decodeURIComponent(t||"")}function rH(r,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${r}.`)}function $(){return Nk}var Nk=null;function tD(r){Nk=r}var Dk;function Pk(){if(Dk==null){let r;if(typeof window!="undefined")r=window;else if(typeof global!="undefined")r=global;else if(typeof process!="undefined")r=process;else if(typeof self!="undefined")r=self;else throw new Error("Could not find a global object");Dk=r}return Dk}function nH(){let r=Pk();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function uf(r,e){let t=nH();if(t.has(r))return t.get(r);{let n=e();return t.set(r,n),t.get(r)}}var is="Abs",ki="Acos",Ii="Acosh",Cn="Add",eo="AddN",Ci="All",vi="Any",to="ArgMax",Ka="ArgMin",wi="Asin",Si="Asinh",_i="Atan",Ai="Atanh",Ni="Atan2",ro="AvgPool",Yp="AvgPoolGrad",Au="AvgPool3D",Qp="AvgPool3DGrad",no="BatchMatMul",us="BatchToSpaceND",Zp="Bincount",rD="BroadcastTo",Jp="BroadcastArgs",zn="Cast",oo="Ceil",Gn="ClipByValue",Nu="Complex",Du="ComplexAbs",ls="Concat",so="Conv2D",ec="Conv2DBackpropFilter",ao="Conv2DBackpropInput",Pu="Conv3D",tc="Conv3DBackpropFilterV2",rc="Conv3DBackpropInputV2",io="Cos",uo="Cosh",Xs="Cumsum",Ys="CropAndResize",nc="DenseBincount",Qs="DepthToSpace",lo="DepthwiseConv2dNative",oc="DepthwiseConv2dNativeBackpropFilter",sc="DepthwiseConv2dNativeBackpropInput",ac="Diag",Fu="Dilation2D",lf="Dilation2DBackpropInput",pf="Dilation2DBackpropFilter",po="RealDiv",Mu="Einsum",co="Elu",ic="EluGrad",Di="Erf",Zs="Equal",mo="Exp",ps="ExpandDims",Js="Expm1",uc="FFT",Va="Fill",ea="FlipLeftRight",fo="Floor",ho="FloorDiv",go="FusedBatchNorm",cs="GatherV2",ta="GatherNd",ra="Greater",bo="GreaterEqual",Wn="Identity",lc="IFFT",Eu="Imag",Pi="IsFinite",Fi="IsInf",Mi="IsNan",na="LeakyRelu",oa="Less",sa="LessEqual",pc="LinSpace",yo="Log",Ei="Log1p",aa="LogicalAnd",Ri="LogicalNot",Il="LogicalOr",nD="LogSoftmax",Ru="LRN",cc="LRNGrad",xo="Max",To="Maximum",ko="MaxPool",mc="MaxPoolGrad",Lu="MaxPool3D",fc="MaxPool3DGrad",dc="MaxPoolWithArgmax",Io="Mean",Co="Min",vo="Minimum",wo="MirrorPad",Li="Mod",hc="Multinomial",So="Multiply",ms="Neg",ia="NotEqual",ua="NonMaxSuppressionV3",Bi="NonMaxSuppressionV4",la="NonMaxSuppressionV5",fs="OnesLike",pa="OneHot",ds="Pack",_o="PadV2",fme="Pool",Ao="Pow",No="Prelu",ca="Prod",ja="Range",Bu="Real",$i="Reciprocal",Do="Relu",hs="Reshape",Ha="ResizeNearestNeighbor",gc="ResizeNearestNeighborGrad",Po="ResizeBilinear",bc="ResizeBilinearGrad",Fo="Relu6",ma="Reverse",fa="Round",Mo="Rsqrt",da="ScatterNd",gs="Select",Oi="Selu",bs="Slice",Eo="Sin",ha="Sinh",zi="Sign",Ro="Sigmoid",Gi="Softplus",Lo="Sqrt",Bo="Sum",ys="SpaceToBatchND",xs="SplitV",$o="Softmax",yc="SparseFillEmptyRows",xc="SparseReshape",Tc="SparseSegmentMean",kc="SparseSegmentSum",$u="SparseToDense",Oo="SquaredDifference",qa="Square",ga="StridedSlice",Ou="StringNGrams",Ic="StringSplit",Cc="StringToHashBucketFast",zo="Sub",ba="Tan",Go="Tanh",vn="Tile",ya="TopK",xa="Transform",Wo="Transpose",vc="Unique",Ts="Unpack",zu="UnsortedSegmentSum",ks="ZerosLike",Is="Step",Cl="FromPixels",Ta="RotateWithOffset",Cs="_FusedMatMul",vs="FusedConv2D",ws="FusedDepthwiseConv2D";function Xa(...r){$().getBool("IS_TEST")||$().getBool("PROD")||console.warn(...r)}function oH(...r){$().getBool("IS_TEST")||$().getBool("PROD")||console.log(...r)}var wc=uf("kernelRegistry",()=>new Map),cf=uf("gradRegistry",()=>new Map);function mf(r,e){let t=Mk(r,e);return wc.get(t)}function Fk(r){return cf.get(r)}function nb(r){let e=wc.entries(),t=[];for(;;){let{done:n,value:o}=e.next();if(n)break;let[s,i]=o,[a]=s.split("_");a===r&&t.push(i)}return t}function Wi(r){let{kernelName:e,backendName:t}=r,n=Mk(e,t);wc.has(n)&&Xa(`The kernel '${e}' for backend '${t}' is already registered`),wc.set(n,r)}function oD(r){let{kernelName:e}=r;cf.has(e)&&$().getBool("DEBUG")&&Xa(`Overriding the gradient for '${e}'`),cf.set(e,r)}function Tme(r,e){let t=Mk(r,e);if(!wc.has(t))throw new Error(`The kernel '${r}' for backend '${e}' is not registered`);wc.delete(t)}function kme(r){if(!cf.has(r))throw new Error(`The gradient '${r}' for backend is not registered`);cf.delete(r)}function Ime(r,e){nb(r).forEach(n=>{let o=Object.assign({},n,{backendName:e});Wi(o)})}function Mk(r,e){return`${e}_${r}`}var b={};Ye(b,{arraysEqual:()=>On,assert:()=>P,assertNonNegativeIntegerDimensions:()=>sf,assertNonNull:()=>Jn,assertShapesMatch:()=>Ut,bytesFromStringArray:()=>Ak,bytesPerElement:()=>tb,checkConversionForErrors:()=>Sk,clamp:()=>jp,computeStrides:()=>Ua,createScalarValue:()=>cH,createShuffledIndices:()=>Hj,decodeString:()=>Nc,distSquared:()=>Uj,encodeString:()=>Wu,fetch:()=>fH,fingerPrint64:()=>pH,flatten:()=>Hs,getArrayFromDType:()=>wk,getTypedArrayFromDType:()=>vk,hasEncodingLoss:()=>Yj,hexToLong:()=>ff,indexToLoc:()=>Jj,inferDtype:()=>Hp,inferFromImplicitShape:()=>Xj,isBoolean:()=>QN,isFunction:()=>Wa,isInt:()=>ct,isNumber:()=>ZN,isPromise:()=>af,isScalarShape:()=>Kj,isString:()=>qs,isTypedArray:()=>Tr,isValidDtype:()=>_k,locToIndex:()=>Zj,makeOnesTypedArray:()=>of,makeZerosNestedTypedArray:()=>Qj,makeZerosTypedArray:()=>Xp,nearestDivisor:()=>qp,nearestLargerEven:()=>zj,now:()=>Al,parseAxisParam:()=>br,randUniform:()=>Wj,repeatedTry:()=>qj,rightPad:()=>Tl,shuffle:()=>YN,shuffleCombo:()=>Oj,sizeFromShape:()=>pt,sizeToSquarishShape:()=>jj,squeezeShape:()=>Ck,sum:()=>Gj,swap:()=>eb,tanh:()=>Vj,toNestedArray:()=>kl,toTypedArray:()=>Ac});var gD=xl(hD());var Sl=gD.default||gD;function ff(r){return Sl.fromString(r,!0,16)}var bD=ff("c3a5c85c97cb3127"),_l=ff("b492b66fbe98f273"),on=ff("9ae16a3b2f90404f");function Lk(r){return r.xor(r.shru(47))}function yD(r,e,t){let n=r.slice(e,e+t);return Sl.fromBytes(Array.from(n),!0,!0)}function qt(r,e){return yD(r,e,8)}function xD(r,e){return yD(r,e,4)}function Fr(r,e){return e===0?r:r.shru(e).or(r.shl(64-e))}function Gu(r,e,t=ff("9ddfea08eb382d69")){let n=r.xor(e).mul(t);n=n.xor(n.shru(47));let o=e.xor(n).mul(t);return o=o.xor(o.shru(47)),o=o.mul(t),o}function aH(r,e,t,n,o,s){o=o.add(r),s=Fr(s.add(o).add(n),21);let i=o;return o=o.add(e),o=o.add(t),s=s.add(Fr(o,44)),[o.add(n),s.add(i)]}function sb(r,e,t,n){return aH(qt(r,e),qt(r,e+8),qt(r,e+16),qt(r,e+24),t,n)}function iH(r,e=r.length){if(e>=8){let t=on.add(e*2),n=qt(r,0).add(on),o=qt(r,e-8),s=Fr(o,37).mul(t).add(n),i=Fr(n,25).add(o).mul(t);return Gu(s,i,t)}if(e>=4){let t=on.add(e*2),n=xD(r,0);return Gu(n.shl(3).add(e),xD(r,e-4),t)}if(e>0){let t=r[0],n=r[e>>1],o=r[e-1],s=t+(n<<8),i=e+(o<<2);return Lk(on.mul(s).xor(bD.mul(i))).mul(on)}return on}function uH(r,e=r.length){let t=on.add(e*2),n=qt(r,0).mul(_l),o=qt(r,8),s=qt(r,e-8).mul(t),i=qt(r,e-16).mul(on);return Gu(Fr(n.add(o),43).add(Fr(s,30)).add(i),n.add(Fr(o.add(on),18)).add(s),t)}function lH(r,e=r.length){let t=on.add(e*2),n=qt(r,0).mul(on),o=qt(r,8),s=qt(r,e-8).mul(t),i=qt(r,e-16).mul(on),a=Fr(n.add(o),43).add(Fr(s,30)).add(i),u=Gu(a,n.add(Fr(o.add(on),18)).add(s),t),l=qt(r,16).mul(t),p=qt(r,24),c=a.add(qt(r,e-32)).mul(t),m=u.add(qt(r,e-24)).mul(t);return Gu(Fr(l.add(p),43).add(Fr(c,30)).add(m),l.add(Fr(p.add(n),18)).add(c),t)}function pH(r,e=r.length){let t=Sl.fromNumber(81,!0);if(e<=32)return e<=16?iH(r,e):uH(r,e);if(e<=64)return lH(r,e);let n=t,o=t.mul(_l).add(113),s=Lk(o.mul(on).add(113)).mul(on),i=[Sl.UZERO,Sl.UZERO],a=[Sl.UZERO,Sl.UZERO];n=n.mul(on).add(qt(r,0));let u=0,l=(e-1>>6)*64,p=l+(e-1&63)-63;do n=Fr(n.add(o).add(i[0]).add(qt(r,u+8)),37).mul(_l),o=Fr(o.add(i[1]).add(qt(r,u+48)),42).mul(_l),n=n.xor(a[1]),o=o.add(i[0]).add(qt(r,u+40)),s=Fr(s.add(a[0]),33).mul(_l),i=sb(r,u,i[1].mul(_l),n.add(a[0])),a=sb(r,u+32,s.add(a[1]),o.add(qt(r,u+16))),[s,n]=[n,s],u+=64;while(u!==l);let c=_l.add(s.and(255).shl(1));return u=p,a[0]=a[0].add(e-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),n=Fr(n.add(o).add(i[0]).add(qt(r,u+8)),37).mul(c),o=Fr(o.add(i[1]).add(qt(r,u+48)),42).mul(c),n=n.xor(a[1].mul(9)),o=o.add(i[0].mul(9).add(qt(r,u+40))),s=Fr(s.add(a[0]),33).mul(c),i=sb(r,u,i[1].mul(c),n.add(a[0])),a=sb(r,u+32,s.add(a[1]),o.add(qt(r,u+16))),[s,n]=[n,s],Gu(Gu(i[0],a[0],c).add(Lk(o).mul(bD)).add(s),Gu(i[1],a[1],c).add(n),c)}function cH(r,e){return e==="string"?Wu(r):Ac([r],e)}function mH(r,e){return r instanceof Float32Array&&e==="float32"||r instanceof Int32Array&&e==="int32"||r instanceof Uint8Array&&e==="bool"}function Ac(r,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=Hs(r)),$().getBool("DEBUG")&&Sk(r,e),mH(r,e))return r;if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"){let t=new Uint8Array(r.length);for(let n=0;n<t.length;++n)Math.round(r[n])!==0&&(t[n]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Al(){return $().platform.now()}function fH(r,e){return $().platform.fetch(r,e)}function Wu(r,e="utf-8"){return e=e||"utf-8",$().platform.encode(r,e)}function Nc(r,e="utf-8"){return e=e||"utf-8",$().platform.decode(r,e)}var Bk=class{constructor(e,t){this.backendTimer=e;this.logger=t;t==null&&(this.logger=new TD)}profileKernel(e,t,n){let o,s=()=>{o=n()},i,a=Al();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(let l of o)l.dataSync();i=Promise.resolve({kernelMs:Al()-a})}if($().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<o.length;l++){let p=o[l];p.data().then(c=>{dH(c,p.dtype,e)})}return{kernelName:e,outputs:o,inputs:t,timeMs:i.then(l=>l.kernelMs),extraInfo:i.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:o,inputs:s,extraInfo:i}=e;n.forEach(a=>{Promise.all([a.data(),o,i]).then(u=>{this.logger.logKernelProfile(t,a,u[0],u[1],s,u[2])})})}};function dH(r,e,t){if(e!=="float32")return!1;for(let n=0;n<r.length;n++){let o=r[n];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${t}'`),!0}return!1}var TD=class{logKernelProfile(e,t,n,o,s,i){let a=typeof o=="number"?Tl(`${o}ms`,9):o.error,u=Tl(e,25),l=t.rank,p=t.size,c=Tl(t.shape.toString(),14),m="";for(let f in s){let d=s[f];if(d!=null){let h=d.shape||t.shape,g=h.length;m+=`${f}: ${g}D ${g>0?h:""} `}}console.log(`%c${u}	%c${a}	%c${l}D ${c}	%c${p}	%c${m}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function kD(r,e,t){let n={},o={};for(let u=0;u<e.length;u++)n[e[u].id]=!0;for(let u=0;u<r.length;u++){let l=r[u],p=l.inputs;for(let c in p){let m=p[c],f=!1;for(let d=0;d<e.length;d++)if(n[m.id]){l.outputs.forEach(h=>n[h.id]=!0),f=!0,o[l.id]=!0;break}if(f)break}}let s={};s[t.id]=!0;let i={};for(let u=r.length-1;u>=0;u--){let l=r[u],p=l.inputs;for(let c=0;c<l.outputs.length;c++)if(s[l.outputs[c].id]){for(let m in p)s[p[m].id]=!0,i[l.id]=!0;break}}let a=[];for(let u=0;u<r.length;u++){let l=r[u];if(o[l.id]&&i[l.id]){let p={};for(let m in l.inputs){let f=l.inputs[m];n[f.id]&&(p[m]=f)}let c=Object.assign({},l);c.inputs=p,c.outputs=l.outputs,a.push(c)}}return a}function ID(r,e,t,n){for(let o=e.length-1;o>=0;o--){let s=e[o],i=[];if(s.outputs.forEach(u=>{let l=r[u.id];l!=null?i.push(l):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let a=s.gradient(i);for(let u in s.inputs){if(!(u in a))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(a)}.`);let l=t(()=>a[u]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${l.dtype}'`);let p=s.inputs[u];if(!On(l.shape,p.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${u}' has shape '${l.shape}', which does not match the shape of the input '${p.shape}'`);if(r[p.id]==null)r[p.id]=l;else{let c=r[p.id];r[p.id]=n(c,l),c.dispose()}}}}var CD=20,df=3,$k=7;function vD(r,e,t,n){let o=Ua(e),s=hH(r,e,t,o),i=e.length,a=ab(r,e,t,o,s),u=["Tensor"];return n&&(u.push(`  dtype: ${t}`),u.push(`  rank: ${i}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(a.map(l=>"    "+l).join(`
`)),u.join(`
`)}function hH(r,e,t,n){let o=pt(e),s=n[n.length-1],i=new Array(s).fill(0),a=e.length,u=t==="complex64"?gf(r):r;if(a>1)for(let l=0;l<o/s;l++){let p=l*s;for(let c=0;c<s;c++)i[c]=Math.max(i[c],hf(u[p+c],0,t).length)}return i}function hf(r,e,t){let n;return Array.isArray(r)?n=`${parseFloat(r[0].toFixed($k))} + ${parseFloat(r[1].toFixed($k))}j`:qs(r)?n=`'${r}'`:t==="bool"?n=wD(r):n=parseFloat(r.toFixed($k)).toString(),Tl(n,e)}function wD(r){return r===0?"false":"true"}function ab(r,e,t,n,o,s=!0){let i=t==="complex64"?2:1,a=e[0],u=e.length;if(u===0){if(t==="complex64"){let h=gf(r);return[hf(h[0],0,t)]}return t==="bool"?[wD(r[0])]:[r[0].toString()]}if(u===1){if(a>CD){let g=df*i,x=Array.from(r.slice(0,g)),y=Array.from(r.slice((a-df)*i,a*i));return t==="complex64"&&(x=gf(x),y=gf(y)),["["+x.map((T,k)=>hf(T,o[k],t)).join(", ")+", ..., "+y.map((T,k)=>hf(T,o[a-df+k],t)).join(", ")+"]"]}let h=t==="complex64"?gf(r):Array.from(r);return["["+h.map((g,x)=>hf(g,o[x],t)).join(", ")+"]"]}let l=e.slice(1),p=n.slice(1),c=n[0]*i,m=[];if(a>CD){for(let h=0;h<df;h++){let g=h*c,x=g+c;m.push(...ab(r.slice(g,x),l,t,p,o,!1))}m.push("...");for(let h=a-df;h<a;h++){let g=h*c,x=g+c;m.push(...ab(r.slice(g,x),l,t,p,o,h===a-1))}}else for(let h=0;h<a;h++){let g=h*c,x=g+c;m.push(...ab(r.slice(g,x),l,t,p,o,h===a-1))}let f=u===2?",":"";m[0]="["+m[0]+f;for(let h=1;h<m.length-1;h++)m[h]=" "+m[h]+f;let d=`,
`;for(let h=2;h<u;h++)d+=`
`;return m[m.length-1]=" "+m[m.length-1]+"]"+(s?"":d),m}function gf(r){let e=[];for(let t=0;t<r.length;t+=2)e.push([r[t],r[t+1]]);return e}var xt=class{constructor(e,t,n){this.dtype=t;if(this.shape=e.slice(),this.size=pt(e),n!=null){let o=n.length;P(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||wk(t,this.size),this.strides=Ua(e)}set(e,...t){t.length===0&&(t=[0]),P(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let o of e){if(o<0||o>=this.shape[t]){let s=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(s)}t++}let n=e[e.length-1];for(let o=0;o<e.length-1;++o)n+=this.strides[o]*e[o];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ya().makeTensor(this.values,this.shape,this.dtype)}},Ya=null,Dc=null,gH=null;function SD(r){Ya=r}function _D(r){Dc=r}function AD(r){gH=r}var Qe=class{constructor(e,t,n,o){this.kept=!1;this.isDisposedInternal=!1;this.shape=e.slice(),this.dtype=t||"float32",this.size=pt(e),this.strides=Ua(e),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Dc.buffer(this.shape,this.dtype,e)}bufferSync(){return Dc.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return kl(this.shape,e,this.dtype==="complex64")}arraySync(){return kl(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=Ya().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>Nc(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();let e=Ya().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Nc(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Ya().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ya().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Dc.print(this,e)}clone(){return this.throwIfDisposed(),Dc.clone(this)}toString(e=!1){let t=this.dataSync();return vD(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Dc.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ya().makeVariable(this,e,t,n)}};Object.defineProperty(Qe,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function bH(){return uf("Tensor",()=>Qe)}bH();var Uu=class extends Qe{constructor(e,t,n,o){super(e.shape,e.dtype,e.dataId,o);this.trainable=t;this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!On(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ya().disposeTensor(this),this.dataId=e.dataId,Ya().incRef(this,null)}dispose(){Ya().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Uu,Symbol.hasInstance,{value:r=>r instanceof Qe&&r.assign!=null&&r.assign instanceof Function});var Ns={};Ye(Ns,{assertTypesMatch:()=>Kk,getTensorsInContainer:()=>bf,isTensorInList:()=>xH,makeTypesMatch:()=>Ze});var Ok;(function(a){a.R0="R0",a.R1="R1",a.R2="R2",a.R3="R3",a.R4="R4",a.R5="R5",a.R6="R6"})(Ok||(Ok={}));var zk;(function(o){o.float32="float32",o.int32="int32",o.bool="int32",o.complex64="complex64"})(zk||(zk={}));var Gk;(function(o){o.float32="float32",o.int32="int32",o.bool="bool",o.complex64="complex64"})(Gk||(Gk={}));var Wk;(function(o){o.float32="float32",o.int32="float32",o.bool="float32",o.complex64="complex64"})(Wk||(Wk={}));var Uk;(function(o){o.float32="complex64",o.int32="complex64",o.bool="complex64",o.complex64="complex64"})(Uk||(Uk={}));var yH={float32:Wk,int32:zk,bool:Gk,complex64:Uk};function Kt(r,e){if(r==="string"||e==="string"){if(r==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${r} with ${e}`)}return yH[r][e]}function Ui(r){return Kt(r,"int32")}function Ze(r,e){if(r.dtype===e.dtype)return[r,e];let t=Kt(r.dtype,e.dtype);return[r.cast(t),e.cast(t)]}function Kk(r,e){P(r.dtype===e.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${e.dtype}) input must match`)}function xH(r,e){return e.some(t=>t.id===r.id)}function bf(r){let e=[],t=new Set;return ND(r,e,t),e}function ND(r,e,t){if(r==null)return;if(r instanceof Qe){e.push(r);return}if(!TH(r))return;let n=r;for(let o in n){let s=n[o];t.has(s)||(t.add(s),ND(s,e,t))}}function TH(r){return Array.isArray(r)||typeof r=="object"}function Vk(r){return r.kernelName!=null}var jk=class{constructor(){this.registeredVariables={};this.nextTapeNodeId=0;this.numBytes=0;this.numTensors=0;this.numStringTensors=0;this.numDataBuffers=0;this.gradientDepth=0;this.kernelDepth=0;this.scopeStack=[];this.numDataMovesStack=[];this.nextScopeId=0;this.tensorInfo=new WeakMap;this.profiling=!1;this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},ub=class{constructor(e){this.ENV=e;this.registry={};this.registryFactory={};this.pendingBackendInitId=0;this.state=new jk}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Xa(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Bk(this.backendInstance),!0}setupRegisteredKernels(){nb(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){nb(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof ss)&&typeof n.then=="function"){let o=++this.pendingBackendInitId,s=n.then(i=>o<this.pendingBackendInitId?!1:(this.registry[e]=i,this.pendingBackendInit=null,!0)).catch(i=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,Xa(`Initialization of backend ${e} failed`),Xa(i.stack||i.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return Xa(`Initialization of backend ${e} failed`),Xa(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:o,asyncInit:s}=this.initializeBackend(n);if(s||o)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),o=n.backend,s=this.readSync(t),i=o.refCount(t);o.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let o;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(o),()=>(o=t(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(e,t,n){e();try{let o=n();return t(),o}catch(o){throw t(),o}}nextTensorId(){return ub.nextTensorId++}nextVariableId(){return ub.nextVariableId++}clone(e){let t=D.runKernel(Wn,{x:e}),n={x:e},o=i=>({x:()=>{let a="float32",u={x:i},l={dtype:a};return D.runKernel(zn,u,l)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[t],o,s,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(mf(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let o=this.backend.numDataIds(),s=0;n.forEach(u=>{s+=u.dtype==="complex64"?3:1});let i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=o-t-s-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],o=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let u,l=Vk(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Vk(e)){let{kernelName:d,inputs:h,attrs:g}=e;this.backendName==null&&this.backend;let x=mf(d,this.backendName);P(x!=null,()=>`Cannot find registered kernel '${d}' for backend '${this.backendName}'`),a=()=>{let y=this.backend.numDataIds();u=x.kernelFunc({inputs:h,attrs:g,backend:this.backend});let T=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(d,y,T);let k=T.map(C=>{if(C.rank!=null)return C;let{dataId:N,shape:A,dtype:M}=C;return this.makeTensorFromDataId(N,A,M)});if(o){let C=this.getTensorsForGradient(d,h,k);n=this.saveTensorsForBackwardMode(C)}return k}}else{let{forwardFunc:d}=e,h=g=>{!o||(n=g.map(x=>this.keep(this.clone(x))))};a=()=>{let g=this.backend.numDataIds();u=this.tidy(()=>d(this.backend,h));let x=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,g,x),x}}let{inputs:p,attrs:c}=e,m=Vk(e)?null:e.backwardsFunc,f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=a():(f=this.profiler.profileKernel(l,p,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs)}),o&&this.addTapeNode(l,p,t,m,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(d=>p[d]!=null?p[d].shape:null),outputShapes:t.map(d=>d.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let o=Fk(e);if(o!=null){let s=o.inputsToSave||[],i=o.outputsToSave||[],a;o.saveAllInputs?(P(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(l=>t[l])):a=s.map(l=>t[l]);let u=n.filter((l,p)=>i[p]);return a.concat(u)}return[]}makeTensor(e,t,n,o){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",o=o||this.backend;let s=e;n==="string"&&qs(e[0])&&(s=e.map(u=>Wu(u)));let i=o.write(s,t,n),a=new Qe(t,n,i,this.nextTensorId());if(this.trackTensor(a,o),n==="string"){let u=this.state.tensorInfo.get(i),l=Ak(s);this.state.numBytes+=l-u.bytes,u.bytes=l}return a}makeTensorFromDataId(e,t,n,o){n=n||"float32";let s=new Qe(t,n,e,this.nextTensorId());return this.trackTensor(s,o),s}makeVariable(e,t=!0,n,o){n=n||this.nextVariableId().toString(),o!=null&&o!==e.dtype&&(e=e.cast(o));let s=new Uu(e,t,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*tb(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Uu||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*tb(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,o,s,i){let a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},u=Fk(e);u!=null&&(o=u.gradFunc),o!=null&&(a.gradient=l=>(l=l.map((p,c)=>{if(p==null){let m=n[c],f=Xp(m.size,m.dtype);return this.makeTensor(f,m.shape,m.dtype)}return p}),o(l.length>1?l:l[0],s,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=bf(e),n=new Set(t.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let i=this.state.activeScope.track[s];!i.kept&&!n.has(i.id)&&i.dispose()}let o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(s=>{!s.kept&&s.scopeId===o.id&&this.track(s)})}gradients(e,t,n,o=!1){if(P(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));P(s instanceof Qe,()=>"The result y returned by f() must be a tensor.");let i=kD(this.state.activeTape,t,s);if(!o&&i.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let a={};a[s.id]=n??kH(s.shape),ID(a,i,l=>this.tidy(l),IH);let u=t.map(l=>a[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let p of l.saved)p.dispose()}),this.state.activeTape=null),{value:s,grads:u}})}customGrad(e){return P(Wa(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{P(t.every(a=>a instanceof Qe),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,o={};t.forEach((a,u)=>{o[u]=a});let s=(a,u)=>(n=e(...t,u),P(n.value instanceof Qe,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),P(Wa(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),i=(a,u)=>{let l=n.gradFunc(a,u),p=Array.isArray(l)?l:[l];P(p.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),P(p.every(m=>m instanceof Qe),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let c={};return p.forEach((m,f)=>{c[f]=()=>m}),c};return this.runKernelFunc({forwardFunc:s,backwardsFunc:i,inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){let t=Al(),n=await this.backend.time(e);return n.wallMs=Al()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new jk;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},ib=ub;ib.nextTensorId=0,ib.nextVariableId=0;function kH(r){let e=of(pt(r),"float32");return D.makeTensor(e,r,"float32")}function Hk(){let r=Pk();if(r._tfengine==null){let e=new rb(r);r._tfengine=new ib(e)}return tD(r._tfengine.ENV),SD(()=>r._tfengine),r._tfengine}var D=Hk();function IH(r,e){let t={a:r,b:e};return D.runKernel(Cn,t)}var Ki={};Ye(Ki,{isBrowser:()=>Xk,isMobile:()=>wH,mockIsMobile:()=>vH});function CH(){return typeof navigator!="undefined"&&navigator!=null}var qk;function vH(r){qk=r}function wH(r){if(qk!==void 0)return qk;if(r||CH()){if(r||(r=navigator),r.product==="ReactNative")return!0;let e=r.userAgent||r.vendor||(typeof window!="undefined"?window.opera:"");if(!e){let t=r;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function Xk(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var Ia=$();Ia.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Ia.registerFlag("IS_BROWSER",()=>Xk());Ia.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");Ia.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Ia.registerFlag("PROD",()=>!1);Ia.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Ia.getBool("DEBUG"));Ia.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Ia.registerFlag("IS_TEST",()=>!1);Ia.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Ia.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);function Wr(r,e){let t=r;if(Tr(r))return e==="string"?[]:[r.length];if(!Array.isArray(r))return[];let n=[];for(;Array.isArray(t)||Tr(t)&&e!=="string";)n.push(t.length),t=t[0];return Array.isArray(r)&&$().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&DD(r,n,[]),n}function DD(r,e,t){if(t=t||[],!Array.isArray(r)&&!Tr(r)){P(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}P(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${r.length} elements`),P(r.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${r.length} elements`);let n=e.slice(1);for(let o=0;o<r.length;++o)DD(r[o],n,t.concat(o))}function PD(r,e,t,n){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==e||r==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${n}' must be ${r} tensor, but got ${e} tensor`)}}function v(r,e,t,n="numeric"){if(r instanceof Qe)return PD(n,r.dtype,e,t),r;let o=Hp(r);if(o!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(o=n),PD(n,o,e,t),r==null||!Tr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let u=r==null?"null":r.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${u}'`)}let s=Wr(r,o);!Tr(r)&&!Array.isArray(r)&&(r=[r]);let a=o!=="string"?Ac(r,o):Hs(r,[],!0);return D.makeTensor(a,s,o)}function Vi(r,e,t,n="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,i)=>v(s,`${e}[${i}]`,t,n))}var FD="__op";function _(r){let e=Object.keys(r);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0],n=r[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+FD;let o=(...s)=>{D.startScope(t);try{let i=n(...s);return af(i)&&console.error("Cannot return a Promise inside of tidy."),D.endScope(i),i}catch(i){throw D.endScope(null),i}};return Object.defineProperty(o,"name",{value:t,configurable:!0}),o}function SH(r,e){let t=v(r,"real","complex"),n=v(e,"imag","complex");Ut(t.shape,n.shape,`real and imag shapes, ${t.shape} and ${n.shape}, must match in call to tf.complex().`);let o={real:t,imag:n};return D.runKernel(Nu,o)}var Vn=_({complex_:SH});function sn(r,e,t,n){if(n==null&&(n=Hp(r)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Tr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){sf(e);let o=pt(e),s=pt(t);P(o===s,()=>`Based on the provided shape, [${e}], the tensor should have ${o} values but has ${s}`);for(let i=0;i<t.length;++i){let a=t[i],u=i===t.length-1?a!==pt(e.slice(i)):!0;P(t[i]===e[i]||!u,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!Tr(r)&&!Array.isArray(r)&&(r=[r]),e=e||t,r=n!=="string"?Ac(r,n):Hs(r,[],!0),D.makeTensor(r,e,n)}function Mr(r,e,t){let n=Wr(r,t);return sn(r,e,n,t)}var yf={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var lb=4;async function MD(r,e){let t=[],n=[],o=Array.isArray(r)?r.map(i=>i.name):Object.keys(r);for(let i=0;i<o.length;++i){let a=o[i],u=Array.isArray(r)?r[i].tensor:r[a];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${u.dtype}`);let l={name:a,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){let p=new Promise(async c=>{let m=await u.bytes(),f=m.reduce((g,x)=>g+x.length,0)+lb*m.length,d=new Uint8Array(f),h=0;for(let g=0;g<m.length;g++){let x=m[g],y=new Uint8Array(new Uint32Array([x.length]).buffer);d.set(y,h),h+=lb,d.set(x,h),h+=x.length}c(d)});n.push(p)}else n.push(u.data());e!=null&&(l.group=e),t.push(l)}let s=await Promise.all(n);return{data:_H(s),specs:t}}function pb(r,e){let t={},n,o=0;for(let s of e){let i=s.name,a=s.dtype,u=s.shape,l=pt(u),p;if("quantization"in s){let c=s.quantization;if(c.dtype==="uint8"||c.dtype==="uint16"){if(!("min"in c&&"scale"in c))throw new Error(`Weight ${s.name} with quantization ${c.dtype} doesn't have corresponding metadata min and scale.`)}else if(c.dtype==="float16"){if(a!=="float32")throw new Error(`Weight ${s.name} is quantized with ${c.dtype} which only supports weights of type float32 not ${a}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${c.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let m=yf[c.dtype],f=r.slice(o,o+l*m),d=c.dtype==="uint8"?new Uint8Array(f):new Uint16Array(f);if(a==="float32")if(c.dtype==="uint8"||c.dtype==="uint16"){p=new Float32Array(d.length);for(let h=0;h<d.length;h++){let g=d[h];p[h]=g*c.scale+c.min}}else if(c.dtype==="float16")n===void 0&&(n=PH()),p=n(d);else throw new Error(`Unsupported quantization type ${c.dtype} for weight type float32.`);else if(a==="int32"){if(c.dtype!=="uint8"&&c.dtype!=="uint16")throw new Error(`Unsupported quantization type ${c.dtype} for weight type int32.`);p=new Int32Array(d.length);for(let h=0;h<d.length;h++){let g=d[h];p[h]=Math.round(g*c.scale+c.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${a}`);o+=l*m}else if(a==="string"){let c=pt(s.shape);p=[];for(let m=0;m<c;m++){let f=new Uint32Array(r.slice(o,o+lb))[0];o+=lb;let d=new Uint8Array(r.slice(o,o+f));p.push(d),o+=f}}else{let c=yf[a],m=r.slice(o,o+l*c);if(a==="float32")p=new Float32Array(m);else if(a==="int32")p=new Int32Array(m);else if(a==="bool")p=new Uint8Array(m);else if(a==="complex64"){p=new Float32Array(m);let f=new Float32Array(p.length/2),d=new Float32Array(p.length/2);for(let x=0;x<f.length;x++)f[x]=p[x*2],d[x]=p[x*2+1];let h=Mr(f,u,"float32"),g=Mr(d,u,"float32");t[i]=Vn(h,g),h.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${a}`);o+=l*c}a!=="complex64"&&(t[i]=Mr(p,u,a))}return t}function _H(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let e=0,t=[];r.forEach(s=>{if(e+=s.byteLength,t.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(e),o=0;return t.forEach(s=>{n.set(new Uint8Array(s.buffer),o),o+=s.byteLength}),n.buffer}var Yk=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function ED(r){return Yk?Buffer.byteLength(r):new Blob([r]).size}function RD(r){if(Yk)return Buffer.from(r).toString("base64");let e=new Uint8Array(r),t="";for(let n=0,o=e.length;n<o;n++)t+=String.fromCharCode(e[n]);return btoa(t)}function LD(r){if(Yk){let n=Buffer.from(r,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let e=atob(r),t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)t.set([e.charCodeAt(n)],n);return t.buffer}function Pc(r){if(r.length===1)return r[0];let e=0;r.forEach(o=>{e+=o.byteLength});let t=new Uint8Array(e),n=0;return r.forEach(o=>{t.set(new Uint8Array(o),n),n+=o.byteLength}),t.buffer}function Qk(r){let e="/";for(r=r.trim();r.endsWith(e);)r=r.slice(0,r.length-1);let t=r.split(e);return t[t.length-1]}function cb(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:e};return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),t}async function Fc(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),r.weightsManifest!=null){let[n,o]=await e(r.weightsManifest);t.weightSpecs=n,t.weightData=o}return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),t}function Qa(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:ED(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:ED(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:r.weightData.byteLength}}function AH(){let r=t=>{let n=t<<13,o=0;for(;(n&8388608)==0;)o-=8388608,n<<=1;return n&=~8388608,o+=947912704,n|o},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=r(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function NH(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let e=1;e<31;e++)r[e]=e<<23;for(let e=33;e<63;e++)r[e]=2147483648+(e-32<<23);return r}function DH(){let r=new Uint32Array(64);for(let e=0;e<64;e++)r[e]=1024;return r[0]=r[32]=0,r}function PH(){let r=AH(),e=NH(),t=DH();return n=>{let o=new ArrayBuffer(4*n.length),s=new Uint32Array(o);for(let i=0;i<n.length;i++){let a=n[i],u=r[t[a>>10]+(a&1023)]+e[a>>10];s[i]=u}return new Float32Array(o)}}var Et=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Et.instance==null&&(Et.instance=new Et),Et.instance}static registerSaveRouter(e){Et.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Et.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Et.getHandlers(e,"save")}static getLoadHandlers(e,t){return Et.getHandlers(e,"load",t)}static getHandlers(e,t,n){let o=[];return(t==="load"?Et.getInstance().loadRouters:Et.getInstance().saveRouters).forEach(i=>{let a=i(e,n);a!==null&&o.push(a)}),o}},BD=r=>Et.registerSaveRouter(r),$D=r=>Et.registerLoadRouter(r),OD=r=>Et.getSaveHandlers(r),zD=(r,e)=>Et.getLoadHandlers(r,e);var Zk="tensorflowjs",Jk=1,Nl="models_store",Ku="model_info_store";function GD(){if(!$().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window=="undefined"?self:window,e=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function eI(r){let e=r.result;e.createObjectStore(Nl,{keyPath:"modelPath"}),e.createObjectStore(Ku,{keyPath:"modelPath"})}var ji=class{constructor(e){if(this.indexedDB=GD(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,o)=>{let s=this.indexedDB.open(Zk,Jk);s.onupgradeneeded=()=>eI(s),s.onsuccess=()=>{let i=s.result;if(t==null){let a=i.transaction(Nl,"readonly"),l=a.objectStore(Nl).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return i.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(l.result.modelArtifacts)},l.onerror=p=>(i.close(),o(l.error)),a.oncomplete=()=>i.close()}else{let a=Qa(t),u=i.transaction(Ku,"readwrite"),l=u.objectStore(Ku),p=l.put({modelPath:this.modelPath,modelArtifactsInfo:a}),c;p.onsuccess=()=>{c=i.transaction(Nl,"readwrite");let f=c.objectStore(Nl).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a});f.onsuccess=()=>n({modelArtifactsInfo:a}),f.onerror=d=>{l=u.objectStore(Ku);let h=l.delete(this.modelPath);h.onsuccess=()=>(i.close(),o(f.error)),h.onerror=g=>(i.close(),o(f.error))}},p.onerror=m=>(i.close(),o(p.error)),u.oncomplete=()=>{c==null?i.close():c.oncomplete=()=>i.close()}}},s.onerror=i=>o(s.error)})}};ji.URL_SCHEME="indexeddb://";var WD=r=>$().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(ji.URL_SCHEME)?FH(r.slice(ji.URL_SCHEME.length)):null;Et.registerSaveRouter(WD);Et.registerLoadRouter(WD);function FH(r){return new ji(r)}function MH(r){return r.startsWith(ji.URL_SCHEME)?r.slice(ji.URL_SCHEME.length):r}var tI=class{constructor(){this.indexedDB=GD()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(Zk,Jk);n.onupgradeneeded=()=>eI(n),n.onsuccess=()=>{let o=n.result,s=o.transaction(Ku,"readonly"),a=s.objectStore(Ku).getAll();a.onsuccess=()=>{let u={};for(let l of a.result)u[l.modelPath]=l.modelArtifactsInfo;e(u)},a.onerror=u=>(o.close(),t(a.error)),s.oncomplete=()=>o.close()},n.onerror=o=>t(n.error)})}async removeModel(e){return e=MH(e),new Promise((t,n)=>{let o=this.indexedDB.open(Zk,Jk);o.onupgradeneeded=()=>eI(o),o.onsuccess=()=>{let s=o.result,i=s.transaction(Ku,"readwrite"),a=i.objectStore(Ku),u=a.get(e),l;u.onsuccess=()=>{if(u.result==null)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let p=a.delete(e),c=()=>{l=s.transaction(Nl,"readwrite");let f=l.objectStore(Nl).delete(e);f.onsuccess=()=>t(u.result.modelArtifactsInfo),f.onerror=d=>n(u.error)};p.onsuccess=c,p.onerror=m=>(c(),s.close(),n(u.error))}},u.onerror=p=>(s.close(),n(u.error)),i.oncomplete=()=>{l==null?s.close():l.oncomplete=()=>s.close()}},o.onerror=s=>n(o.error)})}};var Hi="/",Mc="tensorflowjs_models",UD="info",EH="model_topology",RH="weight_specs",LH="weight_data",BH="model_metadata";function KD(r){return{info:[Mc,r,UD].join(Hi),topology:[Mc,r,EH].join(Hi),weightSpecs:[Mc,r,RH].join(Hi),weightData:[Mc,r,LH].join(Hi),modelMetadata:[Mc,r,BH].join(Hi)}}function VD(r){for(let e of Object.values(r))window.localStorage.removeItem(e)}function $H(r){let e=r.split(Hi);if(e.length<3)throw new Error(`Invalid key format: ${r}`);return e.slice(1,e.length-1).join(Hi)}function OH(r){return r.startsWith(qi.URL_SCHEME)?r.slice(qi.URL_SCHEME.length):r}var qi=class{constructor(e){if(!$().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=KD(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),o=Qa(e);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,RD(e.weightData));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:o}}catch{throw VD(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=o;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let a=JSON.parse(s);t.format=a.format,t.generatedBy=a.generatedBy,t.convertedBy=a.convertedBy,a.signature!=null&&(t.signature=a.signature),a.userDefinedMetadata!=null&&(t.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(t.modelInitializer=a.modelInitializer),a.trainingConfig!=null&&(t.trainingConfig=a.trainingConfig)}let i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=LD(i),t}};qi.URL_SCHEME="localstorage://";var jD=r=>$().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(qi.URL_SCHEME)?zH(r.slice(qi.URL_SCHEME.length)):null;Et.registerSaveRouter(jD);Et.registerLoadRouter(jD);function zH(r){return new qi(r)}var rI=class{constructor(){P($().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),P(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Mc+Hi,n=Hi+UD;for(let o=0;o<this.LS.length;++o){let s=this.LS.key(o);if(s.startsWith(t)&&s.endsWith(n)){let i=$H(s);e[i]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=OH(e);let t=KD(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return VD(t),n}};var Ec="://",an=class{constructor(){this.managers={}}static getInstance(){return an.instance==null&&(an.instance=new an),an.instance}static registerManager(e,t){P(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Ec)&&(e=e.slice(0,e.indexOf(Ec))),P(e.length>0,()=>"scheme must not be an empty string.");let n=an.getInstance();P(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function mb(r){if(r.indexOf(Ec)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${an.getSchemes().join(",")}`);return{scheme:r.split(Ec)[0],path:r.split(Ec)[1]}}async function HD(r,e,t=!1){P(r!==e,()=>`Old path and new path are the same: '${r}'`);let n=Et.getLoadHandlers(r);P(n.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),P(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${r}.`);let o=n[0],s=Et.getSaveHandlers(e);P(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),P(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${e}.`);let i=s[0],a=mb(r).scheme,u=mb(r).path,l=a===mb(r).scheme,p=await o.load();t&&l&&await an.getManager(a).removeModel(u);let c=await i.save(p);return t&&!l&&await an.getManager(a).removeModel(u),c.modelArtifactsInfo}async function qD(){let r=an.getSchemes(),e={};for(let t of r){let n=await an.getManager(t).listModels();for(let o in n){let s=t+Ec+o;e[s]=n[o]}}return e}async function XD(r){let e=mb(r);return an.getManager(e.scheme).removeModel(e.path)}async function YD(r,e){return HD(r,e,!1)}async function QD(r,e){return HD(r,e,!0)}var ZD=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if($().get("IS_BROWSER")){$().setPlatform("browser",new ZD);try{an.registerManager(qi.URL_SCHEME,new rI)}catch{}try{an.registerManager(ji.URL_SCHEME,new tI)}catch{}}var GH={importFetch:()=>JD()},nI;var t0=class{constructor(){this.util=e0(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return $().global.fetch!=null?$().global.fetch(e,t):(nI==null&&(nI=GH.importFetch()),nI(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};$().get("IS_NODE")&&$().setPlatform("node",new t0);function Ce(r,e="float32",t){return e=e||"float32",sf(r),new xt(r,e,t)}function WH(r,e){let t=v(r,"x","cast");if(!_k(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:t},o={dtype:e};return D.runKernel(zn,n,o)}var J=_({cast_:WH});function UH(r){let t={x:v(r,"x","clone","string_or_numeric")};return D.runKernel(Wn,t)}var wn=_({clone_:UH});function oI(r,e=!1){console.log(r.toString(e))}Hk();var KH={buffer:Ce,cast:J,clone:wn,print:oI};_D(KH);var Ur={};Ye(Ur,{browserFiles:()=>o0,browserHTTPRequest:()=>i0,concatenateArrayBuffers:()=>Pc,copyModel:()=>YD,decodeWeights:()=>pb,encodeWeights:()=>MD,fromMemory:()=>l0,getLoadHandlers:()=>zD,getModelArtifactsForJSON:()=>Fc,getModelArtifactsInfoForJSON:()=>Qa,getSaveHandlers:()=>OD,http:()=>gb,isHTTPScheme:()=>hb,listModels:()=>qD,loadWeights:()=>s0,moveModel:()=>QD,registerLoadRouter:()=>$D,registerSaveRouter:()=>BD,removeModel:()=>XD,weightsLoaderFactory:()=>iI,withSaveHandler:()=>p0});var VH="model",jH=".json",HH=".weights.bin";function r0(r){return new Promise(e=>setTimeout(e)).then(r)}var fb=class{constructor(e){if(!$().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(fb.URL_SCHEME)&&(e=e.slice(fb.URL_SCHEME.length)),(e==null||e.length===0)&&(e=VH),this.modelJsonFileName=e+jH,this.weightDataFileName=e+HH}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=cb(e,n),s=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=s,await r0(()=>i.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let a=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;a.download=this.weightDataFileName,a.href=t,await r0(()=>a.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Qa(e)}}}},xf=fb;xf.URL_SCHEME="downloads://";var n0=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=o=>{let s=JSON.parse(o.target.result),i=s.modelTopology;if(i==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:i});return}let u=Fc(s,l=>this.loadWeights(l));e(u)},n.onerror=o=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let i of e)t.push(...i.weights),n.push(...i.paths);let o=this.checkManifestAndWeightFiles(e),s=n.map(i=>this.loadWeightsFile(i,o[i]));return Promise.all(s).then(i=>[t,Pc(i)])}loadWeightsFile(e,t){return new Promise((n,o)=>{let s=new FileReader;s.onload=i=>{let a=i.target.result;n(a)},s.onerror=i=>o(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(s=>Qk(s.name)),o={};for(let s of e)s.paths.forEach(i=>{let a=Qk(i);if(t.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),n.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);o[i]=this.weightsFiles[n.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return o}},qH=r=>$().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(xf.URL_SCHEME)?XH(r.slice(xf.URL_SCHEME.length)):null;Et.registerSaveRouter(qH);function XH(r="model"){return new xf(r)}function o0(r){return new n0(r)}function sI(r,e,t,n){i(r),t=t??0,n=n??1,a(t,n);let o=0,s=u=>(u.then(l=>{let p=t+ ++o/r.length*(n-t);return e(p),l}),u);function i(u){P(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function a(u,l){P(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),P(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),P(l>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${l}`)}return Promise.all(r.map(s))}async function aI(r,e){e==null&&(e={});let t=e.fetchFunc==null?$().platform.fetch:e.fetchFunc,n=r.map(c=>t(c,e.requestInit,{isBinary:!0})),o=0,s=.5,a=(e.onProgress==null?await Promise.all(n):await sI(n,e.onProgress,o,s)).map(c=>c.arrayBuffer()),u=.5,l=1;return e.onProgress==null?await Promise.all(a):await sI(a,e.onProgress,u,l)}async function s0(r,e="",t,n){return iI(i=>aI(i,{requestInit:n}))(r,e,t)}function iI(r){return async(e,t="",n)=>{let o=e.map(()=>!1),s={},i=n!=null?n.map(()=>!1):[],a=[];if(e.forEach((f,d)=>{let h=0;f.weights.forEach(g=>{let x="quantization"in g?g.quantization.dtype:g.dtype,y=yf[x]*pt(g.shape),T=()=>{o[d]=!0,s[d]==null&&(s[d]=[]),s[d].push({manifestEntry:g,groupOffset:h,sizeBytes:y})};n!=null?n.forEach((k,C)=>{k===g.name&&(T(),i[C]=!0)}):T(),a.push(g.name),h+=y})}),!i.every(f=>f)){let f=n.filter((d,h)=>!i[h]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}let u=o.reduce((f,d,h)=>(d&&f.push(h),f),[]),l=[];u.forEach(f=>{e[f].paths.forEach(d=>{let h=t+(t.endsWith("/")?"":"/")+d;l.push(h)})});let p=await r(l),c={},m=0;return u.forEach(f=>{let d=e[f].paths.length,h=0;for(let k=0;k<d;k++)h+=p[m+k].byteLength;let g=new ArrayBuffer(h),x=new Uint8Array(g),y=0;for(let k=0;k<d;k++){let C=new Uint8Array(p[m+k]);x.set(C,y),y+=C.byteLength}s[f].forEach(k=>{let C=g.slice(k.groupOffset,k.groupOffset+k.sizeBytes),N=pb(C,[k.manifestEntry]);for(let A in N)c[A]=N[A]}),m+=d}),c}}var YH="application/octet-stream",QH="application/json",db=class{constructor(e,t){this.DEFAULT_METHOD="POST";if(t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(P(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=$().platform.fetch,P(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&P(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],o=cb(e,n);t.body.append("model.json",new Blob([JSON.stringify(o)],{type:QH}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:YH}),"model.weights.bin");let s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Qa(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}let n=t.modelTopology,o=t.weightsManifest;if(n==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Fc(t,s=>this.loadWeights(s))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,o]=ZH(t),s=this.weightPathPrefix||n,i=[];for(let p of e)i.push(...p.weights);let a=[],u=[];for(let p of e)for(let c of p.paths)this.weightUrlConverter!=null?u.push(this.weightUrlConverter(c)):a.push(s+c+o);this.weightUrlConverter&&a.push(...await Promise.all(u));let l=await aI(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,Pc(l)]}};db.URL_SCHEME_REGEX=/^https?:\/\//;function ZH(r){let e=r.lastIndexOf("/"),t=r.lastIndexOf("?"),n=r.substring(0,e),o=t>e?r.substring(t):"";return[n+"/",o]}function hb(r){return r.match(db.URL_SCHEME_REGEX)!=null}var a0=(r,e)=>{if(typeof fetch=="undefined"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(r)?t=r.every(n=>hb(n)):t=hb(r),t)return gb(r,e)}return null};Et.registerSaveRouter(a0);Et.registerLoadRouter(a0);function gb(r,e){return new db(r,e)}function i0(r,e){return gb(r,e)}var bb=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},u0=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function l0(r,e,t,n){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new bb(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new bb({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new bb({modelTopology:r,weightSpecs:e,weightData:t,trainingConfig:n}))}function p0(r){return new u0(r)}var m0={};Ye(m0,{confusionMatrix:()=>c0});function JH(r,e,t=!1,n=!1){let o=v(r,"a","matMul"),s=v(e,"b","matMul");[o,s]=Ze(o,s);let i={a:o,b:s},a={transposeA:t,transposeB:n};return D.runKernel(no,i,a)}var je=_({matMul_:JH});function eq(r,e,t=1,n=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);let s={indices:v(r,"indices","oneHot","int32")},i={depth:e,onValue:t,offValue:n};return D.runKernel(pa,s,i)}var Xi=_({oneHot_:eq});function tq(r,e){let t=v(r,"x","transpose");if(e==null&&(e=t.shape.map((s,i)=>i).reverse()),P(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of perm ${e}.`),e.forEach(s=>{P(s>=0&&s<t.rank,()=>`All entries in 'perm' must be between 0 and ${t.rank-1} but got ${e}`)}),t.rank<=1)return t.clone();let n={x:t},o={perm:e};return D.runKernel(Wo,n,o)}var qe=_({transpose_:tq});function rq(r,e,t){let n=v(r,"labels","confusionMatrix"),o=v(e,"predictions","confusionMatrix");P(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),P(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),P(o.rank===1,()=>`Expected the rank of predictions to be 1, but got ${o.rank}`),P(n.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),P(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);let s=Xi(J(n,"int32"),t),i=Xi(J(o,"int32"),t),a=qe(s),u=je(a,i);return J(u,"int32")}var c0=_({confusionMatrix_:rq});var Ds={};Ye(Ds,{assertAndGetBroadcastShape:()=>Ue,getBroadcastDims:()=>f0,getReductionAxes:()=>wt});function f0(r,e){let t=r.length,n=[];for(let o=0;o<t;o++){let s=t-1-o,i=r[s]||1;(e[e.length-1-o]||1)>1&&i===1&&n.unshift(s)}return n}function wt(r,e){let t=[];for(let n=0;n<e.length;n++){let o=r[r.length-n-1],s=e.length-n-1,i=e[s];(o==null||o===1&&i>1)&&t.unshift(s)}return t}function Ue(r,e){let t=[],n=Math.max(r.length,e.length);for(let o=0;o<n;o++){let s=r[r.length-o-1];s==null&&(s=1);let i=e[e.length-o-1];if(i==null&&(i=1),s===1)t.unshift(i);else if(i===1)t.unshift(s);else if(s!==i){let a=`Operands could not be broadcast together with shapes ${r} and ${e}.`;throw Error(a)}else t.unshift(s)}return t}var yb={};Ye(yb,{fromPixels:()=>lq,fromPixelsAsync:()=>iq,toPixels:()=>uq});function uI(r,e,t){if(Jn(r),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=Wr(r,t);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return sn(r,e,n,t)}var Dl;function d0(r,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,n=!1,o=!1,s=!1,i=!1,a=!1;if(r.data instanceof Uint8Array)t=!0;else if(typeof ImageData!="undefined"&&r instanceof ImageData)n=!0;else if(typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement)s=!0;else if(r.getContext!=null)i=!0;else if(typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(o){let d=2;if(o&&r.readyState<d)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(mf(Cl,D.backendName)!=null){let d={pixels:r},h={numChannels:e};return D.runKernel(Cl,d,h)}let[l,p]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],c;if(i)c=r.getContext("2d").getImageData(0,0,l,p).data;else if(n||t)c=r.data;else if(s||o||a){if(Dl==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")Dl=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Dl=document.createElement("canvas").getContext("2d");Dl.canvas.width=l,Dl.canvas.height=p,Dl.drawImage(r,0,0,l,p),c=Dl.getImageData(0,0,l,p).data}let m;if(e===4)m=new Int32Array(c);else{let d=l*p;m=new Int32Array(d*e);for(let h=0;h<d;h++)for(let g=0;g<e;++g)m[h*e+g]=c[h*4+g]}return uI(m,[p,l,e],"int32")}function nq(r){return r!=null&&r.data instanceof Uint8Array}function oq(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function sq(r){return r!=null&&r.width!==0&&r.height!==0}function aq(r){return oq()&&!(r instanceof ImageBitmap)&&sq(r)&&!nq(r)}async function iq(r,e=3){let t=null;if($().getBool("WRAP_TO_IMAGEBITMAP")&&aq(r)){let n;try{n=await createImageBitmap(r,{premultiplyAlpha:"none"})}catch{n=null}n!=null&&n.width===r.width&&n.height===r.height?t=n:t=r}else t=r;return d0(t,e)}async function uq(r,e){let t=v(r,"img","toPixels");if(!(r instanceof Qe)){let l=t;t=J(l,"int32"),l.dispose()}if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);let[n,o]=t.shape.slice(0,2),s=t.rank===2?1:t.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`);let i=await t.data(),a=t.dtype==="float32"?255:1,u=new Uint8ClampedArray(o*n*4);for(let l=0;l<n*o;++l){let p=[0,0,0,255];for(let m=0;m<s;m++){let f=i[l*s+m];if(t.dtype==="float32"){if(f<0||f>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${f}.`)}else if(t.dtype==="int32"&&(f<0||f>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${f}.`);s===1?(p[0]=f*a,p[1]=f*a,p[2]=f*a):p[m]=f*a}let c=l*4;u[c+0]=Math.round(p[0]),u[c+1]=Math.round(p[1]),u[c+2]=Math.round(p[2]),u[c+3]=Math.round(p[3])}if(e!=null){e.width=o,e.height=n;let l=e.getContext("2d"),p=new ImageData(u,o,n);l.putImageData(p,0,0)}return t!==r&&t.dispose(),u}var lq=_({fromPixels_:d0});var xb={};Ye(xb,{prepareAndValidate:()=>h0});function h0(r,e){let t=r.shape.length,n=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[n-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[n-1]} vs. ${t}`);if(pt(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let o=e.shape,s=o[o.length-1],i=1;for(let c=0;c<o.length-1;++c)i*=o[c];let a=r.shape,u=o.slice();u.pop();let l=1;for(let c=s;c<t;++c)l*=a[c],u.push(a[c]);let p=[...Ua(r.shape).map(c=>c/l),1].slice(0,s);return[u,i,l,p]}var kb={};Ye(kb,{calculateShapes:()=>g0,validateInput:()=>Tb,validateUpdateShape:()=>lI});function lI(r,e,t){let n=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${r}, sliceDim: ${n}, and batchDim: ${o}.`;if(t.rank<o)throw new Error(s+` update.rank < ${o}. `);if(r.length<n+(t.rank-o))throw new Error(s+` Output shape length < ${n+(t.rank-o)}`);if(t.rank!==o+r.length-n)throw new Error(s+` update.rank != ${o+r.length-n}`);for(let i=0;i<o;++i)if(t.shape[i]!==e.shape[i])throw new Error(s+` updates.shape[${i}] (${t.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<t.rank-o;++i)if(t.shape[i+o]!==r[i+n])throw new Error(s+` updates.shape[${i+o}] (${t.shape[i+o]}) != shape[${i+o}] (${r[i+o]})`)}function Tb(r,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}lI(t,e,r)}function g0(r,e,t){let n=e.shape.length,o=n>1?e.shape[n-1]:1,s=t.length,i=1;for(let c=o;c<s;++c)i*=t[c];let a=o<1?1:o,u=pt(e.shape)/a,l=[...Ua(t.slice(0,o)),1],p=pt(t);return{sliceRank:o,numUpdates:u,sliceSize:i,strides:l,outputSize:p}}var kt={};Ye(kt,{assertParamsValid:()=>cq,computeFlatOffset:()=>gq,computeOutShape:()=>fq,getNormalizedAxes:()=>dq,isSliceContinous:()=>hq,maskToAxes:()=>mq,parseSliceParams:()=>cI,sliceInfo:()=>bq,startForAxis:()=>C0,startIndicesWithElidedDims:()=>T0,stopForAxis:()=>v0,stopIndicesWithElidedDims:()=>k0,stridesForAxis:()=>I0,stridesWithElidedDims:()=>b0});var pI=-2,pq=-1;function cq(r,e,t){let n=r.shape.length;P(n===e.length,()=>`Error in slice${n}D: Length of begin ${e} must match the rank of the array (${n}).`),P(n===t.length,()=>`Error in slice${n}D: Length of size ${t} must match the rank of the array (${n}).`);for(let o=0;o<n;++o)P(e[o]+t[o]<=r.shape[o],()=>`Error in slice${n}D: begin[${o}] + size[${o}] (${e[o]+t[o]}) would overflow input.shape[${o}] (${r.shape[o]})`)}function mq(r){let e=[],t=0;for(;r>0;)r&1&&e.push(t),r/=2,t++;return e}function fq(r,e,t){let n=[];for(let o=0;o<r.length;o++)n[o]=Math.ceil((e[o]-r[o])/t[o]);return n}function b0(r,e,t,n){let o=[...r];for(let s=o.length;s<n.length;s++)o.push(1);for(let s=0;s<t;s++)s===0?o[e]=1:(o.splice(e,0,1),o.pop());return o}function y0(r,e,t){return t<=r?t:t-(e-1)}function x0(r,e){let t=[];for(let n=0;n<r;n++)t.push(e+n);return t}function dq(r,e,t,n,o,s,i,a,u){let l=r.length,p=new Array(l),c=new Array(l),m=new Array(l);if(e.length&&t>0){let f=e[0],d=t+1;p=T0(i,f,d,n,r),c=k0(a,f,d,o,r),m=b0(s,f,d,r)}else for(let f=0;f<l;f++)p[f]=C0(i,n,s,r,f,u),c[f]=v0(a,o,s,r,f,u),m[f]=I0(s,f,u);return{begin:p,end:c,strides:m}}function T0(r,e,t,n,o){let s=[...o],i=x0(t,e);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{let u=y0(e,t,a),l=n[u];r&1<<u&&(l=0),s[a]=l}return s}function k0(r,e,t,n,o){let s=[...o],i=x0(t,e);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{let u=y0(e,t,a),l=n[u];r&1<<u&&(l=Number.MAX_SAFE_INTEGER),s[a]=l}for(let a=0;a<s.length;a++){let u=o[a];s[a]<0&&(s[a]+=u),s[a]=jp(0,s[a],o[a])}return s}function I0(r,e,t){let n=r[e];return(t&1<<e||n==null)&&(n=1),n}function C0(r,e,t,n,o,s){let i=e[o],a=t[o]||1;(r&1<<o||s&1<<o||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let u=n[o];return i<0&&(i+=u),i=jp(0,i,u-1),i}function v0(r,e,t,n,o,s){let i=e[o],a=t[o]||1;(r&1<<o||s&1<<o||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let u=n[o];return i<0&&(i+=u),a>0?i=jp(0,i,u):i=jp(-1,i,u-1),i}function hq(r,e,t){let n=t.length;for(let o=0;o<t.length;o++)if(t[o]>1){n=o;break}for(let o=n+1;o<t.length;o++)if(e[o]>0||t[o]!==r[o])return!1;return!0}function gq(r,e){let t=r.length>0?r[r.length-1]:1;for(let n=0;n<r.length-1;n++)t+=r[n]*e[n];return t}function cI(r,e,t){let n,o=r.shape.length;typeof e=="number"?n=[e,...new Array(o-1).fill(0)]:e.length<o?n=e.concat(new Array(o-e.length).fill(0)):n=e.slice(),n.forEach(i=>{P(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return t==null?s=new Array(o).fill(-1):typeof t=="number"?s=[t,...new Array(o-1).fill(-1)]:t.length<o?s=t.concat(new Array(o-t.length).fill(-1)):s=t,s=s.map((i,a)=>i>=0?i:(P(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),r.shape[a]-n[a])),[n,s]}function bq(r,e,t,n,o,s,i,a,u){let l;if(n==null?(l=new Array(e.length),l.fill(1)):l=n,i!=null&&(i&i-1)!=0)throw new Error("Multiple ellipses in slice is not allowed.");let p=!1,c={dims:l.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:l.slice(),beginMask:o,endMask:s,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:u};for(let T=0;T<c.dims;T++)p&&(1<<T&a)!=0&&c.numAddAxisAfterEllipsis++,1<<T&i&&(p=!0);p||(c.ellipsisMask|=1<<c.dims,c.dims++);let m={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};yq(c,m);let f=!0,d=!0,h=!0,g=[],x=[];for(let T=0;T<r.length;++T){if(m.strides[T]===0)throw Error(`strides[${T}] must be non-zero`);let k=!!(m.shrinkAxisMask&1<<T),C=r[T];if(C===-1){g.push(k?1:-1);continue}let N=[m.beginMask&1<<T,m.endMask&1<<T],A=[m.strides[T]>0?0:-1,m.strides[T]>0?C:C-1];if(k&&m.strides[T]<=0)throw Error("only stride 1 allowed on non-range indexing.");h=h&&m.strides[T]===1;let M=!!(m.beginMask&1<<T&&m.endMask&1<<T);if(m.beginValid&&m.endValid){if(k){let U=m.begin[T]<0?C+m.begin[T]:m.begin[T];if(m.begin[T]=U,m.end[T]=m.begin[T]+1,U<0||U>=C)throw Error(`slice index ${m.begin[T]} of dimension ${T} out of bounds.`)}else m.begin[T]=w0(m.begin[T],0,m.strides[T],C,N,A),m.end[T]=w0(m.end[T],1,m.strides[T],C,N,A);let W=m.strides[T]===1&&m.begin[T]===0&&m.end[T]===C;f=f&&W,d=d&&(T===0&&m.strides[T]===1||W)}else f=f&&m.strides[T]===1&&M,d=d&&(T===0&&m.strides[T]===1||M);let E,B=!1;if(m.beginValid&&m.endValid?(E=m.end[T]-m.begin[T],B=!0):k?(E=1,B=!0):M&&C>=0&&(m.strides[T]<0?E=-C:E=C,B=!0),B){let W;E===0||E<0!=m.strides[T]<0?W=0:W=Math.trunc(E/m.strides[T])+(E%m.strides[T]!=0?1:0),g.push(W)}else g.push(-1)}for(let T=0;T<m.finalShapeGatherIndices.length;++T){let k=m.finalShapeGatherIndices[T];k>=0?x.push(g[k]):k===pI&&x.push(1)}return{finalShapeSparse:x.filter((T,k)=>m.finalShapeGatherIndices[k]!==pI),finalShape:x,isIdentity:f,sliceDim0:d,isSimpleSlice:h,begin:m.begin,end:m.end,strides:m.strides}}function yq(r,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=r.begin!=null,e.endValid=r.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let n=0;n<r.dims;n++)if(1<<n&r.ellipsisMask){let o=Math.min(e.dims-(r.dims-n)+1+r.numAddAxisAfterEllipsis,e.dims);for(;t<o;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=n}else if(1<<n&r.newAxisMask)e.finalShapeGatherIndices.push(pI),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);r.begin!=null&&(e.begin[t]=r.begin[n]),r.end!=null&&(e.end[t]=r.end[n]),e.strides[t]=r.strides[n],r.beginMask&1<<n&&(e.beginMask|=1<<t),r.endMask&1<<n&&(e.endMask|=1<<t),r.shrinkAxisMask&1<<n?(e.finalShapeGatherIndices.push(pq),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(n)),e.inputShapeGatherIndicesSparse[t]=n,t++}}function w0(r,e,t,n,o,s){if(o[e])return t>0?s[e]:s[e+1&1];{let i=r<0?n+r:r;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var re={};Ye(re,{Serializable:()=>Ib,SerializationMap:()=>Yi,registerClass:()=>Sn});var Ib=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Yi=class{constructor(){this.classNameMap={}}static getMap(){return Yi.instance==null&&(Yi.instance=new Yi),Yi.instance}static register(e){Yi.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Sn(r){P(r.className!=null,()=>"Class being registered does not have the static className property defined."),P(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),P(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Yi.register(r)}var N0={};Ye(N0,{TEST_EPSILON_FLOAT16:()=>S0,encodeStrings:()=>A0,expectArrayBuffersEqual:()=>vq,expectArraysClose:()=>Tq,expectArraysEqual:()=>Iq,expectNumbersClose:()=>_0,expectPromiseToFail:()=>kq,expectValuesInRange:()=>Cq,testEpsilon:()=>Cb});var xq=.001,S0=.1;function Tq(r,e,t){return t==null&&(t=Cb()),mI(r,e,(n,o)=>fI(n,o,t))}function Cb(){return D.backend.floatPrecision()===32?xq:S0}function mI(r,e,t){let n=!0;if((Tr(r)||Tr(e))&&(n=!1),Tr(r)&&Tr(e)&&(n=!0),n){let i=r.constructor.name,a=e.constructor.name;if(i!==a)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${a}`)}if(Array.isArray(r)&&Array.isArray(e)){let i=Wr(r),a=Wr(e);if(!On(i,a))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${a}]`)}let o=Tr(r)?r:Hs(r),s=Tr(e)?e:Hs(e);if(o.length!==s.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${s.length}.
Actual:   ${o}.
Expected: ${s}.`);for(let i=0;i<s.length;++i){let a=o[i],u=s[i];if(!t(a,u))throw new Error(`Arrays differ: actual[${i}] = ${a}, expected[${i}] = ${u}.
Actual:   ${o}.
Expected: ${s}.`)}}function kq(r,e){r().then(()=>e.fail(),()=>e())}function Iq(r,e){let t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return qs(r)||qs(r[0])||qs(e)||qs(e[0])?mI(r,t,(n,o)=>n==o):mI(r,e,(n,o)=>fI(n,o,0))}function _0(r,e,t){if(t==null&&(t=Cb()),!fI(r,e,t))throw new Error(`Numbers differ: actual === ${r}, expected === ${e}`)}function fI(r,e,t){return!isFinite(r)&&!isFinite(e)?!0:!(isNaN(r)||isNaN(e)||Math.abs(r-e)>t)}function Cq(r,e,t){for(let n=0;n<r.length;n++)if(r[n]<e||r[n]>t)throw new Error(`Value out of range:${r[n]} low: ${e}, high: ${t}`)}function vq(r,e){expect(new Float32Array(r)).toEqual(new Float32Array(e))}function A0(r){for(let e=0;e<r.length;e++){let t=r[e];Array.isArray(t)?A0(t):r[e]=Wu(t)}return r}var wq="0.0.0";function fbe(){$().set("PROD",!0)}function dbe(){$().set("DEBUG",!0)}function hbe(){$().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function dI(r){$().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}AD(dI);function gbe(){D.disposeVariables()}function Uo(){return D}function Tf(){return D.memory()}function bbe(r){return D.profile(r)}function G(r,e){return D.tidy(r,e)}function Ee(r){bf(r).forEach(t=>t.dispose())}function Vt(r){return D.keep(r)}function ybe(r){return D.time(r)}function Sq(r){return D.setBackend(r)}function xbe(){return D.ready()}function Tbe(){return D.backendName}function kbe(r){D.removeBackend(r)}function Ibe(r){return D.findBackend(r)}function Cbe(r){return D.findBackendFactory(r)}function Vu(r,e,t=1){return D.registerBackend(r,e,t)}function D0(){return D.backend}function vbe(r,e){$().setPlatform(r,e)}function _q(r,e){let t=v(r,"a","add"),n=v(e,"b","add");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(Cn,o)}var X=_({add_:_q});function Aq(r,e){let t=v(r,"a","floorDiv"),n=v(e,"b","floorDiv");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(ho,o)}var kf=_({floorDiv_:Aq});function Nq(r,e){let t=v(r,"a","div"),n=v(e,"b","div");if([t,n]=Ze(t,n),t.dtype==="int32"&&n.dtype==="int32")return kf(t,n);let o={a:t,b:n},s={};return D.runKernel(po,o,s)}var ce=_({div_:Nq});function Dq(r,e){let t=v(r,"a","mul"),n=v(e,"b","mul");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(So,o)}var R=_({mul_:Dq});function Pq(r){let e=v(r,"x","abs");if(e.dtype==="complex64"){let t={x:e};return D.runKernel(Du,t)}else{let t={x:e};return D.runKernel(is,t)}}var $t=_({abs_:Pq});function Fq(r){let t={x:v(r,"x","acos")};return D.runKernel(ki,t)}var hI=_({acos_:Fq});function Mq(r){let t={x:v(r,"x","acosh")};return D.runKernel(Ii,t)}var gI=_({acosh_:Mq});function Eq(r){P(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),P(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let e=r.map((o,s)=>v(o,`tensors${s}`,"addN")),t=e[0];e.forEach(o=>{if(o.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(o=>{if(!On(o.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=e;return D.runKernel(eo,n)}var bI=_({addN_:Eq});function Rq(r,e=null,t=!1){let o={x:v(r,"x","all","bool")},s={axis:e,keepDims:t};return D.runKernel(Ci,o,s)}var If=_({all_:Rq});function Lq(r,e=null,t=!1){let o={x:v(r,"x","any","bool")},s={axis:e,keepDims:t};return D.runKernel(vi,o,s)}var Rc=_({any_:Lq});function Bq(r,e=0){let n={x:v(r,"x","argMax")},o={axis:e};return D.runKernel(to,n,o)}var Qi=_({argMax_:Bq});function $q(r,e=0){let n={x:v(r,"x","argMin")},o={axis:e};return D.runKernel(Ka,n,o)}var yI=_({argMin_:$q});function Oq(r){let t={x:v(r,"x","asin")};return D.runKernel(wi,t)}var xI=_({asin_:Oq});function zq(r){let t={x:v(r,"x","asinh")};return D.runKernel(Si,t)}var TI=_({asinh_:zq});function Gq(r){let t={x:v(r,"x","atan")};return D.runKernel(_i,t)}var kI=_({atan_:Gq});function Wq(r,e){let t=v(r,"a","atan2"),n=v(e,"b","atan2");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(Ni,o)}var II=_({atan2_:Wq});function Uq(r){let t={x:v(r,"x","atanh")};return D.runKernel(Ai,t)}var CI=_({atanh_:Uq});function Kq(r,e,t,n,o="NHWC",s){let i=r[3],a=[...e,i],u=F0(o);return Pl(r,a,t,s,n,null,null,u)}function vI(r,e,t,n,o,s,i="channelsLast"){let[a,u]=vb(e),l;if(i==="channelsLast")l=[a,u,r[3],r[3]];else if(i==="channelsFirst")l=[a,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${i}`);return Pl(r,l,t,n,o,s,!1,i)}function Vq(r,e,t,n,o,s,i="NDHWC"){let[a,u,l]=SI(e),p,c;if(i==="NDHWC")c="channelsLast",p=[a,u,l,r[4],r[4]];else if(i==="NCDHW")c="channelsFirst",p=[a,u,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${i}`);return P0(r,p,t,n,o,!1,c,s)}function Pl(r,e,t,n,o,s,i=!1,a="channelsLast"){let[u,l,p,c]=[-1,-1,-1,-1];if(a==="channelsLast")[u,l,p,c]=r;else if(a==="channelsFirst")[u,c,l,p]=r;else throw new Error(`Unknown dataFormat ${a}`);let[m,f,,d]=e,[h,g]=vb(t),[x,y]=vb(n),T=Lc(m,x),k=Lc(f,y),{padInfo:C,outHeight:N,outWidth:A}=qq(o,l,p,h,g,T,k,s,a),M=i?d*c:d,E;return a==="channelsFirst"?E=[u,M,N,A]:a==="channelsLast"&&(E=[u,N,A,M]),{batchSize:u,dataFormat:a,inHeight:l,inWidth:p,inChannels:c,outHeight:N,outWidth:A,outChannels:M,padInfo:C,strideHeight:h,strideWidth:g,filterHeight:m,filterWidth:f,effectiveFilterHeight:T,effectiveFilterWidth:k,dilationHeight:x,dilationWidth:y,inShape:r,outShape:E,filterShape:e}}function P0(r,e,t,n,o,s=!1,i="channelsLast",a){let[u,l,p,c,m]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[u,l,p,c,m]=r;else if(i==="channelsFirst")[u,m,l,p,c]=r;else throw new Error(`Unknown dataFormat ${i}`);let[f,d,h,,g]=e,[x,y,T]=SI(t),[k,C,N]=SI(n),A=Lc(f,k),M=Lc(d,C),E=Lc(h,N),{padInfo:B,outDepth:W,outHeight:U,outWidth:K}=Xq(o,l,p,c,x,y,T,A,M,E,a),j=s?g*m:g,V;return i==="channelsFirst"?V=[u,j,W,U,K]:i==="channelsLast"&&(V=[u,W,U,K,j]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:p,inWidth:c,inChannels:m,outDepth:W,outHeight:U,outWidth:K,outChannels:j,padInfo:B,strideDepth:x,strideHeight:y,strideWidth:T,filterDepth:f,filterHeight:d,filterWidth:h,effectiveFilterDepth:A,effectiveFilterHeight:M,effectiveFilterWidth:E,dilationDepth:k,dilationHeight:C,dilationWidth:N,inShape:r,outShape:V,filterShape:e}}function jq(r,e,t,n,o){n==null&&(n=wI(r,e,t));let s=r[0],i=r[1],a=Fl((s-e+2*n)/t+1,o),u=Fl((i-e+2*n)/t+1,o);return[a,u]}function Hq(r,e,t,n,o,s){o==null&&(o=wI(r,e,n));let i=r[0],a=r[1],u=r[2],l=Fl((i-e+2*o)/n+1,s),p=Fl((a-e+2*o)/n+1,s),c=Fl((u-e+2*o)/n+1,s);return[l,p,c,t]}function wI(r,e,t,n=1){let o=Lc(e,n);return Math.floor((r[0]*(t-1)-t+o)/2)}function vb(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function SI(r){return typeof r=="number"?[r,r,r]:r}function Lc(r,e){return e<=1?r:r+(r-1)*(e-1)}function qq(r,e,t,n,o,s,i,a,u){let l,p,c;if(typeof r=="number"){l={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let f=jq([e,t],s,n,r,a);p=f[0],c=f[1]}else if(r==="same"){p=Math.ceil(e/n),c=Math.ceil(t/o);let m=Math.max(0,(p-1)*n+s-e),f=Math.max(0,(c-1)*o+i-t),d=Math.floor(m/2),h=m-d,g=Math.floor(f/2),x=f-g;l={top:d,bottom:h,left:g,right:x,type:"SAME"}}else if(r==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((e-s+1)/n),c=Math.ceil((t-i+1)/o);else if(typeof r=="object"){let m=u==="channelsLast"?r[1][0]:r[2][0],f=u==="channelsLast"?r[1][1]:r[2][1],d=u==="channelsLast"?r[2][0]:r[3][0],h=u==="channelsLast"?r[2][1]:r[3][1];l={top:m,bottom:f,left:d,right:h,type:m===0&&f===0&&d===0&&h===0?"VALID":"EXPLICIT"},p=Fl((e-s+m+f)/n+1,a),c=Fl((t-i+d+h)/o+1,a)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:l,outHeight:p,outWidth:c}}function Xq(r,e,t,n,o,s,i,a,u,l,p){let c,m,f,d;if(typeof r=="number"){c={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=Hq([e,t,n,1],a,1,o,r,p);m=g[0],f=g[1],d=g[2]}else if(r==="same"){m=Math.ceil(e/o),f=Math.ceil(t/s),d=Math.ceil(n/i);let h=(m-1)*o+a-e,g=(f-1)*s+u-t,x=(d-1)*i+l-n,y=Math.floor(h/2),T=h-y,k=Math.floor(g/2),C=g-k,N=Math.floor(x/2),A=x-N;c={top:k,bottom:C,left:N,right:A,front:y,back:T,type:"SAME"}}else if(r==="valid")c={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},m=Math.ceil((e-a+1)/o),f=Math.ceil((t-u+1)/s),d=Math.ceil((n-l+1)/i);else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:c,outDepth:m,outHeight:f,outWidth:d}}function Fl(r,e){if(!e)return Math.trunc(r);switch(e){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${e}`)}}function Ko(r){let[e,t,n]=vb(r);return e===1&&t===1&&n===1}function Er(r,e){return Ko(r)||Ko(e)}function F0(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function Yq(r,e){let n={x:v(r,"x","reshape","string_or_numeric")},o={shape:e};return D.runKernel(hs,n,o)}var L=_({reshape_:Yq});function Qq(r,e,t,n,o){let s=v(r,"x","avgPool","float32"),i=1;P(Er(t,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);let a=s,u=!1;s.rank===3&&(u=!0,a=L(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),o!=null&&P(ct(n),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let l={x:a},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o},c=D.runKernel(ro,l,p);return c=J(c,s.dtype),u?L(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var Ml=_({avgPool_:Qq});function Zq(r,e,t,n,o,s="NDHWC"){let i=v(r,"x","avgPool3d","float32"),a=i,u=!1;i.rank===4&&(u=!0,a=L(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),P(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),o!=null&&P(ct(n),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let l={x:a},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},c=D.runKernel(Au,l,p);return c=J(c,a.dtype),u?L(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Cf=_({avgPool3d_:Zq});function Jq(r,e=0){P(r.length>=1,()=>"Pass at least one tensor to concat");let t=Vi(r,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),t.length===1)return wn(t[0]);let n=t,o={axis:e};return D.runKernel(ls,n,o)}var ut=_({concat_:Jq});function e6(r){let t={x:v(r,"x","sigmoid","float32")};return D.runKernel(Ro,t)}var un=_({sigmoid_:e6});function t6(r,e,t){let n=v(r,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let o={x:n},s={begin:e,size:t};return D.runKernel(bs,o,s)}var We=_({slice_:t6});function r6(r){let t={x:v(r,"x","tanh","float32")};return D.runKernel(Go,t)}var Zi=_({tanh_:r6});function n6(r,e,t,n,o,s){let i=v(r,"forgetBias","basicLSTMCell"),a=v(e,"lstmKernel","basicLSTMCell"),u=v(t,"lstmBias","basicLSTMCell"),l=v(n,"data","basicLSTMCell"),p=v(o,"c","basicLSTMCell"),c=v(s,"h","basicLSTMCell"),m=ut([l,c],1),f=je(m,a),d=X(f,u),h=d.shape[0],g=d.shape[1]/4,x=[h,g],y=We(d,[0,0],x),T=We(d,[0,g],x),k=We(d,[0,g*2],x),C=We(d,[0,g*3],x),N=X(R(un(y),Zi(T)),R(p,un(X(i,k)))),A=R(Zi(N),un(C));return[N,A]}var o6=_({basicLSTMCell_:n6});function s6(r,e,t){let n=v(r,"x","batchToSpaceND"),o=e.reduce((a,u)=>a*u);P(n.rank>=1+e.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${e.length}`),P(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),P(n.shape[0]%o==0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${o}`);let s={x:n},i={blockShape:e,crops:t};return D.runKernel(us,s,i)}var El=_({batchToSpaceND_:s6});function M0(r){let e;return r.rank===0||r.rank===1?e=L(r,[1,1,1,r.size]):r.rank===2?e=L(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?e=L(r,[1,r.shape[0],r.shape[1],r.shape[2]]):e=r,e}function a6(r,e,t,n,o,s){s==null&&(s=.001);let i=v(r,"x","batchNorm"),a=v(e,"mean","batchNorm"),u=v(t,"variance","batchNorm"),l;o!=null&&(l=v(o,"scale","batchNorm"));let p;n!=null&&(p=v(n,"offset","batchNorm")),P(a.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(p==null||a.rank===p.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(l==null||a.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let m={x:M0(i),scale:l,offset:p,mean:a,variance:u},f={varianceEpsilon:s},d=D.runKernel(go,m,f);return L(d,i.shape)}var Za=_({batchNorm_:a6});function i6(r,e,t,n,o,s){let i=v(r,"x","batchNorm"),a=v(e,"mean","batchNorm"),u=v(t,"variance","batchNorm"),l;o!=null&&(l=v(o,"scale","batchNorm"));let p;return n!=null&&(p=v(n,"offset","batchNorm")),P(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),P(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),P(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),p!=null&&P(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`),Za(i,a,u,p,l,s)}var _I=_({batchNorm2d_:i6});function u6(r,e,t,n,o,s){let i=v(r,"x","batchNorm"),a=v(e,"mean","batchNorm"),u=v(t,"variance","batchNorm"),l;o!=null&&(l=v(o,"scale","batchNorm"));let p;return n!=null&&(p=v(n,"offset","batchNorm")),P(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),P(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),P(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),p!=null&&P(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`),Za(i,a,u,p,l,s)}var AI=_({batchNorm3d_:u6});function l6(r,e,t,n,o,s){let i=v(r,"x","batchNorm"),a=v(e,"mean","batchNorm"),u=v(t,"variance","batchNorm"),l;o!=null&&(l=v(o,"scale","batchNorm"));let p;return n!=null&&(p=v(n,"offset","batchNorm")),P(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),P(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),P(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),p!=null&&P(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`),Za(i,a,u,p,l,s)}var NI=_({batchNorm4d_:l6});function p6(r,e,t){let n=v(r,"x","bincount"),o=v(e,"weights","bincount");P(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),P(t>=0,()=>`size must be non-negative, but got ${t}.`),P(o.size===n.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${o.shape}.`);let s={x:n,weights:o},i={size:t};return D.runKernel(Zp,s,i)}var vf=_({bincount_:p6});function c6(r,e){let t=v(r,"s0","broadcastArgs","int32"),n=v(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);let o={s0:t,s1:n};return D.runKernel(Jp,o)}var DI=_({broadcastArgs_:c6});function m6(r,e){let t=v(r,"broadcastTo","x"),n=t.shape;if(e.some(l=>!(l>0)||l%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){let l=t.shape.slice();for(;l.length<e.length;)l.unshift(1);t=L(t,l)}let o=t.shape,s=Array.from(e);for(let l=e.length-1;l>=0;l--)if(o[l]===e[l])s[l]=1;else if(t.shape[l]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${e}].`);if(s.map((l,p)=>l>1?p:-1).filter(l=>l>=0).length===0)return wn(t);let a={x:t},u={reps:s};return D.runKernel(vn,a,u)}var Rl=_({broadcastTo_:m6});function f6(r){let t={x:v(r,"x","ceil","float32")};return D.runKernel(oo,t)}var PI=_({ceil_:f6});function d6(r,e,t){let n=v(r,"x","clipByValue");P(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`);let o={x:n},s={clipValueMin:e,clipValueMax:t};return D.runKernel(Gn,o,s)}var Rr=_({clipByValue_:d6});function h6(r){return ut(r,0)}var FI=_({concat1d_:h6});function g6(r,e){return ut(r,e)}var MI=_({concat2d_:g6});function b6(r,e){return ut(r,e)}var EI=_({concat3d_:b6});function y6(r,e){return ut(r,e)}var RI=_({concat4d_:y6});function x6(r,e,t,n,o="NHWC",s=[1,1],i){let a=v(r,"x","conv2d","float32"),u=v(e,"filter","conv2d","float32"),l=a,p=!1;a.rank===3&&(p=!0,l=L(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),P(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),i!=null&&P(ct(n),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${n}.`);let c=o==="NHWC"?l.shape[3]:l.shape[1];P(c===u.shape[2],()=>`Error in conv2d: depth of input (${c}) must match input depth for filter ${u.shape[2]}.`),P(Er(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);let m={x:l,filter:u},f={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i},d=D.runKernel(so,m,f);return p?L(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var jn=_({conv2d_:x6});function T6(r,e,t,n,o="NWC",s=1,i){let a=v(r,"x","conv1d"),u=v(e,"filter","conv1d"),l=a,p=!1;a.rank===2&&(p=!0,l=L(a,[1,a.shape[0],a.shape[1]])),P(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),P(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),i!=null&&P(ct(n),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${n}.`),P(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),P(Er(t,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${s}'`),P(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);let c=L(u,[1,u.shape[0],u.shape[1],u.shape[2]]),m=L(l,[l.shape[0],1,l.shape[1],l.shape[2]]),g=jn(m,c,[1,t],n,"NHWC",[1,s],i);return p?L(g,[g.shape[2],g.shape[3]]):L(g,[g.shape[0],g.shape[2],g.shape[3]])}var wf=_({conv1d_:T6});function k6(r,e,t,n,o,s="NHWC",i){P(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let a=r,u=e,l=!1;e.rank===3&&(l=!0,u=L(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,r[0],r[1],r[2]]),P(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),P(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),P(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);let p=s==="NHWC"?a[3]:a[1],c=s==="NHWC"?u.shape[3]:u.shape[1];P(p===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${t.shape[2]}.`),P(c===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${c}) must match output depth for filter ${t.shape[3]}.`),i!=null&&P(ct(o),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${o}.`);let m={dy:u,filter:t},f={strides:n,pad:o,dataFormat:s,dimRoundingMode:i,inputShape:a},d=D.runKernel(ao,m,f);return l?L(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Bc=_({conv2DBackpropInput_:k6});function I6(r,e,t,n,o,s){let i=v(r,"x","conv2dTranspose"),a=v(e,"filter","conv2dTranspose");return Bc(t,i,a,n,o,"NHWC",s)}var Sf=_({conv2dTranspose_:I6});function C6(r,e,t,n,o="NDHWC",s=[1,1,1]){let i=v(r,"x","conv3d"),a=v(e,"filter","conv3d"),u=i,l=!1;i.rank===4&&(l=!0,u=L(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),P(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),P(u.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${a.shape[3]}.`),P(Er(t,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),P(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);let p={x:u,filter:a},c={strides:t,pad:n,dataFormat:o,dilations:s},m=D.runKernel(Pu,p,c);return l?L(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var _f=_({conv3d_:C6});function v6(r,e,t,n,o){P(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let s=r,i=e,a=!1;e.rank===4&&(a=!0,i=L(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let u=s[4],l=i.shape[4];P(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),P(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),P(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),P(u===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[3]}.`),P(l===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${t.shape[4]}.`);let p={dy:i,filter:t},c={pad:o,strides:n,inputShape:s},m=D.runKernel(rc,p,c);return a?L(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var wb=_({conv3DBackpropInput_:v6});function w6(r,e,t,n,o){let s=v(r,"x","conv3dTranspose"),i=v(e,"filter","conv3dTranspose");return wb(t,s,i,n,o)}var LI=_({conv3dTranspose_:w6});function S6(r){let t={x:v(r,"x","cos","float32")};return D.runKernel(io,t)}var Ll=_({cos_:S6});function _6(r){let t={x:v(r,"x","cosh","float32")};return D.runKernel(uo,t)}var Af=_({cosh_:_6});function A6(r,e=0,t=!1,n=!1){let s={x:v(r,"x","cumsum")},i={axis:e,exclusive:t,reverse:n};return D.runKernel(Xs,s,i)}var Nf=_({cumsum_:A6});function N6(r,e,t,n=!1){let o=v(r,"x","denseBincount"),s=v(e,"weights","denseBincount");P(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),P(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),P(t>=0,()=>`size must be non-negative, but got ${t}.`),P(s.size===o.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${s.shape}.`);let i={x:o,weights:s},a={size:t,binaryOutput:n};return D.runKernel(nc,i,a)}var BI=_({denseBincount_:N6});function D6(r,e,t="NHWC"){let n=v(r,"x","depthToSpace","float32"),o=t==="NHWC"?n.shape[1]:n.shape[2],s=t==="NHWC"?n.shape[2]:n.shape[3],i=t==="NHWC"?n.shape[3]:n.shape[1];P(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),P(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e}  for depthToSpace with input shape
    ${n.shape}`),P(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e} for depthToSpace with input shape
        ${n.shape}`),P(i%(e*e)==0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${n.shape}`);let a={x:n},u={blockSize:e,dataFormat:t};return D.runKernel(Qs,a,u)}var $I=_({depthToSpace_:D6});function P6(r,e,t,n,o="NHWC",s=[1,1],i){let a=v(r,"x","depthwiseConv2d","float32"),u=v(e,"filter","depthwiseConv2d","float32"),l=a,p=!1;a.rank===3&&(p=!0,l=L(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),P(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`),P(l.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),i!=null&&P(ct(n),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${n}.`);let c={x:l,filter:u},m={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i},f=D.runKernel(lo,c,m);return p?L(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Ji=_({depthwiseConv2d_:P6});function F6(r){let t={x:v(r,"x","diag")};return D.runKernel(ac,t)}var M6=_({diag_:F6});function E6(r,e,t,n,o=[1,1],s="NHWC"){let i=v(r,"x","dilation2d"),a=v(e,"filter","dilation2d");P(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),P(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),P(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let u=i,l=!1;i.rank===3&&(u=L(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);let p={x:u,filter:a},c={strides:t,pad:n,dilations:o},m=D.runKernel(Fu,p,c);return l?L(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var OI=_({dilation2d_:E6});function R6(r,e){let t=v(r,"a","equal","string_or_numeric"),n=v(e,"b","equal","string_or_numeric");[t,n]=Ze(t,n),Ue(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Zs,o)}var Kr=_({equal_:R6});function L6(r,e,t){let n=v(e,"a","where"),o=v(t,"b","where"),s=v(r,"condition","where","bool"),i=Ue(Ue(s.shape,n.shape),o.shape),a=Rl(s,i),u=Rl(n,i),l=Rl(o,i),p={condition:a,t:u,e:l};return D.runKernel(gs,p)}var Ot=_({where_:L6});function B6(r){let t={x:v(r,"x","zerosLike")};return D.runKernel(ks,t)}var De=_({zerosLike_:B6});function $6(r,e){let t=v(r,"a","div"),n=v(e,"b","div");[t,n]=Ze(t,n);let o=ce(t,n),s=De(o),i=Kr(n,s);return Ot(i,s,o)}var zI=_({divNoNan_:$6});function O6(r,e){let t=v(r,"t1","dot"),n=v(e,"t2","dot");P((t.rank===1||t.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${n.rank}.`);let o=t.rank===1?t.size:t.shape[1],s=n.rank===1?n.size:n.shape[0];if(P(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),t.rank===1&&n.rank===1){let i=L(t,[1,-1]),a=L(n,[-1,1]),u=je(i,a);return L(u,[])}else if(t.rank===1&&n.rank===2){let i=L(t,[1,-1]),a=L(n,[n.shape[0],n.shape[1]]),u=je(i,a);return L(u,[u.size])}else if(t.rank===2&&n.rank===1){let i=L(n,[-1,1]),a=je(t,i);return L(a,[a.size])}else{let i=L(n,[n.shape[0],n.shape[1]]);return je(t,i)}}var z6=_({dot_:O6});function G6(r,...e){let t=e.map((o,s)=>v(o,`tensors${s}`,"einsum")),n={equation:r};return D.runKernel(Mu,t,n)}var GI=_({einsum_:G6});function W6(r){let t={x:v(r,"x","elu","float32")};return D.runKernel(co,t)}var eu=_({elu_:W6});function U6(r){let e=v(r,"x","erf");P(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=J(e,"float32"));let t={x:e};return D.runKernel(Di,t)}var WI=_({erf_:U6});function K6(r){let t={x:v(r,"x","exp")};return D.runKernel(mo,t)}var cr=_({exp_:K6});function V6(r,e=0){let t=v(r,"x","expandDims","string_or_numeric");P(e<=t.rank,()=>"Axis must be <= rank of the tensor");let n={input:t},o={dim:e};return D.runKernel(ps,n,o)}var _r=_({expandDims_:V6});function j6(r){let t={x:v(r,"x","expm1")};return D.runKernel(Js,t)}var UI=_({expm1_:j6});function H6(r,e){let t=v(r,"x","tile","string_or_numeric");P(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);let n={x:t},o={reps:e};return D.runKernel(vn,n,o)}var Vr=_({tile_:H6});function q6(r,e,t,n="float32"){e==null&&(e=r);let o=Ce([r,e],n),s=r<=e?r:e;for(let a=0;a<s;++a)o.set(1,a,a);let i=L(o.toTensor(),[r,e]);if(t==null)return i;if(t.length===1)return Vr(_r(i,0),[t[0],1,1]);if(t.length===2)return Vr(_r(_r(i,0),0),[t[0],t[1],1,1]);if(t.length===3)return Vr(_r(_r(_r(i,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}var $c=_({eye_:q6});function Ca(r,e,t){let n={shape:r,value:e,dtype:t};return D.runKernel(Va,{},n)}function X6(r){let t={x:v(r,"x","floor","float32")};return D.runKernel(fo,t)}var tu=_({floor_:X6});function Y6(r,e,t=0,n=0){let o=v(r,"x","gather"),s=v(e,"indices","gather","int32"),i={x:o,indices:s},a={axis:t,batchDims:n};return D.runKernel(cs,i,a)}var Ja=_({gather_:Y6});function Q6(r,e){let t=v(r,"a","greater","string_or_numeric"),n=v(e,"b","greater","string_or_numeric");[t,n]=Ze(t,n),Ue(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ra,o)}var rr=_({greater_:Q6});function Z6(r,e){let t=v(r,"a","greaterEqual","string_or_numeric"),n=v(e,"b","greaterEqual","string_or_numeric");[t,n]=Ze(t,n),Ue(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(bo,o)}var Vo=_({greaterEqual_:Z6});function J6(r){let t={input:v(r,"input","imag")};return D.runKernel(Eu,t)}var Bl=_({imag_:J6});function e5(r){let t={x:v(r,"x","isFinite")};return D.runKernel(Pi,t)}var t5=_({isFinite_:e5});function r5(r){let t={x:v(r,"x","isInf")};return D.runKernel(Fi,t)}var n5=_({isInf_:r5});function o5(r){let t={x:v(r,"x","isNaN")};return D.runKernel(Mi,t)}var KI=_({isNaN_:o5});function s5(r,e=.2){let n={x:v(r,"x","leakyRelu")},o={alpha:e};return D.runKernel(na,n,o)}var $l=_({leakyRelu_:s5});function a5(r,e){let t=v(r,"a","less","string_or_numeric"),n=v(e,"b","less","string_or_numeric");[t,n]=Ze(t,n),Ue(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(oa,o)}var Df=_({less_:a5});function i5(r,e){let t=v(r,"a","lessEqual","string_or_numeric"),n=v(e,"b","lessEqual","string_or_numeric");[t,n]=Ze(t,n),Ue(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(sa,o)}var jo=_({lessEqual_:i5});function VI(r,e,t){if(t<=0)throw new Error("The number of values should be positive.");let n={start:r,stop:e,num:t};return D.runKernel(pc,{},n)}function u5(r,e=5,t=1,n=1,o=.5){let s=v(r,"x","localResponseNormalization");P(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),P(ct(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=s,a=!1;s.rank===3&&(a=!0,i=L(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let u={x:i},l={depthRadius:e,bias:t,alpha:n,beta:o},p=D.runKernel(Ru,u,l);return a?L(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var jI=_({localResponseNormalization_:u5});function l5(r){let t={x:v(r,"x","log","float32")};return D.runKernel(yo,t)}var Lr=_({log_:l5});function p5(r){let t={x:v(r,"x","log1p")};return D.runKernel(Ei,t)}var Ol=_({log1p_:p5});function c5(r){return P(Wa(r),()=>"The f passed in grad(f) must be a function"),(e,t)=>{let n=v(e,"x","tf.grad","string_or_numeric"),o=t!=null?v(t,"dy","tf.grad"):null;return D.tidy(()=>{let{value:s,grads:i}=D.gradients(()=>r(n),[n],o);return o!=null&&Ut(s.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),_b(i),i[0]})}}function m5(r){return P(Wa(r),()=>"The f passed in grads(f) must be a function"),(e,t)=>{P(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=Vi(e,"args","tf.grads","string_or_numeric"),o=t!=null?v(t,"dy","tf.grads"):null;return D.tidy(()=>{let{value:s,grads:i}=D.gradients(()=>r(...n),n,o);return o!=null&&Ut(s.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),_b(i),i})}}function f5(r){return P(Wa(r),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{P(e instanceof Qe,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),P(t==null||t instanceof Qe,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:o}=D.gradients(()=>r(e),[e],t);return _b(n),{grad:n[0],value:o}}}function d5(r){return P(Wa(r),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{P(Array.isArray(e)&&e.every(o=>o instanceof Qe),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),P(t==null||t instanceof Qe,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=D.gradients(()=>r(...e),e,t);return t!=null&&Ut(n.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),_b(n.grads),n}}function Sb(r,e){P(Wa(r),()=>"The f passed in variableGrads(f) must be a function"),P(e==null||Array.isArray(e)&&e.every(l=>l instanceof Uu),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let t=e!=null;if(!t){e=[];for(let l in D.registeredVariables)e.push(D.registeredVariables[l])}let n=t?e.filter(l=>!l.trainable):null,o=e.length;e=e.filter(l=>l.trainable),P(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let s=!0,{value:i,grads:a}=D.gradients(r,e,null,s);P(a.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),P(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let u={};return e.forEach((l,p)=>{a[p]!=null&&(u[l.name]=a[p])}),n!=null&&n.forEach(l=>u[l.name]=null),{value:i,grads:u}}function ln(r){return D.customGrad(r)}function _b(r){if(r.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function h5(r){let t={x:v(r,"x","neg")};return D.runKernel(ms,t)}var Je=_({neg_:h5});function g5(r){let t={x:v(r,"x","softplus")};return D.runKernel(Gi,t)}var ei=_({softplus_:g5});function b5(r){let e=v(r,"x","logSigmoid");return ln(n=>({value:Je(ei(Je(n))),gradFunc:i=>R(i,un(Je(n)))}))(e)}var y5=_({logSigmoid_:b5});function x5(r,e=null,t=!1){let o={x:v(r,"x","max")},s={reductionIndices:e,keepDims:t};return D.runKernel(xo,o,s)}var Zr=_({max_:x5});function T5(r,e){let t=v(r,"a","sub"),n=v(e,"b","sub");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(zo,o)}var pe=_({sub_:T5});function k5(r,e=null,t=!1){let n=v(r,"x","sum");n.dtype==="bool"&&(n=J(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return D.runKernel(Bo,o,s)}var he=_({sum_:k5});function I5(r,e=-1){let t=v(r,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return ln((o,s)=>{let i=!0,a=Zr(o,e,!0),u=pe(o,a),l=pe(J(u,"float32"),Lr(he(cr(u),e,i)));return s([l]),{value:l,gradFunc:(c,m)=>{let[f]=m,d=!0,h=cr(f);return pe(c,R(he(c,e,d),h))}}})(t)}var Pf=_({logSoftmax_:I5});function HI(r,e){for(let t=0;t<r.length;++t)if(r[r.length-t-1]!==e-1-t)return!1;return!0}function E0(r,e,t){let n=r.length+e.length,o=[],s=0,i=0;for(let a=0;a<n;a++)t.indexOf(a)===-1?o.push(r[s++]):o.push(e[i++]);return o}function qI(r,e){let t=[],n=r.length;for(let s=0;s<n;s++)e.indexOf(s)===-1&&t.push(r[s]);let o=e.map(s=>r[s]);return[t,o]}function Ps(r,e){let t=e.map(n=>1);return E0(r,t,e)}function C5(r,e,t){P(HI(e,t),()=>`${r} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function XI(r,e){if(HI(r,e))return null;let t=[];for(let n=0;n<e;++n)r.indexOf(n)===-1&&t.push(n);return r.forEach(n=>t.push(n)),t}function Ff(r){return r.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function v5(r,e){let t=[];for(let n=e-r;n<e;++n)t.push(n);return t}function w5(r,e=null,t=!1){let n=v(r,"x","logSumExp"),o=br(e,n.shape),s=Zr(n,o,!0),i=pe(n,s),a=cr(i),u=he(a,o),l=Lr(u),p=X(L(s,l.shape),l);if(t){let c=Ps(p.shape,o);return L(p,c)}return p}var YI=_({logSumExp_:w5});function S5(r,e){let t=v(r,"a","logicalAnd","bool"),n=v(e,"b","logicalAnd","bool");Ue(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(aa,o)}var jr=_({logicalAnd_:S5});function _5(r){let t={x:v(r,"x","logicalNot","bool")};return D.runKernel(Ri,t)}var zl=_({logicalNot_:_5});function A5(r,e){let t=v(r,"a","logicalOr","bool"),n=v(e,"b","logicalOr","bool");Ue(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(Il,o)}var Mf=_({logicalOr_:A5});function N5(r,e){let t=v(r,"a","logicalXor","bool"),n=v(e,"b","logicalXor","bool");return Ue(t.shape,n.shape),jr(Mf(r,e),zl(jr(r,e)))}var D5=_({logicalXor_:N5});function P5(r,e,t,n,o){let s=v(r,"x","maxPool"),i=1,a=s,u=!1;s.rank===3&&(u=!0,a=L(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),P(Er(t,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),o!=null&&P(ct(n),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let l={x:a},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o},c=D.runKernel(ko,l,p);return u?L(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var Gl=_({maxPool_:P5});function F5(r,e=[1,1,1],t,n,o,s="NDHWC"){let i=v(r,"x","maxPool3d"),a=i,u=!1;i.rank===4&&(u=!0,a=L(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),P(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),o!=null&&P(ct(n),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let l={x:a},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},c=D.runKernel(Lu,l,p);return u?L(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Ef=_({maxPool3d_:F5});function M5(r,e,t,n,o=!1){let i={x:v(r,"x","maxPoolWithArgmax")},a={filterSize:e,strides:t,pad:n,includeBatchInIndex:o},u=D.runKernel(dc,i,a);return{result:u[0],indexes:u[1]}}var QI=_({maxPoolWithArgmax_:M5});function E5(r,e){let t=v(r,"a","maximum"),n=v(e,"b","maximum");[t,n]=Ze(t,n),t.dtype==="bool"&&(t=J(t,"int32"),n=J(n,"int32")),Ue(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(To,o)}var Hn=_({maximum_:E5});function R5(r,e=null,t=!1){let o={x:v(r,"x","mean")},s={axis:e,keepDims:t};return D.runKernel(Io,o,s)}var Rt=_({mean_:R5});function Tt(r,e="float32"){if(e==="complex64"){let n=Tt(r,"float32"),o=Tt(r,"float32");return Vn(n,o)}let t=Xp(pt(r),e);return D.makeTensor(t,r,e)}function mr(r,e="float32"){if(e==="complex64"){let n=mr(r,"float32"),o=Tt(r,"float32");return Vn(n,o)}let t=of(pt(r),e);return D.makeTensor(t,r,e)}function L5(r,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(r===void 0)return[];let n=v(r,"x","meshgrid",r instanceof Qe?r.dtype:"float32");if(e===void 0)return[n];let o=v(e,"y","meshgrid",e instanceof Qe?e.dtype:"float32"),s=pt(n.shape),i=pt(o.shape);return t==="xy"?(n=L(n,[1,-1]),o=L(o,[-1,1]),[je(mr([i,1],n.dtype),n),je(o,mr([1,s],o.dtype))]):(n=L(n,[-1,1]),o=L(o,[1,-1]),[je(n,mr([1,i],n.dtype)),je(mr([s,1],o.dtype),o)])}function B5(r,e=null,t=!1){let o={x:v(r,"x","min")},s={axis:e,keepDims:t};return D.runKernel(Co,o,s)}var Oc=_({min_:B5});function $5(r,e){let t=v(r,"a","minimum"),n=v(e,"b","minimum");[t,n]=Ze(t,n),t.dtype==="bool"&&(t=J(t,"int32"),n=J(n,"int32")),Ue(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(vo,o)}var ru=_({minimum_:$5});function O5(r,e,t){P(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);let n=v(r,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");P(e.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${e.length}.`);let o=t==="reflect"?1:0;for(let a=0;a<n.rank;a++)P(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),P(e[a][0]>=0&&e[a][0]<=n.shape[a]-o&&e[a][1]>=0&&e[a][1]<=n.shape[a]-o,()=>`Padding in dimension ${a} cannot be greater than or equal to ${n.shape[a]-o} or less than 0 for input of shape ${n.shape}`);let s={paddings:e,mode:t},i={x:n};return D.runKernel(wo,i,s)}var ZI=_({mirrorPad_:O5});function z5(r,e){let t=v(r,"a","mod"),n=v(e,"b","mod");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(Li,o)}var JI=_({mod_:z5});function G5(r){let e=v(r,"x","square"),t={};return D.runKernel("Square",{x:e},t)}var Xe=_({square_:G5});function W5(r,e=null,t=!1){r=v(r,"x","moments");let n=br(e,r.shape),o=Rt(r,n,t),s=o.shape;t||(s=Ps(o.shape,n));let i=Xe(pe(J(r,"float32"),L(o,s))),a=Rt(i,n,t);return{mean:o,variance:a}}var zc=_({moments_:W5});function U5(r,e,t,n){let o=v(e,"data","multiRNNCell"),s=Vi(t,"c","multiRNNCell"),i=Vi(n,"h","multiRNNCell"),a=o,u=[];for(let c=0;c<r.length;c++){let m=r[c](a,s[c],i[c]);u.push(m[0]),u.push(m[1]),a=m[1]}let l=[],p=[];for(let c=0;c<u.length;c+=2)l.push(u[c]),p.push(u[c+1]);return[l,p]}var K5=_({multiRNNCell_:U5});function V5(r,e,t,n=!1){let o=v(r,"logits","multinomial"),s=o.size,i=o.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);t=t||Math.random();let u={logits:i===1?L(o,[1,-1]):o},l={numSamples:e,seed:t,normalized:n},p=D.runKernel(hc,u,l);return i===1?L(p,[p.size]):p}var eC=_({multinomial_:V5});function j5(r,e){let t=v(r,"a","notEqual","string_or_numeric"),n=v(e,"b","notEqual","string_or_numeric");[t,n]=Ze(t,n),Ue(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ia,o)}var ti=_({notEqual_:j5});function H5(r){let t={x:v(r,"x","onesLike")};return D.runKernel(fs,t)}var Ar=_({onesLike_:H5});function q5(r,e){let t=v(r,"v1","outerProduct"),n=v(e,"v2","outerProduct");P(t.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${n.rank}.`);let o=L(t,[-1,1]),s=L(n,[1,-1]);return je(o,s)}var X5=_({outerProduct_:q5});function Y5(r,e,t=0){let n=v(r,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let o={paddings:e,constantValue:t},s={x:n};return D.runKernel(_o,s,o)}var _n=_({pad_:Y5});function Q5(r,e,t=0){return P(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),_n(r,[e],t)}var Z5=_({pad1d_:Q5});function J5(r,e,t=0){return P(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),_n(r,e,t)}var e8=_({pad2d_:J5});function t8(r,e,t=0){return P(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),_n(r,e,t)}var r8=_({pad3d_:t8});function n8(r,e,t=0){return P(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),_n(r,e,t)}var o8=_({pad4d_:n8});function s8(r,e,t){let n=v(r,"x","spaceToBatchND");P(n.rank>=1+e.length,()=>`input rank ${n.rank} should be > than [blockShape] ${e.length}`),P(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),P(n.shape.reduce((i,a,u)=>u>0&&u<=e.length?i&&(a+t[u-1][0]+t[u-1][1])%e[u-1]==0:i,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);let o={x:n},s={blockShape:e,paddings:t};return D.runKernel(ys,o,s)}var Wl=_({spaceToBatchND_:s8});function a8(r,e,t,n,o,s){o==null&&(o=[1,1]),s==null&&(s=1),n===0&&(n="valid");let i=v(r,"x","maxPool"),a=i,u=!1;i.rank===3&&(u=!0,a=L(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(Er(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);let l=vI(a.shape,e,s,o,n),p=[l.dilationHeight,l.dilationWidth],c;n==="same"?c=u8([l.filterHeight,l.filterWidth],p):c=[[0,0],[0,0]];let m=p[0]===1&&p[1]===1,[f,d]=i8([l.inHeight,l.inWidth],p,c),h=m?n:"valid",g=m?a:Wl(a,p,f),y=(t==="avg"?()=>Ml(g,e,s,h):()=>Gl(g,e,s,h))(),T=m?y:El(y,p,d);return u?L(T,[T.shape[1],T.shape[2],T.shape[3]]):T}function i8(r,e,t){let n=t.map(p=>p[0]),o=t.map(p=>p[1]),s=r.concat(n,o),i=e.map((p,c)=>(p-s[c]%p)%p),a=o.map((p,c)=>p+i[c]),u=e.map((p,c)=>[n[c],a[c]]),l=e.map((p,c)=>[0,i[c]]);return[u,l]}function u8(r,e){let n=r.map((i,a)=>i+(i-1)*(e[a]-1)).map(i=>i-1),o=n.map(i=>Math.floor(i/2)),s=n.map((i,a)=>i-o[a]);return n.map((i,a)=>[o[a],s[a]])}var l8=_({pool_:a8});function p8(r,e){let t=v(r,"base","pow"),n=v(e,"exp","pow");[t,n]=Ze(t,n);let o={a:t,b:n};return D.runKernel(Ao,o)}var An=_({pow_:p8});function c8(r,e){let t=v(r,"x","prelu"),n=v(e,"alpha","prelu"),o={x:t,alpha:n};return D.runKernel(No,o)}var Ul=_({prelu_:c8});function m8(r,e=null,t=!1){let n=v(r,"x","prod");n.dtype==="bool"&&(n=J(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return D.runKernel(ca,o,s)}var Rf=_({prod_:m8});function f8(r,e,t){let n=pt(r),o=null;if(t==null||t==="float32")o=new Float32Array(n);else if(t==="int32")o=new Int32Array(n);else if(t==="bool")o=new Uint8Array(n);else throw new Error(`Unknown data type ${t}`);for(let s=0;s<n;s++)o[s]=e();return D.makeTensor(o,r,t)}var d8=_({rand_:f8});var Nb=xl(Lf());var Gc=class{constructor(e,t,n,o,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let i=s||Math.random();this.random=Nb.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){let o=this.nextVal;return this.nextVal=NaN,o}let e,t,n=!1;for(;!n;){let o,s,i;do o=2*this.random()-1,s=2*this.random()-1,i=o*o+s*s;while(i>=1||i===0);let a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*o*a,t=this.mean+this.stdDev*s*a,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},iC=class{constructor(e,t,n,o){this.alpha=e,this.beta=1/t,this.dtype=n;let s=o||Math.random();this.randu=Nb.alea(s.toString()),this.randn=new Gc(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,o,s,i;for(;;){do o=this.randn.nextValue(),i=1+this.c*o;while(i<=0);if(i*=i*i,e=o*o,t=1-.331*e*e,n=.5*e+this.d*(1-i+Math.log(i)),s=this.randu(),s<t||Math.log(s)<n)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},uC=class{constructor(e=0,t=1,n,o){this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32";if(this.min=e,this.range=t-e,this.dtype=n,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Nb.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function k8(r,e,t=1,n="float32",o){if(t==null&&(t=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new iC(e,t,n,o),i=Ce(r,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var I8=_({randomGamma_:k8});function C8(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new Gc(e,t,n,!1,o),i=Ce(r,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var Db=_({randomNormal_:C8});function v8(r,e=0,t=1,n="float32",o){let s=Ce(r,n),i=new uC(e,t,null,o);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var va=_({randomUniform_:v8});function nu(r,e,t=1,n="float32"){if(t===0)throw new Error("Cannot have a step of zero");let o={start:r,stop:e,step:t,dtype:n};return D.runKernel(ja,{},o)}function w8(r){let t={input:v(r,"input","real")};return D.runKernel(Bu,t)}var ju=_({real_:w8});function S8(r){let t={x:v(r,"x","reciprocal")};return D.runKernel($i,t)}var lC=_({reciprocal_:S8});function _8(r){let t={x:v(r,"x","relu")};return D.runKernel(Do,t)}var Hr=_({relu_:_8});function A8(r){let t={x:v(r,"x","relu6")};return D.runKernel(Fo,t)}var Bf=_({relu6_:A8});function N8(r,e){let n={x:v(r,"x","reverse")},o={dims:e};return D.runKernel(ma,n,o)}var yr=_({reverse_:N8});function D8(r){let e=v(r,"x","reverse");return P(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),yr(e,0)}var P8=_({reverse1d_:D8});function F8(r,e){let t=v(r,"x","reverse");return P(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),yr(t,e)}var M8=_({reverse2d_:F8});function E8(r,e){let t=v(r,"x","reverse");return P(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),yr(t,e)}var R8=_({reverse3d_:E8});function L8(r,e){let t=v(r,"x","reverse");return P(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),yr(t,e)}var B8=_({reverse4d_:L8});function $8(r){let t={x:v(r,"x","round")};return D.runKernel(fa,t)}var $f=_({round_:$8});function O8(r){let t={x:v(r,"x","rsqrt","float32")};return D.runKernel(Mo,t)}var Of=_({rsqrt_:O8});function me(r,e){if((Tr(r)&&e!=="string"||Array.isArray(r))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Tr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return sn(r,[],[],e)}function z8(r){let t={x:v(r,"x","selu")};return D.runKernel(Oi,t)}var zf=_({selu_:z8});function G8(r,e,t,n,o,s=[1,1],i="NHWC"){let a=v(r,"x","separableConv2d"),u=v(e,"depthwiseFilter","separableConv2d"),l=v(t,"pointwiseFilter","separableConv2d"),p=a,c=!1;if(a.rank===3&&(c=!0,p=L(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");P(p.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`),P(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),P(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),P(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);let m=u.shape[2],f=u.shape[3];P(l.shape[2]===m*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*f}, but got ${l.shape[2]}.`);let d=Ji(p,u,n,o,i,s),g=jn(d,l,1,"valid",i);return c?L(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var pC=_({separableConv2d_:G8});async function W8(r,e){let t=v(r,"x","setdiff1d"),n=v(e,"y","setdiff1d");P(t.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${n.dtype}).`),P(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),P(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let o=await t.data(),s=await n.data(),i=new Set(s),a=0;for(let p=0;p<o.length;p++)i.has(o[p])||a++;let u=new xt([a],t.dtype),l=new xt([a],"int32");for(let p=0,c=0;p<o.length;p++)i.has(o[p])||(u.values[c]=o[p],l.values[c]=p,c++);return[u.toTensor(),l.toTensor()]}var cC=W8;function U8(r){let t={x:v(r,"x","sign")};return D.runKernel(zi,t)}var mC=_({sign_:U8});function K8(r){let t={x:v(r,"x","sin","float32")};return D.runKernel(Eo,t)}var Gf=_({sin_:K8});function V8(r){let t={x:v(r,"x","sinh")};return D.runKernel(ha,t)}var Wf=_({sinh_:V8});function j8(r,e,t){let n=v(r,"x","slice1d");return P(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),We(n,[e],[t])}var Uf=_({slice1d_:j8});function H8(r,e,t){let n=v(r,"x","slice2d");return P(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),We(n,e,t)}var Pb=_({slice2d_:H8});function q8(r,e,t){let n=v(r,"x","slice3d");return P(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),We(n,e,t)}var Kf=_({slice3d_:q8});function X8(r,e,t){let n=v(r,"x","slice4d");return P(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),We(n,e,t)}var Wc=_({slice4d_:X8});function Y8(r,e=-1){let t=v(r,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);let n={logits:t},o={dim:e};return D.runKernel($o,n,o)}var Vl=_({softmax_:Y8});function Q8(r){P(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let e={input:r};return D.runKernel(uc,e)}var jl=_({fft_:Q8});function Z8(r){P(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let e={input:r};return D.runKernel(lc,e)}var Hu=_({ifft_:Z8});function J8(r){let e=r.shape[r.shape.length-1],t=r.size/e,n;if(e<=2){let o=L(r,[t,e]);n=Hu(o)}else{let o=[t,2*(e-1)],s=L(ju(r),[t,e]),i=L(Bl(r),[t,e]),a=yr(We(s,[0,1],[t,e-2]),1),u=R(yr(We(i,[0,1],[t,e-2]),1),me(-1)),l=ut([s,a],1),p=ut([i,u],1),c=L(Vn(l,p),[o[0],o[1]]);n=Hu(c)}if(n=ju(n),r.rank===3&&r.shape[0]!==0){let o=n,s=r.shape[0];n=L(n,[s,n.shape[0]/s,n.shape[1]]),o.dispose()}return n}var Vf=_({irfft_:J8});function eX(r,e,t=0){let o={x:v(r,"x","split")},s={numOrSizeSplits:e,axis:t};return D.runKernel(xs,o,s)}var kr=_({split_:eX});function tX(r,e){P(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let t=r.shape[r.shape.length-1],n=r.size/t,o;if(e!=null&&e<t){let d=r.shape.map(g=>0),h=r.shape.map(g=>g);h[r.shape.length-1]=e,o=We(r,d,h),t=e}else if(e!=null&&e>t){let d=r.shape.map(h=>h);d[r.shape.length-1]=e-t,o=ut([r,Tt(d)],r.shape.length-1),t=e}else o=r;let s=De(o),i=L(Vn(o,s),[n,t]),a=jl(i),u=Math.floor(t/2)+1,l=ju(a),p=Bl(a),c=kr(l,[u,t-u],l.shape.length-1),m=kr(p,[u,t-u],p.shape.length-1),f=o.shape.slice();return f[o.shape.length-1]=u,L(Vn(c[0],m[0]),f)}var Hl=_({rfft_:tX});function rX(r){let t={x:v(r,"x","sqrt","float32")};return D.runKernel(Lo,t)}var Lt=_({sqrt_:rX});function nX(r,e){let t=v(r,"a","squaredDifference"),n=v(e,"b","squaredDifference");[t,n]=Ze(t,n),Ue(t.shape,n.shape);let o={a:t,b:n},s={};return D.runKernel(Oo,o,s)}var jf=_({squaredDifference_:nX});function oX(r,e){let t=v(r,"x","squeeze");return L(t,Ck(t.shape,e).newShape)}var pn=_({squeeze_:oX});function sX(r,e=0){let t=Vi(r,"tensors","stack","string_or_numeric");P(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&P(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");let n=t,o={axis:e};return D.runKernel(ds,n,o)}var fr=_({stack_:sX});function aX(r,e=0){let n={x:v(r,"x","step")},o={alpha:e};return D.runKernel(Is,n,o)}var ou=_({step_:aX});function iX(r,e,t,n,o=0,s=0,i=0,a=0,u=0){let p={x:v(r,"x","stridedSlice","string_or_numeric")},c={begin:e,end:t,strides:n,beginMask:o,endMask:s,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:u};return D.runKernel(ga,p,c)}var fC=_({stridedSlice_:iX});function uX(r){let t={x:v(r,"x","tan","float32")};return D.runKernel(ba,t)}var dC=_({tan_:uX});function zt(r,e){Jn(r);let t=Wr(r,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return sn(r,null,t,e)}function ri(r,e,t){if(Jn(r),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=Wr(r,t);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return sn(r,e,n,t)}function lX(r,e,t){if(Jn(r),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=Wr(r,t);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return sn(r,e,n,t)}function pX(r,e,t){if(Jn(r),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=Wr(r,t);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return sn(r,e,n,t)}function cX(r,e,t){if(Jn(r),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=Wr(r,t);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||n,sn(r,e,n,t)}function mX(r,e=1,t=!0){let n=v(r,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let o=n.shape[n.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${e}`);let s={x:n},i={k:e,sorted:t},[a,u]=D.runKernel(ya,s,i);return{values:a,indices:u}}var hC=_({topk_:mX});function fX(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new Gc(e,t,n,!0,o),i=Ce(r,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var ql=_({truncatedNormal_:fX});function dX(r,e=0){let t=v(r,"x","unique","string_or_numeric");P(t.rank>0,()=>"The input tensor must be at least 1D");let n={x:t},o={axis:e},[s,i]=D.runKernel(vc,n,o);return{values:s,indices:i}}var Fb=_({unique_:dX});function hX(r,e,t){let n=v(r,"x","unsortedSegmentSum"),o=v(e,"segmentIds","unsortedSegmentSum","int32");P(ct(t),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:o},i={numSegments:t};return D.runKernel(zu,s,i)}var gC=_({unsortedSegmentSum_:hX});function gX(r,e=0){let t=v(r,"x","unstack","string_or_numeric");P(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);let n={value:t},o={axis:e};return D.runKernel(Ts,n,o)}var Br=_({unstack_:gX});function bC(r,e=!0,t,n){return D.makeVariable(r,e,t,n)}function Mb(r,e){let t=[];for(let s=0;s<e.length;s++)e[s]&&t.push(s);let n=Ce(r,"int32"),o=Ce([t.length,r.length],"int32");for(let s=0;s<t.length;s++){let i=n.indexToLoc(t[s]),a=s*r.length;o.values.set(i,a)}return o.toTensor()}async function bX(r){let e=v(r,"condition","whereAsync","bool"),t=await e.data(),n=Mb(e.shape,t);return r!==e&&e.dispose(),n}var Hf=bX;async function yX(r,e,t){let n=v(r,"tensor","boolMask"),o=v(e,"mask","boolMask","bool"),s=t??0,i=o.rank,a=n.shape;P(i>0,()=>"mask cannot be scalar"),Ut(a.slice(s,s+i),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let h=s;h<s+i;h++)u*=a[h];let l=a.slice(0,s).concat([u],a.slice(s+i)),p=L(n,l),c=L(o,[-1]),m=await Hf(c),f=pn(m,[1]),d=Ja(p,f,s);return r!==n&&n.dispose(),e!==o&&o.dispose(),f.dispose(),p.dispose(),c.dispose(),m.dispose(),d}var yLe=yX;function xX(r,e="euclidean",t=null,n=!1){r=v(r,"x","norm");let o=Q0(r,e,t),s=o.shape;if(n){let i=br(t,r.shape);s=Ps(o.shape,i)}return L(o,s)}function Q0(r,e,t=null){if(r.rank===0)return $t(r);if(r.rank!==1&&t===null)return Q0(L(r,[-1]),e,t);if(r.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return he($t(r),t);if(e===1/0)return Zr($t(r),t);if(e===-1/0)return Oc($t(r),t);if(e==="euclidean"||e===2)return Lt(he(An($t(r),me(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return Zr(he($t(r),t[0]),t[1]-1);if(e===1/0)return Zr(he($t(r),t[1]),t[0]);if(e===-1/0)return Oc(he($t(r),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Lt(he(Xe(r),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}var Eb=_({norm_:xX});function TX(r,e,t,n,o=!0){let s=v(r,"v","movingAverage"),i=v(e,"x","movingAverage"),a=v(t,"decay","movingAverage");Kk(s,i),P(On(s.shape,i.shape),()=>"Shape mismatch in v and x");let u=me(1),l=pe(u,a),p=R(pe(i,s),l);if(o){P(n!=null,()=>"When using zeroDebias: true, step is required.");let c=v(n,"step","movingAverage");p=ce(p,pe(u,An(a,c)))}return X(s,p)}var KLe=_({movingAverage_:TX});function kX(r,e,t){let n=v(r,"indices","scatterND","int32"),o=v(e,"updates","scatterND");Tb(o,n,t);let s={indices:n,updates:o},i={shape:t};return D.runKernel(da,s,i)}var Z0=_({scatterND_:kX});function J0(r,e,t,n){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let o=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(t.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${s}.`);let i=e.size;if(!(e.rank===0||e.rank===1&&i===o))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${o}]`);if(e.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function IX(r,e,t,n=0){let o=v(r,"sparseIndices","sparseToDense","int32"),s=v(e,"sparseValues","sparseToDense"),i=v(n,"defaultValue","sparseToDense",s.dtype);J0(o,s,t,i);let a={sparseIndices:o,sparseValues:s,defaultValue:i},u={outputShape:t};return D.runKernel($u,a,u)}var Rb=_({sparseToDense_:IX});function CX(r,e){let t=v(e,"indices","gatherND","int32"),o={params:v(r,"x","gatherND","string_or_numeric"),indices:t};return D.runKernel(ta,o)}var e2=_({gatherND_:CX});function t2(r,e){if(e==null)return r.shape.slice();if(On(r.shape,e))return e;if(r.shape.length===e.length){let t=[];for(let n=0;n<r.shape.length;n++)e[n]==null&&r.shape[n]!=null?t.push(r.shape[n]):t.push(e[n]);return t}return e}function vX(r,e,t,n){let o=v(r,"x","dropout");if(P(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),P(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return r instanceof Qe?o.clone():o;let s=t2(o,t),i=1-e,a=ce(tu(X(va(s,0,1,"float32",n),i)),i);return R(o,a)}var r2=_({dropout_:vX});function n2(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function Lb(r,e,t){let n=1-r%2,o=new Float32Array(r);for(let s=0;s<r;++s){let i=2*Math.PI*s/(r+n-1);o[s]=e-t*Math.cos(i)}return zt(o,"float32")}async function wX(r,e,t=1){let n=v(r,"predictions","inTopK"),o=v(e,"targets","inTopK");P(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),P(n.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${o.rank}`),Ut(n.shape.slice(0,n.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];P(t>0&&t<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${t}`);let i=await n.data(),a=await o.data(),[u,l]=[i.length/s,s],p=vk("bool",u);for(let c=0;c<u;c++){let m=c*l,f=i.subarray(m,m+l),d=[];for(let h=0;h<f.length;h++)d.push({value:f[h],index:h});d.sort((h,g)=>g.value-h.value),p[c]=0;for(let h=0;h<t;h++)if(d[h].index===a[c]){p[c]=1;break}}return r!==n&&n.dispose(),e!==o&&o.dispose(),Mr(p,o.shape,"bool")}var MBe=wX;var Fs={};Ye(Fs,{conv2d:()=>o2,depthwiseConv2d:()=>s2,matMul:()=>a2});function SX(r,e,t,n,o,s="NHWC",i){let a=r;r.rank===3&&(a=L(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=e;u.rank===3&&(u=L(e,[1,e.shape[0],e.shape[1],e.shape[2]])),P(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),P(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),P(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);let l=s==="NHWC"?a.shape[3]:a.shape[1],p=s==="NHWC"?u.shape[3]:u.shape[1];P(l===t[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${t[2]}.`),P(p===t[3],()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${t[3]}).`),i!=null&&P(ct(o),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${o}.`);let c={x:a,dy:u},m={strides:n,pad:o,dataFormat:s,dimRoundingMode:i,filterShape:t};return D.runKernel(ec,c,m)}var Uc=_({conv2DBackpropFilter_:SX});function Xl(r,e,t){if(t==null||t==="linear")return r;if(t==="relu")return R(r,ou(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Yl(r,e){let t=e,n=wt(r.shape,e.shape);return n.length>0&&(t=he(t,n)),L(t,r.shape)}function Ql(r,e,t,n){if(e==="linear")return r;if(e==="relu")return Hr(r);if(e==="elu")return eu(r);if(e==="relu6")return Bf(r);if(e==="prelu")return Ul(r,t);if(e==="leakyrelu")return $l(r,n);if(e==="sigmoid")return un(r);throw new Error(`Unknown fused activation ${e}.`)}var Zl=(r,e)=>!(r>0)||e==="linear";function _X({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:p}){if(u=u||"linear",Zl(D.state.gradientDepth,u)===!1){let C=jn(r,e,t,n,o,s,i);return a!=null&&(C=X(C,a)),Ql(C,u,l,p)}let c=v(r,"x","conv2d","float32"),m=v(e,"filter","conv2d","float32"),f=c,d=!1;c.rank===3&&(d=!0,f=L(c,[1,c.shape[0],c.shape[1],c.shape[2]])),P(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),P(m.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),i!=null&&P(ct(n),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${n}.`),P(f.shape[3]===m.shape[2],()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${m.shape[2]}.`),P(Er(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),P(o==="NHWC",()=>`Error in conv2d: got dataFormat of ${o} but only NHWC is currently supported.`);let h=Pl(f.shape,m.shape,t,s,n,i),g;a!=null&&(g=v(a,"bias","fused conv2d"),[g]=Ze(g,c),Ue(h.outShape,g.shape));let x;l!=null&&(x=v(l,"prelu weights","fused conv2d"));let y=(C,N)=>{let[A,M,E,B]=N,W=Xl(C,E,u);P(Ko(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let U=Bc(M.shape,W,A,t,n),K=Uc(M,W,A.shape,t,n),j=[U,K];if(B!=null){let V=Yl(B,W);j.push(V)}return j},T={x:f,filter:m,bias:g,preluActivationWeights:x},k={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:p};return a==null?ln((N,A,M)=>{let E=D.runKernel(vs,T,k);return M([A,N,E]),d&&(E=L(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:y}})(f,m):ln((N,A,M,E)=>{let B=D.runKernel(vs,T,k);return E([A,N,B,M]),d&&(B=L(B,[B.shape[1],B.shape[2],B.shape[3]])),{value:B,gradFunc:y}})(f,m,g)}var o2=_({fusedConv2d_:_X});function AX(r,e,t,n,o,s=[1,1],i){let a=r;r.rank===3&&(a=L(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=e;u.rank===3&&(u=L(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l={x:a,dy:u},p={strides:n,pad:o,dimRoundingMode:i,dilations:s,filterShape:t};return D.runKernel(oc,l,p)}var Bb=_({depthwiseConv2dNativeBackpropFilter_:AX});function NX(r,e,t,n,o,s=[1,1],i){let a=e,u=!1;e.rank===3&&(u=!0,a=L(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l={dy:a,filter:t},p={strides:n,pad:o,dimRoundingMode:i,dilations:s,inputShape:r},c=D.runKernel(sc,l,p);return u?L(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var $b=_({depthwiseConv2dNativeBackpropInput_:NX});function DX({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:p}){if(Zl(D.state.gradientDepth,u)===!1){let C=Ji(r,e,t,n,o,s,i);return a!=null&&(C=X(C,a)),Ql(C,u,l,p)}let c=v(r,"x","depthwiseConv2d","float32"),m=v(e,"filter","depthwiseConv2d","float32"),f=c,d=!1;c.rank===3&&(d=!0,f=L(c,[1,c.shape[0],c.shape[1],c.shape[2]])),P(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),P(m.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),P(f.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),s==null&&(s=[1,1]),P(Er(t,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),i!=null&&P(ct(n),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${n}.`);let h=Pl(f.shape,m.shape,t,s,n,i,!0),g;a!=null&&(g=v(a,"bias","fused conv2d"),[g]=Ze(g,c),Ue(h.outShape,g.shape));let x;l!=null&&(x=v(l,"prelu weights","fused depthwiseConv2d"));let y=(C,N)=>{P(Ko(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[A,M,E,B]=N,W=Xl(C,E,u),U=$b(M.shape,W,A,t,n,s,i),K=Bb(M,W,A.shape,t,n,s,i);if(B!=null){let j=Yl(g,W);return[U,K,j]}return[U,K]},T={x:f,filter:m,bias:g,preluActivationWeights:x},k={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:p};return a==null?ln((N,A,M)=>{let E=D.runKernel(ws,T,k);return M([A,N,E]),d&&(E=L(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:y}})(f,m):ln((N,A,M,E)=>{let B=D.runKernel(ws,T,k);return E([A,N,B,M]),d&&(B=L(B,[B.shape[1],B.shape[2],B.shape[3]])),{value:B,gradFunc:y}})(f,m,g)}var s2=_({fusedDepthwiseConv2d_:DX});function PX({a:r,b:e,transposeA:t=!1,transposeB:n=!1,bias:o,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:a}){if(Zl(D.state.gradientDepth,s)===!1){let W=je(r,e,t,n);return o!=null&&(W=X(W,o)),Ql(W,s,i,a)}let u=v(r,"a","fused matMul"),l=v(e,"b","fused matMul");[u,l]=Ze(u,l);let p=t?u.shape[u.rank-2]:u.shape[u.rank-1],c=n?l.shape[l.rank-1]:l.shape[l.rank-2],m=t?u.shape[u.rank-1]:u.shape[u.rank-2],f=n?l.shape[l.rank-2]:l.shape[l.rank-1],d=u.shape.slice(0,-2),h=l.shape.slice(0,-2),g=pt(d),x=pt(h);P(p===c,()=>`Error in fused matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${t} and transposeB=${n} must match.`);let T=Ue(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([m,f]),k=t?L(u,[g,p,m]):L(u,[g,m,p]),C=n?L(l,[x,f,c]):L(l,[x,c,f]),N;o!=null&&(N=v(o,"bias","fused matMul"),[N]=Ze(N,u),Ue(T,N.shape));let A;i!=null&&(A=v(i,"prelu weights","fused matMul"));let M=(W,U)=>{let[K,j,V,q]=U,ee=Xl(L(W,V.shape),V,s),Z,te;if(!t&&!n?(Z=je(ee,j,!1,!0),te=je(K,ee,!0,!1)):!t&&n?(Z=je(ee,j,!1,!1),te=je(ee,K,!0,!1)):t&&!n?(Z=je(j,ee,!1,!0),te=je(K,ee,!1,!1)):(Z=je(j,ee,!0,!0),te=je(ee,K,!0,!0)),o!=null){let oe=Yl(q,ee);return[Z,te,oe]}else return[Z,te]},E={a:k,b:C,bias:N,preluActivationWeights:A},B={transposeA:t,transposeB:n,activation:s,leakyreluAlpha:a};return o==null?ln((U,K,j)=>{let V=D.runKernel(Cs,E,B);return j([U,K,V]),{value:L(V,T),gradFunc:M}})(k,C):ln((U,K,j,V)=>{let q=D.runKernel(Cs,E,B);return V([U,K,q,j]),{value:L(q,T),gradFunc:M}})(k,C,N)}var a2=_({fusedMatMul_:PX});function FX(r){return Lb(r,.54,.46)}var i2=_({hammingWindow_:FX});function MX(r){return Lb(r,.5,.5)}var Ob=_({hannWindow_:MX});function EX(r,e,t,n=!1,o=0){let s=0,i=[];for(;s+e<=r.size;)i.push(We(r,s,e)),s+=t;if(n)for(;s<r.size;){let a=s+e-r.size,u=ut([We(r,s,e-a),Ca([a],o)]);i.push(u),s+=t}return i.length===0?ri([],[0,e]):L(ut(i),[i.length,e])}var zb=_({frame_:EX});function RX(r,e,t,n,o=Ob){n==null&&(n=n2(e));let s=zb(r,e,t),i=R(s,o(e));return Hl(i,n)}var u2=_({stft_:RX});function LX(r,e,t,n,o="bilinear",s=0){let i=v(r,"image","cropAndResize"),a=v(e,"boxes","cropAndResize","float32"),u=v(t,"boxInd","cropAndResize","int32"),l=a.shape[0];P(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),P(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${a.shape}.`),P(u.rank===1&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${a.shape}.`),P(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),P(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),P(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);let p={image:i,boxes:a,boxInd:u},c={method:o,extrapolationValue:s,cropSize:n};return D.runKernel(Ys,p,c)}var l2=_({cropAndResize_:LX});function BX(r){let e=v(r,"image","flipLeftRight","float32");P(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);let t={image:e};return D.runKernel(ea,t,{})}var p2=_({flipLeftRight_:BX});function $X(r){let e=v(r,"image","grayscaleToRGB"),t=e.rank-1,n=e.shape[t];P(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),P(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let o=new Array(e.rank);return o.fill(1,0,t),o[t]=3,Vr(e,o)}var c2=_({grayscaleToRGB_:$X});function OX(r,e,t=0,n=.5){let o=v(r,"image","rotateWithOffset","float32");P(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);let s={image:o},i={radians:e,fillValue:t,center:n};return D.runKernel(Ta,s,i)}var m2=_({rotateWithOffset_:OX});function Ms(r,e,t,n,o,s){n==null&&(n=.5),o==null&&(o=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=r.shape[0];return t=Math.min(t,i),P(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),P(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),P(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),P(e.rank===1,()=>"scores must be a 1D tensor"),P(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`),P(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s}}function zX(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=v(r,"boxes","nonMaxSuppression","float32"),i=v(e,"scores","nonMaxSuppression","float32"),a=Ms(s,i,t,n,o);t=a.maxOutputSize,n=a.iouThreshold,o=a.scoreThreshold;let u={maxOutputSize:t,iouThreshold:n,scoreThreshold:o};return D.runKernel(ua,{boxes:s,scores:i},u)}var f2=_({nonMaxSuppression_:zX});function d2(r,e,t){let n=GX(r,e,t),o=n<0?-(n+1):n;r.splice(o,0,e)}function GX(r,e,t){return UX(r,e,t||WX)}function WX(r,e){return r>e?1:r<e?-1:0}function UX(r,e,t){let n=0,o=r.length,s=0,i=!1;for(;n<o;){s=n+(o-n>>>1);let a=t(e,r[s]);a>0?n=s+1:(o=s,i=!a)}return i?n:-n-1}function Gb(r,e,t,n,o){return yC(r,e,t,n,o,0)}function Wb(r,e,t,n,o,s){return yC(r,e,t,n,o,0,!1,s,!0)}function Ub(r,e,t,n,o,s){return yC(r,e,t,n,o,s,!0)}function yC(r,e,t,n,o,s,i=!1,a=!1,u=!1){let l=[];for(let g=0;g<e.length;g++)e[g]>o&&l.push({score:e[g],boxIndex:g,suppressBeginIndex:0});l.sort(h2);let p=s>0?-.5/s:0,c=[],m=[];for(;c.length<t&&l.length>0;){let g=l.pop(),{score:x,boxIndex:y,suppressBeginIndex:T}=g;if(x<o)break;let k=!1;for(let C=c.length-1;C>=T;--C){let N=KX(r,y,c[C]);if(N>=n){k=!0;break}if(g.score=g.score*VX(n,p,N),g.score<=o)break}g.suppressBeginIndex=c.length,k||(g.score===x?(c.push(y),m.push(g.score)):g.score>o&&d2(l,g,h2))}let f=c.length,d=t-f;a&&d>0&&(c.push(...new Array(d).fill(0)),m.push(...new Array(d).fill(0)));let h={selectedIndices:c};return i&&(h.selectedScores=m),u&&(h.validOutputs=f),h}function KX(r,e,t){let n=r.subarray(e*4,e*4+4),o=r.subarray(t*4,t*4+4),s=Math.min(n[0],n[2]),i=Math.min(n[1],n[3]),a=Math.max(n[0],n[2]),u=Math.max(n[1],n[3]),l=Math.min(o[0],o[2]),p=Math.min(o[1],o[3]),c=Math.max(o[0],o[2]),m=Math.max(o[1],o[3]),f=(a-s)*(u-i),d=(c-l)*(m-p);if(f<=0||d<=0)return 0;let h=Math.max(s,l),g=Math.max(i,p),x=Math.min(a,c),y=Math.min(u,m),T=Math.max(x-h,0)*Math.max(y-g,0);return T/(f+d-T)}function VX(r,e,t){let n=Math.exp(e*t*t);return t<=r?n:0}function h2(r,e){return r.score-e.score||r.score===e.score&&e.boxIndex-r.boxIndex}async function jX(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=v(r,"boxes","nonMaxSuppressionAsync"),i=v(e,"scores","nonMaxSuppressionAsync"),a=Ms(s,i,t,n,o);t=a.maxOutputSize,n=a.iouThreshold,o=a.scoreThreshold;let u=await Promise.all([s.data(),i.data()]),l=u[0],p=u[1],{selectedIndices:c}=Gb(l,p,t,n,o);return s!==r&&s.dispose(),i!==e&&i.dispose(),zt(c,"int32")}var g2=jX;function HX(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let i=v(r,"boxes","nonMaxSuppression"),a=v(e,"scores","nonMaxSuppression"),u=Ms(i,a,t,n,o,s);t=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let l={boxes:i,scores:a},p={maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s},c=D.runKernel(la,l,p);return{selectedIndices:c[0],selectedScores:c[1]}}var b2=_({nonMaxSuppressionWithScore_:HX});async function qX(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let i=v(r,"boxes","nonMaxSuppressionAsync"),a=v(e,"scores","nonMaxSuppressionAsync"),u=Ms(i,a,t,n,o,s);t=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let l=await Promise.all([i.data(),a.data()]),p=l[0],c=l[1],{selectedIndices:m,selectedScores:f}=Ub(p,c,t,n,o,s);return i!==r&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:zt(m,"int32"),selectedScores:zt(f)}}var y2=qX;function XX(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let i=v(r,"boxes","nonMaxSuppression"),a=v(e,"scores","nonMaxSuppression"),u=Ms(i,a,t,n,o,null),l=u.maxOutputSize,p=u.iouThreshold,c=u.scoreThreshold,m={boxes:i,scores:a},f={maxOutputSize:l,iouThreshold:p,scoreThreshold:c,padToMaxOutputSize:s},d=D.runKernel(Bi,m,f);return{selectedIndices:d[0],validOutputs:d[1]}}var x2=_({nonMaxSuppressionPadded_:XX});async function YX(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let i=v(r,"boxes","nonMaxSuppressionAsync"),a=v(e,"scores","nonMaxSuppressionAsync"),u=Ms(i,a,t,n,o,null),l=u.maxOutputSize,p=u.iouThreshold,c=u.scoreThreshold,[m,f]=await Promise.all([i.data(),a.data()]),{selectedIndices:d,validOutputs:h}=Wb(m,f,l,p,c,s);return i!==r&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:zt(d,"int32"),validOutputs:me(h,"int32")}}var T2=YX;function QX(r,e,t=!1,n=!1){let o=v(r,"images","resizeBilinear");P(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),P(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),P(n===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=o,i=!1;o.rank===3&&(i=!0,s=L(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,a={images:s},u={alignCorners:t,halfPixelCenters:n,size:e},l=D.runKernel(Po,a,u);return i?L(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var k2=_({resizeBilinear_:QX});function ZX(r,e,t=!1,n=!1){let o=v(r,"images","resizeNearestNeighbor");P(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),P(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),P(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),P(n===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=o,i=!1;o.rank===3&&(i=!0,s=L(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,a={images:s},u={alignCorners:t,halfPixelCenters:n,size:e},l=D.runKernel(Ha,a,u);return i?L(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var I2=_({resizeNearestNeighbor_:ZX});function JX(r,e="binary",t=!1,n=.5){let o=v(r,"image","threshold"),s=.2989,i=.587,a=.114,u=o.shape[0]*o.shape[1],l=R(zt([n]),255),p,c,m,f;if(P(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),P(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),P(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),P(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),o.shape[2]===3){[p,c,m]=kr(o,[1,1,1],-1);let g=R(p,s),x=R(c,i),y=R(m,a);f=X(X(g,x),y)}else f=r;if(e==="otsu"){let g=vf(J($f(f),"int32"),Mr([]),256);l=eY(g,u)}let d=t?jo(f,l):rr(f,l);return J(R(d,255),"int32")}function eY(r,e){let t=zt([-1]),n=zt([0]),o=zt([0]),s,i,a,u,l,p;for(let c=0;c<r.size-1;c++){s=We(r,0,c+1),i=We(r,c+1),l=ce(he(s),e),p=ce(he(i),e);let m=he(R(s,nu(0,s.size)));a=ce(m,he(s));let f=Ca(i.shape,s.size),d=X(nu(0,i.size),f),h=R(i,d);u=ce(he(h),he(i));let g=pe(a,u),x=pe(a,u),y=R(l,p);o=R(R(y,g),x);let T=rr(o,n);n=Ot(T,o,n),t=Ot(T,zt([c]),t)}return t}var C2=_({threshold_:JX});function tY(r,e,t="nearest",n="constant",o=0,s){let i=v(r,"image","transform","float32"),a=v(e,"transforms","transform","float32");P(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),P(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),P(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let u={image:i,transforms:a},l={interpolation:t,fillMode:n,fillValue:o,outputShape:s};return D.runKernel(xa,u,l)}var v2=_({transform_:tY});function rY(r,e,t){P(e%1==0,()=>`bandPart(): numLower must be an integer, got ${e}.`),P(t%1==0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);let n=v(r,"a","bandPart");P(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let o=n.shape,[s,i]=n.shape.slice(-2);if(!(e<=s))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`);if(!(t<=i))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${i}).`);e<0&&(e=s),t<0&&(t=i);let a=L(nu(0,s,1,"int32"),[-1,1]),u=nu(0,i,1,"int32"),l=pe(a,u),p=jr(jo(l,me(+e,"int32")),Vo(l,me(-t,"int32"))),c=Tt([s,i],n.dtype);return L(fr(Br(L(n,[-1,s,i])).map(m=>Ot(p,m,c))),o)}var w2=_({bandPart_:rY});function nY(r){let e;if(Array.isArray(r)){e=!1,P(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let o=r[0].shape[0];for(let s=1;s<r.length;++s)P(r[s].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${o})`)}else e=!0,r=kr(r,r.shape[0],0).map(o=>pn(o,[0]));P(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let t=[],n=r;for(let o=0;o<r.length;++o)t.push(D.tidy(()=>{let s=n[o];if(o>0)for(let i=0;i<o;++i){let a=R(he(R(t[i],s)),t[i]);s=pe(s,a)}return ce(s,Eb(s,"euclidean"))}));return e?fr(t,0):t}var S2=_({gramSchmidt_:nY});function oY(r,e=!1){if(P(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return _2(r,e);{let t=r.shape.slice(0,r.shape.length-2).reduce((u,l)=>u*l),n=Br(L(r,[t,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),o=[],s=[];n.forEach(u=>{let[l,p]=_2(u,e);o.push(l),s.push(p)});let i=L(fr(o,0),r.shape),a=L(fr(s,0),r.shape);return[i,a]}}function _2(r,e=!1){return D.tidy(()=>{P(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let t=r.shape[0],n=r.shape[1],o=$c(t),s=wn(r),i=ri([[1]],[1,1]),a=wn(i),u=t>=n?n:t;for(let l=0;l<u;++l){let p=s,c=a,m=o;[a,s,o]=D.tidy(()=>{let f=We(s,[l,l],[t-l,1]),d=Eb(f),h=We(s,[l,l],[1,1]),g=Ot(rr(h,0),ri([[-1]]),ri([[1]])),x=pe(h,R(g,d)),y=ce(f,x);y.shape[0]===1?a=wn(i):a=ut([i,We(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);let T=Je(ce(je(g,x),d)),k=We(s,[l,0],[t-l,n]),C=R(T,a),N=qe(a);if(l===0)s=pe(k,je(C,je(N,k)));else{let E=pe(k,je(C,je(N,k)));s=ut([We(s,[0,0],[l,n]),E],0)}let A=qe(C),M=We(o,[0,l],[t,o.shape[1]-l]);if(l===0)o=pe(M,je(je(M,a),A));else{let E=pe(M,je(je(M,a),A));o=ut([We(o,[0,0],[t,l]),E],1)}return[a,s,o]}),Ee([p,c,m])}return!e&&t>n&&(o=We(o,[0,0],[t,n]),s=We(s,[0,0],[n,n])),[o,s]})}var A2=_({qr_:oY});var nr;(function(o){o[o.NONE=0]="NONE",o[o.MEAN=1]="MEAN",o[o.SUM=2]="SUM",o[o.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(nr||(nr={}));function sY(r,e,t=nr.SUM_BY_NONZERO_WEIGHTS){let n=v(r,"losses","computeWeightedLoss"),o=null;e!=null&&(o=v(e,"weights","computeWeightedLoss"));let s=o==null?n:R(n,o);if(t===nr.NONE)return s;if(t===nr.SUM)return he(s);if(t===nr.MEAN){if(o==null)return Rt(s);{let i=n.size/o.size,a=ce(he(s),he(o));return i>1?ce(a,me(i)):a}}if(t===nr.SUM_BY_NONZERO_WEIGHTS){if(o==null)return ce(he(s),me(n.size));{let i=R(o,mr(n.shape)),a=J(he(ti(i,me(0))),"float32");return ce(he(s),a)}}throw Error(`Unknown reduction: ${t}`)}var qr=_({computeWeightedLoss_:sY});function aY(r,e,t,n=nr.SUM_BY_NONZERO_WEIGHTS){let o=v(r,"labels","absoluteDifference"),s=v(e,"predictions","absoluteDifference"),i=null;t!=null&&(i=v(t,"weights","absoluteDifference")),Ut(o.shape,s.shape,"Error in absoluteDifference: ");let a=$t(pe(o,s));return qr(a,i,n)}var N2=_({absoluteDifference_:aY});function iY(r,e,t,n,o=nr.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"labels","cosineDistance"),i=v(e,"predictions","cosineDistance"),a=null;n!=null&&(a=v(n,"weights","cosineDistance")),Ut(s.shape,i.shape,"Error in cosineDistance: ");let u=me(1),l=pe(u,he(R(s,i),t,!0));return qr(l,a,o)}var D2=_({cosineDistance_:iY});function uY(r,e,t,n=nr.SUM_BY_NONZERO_WEIGHTS){let o=v(r,"labels","hingeLoss"),s=v(e,"predictions","hingeLoss"),i=null;t!=null&&(i=v(t,"weights","hingeLoss")),Ut(o.shape,s.shape,"Error in hingeLoss: ");let a=me(1);o=pe(R(me(2),o),a);let u=Hr(pe(a,R(o,s)));return qr(u,i,n)}var P2=_({hingeLoss_:uY});function lY(r,e,t,n=1,o=nr.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"labels","huberLoss"),i=v(e,"predictions","huberLoss"),a=null;t!=null&&(a=v(t,"weights","huberLoss")),Ut(s.shape,i.shape,"Error in huberLoss: ");let u=me(n),l=$t(pe(i,s)),p=ru(l,u),c=pe(l,p),m=X(R(me(.5),Xe(p)),R(u,c));return qr(m,a,o)}var F2=_({huberLoss_:lY});function pY(r,e,t,n=1e-7,o=nr.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"labels","logLoss"),i=v(e,"predictions","logLoss"),a=null;t!=null&&(a=v(t,"weights","logLoss")),Ut(s.shape,i.shape,"Error in logLoss: ");let u=me(1),l=me(n),p=Je(R(s,Lr(X(i,l)))),c=R(pe(u,s),Lr(X(pe(u,i),l))),m=pe(p,c);return qr(m,a,o)}var M2=_({logLoss_:pY});function cY(r,e,t,n=nr.SUM_BY_NONZERO_WEIGHTS){let o=v(r,"labels","meanSquaredError"),s=v(e,"predictions","meanSquaredError"),i=null;t!=null&&(i=v(t,"weights","meanSquaredError")),Ut(o.shape,s.shape,"Error in meanSquaredError: ");let a=jf(o,s);return qr(a,i,n)}var E2=_({meanSquaredError_:cY});function mY(r,e){let t=v(r,"labels","sigmoidCrossEntropyWithLogits"),n=v(e,"logits","sigmoidCrossEntropyWithLogits");Ut(t.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let o=Hr(n),s=R(n,t),i=Ol(cr(Je($t(n))));return X(pe(o,s),i)}function fY(r,e,t,n=0,o=nr.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"multiClassLabels","sigmoidCrossEntropy"),i=v(e,"logits","sigmoidCrossEntropy"),a=null;if(t!=null&&(a=v(t,"weights","sigmoidCrossEntropy")),Ut(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),n>0){let l=me(n),p=me(1),c=me(.5);s=X(R(s,pe(p,l)),R(c,l))}let u=mY(s,i);return qr(u,a,o)}var R2=_({sigmoidCrossEntropy_:fY});function dY(r,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return ln((o,s,i)=>{let u=YI(s,[t],!0),l=pe(J(s,"float32"),u);i([o,l]);let p=Je(R(l,o));return{value:he(p,[t]),gradFunc:(f,d)=>{let[h,g]=d,x=Ps(f.shape,[t]);return[R(L(f,x),pe(J(h,"float32"),cr(g))),R(L(f,x),pe(cr(g),J(h,"float32")))]}}})(r,e)}function hY(r,e,t,n=0,o=nr.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"onehotLabels","softmaxCrossEntropy"),i=v(e,"logits","softmaxCrossEntropy"),a=null;if(t!=null&&(a=v(t,"weights","softmaxCrossEntropy")),Ut(s.shape,i.shape,"Error in softmaxCrossEntropy: "),n>0){let l=me(n),p=me(1),c=me(s.shape[1]);s=X(R(s,pe(p,l)),ce(l,c))}let u=dY(s,i);return qr(u,a,o)}var L2=_({softmaxCrossEntropy_:hY});function gY(r,e,t,n){let o=v(r,"indices","sparseFillEmptyRows"),s=v(e,"values","sparseFillEmptyRows"),i=v(t,"denseShape","sparseFillEmptyRows"),a=v(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);let u={indices:o,values:s,denseShape:i,defaultValue:a},l=D.runKernel(yc,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}var B2=_({sparseFillEmptyRows_:gY});function bY(r,e,t){let n=v(r,"inputIndices","sparseReshape"),o=v(e,"inputShape","sparseReshape"),s=v(t,"newShape","sparseReshape");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:n,inputShape:o,newShape:s},a=D.runKernel(xc,i);return{outputIndices:a[0],outputShape:a[1]}}var $2=_({sparseReshape_:bY});function yY(r,e,t){let n=v(r,"data","sparseSegmentMean"),o=v(e,"indices","sparseSegmentMean"),s=v(t,"segmentIds","sparseSegmentMean");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let i={data:n,indices:o,segmentIds:s};return D.runKernel(Tc,i)}var O2=_({sparseSegmentMean_:yY});function xY(r,e,t){let n=v(r,"data","sparseSegmentSum"),o=v(e,"indices","sparseSegmentSum"),s=v(t,"segmentIds","sparseSegmentSum");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let i={data:n,indices:o,segmentIds:s};return D.runKernel(kc,i)}var z2=_({sparseSegmentSum_:xY});function TY(r,e,t,n,o,s,i,a){let u=v(r,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);let l=v(e,"dataSplits","stringNGrams");if(l.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let p={separator:t,nGramWidths:n,leftPad:o,rightPad:s,padWidth:i,preserveShortSequences:a},c={data:u,dataSplits:l},m=D.runKernel(Ou,c,p);return{nGrams:m[0],nGramsSplits:m[1]}}var G2=_({stringNGrams_:TY});function kY(r,e,t=!0){let n=v(r,"input","stringSplit","string"),o=v(e,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);let s={skipEmpty:t},i={input:n,delimiter:o},a=D.runKernel(Ic,i,s);return{indices:a[0],values:a[1],shape:a[2]}}var W2=_({stringSplit_:kY});function IY(r,e){let t=v(r,"input","stringToHashBucketFast","string"),n={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");let o={input:t};return D.runKernel(Cc,o,n)}var U2=_({stringToHashBucketFast_:IY});var BKe={fft:jl,ifft:Hu,rfft:Hl,irfft:Vf},WKe={hammingWindow:i2,hannWindow:Ob,frame:zb,stft:u2},Nn={flipLeftRight:p2,grayscaleToRGB:c2,resizeNearestNeighbor:I2,resizeBilinear:k2,rotateWithOffset:m2,cropAndResize:l2,nonMaxSuppression:f2,nonMaxSuppressionAsync:g2,nonMaxSuppressionWithScore:b2,nonMaxSuppressionWithScoreAsync:y2,nonMaxSuppressionPadded:x2,nonMaxSuppressionPaddedAsync:T2,threshold:C2,transform:v2},K2={bandPart:w2,gramSchmidt:S2,qr:A2},hVe={absoluteDifference:N2,computeWeightedLoss:qr,cosineDistance:D2,hingeLoss:P2,huberLoss:F2,logLoss:M2,meanSquaredError:E2,sigmoidCrossEntropy:R2,softmaxCrossEntropy:L2},qf={sparseFillEmptyRows:B2,sparseReshape:$2,sparseSegmentMean:O2,sparseSegmentSum:z2},Kb={stringNGrams:G2,stringSplit:W2,stringToHashBucketFast:U2};var Jr=class extends Ib{minimize(e,t=!1,n){let{value:o,grads:s}=this.computeGradients(e,n);if(n!=null){let i=n.map(a=>({name:a.name,tensor:s[a.name]}));this.applyGradients(i)}else this.applyGradients(s);return Ee(s),t?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Sb(e,t)}dispose(){this.iterations_!=null&&Ee(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:me(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Jr,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var Jl=class extends Jr{constructor(e,t,n=null){super();this.learningRate=e;this.rho=t;this.epsilon=n;this.accumulatedGrads=[];this.accumulatedUpdates=[];n==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n],i=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accum_grad`,variable:G(()=>De(s).variable(i))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${n}/accum_var`,variable:G(()=>De(s).variable(i))});let a=Array.isArray(e)?e[o].tensor:e[n];if(a==null)return;let u=this.accumulatedGrads[o].variable,l=this.accumulatedUpdates[o].variable;G(()=>{let p=X(R(u,this.rho),R(Xe(a),1-this.rho)),c=R(ce(Lt(X(l,this.epsilon)),Lt(X(u,this.epsilon))),a),m=X(R(l,this.rho),R(Xe(c),1-this.rho));u.assign(p),l.assign(m);let f=X(R(c,-this.learningRate),s);s.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ee(this.accumulatedGrads.map(e=>e.variable)),Ee(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Jl.className="Adadelta";Sn(Jl);var ep=class extends Jr{constructor(e,t=.1){super();this.learningRate=e;this.initialAccumulatorValue=t;this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n];if(this.accumulatedGrads[o]==null){let u=!1;this.accumulatedGrads[o]={originalName:`${n}/accumulator`,variable:G(()=>Ca(s.shape,this.initialAccumulatorValue).variable(u))}}let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let a=this.accumulatedGrads[o].variable;G(()=>{let u=X(a,Xe(i));a.assign(u);let l=X(R(ce(i,Lt(X(u,D.backend.epsilon()))),-this.learningRate),s);s.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ee(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};ep.className="Adagrad";Sn(ep);var tp=class extends Jr{constructor(e,t,n,o=null){super();this.learningRate=e;this.beta1=t;this.beta2=n;this.epsilon=o;this.accumulatedFirstMoment=[];this.accumulatedSecondMoment=[];G(()=>{this.accBeta1=me(t).variable(),this.accBeta2=me(n).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);G(()=>{let n=pe(1,this.accBeta1),o=pe(1,this.accBeta2);t.forEach((s,i)=>{let a=D.registeredVariables[s],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${s}/m`,variable:G(()=>De(a).variable(u))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${s}/v`,variable:G(()=>De(a).variable(u))});let l=Array.isArray(e)?e[i].tensor:e[s];if(l==null)return;let p=this.accumulatedFirstMoment[i].variable,c=this.accumulatedSecondMoment[i].variable,m=X(R(p,this.beta1),R(l,1-this.beta1)),f=X(R(c,this.beta2),R(Xe(l),1-this.beta2)),d=ce(m,n),h=ce(f,o);p.assign(m),c.assign(f);let g=X(R(ce(d,X(Lt(h),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(R(this.accBeta1,this.beta1)),this.accBeta2.assign(R(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ee(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Ee(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),G(()=>{this.accBeta1.assign(An(this.beta1,this.iterations_+1)),this.accBeta2.assign(An(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};tp.className="Adam";Sn(tp);var rp=class extends Jr{constructor(e,t,n,o=null,s=0){super();this.learningRate=e;this.beta1=t;this.beta2=n;this.epsilon=o;this.decay=s;this.accumulatedFirstMoment=[];this.accumulatedWeightedInfNorm=[];G(()=>{this.iteration=me(0).variable(),this.accBeta1=me(t).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);G(()=>{let n=pe(1,this.accBeta1),o=ce(-this.learningRate,X(R(this.iteration,this.decay),1));t.forEach((s,i)=>{let a=D.registeredVariables[s],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${s}/m`,variable:De(a).variable(u)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${s}/v`,variable:De(a).variable(u)});let l=Array.isArray(e)?e[i].tensor:e[s];if(l==null)return;let p=this.accumulatedFirstMoment[i].variable,c=this.accumulatedWeightedInfNorm[i].variable,m=X(R(p,this.beta1),R(l,1-this.beta1)),f=R(c,this.beta2),d=$t(l),h=Hn(f,d);p.assign(m),c.assign(h);let g=X(R(ce(o,n),ce(m,X(h,this.epsilon))),a);a.assign(g)}),this.iteration.assign(X(this.iteration,1)),this.accBeta1.assign(R(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ee(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Ee(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};rp.className="Adamax";Sn(rp);var su=class extends Jr{constructor(e){super();this.learningRate=e;this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=Array.isArray(e)?e[o].tensor:e[n];if(s==null)return;let i=D.registeredVariables[n];G(()=>{let a=X(R(this.c,s),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Vt(me(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};su.className="SGD";Sn(su);var np=class extends su{constructor(e,t,n=!1){super(e);this.learningRate=e;this.momentum=t;this.useNesterov=n;this.accumulations=[];this.m=me(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n];if(this.accumulations[o]==null){let u=!1;this.accumulations[o]={originalName:`${n}/momentum`,variable:G(()=>De(s).variable(u))}}let i=this.accumulations[o].variable,a=Array.isArray(e)?e[o].tensor:e[n];a!=null&&G(()=>{let u,l=X(R(this.m,i),a);this.useNesterov?u=X(R(this.c,X(a,R(l,this.m))),s):u=X(R(this.c,l),s),i.assign(l),s.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ee(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};np.className="Momentum";Sn(np);var op=class extends Jr{constructor(e,t=.9,n=0,o=null,s=!1){super();this.learningRate=e;this.decay=t;this.momentum=n;this.epsilon=o;this.accumulatedMeanSquares=[];this.accumulatedMoments=[];this.accumulatedMeanGrads=[];if(this.centered=s,o==null&&(this.epsilon=D.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n],i=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${n}/rms`,variable:G(()=>De(s).variable(i))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${n}/momentum`,variable:G(()=>De(s).variable(i))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${n}/mg`,variable:G(()=>De(s).variable(i))});let a=Array.isArray(e)?e[o].tensor:e[n];if(a==null)return;let u=this.accumulatedMeanSquares[o].variable,l=this.accumulatedMoments[o].variable;G(()=>{let p=X(R(u,this.decay),R(Xe(a),1-this.decay));if(this.centered){let c=this.accumulatedMeanGrads[o].variable,m=X(R(c,this.decay),R(a,1-this.decay)),f=ce(R(a,this.learningRate),Lt(pe(p,X(Xe(m),this.epsilon)))),d=X(R(l,this.momentum),f);u.assign(p),c.assign(m),l.assign(d);let h=pe(s,d);s.assign(h)}else{let c=X(R(u,this.decay),R(Xe(a),1-this.decay)),m=X(R(l,this.momentum),ce(R(a,this.learningRate),Lt(X(c,this.epsilon))));u.assign(c),l.assign(m);let f=pe(s,m);s.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ee(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ee(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Ee(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};op.className="RMSProp";Sn(op);var ni=class{static sgd(e){return new su(e)}static momentum(e,t,n=!1){return new np(e,t,n)}static rmsprop(e,t=.9,n=0,o=null,s=!1){return new op(e,t,n,o,s)}static adam(e=.001,t=.9,n=.999,o=null){return new tp(e,t,n,o)}static adadelta(e=.001,t=.95,n=null){return new Jl(e,t,n)}static adamax(e=.002,t=.9,n=.999,o=null,s=0){return new rp(e,t,n,o,s)}static adagrad(e,t=.1){return new ep(e,t)}};var sp={sgd:ni.sgd,momentum:ni.momentum,adadelta:ni.adadelta,adagrad:ni.adagrad,rmsprop:ni.rmsprop,adamax:ni.adamax,adam:ni.adam};var CY=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:r=>r())();function xC(){return new Promise(r=>CY(()=>r()))}var I={};Ye(I,{ERF_A1:()=>EY,ERF_A2:()=>RY,ERF_A3:()=>LY,ERF_A4:()=>BY,ERF_A5:()=>$Y,ERF_P:()=>MY,PARALLELIZE_THRESHOLD:()=>Vb,SELU_SCALE:()=>kC,SELU_SCALEALPHA:()=>TC,applyActivation:()=>Ql,assertAndGetBroadcastShape:()=>Ue,assertAxesAreInnerMostDims:()=>C5,assertParamsConsistent:()=>vY,assignToTypedArray:()=>KY,axesAreInnerMostDims:()=>HI,calculateShapes:()=>g0,checkEinsumDimSizes:()=>YY,combineLocations:()=>E0,complexWithEvenIndex:()=>GY,complexWithOddIndex:()=>WY,computeConv2DInfo:()=>Pl,computeConv3DInfo:()=>P0,computeDefaultPad:()=>wI,computeDilation2DInfo:()=>Kq,computeOptimalWindowSize:()=>SY,computeOutAndReduceShapes:()=>qI,computeOutShape:()=>wY,computePool2DInfo:()=>vI,computePool3DInfo:()=>Vq,convertConv2DDataFormat:()=>F0,decodeEinsumEquation:()=>qY,eitherStridesOrDilationsAreOne:()=>Er,expandShapeToKeepDim:()=>Ps,exponent:()=>jY,exponents:()=>VY,fromStringArrayToUint8:()=>s7,fromUint8ToStringArray:()=>o7,getAxesPermutation:()=>XI,getBroadcastDims:()=>f0,getComplexWithIndex:()=>UY,getEinsumComputePath:()=>QY,getEinsumPermutation:()=>XY,getFusedBiasGradient:()=>Yl,getFusedDyActivation:()=>Xl,getImageCenter:()=>_Y,getInnerMostAxes:()=>v5,getPermuted:()=>NY,getReductionAxes:()=>wt,getReshaped:()=>AY,getReshapedPermuted:()=>DY,getSliceBeginCoords:()=>PY,getSliceSize:()=>FY,getUndoAxesPermutation:()=>Ff,isIdentityPermutation:()=>ZY,log:()=>oH,mergeRealAndImagArrays:()=>OY,prepareAndValidate:()=>h0,prepareSplitSize:()=>e7,segment_util:()=>CC,shouldFuse:()=>Zl,slice_util:()=>kt,splitRealAndImagArrays:()=>zY,tupleValuesAreOne:()=>Ko,upcastType:()=>Kt,validateInput:()=>Tb,validateUpdateShape:()=>lI,warn:()=>Xa});function vY(r,e){let t=r[0].length;r.forEach((o,s)=>{P(o.length===t,()=>`Error in concat${t}D: rank of tensors[${s}] must be the same as the rank of the rest (${t})`)}),P(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);let n=r[0];r.forEach((o,s)=>{for(let i=0;i<t;i++)P(i===e||o[i]===n[i],()=>`Error in concat${t}D: Shape of tensors[${s}] (${o}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function wY(r,e){let t=r[0].slice();for(let n=1;n<r.length;n++)t[e]+=r[n][e];return t}var Vb=30;function SY(r){return r<=Vb?r:qp(r,Math.floor(Math.sqrt(r)))}function _Y(r,e,t){let n=t*(typeof r=="number"?r:r[0]),o=e*(typeof r=="number"?r:r[1]);return[n,o]}function AY(r,e,t,n=!0){let o=[];if(n)o=o.concat(e.slice(0)),o.push(r[0]/t),o=o.concat(r.slice(1));else{o=o.concat(r[0]);let s=e.length;for(let i=0;i<s;++i)o=o.concat([r[i+1]/e[i],e[i]]);o=o.concat(r.slice(s+1))}return o}function NY(r,e,t=!0){let n=[];if(t){n.push(e);for(let o=e+1;o<r;++o)o<=2*e?(n.push(o),n.push(o-(e+1))):n.push(o)}else{let o=[],s=[];for(let i=1;i<r;++i)i>=e*2+1||i%2==1?s.push(i):o.push(i);n.push(...o),n.push(0),n.push(...s)}return n}function DY(r,e,t,n=!0){let o=[];n?o.push(r[0]/t):o.push(r[0]*t);for(let s=1;s<r.length;++s)s<=e.length?n?o.push(e[s-1]*r[s]):o.push(r[s]/e[s-1]):o.push(r[s]);return o}function PY(r,e){let t=[0];for(let n=0;n<e;++n)t.push(r[n][0]);return t}function FY(r,e,t){let n=r.slice(0,1);for(let o=0;o<t;++o)n.push(r[o+1]-e[o][0]-e[o][1]);return n}var TC=1.7580993408473768,kC=1.0507009873554805;var MY=.3275911,EY=.254829592,RY=-.284496736,LY=1.421413741,BY=-1.453152027,$Y=1.061405429;function OY(r,e){if(r.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${e.length}.`);let t=new Float32Array(r.length*2);for(let n=0;n<t.length;n+=2)t[n]=r[n/2],t[n+1]=e[n/2];return t}function zY(r){let e=new Float32Array(r.length/2),t=new Float32Array(r.length/2);for(let n=0;n<r.length;n+=2)e[n/2]=r[n],t[n/2]=r[n+1];return{real:e,imag:t}}function GY(r){let e=Math.ceil(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=0;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function WY(r){let e=Math.floor(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=2;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function UY(r,e){let t=r[e*2],n=r[e*2+1];return{real:t,imag:n}}function KY(r,e,t,n){r[n*2]=e,r[n*2+1]=t}function VY(r,e){let t=new Float32Array(r/2),n=new Float32Array(r/2);for(let o=0;o<Math.ceil(r/2);o++){let s=(e?2:-2)*Math.PI*(o/r);t[o]=Math.cos(s),n[o]=Math.sin(s)}return{real:t,imag:n}}function jY(r,e,t){let n=(t?2:-2)*Math.PI*(r/e),o=Math.cos(n),s=Math.sin(n);return{real:o,imag:s}}var IC="->",HY=/->/g,V2=",",j2="...";function qY(r,e){r=r.replace(/\s/g,"");let t=(r.length-r.replace(HY,"").length)/IC.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${IC}").`);let[n,o]=r.split(IC);P(n.indexOf(j2)===-1,()=>`The ellipsis notation ("${j2}") is not supported yet.`);let s=n.split(V2),i=s.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let a=[];for(let m=0;m<o.length;++m){let f=o[m];if(!s.some(d=>d.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);a.indexOf(f)===-1&&a.push(f)}for(let m=0;m<n.length;++m){let f=n[m];a.indexOf(f)===-1&&f!==V2&&a.push(f)}let u=new Array(s.length);for(let m=0;m<i;++m){if(new Set(s[m].split("")).size!==s[m].length)throw new Error(`Found duplicate axes in input component ${s[m]}. Support for duplicate axes in input is not implemented yet.`);u[m]=[];for(let f=0;f<s[m].length;++f)u[m].push(a.indexOf(s[m][f]))}let l=a.length,p=o.length,c=[];for(let m=p;m<l;++m)c.push(m);return{allDims:a,summedDims:c,idDims:u}}function XY(r,e){let t=new Array(r);t.fill(-1);for(let o=0;o<e.length;++o)t[e[o]]=o;let n=[];for(let o=0;o<r;++o)t[o]===-1&&n.push(o);return t=t.filter(o=>o!==-1),{permutationIndices:t,expandDims:n}}function YY(r,e,t){let n=new Array(r);for(let o=0;o<t.length;++o){let s=t[o].shape;for(let i=0;i<e[o].length;++i)n[e[o][i]]===void 0?n[e[o][i]]=s[i]:P(n[e[o][i]]===s[i],()=>`Expected dimension ${n[e[o][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function QY(r,e){let t=r,n=[],o=0;r.length===0&&t.push(-1),o=r.length+1;for(let i=0;i<o;++i)n.push([]);let s=[];for(let i=0;i<t.length;++i){let a=t[i],u=JY(e,a);for(let l of u)s.indexOf(l)===-1&&(n[i].push(l),s.push(l))}return{path:t,steps:n}}function ZY(r){return r.every((e,t)=>e===t)}function JY(r,e){let t=[];for(let n=0;n<r.length;++n)(r[n].length===0||r[n].indexOf(e)!==-1||e===-1)&&t.push(n);return t}function e7(r,e,t=0){let n=[];if(typeof e=="number")P(r.shape[t]%e==0,()=>"Number of splits must evenly divide the axis."),n=new Array(e).fill(r.shape[t]/e);else{let o=e.reduce((i,a)=>(a===-1&&(i+=1),i),0);P(o<=1,()=>"There should be only one negative value in split array.");let s=e.indexOf(-1);if(s!==-1){let i=e.reduce((a,u)=>u>0?a+u:a);e[s]=r.shape[t]-i}P(r.shape[t]===e.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),n=e}return n}var CC={};Ye(CC,{collectGatherOpShapeInfo:()=>n7,computeOutShape:()=>r7,segOpComputeOptimalWindowSize:()=>t7});function t7(r,e){let t=!1,n;for(r<=Vb?(n=r,t=!0):n=qp(r,Math.floor(Math.sqrt(r)));!t;)n>e||n===r?t=!0:n=qp(r,n+1);return n}function r7(r,e,t){let n=[],o=r.length;for(let s=0;s<o;s++)s!==e?n.push(r[s]):n.push(t);return n}function n7(r,e,t,n){let o=e.shape.length,s=r.shape.length;if(n!==0&&(n<-o||n>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${n}`);if(n<0&&(n+=o),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(t<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${t}).`);for(let c=0;c<n;++c)if(r.shape[c]!==e.shape[c])throw new Error(`x.shape[${c}]: ${r.shape[c]} should be equal to indices.shape[${c}]: ${e.shape[c]}.`);let i=r.shape[t],a=[],u=1,l=1,p=1;for(let c=0;c<n;++c)a.push(r.shape[c]),u*=r.shape[c];for(let c=n;c<t;c++)a.push(r.shape[c]),l*=r.shape[c];for(let c=n;c<o;c++)a.push(e.shape[c]);for(let c=t+1;c<s;c++)a.push(r.shape[c]),p*=r.shape[c];return{batchSize:u,sliceSize:p,outerSize:l,dimSize:i,outputShape:a}}function o7(r){try{return r.map(e=>Nc(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function s7(r){return r.map(e=>Wu(e))}var xr={};Ye(xr,{nonMaxSuppressionV3Impl:()=>Gb,nonMaxSuppressionV4Impl:()=>Wb,nonMaxSuppressionV5Impl:()=>Ub,whereImpl:()=>Mb});var jb={kernelName:is,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,ou(J(t,"float32"),-1))}}};var H2={kernelName:ki,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Xe(J(t,"float32")),o=Lt(pe(me(1),n));return Je(ce(r,o))}}}};var q2={kernelName:Ii,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Lt(pe(Xe(J(t,"float32")),1));return ce(r,n)}}}};var X2={kernelName:Cn,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ue(t.shape,n.shape);return{a:()=>{let a=r,u=wt(t.shape,o);return u.length>0&&(a=he(a,u)),L(a,t.shape)},b:()=>{let a=r,u=wt(n.shape,o);return u.length>0&&(a=he(a,u)),L(a,n.shape)}}}};var Y2={kernelName:eo,saveAllInputs:!0,gradFunc:(r,e)=>{let t={};return e.forEach((n,o)=>{t[o]=()=>r.clone()}),t}};var Q2={kernelName:to,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>De(t)}}};var Z2={kernelName:Ka,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>De(t)}}};var J2={kernelName:wi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>ce(r,Lt(pe(me(1),Xe(J(t,"float32")))))}}};var e1={kernelName:Si,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Lt(X(me(1),Xe(J(t,"float32"))));return ce(r,n)}}}};var t1={kernelName:Ni,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ue(t.shape,n.shape);return{a:()=>{let a=X(Xe(t),Xe(n)),u=R(r,ce(n,a)),l=wt(t.shape,o);return l.length>0&&(u=he(u,l)),L(u,t.shape)},b:()=>{let a=X(Xe(t),Xe(n)),u=Je(R(r,ce(t,a))),l=wt(n.shape,o);return l.length>0&&(u=he(u,l)),L(u,n.shape)}}}};var r1={kernelName:_i,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>ce(r,X(Xe(J(t,"float32")),1))}}};var n1={kernelName:Ai,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>ce(r,pe(me(1),Xe(J(t,"float32"))))}}};function a7(r,e,t,n,o,s){let i=v(r,"dy","avgPool3dGrad"),a=v(e,"input","avgPool3dGrad"),u=i,l=a,p=!1;a.rank===4&&(p=!0,u=L(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=L(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),P(l.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),s!=null&&P(ct(o),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${o}.`);let c={dy:u,input:l},m={filterSize:t,strides:n,pad:o,dimRoundingMode:s},f=D.runKernel(Qp,c,m);return p?L(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}var o1=_({avgPool3dGrad_:a7});var s1={kernelName:Au,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:i,dimRoundingMode:a}=t;return{x:()=>o1(r,n,o,s,i,a)}}};function i7(r,e,t,n,o){let s=v(r,"dy","avgPoolGrad"),i=v(e,"input","avgPoolGrad");P(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let a=i,u=s,l=!1;i.rank===3&&(l=!0,a=L(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=L(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),P(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);let p={dy:u,input:a},c={filterSize:t,strides:n,pad:o},m=D.runKernel(Yp,p,c);return l?L(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var a1=_({avgPoolGrad_:i7});var i1={kernelName:ro,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:i}=t;return{x:()=>a1(r,n,o,s,i)}}};var u1={kernelName:no,inputsToSave:["a","b"],gradFunc:(r,e,t)=>{let[n,o]=e,{transposeA:s,transposeB:i}=t;return!s&&!i?{a:()=>je(r,o,!1,!0),b:()=>je(n,r,!0,!1)}:!s&&i?{a:()=>je(r,o,!1,!1),b:()=>je(r,n,!0,!1)}:s&&!i?{a:()=>je(o,r,!1,!0),b:()=>je(n,r,!1,!1)}:{a:()=>je(o,r,!0,!0),b:()=>je(r,n,!0,!0)}}};var l1={kernelName:us,gradFunc:(r,e,t)=>{let{blockShape:n,crops:o}=t;return{x:()=>Wl(r,n,o)}}};var p1={kernelName:rD,gradFunc:(r,e,t)=>{let n=t,o=n.inputShape,s=n.shape,i=Array.from(s);for(let u=o.length-1;u>=0;u--)if(o[u]===s[u])i[u]=1;else if(o[u]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);let a=[];for(let u=0;u<i.length;u++)i[u]>1&&a.push(u);return{x:()=>he(r,a,!0)}}};var c1={kernelName:zn,gradFunc:r=>({x:()=>r.clone()})};var m1={kernelName:oo,gradFunc:r=>({x:()=>De(r)})};var f1={kernelName:Gn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{clipValueMin:o,clipValueMax:s}=t;return{x:()=>Ot(jr(Vo(n,o),jo(n,s)),r,De(r))}}};var d1={kernelName:Du,inputsToSave:["x"],gradFunc:jb.gradFunc};var h1={kernelName:ls,saveAllInputs:!0,gradFunc:(r,e,t)=>{let n=e.map(u=>u.shape),{axis:o}=t,s=br(o,e[0].shape)[0],i=n.map(u=>u[s]);return kr(r,i,s).map(u=>()=>u)}};var g1={kernelName:so,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{dilations:s,strides:i,pad:a,dataFormat:u}=t;return P(Ko(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Bc(n.shape,r,o,i,a,u),filter:()=>Uc(n,r,o.shape,i,a,u)}}};var b1={kernelName:ao,inputsToSave:["dy","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{strides:s,pad:i,dataFormat:a,dimRoundingMode:u}=t;return{dy:()=>jn(r,o,s,i,a,1,u),filter:()=>Uc(r,n,o.shape,s,i,a,u)}}};function u7(r,e,t,n,o){let s=r;r.rank===4&&(s=L(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let i=e;i.rank===4&&(i=L(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),P(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),P(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),P(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),P(s.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${t[3]}.`),P(i.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${t[4]}).`);let a={x:s,dy:i},u={strides:n,pad:o,filterShape:t};return D.runKernel(tc,a,u)}var y1=_({conv3DBackpropFilter_:u7});var x1={kernelName:Pu,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s}=t;P(Ko(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[i,a]=e;return{x:()=>wb(i.shape,r,a,o,s),filter:()=>y1(i,r,a.shape,o,s)}}};var T1={kernelName:io,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(Je(Gf(J(t,"float32"))),r)}}};var k1={kernelName:uo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(Wf(J(t,"float32")),r)}}};var I1={kernelName:Xs,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o,exclusive:s,reverse:i}=t;return{x:()=>{let a=XI([o],n.rank),u=Nf(r,o,s,!i);return a!=null&&(u=qe(u,a)),u}}}};var C1={kernelName:lo,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s,dimRoundingMode:i}=t,a=n??[1,1];P(Ko(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[u,l]=e;return P(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),P(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),P(Er(o,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${a}'.`),i!=null&&P(ct(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`),{x:()=>$b(u.shape,r,l,o,s,a,i),filter:()=>Bb(u,r,l.shape,o,s,a,i)}}};var v1={kernelName:Fu,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,s={x:n,filter:o,dy:r},i={x:n,filter:o,dy:r};return{x:()=>D.runKernel(lf,s,t),filter:()=>D.runKernel(pf,i,t)}}};var w1={kernelName:co,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e,n={dy:r,y:t};return{x:()=>D.runKernel(ic,n)}}};var S1={kernelName:Di,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=R(cr(Je(Xe(t))),2/Math.sqrt(Math.PI));return{x:()=>R(r,n)}}};var _1={kernelName:mo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,t)}}};var A1={kernelName:ps,inputsToSave:["input"],gradFunc:(r,e)=>{let[t]=e;return{input:()=>L(r,t.shape)}}};var N1={kernelName:Js,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,cr(t))}}};var D1={kernelName:fo,gradFunc:r=>({x:()=>De(r)})};var P1={kernelName:ho,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ue(t.shape,n.shape);return{a:()=>{let a=ce(r,J(n,"float32")),u=wt(t.shape,o);return u.length>0?L(he(a,u),t.shape):a},b:()=>{let a=R(r,J(t,"float32")),u=wt(n.shape,o);u.length>0&&(a=L(he(a,u),n.shape));let l=Xe(n);return Je(ce(a,J(l,"float32")))}}}};var F1={kernelName:go,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,e,t)=>{let{varianceEpsilon:n}=t,[o,s,i,a]=e,u=a??me(1),l=wt(s.shape,o.shape),p=[];if(s.rank===1){for(let k=0;k<o.shape.length-1;++k)p.push(o.shape[k]);p.push(1)}let c=pe(o,s),m=R(r,u),f=Of(X(i,me(n))),d=R(R(R(f,f),f),me(-.5));return{x:()=>s.rank===1?L(R(R(r,Vr(L(f,[1,1,1,s.shape[0]]),p)),u),o.shape):L(R(R(r,f),u),o.shape),mean:()=>{let k=R(R(f,me(-1)),m);return s.rank===1&&(k=he(k,l)),L(k,s.shape)},variance:()=>{let k=R(R(d,c),m);return s.rank===1&&(k=he(k,l)),L(k,s.shape)},scale:()=>{let k=R(c,f),C=R(r,k);return s.rank===1&&(C=he(C,l)),L(C,s.shape)},offset:()=>{let k=r;return s.rank===1&&(k=he(k,l)),L(k,s.shape)}}}};var M1={kernelName:cs,inputsToSave:["x","indices"],gradFunc:(r,e,t)=>{let[n,o]=e,{axis:s}=t,i=br(s,n.shape)[0];return{x:()=>{let u=n.shape,l=o.size,p=u.slice(0,i),c=p.length,m=u.slice(s,u.length).slice(1),f=m.length,d=E1(0,c),h=E1(c+1,c+1+f),g=R1([p,[l],m]),x=L(r,g),y=L(o,[l]),T=R1([[c],d,h]),k=qe(x,T),C=gC(k,y,n.shape[i]),N=Ff(T);return C=qe(C,N),C},indices:()=>o}}};function E1(r,e){let t=[];for(let n=r;n<e;++n)t.push(n);return t}function R1(r){let e=[];for(let t=0;t<r.length;++t)for(let n=0;n<r[t].length;++n)e.push(r[t][n]);return e}var L1={kernelName:bo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>De(t),b:()=>De(n)}}};var B1={kernelName:Wn,gradFunc:r=>({x:()=>J(r,"float32")})};var $1={kernelName:Pi,gradFunc:r=>({x:()=>De(r)})};var O1={kernelName:Fi,gradFunc:r=>({x:()=>De(r)})};var z1={kernelName:Mi,gradFunc:r=>({x:()=>De(r)})};var G1={kernelName:na,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{alpha:o}=t,s=rr(n,0);return{x:()=>Ot(s,r,R(r,o))}}};var W1={kernelName:Ei,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>ce(r,X(t,1))}}};var U1={kernelName:yo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>ce(r,J(t,"float32"))}}};var K1={kernelName:nD,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t;return{logits:()=>{let s=!0,i=cr(n);return pe(r,R(he(r,o,s),i))}}}};function l7(r,e,t,n=5,o=1,s=1,i=.5){let a={x:r,y:e,dy:t},u={depthRadius:n,bias:o,alpha:s,beta:i};return D.runKernel(cc,a,u)}var V1=_({localResponseNormalizationBackprop_:l7});var j1={kernelName:Ru,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{depthRadius:s,bias:i,alpha:a,beta:u}=t;return{x:()=>V1(n,o,r,s,i,a,u)}}};function Hb(r,e,t,n){return e.rank<t.rank&&(e=L(e,Ps(e.shape,n))),r.rank<t.rank&&(r=L(r,Ps(r.shape,n))),{x:()=>R(r,J(Kr(t,e),r.dtype))}}var vC={kernelName:xo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{reductionIndices:o}=n,s=e[0],i=e[1],a=br(o,s.shape),u=Hb(r,i,s,a);return{x:()=>u.x()}}};var H1={kernelName:To,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>R(r,J(Vo(t,n),"float32")),b:()=>R(r,J(Df(t,n),"float32"))}}};function p7(r,e,t,n,o,s,i){let a=v(r,"dy","maxPool3dGrad"),u=v(e,"input","maxPool3dGrad"),l=v(t,"output","maxPool3dGrad"),p=a,c=u,m=l,f=!1;u.rank===4&&(f=!0,p=L(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),c=L(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),m=L(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),P(p.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),P(c.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),P(m.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${m.rank}.`),i!=null&&P(ct(s),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);let d={dy:p,input:c,output:m},h={filterSize:n,strides:o,pad:s,dimRoundingMode:i},g=D.runKernel(fc,d,h);return f?L(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var q1=_({maxPool3dGrad_:p7});var X1={kernelName:Lu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=t;return{x:()=>q1(r,n,o,s,i,a,u)}}};function c7(r,e,t,n,o,s,i){let a=v(r,"dy","maxPoolGrad"),u=v(e,"input","maxPoolGrad"),l=v(t,"output","maxPoolGrad");P(u.rank===a.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${a.rank})`),P(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),P(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),i!=null&&P(ct(s),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);let p={dy:a,input:u,output:l},c={filterSize:n,strides:o,pad:s,dimRoundingMode:i};return D.runKernel(mc,p,c)}var Y1=_({maxPoolGrad_:c7});var Q1={kernelName:ko,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:i,pad:a}=t;return{x:()=>Y1(r,n,o,s,i,a)}}};var Z1={kernelName:Io,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t,s=br(o,n.shape),a=qI(n.shape,s)[1],u=pt(a);return{x:()=>{let p=n.shape.slice();s.forEach(f=>{p[f]=1});let c=L(r,p);return ce(R(c,mr(n.shape,"float32")),u)}}}};var J1={kernelName:Co,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{axis:o}=n,[s,i]=e,a=br(o,s.shape),u=Hb(r,i,s,a);return{x:()=>u.x()}}};var eP={kernelName:vo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>R(r,J(jo(t,n),"float32")),b:()=>R(r,J(rr(t,n),"float32"))}}};var tP={kernelName:wo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(i=>i[0]);return{x:()=>We(r,s,n.shape)}}};var rP={kernelName:Li,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ue(t.shape,n.shape);return{a:()=>{let a=wt(t.shape,o);return a.length>0?L(he(r,a),t.shape):r},b:()=>{let a=R(r,Je(tu(ce(t,n)))),u=wt(n.shape,o);return u.length>0?L(he(a,u),n.shape):a}}}};var nP={kernelName:So,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ue(t.shape,n.shape);return{a:()=>{let a=R(r,J(n,"float32")),u=wt(t.shape,o);return u.length>0?L(he(a,u),t.shape):a},b:()=>{let a=R(r,J(t,"float32")),u=wt(n.shape,o);return u.length>0?L(he(a,u),n.shape):a}}}};var oP={kernelName:ms,gradFunc:r=>({x:()=>Je(r)})};var sP={kernelName:pa,inputsToSave:["indices"],gradFunc:(r,e)=>{let t=e[0];return{indices:()=>Tt(t.shape,"float32")}}};var aP={kernelName:fs,gradFunc:r=>({x:()=>De(r)})};var iP={kernelName:ds,saveAllInputs:!0,gradFunc:(r,e,t)=>{let{axis:n}=t;return Br(r,n).map(s=>()=>s)}};var wC={kernelName:_o,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(i=>i[0]);return{x:()=>We(r,s,n.shape)}}};var uP={kernelName:Ao,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,e)=>{let[t,n,o]=e,s=t,i=n,a=Ue(s.shape,i.shape);return{a:()=>{let p=J(i,"float32"),c=R(r,R(p,An(s,pe(p,me(1))))),m=wt(s.shape,a);return m.length>0&&(c=he(c,m)),L(c,s.shape)},b:()=>{let p=rr(s,0),c=Ot(p,Lr(s),De(s)),m=R(r,R(o,c)),f=wt(i.shape,a);return f.length>0&&(m=he(m,f)),L(m,i.shape)}}}};var lP={kernelName:No,inputsToSave:["x","alpha"],gradFunc:(r,e)=>{let[t,n]=e,o=rr(t,0);return{x:()=>Ot(o,r,R(r,n)),alpha:()=>{let s=Ot(o,De(r),R(r,t)),i=wt(n.shape,r.shape);return i.length>0&&(s=he(s,i)),L(s,n.shape)}}}};var pP={kernelName:po,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ue(t.shape,n.shape);return{a:()=>{let a=ce(r,J(n,"float32")),u=wt(t.shape,o);return u.length>0?L(he(a,u),t.shape):a},b:()=>{let a=R(r,J(t,"float32")),u=wt(n.shape,o);u.length>0&&(a=L(he(a,u),n.shape));let l=Xe(n);return Je(ce(a,J(l,"float32")))}}}};var cP={kernelName:$i,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>ce(r,Je(Xe(t)))}}};var mP={kernelName:Fo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=R(jo(t,6),ou(t));return{x:()=>R(r,J(n,"float32"))}}};var fP={kernelName:Do,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,J(ou(t),"float32"))}}};var dP={kernelName:hs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>L(r,t.shape)}}};var hP={kernelName:Po,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>D.runKernel(bc,o,t)}}};var gP={kernelName:Ha,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>D.runKernel(gc,o,t)}}};var bP={kernelName:ma,gradFunc:(r,e,t)=>{let{dims:n}=t,o=br(n,r.shape);return{x:()=>yr(r,o)}}};var yP={kernelName:fa,gradFunc:r=>({x:()=>De(r)})};var xP={kernelName:Mo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Je(ce(r,R(An(t,1.5),2)))}}};var TP={kernelName:gs,inputsToSave:["condition"],gradFunc:(r,e)=>{let[t]=e;return{condition:()=>J(De(t),"float32"),t:()=>R(r,J(t,r.dtype)),e:()=>R(r,J(zl(t),r.dtype))}}};var kP={kernelName:Oi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=rr(t,me(0)),o=me(TC),s=me(kC),i=R(r,s),a=R(R(r,o),cr(J(t,"float32")));return Ot(n,i,a)}}}};var IP={kernelName:Ro,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,R(t,pe(me(1),t)))}}};var CP={kernelName:zi,gradFunc:r=>({x:()=>De(r)})};var vP={kernelName:Eo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(Ll(J(t,"float32")),r)}}};var wP={kernelName:ha,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(Af(J(t,"float32")),r)}}};var SP={kernelName:bs,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{begin:o,size:s}=t,i=n.shape,[a,u]=cI(n,o,s),l=[];for(let p=0;p<r.rank;p++)l.push([a[p],i[p]-a[p]-u[p]]);return{x:()=>_n(r,l)}}};var _P={kernelName:$o,outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{dim:o}=t,s=!0,i=R(r,n);return{logits:()=>pe(i,R(he(i,[o],s),n))}}};var AP={kernelName:Gi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,un(t))}}};var SC={kernelName:ys,gradFunc:(r,e,t)=>{let{blockShape:n,paddings:o}=t;return{x:()=>El(r,n,o)}}};var _C={kernelName:xs,gradFunc:(r,e,t)=>{let{axis:n}=t;return{x:()=>ut(r,n)}}};var NP={kernelName:Lo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>ce(r,R(Lt(J(t,"float32")),2))}}};var DP={kernelName:qa,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,R(J(t,"float32"),2))}}};var PP={kernelName:Oo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=me(2);return{a:()=>R(r,R(o,pe(t,n))),b:()=>R(r,R(o,pe(n,t)))}}};var FP={kernelName:Is,gradFunc:r=>({x:()=>De(r)})};var MP={kernelName:zo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Ue(t.shape,n.shape);return{a:()=>{let a=r,u=wt(t.shape,o);return u.length>0&&(a=he(a,u)),L(a,t.shape)},b:()=>{let a=r,u=wt(n.shape,o);return u.length>0&&(a=he(a,u)),L(Je(a),n.shape)}}}};var EP={kernelName:Bo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,o=n.shape.slice(),{axis:s}=t;br(s,n.shape).forEach(l=>{o[l]=1});let a=L(r,o),u=R(a,mr(n.shape,"float32"));return{x:()=>u}}};var RP={kernelName:ba,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>ce(r,Xe(Ll(t)))}}};var LP={kernelName:Go,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(pe(me(1),Xe(t)),r)}}};var BP={kernelName:vn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{reps:o}=t;return{x:()=>{let i=De(n);if(n.rank===1)for(let a=0;a<o[0];++a)i=X(i,We(r,[a*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let a=0;a<o[0];++a)for(let u=0;u<o[1];++u)i=X(i,We(r,[a*n.shape[0],u*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let a=0;a<o[0];++a)for(let u=0;u<o[1];++u)for(let l=0;l<o[2];++l)i=X(i,We(r,[a*n.shape[0],u*n.shape[1],l*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let a=0;a<o[0];++a)for(let u=0;u<o[1];++u)for(let l=0;l<o[2];++l)for(let p=0;p<o[3];++p)i=X(i,We(r,[a*n.shape[0],u*n.shape[1],l*n.shape[2],p*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return i}}}};var $P={kernelName:Wo,gradFunc:(r,e,t)=>{let n=t,{perm:o}=n,s=Ff(o);return{x:()=>qe(r,s)}}};var OP={kernelName:Ts,gradFunc:(r,e,t)=>{let n=t,{axis:o}=n;return{value:()=>fr(r,o)}}};var zP={kernelName:zu,inputsToSave:["segmentIds"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>m7(r,t)}}};function m7(r,e){let t=Hn(e,De(e)),n=Ja(r,t),o=Vo(e,me(0,"int32")),s=n.rank-o.rank;for(let a=0;a<s;++a)o=_r(o,a+1);o=jr(o,mr(n.shape,"bool"));let i=De(n);return Ot(o,n,i)}var GP={kernelName:ks,gradFunc:r=>({x:()=>De(r)})};var f7=[jb,H2,q2,X2,Y2,Q2,Z2,J2,e1,t1,r1,n1,s1,i1,u1,l1,p1,c1,m1,f1,d1,h1,b1,g1,x1,T1,k1,I1,C1,v1,pP,w1,S1,_1,A1,N1,P1,D1,F1,M1,L1,B1,$1,O1,z1,G1,W1,U1,K1,j1,vC,vC,H1,X1,Q1,Z1,J1,eP,tP,rP,nP,oP,sP,aP,iP,wC,wC,uP,lP,cP,mP,fP,dP,hP,gP,bP,yP,xP,TP,kP,IP,CP,vP,wP,SP,_P,AP,SC,SC,_C,_C,NP,PP,DP,FP,MP,EP,RP,LP,BP,$P,OP,zP,GP];for(let r of f7)oD(r);var HP={};Ye(HP,{maxNorm:()=>h7,minMaxNorm:()=>y7,nonNeg:()=>b7,unitNorm:()=>g7});var AC;function dr(){return AC==null&&(AC=D0().epsilon()),AC}function cn(){return"channelsLast"}var qn=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,qn.prototype)}},en=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,en.prototype)}},O=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,O.prototype)}},Pe=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Pe.prototype)}},Xf=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Xf.prototype)}};function Es(r,e){if(Array.isArray(r)){let t=[];for(let n=0;n<e;n++)t=t.concat(r);return t}else{let t=new Array(e);return t.fill(r),t}}function Ho(r,e){if(!r)throw new Xf(e)}function NC(r,e){let t=0;for(let n of r)n===e&&t++;return t}function Nr(r){return r.length===1?r[0]:r}function St(r){return Array.isArray(r)?r:[r]}function Rs(r){let t=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function au(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}var Ls={};function Kc(r){if(r==null)return null;let e={};return e.className=r.getClassName(),e.config=r.getConfig(),e}function DC(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(e=>DC(e));else{let e=Object.keys(r);for(let t of e){let n=r[t];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?r[t]=n.value:DC(n))}}}function oi(r,e={},t={},n="object",o=!1){if(typeof r=="string"){let s=r,i;if(s in t)i=t[s];else if(s in Ls)i=Ls[s];else if(i=e[s],i==null)throw new O(`Unknown ${n}: ${r}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=r;if(s.className==null||s.config==null)throw new O(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,a,u;if(i in t?[a,u]=t[i]:i in Ls?[a,u]=Ls.className:i in e&&([a,u]=e[i]),a==null)throw new O(`Unknown ${n}: ${i}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){let l={};for(let f of Object.keys(Ls))l[f]=Ls[f];for(let f of Object.keys(t))l[f]=t[f];let p=s.config;p.customObjects=l;let c={...Ls};for(let f of Object.keys(t))Ls[f]=t[f];DC(s.config);let m=u(a,s.config,t,o);return Ls={...c},m}else{let l={...Ls};for(let c of Object.keys(t))Ls[c]=t[c];let p=new a(s.config);return Ls={...l},p}}}function d7(r,e){return r<e?-1:r>e?1:0}function Yf(r,e){return-1*d7(r,e)}function Bs(r){if(r==null)return r;let e=[];for(let t of r)e.indexOf(t)===-1&&e.push(t);return e}function WP(r){if(r==null)throw new O(`Invalid value in obj: ${JSON.stringify(r)}`);for(let e in r)if(r.hasOwnProperty(e))return!1;return!0}function si(r,e,t){if(t!=null&&r.indexOf(t)<0)throw new O(`${t} is not a valid ${e}.  Valid values are ${r} or null/undefined.`)}function qb(r,e,t=0,n=1/0){return Ho(t>=0),Ho(n>=t),Array.isArray(r)&&r.length>=t&&r.length<=n&&r.every(o=>typeof o===e)}function or(r,e){Array.isArray(r)?(b.assert(r.length>0,()=>`${e} is unexpectedly an empty array.`),r.forEach((t,n)=>or(t,`element ${n+1} of ${e}`))):b.assert(Number.isInteger(r)&&r>0,()=>`Expected ${e} to be a positive integer, but got ${UP(r)}.`)}function UP(r){return r===null?"null":Array.isArray(r)?"["+r.map(e=>UP(e)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function KP(r,e,t){let n=t!=null?t():b.now(),o;return(...i)=>{let a=t!=null?t():b.now();return a-n<e||(n=a,o=r(...i)),o}}function Xb(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}function PC(r,e){return G(()=>Lt(he(R(r,r),e,!0)))}var Vc=class extends re.Serializable{getConfig(){return{}}},Qf=class extends Vc{constructor(e){super();this.defaultMaxValue=2;this.defaultAxis=0;this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return G(()=>{let t=PC(e,this.axis),n=Rr(t,0,this.maxValue);return R(e,ce(n,X(dr(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Qf.className="MaxNorm";re.registerClass(Qf);var Zf=class extends Vc{constructor(e){super();this.defaultAxis=0;this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return G(()=>ce(e,X(dr(),PC(e,this.axis))))}getConfig(){return{axis:this.axis}}};Zf.className="UnitNorm";re.registerClass(Zf);var Jf=class extends Vc{apply(e){return Hr(e)}};Jf.className="NonNeg";re.registerClass(Jf);var ed=class extends Vc{constructor(e){super();this.defaultMinValue=0;this.defaultMaxValue=1;this.defaultRate=1;this.defaultAxis=0;this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return G(()=>{let t=PC(e,this.axis),n=X(R(this.rate,Rr(t,this.minValue,this.maxValue)),R(1-this.rate,t));return R(e,ce(n,X(dr(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};ed.className="MinMaxNorm";re.registerClass(ed);var VP={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Xt(r){return Kc(r)}function jP(r,e={}){return oi(r,re.SerializationMap.getMap().classNameMap,e,"constraint")}function Yt(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in VP?VP[r]:r,config:{}};return jP(t)}else return r instanceof Vc?r:jP(r)}function h7(r){return new Qf(r)}function g7(r){return new Zf(r)}function b7(){return new Jf}function y7(r){return new ed(r)}var fF={};Ye(fF,{constant:()=>S7,glorotNormal:()=>M7,glorotUniform:()=>F7,heNormal:()=>E7,heUniform:()=>R7,identity:()=>D7,leCunNormal:()=>L7,leCunUniform:()=>B7,ones:()=>w7,orthogonal:()=>$7,randomNormal:()=>A7,randomUniform:()=>_7,truncatedNormal:()=>N7,varianceScaling:()=>P7,zeros:()=>v7});var qP=["channelsFirst","channelsLast"],XP=["nearest","bilinear"],YP=["valid","same","causal"],QP=["max","avg"],ZP=["sum","mul","concat","ave"];var jc=new Map;function jt(r){si(qP,"DataFormat",r)}function JP(r){si(XP,"InterpolationFormat",r)}function mn(r){si(YP,"PaddingMode",r)}function FC(r){si(QP,"PoolMode",r)}var td=[],eF="/";function wa(r,e){td.push(r);try{let t=e();return td.pop(),t}catch(t){throw td.pop(),t}}function x7(){return td.length===0?"":td.join(eF)+eF}function Yb(r){if(!tF(r))throw new Error("Not a valid tensor name: '"+r+"'");return x7()+r}function Qb(r){if(!tF(r))throw new Error("Not a valid tensor name: '"+r+"'");jc.has(r)||jc.set(r,0);let e=jc.get(r);if(jc.set(r,jc.get(r)+1),e>0){let t=`${r}_${e}`;return jc.set(t,1),t}else return r}var T7=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function tF(r){return!!r.match(T7)}function rF(r){return r===parseInt(r.toString(),10)}function $s(r,e,t){e==null&&(e=0),t==null&&(t=r.length);let n=1;for(let o=e;o<t;++o)n*=r[o];return n}function ap(r){if(r.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n<e&&(e=n)}return e}function Sa(r){if(r.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n>e&&(e=n)}return e}function tn(r,e){if(e<r)throw new O(`end (${e}) < begin (${r}) is forbidden.`);let t=[];for(let n=r;n<e;++n)t.push(n);return t}function ip(r,e){return J(r,e)}function iu(r,e=-1){let t=r.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),L(r,t)}function nF(r,e){return G(()=>{if(r.shape.length!==2)throw new O(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let t=iu(r,1);return Zb(t,[1,e,1])})}function oF(r){let e=[$s(r.shape)];return L(r,e)}function sF(r){if(r.rank<=1)throw new O(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let e=[r.shape[0],$s(r.shape,1)];return L(r,e)}function uu(r,e,t){return G(()=>{switch(r.rank){case 1:return Uf(r,e,t);case 2:return Pb(r,[e,0],[t,r.shape[1]]);case 3:return Kf(r,[e,0,0],[t,r.shape[1],r.shape[2]]);case 4:return Wc(r,[e,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3]]);case 5:return We(r,[e,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return We(r,[e,0,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new O(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function MC(r,e,t){return G(()=>{switch(r.rank){case 1:return Uf(r,e,t);case 2:return Pb(r,[0,e],[r.shape[0],t]);case 3:return Kf(r,[0,0,e],[r.shape[0],r.shape[1],t]);case 4:return Wc(r,[0,0,0,e],[r.shape[0],r.shape[1],r.shape[2],t]);default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function rd(r,e,t,n){return G(()=>{switch(r.rank){case 1:return Uf(r,e,t);case 2:switch(n){case 1:return uu(r,e,t);case 2:return MC(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return uu(r,e,t);case 2:return Kf(r,[0,e,0],[r.shape[0],t,r.shape[2]]);case 3:return MC(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return uu(r,e,t);case 2:return Wc(r,[0,e,0,0],[r.shape[0],t,r.shape[2],r.shape[3]]);case 3:return Wc(r,[0,0,e,0],[r.shape[0],r.shape[1],t,r.shape[3]]);case 4:return MC(r,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Hc(r,e=-1){let t;return e<0&&(t=r[0].rank,t!==0?e=t:e=0),e===r[0].rank&&(e=-1),ut(r,e)}function EC(r,e){switch(r.rank){case 1:return FI([r,e]);case 2:return MI([r,e],0);case 3:return EI([r,e],0);case 4:return RI([r,e],0);default:throw new O(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function Zb(r,e){if(Array.isArray(e)||(e=[e]),r.rank!==e.length)throw new O(`The length of input n (${e.length}) does not match the number of dimensions in input x (${r.rank})`);return Vr(r,e)}function qc(r,e=0,t=1,n,o){return Db(r,e,t,n,o)}function Os(r,e,t,n){if(r.rank<2||e.rank<2)throw new Pe(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${e.shape}`);if(e.rank>=3){let o=r.shape.slice(-1)[0],s=e.shape.slice(-2)[0];if(o!==s)throw new Pe(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${e.shape}`)}if(r.rank===2&&e.rank===2){let o=!1,s=!1;return Fs.matMul({a:r,b:e,transposeA:o,transposeB:s,bias:n?RC(r.rank,n,cn()):null,activation:t})}else{let o=r.shape.slice(),s=o.pop();r=L(r,[-1,s]);let i=e.shape.slice(),a=i.pop(),u=i.pop(),l=[...i,a],p=Array.from({length:e.rank},(d,h)=>h===0?e.rank-2:h<=e.rank-2?h-1:h);e=L(qe(e,p),[u,-1]);let c=[...o,...l],m=!1,f=!1;return L(Fs.matMul({a:r,b:e,transposeA:m,transposeB:f,bias:n?RC(r.rank,n,cn()):null,activation:t}),c)}}function Jb(r,e,t){return G(()=>(Array.isArray(e)?e=zt(e,"int32"):e=J(e,"int32"),Ja(r,e,t)))}function up(r){return R(r,r)}function RC(r,e,t){let n=e.shape;if(e.rank!==1&&e.rank!==r)throw new O(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${r}`);if(r===5){if(t==="channelsFirst")return n.length===1?L(e,[1,n[0],1,1,1]):L(e,[1,n[3],n[0],n[1],n[2]]);if(t==="channelsLast")return n.length===1?L(e,[1,1,1,1,n[0]]):L(e,[1].concat(n))}else if(r===4){if(t==="channelsFirst")return n.length===1?L(e,[1,n[0],1,1]):L(e,[1,n[2],n[0],n[1]]);if(t==="channelsLast")return n.length===1?L(e,[1,1,1,n[0]]):L(e,[1].concat(n))}else if(r===3){if(t==="channelsFirst")return n.length===1?L(e,[1,n[0],1]):L(e,[1,n[1],n[0]]);if(t==="channelsLast")return n.length===1?L(e,[1,1,n[0]]):L(e,[1].concat(n))}else if(r<3)return e;throw new O(`Unsupported input rank by biasAdd: ${e.rank}`)}function fn(r,e,t){return G(()=>(t==null&&(t=cn()),jt(t),X(r,RC(r.rank,e,t))))}function aF(r,e=1){if(e!==1)throw new Pe(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return eu(r)}function iF(r){return G(()=>ce(r,X($t(r),1)))}function ey(r,e,t,n){return G(()=>r2(r,e,t,n))}function uF(r){return G(()=>{let e=X(.5,R(.2,r));return Rr(e,0,1)})}function qu(r,e,t=!1){return t?r():e()}var lF=["fanIn","fanOut","fanAvg"],pF=["normal","uniform","truncatedNormal"];function k7(r){si(lF,"FanMode",r)}function I7(r){si(pF,"Distribution",r)}var Dn=class extends re.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},nd=class extends Dn{apply(e,t){return Tt(e,t)}};nd.className="Zeros";re.registerClass(nd);var lp=class extends Dn{apply(e,t){return mr(e,t)}};lp.className="Ones";re.registerClass(lp);var od=class extends Dn{constructor(e){super();if(typeof e!="object")throw new O(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new O(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return G(()=>R(me(this.value),mr(e,t)))}getConfig(){return{value:this.value}}};od.className="Constant";re.registerClass(od);var sd=class extends Dn{constructor(e){super();this.DEFAULT_MINVAL=-.05;this.DEFAULT_MAXVAL=.05;this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return va(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};sd.className="RandomUniform";re.registerClass(sd);var ad=class extends Dn{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Pe(`randomNormal does not support dType ${t}.`);return qc(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};ad.className="RandomNormal";re.registerClass(ad);var id=class extends Dn{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Pe(`truncatedNormal does not support dType ${t}.`);return ql(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};id.className="TruncatedNormal";re.registerClass(id);var ud=class extends Dn{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return G(()=>{if(e.length!==2||e[0]!==e[1])throw new O("Identity matrix initializer can only be used for 2D square matrices.");return R(this.gain,$c(e[0]))})}getConfig(){return{gain:this.gain}}};ud.className="Identity";re.registerClass(ud);function C7(r,e="channelsLast"){let t,n;if(jt(e),r.length===2)t=r[0],n=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(e==="channelsFirst"){let o=$s(r,2);t=r[1]*o,n=r[0]*o}else if(e==="channelsLast"){let o=$s(r,0,r.length-2);t=r[r.length-2]*o,n=r[r.length-1]*o}}else{let o=$s(r);t=Math.sqrt(o),n=Math.sqrt(o)}return[t,n]}var rn=class extends Dn{constructor(e){super();if(e.scale<0)throw new O(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,k7(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,I7(this.distribution),this.seed=e.seed}apply(e,t){let n=C7(e),o=n[0],s=n[1],i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,o):this.mode==="fanOut"?i/=Math.max(1,s):i/=Math.max(1,(o+s)/2),this.distribution==="normal"){let a=Math.sqrt(i);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Pe(`${this.getClassName()} does not support dType ${t}.`);return ql(e,0,a,t,this.seed)}else{let a=Math.sqrt(3*i);return va(e,-a,a,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};rn.className="VarianceScaling";re.registerClass(rn);var Xc=class extends rn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return rn.className}};Xc.className="GlorotUniform";re.registerClass(Xc);var Yc=class extends rn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return rn.className}};Yc.className="GlorotNormal";re.registerClass(Yc);var Qc=class extends rn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return rn.className}};Qc.className="HeNormal";re.registerClass(Qc);var Zc=class extends rn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return rn.className}};Zc.className="HeUniform";re.registerClass(Zc);var Jc=class extends rn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return rn.className}};Jc.className="LeCunNormal";re.registerClass(Jc);var em=class extends rn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return rn.className}};em.className="LeCunNormal";re.registerClass(em);var ld=class extends Dn{constructor(e){super();this.DEFAULT_GAIN=1;if(this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Pe("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return G(()=>{if(e.length<2)throw new Pe("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,o=qc(n,0,1,"float32"),s=K2.gramSchmidt(o);return e[0]>e[1]&&(s=qe(s)),R(this.gain,s)})}getConfig(){return{gain:this.gain,seed:this.seed}}};ld.className="Orthogonal";re.registerClass(ld);var cF={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function mF(r,e={}){return oi(r,re.SerializationMap.getMap().classNameMap,e,"initializer")}function Ft(r){return Kc(r)}function It(r){if(typeof r=="string"){let e=r in cF?cF[r]:r;if(e==="GlorotNormal")return new Yc;if(e==="GlorotUniform")return new Xc;if(e==="HeNormal")return new Qc;if(e==="HeUniform")return new Zc;if(e==="LeCunNormal")return new Jc;if(e==="LeCunUniform")return new em;{let t={};return t.className=e,t.config={},mF(t)}}else return r instanceof Dn?r:mF(r)}function v7(){return new nd}function w7(){return new lp}function S7(r){return new od(r)}function _7(r){return new sd(r)}function A7(r){return new ad(r)}function N7(r){return new id(r)}function D7(r){return new ud(r)}function P7(r){return new rn(r)}function F7(r){return new Xc(r)}function M7(r){return new Yc(r)}function E7(r){return new Qc(r)}function R7(r){return new Zc(r)}function L7(r){return new Jc(r)}function B7(r){return new em(r)}function $7(r){return new ld(r)}var qF={};Ye(qF,{Layer:()=>Ve,RNN:()=>zs,RNNCell:()=>tl,activation:()=>aZ,add:()=>hZ,alphaDropout:()=>ZZ,average:()=>gZ,averagePooling1d:()=>Sv,averagePooling2d:()=>_v,averagePooling3d:()=>Av,avgPool1d:()=>wZ,avgPool2d:()=>_Z,avgPool3d:()=>NZ,avgPooling1d:()=>SZ,avgPooling2d:()=>AZ,avgPooling3d:()=>DZ,batchNormalization:()=>IZ,bidirectional:()=>KZ,concatenate:()=>bZ,conv1d:()=>QQ,conv2d:()=>ZQ,conv2dTranspose:()=>JQ,conv3d:()=>eZ,conv3dTranspose:()=>tZ,convLstm2d:()=>zZ,convLstm2dCell:()=>GZ,cropping2D:()=>nZ,dense:()=>iZ,depthwiseConv2d:()=>sZ,dot:()=>kZ,dropout:()=>uZ,elu:()=>VQ,embedding:()=>dZ,flatten:()=>pZ,gaussianDropout:()=>QZ,gaussianNoise:()=>YZ,globalAveragePooling1d:()=>PZ,globalAveragePooling2d:()=>FZ,globalMaxPool1d:()=>jZ,globalMaxPool2d:()=>HZ,globalMaxPooling1d:()=>KF,globalMaxPooling2d:()=>VF,gru:()=>EZ,gruCell:()=>RZ,input:()=>qC,inputLayer:()=>KQ,layerNormalization:()=>CZ,leakyReLU:()=>HQ,lstm:()=>LZ,lstmCell:()=>BZ,masking:()=>JZ,maxPool1d:()=>qZ,maxPool2d:()=>XZ,maxPooling1d:()=>jF,maxPooling2d:()=>HF,maxPooling3d:()=>MZ,maximum:()=>yZ,minimum:()=>xZ,multiply:()=>TZ,permute:()=>fZ,prelu:()=>qQ,reLU:()=>jQ,repeatVector:()=>cZ,reshape:()=>mZ,rnn:()=>WZ,separableConv2d:()=>rZ,simpleRNN:()=>$Z,simpleRNNCell:()=>OZ,softmax:()=>XQ,spatialDropout1d:()=>lZ,stackedRNNCells:()=>UZ,thresholdedReLU:()=>YQ,timeDistributed:()=>VZ,upSampling2d:()=>oZ,zeroPadding2d:()=>vZ});var O7=0;function ty(){return O7++}var ry={};function Xu(r=""){return r in ry||(ry[r]=0),ry[r]+=1,r+ry[r].toString()}function ny(r){return Array.isArray(r)&&Array.isArray(r[0])}function tm(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function Ge(r){let e;if(Array.isArray(r)){if(r.length!==1)throw new O(`Expected Tensor length to be 1; got ${r.length}`);e=r[0]}else e=r;return e}function et(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new O(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function rm(r){let e=0;for(let t of r)t.shape.length===0?e+=1:e+=t.shape.reduce((n,o)=>n*o);return e}var dF="Variable",oy=class{constructor(e,t="float32",n=dF,o=!0,s=null){this.dtype=t??"float32",this.shape=e.shape,this.id=ty(),n=n??dF,this.originalName=Yb(n),this.name=Qb(this.originalName),this.trainable_=o,this.constraint=s,this.val=bC(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),z7(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function z7(r,e){if(r.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(e.shape))}function pd(r){return r.map(e=>e.read())}function nm(r){r.forEach(e=>{e[0].write(e[1])})}var Mt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},dn=class{constructor(e,t,n,o,s,i,a){this.dtype=e;this.shape=t;this.sourceLayer=n;this.inputs=o;this.callArgs=s;this.outputTensorIndex=a;this.id=ty(),i!=null&&(this.originalName=Yb(i),this.name=Qb(this.originalName)),this.rank=t.length}},G7=0,Yu=class{constructor(e,t){this.callArgs=t;this.id=G7++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},W7=0,Ve=class extends re.Serializable{constructor(e={}){super();this._callHook=null;this._addedWeightNames=[];this._stateful=!1;this.id=W7++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=Rs(n)+"_"+Xu(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let s=null;e.batchSize!=null&&(s=e.batchSize),n=[s].concat(e.inputShape)}this.batchInputShape=n;let o=e.dtype;o==null&&(o=e.inputDType),o==null&&(o="float32"),this.dtype=o}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new en(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new O(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Nr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Nr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new qn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new qn(`Layer ${this.name} is not connected, no input to return.`);return Nr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new qn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new qn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Nr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=St(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=St(this.inputSpec);if(e.length!==t.length)throw new O(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let o=e[n],s=t[n];if(s==null)continue;let i=o.rank;if(s.ndim!=null&&i!==s.ndim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(s.maxNDim!=null&&i>s.maxNDim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(s.minNDim!=null&&i<s.minNDim)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(s.dtype!=null&&o.dtype!==s.dtype)throw new O(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${o.dtype}.`);if(s.axes){let a=o.shape;for(let u in s.axes){let l=Number(u),p=s.axes[u],c=l>=0?a[l]:a[a.length+l];if(p!=null&&[p,null].indexOf(c)===-1)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${p} but got shape ${a}.`)}}if(s.shape!=null)for(let a=0;a<s.shape.length;++a){let u=s.shape[a],l=o.shape[a];if(u!=null&&l!=null&&u!==l)throw new O(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=St(e),o=!0;for(let i of n)if(!(i instanceof dn)){o=!1;break}let s=!0;for(let i of n)if(i instanceof dn){s=!1;break}if(o===s)throw new O("Arguments to apply() must be all SymbolicTensors or all Tensors");return wa(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let i=[];for(let a of St(e))i.push(a.shape);this.build(Nr(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let i=this.call(e,t),a=St(i),u=[];for(let l of a)n.indexOf(l)!==-1&&(l=l.clone()),u.push(l);if(i=Nr(u),this.activityRegularizer!=null)throw new Pe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{let i=U7(e),a=this.computeOutputShape(i),u,l=K7(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),a!=null&&a.length>0&&Array.isArray(a[0])?u=a.map((p,c)=>new dn(l,p,this,St(e),t,this.name,c)):u=new dn(l,a,this,St(e),t,this.name),this.addInboundNode(e,u,null,null,i,a,t),this._refCount++,this.activityRegularizer!=null)throw new Pe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,o)=>{n!=null&&e[o]!=null&&e[o]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new qn(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new qn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new en(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return rm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return pd(e?this.trainableWeights:this.weights)}setWeights(e){G(()=>{let t=this.weights;if(t.length!==e.length)throw new O(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],o=pd(t);for(let s=0;s<o.length;++s){let i=o[s],a=t[s],u=e[s];if(!b.arraysEqual(i.shape,u.shape))throw new O(`Layer weight shape ${i.shape} not compatible with provided weight shape ${u.shape}`);n.push([a,u])}nm(n)})}addWeight(e,t,n,o,s,i,a,u){if(this._addedWeightNames.indexOf(e)!==-1)throw new O(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(o=u!=null?u():It("zeros"));let l=o.apply(t,n),p=new oy(l,n,e,i,a);return l.dispose(),s!=null&&this.addLoss(()=>s.apply(p.read())),i==null&&(i=!0),i?this._trainableWeights.push(p):this._nonTrainableWeights.push(p),p}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=St(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,o,s,i,a=null){let u=St(e);t=St(t),n=St(n),o=St(o),s=tm(s),i=tm(i);let l=[],p=[],c=[];for(let m of u)l.push(m.sourceLayer),p.push(m.nodeIndex),c.push(m.tensorIndex);new Yu({outboundLayer:this,inboundLayers:l,nodeIndices:p,tensorIndices:c,inputTensors:u,outputTensors:t,inputMasks:n,outputMasks:o,inputShapes:s,outputShapes:i},a);for(let m=0;m<t.length;m++)t[m].sourceLayer=this,t[m].nodeIndex=this.inboundNodes.length-1,t[m].tensorIndex=m}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount==0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function U7(r){r=St(r);let e=[];for(let t of r)e.push(t.shape);return Nr(e)}function K7(r){return"float32"}function LC(r,e,t){if((e==null||t!=null&&t>0)&&(e=r.sourceLayer,t=r.nodeIndex),e.inboundNodes.length===0)return[r];{let n=e.inboundNodes[t];if(n.inboundLayers.length===0)return n.inputTensors;{let o=[];for(let s=0;s<n.inboundLayers.length;s++){let i=n.inputTensors[s],a=n.inboundLayers[s],u=n.nodeIndices[s],l=LC(i,a,u);for(let p of l)o.indexOf(p)===-1&&o.push(p)}return o}}}var ai=class extends Ve{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:Xu("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new O("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new O("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new O("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let o=new dn(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new Yu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new O(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};ai.className="InputLayer";re.registerClass(ai);function sy(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new O("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=r.batchShape;r.shape!=null&&e==null&&(e=[null].concat(r.shape));let t=r.dtype;return t==null&&(t="float32"),new ai({batchInputShape:e,name:r.name,dtype:t,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}async function ii(r){if(r==null)return;let e=[],t=[],n=[];for(let o in r){let s=r[o];if(typeof s!="number"){let i=s;e.push(i.data()),t.push(o),n.push(i)}}if(e.length>0){let o=await Promise.all(e);for(let s=0;s<o.length;++s)r[t[s]]=o[s][0];Ee(n)}}function ay(r){if(r!=null)for(let e in r){let t=r[e];typeof t!="number"&&t.dispose()}}var hF;(function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"})(hF||(hF={}));var V7=125,Qu=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},BC=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},gF=class extends Qu{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let o in t){let s=t[o];if(typeof s=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+s*n;else{let i;o in this.totals?i=this.totals[o]:this.totals[o]=0;let a=G(()=>X(this.totals[o],R(s,n)));this.totals[o]=a,i!=null&&i.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:G(()=>{let o=R(ce(1,this.seen),this.totals[n]);t[n]=o,this.totals[n].dispose(),Vt(t[n])}))}},$C=class extends Qu{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let s in this.history){let i=this.history[s];for(let a=0;a<i.length;++a)if(typeof i[a]!="number"){let u=i[a];e.push(u.data()),t.push(s),n.push(a)}}let o=await Promise.all(e);for(let s=0;s<o.length;++s)this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=o[s][0]}},OC=class extends Qu{constructor(e,t){super();this.currentEpoch=0;if(this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||xC,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=V7),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");b.isNumber(this.yieldEvery)&&(this.maybeWait=KP(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let o=[];this.yield!=null&&(await ii(n),o.push(this.yield(e,t,n))),o.push(this.nextFrameFunc()),await Promise.all(o)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await ii(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await ii(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await ii(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await ii(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):b.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await ii(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await ii(e),await this.trainEnd(e))}};function iy(r,e){return r==null&&(r={}),r instanceof Qu?[r]:Array.isArray(r)&&r[0]instanceof Qu?r:St(r).map(n=>new OC(n,e))}var _a=class{constructor(){}static registerCallbackConstructor(e,t){b.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),_a.checkForDuplicate(t),_a.constructors[e]==null&&(_a.constructors[e]=[]),_a.constructors[e].push(t)}static checkForDuplicate(e){for(let t in _a.constructors)_a.constructors[+t].forEach(o=>{if(o===e)throw new O("Duplicate callback constructor.")})}static clear(){_a.constructors={}}static createCallbacks(e){let t=[];for(let n in _a.constructors){let o=+n;e>=o&&t.push(..._a.constructors[o])}return t.map(n=>new n)}},cd=_a;cd.constructors={};function uy(r,e,t,n,o,s,i,a,u){let l=new $C,p=[new gF,...cd.createCallbacks(e)];r!=null&&p.push(...r),p.push(l);let c=new BC(p);return c.setParams({epochs:t,initialEpoch:n,samples:o,steps:s,batchSize:i,verbose:e,doValidation:a,metrics:u}),{callbackList:c,history:l}}function hn(r,e={},t=!1){return oi(r,re.SerializationMap.getMap().classNameMap,e,"layer",t)}function md(r,e){return G(()=>{r.dtype!=="float32"&&(r=J(r,"float32"));let t=he(up(r),e,!0),n=Ca(t.shape,dr()),o=Lt(Hn(t,n));return ce(r,o)})}function ui(r,e){return G(()=>Rt(up(pe(e,r)),-1))}function om(r,e){return G(()=>Rt($t(pe(e,r)),-1))}function Zu(r,e){return G(()=>{let t=pe(r,e),n=Rr($t(r),dr(),Number.MAX_VALUE),o=$t(ce(t,n));return R(100,Rt(o,-1))})}function j7(r,e){return G(()=>{let t=Rr(e,dr(),Number.MAX_VALUE),n=Lr(X(1,t)),o=Rr(r,dr(),Number.MAX_VALUE),s=Lr(X(1,o));return Rt(up(pe(n,s)),-1)})}function H7(r,e){return G(()=>{let t=Hn(0,pe(1,R(r,e)));return Rt(up(t),-1)})}function q7(r,e){return G(()=>{let t=Hn(0,pe(1,R(r,e)));return Rt(t,-1)})}function X7(r,e){return G(()=>{let t=he(R(r,e),-1),n=Zr(R(pe(1,r),e),-1);return Hn(0,X(1,pe(n,t)))})}function Y7(r,e){return G(()=>{let t=Math.log(2),n=pe(e,r),o=pe(X(n,ei(R(-2,n))),t);return Rt(o,-1)})}function pp(r,e,t=!1){return G(()=>{if(t)e=Vl(e);else{let n=he(e,e.shape.length-1,!0);e=ce(e,n)}return e=Rr(e,dr(),1-dr()),Je(he(R(J(r,"float32"),Lr(e)),e.shape.length-1))})}function sm(r,e,t=!1){return G(()=>{let n=J(tu(oF(r)),"int32");e=Rr(e,dr(),1-dr());let o=e.shape,s=L(Xi(n,o[o.length-1]),o);return pp(s,e,t)})}function Q7(r,e){if(!b.arraysEqual(r.shape,e.shape))throw new O(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(e.shape)}`);return G(()=>{let t=Hr(e),n=Je($t(e));return X(pe(t,R(e,r)),Ol(cr(n)))})}function am(r,e){return G(()=>{let t;return t=Rr(e,dr(),1-dr()),t=Lr(ce(t,pe(1,t))),Rt(Q7(r,t),-1)})}function Z7(r,e){return G(()=>{let t=Rr(r,dr(),1),n=Rr(e,dr(),1);return he(R(r,Lr(ce(t,n))),-1)})}function J7(r,e){return G(()=>{let t=Lr(X(dr(),e));return Rt(pe(e,R(r,t)),-1)})}function fd(r,e){return G(()=>{let t=md(r,-1),n=md(e,-1),o=R(t,n);return Je(he(o,-1))})}var dd={meanSquaredError:ui,meanAbsoluteError:om,meanAbsolutePercentageError:Zu,meanSquaredLogarithmicError:j7,squaredHinge:H7,hinge:q7,categoricalHinge:X7,logcosh:Y7,categoricalCrossentropy:pp,sparseCategoricalCrossentropy:sm,binaryCrossentropy:am,kullbackLeiblerDivergence:Z7,poisson:J7,cosineProximity:fd};function ly(r){if(typeof r=="string"){if(r in dd)return dd[r];let e=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new O(e)}else return r}function hd(r,e){return G(()=>{let t=R(.5,Ar(e)),n=ip(rr(e,t),r.dtype);return Rt(Kr(r,n),-1)})}function gd(r,e){return G(()=>ip(Kr(Qi(r,-1),Qi(e,-1)),"float32"))}function bF(r,e){return G(()=>J(he(jr(Kr(r,1),Kr(e,1))),"float32"))}function eQ(r,e){return G(()=>J(he(jr(Kr(r,1),Kr(e,0))),"float32"))}function tQ(r,e){return G(()=>J(he(jr(Kr(r,0),Kr(e,1))),"float32"))}function zC(r,e){return G(()=>{let t=bF(r,e),n=tQ(r,e),o=X(t,n);return J(Ot(rr(o,0),ce(t,o),0),"float32")})}function yF(r,e){return G(()=>{let t=bF(r,e),n=eQ(r,e),o=X(t,n);return J(Ot(rr(o,0),ce(t,o),0),"float32")})}function py(r,e){return am(r,e)}function cy(r,e){return r.rank===e.rank&&(r=pn(r,[r.rank-1])),e=Qi(e,-1),e.dtype!==r.dtype&&(e=J(e,r.dtype)),J(Kr(r,e),"float32")}var rQ=ui,nQ=ui,oQ=om,sQ=om,aQ=Zu,iQ=Zu,bd=pp,uQ=fd,GC=sm,my={binaryAccuracy:hd,categoricalAccuracy:gd,precision:zC,categoricalCrossentropy:bd,sparseCategoricalCrossentropy:GC,mse:rQ,MSE:nQ,mae:oQ,MAE:sQ,mape:aQ,MAPE:iQ,cosine:uQ};function xF(r){if(typeof r=="string"&&r in my)return my[r];if(typeof r!="string"&&r!=null)return r;throw new O(`Unknown metric ${r}`)}function yd(r){if(Ho(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let e;for(let t of Object.keys(dd))if(dd[t]===r){e=t;break}if(e!==void 0)return e;for(let t of Object.keys(my))if(my[t]===r){e=t;break}return e!==void 0?e:r.name}}function TF(r){let e={Adagrad:()=>sp.adagrad(.01),Adadelta:()=>sp.adadelta(1,.95,dr()),Adam:()=>sp.adam(.001,.9,.999,dr()),Adamax:()=>sp.adamax(.002,.9,.999,dr(),0),RMSProp:()=>sp.rmsprop(.001,.9,0,dr()),SGD:()=>sp.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,r in e)return e[r]();throw new O(`Unknown Optimizer ${r}`)}var kF=1*1024*1024;function WC(r,e,t=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!UC(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){let n=JSON.stringify(r);n.length>kF&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${kF}.`)}}function UC(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let e=Object.keys(r);for(let t of e)if(typeof t!="string"||!UC(r[t]))return!1;return!0}else if(Array.isArray(r)){for(let e of r)if(!UC(e))return!1;return!0}else return!1;else{let e=typeof r;return e==="string"||e==="number"||e==="boolean"}}function IF(r,e,t,n=console.log){let o=pQ(r),s=["Layer (type)","Output shape","Param #"];o?(e=e||65,t=t||[.45,.85,1]):(e=e||98,t=t||[.33,.55,.67,1]),t[t.length-1]<=1&&(t=t.map(p=>Math.floor(e*p)));let i;if(!o){s.push("Receives inputs"),i=[];for(let p in r.nodesByDepth)i.push(...r.nodesByDepth[p])}n("_".repeat(e)),fy(s,t,n),n("=".repeat(e));let a=r.layers;for(let p=0;p<a.length;++p)o?cQ(a[p],t,n):mQ(a[p],t,i,n),n((p===a.length-1?"=":"_").repeat(e));r.checkTrainableWeightsConsistency();let u=lQ(r),l=rm(r.nonTrainableWeights);n(`Total params: ${u+l}`),n(`Trainable params: ${u}`),n(`Non-trainable params: ${l}`),n("_".repeat(e))}function lQ(r){let e;return r.collectedTrainableWeights!=null?e=rm(r.collectedTrainableWeights):e=rm(r.trainableWeights),e}function pQ(r){let e=!0,t=[],n=[];for(let o in r.nodesByDepth)t.push(r.nodesByDepth[o]);for(let o of t){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){e=!1;break}n.push(...o)}if(e)for(let o of r.layers){let s=!1;for(let i of o.inboundNodes)if(n.indexOf(i)!==-1)if(s){e=!1;break}else s=!0;if(!e)break}return e}function fy(r,e,t=console.log){let n="";for(let o=0;o<r.length;++o)o>0&&(n=n.slice(0,n.length-1)+" "),n+=r[o],n=n.slice(0,e[o]),n+=" ".repeat(e[o]-n.length);t(n)}function cQ(r,e,t){let n;try{n=JSON.stringify(r.outputShape)}catch{n="multiple"}let o=r.name,s=r.getClassName(),i=[`${o} (${s})`,n,r.countParams().toString()];fy(i,e,t)}function mQ(r,e,t,n){let o;try{o=JSON.stringify(r.outputShape)}catch{o="multiple"}let s=[];for(let p of r.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(p)===-1))for(let c=0;c<p.inboundLayers.length;++c){let m=p.inboundLayers[c].name,f=p.nodeIndices[c],d=p.tensorIndices[c];s.push(`${m}[${f}][${d}]`)}let i=r.name,a=r.getClassName(),u=s.length===0?"":s[0],l=[`${i} (${a})`,o,r.countParams().toString(),u];fy(l,e,n);for(let p=1;p<s.length;++p)fy(["","","",s[p]],e,n)}function CF(r,e,t){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&e===0&&typeof t=="string"}function cp(r,e){if(r===null)return null;if(typeof r=="string")return au(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];CF(e,o,s)?t.push(s):t.push(cp(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n];if(n==="name"&&typeof o=="string")t[n]=o;else{let s=au(n);t[s]=cp(o,s)}}return t}}function dy(r,e){if(r==null)return null;if(typeof r=="string")return Rs(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];CF(e,o,s)?t.push(s):t.push(dy(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n],s=Rs(n);(n==="name"||n==="className")&&typeof o=="string"?t[s]=o:t[s]=dy(o,n)}return t}}var xd="0.0.0";function fQ(r,e){if(r.dtype==null||r.dtype===e.dtype)return e;try{return J(e,r.dtype)}catch{throw new O(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var Aa=class{constructor(e){this.id2Value={};this.id2Mask={};this.name2Id={};if(e instanceof Aa)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=fQ(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new O(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof dn){if(this.id2Value[e.id]==null)throw new O(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new O(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof dn){if(this.id2Value[e.id]==null)throw new O(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new O(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Ee(this.id2Mask)}},KC={},vF={};function mp(r,e,t,n){let o=t==null?!1:t.training,s=Array.isArray(r),i=s?r:[r],a=i.map(d=>d.name),u=[],l=e.names();for(let d of a)l.indexOf(d)!==-1?u.push(e.getValue(d)):u.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);let p=a.join(",")+"|"+e.names().join(","),c,m;if(KC[p]==null){let d=dQ(i,e);c=d.sorted,m=d.recipientCounts,KC[p]=c,vF[p]=m}c=KC[p],m={},o||Object.assign(m,vF[p]);let f=new Aa(e);for(let d=0;d<c.length;++d){if(n!=null){let E=Tf().numTensors;E>n.maxNumTensors&&(n.maxNumTensors=E),E<n.minNumTensors&&(n.minNumTensors=E)}let h=c[d],g=h.sourceLayer;if(g instanceof ai)continue;let x=[],y=[],T=[],k=!1;for(let E of h.inputs){let B=f.getValue(E),W=f.getMask(E);x.push(B),y.push(W),W!=null&&(k=!0),o||(m[E.name]--,m[E.name]===0&&!e.hasKey(E)&&a.indexOf(E.name)===-1&&!B.isDisposed&&E.sourceLayer.stateful!==!0&&T.push(B))}k&&(t=t||{},t.mask=y[0]);let C=St(g.apply(x,t)),N=null;g.supportsMasking&&(N=g.computeMask(x,y));let A=gQ(h),M=Array.isArray(A)?A:[A];for(let E=0;E<M.length;++E){f.hasKey(M[E])||f.add(M[E],C[E],Array.isArray(N)?N[0]:N);let B=a.indexOf(M[E].name);B!==-1&&(u[B]=C[E])}o||Ee(T)}return f.disposeMasks(),s?u:u[0]}function dQ(r,e){b.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let t=[],n={};if(r.length===1){let o=wF(r[0],e);t=o.sorted,n=o.recipientMap}else{let o=new Set;for(let s of r){let{sorted:i,recipientMap:a}=wF(s,e);for(let u of i)o.has(u.name)||(t.push(u),o.add(u.name));for(let u in a)n[u]==null&&(n[u]=new Set),a[u].forEach(l=>n[u].add(l))}}return{sorted:t,recipientCounts:hQ(n)}}function hQ(r){let e={};for(let t in r)e[t]=r[t].size;return e}function wF(r,e){let t=new Set,n=[],o={};for(let a of e.names())t.add(a);let s=[],i=[];for(s.push(r);s.length>0;){let a=s[s.length-1];if(t.has(a.name)){s.pop();continue}let u=i[i.length-1]===s.length-1;if(a.inputs.length===0||u)s.pop(),n.push(a),t.add(a.name),u&&i.pop();else{i.push(s.length-1);for(let l of a.inputs)o[l.name]==null&&(o[l.name]=new Set),o[l.name].add(a.name),!t.has(l.name)&&s.push(l)}}return{sorted:n,recipientMap:o}}function gQ(r){let e;if(r.sourceLayer.inboundNodes.length===1)e=r.sourceLayer.output;else{let t=null;for(let n=0;n<r.sourceLayer.inboundNodes.length;++n)for(let o of r.sourceLayer.inboundNodes[n].outputTensors)if(o.id===r.id){t=n;break}e=r.sourceLayer.getOutputAt(t)}return e}var qo=class extends Ve{constructor(e){super({});this.containerNodes=new Set;if(this.name=e.name,this.name==null){let y=this.getClassName().toLowerCase();this.name=Xu(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Bs(this.inputs).length!==this.inputs.length)throw new O(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);Bs(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let T=y.sourceLayer,k=y.nodeIndex,C=y.tensorIndex;this.outputLayers.push(T),this.outputLayersNodeIndices.push(k),this.outputLayersTensorIndices.push(C)}for(let y of this.inputs){let T=y.sourceLayer,k=y.nodeIndex,C=y.tensorIndex;Ho(k===0,"input layer has >1 nodes"),Ho(C===0,"input layer has >1 tensors"),this.inputLayers.push(T),this.inputLayersNodeIndices.push(k),this.inputLayersTensorIndices.push(C)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let T=this.inputLayers[y];if(!(T instanceof ai))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${T.getClassName()}.`);this.inputNames.push(T.name),this.feedInputShapes.push(T.batchInputShape),this.feedInputNames.push(T.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let t={},n={},o={},s={},i={},a=[],u=(y,T,k,C,N,A)=>{(C==null||N==null||A==null)&&(C=y.sourceLayer,N=y.nodeIndex,A=y.tensorIndex);let M=C.inboundNodes[N];if(k.indexOf(M)!==-1)throw new en(`The tensor ${y.name} at layer "${C.name}" is part of a cycle.`);if(T.indexOf(M)!==-1)return;this.containerNodes.add(qo.nodeKey(C,N)),C.id in i||(i[C.id]=Object.keys(i).length),k.indexOf(M)===-1&&k.push(M);let E=M.inboundLayers.length;for(let B=0;B<E;B++){let W=M.inputTensors[B],U=M.inboundLayers[B],K=M.nodeIndices[B],j=M.tensorIndices[B];u(W,T,k,U,K,j)}for(T.push(M);k.indexOf(M)>=0;)k.splice(k.indexOf(M),1);a.push(M)},l=[],p=[];for(let y of this.outputs)u(y,l,p);let c=a.slice().reverse();for(let y of c){n[y.id]=y,y.id in t||(t[y.id]=0);let T=t[y.id],k=o[y.outboundLayer.id]==null?0:o[y.outboundLayer.id];T=Math.max(T,k),o[y.outboundLayer.id]=T,s[y.outboundLayer.id]=y.outboundLayer,t[y.id]=T;for(let C=0;C<y.inboundLayers.length;C++){let N=y.inboundLayers[C],A=y.nodeIndices[C],M=N.inboundNodes[A],E=t[M.id]==null?0:t[M.id];t[M.id]=Math.max(T+1,E),n[M.id]=M}}let m={};for(let y in t){let T=t[y];T in m||(m[T]=[]),m[T].push(n[y])}let f={};for(let y in o){let T=o[y];T in f||(f[T]=[]),f[T].push(s[y])}let d=Object.keys(f).map(y=>parseInt(y,10)).sort(Yf);this.layers=[];for(let y of d){let T=f[y];T.sort((k,C)=>{let N=i[k.id],A=i[C.id];return N<A?-1:N>A?1:0});for(let k of T)k instanceof qo&&this.internalContainerRefs.push(k),this.layers.push(k)}this.layersByDepth=f,d=Object.keys(m).map(y=>parseInt(y,10)).sort(Yf);let h=this.inputs.slice(),g=[];for(let y of d)for(let T of m[y]){let k=T.outboundLayer;if(k!=null){for(let C of T.inputTensors)if(h.indexOf(C)===-1)throw new en(`Graph disconnected: cannot obtain value for tensor ${C} at layer "${k.name}". The following previous layers were accessed without issue: ${g}`);for(let C of T.outputTensors)h.push(C);g.push(k.name)}}this.nodesByDepth=m;let x=this.layers.map(y=>y.name);for(let y of x){let T=x.filter(k=>k===y).length;if(T!==1)throw new en(`The name "${y}" is used ${T} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new Yu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new O("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},o=0;for(let i of this.layers)for(let a of i.weights){if(n[a.originalName]!=null)throw new O(`Duplicate weight name: ${a.originalName}`);n[a.originalName]=a,o++}let s=[];for(let i in e){let a=i;if(n[i]==null){let u=i.split("/");a=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(n[a]!=null)s.push([n[a],e[i]]);else if(t)throw new O(`Provided weight data has no target variable: ${i}`);delete n[a]}if(t){let i=[];for(let a in n)i.push(a);if(i.length>0)throw new O(`${i.length} of ${o} weights are not set: ${i}`)}nm(s)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${xd}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=dy(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return G(()=>{e=St(e);let n=new Aa;for(let o=0;o<this.inputs.length;++o)n.add(this.inputs[o],e[o]);return mp(this.outputs,n,t)})}computeMask(e,t){return G(()=>{e=St(e);let n;return t==null?n=Es(null,e.length):n=St(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=tm(e);if(t.length!==this.inputLayers.length)throw new O(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let a=0;a<t.length;a++){let u=this.inputLayers[a],l=t[a],p=u.name+"_0_0";n[p]=l}let o=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(Yf);if(o.length>1)for(let a of o){let u=this.nodesByDepth[a];for(let l of u){let p=l.outboundLayer;if(this.inputLayers.map(h=>h.id).indexOf(p.id)!==-1)continue;let c=[];for(let h=0;h<l.inboundLayers.length;h++){let g=l.inboundLayers[h],x=l.nodeIndices[h],y=l.tensorIndices[h],T=`${g.name}_${x}_${y}`,k=n[T];c.push(k)}let m=p.computeOutputShape(Nr(c)),f=tm(m),d=p.inboundNodes.indexOf(l);for(let h=0;h<f.length;h++){let g=`${p.name}_${d}_${h}`;n[g]=f[h]}}}let s=[],i=[];for(let a=0;a<this.outputLayers.length;a++){let u=this.outputLayers[a],l=this.outputLayersNodeIndices[a],p=this.outputLayersTensorIndices[a],c=`${u.name}_${l}_${p}`;i.push(c)}for(let a=0;a<i.length;a++){let u=i[a];Ho(u in n),s.push(n[u])}return Nr(s)}runInternalGraph(e,t){t==null&&(t=Es(null,e.length));let n={};for(let u=0;u<this.inputs.length;++u){let l=this.inputs[u],p=e[u],c=t[u];n[l.id]=[p,c]}let o=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(Yf);for(let u of o){let l=this.nodesByDepth[u];for(let p of l){let c=p.outboundLayer,m=p.inputTensors,f=p.outputTensors,d=new Array;for(let h of m)h.id in n&&d.push(n[h.id]);if(d.length===m.length){let h={},g,x,y,T;if(p.callArgs!=null&&(h=p.callArgs),d.length===1){let[k,C]=d[0];h.mask==null&&(h.mask=C),y=St(c.call(k,h)),T=St(c.computeMask(k,C)),g=[k],x=[C]}else g=d.map(k=>k[0]),x=d.map(k=>k[1]),h.mask==null&&(h.mask=x),y=St(c.call(g,h)),T=St(c.computeMask(g,x));if(c.activityRegularizer)throw new Pe("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let k=0;k<f.length;++k){let C=f[k],N=y[k],A=T[k];n[C.id]=[N,A]}}}}let s=[],i=[],a=[];for(let u of this.outputs){Ho(u.id in n,`Could not compute output ${u.name} : ${u.id}`);let[l,p]=n[u.id];a.push(l.shape),s.push(l),i.push(p)}return[s,i,a]}buildNodeConversionMap(e){let t={},n;for(let o of this.layers){n=o instanceof qo?1:0;for(let s=0;s<o.inboundNodes.length;s++){let i=qo.nodeKey(o,s);this.containerNodes.has(i)&&(t[i]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new O(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new O("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new O(`No such layer: ${e}`)}calculateLosses(){return G(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let o=qo.nodeKey(t,n);this.containerNodes.has(o)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let i of this.layers){let a=i.getClassName(),u=i.getConfig(),l=[];for(let c=0;c<i.inboundNodes.length;c++){let m=i.inboundNodes[c],f=qo.nodeKey(i,c),d={};if(this.containerNodes.has(f)){if(m.callArgs)try{JSON.stringify(m.callArgs),d=m.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${m.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),d={}}if(m.inboundLayers.length>0){let h=[];for(let g=0;g<m.inboundLayers.length;g++){let x=m.inboundLayers[g],y=m.nodeIndices[g],T=m.tensorIndices[g],k=qo.nodeKey(x,y),C=t[k];C==null&&(C=0),h.push([x.name,C,T,d])}l.push(h)}}}let p={};p.name=i.name,p.className=a,p.config=u,p.inboundNodes=l,n.push(p)}e.layers=n;let o=[];for(let i=0;i<this.inputLayers.length;i++){let a=this.inputLayers[i],u=this.inputLayersNodeIndices[i],l=qo.nodeKey(a,u);if(!this.containerNodes.has(l))continue;let p=t[l];p==null&&(p=0);let c=this.inputLayersTensorIndices[i];o.push([a.name,p,c])}e.inputLayers=o;let s=[];for(let i=0;i<this.outputLayers.length;i++){let a=this.outputLayers[i],u=this.outputLayersNodeIndices[i],l=qo.nodeKey(a,u);if(!this.containerNodes.has(l))continue;let p=t[l];p==null&&(p=0);let c=this.outputLayersTensorIndices[i];s.push([a.name,p,c])}return e.outputLayers=s,e}static fromConfig(e,t,n={},o=!1){let s={},i={};function a(g,x){g.name in i?i[g.name].push(x):i[g.name]=[x]}function u(g,x){let y=[],T;for(let k of x){let C=k[0],N=k[1],A=k[2];if(T=k[3]==null?{}:k[3],!(C in s)){a(g,x);return}let M=s[C];if(M.inboundNodes.length<=N){a(g,x);return}let E=M.inboundNodes[N];y.push(E.outputTensors[A])}y.length>0&&g.apply(Nr(y),T)}function l(g){let x=g.name,y=hn(g,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(o),s[x]=y,g.inboundNodes.forEach(k=>{if(!(k instanceof Array))throw new O(`Corrupted configuration, expected array for nodeData: ${k}`);a(y,k)})}let p=t.name,c=t.layers;for(let g of c)l(g);for(;!WP(i);)for(let g of c){let x=s[g.name];if(x.name in i){let y=i[x.name];delete i[x.name];for(let T of y)u(x,T)}}let m=[],f=[],d=t.inputLayers;for(let g of d){let x=g[0],y=g[1],T=g[2];Ho(x in s);let C=s[x].inboundNodes[y].outputTensors;m.push(C[T])}let h=t.outputLayers;for(let g of h){let x=g[0],y=g[1],T=g[2];Ho(x in s);let C=s[x].inboundNodes[y].outputTensors;f.push(C[T])}return new e({inputs:m,outputs:f,name:p})}get stateful(){if(this._stateful)throw new O("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){G(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function bQ(r,e,t){let n=e.length;if(r==null||Array.isArray(r)&&r.length===0)return e.map(o=>null);if(n===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&e[0]in r?[r[e[0]]]:[r];if(Array.isArray(r)){if(r.length!==n)throw new Error(`Provided ${t} is an array of ${r.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let o=[];return e.forEach(s=>{s in r?o.push(r[s]):o.push(null)}),o}else throw new Error(`The model has multiple (${n}) outputs, so ${t} must be either an array with ${n} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(r)}`)}function hy(r,e){return bQ(r,e,"classWeight")}async function gy(r,e,t,n){if(e!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){let o=G(()=>{if(r.shape.length===1)return wn(r);if(r.shape.length===2){if(r.shape[1]>1)return Qi(r,1);if(r.shape[1]===1)return L(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await o.data());Ee(o);let i=[];return s.forEach(a=>{if(t[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(t[a])}),zt(i,"float32")}else return null}function SF(r,e){return R(r,e)}var yQ=32;function _F(r,e){let t,n,o=e;t=o.xs,n=o.ys,b.assert(t!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);let s=AF("input",r.inputNames,t),i=AF("output",r.outputNames,n),a=s[0].shape[0];b.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),b.assert(i.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let u=0;u<s.length;u++)b.assert(s[u].shape[0]===a,()=>`Batch size mismatch: input ${r.inputNames[u]} has ${s[u].shape[0]}; expected  ${a} based on input ${r.inputNames[0]}.`);for(let u=0;u<i.length;u++)b.assert(i[u].shape[0]===a,()=>`Batch size mismatch: output ${r.outputNames[u]} has ${i[u].shape[0]}; expected  ${a} based on input ${r.inputNames[0]}.`);return{xs:s,ys:i}}function AF(r,e,t){if(t instanceof Qe)return[t];if(Array.isArray(t))return b.assert(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${r} keys ${e}.`),t;{let n=[];for(let o of e){if(t[o]==null)throw new O(`The feature data generated by the dataset lacks the required ${r} key '${o}'.`);n.push(t[o])}return n}}function xQ(r){if(r.length===3)throw new Pe("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}async function NF(r,e,t){let n=t.batchesPerEpoch!=null;if(b.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),b.assert(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),b.assert(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),b.assert(!n||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),b.assert(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let o=t.validationData!=null,s,i;if(o)if(DF(t.validationData))b.assert(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{let g=xQ(t.validationData);s=g.xs,i=g.ys}let a=r.makeTrainFunction(),u=r.getDedupedMetricsNames(),l;o?l=u.slice().concat(u.map(g=>"val_"+g)):l=u.slice();let p=iy(t.callbacks,t.yieldEvery),c=t.verbose==null?1:t.verbose,{callbackList:m,history:f}=uy(p,c,t.epochs,null,null,TQ(e,t),null,o,l);m.setModel(r),r.history=f,await m.onTrainBegin(),r.stopTraining_=!1;let d=t.initialEpoch==null?0:t.initialEpoch,h=await e.iterator();for(;d<t.epochs;){let g={};await m.onEpochBegin(d);let x=0,y=0;for(n||(h=await e.iterator());n?x<t.batchesPerEpoch:!0;){let T=await h.next();if(n&&T.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(T.value!=null){let{xs:k,ys:C}=_F(r,T.value),N={};N.batch=y,N.size=k[0].shape[0],await m.onBatchBegin(y,N);let A=[];if(t.classWeight!=null){let B=hy(t.classWeight,r.outputNames);for(let W=0;W<B.length;++W)A.push(await gy(C[W],null,B[W]))}let M=k.concat(C).concat(A),E=a(M);Ee(M);for(let B=0;B<u.length;++B){let W=u[B],U=E[B];N[W]=U,Vt(U)}await m.onBatchEnd(y,N),ay(N),y++,x++}if(n?x>=t.batchesPerEpoch:T.done){if(o){let k;DF(t.validationData)?k=St(await r.evaluateDataset(t.validationData,{batches:t.validationBatches})):k=St(r.evaluate(s,i,{batchSize:t.validationBatchSize==null?yQ:t.validationBatchSize,verbose:0}));for(let C=0;C<r.metricsNames.length;++C)g[`val_${r.metricsNames[C]}`]=k[C]}break}if(r.stopTraining_)break}if(await m.onEpochEnd(d,g),d++,r.stopTraining_)break}return await m.onTrainEnd(),await r.history.syncData(),r.history}finally{r.isTraining=!1}}function TQ(r,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(r.size)&&(t=r.size),t}function DF(r){return typeof r.iterator=="function"}function kQ(r){return typeof r.next=="function"}async function PF(r,e,t){t=t||{};let n=t.batches!=null,o=r.testFunction,s=[];if(t.verbose>0)throw new Pe("Verbose mode is not implemented yet.");b.assert(!n||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);let i=kQ(e)?e:await e.iterator(),a=0,u=0;for(;n?u<t.batches:!0;){let l=await i.next();if(s=G(()=>{if(l.value){let{xs:p,ys:c}=_F(r,l.value),m=p.concat(c),f=G(()=>o(m));if(Ee(m),u===0)for(let h=0;h<f.length;++h)s.push(me(0));let d=m[0].shape[0];for(let h=0;h<f.length;++h){let g=f[h],x=s[h];s[h]=G(()=>X(s[h],R(d,g))),u>0&&Ee(x)}Ee(f),a+=d,++u}return s}),l.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<s.length;++l){let p=s[l];s[l]=ce(s[l],a),Ee(p)}return Nr(s)}function by(r){b.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function im(r,e,t){return r==null?[null]:Array.isArray(r)?r.map(n=>uu(n,e,t-e)):uu(r,e,t-e)}function yy(r,e){return G(()=>r==null?null:Array.isArray(r)?r.map(t=>yy(t,e)):Jb(r,e.dtype==="int32"?e:J(e,"int32")))}function xy(r,e){let t=[],n=0,o=null;for(;n<r;)o=n+e,o>=r&&(o=r),t.push([n,o]),n=o;return t}async function IQ(r,e,t,n,o,s,i,a,u,l,p,c,m,f,d){o==null&&(o=32),s==null&&(s=1),p==null&&(p=!0),m==null&&(m=0);let h=!1;if(u!=null&&l!=null&&(h=!0),d!=null&&(h=!0,f==null))throw new O("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=r.checkNumSamples(t,o,f,"steps_per_epoch"),x;g!=null&&(x=tn(0,g)),i==null&&(i=1);let{callbackList:y,history:T}=uy(a,i,s,m,g,f,o,h,c);y.setModel(r),r.history=T,await y.onTrainBegin(),r.stopTraining_=!1;for(let k=m;k<s;++k){await y.onEpochBegin(k);let C={};if(f!=null)throw new Pe("stepsPerEpoch mode is not implemented yet.");{if(p==="batch")throw new Pe("batch shuffling is not implemneted yet");p&&b.shuffle(x);let N=zt(x),A=xy(g,o);for(let M=0;M<A.length;++M){let E={};if(await y.onBatchBegin(M,E),G(()=>{let B=A[M][0],W=A[M][1],U=uu(N,B,W-B);E.batch=M,E.size=W-B;let K=yy(t,U),j=e(K);for(let V=0;V<n.length;++V){let q=n[V],ee=j[V];E[q]=ee,Vt(ee)}if(M===A.length-1&&h){let V=r.testLoop(u,l,o);for(let q=0;q<n.length;++q){let ee=n[q],Z=V[q];Vt(Z),C["val_"+ee]=Z}}}),await y.onBatchEnd(M,E),ay(E),r.stopTraining_)break}N.dispose()}if(await y.onEpochEnd(k,C),r.stopTraining_)break}return await y.onTrainEnd(),await r.history.syncData(),r.history}async function FF(r,e,t,n={}){if(r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;let o,s,i,a,u,l,p;try{let c=n.batchSize==null?32:n.batchSize;by(c);let m=!1,f=await r.standardizeUserData(e,t,n.sampleWeight,n.classWeight,m,c);o=f[0],s=f[1],p=f[2];let d=!1,h;if(n.validationData!=null&&n.validationData.length>0){if(d=!0,n.validationData.length===2)i=n.validationData[0],a=n.validationData[1];else throw n.validationData.length===3?new Pe("validationData including sample weights is not supported yet."):new O(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let A=!0,M=await r.standardizeUserData(i,a,null,null,A,c);u=M[0],l=M[1],h=u.concat(l)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){d=!0;let A=Math.floor(o[0].shape[0]*(1-n.validationSplit)),M=o[0].shape[0];u=im(o,A,M),o=im(o,0,A),l=im(s,A,M),s=im(s,0,A),h=u.concat(l)}else n.validationSteps!=null&&(d=!0);let g=o.concat(s).concat(p);r.checkTrainableWeightsConsistency();let x=r.makeTrainFunction(),y=r.getDedupedMetricsNames(),T,k;d?(r.makeTestFunction(),T=r.testFunction,k=y.slice().concat(y.map(A=>"val_"+A))):(T=null,h=[],k=y.slice());let C=iy(n.callbacks,n.yieldEvery);return await IQ(r,x,g,y,c,n.epochs,n.verbose,C,T,h,n.shuffle,k,n.initialEpoch,null,null)}finally{r.isTraining=!1,Ju(o,e),Ju(s,t),Ju(u,i),Ju(l,a),p!=null&&Ee(p)}}function VC(r){let e=[];r instanceof Qe&&(r=[r]);for(let t=0;t<r.length;++t){let n=r[t];if(n.rank===1)e.push(iu(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(n)}}return e}function Ju(r,e){if(r==null)return;let t=[];if(e instanceof Qe)t.push(e.id);else if(Array.isArray(e))e.forEach(o=>t.push(o.id));else if(e!=null)for(let o in e){let s=e[o];t.push(s.id)}let n=[];if(r instanceof Qe)t.indexOf(r.id)===-1&&n.push(r);else if(Array.isArray(r))r.forEach(o=>{t.indexOf(o.id)===-1&&n.push(o)});else if(r!=null)for(let o in r){let s=r[o];t.indexOf(s.id)===-1&&n.push(s)}n.forEach(o=>{o.isDisposed||o.dispose()})}function CQ(r){return r instanceof Qe}function jC(r){return Array.isArray(r)}function MF(r){return!CQ(r)&&!jC(r)}function EF(r,e,t,n=!0,o=""){if(e==null||e.length===0){if(r!=null){let i=!1;if(jC(r)&&r.length>0)i=!0;else if(MF(r)){for(let a in r)if(r.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new O(`Error when checking model ${o} expected no data, but got ${r}`)}return[]}if(r==null)return e.map(i=>null);let s;if(MF(r)){r=r,s=[];for(let i of e){if(r[i]==null)throw new O(`No data provided for "${i}". Need data for each key in: ${e}`);s.push(r[i])}}else if(jC(r)){if(r=r,r.length!==e.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,e.length>1)throw new O(`The model ${o} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=VC(s),t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;let a=s[i];if(a.shape.length!==t[i].length)throw new O(`Error when checking ${o}: expected ${e[i]} to have ${t[i].length} dimension(s). but got array with shape ${a.shape}`);for(let u=0;u<t[i].length;++u){if(u===0&&!n)continue;let l=a.shape[u],p=t[i][u];if(p!=null&&p>=0&&l!==p)throw new O(`${o} expected a batch of elements where each example has shape [${t[i].slice(1,t[i].length)}] (i.e.,tensor shape [*,${t[i].slice(1,t[i].length)}]) but the ${o} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return s}function vQ(r,e,t){let n=Bs(r.map(s=>s.shape[0]));n.sort();let o=Bs(e.map(s=>s.shape[0]));if(o.sort(),n.length>1)throw new O(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(o.length>1)throw new O(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(n.length>0&&o.length>0&&!b.arraysEqual(n,o))throw new O(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${o[0]} target sample(s).`)}function wQ(r,e,t){let n=[ui,am,pp];for(let o=0;o<r.length;++o){let s=r[o],i=e[o],a=t[o];if(i!=null){if(i===pp&&s.shape[s.shape.length-1]===1)throw new O(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(i)!==-1){let u=s.shape.slice(1),l=a.slice(1);for(let p=0;p<u.length;++p){let c=u[p],m=l[p];if(m!=null&&c!==m)throw new O(`A target Tensor with shape ${s.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function RF(r,e,t,n=!0,o=""){let s;if(Array.isArray(r)){if(r.length!==e.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(e.length>1)throw new O(`The model expects ${e.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;let a=s[i];if(a.shape.length!==t[i].length)throw new O(`Error when checking ${o}: expected ${e[i]} to have ${t[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let u=0;u<t[i].length;++u){if(u===0&&!n)continue;let l=a.shape[u],p=t[i][u];if(p!=null&&p!==l)throw new O(`Error when checking ${o}: expected ${e[i]} to have shape ${JSON.stringify(t[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function SQ(r,e){if(r==null||Array.isArray(r)&&r.length===0)return e.map(n=>[]);let t;if(typeof r=="string"||typeof r=="function")t=[r];else if(Array.isArray(r)||typeof r=="object")t=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(t))return e.map(n=>t);{let n=[];for(let o of e){let s=t.hasOwnProperty(o)?t[o]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var _Q="layers-model",Xo=class extends qo{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new O("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");IF(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=TF(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Jr))throw new O("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let i in e.loss)if(this.outputNames.indexOf(i)===-1)throw new O(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(let i of this.outputNames)e.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),t.push(ly(e.loss[i]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new O(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(a=>ly(a))}else{let i=ly(e.loss);this.outputs.forEach(a=>{t.push(i)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){let a=this.internalOutputShapes[i],u=this.outputNames[i];this.feedOutputNames.push(u),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[i])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],wa("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(n.indexOf(i)!==-1)continue;let a=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([a,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});let o=SQ(e.metrics,this.outputNames),s=(i,a,u)=>{this.outputNames.length>1&&(a=this.outputNames[i]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([u,i])};wa("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(n.indexOf(i)!==-1)continue;let a=o[i];(l=>{let p="",c,m,f;for(let d of l){if(typeof d=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(d)!==-1){let g=this.internalOutputShapes[i];g[g.length-1]===1||this.lossFunctions[i]===am?["accuracy","acc"].indexOf(d)!==-1?m=hd:["crossentropy","ce"].indexOf(d)!==-1&&(m=py):this.lossFunctions[i]===sm?["accuracy","acc"].indexOf(d)!==-1?m=cy:["crossentropy","ce"].indexOf(d)!==-1&&(m=GC):["accuracy","acc"].indexOf(d)!==-1?m=gd:["crossentropy","ce"].indexOf(d)!==-1&&(m=bd);let x;["accuracy","acc"].indexOf(d)!==-1?x="acc":["crossentropy","ce"].indexOf(d)!==-1&&(x="ce"),f=m,c=p+x}else f=xF(d),c=p+yd(d);let h;wa(c,()=>{h=f}),s(i,c,h)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let o=n.batchSize==null?32:n.batchSize;by(o);let s=!0,i=this.standardizeUserDataXY(e,t,s,o);try{let a=i[0].concat(i[1]);this.makeTestFunction();let u=this.testFunction,l=this.testLoop(u,a,o,n.verbose,n.steps);return Nr(l)}finally{Ju(i[0],e),Ju(i[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),PF(this,e,t)}checkNumSamples(e,t,n,o="steps"){let s;if(n!=null){if(s=null,t!=null)throw new O(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?s=e[0].shape[0]:s=e.shape[0];else throw new O(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return s}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new O("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),o=n?t:[t],s=this.retrieveSymbolicTensors(o),i=new Aa;if(e instanceof Qe&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new O(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)i.add(this.inputs[u],e[u])}else for(let u of this.inputs){let l=e[u.name];if(l==null)throw new O(`No value is provided for the model's input ${u.name}`);i.add(u,l)}let a=mp(s,i);return n?a:a[0]}retrieveSymbolicTensors(e){let t=Es(null,e.length),n=e.length;for(let o of this.layers){let s=Array.isArray(o.output)?o.output:[o.output],i=s.map(a=>a.name);for(let a=0;a<e.length;++a){let u=i.indexOf(e[a]);if(u!==-1&&(t[a]=s[u],n--),n===0)break}if(n===0)break}if(n>0){let o=[];throw t.forEach((s,i)=>{s==null&&o.push(e[i])}),new O(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return t}predictLoop(e,t=32,n=!1){return G(()=>{let o=this.checkNumSamples(e);if(n)throw new Pe("Verbose predictLoop() is not implemented yet.");let s=xy(o,t),i=this.outputs.map(a=>[]);for(let a=0;a<s.length;++a)G(()=>{let l=s[a][0],p=s[a][1],c=im(e,l,p),m=[];if(Array.isArray(c))for(let d=0;d<c.length;++d)m.push({key:this.inputs[d],value:c[d]});else m.push({key:this.inputs[0],value:c});let f=new Aa(m);return mp(this.outputs,f)}).forEach((l,p)=>i[p].push(l));return Nr(i.map(a=>ut(a,0)))})}predict(e,t={}){let n=VC(e);RF(n,this.inputNames,this.feedInputShapes,!1);try{let o=t.batchSize==null?32:t.batchSize;return by(o),this.predictLoop(n,o)}finally{Ju(n,e)}}predictOnBatch(e){RF(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,o){if(this.optimizer_==null)throw new en("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let i=0;i<this.feedOutputShapes.length;++i){let a=this.feedOutputShapes[i];this.feedLossFns[i]===sm?s.push(a.slice(0,a.length-1).concat([1])):s.push(a)}if(e=EF(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=EF(t,this.feedOutputNames,s,!1,"target"),vQ(e,t,null),wQ(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&e[0].shape[0]%o!=0)throw new O(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,o,s=!0,i){let[a,u]=this.standardizeUserDataXY(e,t,s,i);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(o!=null){let p=hy(o,this.outputNames);l=[];for(let c=0;c<p.length;++c)l.push(await gy(u[c],null,p[c]))}return[a,u,l]}testLoop(e,t,n,o=0,s){return G(()=>{let i=this.checkNumSamples(t,n,s,"steps"),a=[];if(o>0)throw new Pe("Verbose mode is not implemented yet.");if(s!=null)throw new Pe("steps mode in testLoop() is not implemented yet");{let u=xy(i,n),l=zt(tn(0,i));for(let p=0;p<u.length;++p){let c=u[p][0],m=u[p][1],f=uu(l,c,m-c),d=yy(t,f),h=e(d);if(p===0)for(let g=0;g<h.length;++g)a.push(me(0));for(let g=0;g<h.length;++g){let x=h[g];a[g]=X(a[g],R(m-c,x))}}for(let p=0;p<a.length;++p)a[p]=ce(a[p],i)}return a})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let o=e[n],s=o;NC(e,o)>1&&(s+=`_${NC(e.slice(0,n),o)}`),t.push(s)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],a=()=>{let c=[];for(let h=0;h<this.inputs.length;++h)c.push({key:this.inputs[h],value:n[h]});let m=new Aa(c),f=mp(this.outputs,m,{training:!0}),d;for(let h=0;h<this.lossFunctions.length;++h){let x=this.lossFunctions[h](o[h],f[h]);s[h]!=null&&(x=SF(x,s[h]));let y=Rt(x);t.push(y),h===0?d=x:d=X(d,x)}for(let h=0;h<this.metricsTensors.length;++h){let g;if(this.outputs.length>1&&h<this.outputs.length)g=t[h];else{let x=this.metricsTensors[h][0],y=this.metricsTensors[h][1];g=Rt(x(o[y],f[y]))}Vt(g),i.push(g)}return d=Rt(d),this.calculateLosses().forEach(h=>{d=X(d,h)}),d},u=this.collectedTrainableWeights.map(c=>c.read()),l=!0;return[this.optimizer_.minimize(a,l,u)].concat(i)}}makeTestFunction(){this.testFunction=e=>G(()=>{let t=[],n,o=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let l=0;l<this.inputs.length;++l)i.push({key:this.inputs[l],value:o[l]});let a=new Aa(i),u=mp(this.outputs,a);for(let l=0;l<this.lossFunctions.length;++l){let p=this.lossFunctions[l],c=Rt(p(s[l],u[l]));l===0?n=c:n=X(n,c),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let p=this.metricsTensors[l][0],c=this.metricsTensors[l][1],m=Rt(p(s[c],u[c]));t.push(m)}return t})}async fit(e,t,n={}){return FF(this,e,t,n)}async fitDataset(e,t){return NF(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),o=n[0],s=n[1],a=this.makeTrainFunction()(o.concat(s)),u=[];for(let l of a){let p=await l.data();u.push(p[0])}return Ee(a),Nr(u)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,o=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let i=0;i<o.length;++i)n&&!o[i].trainable||t.push({name:o[i].originalName,tensor:s[i]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=Tf().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Tf().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Rs(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Rs(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let o of t)if(typeof n[o]=="string")e[o]=Rs(n[o]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Rs(yd(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Rs(yd(e)));{let e={};for(let t in this.metrics)e[t]=Rs(yd(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=cp(e.optimizer_config),n=hn(t),o;if(typeof e.loss=="string")o=au(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(i=>au(i));else if(e.loss!=null){o={};for(let i in e.loss)o[i]=au(e.loss[i])}let s;if(Array.isArray(e.metrics))s=e.metrics.map(i=>au(i));else if(e.metrics!=null){s={};for(let i in e.metrics)s[i]=au(e.metrics[i])}this.compile({loss:o,metrics:s,optimizer:n})}async save(e,t){if(typeof e=="string"){let l=Ur.getSaveHandlers(e);if(l.length===0)throw new O(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new O(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new O("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Ur.encodeWeights(this.getNamedWeights(t)),o=!1,s=null,a={modelTopology:this.toJSON(s,o),format:_Q,generatedBy:`TensorFlow.js tfjs-layers v${xd}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();let l="optimizer",{data:p,specs:c}=await Ur.encodeWeights(await this.optimizer.getWeights(),l);n.specs.push(...c),n.data=Ur.concatenateArrayBuffers([n.data,p])}if(this.userDefinedMetadata!=null){let l=!0;WC(this.userDefinedMetadata,this.name,l),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){WC(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};Xo.className="Model";re.registerClass(Xo);var HC=class extends Xo{};HC.className="Functional";re.registerClass(HC);async function LF(r,e){"modelTopology"in r||(r={modelTopology:r}),r=r;let t=r.modelTopology;t.model_config!=null&&(t=t.model_config);let n=cp(t),o=hn(n,e);if(r.weightsManifest!=null){let s=await Ur.loadWeights(r.weightsManifest,r.pathPrefix,o.weights.map(a=>a.originalName)),i={};for(let a of o.weights)i[a.originalName]=s[a.originalName];o.loadWeights(i),Ee(s)}return o}async function BF(r,e){if(e==null&&(e={}),typeof r=="string"){let t=Ur.getLoadHandlers(r,e);if(t.length===0)t.push(Ur.browserHTTPRequest(r,e));else if(t.length>1)throw new O(`Found more than one (${t.length}) load handlers for URL '${r}'`);r=t[0]}return AQ(r,void 0,e)}async function AQ(r,e,t){if(t==null&&(t={}),r.load==null)throw new O("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let n=await r.load(),o=n.modelTopology;o.model_config!=null&&(o=o.model_config);let s=t.strict==null?!0:t.strict,i=n.weightData!=null&&n.weightSpecs!=null&&s,a=hn(cp(o),e,i),u=n.trainingConfig;if(u!=null&&a.loadTrainingConfig(u),n.userDefinedMetadata!=null&&a.setUserDefinedMetadata(n.userDefinedMetadata),n.weightData!=null){if(n.weightSpecs==null)throw new O("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:l,optimizerWeights:p}=NQ(n.weightData,n.weightSpecs);a.loadWeights(l,s),a.optimizer!=null&&p.length>0&&await a.optimizer.setWeights(p),Ee(l),Ee(p.map(c=>c.tensor))}return a}function NQ(r,e){let t=Ur.decodeWeights(r,e),n={},o=[];return e.forEach(s=>{s.group==="optimizer"?o.push({name:s.name,tensor:t[s.name]}):n[s.name]=t[s.name]}),{modelWeights:n,optimizerWeights:o}}var Ty=class extends Xo{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Xu("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new O(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof Ty||e instanceof Xo,n;if(t){if(n=e,n.outputs.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new O("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new O("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let o=sy({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new O(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=LC(this.outputs[0])}this.inboundNodes=[],new Yu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Es(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{let o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(et(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Xo({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new en("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new en("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new en("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new en("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},o=!1){let s,i={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new O("Legacy serialization format not supported yet.");s=t}else b.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,i=t;let a=new e(i);if(!(a instanceof Ty))throw new Pe(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(let u of s){let p=hn(u,void 0,o);o&&p.setFastWeightInitDuringBuild(!0),a.add(p)}return a}set stopTraining(e){if(this.model==null)throw new O("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new O("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},um=Ty;um.className="Sequential";re.registerClass(um);function DQ(r){return new Xo(r)}function PQ(r){return new um(r)}function FQ(r,e){return e==null&&(e={}),BF(r,e)}function qC(r){return sy(r)}function MQ(r,e){cd.registerCallbackConstructor(r,e)}var gn=class extends re.Serializable{getConfig(){return{}}},XC=class extends gn{apply(e,t=1){return aF(e,t)}};XC.className="elu";re.registerClass(XC);var YC=class extends gn{apply(e){return zf(e)}};YC.className="selu";re.registerClass(YC);var QC=class extends gn{apply(e){return Hr(e)}};QC.className="relu";re.registerClass(QC);var ZC=class extends gn{apply(e){return G(()=>ru(6,Hr(e)))}};ZC.className="relu6";re.registerClass(ZC);var JC=class extends gn{apply(e){return e}};JC.className="linear";re.registerClass(JC);var ev=class extends gn{apply(e){return un(e)}};ev.className="sigmoid";re.registerClass(ev);var tv=class extends gn{apply(e){return uF(e)}};tv.className="hardSigmoid";re.registerClass(tv);var rv=class extends gn{apply(e){return ei(e)}};rv.className="softplus";re.registerClass(rv);var nv=class extends gn{apply(e){return iF(e)}};nv.className="softsign";re.registerClass(nv);var ov=class extends gn{apply(e){return Zi(e)}};ov.className="tanh";re.registerClass(ov);var Td=class extends gn{apply(e,t=-1){return Vl(e,t)}};Td.className="softmax";re.registerClass(Td);var sv=class extends gn{apply(e,t=-1){return Pf(e,t)}};sv.className="logSoftmax";re.registerClass(sv);var av=class extends gn{apply(e,t=1){return G(()=>R(un(R(e,t)),e))}};av.className="swish";re.registerClass(av);var iv=class extends gn{apply(e){return G(()=>R(e,Zi(ei(e))))}};iv.className="mish";re.registerClass(iv);function Na(r){return r.getClassName()}function uv(r,e={}){return oi(r,re.SerializationMap.getMap().classNameMap,e,"activation")}function Da(r){if(r==null){let e={};return e.className="linear",e.config={},uv(e)}if(typeof r=="string"){let e={};return e.className=r,e.config={},uv(e)}else return r instanceof gn?r:uv(r)}function lv(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var pv=class extends re.Serializable{},fp=class extends pv{constructor(e){super();lv(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return G(()=>{let t=Tt([1]);return this.hasL1&&(t=X(t,he(R(this.l1,$t(e))))),this.hasL2&&(t=X(t,he(R(this.l2,up(e))))),L(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};fp.className="L1L2";re.registerClass(fp);function $F(r){return lv(r),new fp({l1:r!=null?r.l1:null,l2:0})}function OF(r){return lv(r),new fp({l2:r!=null?r.l2:null,l1:0})}var zF={l1l2:"L1L2"};function gt(r){return Kc(r)}function GF(r,e={}){return oi(r,re.SerializationMap.getMap().classNameMap,e,"regularizer")}function _t(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in zF?zF[r]:r,config:{}};return GF(t)}else return r instanceof pv?r:GF(r)}var kd=class extends Ve{constructor(e){super(e??{});this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Ge(e);let n=Hr(e);return this.maxValue!=null&&(n=Rr(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};kd.className="ReLU";re.registerClass(kd);var Id=class extends Ve{constructor(e){super(e??{});this.DEFAULT_ALPHA=.3;e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ge(e);return $l(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Id.className="LeakyReLU";re.registerClass(Id);var Cd=class extends Ve{constructor(e){super(e??{});this.DEFAULT_ALPHA_INITIALIZER="zeros";if(e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=It(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=_t(e.alphaRegularizer),this.alphaConstraint=Yt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new O(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=et(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let o of this.sharedAxes)t[o-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let o=1;o<e.length;++o)n[o]=e[o];this.inputSpec=[new Mt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ge(e),Ul(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Ft(this.alphaInitializer),alphaRegularizer:gt(this.alphaRegularizer),alphaConstraint:Xt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Cd.className="PReLU";re.registerClass(Cd);var vd=class extends Ve{constructor(e){super(e??{});this.DEFAULT_ALPHA=1;if(e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Pe(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ge(e);return eu(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};vd.className="ELU";re.registerClass(vd);var wd=class extends Ve{constructor(e){super(e??{});this.DEFAULT_THETA=1;e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Ge(e);return R(n,J(rr(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};wd.className="ThresholdedReLU";re.registerClass(wd);var Sd=class extends Ve{constructor(e){super(e??{});this.DEFAULT_AXIS=1;e==null&&(e={}),this.softmax=new Td().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Ge(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Sd.className="Softmax";re.registerClass(Sd);function el(r,e,t){if(typeof r=="number")return Es(r,e);if(r.length!==e)throw new O(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${r.length} elements.`);for(let n=0;n<e;++n){let o=r[n];if(!rF(o))throw new O(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(r)} including a non-integer number ${o}`)}return r}function Pn(r,e,t,n,o=1){if(r==null)return r;let s=e+(e-1)*(o-1),i;return t==="same"?i=r:i=r-s+1,Math.floor((i+n-1)/n)}function Pa(r,e,t,n){if(r==null)return null;if(n==="valid")r=r*e+Sa([t-e,0]);else if(n==="same")r=r*e;else throw new O(`Unsupport padding mode: ${n}.`);return r}function _d(r,e){return G(()=>(jt(e),e==="channelsFirst"?qe(r,[0,2,3,1]):r))}function cv(r,e){return G(()=>(jt(e),e==="channelsFirst"?qe(r,[0,2,3,4,1]):r))}function EQ(r,e,t,n=1,o="valid",s,i=1){return G(()=>{if(s==null&&(s=cn()),jt(s),r.shape.length!==3)throw new O(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(e.shape.length!==3)throw new O(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new O(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(s==="channelsFirst"&&(r=qe(r,[0,2,1])),o==="causal")throw new Pe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=wf(r,e,n,o==="same"?"same":"valid","NWC",i);return t!=null&&(a=fn(a,t)),a})}function WF(r,e,t,n=[1,1],o="valid",s,i,a=null){return G(()=>{if(s==null&&(s=cn()),jt(s),r.rank!==3&&r.rank!==4)throw new O(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(e.rank!==3&&e.rank!==4)throw new O(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let u=_d(r,s);if(o==="causal")throw new Pe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Fs.conv2d({x:u,filter:e,strides:n,pad:o==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:t,activation:a}),s==="channelsFirst"&&(u=qe(u,[0,3,1,2])),u})}function RQ(r,e,t,n=[1,1,1],o="valid",s,i){return G(()=>{if(s==null&&(s=cn()),jt(s),r.rank!==4&&r.rank!==5)throw new O(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(e.rank!==4&&e.rank!==5)throw new O(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let a=cv(r,s);if(o==="causal")throw new Pe("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=_f(a,e,n,o==="same"?"same":"valid","NDHWC",i),t!=null&&(a=fn(a,t)),s==="channelsFirst"&&(a=qe(a,[0,4,1,2,3])),a})}var lm=class extends Ve{constructor(e,t){super(t);this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(lm.verifyArgs(t),this.rank=e,or(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Pe(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=el(t.kernelSize,e,"kernelSize"),this.strides=el(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,mn(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,jt(this.dataFormat),this.activation=Da(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=It(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Yt(t.biasConstraint),this.biasRegularizer=_t(t.biasRegularizer),this.activityRegularizer=_t(t.activityRegularizer),this.dilationRate=el(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new O(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new O(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new O(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Ho("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!qb(e.kernelSize,"number",1,3))throw new O(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Na(this.activation),useBias:this.useBias,biasInitializer:Ft(this.biasInitializer),biasRegularizer:gt(this.biasRegularizer),activityRegularizer:gt(this.activityRegularizer),biasConstraint:Xt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},dp=class extends lm{constructor(e,t){super(e,t);this.kernel=null;dp.verifyArgs(t),this.filters=t.filters,or(this.filters,"filters"),this.kernelInitializer=It(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Yt(t.kernelConstraint),this.kernelRegularizer=_t(t.kernelRegularizer)}build(e){e=et(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return G(()=>{e=Ge(e);let n,o=this.bias==null?null:this.bias.read(),s=Xb(this.activation.getClassName());if(s!=null&&this.rank===2)n=WF(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)n=EQ(e,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=WF(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=RQ(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Pe("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=et(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){let i=Pn(n[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);t.push(i)}let o=[e[0]];return this.dataFormat==="channelsLast"?(o=o.concat(t),o.push(this.filters)):(o.push(this.filters),o=o.concat(t)),o}getConfig(){let e={filters:this.filters,kernelInitializer:Ft(this.kernelInitializer),kernelRegularizer:gt(this.kernelRegularizer),kernelConstraint:Xt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new O(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},fv=class extends dp{constructor(e){super(2,e);fv.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!qb(e.kernelSize,"number",1,2))throw new O(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},pm=fv;pm.className="Conv2D";re.registerClass(pm);var dv=class extends dp{constructor(e){super(3,e);dv.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new O(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},cm=dv;cm.className="Conv3D";re.registerClass(cm);var Ad=class extends pm{constructor(e){super(e);if(this.inputSpec=[new Mt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=et(e),e.length!==4)throw new O("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Mt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return G(()=>{let n=Ge(e);if(n.shape.length!==4)throw new O(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],i,a;this.dataFormat==="channelsFirst"?(i=2,a=3):(i=1,a=2);let u=o[i],l=o[a],p=this.kernelSize[0],c=this.kernelSize[1],m=this.strides[0],f=this.strides[1],d=Pa(u,m,p,this.padding),h=Pa(l,f,c,this.padding),g=[s,d,h,this.filters];this.dataFormat!=="channelsLast"&&(n=qe(n,[0,2,3,1]));let x=Sf(n,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=qe(x,[0,3,1,2])),this.bias!=null&&(x=fn(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(e){e=et(e);let t=e.slice(),n,o,s;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3):(n=3,o=1,s=2);let i=this.kernelSize[0],a=this.kernelSize[1],u=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[o]=Pa(t[o],u,i,this.padding),t[s]=Pa(t[s],l,a,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Ad.className="Conv2DTranspose";re.registerClass(Ad);var Nd=class extends cm{constructor(e){super(e);if(this.inputSpec=[new Mt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=et(e),e.length!==5)throw new O("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Mt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return G(()=>{let n=Ge(e);if(n.shape.length!==5)throw new O(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],i,a,u;this.dataFormat==="channelsFirst"?(u=2,i=3,a=4):(u=1,i=2,a=3);let l=o[u],p=o[i],c=o[a],m=this.kernelSize[0],f=this.kernelSize[1],d=this.kernelSize[2],h=this.strides[0],g=this.strides[1],x=this.strides[2],y=Pa(l,h,m,this.padding),T=Pa(p,g,f,this.padding),k=Pa(c,x,d,this.padding),C=[s,y,T,k,this.filters];this.dataFormat!=="channelsLast"&&(n=qe(n,[0,2,3,4,1]));let N=LI(n,this.kernel.read(),C,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(N=qe(N,[0,4,1,2,3])),this.bias!==null&&(N=fn(N,this.bias.read(),this.dataFormat)),this.activation!==null&&(N=this.activation.apply(N)),N})}computeOutputShape(e){e=et(e);let t=e.slice(),n,o,s,i;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3,i=4):(n=4,o=1,s=2,i=3);let a=this.kernelSize[0],u=this.kernelSize[1],l=this.kernelSize[2],p=this.strides[0],c=this.strides[1],m=this.strides[2];return t[n]=this.filters,t[o]=Pa(t[o],p,a,this.padding),t[s]=Pa(t[s],c,u,this.padding),t[i]=Pa(t[i],m,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Nd.className="Conv3DTranspose";re.registerClass(Nd);var mv=class extends dp{constructor(e,t){super(e,t);this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform";this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform";this.depthwiseKernel=null;this.pointwiseKernel=null;if(t.filters==null)throw new O("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new O("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new O(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=It(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=_t(t.depthwiseRegularizer),this.depthwiseConstraint=Yt(t.depthwiseConstraint),this.pointwiseInitializer=It(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=_t(t.pointwiseRegularizer),this.pointwiseConstraint=Yt(t.pointwiseConstraint)}build(e){if(e=et(e),e.length<this.rank+2)throw new O(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new O(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],o=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let a=0;a<this.rank;++a)s.push(1);s.push(n*this.depthMultiplier,this.filters);let i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new Mt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return G(()=>{e=Ge(e);let n;if(this.rank===1)throw new Pe("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=qe(e,[0,2,3,1])),n=pC(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=fn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=qe(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ft(this.depthwiseInitializer),e.pointwiseInitializer=Ft(this.pointwiseInitializer),e.depthwiseRegularizer=gt(this.depthwiseRegularizer),e.pointwiseRegularizer=gt(this.pointwiseRegularizer),e.depthwiseConstraint=Xt(this.depthwiseConstraint),e.pointwiseConstraint=Xt(this.pointwiseConstraint),e}};mv.className="SeparableConv";var Dd=class extends mv{constructor(e){super(2,e)}};Dd.className="SeparableConv2D";re.registerClass(Dd);var hv=class extends dp{constructor(e){super(1,e);hv.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!qb(e.kernelSize,"number",1,1))throw new O(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},Pd=hv;Pd.className="Conv1D";re.registerClass(Pd);var Fd=class extends Ve{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return G(()=>{if(e=Ge(e),this.dataFormat==="channelsLast"){let n=rd(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return rd(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=rd(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return rd(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Fd.className="Cropping2D";re.registerClass(Fd);var Md=class extends Ve{constructor(e){super(e);this.DEFAULT_SIZE=[2,2];this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,JP(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return G(()=>{let n=Ge(e),o=n.shape;if(this.dataFormat==="channelsFirst"){n=qe(n,[0,2,3,1]);let s=this.size[0]*o[2],i=this.size[1]*o[3],a=this.interpolation==="nearest"?Nn.resizeNearestNeighbor(n,[s,i]):Nn.resizeBilinear(n,[s,i]);return qe(a,[0,3,1,2])}else{let s=this.size[0]*o[1],i=this.size[1]*o[2];return this.interpolation==="nearest"?Nn.resizeNearestNeighbor(n,[s,i]):Nn.resizeBilinear(n,[s,i])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Md.className="UpSampling2D";re.registerClass(Md);function LQ(r,e,t=[1,1],n="valid",o,s){return G(()=>{o==null&&(o=cn()),jt(o);let i=_d(r,o);if(r.rank!==4)throw new O(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(e.rank!==4)throw new O(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=Ji(i,e,t,n==="same"?"same":"valid","NHWC",s),o==="channelsFirst"&&(i=qe(i,[0,3,1,2])),i})}var Ed=class extends lm{constructor(e){super(2,e);this.depthwiseKernel=null;this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=It(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Yt(e.depthwiseConstraint),this.depthwiseRegularizer=_t(e.depthwiseRegularizer)}build(e){if(e=et(e),e.length<4)throw new O(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new O(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],o=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return G(()=>{e=Ge(e);let n=LQ(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=fn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=et(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Pn(t,this.kernelSize[0],this.padding,this.strides[0]),i=Pn(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],o,s,i]:[e[0],s,i,o]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ft(this.depthwiseInitializer),e.depthwiseRegularizer=gt(this.depthwiseRegularizer),e.depthwiseConstraint=Xt(this.depthwiseRegularizer),e}};Ed.className="DepthwiseConv2D";re.registerClass(Ed);function gv(r,e,t,n){if(Array.isArray(r)){if(e!=null||t!=null)throw new O("When inputs is an array, neither initialState or constants should be provided");n!=null&&(t=r.slice(r.length-n,r.length),r=r.slice(0,r.length-n)),r.length>1&&(e=r.slice(1,r.length)),r=r[0]}function o(s){return s==null||Array.isArray(s)?s:[s]}return e=o(e),t=o(t),{inputs:r,initialState:e,constants:t}}function bv(r,e,t,n=!1,o,s,i=!1,a=!1){return G(()=>{let u=e.shape.length;if(u<3)throw new O(`Input should be at least 3D, but is ${u}D.`);let l=[1,0].concat(tn(2,u));if(e=qe(e,l),s!=null)throw new Pe("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=J(J(o,"bool"),"float32"),o.rank===u-1&&(o=_r(o,-1)),o=qe(o,l)),n&&(e=yr(e,0),o!=null&&(o=yr(o,0)));let p=[],c,m=t,f=e.shape[0],d=Br(e),h;o!=null&&(h=Br(o));for(let x=0;x<f;++x){let y=d[x],T=G(()=>r(y,m));if(o==null)c=T[0],m=T[1];else{let k=G(()=>{let C=h[x],N=pe(Ar(C),C),A=X(R(T[0],C),R(m[0],N)),M=m.map((E,B)=>X(R(T[1][B],C),R(E,N)));return{output:A,newStates:M}});c=k.output,m=k.newStates}a&&p.push(c)}let g;return a&&(g=fr(p,1)),[c,g,m]})}var yv=class extends Ve{constructor(e){super(e);let t;if(e.cell==null)throw new O("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new dm({cells:e.cell}):t=e.cell,t.stateSize==null)throw new O("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Mt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return tn(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){ny(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],o;if(this.returnSequences?o=[e[0],e[1],n]:o=[e[0],n],this.returnState){let s=[];for(let i of t)s.push([e[0],i]);return[o].concat(s)}else return o}computeMask(e,t){return G(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let o=this.states.map(s=>null);return[n].concat(o)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){let t=null;if(this.numConstants!=null)throw new Pe("Constants support is not implemented in RNN yet.");ny(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,o=e.slice(2);this.inputSpec[0]=new Mt({shape:[n,null,...o]});let s=[e[0]].concat(e.slice(2));if(t!=null)throw new Pe("Constants support is not implemented in RNN yet.");this.cell.build(s);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!b.arraysEqual(this.stateSpec.map(a=>a.shape[a.shape.length-1]),i))throw new O(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(a=>new Mt({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){G(()=>{if(!this.stateful)throw new qn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>Tt([n,o])):this.states_=[Tt([n,this.cell.stateSize])];else if(e==null)Ee(this.states_),this.keptStates!=null&&(Ee(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>Tt([n,o])):this.states_[0]=Tt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Ee(this.states_);for(let o=0;o<this.states_.length;++o){let s=e[o],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,a=[n,i];if(!b.arraysEqual(s.shape,a))throw new O(`State ${o} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[o]=s}}this.states_=this.states_.map(o=>Vt(o.clone()))})}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=gv(e,n,o,this.numConstants);e=s.inputs,n=s.initialState,o=s.constants;let i=[],a=[];if(n!=null){t.initialState=n,i=i.concat(n),this.stateSpec=[];for(let l of n)this.stateSpec.push(new Mt({shape:l.shape}));a=a.concat(this.stateSpec)}if(o!=null&&(t.constants=o,i=i.concat(o),this.numConstants=o.length),i[0]instanceof dn){let l=[e].concat(i),p=this.inputSpec.concat(a),c=this.inputSpec;this.inputSpec=p;let m=super.apply(l,t);return this.inputSpec=c,m}else return super.apply(e,t)}call(e,t){return G(()=>{let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;e=Ge(e),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(e));let i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new O(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let a={training:o},l=bv((d,h)=>{let g=this.cell.call([d].concat(h),a);return[g[0],g.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),p=l[0],c=l[1],m=l[2];this.stateful&&this.resetStates(m,o);let f=this.returnSequences?c:p;return this.returnState?[f].concat(m):f})}getInitialState(e){return G(()=>{let t=Tt(e.shape);return t=he(t,[1,2]),t=iu(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?Zb(t,[1,n]):t):this.cell.stateSize>1?[Zb(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===yv.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let o=t.cell,s=hn(o,n);return new e(Object.assign(t,{cell:s}))}},zs=yv;zs.className="RNN";re.registerClass(zs);var tl=class extends Ve{},mm=class extends tl{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,or(this.units,"units"),this.activation=Da(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=It(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=It(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=It(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_t(e.kernelRegularizer),this.recurrentRegularizer=_t(e.recurrentRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.kernelConstraint=Yt(e.kernelConstraint),this.recurrentConstraint=Yt(e.recurrentConstraint),this.biasConstraint=Yt(e.biasConstraint),this.dropout=ap([1,Sa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ap([1,Sa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=et(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return G(()=>{if(e=e,e.length!==2)throw new O(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let o=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=lu({ones:()=>Ar(e),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=lu({ones:()=>Ar(n),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));let s,i=this.dropoutMask,a=this.recurrentDropoutMask;i!=null?s=Os(R(e,i),this.kernel.read()):s=Os(e,this.kernel.read()),this.bias!=null&&(s=fn(s,this.bias.read())),a!=null&&(n=R(n,a));let u=X(s,Os(n,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Na(this.activation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:gt(this.kernelRegularizer),recurrentRegularizer:gt(this.recurrentRegularizer),biasRegularizer:gt(this.biasRegularizer),activityRegularizer:gt(this.activityRegularizer),kernelConstraint:Xt(this.kernelConstraint),recurrentConstraint:Xt(this.recurrentConstraint),biasConstraint:Xt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};mm.className="SimpleRNNCell";re.registerClass(mm);var Rd=class extends zs{constructor(e){e.cell=new mm(e);super(e)}call(e,t){return G(()=>{this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return new e(t)}};Rd.className="SimpleRNN";re.registerClass(Rd);var fm=class extends tl{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.resetAfter)throw new O("GRUCell does not support reset_after parameter set to true.");this.units=e.units,or(this.units,"units"),this.activation=Da(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Da(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=It(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=It(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=It(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_t(e.kernelRegularizer),this.recurrentRegularizer=_t(e.recurrentRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.kernelConstraint=Yt(e.kernelConstraint),this.recurrentConstraint=Yt(e.recurrentConstraint),this.biasConstraint=Yt(e.biasConstraint),this.dropout=ap([1,Sa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ap([1,Sa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=et(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return G(()=>{if(e=e,e.length!==2)throw new O(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=lu({ones:()=>Ar(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=lu({ones:()=>Ar(o),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,i=this.recurrentDropoutMask,a,u,l;0<this.dropout&&this.dropout<1&&(e=R(e,s[0]));let p=Os(e,this.kernel.read());this.useBias&&(p=fn(p,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=R(o,i[0]));let c=this.recurrentKernel.read(),[m,f]=kr(c,[2*this.units,this.units],c.rank-1),d=Os(o,m),[h,g,x]=kr(p,3,p.rank-1),[y,T]=kr(d,2,d.rank-1);a=this.recurrentActivation.apply(X(h,y)),u=this.recurrentActivation.apply(X(g,T));let k=Os(R(u,o),f);l=this.activation.apply(X(x,k));let C=X(R(a,o),R(X(1,Je(a)),l));return[C,C]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Na(this.activation),recurrentActivation:Na(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:gt(this.kernelRegularizer),recurrentRegularizer:gt(this.recurrentRegularizer),biasRegularizer:gt(this.biasRegularizer),activityRegularizer:gt(this.activityRegularizer),kernelConstraint:Xt(this.kernelConstraint),recurrentConstraint:Xt(this.recurrentConstraint),biasConstraint:Xt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};fm.className="GRUCell";re.registerClass(fm);var Ld=class extends zs{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new fm(e);super(e)}call(e,t){return G(()=>{this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Ld.className="GRU";re.registerClass(Ld);var rl=class extends tl{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,or(this.units,"units"),this.activation=Da(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Da(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=It(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=It(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=It(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=_t(e.kernelRegularizer),this.recurrentRegularizer=_t(e.recurrentRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.kernelConstraint=Yt(e.kernelConstraint),this.recurrentConstraint=Yt(e.recurrentConstraint),this.biasConstraint=Yt(e.biasConstraint),this.dropout=ap([1,Sa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ap([1,Sa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var o;e=et(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let n;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,i=this.units;n=new(o=class extends Dn{apply(u,l){let p=s.apply([i]),c=new lp().apply([i]),m=s.apply([i*2]);return EC(EC(p,c),m)}},o.className="CustomInit",o)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return G(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new O(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1],s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=lu({ones:()=>Ar(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=lu({ones:()=>Ar(o),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,a=this.recurrentDropoutMask,u,l,p,c;0<this.dropout&&this.dropout<1&&(e=R(e,i[0]));let m=Os(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=R(o,a[0])),m=X(m,Os(o,this.recurrentKernel.read())),this.useBias&&(m=fn(m,this.bias.read()));let[f,d,h,g]=kr(m,4,m.rank-1);u=this.recurrentActivation.apply(f),l=this.recurrentActivation.apply(d),p=X(R(l,s),R(u,this.activation.apply(h))),c=this.recurrentActivation.apply(g);let x=R(c,this.activation.apply(p));return[x,x,p]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Na(this.activation),recurrentActivation:Na(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:gt(this.kernelRegularizer),recurrentRegularizer:gt(this.recurrentRegularizer),biasRegularizer:gt(this.biasRegularizer),activityRegularizer:gt(this.activityRegularizer),kernelConstraint:Xt(this.kernelConstraint),recurrentConstraint:Xt(this.recurrentConstraint),biasConstraint:Xt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};rl.className="LSTMCell";re.registerClass(rl);var Bd=class extends zs{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new rl(e);super(e)}call(e,t){return G(()=>{this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Bd.className="LSTM";re.registerClass(Bd);var dm=class extends tl{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return G(()=>{e=e;let n=e.slice(1),o=[];for(let a of this.cells.slice().reverse())Array.isArray(a.stateSize)?o.push(n.splice(0,a.stateSize.length)):o.push(n.splice(0,1));o.reverse();let s=[],i;for(let a=0;a<this.cells.length;++a){let u=this.cells[a];n=o[a],a===0?i=[e[0]].concat(n):i=[i[0]].concat(n),i=u.call(i,t),s.push(i.slice(1))}n=[];for(let a of s.slice().reverse())n.push(...a);return[i[0]].concat(n)})}build(e){ny(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,o)=>{wa(`RNNCell_${o}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=s=>({className:s.getClassName(),config:s.getConfig()}),o={cells:this.cells.map(t)};return{...e,...o}}static fromConfig(e,t,n={}){let o=[];for(let s of t.cells)o.push(hn(s,n));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return pd(e)}setWeights(e){let t=[];for(let n of this.cells){let o=n.weights.length,s=e.splice(o);for(let i=0;i<n.weights.length;++i)t.push([n.weights[i],s[i]])}nm(t)}};dm.className="StackedRNNCells";re.registerClass(dm);function lu(r){let{ones:e,rate:t,training:n=!1,count:o=1,dropoutFunc:s}=r,i=()=>s!=null?s(e(),t):ey(e(),t),a=()=>qu(i,e,n);return!o||o<=1?Vt(a().clone()):Array(o).fill(void 0).map(a).map(l=>Vt(l.clone()))}var xv=class extends zs{constructor(e){if(e.unroll)throw new Pe("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Pe("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Mt({ndim:5})]}call(e,t){return G(()=>{if(this.cell.dropoutMask!=null&&(Ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new O("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return G(()=>{let{stateSize:t}=this.cell,n=e.shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)],i=Tt(s);return Array.isArray(t)?Array(t.length).fill(i):[i]})}resetStates(e,t=!1){G(()=>{if(!this.stateful)throw new qn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)];if(n[0]==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Tt(s)):this.states_=[Tt(s)];else if(e==null)Ee(this.states_),this.keptStates!=null&&(Ee(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Tt(s)):this.states_[0]=Tt(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ee(this.states_);for(let a=0;a<this.states_.length;++a){let u=e[a],l=s;if(!b.arraysEqual(u.shape,l))throw new O(`State ${a} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${u.shape}`);this.states_[a]=u}}this.states_=this.states_.map(a=>Vt(a.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:o,padding:s,strides:i,dilationRate:a}=this.cell,u=t==="channelsFirst",l=e[u?3:2],p=e[u?4:3],c=Pn(l,o[0],s,i[0],a[0]),m=Pn(p,o[1],s,i[1],a[1]);return[...e.slice(0,2),...u?[n,c,m]:[c,m,n]]}};xv.className="ConvRNN2D";var hm=class extends rl{constructor(e){let{filters:t,kernelSize:n,strides:o,padding:s,dataFormat:i,dilationRate:a}=e;super({...e,units:t});this.filters=t,or(this.filters,"filters"),this.kernelSize=el(n,2,"kernelSize"),this.kernelSize.forEach(u=>or(u,"kernelSize")),this.strides=el(o||1,2,"strides"),this.strides.forEach(u=>or(u,"strides")),this.padding=s||"valid",mn(this.padding),this.dataFormat=i||"channelsLast",jt(this.dataFormat),this.dilationRate=el(a||1,2,"dilationRate"),this.dilationRate.forEach(u=>or(u,"dilationRate"))}build(e){var a;e=et(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=4,s=this.kernelSize.concat([n,this.filters*o]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){let l=this.biasInitializer,p=this.filters;u=new(a=class extends Dn{apply(m,f){let d=l.apply([p]),h=mr([p]),g=l.apply([p*2]);return Hc([d,h,g])}},a.className="CustomInit",a)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return G(()=>{if(e.length!==3)throw new O(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,o=e[0],s=e[1],i=e[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=lu({ones:()=>Ar(o),rate:this.dropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));let u=this.dropoutMask,l=(oe,ie,se)=>!ie||!ie[se]?oe:R(ie[se],oe),p=l(o,u,0),c=l(o,u,1),m=l(o,u,2),f=l(o,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=lu({ones:()=>Ar(s),rate:this.recurrentDropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));let d=this.recurrentDropoutMask,h=l(s,d,0),g=l(s,d,1),x=l(s,d,2),y=l(s,d,3),T=3,[k,C,N,A]=kr(this.kernel.read(),a,T),[M,E,B,W]=this.useBias?kr(this.bias.read(),a):[null,null,null,null];p=this.inputConv(p,k,M,this.padding),c=this.inputConv(c,C,E,this.padding),m=this.inputConv(m,N,B,this.padding),f=this.inputConv(f,A,W,this.padding);let[U,K,j,V]=kr(this.recurrentKernel.read(),a,T);h=this.recurrentConv(h,U),g=this.recurrentConv(g,K),x=this.recurrentConv(x,j),y=this.recurrentConv(y,V);let q=this.recurrentActivation.apply(X(p,h)),ee=this.recurrentActivation.apply(X(c,g)),Z=X(R(ee,i),R(q,this.activation.apply(X(m,x)))),te=R(this.recurrentActivation.apply(X(f,y)),this.activation.apply(Z));return[te,te,Z]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,o){let s=jn(e,t,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?fn(s,n,this.dataFormat):s}recurrentConv(e,t){return jn(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};hm.className="ConvLSTM2DCell";re.registerClass(hm);var $d=class extends xv{constructor(e){let t=new hm(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};$d.className="ConvLSTM2D";re.registerClass($d);var gm=class extends Ve{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let o=0;o<this.noiseShape.length;++o)n.push(this.noiseShape[o]==null?t[o]:this.noiseShape[o]);return n}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Ge(e);if(0<this.rate&&this.rate<1){let o=t.training==null?!1:t.training,s=this.getNoiseShape(n);return qu(()=>ey(n,this.rate,s,this.seed),()=>n,o)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};gm.className="Dropout";re.registerClass(gm);var Od=class extends gm{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Od.className="SpatialDropout1D";re.registerClass(Od);var zd=class extends Ve{constructor(e){super(e);this.activation=null;this.useBias=!0;this.kernel=null;this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,or(this.units,"units"),this.activation=Da(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=It(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=It(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Yt(e.kernelConstraint),this.biasConstraint=Yt(e.biasConstraint),this.kernelRegularizer=_t(e.kernelRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.activityRegularizer=_t(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=et(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=et(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Ge(e),o=Xb(this.activation.getClassName()),s;return o!=null?s=Os(n,this.kernel.read(),o,this.bias?this.bias.read():null):(s=Os(n,this.kernel.read()),this.bias!=null&&(s=fn(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let e={units:this.units,activation:Na(this.activation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:gt(this.kernelRegularizer),biasRegularizer:gt(this.biasRegularizer),activityRegularizer:gt(this.activityRegularizer),kernelConstraint:Xt(this.kernelConstraint),biasConstraint:Xt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};zd.className="Dense";re.registerClass(zd);var Gd=class extends Ve{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=et(e);for(let t of e.slice(1))if(t==null)throw new O(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],$s(e,1)]}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Ge(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let o=[0];for(let s=2;s<n.rank;++s)o.push(s);o.push(1),n=qe(n,o)}return sF(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Gd.className="Flatten";re.registerClass(Gd);var Wd=class extends Ve{constructor(e){super(e);this.supportsMasking=!0,this.activation=Da(e.activation)}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Ge(e);return this.activation.apply(n)})}getConfig(){let e={activation:Na(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Wd.className="Activation";re.registerClass(Wd);var Ud=class extends Ve{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return G(()=>(e=Ge(e),nF(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Ud.className="RepeatVector";re.registerClass(Ud);var Kd=class extends Ve{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",o=t.slice(),s=1,i=null;for(let u=0;u<o.length;++u){let l=o[u];if(this.isUnknown(l))if(i===null)i=u;else throw new O("Can only specifiy one unknown dimension.");else s*=l}let a=$s(e);if(i!==null){if(s===0||a%s!=0)throw new O(n);o[i]=a/s}else if(a!==s)throw new O(n);return o}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Ge(e),o=n.shape,s=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return L(n,s)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Kd.className="Reshape";re.registerClass(Kd);var Vd=class extends Ve{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=tn(1,e.dims.length+1);if(!b.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Mt({ndim:this.dims.length+1})]}computeOutputShape(e){e=et(e);let t=e.slice();return this.dims.forEach((n,o)=>{t[o+1]=e[n]}),t}call(e,t){return qe(Ge(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Vd.className="Permute";re.registerClass(Vd);var jd=class extends Ve{constructor(e){super(e??{});this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Ge(e),o=-1;return Rc(ti(n,this.maskValue),o)}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Ge(e),o=-1,s=!0,i=Rc(ti(n,this.maskValue),o,s);return R(n,J(i,n.dtype))})}};jd.className="Masking";re.registerClass(jd);var Hd=class extends Ve{constructor(e){super(e);this.embeddings=null;this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform";if(e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(St(e.inputLength))}this.inputDim=e.inputDim,or(this.inputDim,"inputDim"),this.outputDim=e.outputDim,or(this.outputDim,"outputDim"),this.embeddingsInitializer=It(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=_t(e.embeddingsRegularizer),this.activityRegularizer=_t(e.activityRegularizer),this.embeddingsConstraint=Yt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return G(()=>this.maskZero?(e=Ge(e),ti(e,De(e))):null)}computeOutputShape(e){if(e=et(e),this.inputLength==null)return[...e,this.outputDim];let t=St(this.inputLength);if(t.length!==e.length-1)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let o=0;o<t.length;++o){let s=t[o],i=e[o+1];if(s!=null&&i!=null&&s!==i)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);s==null&&(t[n]=i),n++}}return[e[0],...t,this.outputDim]}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Ge(e);n.dtype!=="int32"&&(n=ip(n,"int32"));let o=Jb(this.embeddings.read(),L(n,[n.size]));return L(o,et(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ft(this.embeddingsInitializer),embeddingsRegularizer:gt(this.embeddingsRegularizer),activityRegularizer:gt(this.activityRegularizer),embeddingsConstraint:Xt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Hd.className="Embedding";re.registerClass(Hd);var nl=class extends Ve{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Pe}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let o=0;o<t.length;++o){let s=e[e.length-t.length+o],i=t[o];if(s==null||i==null||s<0||i<0)n.push(null);else if(s===1)n.push(i);else if(i===1)n.push(s);else{if(s!==i)throw new O("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[et(e)]),e=e,e.length<2)throw new O(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let s of e)s!=null&&s[0]!==null&&t.push(s[0]);if(t=Bs(t),t.length>1)throw new O(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let s=1;s<e.length;++s){let i=e[s]==null?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,i)}let o=e.map(s=>s.length);e.indexOf(null)===-1&&Bs(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return G(()=>{if(e=e,this.reshapeRequired){let n=[],o=e.map(s=>s.rank);if(o.indexOf(null)===-1){let s=Sa(o);for(let i of e){let a=i.rank;for(let u=0;u<s-a;++u)i=iu(i,1);n.push(i)}return this.mergeFunction(n)}else{let s=!1;for(let u of e){let l=u.rank;if(l==null){let p=u.shape,c=p[0],m=p.slice(1).concat([c]),f=L(u,[c].concat($s(p.slice(1))));f=qe(f,[1,0]),f=L(f,m),n.push(f),s=!0}else if(l>1){let p=tn(1,l).concat([0]);n.push(qe(u,p)),s=!0}else n.push(u)}let i=this.mergeFunction(n),a=i.rank;if(s){if(a==null){let u=i.shape,l=u.length,p=u[l-1],c=[p].concat(u.slice(0,u.length-1));i=L(qe(L(i,[-1,p]),[1,0]),c)}else if(a>1){let u=[a-1].concat(tn(0,a-1));i=qe(i,u)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let o=1;o<e.length;++o){let s=e[o]==null?null:e[o].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(let o of e)o!=null&&o[0]!==null&&n.push(o[0]);return n=Bs(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return G(()=>{if(t==null)return null;if(!Array.isArray(t))throw new O("`mask` should be an Array");if(!Array.isArray(e))throw new O("`inputs` should be an Array");if(t.length!==e.length)throw new O(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(o=>o==null))return null;t=t.map(o=>o==null?o:_r(o,0));let n=t[0];for(let o=1;o<t.length-1;++o)n=jr(n,t[o]);return n})}},qd=class extends nl{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=X(t,e[n]);return t})}};qd.className="Add";re.registerClass(qd);var Xd=class extends nl{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=R(t,e[n]);return t})}};Xd.className="Multiply";re.registerClass(Xd);var Yd=class extends nl{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=X(t,e[n]);return R(1/e.length,t)})}};Yd.className="Average";re.registerClass(Yd);var Qd=class extends nl{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Hn(t,e[n]);return t})}};Qd.className="Maximum";re.registerClass(Qd);var Zd=class extends nl{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ru(t,e[n]);return t})}};Zd.className="Minimum";re.registerClass(Zd);var Jd=class extends nl{constructor(e){super(e);this.DEFAULT_AXIS=-1;e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new O("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let o of e)if(o!=null){t=!1;break}if(t)return;let n=[];for(let o=0;o<e.length;++o){let s=e[o].slice();s.splice(this.axis,1);let i=!1;for(let a of n)if(b.arraysEqual(a,s)){i=!0;break}i||n.push(s)}if(n.length>1)throw new O("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return G(()=>Hc(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new O("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),o=this.axis<0?n.length+this.axis:this.axis;for(let s of t.slice(1)){if(n[o]==null||s[o]==null){n[o]=null;break}n[o]+=s[o]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new O("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new O("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new O(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return G(()=>{let n=!0;if(t.forEach(i=>{if(i!=null){n=!1;return}}),n)return null;let o=[];for(let i=0;i<e.length;++i)t[i]==null?o.push(J(Ar(e[i]),"bool")):t[i].rank<e[i].rank?o.push(_r(t[i],-1)):o.push(t[i]);let s=ut(o,this.axis);return If(s,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Jd.className="Concatenate";re.registerClass(Jd);function eh(r,e){for(;r<0;)r+=e;return r}function BQ(r,e,t){if(r.shape.length>3||e.shape.length>3)throw new Pe("batchDot is not implemented for tensors of 4D or higher rank yet");if(b.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),b.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),r.dtype==="complex64"||e.dtype==="complex64")throw new Pe("batchDot is not implemented for complex64-type Tensors yet.");let n=r.shape.length,o=e.shape.length;t==null&&(t=[n-1,o-2]);let s=t;return G(()=>{let i;if(n>o){i=n-o;let u=[];for(let l=0;l<i;++l)u.push(1);e=L(e,e.shape.concat(u))}else if(o>n){i=o-n;let u=[];for(let l=0;l<i;++l)u.push(1);r=L(r,r.shape.concat(u))}else i=0;let a;if(r.shape.length===2&&e.shape.length===2)s[0]===s[1]?a=he(R(r,e),s[0]):a=he(R(qe(r,[1,0]),e),s[1]);else{let u=s[0]!==r.shape.length-1,l=s[1]===e.shape.length-1;a=je(r,e,u,l)}if(i>0){let u;n>o?u=n+o-3:u=n-1;let l=[];for(let p=u;p<u+i;++p)l.push(p);a=pn(a,l)}return a.shape.length===1&&(a=_r(a,1)),a})}var th=class extends nl{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){b.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Pe("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);if(t[o[0]]!==n[o[1]])throw new O(`Dimension incompatibility: ${t[o[0]]} !== ${n[o[1]]}`)}mergeFunction(e){if(e.length!==2)throw new O(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],o;return Array.isArray(this.axes)?o=this.axes.map((s,i)=>eh(s,e[i].shape.length)):o=[eh(this.axes,t.shape.length),eh(this.axes,n.shape.length)],this.normalize&&(t=md(t,o[0]),n=md(n,o[1])),BQ(t,n,o)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[eh(this.axes,e.length),eh(this.axes,t.length)],n}computeOutputShape(e){b.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Pe("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);t.splice(o[0],1),n.splice(o[1],1),n.splice(0,1);let s=t.concat(n);return s.length===1&&s.push(1),s}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};th.className="Dot";re.registerClass(th);var rh=class extends Ve{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Ge(e);return qu(()=>X(qc(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};rh.className="GaussianNoise";re.registerClass(rh);var nh=class extends Ve{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return G(()=>{this.invokeCallHook(e,t);let n=Ge(e);return this.rate>0&&this.rate<1?qu(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return R(n,qc(n.shape,1,s))},()=>n,t.training||!1):n})}};nh.className="GaussianDropout";re.registerClass(nh);var oh=class extends Ve{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ge(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return G(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return qu(()=>{let s=Ge(e),i=1.6732632423543772,a=1.0507009873554805,u=-i*a,l=Vo(va(n),this.rate);l=ip(l,"float32");let p=((1-this.rate)*(1+this.rate*u**2))**-.5,c=-p*u*this.rate,m=X(R(s,l),R(X(l,-1),u));return X(R(m,p),c)},()=>Ge(e),t.training||!1)}return e})}};oh.className="AlphaDropout";re.registerClass(oh);function sh(r,e,t,n,o,s=.001){let i;if(r.rank===2)i=_I(r,e,t,n,o,s);else if(r.rank===3)i=AI(r,e,t,n,o,s);else if(r.rank===4)i=NI(r,e,t,n,o,s);else throw new Pe(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return i}function $Q(r,e,t,n,o=.001){return G(()=>{let s=zc(r,n),i=s.mean,a=s.variance;return[sh(r,i,a,t,e,o),i,a]})}function OQ(r,e,t,n,o=.001){return G(()=>{let s=zc(r,n),i=s.mean,a=s.variance,u=[];for(let d of tn(0,r.rank))n.indexOf(d)!==-1?u.push(1):u.push(r.shape[d]);let l=L(i,u),p=L(a,u),c=e==null?null:L(e,u),m=t==null?null:L(t,u);return[sh(r,l,p,m,c,o),i,a]})}function zQ(r,e,t,n,o=.001){return b.arraysEqual(n.slice().sort(),tn(0,r.rank-1))?$Q(r,e,t,n,o):OQ(r,e,t,n,o)}var ah=class extends Ve{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=It(e.betaInitializer||"zeros"),this.gammaInitializer=It(e.gammaInitializer||"ones"),this.movingMeanInitializer=It(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=It(e.movingVarianceInitializer||"ones"),this.betaConstraint=Yt(e.betaConstraint),this.gammaConstraint=Yt(e.gammaConstraint),this.betaRegularizer=_t(e.betaRegularizer),this.gammaRegularizer=_t(e.gammaRegularizer)}build(e){e=et(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new O(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Mt({ndim:e.length,axes:{[t]:n}})];let o=[n];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return G(()=>{let n=t.training==null?!1:t.training,o=Ge(e),s=o.shape,i=s.length,a=tn(0,i),u=this.axis>=0?this.axis:this.axis+i;a.splice(u,1);let l=Es(1,i);l[u]=s[u];let p=a.slice();p.sort();let c=!b.arraysEqual(p,tn(0,i).slice(0,i-1)),m=()=>{if(c){let y=L(this.movingMean.read(),l),T=L(this.movingVariance.read(),l),k=this.center?L(this.beta.read(),l):null,C=this.scale?L(this.gamma.read(),l):null;return sh(o,y,T,k,C,this.epsilon)}else return sh(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return m();let[f,d,h]=zQ(o,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(y,T,k)=>{G(()=>{let C=1-k,N=y.read(),A=R(pe(N,T),C);y.write(pe(N,A))})};return(()=>{g(this.movingMean,d,this.momentum),g(this.movingVariance,h,this.momentum)})(),f})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ft(this.betaInitializer),gammaInitializer:Ft(this.gammaInitializer),movingMeanInitializer:Ft(this.movingMeanInitializer),movingVarianceInitializer:Ft(this.movingVarianceInitializer),betaRegularizer:gt(this.betaRegularizer),gammaRegularizer:gt(this.gammaRegularizer),betaConstraint:Xt(this.betaConstraint),gammaConstraint:Xt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};ah.className="BatchNormalization";re.registerClass(ah);var ih=class extends Ve{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=It(e.betaInitializer||"zeros"),this.gammaInitializer=It(e.gammaInitializer||"ones"),this.betaRegularizer=_t(e.betaRegularizer),this.gammaRegularizer=_t(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=et(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(let s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==Bs(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(s=>e[s]),o=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(e,t){let n=Ge(e),o=n.shape,s=o.length;return G(()=>{let i=!0,{mean:a,variance:u}=zc(n,this.axis,i),l=Es(1,s);for(let h of this.axis)l[h]=o[h];let p=h=>h!=null&&h.shape.length!==s?L(h,l):h,c=p(this.gamma.read()),m=p(this.beta.read()),f=[],d=[];for(let h=0;h<s;++h)this.axis.indexOf(h)!==-1?(f.push(o[h]),d.push(1)):(f.push(1),d.push(o[h]));return a=Vr(a,f),u=Vr(u,f),c=Vr(c,d),m=Vr(m,d),sh(n,a,u,m,c,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ft(this.betaInitializer),gammaInitializer:Ft(this.gammaInitializer),betaRegularizer:gt(this.betaRegularizer),gammaRegularizer:gt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};ih.className="LayerNormalization";re.registerClass(ih);function GQ(r,e,t){return G(()=>{if(r.rank!==4)throw new O(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new O("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=cn()),t!=="channelsLast"&&t!=="channelsFirst")throw new O(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return t==="channelsFirst"?n=[[0,0],[0,0],e[0],e[1]]:n=[[0,0],e[0],e[1],[0,0]],_n(r,n)})}var uh=class extends Ve{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?cn():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new O(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new O(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new O(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Mt({ndim:4})]}computeOutputShape(e){e=et(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return G(()=>GQ(Ge(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};uh.className="ZeroPadding2D";re.registerClass(uh);function ky(r,e,t,n,o,s){return G(()=>{jt(o),FC(s),mn(n),t==null&&(t=[1,1]),n==null&&(n="valid"),o==null&&(o=cn()),s==null&&(s="max"),r=_d(r,o);let i,a=n==="same"?"same":"valid";return s==="max"?i=Gl(r,e,t,a):i=Ml(r,e,t,a),o==="channelsFirst"&&(i=qe(i,[0,3,1,2])),i})}function UF(r,e,t,n,o,s){return G(()=>{jt(o),FC(s),mn(n),t==null&&(t=[1,1,1]),n==null&&(n="valid"),o==null&&(o=cn()),s==null&&(s="max"),r=cv(r,o);let i,a=n==="same"?"same":"valid";return s==="max"?i=Ef(r,e,t,a):i=Cf(r,e,t,a),o==="channelsFirst"&&(i=qe(i,[0,4,1,2,3])),i})}var Tv=class extends Ve{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new O(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(or(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new O(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);or(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,mn(this.padding),this.inputSpec=[new Mt({ndim:3})]}computeOutputShape(e){e=et(e);let t=Pn(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return G(()=>{this.invokeCallHook(e,t),e=iu(Ge(e),2);let n=this.poolingFunction(Ge(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return pn(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},lh=class extends Tv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),mn(o),ky(e,t,n,o,s,"max")}};lh.className="MaxPooling1D";re.registerClass(lh);var ph=class extends Tv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),mn(o),ky(e,t,n,o,s,"avg")}};ph.className="AveragePooling1D";re.registerClass(ph);var kv=class extends Ve{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new O(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];or(this.poolSize,"poolSize"),or(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),mn(this.padding),this.inputSpec=[new Mt({ndim:4})]}computeOutputShape(e){e=et(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Pn(t,this.poolSize[0],this.padding,this.strides[0]),n=Pn(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return G(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ge(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},ch=class extends kv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),mn(o),ky(e,t,n,o,s,"max")}};ch.className="MaxPooling2D";re.registerClass(ch);var mh=class extends kv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),mn(o),ky(e,t,n,o,s,"avg")}};mh.className="AveragePooling2D";re.registerClass(mh);var Iv=class extends Ve{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new O(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];or(this.poolSize,"poolSize"),or(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),mn(this.padding),this.inputSpec=[new Mt({ndim:5})]}computeOutputShape(e){e=et(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Pn(t,this.poolSize[0],this.padding,this.strides[0]),n=Pn(n,this.poolSize[1],this.padding,this.strides[1]),o=Pn(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,o]:[e[0],t,n,o,e[4]]}call(e,t){return G(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ge(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},fh=class extends Iv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),mn(o),UF(e,t,n,o,s,"max")}};fh.className="MaxPooling3D";re.registerClass(fh);var dh=class extends Iv{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return jt(s),mn(o),UF(e,t,n,o,s,"avg")}};dh.className="AveragePooling3D";re.registerClass(dh);var Cv=class extends Ve{constructor(e){super(e);this.inputSpec=[new Mt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Pe}},hh=class extends Cv{constructor(e){super(e||{})}call(e,t){return G(()=>{let n=Ge(e);return Rt(n,1)})}};hh.className="GlobalAveragePooling1D";re.registerClass(hh);var gh=class extends Cv{constructor(e){super(e||{})}call(e,t){return G(()=>{let n=Ge(e);return Zr(n,1)})}};gh.className="GlobalMaxPooling1D";re.registerClass(gh);var vv=class extends Ve{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),this.inputSpec=[new Mt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Pe}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},bh=class extends vv{call(e,t){return G(()=>{let n=Ge(e);return this.dataFormat==="channelsLast"?Rt(n,[1,2]):Rt(n,[2,3])})}};bh.className="GlobalAveragePooling2D";re.registerClass(bh);var yh=class extends vv{call(e,t){return G(()=>{let n=Ge(e);return this.dataFormat==="channelsLast"?Zr(n,[1,2]):Zr(n,[2,3])})}};yh.className="GlobalMaxPooling2D";re.registerClass(yh);var wv=class extends Ve{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let o=t.layer,s=hn(o,n);delete t.layer;let i={layer:s};return Object.assign(i,t),new e(i)}},xh=class extends wv{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=et(e),e.length<3)throw new O(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=et(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),o=e[1];return[n[0],o].concat(n.slice(1))}call(e,t){return G(()=>(e=Ge(e),bv((i,a)=>[Ge(this.layer.call(i,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};xh.className="TimeDistributed";re.registerClass(xh);function WQ(r){si(ZP,"BidirectionalMergeMode",r)}var UQ="concat",Th=class extends wv{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=hn(n),t.goBackwards=t.goBackwards!==!0;let o={};if(o.className=e.layer.getClassName(),o.config=t,this.backwardLayer=hn(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?UQ:e.mergeMode,WQ(this.mergeMode),e.weights)throw new Pe("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,o,s;return this.returnState&&(s=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,o=[n]):this.mergeMode==null?o=[n,n.slice()]:o=[n],this.returnState?this.mergeMode==null?o.concat(s).concat(s.slice()):[n].concat(s).concat(s.slice()):Nr(o)}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=gv(e,n,o,this.numConstants);if(e=s.inputs,n=s.initialState,o=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&o==null)return super.apply(e,t);let i=[],a=[];if(n!=null){let l=n.length;if(l%2>0)throw new O("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,i.push(...n);let p=n.map(c=>new Mt({shape:c.shape}));this.forwardLayer.stateSpec=p.slice(0,l/2),this.backwardLayer.stateSpec=p.slice(l/2),a.push(...p)}if(o!=null)throw new Pe("Support for constants in Bidirectional layers is not implemented yet.");let u=i[0]instanceof dn;for(let l of i)if(l instanceof dn!==u)throw new O("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){let l=[e].concat(i),p=this.inputSpec.concat(a),c=this.inputSpec;this.inputSpec=p;let m=super.apply(l,t);return this.inputSpec=c,m}else return super.apply(e,t)}call(e,t){return G(()=>{let n=t.initialState,o,s;if(n==null)o=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{let u=n.slice(0,n.length/2),l=n.slice(n.length/2);o=this.forwardLayer.call(e,Object.assign(t,{initialState:u})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let i;this.returnState&&(Array.isArray(o)&&(i=o.slice(1).concat(s.slice(1))),o=o[0],s=s[0]),this.returnSequences&&(s=yr(s,1));let a;return this.mergeMode==="concat"?a=Hc([o,s]):this.mergeMode==="sum"?a=X(o,s):this.mergeMode==="ave"?a=R(.5,X(o,s)):this.mergeMode==="mul"?a=R(o,s):this.mergeMode==null&&(a=[o,s]),this.returnState?this.mergeMode==null?a.concat(i):[a].concat(i):a})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){wa(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),wa(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let s=this.forwardLayer.states.map(i=>null);return Array.isArray(n)?n.concat(s).concat(s):[n].concat(s).concat(s)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=hn(t.layer);if(delete t.layer,t.numConstants!=null)throw new Pe("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let o=t;return o.layer=n,new e(o)}};Th.className="Bidirectional";re.registerClass(Th);function KQ(r){return new ai(r)}function VQ(r){return new vd(r)}function jQ(r){return new kd(r)}function HQ(r){return new Id(r)}function qQ(r){return new Cd(r)}function XQ(r){return new Sd(r)}function YQ(r){return new wd(r)}function QQ(r){return new Pd(r)}function ZQ(r){return new pm(r)}function JQ(r){return new Ad(r)}function eZ(r){return new cm(r)}function tZ(r){return new Nd(r)}function rZ(r){return new Dd(r)}function nZ(r){return new Fd(r)}function oZ(r){return new Md(r)}function sZ(r){return new Ed(r)}function aZ(r){return new Wd(r)}function iZ(r){return new zd(r)}function uZ(r){return new gm(r)}function lZ(r){return new Od(r)}function pZ(r){return new Gd(r)}function cZ(r){return new Ud(r)}function mZ(r){return new Kd(r)}function fZ(r){return new Vd(r)}function dZ(r){return new Hd(r)}function hZ(r){return new qd(r)}function gZ(r){return new Yd(r)}function bZ(r){return new Jd(r)}function yZ(r){return new Qd(r)}function xZ(r){return new Zd(r)}function TZ(r){return new Xd(r)}function kZ(r){return new th(r)}function IZ(r){return new ah(r)}function CZ(r){return new ih(r)}function vZ(r){return new uh(r)}function Sv(r){return new ph(r)}function wZ(r){return Sv(r)}function SZ(r){return Sv(r)}function _v(r){return new mh(r)}function _Z(r){return _v(r)}function AZ(r){return _v(r)}function Av(r){return new dh(r)}function NZ(r){return Av(r)}function DZ(r){return Av(r)}function PZ(r){return new hh(r)}function FZ(r){return new bh(r)}function KF(r){return new gh(r)}function VF(r){return new yh(r)}function jF(r){return new lh(r)}function HF(r){return new ch(r)}function MZ(r){return new fh(r)}function EZ(r){return new Ld(r)}function RZ(r){return new fm(r)}function LZ(r){return new Bd(r)}function BZ(r){return new rl(r)}function $Z(r){return new Rd(r)}function OZ(r){return new mm(r)}function zZ(r){return new $d(r)}function GZ(r){return new hm(r)}function WZ(r){return new zs(r)}function UZ(r){return new dm(r)}function KZ(r){return new Th(r)}function VZ(r){return new xh(r)}var jZ=KF,HZ=VF,qZ=jF,XZ=HF;function YZ(r){return new rh(r)}function QZ(r){return new nh(r)}function ZZ(r){return new oh(r)}function JZ(r){return new jd(r)}var XF={};Ye(XF,{MAPE:()=>p9,MSE:()=>f9,binaryAccuracy:()=>e9,binaryCrossentropy:()=>t9,categoricalAccuracy:()=>n9,categoricalCrossentropy:()=>o9,cosineProximity:()=>i9,mape:()=>c9,meanAbsoluteError:()=>u9,meanAbsolutePercentageError:()=>l9,meanSquaredError:()=>m9,mse:()=>d9,precision:()=>s9,recall:()=>a9,sparseCategoricalAccuracy:()=>r9});function e9(r,e){return hd(r,e)}function t9(r,e){return py(r,e)}function r9(r,e){return cy(r,e)}function n9(r,e){return gd(r,e)}function o9(r,e){return bd(r,e)}function s9(r,e){return zC(r,e)}function a9(r,e){return yF(r,e)}function i9(r,e){return fd(r,e)}function u9(r,e){return om(r,e)}function l9(r,e){return Zu(r,e)}function p9(r,e){return Zu(r,e)}function c9(r,e){return Zu(r,e)}function m9(r,e){return ui(r,e)}function f9(r,e){return ui(r,e)}function d9(r,e){return ui(r,e)}var YF={};Ye(YF,{modelFromJSON:()=>LF});var QF={};Ye(QF,{l1:()=>g9,l1l2:()=>h9,l2:()=>b9});function h9(r){return new fp(r)}function g9(r){return $F(r)}function b9(r){return OF(r)}var Nv=class extends Qu{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof Xo))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Iy(r,e){return r<e}function ZF(r,e){return r>e}var Dv=class extends Nv{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Pe("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Iy:this.mode==="max"?this.monitorFunc=ZF:this.monitor.indexOf("acc")!==-1?this.monitorFunc=ZF:this.monitorFunc=Iy,this.monitorFunc===Iy&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Iy?1/0:-1/0}async onEpochEnd(e,t){await ii(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function y9(r){return new Dv(r)}var x9={earlyStopping:y9};var T9=$();T9.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var Yo;(function(Y){Y[Y.DT_INVALID=0]="DT_INVALID",Y[Y.DT_FLOAT=1]="DT_FLOAT",Y[Y.DT_DOUBLE=2]="DT_DOUBLE",Y[Y.DT_INT32=3]="DT_INT32",Y[Y.DT_UINT8=4]="DT_UINT8",Y[Y.DT_INT16=5]="DT_INT16",Y[Y.DT_INT8=6]="DT_INT8",Y[Y.DT_STRING=7]="DT_STRING",Y[Y.DT_COMPLEX64=8]="DT_COMPLEX64",Y[Y.DT_INT64=9]="DT_INT64",Y[Y.DT_BOOL=10]="DT_BOOL",Y[Y.DT_QINT8=11]="DT_QINT8",Y[Y.DT_QUINT8=12]="DT_QUINT8",Y[Y.DT_QINT32=13]="DT_QINT32",Y[Y.DT_BFLOAT16=14]="DT_BFLOAT16",Y[Y.DT_QINT16=15]="DT_QINT16",Y[Y.DT_QUINT16=16]="DT_QUINT16",Y[Y.DT_UINT16=17]="DT_UINT16",Y[Y.DT_COMPLEX128=18]="DT_COMPLEX128",Y[Y.DT_HALF=19]="DT_HALF",Y[Y.DT_RESOURCE=20]="DT_RESOURCE",Y[Y.DT_VARIANT=21]="DT_VARIANT",Y[Y.DT_UINT32=22]="DT_UINT32",Y[Y.DT_UINT64=23]="DT_UINT64",Y[Y.DT_FLOAT_REF=101]="DT_FLOAT_REF",Y[Y.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",Y[Y.DT_INT32_REF=103]="DT_INT32_REF",Y[Y.DT_UINT8_REF=104]="DT_UINT8_REF",Y[Y.DT_INT16_REF=105]="DT_INT16_REF",Y[Y.DT_INT8_REF=106]="DT_INT8_REF",Y[Y.DT_STRING_REF=107]="DT_STRING_REF",Y[Y.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",Y[Y.DT_INT64_REF=109]="DT_INT64_REF",Y[Y.DT_BOOL_REF=110]="DT_BOOL_REF",Y[Y.DT_QINT8_REF=111]="DT_QINT8_REF",Y[Y.DT_QUINT8_REF=112]="DT_QUINT8_REF",Y[Y.DT_QINT32_REF=113]="DT_QINT32_REF",Y[Y.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",Y[Y.DT_QINT16_REF=115]="DT_QINT16_REF",Y[Y.DT_QUINT16_REF=116]="DT_QUINT16_REF",Y[Y.DT_UINT16_REF=117]="DT_UINT16_REF",Y[Y.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",Y[Y.DT_HALF_REF=119]="DT_HALF_REF",Y[Y.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",Y[Y.DT_VARIANT_REF=121]="DT_VARIANT_REF",Y[Y.DT_UINT32_REF=122]="DT_UINT32_REF",Y[Y.DT_UINT64_REF=123]="DT_UINT64_REF"})(Yo||(Yo={}));var JF;(function(e){let r;(function(s){s[s.LEGACY=0]="LEGACY",s[s.V1=1]="V1",s[s.V2=2]="V2"})(r=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(JF||(JF={}));var Pv={};function k9(r,e){let t={tfOpName:r,category:"custom",inputs:[],attrs:[],customExecutor:e};Pv[r]=t}function Cy(r){return Pv[r]}function I9(r){delete Pv[r]}function w(r,e,t,n,o){let s=e.inputParams[r];if(s&&s.inputIndexStart!==void 0){let a=s.inputIndexStart,u=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?a+1:s.inputIndexEnd;if(s.type==="tensor")return Ir(e.inputNames[s.inputIndexStart],t,n,o);if(s.type==="tensors")return e.inputNames.slice(a,u).map(m=>Ir(m,t,n,o));let l=Ir(e.inputNames.slice(a)[0],t,n,o),p=l.dataSync();return s.type==="number"?p[0]:b.toNestedArray(l.shape,p)}let i=e.attrParams[r];return i&&i.value}function Ir(r,e,t,n){let[o,s]=bn(r);if(n!=null){let a=n.getHashTableHandleByName(o);if(a!=null)return a}let i=t.currentContextIds.find(a=>!!e[vy(o,a)]);return i!==void 0?e[vy(o,i)][s]:void 0}function eM(r,e,t){return e[vy(r,t.currentContextId)]}function Gs(r,e){let[t,n,o]=bn(r);return[vy(t,e&&e.currentContextId),n,o]}function vy(r,e){return e?`${r}-${e}`:r}function bn(r){let e=r.split(":");if(e.length===1)return[r,0,void 0];let t=e[0],n=e.length===3?e[1]:void 0,o=Number(e[e.length-1]);return[t,o,n]}function kh(r,e,t){let n=w("pad",r,e,t);if(n==="explicit"){n=w("explicitPaddings",r,e,t);let o=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)o[s][0]=n[s*2],o[s][1]=n[s*2+1];return o}return n}function Fa(r){return r.kept?r:wn(r)}var Fv={};Ye(Fv,{json:()=>C9});var C9=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var Mv={};Ye(Mv,{json:()=>v9});var v9=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var Ev={};Ye(Ev,{json:()=>w9});var w9=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}];var Rv={};Ye(Rv,{json:()=>S9});var S9=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var Lv={};Ye(Lv,{json:()=>_9});var _9=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var Bv={};Ye(Bv,{json:()=>A9});var A9=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var $v={};Ye($v,{json:()=>N9});var N9=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var Ov={};Ye(Ov,{json:()=>D9});var D9=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var zv={};Ye(zv,{json:()=>P9});var P9=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}];var Gv={};Ye(Gv,{json:()=>F9});var F9=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}];var Wv={};Ye(Wv,{json:()=>M9});var M9=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var Uv={};Ye(Uv,{json:()=>E9});var E9=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}];var Kv={};Ye(Kv,{json:()=>R9});var R9=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var Vv={};Ye(Vv,{json:()=>L9});var L9=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var jv={};Ye(jv,{json:()=>B9});var B9=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var Hv={};Ye(Hv,{json:()=>$9});var $9=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var qv={};Ye(qv,{json:()=>O9});var O9=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var Xv={};Ye(Xv,{json:()=>z9});var z9=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var Yv={};Ye(Yv,{json:()=>G9});var G9=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var wy=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[Fv,Mv,Ev,Rv,Lv,Bv,$v,Ov,zv,Gv,Wv,Uv,Kv,Vv,jv,Hv,qv,Xv,Yv],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,o)=>(n[o.tfOpName]=o,n),{})}transformGraph(e,t={}){let n=e.node,o=[],s=[],i=[],a=n.reduce((h,g)=>(h[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?o.push(h[g.name]):g.op==="Const"?s.push(h[g.name]):(g.input==null||g.input.length===0)&&i.push(h[g.name]),h),{}),u=[],l=[],p={},c={};t!=null&&(p=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));let m=Object.keys(a);m.forEach(h=>{let g=a[h];g.inputNames.forEach((x,y)=>{let[T,,k]=Gs(x),C=a[T];if(C.outputs!=null){let N=C.outputs.indexOf(k);if(N!==-1){let A=`${T}:${N}`;g.inputNames[y]=A}}g.inputs.push(C),C.children.push(g)})}),Object.keys(c).length===0?m.forEach(h=>{let g=a[h];g.children.length===0&&l.push(g)}):Object.keys(c).forEach(h=>{let[g]=Gs(h),x=a[g];x!=null&&(x.signatureKey=c[h],l.push(x))}),Object.keys(p).length>0?Object.keys(p).forEach(h=>{let[g]=Gs(h),x=a[g];x&&(x.signatureKey=p[h],u.push(x))}):u=o;let f={};e.library!=null&&e.library.function!=null&&(f=e.library.function.reduce((h,g)=>(h[g.signature.name]=this.mapFunction(g),h),{}));let d={nodes:a,inputs:u,outputs:l,weights:s,placeholders:o,signature:t,functions:f};return i.length>0&&(d.initNodes=i),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=Cy(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(o=>o.startsWith("^")?o.substr(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((o,s)=>(o[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},o),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((o,s)=>{let i=s.type,a;switch(s.type){case"string":a=Sy(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=Sy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":a=My(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=My(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":a=Ay(e.attr,s.tfName,s.defaultValue||0),a===void 0&&!!s.tfDeprecatedName&&(a=Ay(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":a=Fy(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=Fy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":a=_y(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=_y(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":a=Ry(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=Ry(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":a=Py(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=Py(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":a=Ey(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=Ey(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":a=Ny(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=Ny(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":a=Dy(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=Dy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":a=rM(e.attr,s.tfName,s.defaultValue),a===void 0&&!!s.tfDeprecatedName&&(a=rM(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${e.op}`)}return o[s.name]={value:a,type:i},o},{})),n}mapFunction(e){let t=e.nodeDef,n=[],o=[],s={};t!=null&&(s=t.reduce((c,m)=>(c[m.name]=this.mapNode(m),m.op==="Const"&&o.push(c[m.name]),c),{}));let i=[],a=[];e.signature.inputArg.forEach(c=>{let[m]=Gs(c.name),f={name:m,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Qv(c.type),type:"dtype"}},children:[]};f.signatureKey=c.name,i.push(f),s[m]=f}),Object.keys(s).forEach(c=>{let m=s[c];m.inputNames.forEach((f,d)=>{let[h,,g]=Gs(f),x=s[h];if(x.outputs!=null){let y=x.outputs.indexOf(g);if(y!==-1){let T=`${h}:${y}`;m.inputNames[d]=T}}m.inputs.push(x),x.children.push(m)})});let l=e.ret;e.signature.outputArg.forEach(c=>{let[m,f]=Gs(l[c.name]),d=s[m];d!=null&&(d.defaultOutput=f,a.push(d))});let p=this.mapArgsToSignature(e);return{nodes:s,inputs:i,outputs:a,weights:o,placeholders:n,signature:p}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function W9(r){let e=$().global;if(typeof e.atob!="undefined")return e.atob(r);if(typeof Buffer!="undefined")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function tM(r,e){let t=Array.isArray(r)?String.fromCharCode.apply(null,r):W9(r);return e?t:t.toLowerCase()}function Sy(r,e,t,n=!1){let o=r[e];return o!=null?tM(o.s,n):t}function _y(r,e,t){let n=r[e];return n?n.b:t}function Ay(r,e,t){let n=r[e]||{},o=n.i!=null?n.i:n.f!=null?n.f:t;return typeof o=="number"?o:parseInt(o,10)}function Qv(r){switch(typeof r=="string"&&(r=Yo[r]),r){case Yo.DT_FLOAT:case Yo.DT_HALF:return"float32";case Yo.DT_INT32:case Yo.DT_INT64:case Yo.DT_INT8:case Yo.DT_UINT8:return"int32";case Yo.DT_BOOL:return"bool";case Yo.DT_DOUBLE:return"float32";case Yo.DT_STRING:return"string";default:return null}}function rM(r,e,t){let n=r[e];return n&&n.func?n.func.name:t}function Ny(r,e,t){let n=r[e];return n&&n.type?Qv(n.type):t}function Dy(r,e,t){let n=r[e];return n&&n.list&&n.list.type?n.list.type.map(o=>Qv(o)):t}function nM(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function Py(r,e,t){let n=r[e];return n&&n.shape?nM(n.shape):t}function Fy(r,e,t){let n=r[e];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):t}function My(r,e,t,n=!1){let o=r[e];return o&&o.list&&o.list.s?o.list.s.map(s=>tM(s,n)):t}function Ey(r,e,t){let n=r[e];return n&&n.list&&n.list.shape?n.list.shape.map(o=>nM(o)):t}function Ry(r,e,t){let n=r[e];return n&&n.list&&n.list.b?n.list.b:t}var Zv=class{constructor(e,t,n){this.node=e;this.tensorMap=t;this.context=n;this.inputs=[];this.attrs={};this.inputs=e.inputNames.map(o=>this.getInput(o)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((o,s)=>(o[s]=this.getAttr(s),o),{}))}getInput(e){return Ir(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return Ir(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return Ay(this.node.rawAttrs,e,t);if(n.s!=null)return Sy(this.node.rawAttrs,e,t);if(n.b!=null)return _y(this.node.rawAttrs,e,t);if(n.shape!=null)return Py(this.node.rawAttrs,e,t);if(n.type!=null)return Ny(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return Fy(this.node.rawAttrs,e,t);if(n.list.s!=null)return My(this.node.rawAttrs,e,t);if(n.list.shape!=null)return Ey(this.node.rawAttrs,e,t);if(n.list.b!=null)return Ry(this.node.rawAttrs,e,t);if(n.list.type!=null)return Dy(this.node.rawAttrs,e,t)}return t}};var oM=(r,e,t)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[X(w("a",r,e,t),w("b",r,e,t))];case"AddN":return[bI(w("tensors",r,e,t))];case"FloorMod":case"Mod":return[JI(w("a",r,e,t),w("b",r,e,t))];case"Mul":return[R(w("a",r,e,t),w("b",r,e,t))];case"RealDiv":case"Div":return[ce(w("a",r,e,t),w("b",r,e,t))];case"DivNoNan":return[zI(w("a",r,e,t),w("b",r,e,t))];case"FloorDiv":return[kf(w("a",r,e,t),w("b",r,e,t))];case"Sub":return[pe(w("a",r,e,t),w("b",r,e,t))];case"Minimum":return[ru(w("a",r,e,t),w("b",r,e,t))];case"Maximum":return[Hn(w("a",r,e,t),w("b",r,e,t))];case"Pow":return[An(w("a",r,e,t),w("b",r,e,t))];case"SquaredDifference":return[jf(w("a",r,e,t),w("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var sM=(r,e,t)=>{switch(r.op){case"Abs":case"ComplexAbs":return[$t(w("x",r,e,t))];case"Acos":return[hI(w("x",r,e,t))];case"Acosh":return[gI(w("x",r,e,t))];case"Asin":return[xI(w("x",r,e,t))];case"Asinh":return[TI(w("x",r,e,t))];case"Atan":return[kI(w("x",r,e,t))];case"Atan2":return[II(w("x",r,e,t),w("y",r,e,t))];case"Atanh":return[CI(w("x",r,e,t))];case"Ceil":return[PI(w("x",r,e,t))];case"Complex":return[Vn(w("real",r,e,t),w("imag",r,e,t))];case"Cos":return[Ll(w("x",r,e,t))];case"Cosh":return[Af(w("x",r,e,t))];case"Elu":return[eu(w("x",r,e,t))];case"Erf":return[WI(w("x",r,e,t))];case"Exp":return[cr(w("x",r,e,t))];case"Expm1":return[UI(w("x",r,e,t))];case"Floor":return[tu(w("x",r,e,t))];case"Log":return[Lr(w("x",r,e,t))];case"Log1p":return[Ol(w("x",r,e,t))];case"Imag":return[Bl(w("x",r,e,t))];case"Neg":return[Je(w("x",r,e,t))];case"Reciprocal":return[lC(w("x",r,e,t))];case"Real":return[ju(w("x",r,e,t))];case"Relu":return[Hr(w("x",r,e,t))];case"Round":return[$f(w("x",r,e,t))];case"Selu":return[zf(w("x",r,e,t))];case"Sigmoid":return[un(w("x",r,e,t))];case"Sin":return[Gf(w("x",r,e,t))];case"Sign":return[mC(w("x",r,e,t))];case"Sinh":return[Wf(w("x",r,e,t))];case"Softplus":return[ei(w("x",r,e,t))];case"Sqrt":return[Lt(w("x",r,e,t))];case"Square":return[Xe(w("x",r,e,t))];case"Tanh":return[Zi(w("x",r,e,t))];case"Tan":return[dC(w("x",r,e,t))];case"ClipByValue":return[Rr(w("x",r,e,t),w("clipValueMin",r,e,t),w("clipValueMax",r,e,t))];case"Relu6":return[Bf(w("x",r,e,t))];case"Rsqrt":return[Of(Ir(r.inputNames[0],e,t))];case"Prod":return[Rf(w("x",r,e,t),w("axes",r,e,t))];case"LeakyRelu":return[$l(w("x",r,e,t),w("alpha",r,e,t))];case"Prelu":return[Ul(w("x",r,e,t),w("alpha",r,e,t))];case"IsNan":return[KI(Ir(r.inputNames[0],e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Xn(r,e,t=""){if(!(typeof r=="number"||typeof e=="number")){b.assert(r.length===e.length,()=>t+` Shapes ${r} and ${e} must match`);for(let n=0;n<r.length;n++){let o=r[n],s=e[n];b.assert(o<0||s<0||o===s,()=>t+` Shapes ${r} and ${e} must match`)}}}function aM(r){return!(typeof r=="number"||r.some(e=>e<0))}function bm(r,e,t){let n=Ly(r,t),o=!aM(n);if(o&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(o&&e.forEach(s=>{n=Ly(s.shape,n)}),!aM(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function Ly(r,e){if(typeof r=="number")return e;if(typeof e=="number")return r;if(r.length!==e.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${e}`);let t=[];for(let n=0;n<r.length;++n){let o=r[n],s=e[n];if(o>=0&&s>=0&&o!==s)throw new Error(`Incompatible shape during merge: ${r} vs. ${e}`);t[n]=o>=0?o:s}return t}var Jv=class{constructor(e,t,n,o,s,i,a){this.name=e;this.dtype=t;this.maxSize=n;this.elementShape=o;this.identicalElementShapes=s;this.dynamicSize=i;this.clearAfterRead=a;this.tensors=[];this.closed_=!1;this.idTensor=me(0),Vt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Xn(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Vt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,o)=>this.write(n,t[o]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let o=0;o<this.size();o++)e.push(o)}if(e.length===0)return Mr([],[0].concat(this.elementShape));let n=this.readMany(e);return Xn(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),fr(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Mr([],[0].concat(this.elementShape));let t=[];for(let o=0;o<this.size();o++)t.push(o);let n=this.readMany(t);return Xn(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),ut(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Br(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,o=e.map(u=>(n+=u,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:t.size/n,i=[];G(()=>{t=L(t,[1,n,s]);for(let u=0;u<e.length;++u){let l=u===0?0:o[u-1],p=[0,l,0],c=[1,e[u],s];i[u]=L(We(t,p,c),this.elementShape)}return i});let a=[];for(let u=0;u<e.length;u++)a[u]=u;this.writeMany(a,i)}};var hp=class{constructor(e,t,n,o=-1){this.tensors=e;this.elementShape=t;this.elementDtype=n;e!=null&&e.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);Xn(t,s.shape,"TensorList shape mismatch: "),Vt(s)}),this.idTensor=me(0),this.maxNumElements=o,Vt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new hp([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Xn(e,this.elementShape,"TensorList shape mismatch: ");let o=bm(this.elementShape,this.tensors,e);return G(()=>{let s=this.tensors.map(i=>L(i,o));return fr(s,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=bm(this.elementShape,this.tensors,e),o=this.tensors.pop();return Xn(o.shape,e,"TensorList shape mismatch: "),L(o,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Xn(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Vt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Xn(this.tensors[e].shape,t,"TensorList shape mismatch: ");let o=bm(this.elementShape,this.tensors,t);return L(this.tensors[e],o)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Xn(this.elementShape,t.shape,"TensorList shape mismatch: "),Vt(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Xn(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let o=bm(this.elementShape,this.tensors,n);return e.length===0?Mr([],[0].concat(o)):G(()=>{let s=e.map(i=>L(this.tensors[i],o));return fr(s,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Xn(this.elementShape,t,"TensorList shape mismatch: ");let n=bm(this.elementShape,this.tensors,t);return this.size()===0?Mr([],[0].concat(n)):G(()=>{let o=this.tensors.map(s=>L(s,n));return ut(o,0)})}};function iM(r,e,t){let n=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==t)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${t}`);let o=r.shape.slice(1);Xn(o,e,"TensorList shape mismatch: ");let s=Br(r);return new hp(s,e,n)}function uM(r,e,t){return new hp([],r,e,t)}function lM(r,e,t,n){if(e.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${r.shape[0]}`);let o=Math.max(...e);if(n!=null&&n!==-1&&o>=n)throw new Error(`Max index must be < array size (${o}  vs. ${n})`);let s=new hp([],t,r.dtype,n),i=Br(r,0);return e.forEach((a,u)=>{s.setItem(a,i[u])}),s}function pM(r,e,t){let n=0,o=e.map(p=>(n+=p,n));if(n!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${r.shape}`);let s=r.shape.slice(1),i=Ly(s,t),a=n===0?0:r.size/n,u=G(()=>{let p=[];r=L(r,[1,n,a]);for(let c=0;c<e.length;++c){let m=c===0?0:o[c-1],f=[0,m,0],d=[1,e[c],a];p[c]=L(We(r,f,d),i)}return r.dispose(),p}),l=new hp([],t,r.dtype,e.length);for(let p=0;p<u.length;p++)l.setItem(p,u[p]);return l}var cM=async(r,e,t)=>{switch(r.op){case"If":case"StatelessIf":{let n=w("thenBranch",r,e,t),o=w("elseBranch",r,e,t),s=w("cond",r,e,t),i=w("args",r,e,t);return(await s.data())[0]?t.functionMap[n].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap):t.functionMap[o].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{let n=w("body",r,e,t),o=w("cond",r,e,t),s=w("args",r,e,t),i=await t.functionMap[o].executeFunctionAsync(s,t.tensorArrayMap,t.tensorListMap),a=s.map(p=>p.id),u=await i[0].data();i.forEach(p=>{!p.kept&&a.indexOf(p.id)===-1&&p.dispose()});let l=s;for(;u[0];){let p=l;l=await t.functionMap[n].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);let c=l.map(f=>f.id);p.forEach(f=>{!f.kept&&a.indexOf(f.id)===-1&&c.indexOf(f.id)===-1&&f.dispose()});let m=await t.functionMap[o].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);u=await m[0].data(),m.forEach(f=>{!f.kept&&a.indexOf(f.id)===-1&&c.indexOf(f.id)===-1&&f.dispose()})}return l}case"LoopCond":{let n=w("pred",r,e,t);return[Fa(n)]}case"Switch":{let n=w("pred",r,e,t),o=w("data",r,e,t);return o.kept||(o=Fa(o)),(await n.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{let n=r.inputNames.find(o=>Ir(o,e,t)!==void 0);if(n){let o=Ir(n,e,t);return[Fa(o)]}return}case"Enter":{let n=w("frameName",r,e,t),o=w("tensor",r,e,t);return t.enterFrame(n),[Fa(o)]}case"Exit":{let n=w("tensor",r,e,t);return t.exitFrame(),[Fa(n)]}case"NextIteration":{let n=w("tensor",r,e,t);return t.nextIteration(),[Fa(n)]}case"TensorArrayV3":{let n=w("size",r,e,t),o=w("dtype",r,e,t),s=w("elementShape",r,e,t),i=w("dynamicSize",r,e,t),a=w("clearAfterRead",r,e,t),u=w("identicalElementShapes",r,e,t),l=w("name",r,e,t),p=new Jv(l,o,n,s,u,i,a);return t.addTensorArray(p),[p.idTensor,me(1)]}case"TensorArrayWriteV3":{let n=w("tensorArrayId",r,e,t),o=w("index",r,e,t),s=w("tensor",r,e,t),i=t.getTensorArray(n.id);return i.write(o,s),[i.idTensor]}case"TensorArrayReadV3":{let n=w("tensorArrayId",r,e,t),o=w("index",r,e,t);return[t.getTensorArray(n.id).read(o)]}case"TensorArrayGatherV3":{let n=w("tensorArrayId",r,e,t),o=w("indices",r,e,t),s=w("dtype",r,e,t);return[t.getTensorArray(n.id).gather(o,s)]}case"TensorArrayScatterV3":{let n=w("tensorArrayId",r,e,t),o=w("indices",r,e,t),s=w("tensor",r,e,t),i=t.getTensorArray(n.id);return i.scatter(o,s),[i.idTensor]}case"TensorArrayConcatV3":{let n=w("tensorArrayId",r,e,t),o=t.getTensorArray(n.id),s=w("dtype",r,e,t);return[o.concat(s)]}case"TensorArraySplitV3":{let n=w("tensorArrayId",r,e,t),o=w("tensor",r,e,t),s=w("lengths",r,e,t),i=t.getTensorArray(n.id);return i.split(s,o),[i.idTensor]}case"TensorArraySizeV3":{let n=w("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return[me(o.size(),"int32")]}case"TensorArrayCloseV3":{let n=w("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{let n=w("tensorListId",r,e,t),o=w("index",r,e,t),s=w("tensor",r,e,t),i=t.getTensorList(n.id);return i.setItem(o,s),[i.idTensor]}case"TensorListGetItem":{let n=w("tensorListId",r,e,t),o=w("index",r,e,t),s=w("elementShape",r,e,t),i=w("elementDType",r,e,t);return[t.getTensorList(n.id).getItem(o,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let n=w("indices",r,e,t),o=w("tensor",r,e,t),s=w("elementShape",r,e,t),i=w("numElements",r,e,t),a=lM(o,n,s,i);return t.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=w("elementShape",r,e,t),o=w("elementDType",r,e,t),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=w(s,r,e,t),a=uM(n,o,i);return t.addTensorList(a),[a.idTensor]}case"TensorListGather":{let n=w("tensorListId",r,e,t),o=w("indices",r,e,t),s=w("elementShape",r,e,t),i=w("elementDType",r,e,t);return[t.getTensorList(n.id).gather(o,i,s)]}case"TensorListStack":{let n=w("tensorListId",r,e,t),o=w("elementShape",r,e,t),s=w("elementDType",r,e,t),i=w("numElements",r,e,t);return[t.getTensorList(n.id).stack(o,s,i)]}case"TensorListFromTensor":{let n=w("tensor",r,e,t),o=w("elementShape",r,e,t),s=w("elementDType",r,e,t),i=iM(n,o,s);return t.addTensorList(i),[i.idTensor]}case"TensorListConcat":{let n=w("tensorListId",r,e,t),o=t.getTensorList(n.id),s=w("dtype",r,e,t),i=w("elementShape",r,e,t);return[o.concat(s,i)]}case"TensorListPushBack":{let n=w("tensorListId",r,e,t),o=w("tensor",r,e,t),s=t.getTensorList(n.id);return s.pushBack(o),[s.idTensor]}case"TensorListPopBack":{let n=w("tensorListId",r,e,t),o=w("elementShape",r,e,t),s=w("elementDType",r,e,t);return[t.getTensorList(n.id).popBack(o,s)]}case"TensorListSplit":{let n=w("tensor",r,e,t),o=w("elementShape",r,e,t),s=w("lengths",r,e,t),i=pM(n,s,o);return t.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};function mM(r,e,t){let[n,o]=w("fusedOps",r,e,t),s=n==="biasadd",i=!s,a=o==="prelu",u=n==="fusedbatchnorm",l=w("numArgs",r,e,t);if(s){if(a&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&s&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let p=w("strides",r,e,t),c=kh(r,e,t),m=w("dataFormat",r,e,t).toUpperCase(),f=w("dilations",r,e,t),[d,h]=w("args",r,e,t);i&&(h=d,d=void 0);let g=w("leakyreluAlpha",r,e,t);return{stride:p,pad:c,dataFormat:m,dilations:f,biasArg:d,preluArg:h,activationFunc:o,leakyreluAlpha:g}}var fM=(r,e,t)=>{switch(r.op){case"Conv1D":{let n=w("stride",r,e,t),o=w("pad",r,e,t),s=w("dataFormat",r,e,t).toUpperCase(),i=w("dilation",r,e,t);return[wf(w("x",r,e,t),w("filter",r,e,t),n,o,s,i)]}case"Conv2D":{let n=w("strides",r,e,t),o=kh(r,e,t),s=w("dataFormat",r,e,t).toUpperCase(),i=w("dilations",r,e,t);return[jn(w("x",r,e,t),w("filter",r,e,t),[n[1],n[2]],o,s,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:n,pad:o,dataFormat:s,dilations:i,biasArg:a,preluArg:u,activationFunc:l,leakyreluAlpha:p}=mM(r,e,t);return[Fs.conv2d({x:w("x",r,e,t),filter:w("filter",r,e,t),strides:[n[1],n[2]],pad:o,dataFormat:s,dilations:[i[1],i[2]],bias:a,activation:l,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:n,pad:o,dataFormat:s,dilations:i,biasArg:a,preluArg:u,activationFunc:l,leakyreluAlpha:p}=mM(r,e,t);return[Fs.depthwiseConv2d({x:w("x",r,e,t),filter:w("filter",r,e,t),strides:[n[1],n[2]],pad:o,dataFormat:s,dilations:[i[1],i[2]],bias:a,activation:l,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let n=w("outputShape",r,e,t),o=w("strides",r,e,t),s=kh(r,e,t);return[Sf(w("x",r,e,t),w("filter",r,e,t),n,[o[1],o[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let n=w("strides",r,e,t),o=kh(r,e,t),s=w("dilations",r,e,t),i=w("dataFormat",r,e,t).toUpperCase();return[Ji(w("input",r,e,t),w("filter",r,e,t),[n[1],n[2]],o,i,[s[1],s[2]])]}case"Conv3D":{let n=w("strides",r,e,t),o=w("pad",r,e,t),s=w("dataFormat",r,e,t).toUpperCase(),i=w("dilations",r,e,t);return[_f(w("x",r,e,t),w("filter",r,e,t),[n[1],n[2],n[3]],o,s,[i[1],i[2],i[3]])]}case"AvgPool":{let n=w("strides",r,e,t),o=w("pad",r,e,t),s=w("kernelSize",r,e,t);return[Ml(w("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o)]}case"MaxPool":{let n=w("strides",r,e,t),o=w("pad",r,e,t),s=w("kernelSize",r,e,t);return[Gl(w("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o)]}case"MaxPoolWithArgmax":{let n=w("strides",r,e,t),o=w("pad",r,e,t),s=w("kernelSize",r,e,t),i=w("includeBatchInIndex",r,e,t),{result:a,indexes:u}=QI(w("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o,i);return[a,u]}case"AvgPool3D":{let n=w("strides",r,e,t),o=w("pad",r,e,t),s=w("kernelSize",r,e,t);return[Cf(w("x",r,e,t),[s[1],s[2],s[3]],[n[1],n[2],n[3]],o)]}case"MaxPool3D":{let n=w("strides",r,e,t),o=w("pad",r,e,t),s=w("kernelSize",r,e,t);return[Ef(w("x",r,e,t),[s[1],s[2],s[3]],[n[1],n[2],n[3]],o)]}case"Dilation2D":{let n=w("strides",r,e,t),o=w("pad",r,e,t),s=w("dilations",r,e,t),i=n[1],a=n[2],u=s[1],l=s[2];return[OI(w("x",r,e,t),w("filter",r,e,t),[i,a],o,[u,l],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var dM=(r,e,t)=>{switch(r.op){case"Fill":{let n=w("shape",r,e,t),o=w("dtype",r,e,t),s=w("value",r,e,t);return[Ca(n,s,o)]}case"LinSpace":{let n=w("start",r,e,t),o=w("stop",r,e,t),s=w("num",r,e,t);return[VI(n,o,s)]}case"Multinomial":{let n=w("logits",r,e,t),o=w("numSamples",r,e,t),s=w("seed",r,e,t);return[eC(n,o,s)]}case"OneHot":{let n=w("indices",r,e,t),o=w("depth",r,e,t),s=w("onValue",r,e,t),i=w("offValue",r,e,t);return[Xi(n,o,s,i)]}case"Ones":return[mr(w("shape",r,e,t),w("dtype",r,e,t))];case"OnesLike":return[Ar(w("x",r,e,t))];case"RandomUniform":return[va(w("shape",r,e,t),w("minval",r,e,t),w("maxval",r,e,t),w("dtype",r,e,t))];case"Range":{let n=w("start",r,e,t),o=w("stop",r,e,t),s=w("step",r,e,t);return[nu(n,o,s,w("dtype",r,e,t))]}case"TruncatedNormal":{let n=w("shape",r,e,t),o=w("mean",r,e,t),s=w("stdDev",r,e,t),i=w("seed",r,e,t);return[ql(n,o,s,w("dtype",r,e,t),i)]}case"Zeros":return[Tt(w("shape",r,e,t),w("dtype",r,e,t))];case"ZerosLike":return[De(w("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function ew(r,e,t){let n=w("boxes",r,e,t),o=w("scores",r,e,t),s=w("maxOutputSize",r,e,t),i=w("iouThreshold",r,e,t),a=w("scoreThreshold",r,e,t),u=w("softNmsSigma",r,e,t);return{boxes:n,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:a,softNmsSigma:u}}var hM=async(r,e,t)=>{switch(r.op){case"NonMaxSuppressionV5":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:a,softNmsSigma:u}=ew(r,e,t),l=await Nn.nonMaxSuppressionWithScoreAsync(n,o,s,i,a,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:a}=ew(r,e,t),u=w("padToMaxOutputSize",r,e,t),l=await Nn.nonMaxSuppressionPaddedAsync(n,o,s,i,a,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:a}=ew(r,e,t);return[await Nn.nonMaxSuppressionAsync(n,o,s,i,a)]}case"Where":{let n=J(w("condition",r,e,t),"bool"),o=[await Hf(n)];return n.dispose(),o}case"ListDiff":return cC(w("x",r,e,t),w("y",r,e,t));default:throw TypeError(`Node type ${r.op} is not implemented`)}};var gM=(r,e,t)=>{switch(r.op){case"TopKV2":{let n=w("x",r,e,t),o=w("k",r,e,t),s=w("sorted",r,e,t),i=hC(n,o,s);return[i.values,i.indices]}case"Unique":{let n=w("x",r,e,t),o=Fb(n);return[o.values,o.indices]}case"UniqueV2":{let n=w("x",r,e,t),o=w("axis",r,e,t),s=Fb(n,o);return[s.values,s.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var bM=(r,e,t)=>{switch(r.op){case"Const":return e[r.name];case"PlaceholderWithDefault":let n=w("default",r,e,t);return[Ir(r.name,e,t)||n];case"Placeholder":return[Ir(r.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let l=w("x",r,e,t);return[Fa(l)]}case"IdentityN":return w("x",r,e,t).map(l=>Fa(l));case"Snapshot":let o=w("x",r,e,t);return[Fa(o)];case"Shape":return[zt(w("x",r,e,t).shape,"int32")];case"ShapeN":return w("x",r,e,t).map(l=>zt(l.shape));case"Size":return[me(w("x",r,e,t).size,"int32")];case"Rank":return[me(w("x",r,e,t).rank,"int32")];case"NoOp":return[me(1)];case"Print":let s=w("x",r,e,t),i=w("data",r,e,t),a=w("message",r,e,t),u=w("summarize",r,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(a);for(let l=0;l<i.length;l++)console.log(Array.prototype.slice.call(i[l].dataSync()).slice(0,u));return[s];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var tw=class{constructor(e,t){this.keyDType=e;this.valueDType=t;this.handle=me(0),this.tensorMap=new Map,Vt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return me(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),G(()=>{let o=Br(t),s=n.length,i=o.length;b.assert(s===i,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${i} elements.`);for(let a=0;a<s;a++){let u=n[a],l=o[a];Vt(l),this.tensorMap.set(u,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return G(()=>{let o=[];for(let s=0;s<n.length;s++){let i=n[s],a=this.findWithDefault(i,t);o.push(a)}return fr(o)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};var yM=async(r,e,t,n)=>{switch(r.op){case"HashTable":case"HashTableV2":{let o=w("keyDType",r,e,t),s=w("valueDType",r,e,t),i=new tw(o,s);return n.addHashTable(r.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let o=w("tableHandle",r,e,t,n),s=w("keys",r,e,t),i=w("values",r,e,t);return[await n.getHashTableById(o.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let o=w("tableHandle",r,e,t,n),s=w("keys",r,e,t),i=w("defaultValue",r,e,t);return[await n.getHashTableById(o.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let o=w("tableHandle",r,e,t,n);return[n.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var xM=(r,e,t)=>{switch(r.op){case"ResizeBilinear":{let n=w("images",r,e,t),o=w("size",r,e,t),s=w("alignCorners",r,e,t),i=w("halfPixelCenters",r,e,t);return[Nn.resizeBilinear(n,[o[0],o[1]],s,i)]}case"ResizeNearestNeighbor":{let n=w("images",r,e,t),o=w("size",r,e,t),s=w("alignCorners",r,e,t),i=w("halfPixelCenters",r,e,t);return[Nn.resizeNearestNeighbor(n,[o[0],o[1]],s,i)]}case"CropAndResize":{let n=w("image",r,e,t),o=w("boxes",r,e,t),s=w("boxInd",r,e,t),i=w("cropSize",r,e,t),a=w("method",r,e,t),u=w("extrapolationValue",r,e,t);return[Nn.cropAndResize(n,o,s,i,a,u)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var TM=(r,e,t)=>{switch(r.op){case"Equal":return[Kr(w("a",r,e,t),w("b",r,e,t))];case"NotEqual":return[ti(w("a",r,e,t),w("b",r,e,t))];case"Greater":return[rr(w("a",r,e,t),w("b",r,e,t))];case"GreaterEqual":return[Vo(w("a",r,e,t),w("b",r,e,t))];case"Less":return[Df(w("a",r,e,t),w("b",r,e,t))];case"LessEqual":return[jo(w("a",r,e,t),w("b",r,e,t))];case"LogicalAnd":return[jr(w("a",r,e,t),w("b",r,e,t))];case"LogicalNot":return[zl(w("a",r,e,t))];case"LogicalOr":return[Mf(w("a",r,e,t),w("b",r,e,t))];case"Select":case"SelectV2":return[Ot(w("condition",r,e,t),w("a",r,e,t),w("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var kM=(r,e,t)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[je(w("a",r,e,t),w("b",r,e,t),w("transposeA",r,e,t),w("transposeB",r,e,t))];case"Einsum":return[GI(w("equation",r,e,t),...w("tensors",r,e,t))];case"Transpose":return[qe(w("x",r,e,t),w("perm",r,e,t))];case"_FusedMatMul":let[n,o]=w("fusedOps",r,e,t),s=n==="biasadd",i=o==="prelu",a=w("numArgs",r,e,t),u=w("leakyreluAlpha",r,e,t);if(s){if(i&&a!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[l,p]=w("args",r,e,t);return[Fs.matMul({a:w("a",r,e,t),b:w("b",r,e,t),transposeA:w("transposeA",r,e,t),transposeB:w("transposeB",r,e,t),bias:l,activation:o,preluActivationWeights:p,leakyreluAlpha:u})];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var IM=(r,e,t)=>{switch(r.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[Za(w("x",r,e,t),w("mean",r,e,t),w("variance",r,e,t),w("offset",r,e,t),w("scale",r,e,t),w("epsilon",r,e,t))];case"FusedBatchNormV3":return[Za(w("x",r,e,t),w("mean",r,e,t),w("variance",r,e,t),w("offset",r,e,t),w("scale",r,e,t),w("epsilon",r,e,t))];case"LRN":return[jI(w("x",r,e,t),w("radius",r,e,t),w("bias",r,e,t),w("alpha",r,e,t),w("beta",r,e,t))];case"Softmax":return[Vl(w("x",r,e,t))];case"LogSoftmax":return[Pf(w("x",r,e,t))];case"SparseToDense":return[Rb(w("sparseIndices",r,e,t),w("outputShape",r,e,t),w("sparseValues",r,e,t),w("defaultValue",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var CM=(r,e,t)=>{switch(r.op){case"Max":{let i=w("axis",r,e,t),a=w("keepDims",r,e,t);return[Zr(w("x",r,e,t),i,a)]}case"Mean":{let i=w("axis",r,e,t),a=w("keepDims",r,e,t);return[Rt(w("x",r,e,t),i,a)]}case"Min":{let i=w("axis",r,e,t),a=w("keepDims",r,e,t);return[Oc(w("x",r,e,t),i,a)]}case"Sum":{let i=w("axis",r,e,t),a=w("keepDims",r,e,t);return[he(w("x",r,e,t),i,a)]}case"All":{let i=w("axis",r,e,t),a=w("keepDims",r,e,t);return[If(w("x",r,e,t),i,a)]}case"Any":{let i=w("axis",r,e,t),a=w("keepDims",r,e,t);return[Rc(w("x",r,e,t),i,a)]}case"ArgMax":{let i=w("axis",r,e,t);return[Qi(w("x",r,e,t),i)]}case"ArgMin":{let i=w("axis",r,e,t);return[yI(w("x",r,e,t),i)]}case"Prod":{let i=w("axis",r,e,t),a=w("keepDims",r,e,t);return[Rf(w("x",r,e,t),i,a)]}case"Cumsum":{let i=w("axis",r,e,t),a=w("exclusive",r,e,t),u=w("reverse",r,e,t);return[Nf(w("x",r,e,t),i,a,u)]}case"Bincount":let n=w("x",r,e,t),o=w("weights",r,e,t),s=w("size",r,e,t);return[vf(n,o,s)];case"DenseBincount":{let i=w("x",r,e,t),a=w("weights",r,e,t),u=w("size",r,e,t),l=w("binaryOutput",r,e,t);return[BI(i,a,u,l)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var vM=(r,e,t)=>{switch(r.op){case"ConcatV2":case"Concat":{let n=w("n",r,e,t),o=w("axis",r,e,t),s=w("tensors",r,e,t);return s=s.slice(0,n),[ut(s,o)]}case"Gather":{let n=w("x",r,e,t),o=w("indices",r,e,t);return[Ja(n,J(o,"int32"),0)]}case"GatherV2":{let n=w("axis",r,e,t),o=w("batchDims",r,e,t),s=w("x",r,e,t),i=w("indices",r,e,t);return[Ja(s,J(i,"int32"),n,o)]}case"Reverse":{let n=w("dims",r,e,t),o=[];for(let i=0;i<n.length;i++)n[i]&&o.push(i);let s=w("x",r,e,t);return[yr(s,o)]}case"ReverseV2":{let n=w("axis",r,e,t),o=w("x",r,e,t);return[yr(o,n)]}case"Slice":{let n=w("begin",r,e,t),o=w("size",r,e,t);return[We(w("x",r,e,t),n,o)]}case"StridedSlice":{let n=w("begin",r,e,t),o=w("end",r,e,t),s=w("strides",r,e,t),i=w("beginMask",r,e,t),a=w("endMask",r,e,t),u=w("ellipsisMask",r,e,t),l=w("newAxisMask",r,e,t),p=w("shrinkAxisMask",r,e,t),c=w("x",r,e,t);return[fC(c,n,o,s,i,a,u,l,p)]}case"Pack":return G(()=>{let n=w("axis",r,e,t),o=w("tensors",r,e,t),s=o[0].shape,i=pn(o[0]).shape,a=o.map(u=>{let l=b.arraysEqual(u.shape,s);if(!l&&!b.arraysEqual(pn(u).shape,i))throw new Error("the input tensors shape does not match");return l?u:L(u,s)});return[fr(a,n)]});case"Unpack":{let n=w("axis",r,e,t),o=w("tensor",r,e,t);return Br(o,n)}case"Tile":{let n=w("reps",r,e,t);return[Vr(w("x",r,e,t),n)]}case"Split":case"SplitV":{let n=w("axis",r,e,t),o=w("numOrSizeSplits",r,e,t),s=w("x",r,e,t);return kr(s,o,n)}case"ScatterNd":{let n=w("indices",r,e,t),o=w("values",r,e,t),s=w("shape",r,e,t);return[Z0(n,o,s)]}case"GatherNd":{let n=w("x",r,e,t),o=w("indices",r,e,t);return[e2(n,o)]}case"SparseToDense":{let n=w("sparseIndices",r,e,t),o=w("outputShape",r,e,t),s=w("sparseValues",r,e,t),i=w("defaultValue",r,e,t);return[Rb(n,s,o,s.dtype===i.dtype?i:J(i,s.dtype))]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var wM=(r,e,t)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:n,outputValues:o,emptyRowIndicator:s,reverseIndexMap:i}=qf.sparseFillEmptyRows(w("indices",r,e,t),w("values",r,e,t),w("denseShape",r,e,t),w("defaultValue",r,e,t));return[n,o,s,i]}case"SparseReshape":{let{outputIndices:n,outputShape:o}=qf.sparseReshape(w("inputIndices",r,e,t),w("inputShape",r,e,t),w("newShape",r,e,t));return[n,o]}case"SparseSegmentMean":return[qf.sparseSegmentMean(w("data",r,e,t),w("indices",r,e,t),w("segmentIds",r,e,t))];case"SparseSegmentSum":return[qf.sparseSegmentSum(w("data",r,e,t),w("indices",r,e,t),w("segmentIds",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var SM=(r,e,t)=>{switch(r.op){case"FFT":return[jl(w("x",r,e,t))];case"IFFT":return[Hu(w("x",r,e,t))];case"RFFT":return[Hl(w("x",r,e,t))];case"IRFFT":return[Vf(w("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var _M=(r,e,t)=>{switch(r.op){case"StringNGrams":{let{nGrams:n,nGramsSplits:o}=Kb.stringNGrams(w("data",r,e,t),w("dataSplits",r,e,t),w("separator",r,e,t),w("nGramWidths",r,e,t),w("leftPad",r,e,t),w("rightPad",r,e,t),w("padWidth",r,e,t),w("preserveShortSequences",r,e,t));return[n,o]}case"StringSplit":{let{indices:n,values:o,shape:s}=Kb.stringSplit(w("input",r,e,t),w("delimiter",r,e,t),w("skipEmpty",r,e,t));return[n,o,s]}case"StringToHashBucketFast":return[Kb.stringToHashBucketFast(w("input",r,e,t),w("numBuckets",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var AM=(r,e,t)=>{switch(r.op){case"Cast":return[J(w("x",r,e,t),w("dtype",r,e,t))];case"ExpandDims":{let n=w("axis",r,e,t);return[_r(w("x",r,e,t),n)]}case"Squeeze":{let n=w("axis",r,e,t);return[pn(w("x",r,e,t),n)]}case"Reshape":return[L(w("x",r,e,t),w("shape",r,e,t))];case"MirrorPad":return[ZI(w("x",r,e,t),w("padding",r,e,t),w("mode",r,e,t))];case"PadV2":case"Pad":return[_n(w("x",r,e,t),w("padding",r,e,t),w("constantValue",r,e,t))];case"SpaceToBatchND":{let n=w("blockShape",r,e,t),o=w("paddings",r,e,t);return[Wl(w("x",r,e,t),n,o)]}case"BatchToSpaceND":{let n=w("blockShape",r,e,t),o=w("crops",r,e,t);return[El(w("x",r,e,t),n,o)]}case"DepthToSpace":{let n=w("blockSize",r,e,t),o=w("dataFormat",r,e,t).toUpperCase();return[$I(w("x",r,e,t),n,o)]}case"BroadcastTo":return[Rl(w("x",r,e,t),w("shape",r,e,t))];case"BroadcastArgs":return[DI(w("s0",r,e,t),w("s1",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function rw(r,e,t,n){let o=((s,i,a)=>{switch(s.category){case"arithmetic":return G(()=>oM(s,i,a));case"basic_math":return G(()=>sM(s,i,a));case"control":return cM(s,i,a);case"convolution":return G(()=>fM(s,i,a));case"creation":return G(()=>dM(s,i,a));case"dynamic":return hM(s,i,a);case"evaluation":return G(()=>gM(s,i,a));case"image":return G(()=>xM(s,i,a));case"graph":return G(()=>bM(s,i,a));case"logical":return G(()=>TM(s,i,a));case"matrices":return G(()=>kM(s,i,a));case"normalization":return G(()=>IM(s,i,a));case"reduction":return G(()=>CM(s,i,a));case"slice_join":return G(()=>vM(s,i,a));case"sparse":return G(()=>wM(s,i,a));case"spectral":return G(()=>SM(s,i,a));case"string":return G(()=>_M(s,i,a));case"transformation":return G(()=>AM(s,i,a));case"hash_table":return yM(s,i,a,n);case"custom":let u=Cy(s.op);if(u&&u.customExecutor)return u.customExecutor(new Zv(s,i,a));throw TypeError(`Custom op ${s.op} is not registered.`);default:throw TypeError(`Unknown op '${s.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,e,t);return b.isPromise(o)?o.then(s=>[].concat(s)):[].concat(o)}var By=class{constructor(e={},t={},n={},o={}){this.weightMap=e;this.tensorArrayMap=t;this.tensorListMap=n;this.functionMap=o;this.rootContext={id:0,frameName:"",iterationId:0};this.contexts=[this.rootContext];this.lastId=0;this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function nw(r,e,t,n){let o=new Set,s=[],i=null,a=null,u=new Set,l=Object.keys(r).map(m=>bn(m)[0]),p=[];n!=null&&(p=n.map(m=>bn(m.name)[0]));let c=[...e];for(;c.length>0;){let m=c.pop();if((ow(m)||j9(m)||H9(m))&&i==null&&(i=m,a=i.children.map(f=>f.name).filter(f=>o.has(f))),o.add(m.name),t[m.name]==null&&l.indexOf(m.name)===-1&&p.indexOf(m.name)===-1){if(m.inputs.length===0){s.push(m.name);continue}m.inputs.forEach(f=>{u.has(f.name)||(u.add(f.name),c.push(f))})}}return{inputs:r,outputs:e,usedNodes:o,missingInputs:s,dynamicNode:i,syncInputs:a}}function NM(r,e,t){let{usedNodes:n,inputs:o}=t,s=[],i=Object.keys(o).map(p=>bn(p)[0]).map(p=>r.nodes[p]),a=r.initNodes;i.forEach(p=>{n.has(p.name)&&s.push(p)}),r.weights.forEach(p=>{n.has(p.name)&&s.push(p)}),a!=null&&a.forEach(p=>{n.has(p.name)&&s.push(p)});let u=new Set,l=[];for(;s.length>0;){let p=s.pop();u.add(p.name),e[p.name]||l.push(p),p.children.forEach(c=>{!u.has(c.name)&&n.has(c.name)&&c.inputs.every(m=>u.has(m.name))&&s.push(c)})}return l}var U9=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],K9=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],V9=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function ow(r){return U9.indexOf(r.op)>=0}function j9(r){return K9.indexOf(r.op)>=0}function H9(r){return V9.indexOf(r.op)>=0}var ym=class{constructor(e,t){this.graph=e;this.parent=t;this.compiledMap=new Map;this._weightMap={};this.SEPERATOR=",";this._functions={};this._functionExecutorMap={};this.intermediateTensors={};this.keepTensorForDebug=!1;this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new ym(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(o=>o.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(s=>s.name).sort(),o=t.map(s=>s.name).sort();return n.join(this.SEPERATOR)+"--"+o.join(this.SEPERATOR)}compile(e,t){let n=nw(e,t,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:s,syncInputs:i}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(o.length>0){let a=t.map(l=>l.name),u=Object.keys(e);throw new Error(`Cannot compute the outputs [${a}] from the provided inputs [${u}]. Missing the following inputs: [${o}]`)}return NM(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let o=n.map(c=>this.graph.nodes[bn(c)[0]]),s=t.map(c=>bn(c)[0]),i=s.map(c=>this.graph.nodes[c]);this.resetIntermediateTensors(),i.length===0&&(i=this._outputs);let a=this.getCompilationKey(o,i),u=this.compiledMap.get(a);u==null&&(u=this.compile(e,i),this.compiledMap.set(a,u));let l={},p={};return G(()=>{let c=new By(this.weightMap,l,p,this.functionExecutorMap),m={...this.weightMap};Object.keys(e).forEach(h=>{let[g,x]=bn(h),y=[];y[x]=e[h],m[g]=y});let f=this.getFrozenTensorIds(m),d={};for(let h=0;h<u.length;h++){let g=u[h];if(!m[g.name]){let x=rw(g,m,c,this._resourceManager);if(b.isPromise(x))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);m[g.name]=x,this.checkTensorForDisposal(g.name,g,m,c,f,s,d)}}return this.parent==null&&c.dispose(f),t.map(h=>Ir(h,m,c))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(o=>o.id)));return new Set(t)}checkTensorForDisposal(e,t,n,o,s,i,a){t.category==="control"||i.indexOf(e)!==-1||(n[e].forEach(u=>{u!=null&&(a[u.id]=(a[u.id]||0)+t.children.length)}),t.inputs.forEach(u=>{if(u.category!=="control"){let l=eM(u.name,n,o);l!=null&&l.forEach(p=>{if(p&&!p.kept&&!s.has(p.id)){let c=a[p.id];if(c===1){if(!this.keepTensorForDebug)p.dispose();else{let[m,f]=Gs(t.name,o);this.intermediateTensors[m]?this.intermediateTensors[m][f]=p:(this.intermediateTensors[m]=[],this.intermediateTensors[m][f]=p)}delete a[p.id]}else c!=null&&a[p.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,o={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=$().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){console.warn(p.message)}this.resetIntermediateTensors();let i=new By(this.weightMap,o,s,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,i,t,n);let a=t.map(p=>Ir(p,this.tensorsMap,i)),u=a.map(p=>p.id),l=Object.keys(e).map(p=>e[p].id);return this.keepIds=new Set([...u,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&i.dispose(this.keepIds),a}async executeFunctionAsync(e,t,n){let o=e.reduce((s,i,a)=>(s[this.inputs[a].name]=i,s),{});return this._executeAsync(o,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,o){let s=Object.keys(e),i=s.map(T=>this.graph.nodes[bn(T)[0]]),a=n.map(T=>bn(T)[0]),u=a.map(T=>this.graph.nodes[T]);u.length===0&&(u=this._outputs);let{usedNodes:l,missingInputs:p,dynamicNode:c,syncInputs:m}=nw(e,u,this.weightMap,this._initNodes),f=[...i,...this.graph.weights,...this._initNodes||[]].map(T=>({node:T,contexts:t.currentContext})),d={...this.weightMap};Object.keys(e).forEach(T=>{let[k,C]=bn(T),N=[];N[C]=e[T],d[k]=N});let h={},g=this.getFrozenTensorIds(d),x={};for(;f.length>0;){let T=this.processStack(i,f,t,d,x,g,a,h,l);await Promise.all(T)}c==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=u.filter(T=>!ow(T)&&!Ir(T.name,d,t)).map(T=>T.name);if(y.length>0){let T="";throw c!=null&&(T=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${m}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${p}]. ${T}`)}return d}processStack(e,t,n,o,s,i,a,u,l){let p=[];for(;t.length>0;){let c=t.pop();n.currentContext=c.contexts;let m="";if(c.node.op==="Enter"&&w("isConstant",c.node,o,n)&&([m]=Gs(c.node.name,n)),o[c.node.name]==null){let f=rw(c.node,o,n,this._resourceManager);m||([m]=Gs(c.node.name,n));let d=n.currentContext;b.isPromise(f)?p.push(f.then(h=>(o[m]=h,n.currentContext=d,this.checkTensorForDisposal(m,c.node,o,n,i,a,u),this.processChildNodes(c.node,t,n,o,s,l),h))):(o[m]=f,this.checkTensorForDisposal(m,c.node,o,n,i,a,u),this.processChildNodes(c.node,t,n,o,s,l))}else this.processChildNodes(c.node,t,n,o,s,l)}return p}processChildNodes(e,t,n,o,s,i){e.children.forEach(a=>{let[u]=Gs(a.name,n);s[u]||!i.has(a.name)||(a.op==="Merge"?a.inputNames.some(l=>!!Ir(l,o,n))&&(s[u]=!0,t.push({contexts:n.currentContext,node:a})):a.inputNames.every(l=>!!Ir(l,o,n))&&(s[u]=!0,t.push({contexts:n.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[o]=bn(t),s=this.graph.nodes[o];if(s.attrParams.shape&&s.attrParams.shape.value){let i=s.attrParams.shape.value,a=i.length===n.shape.length&&n.shape.every((u,l)=>i[l]===-1||i[l]===u);b.assert(a,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${i}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&b.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let o=this._signature.inputs[n];t[o.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[o]=bn(n);return this.graph.nodes[o]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=bn(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}};var sw=class{constructor(e={},t={}){this.hashTableNameToHandle=e;this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}};var q9="?tfjs-format=file",X9="model.json",aw=class{constructor(e,t={}){this.modelUrl=e;this.loadOptions=t;this.version="n/a";t==null&&(this.loadOptions={}),this.resourceManager=new sw}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=Ur.browserHTTPRequest(e,this.loadOptions);else{let t=Ur.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(Ur.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let o=Ur.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new ym(wy.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let s=wy.Instance.transformGraph(e.modelInitializer);this.initializer=new ym(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=Ur.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Qe)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,o)=>(t[n]=e[o],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function Y9(r,e={}){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&r.load==null&&(r.endsWith("/")||(r=r+"/"),r=`${r}${X9}${q9}`);let t=new aw(r,e);return await t.load(),t}var Q9="0.0.0";var mE={};Ye(mE,{CSVDataset:()=>Sh,Dataset:()=>li,FileDataSource:()=>Fh,TextLineDataset:()=>vh,URLDataSource:()=>Mh,array:()=>QM,csv:()=>aE,func:()=>iE,generator:()=>uE,microphone:()=>pE,version_data:()=>cE,webcam:()=>lE,zip:()=>ZM});var YM=xl(Lf());var RM=xl(Lf());function DM(r,e){return $y(r,e)}function $y(r,e,t=new Map,n=new Set){if(r==null)return null;if(typeof Blob=="function"&&r instanceof Blob)return r.slice();if(n.has(r))throw new Error("Circular references are not supported.");if(t.has(r))return t.get(r);let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(ol(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let i in r){let a=r[i],u=$y(a,e,t,n);s[i]=u}return n.delete(r),r.__proto__&&(s.__proto__=r.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return t.set(r,o.value),o.value}function PM(r,e=uw){return FM(r,e)}function FM(r,e,t=new Set){let n=r[0];if(t.has(n))throw new Error("Circular references are not supported.");let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(ol(n)){let s=Array.isArray(n)?[]:{};t.add(n);for(let i in n){let a=r.map(l=>l[i]),u=FM(a,e,t);s[i]=u}return t.delete(n),s}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return o.value}function uw(r){return r===null?null:ol(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}async function Oy(r,e){let t=new Map;$y(r,e,t);for(let o of Array.from(t.keys())){let s=t.get(o);if(b.isPromise(s)){let i=await s;t.set(o,i)}}return $y(r,e,t)}function ol(r){let e=!1;if($().get("IS_BROWSER"))e=r instanceof TextDecoder;else{let{StringDecoder:t}=iw();e=r instanceof t}return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof Qe)&&!(r instanceof Promise)&&!e)}function MM(r){return r==null||Z9(r)||Array.isArray(r)||typeof r=="object"&&r instanceof Qe||b.isTypedArray(r)}function Z9(r){return r===null||typeof r!="object"&&typeof r!="function"}function EM(r){return DM(r,J9)}function J9(r){return r instanceof Qe?{value:r.clone(),recurse:!1}:ol(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var Ih=class{constructor(e){this.capacity=e;this.begin=0;this.end=0;if(e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}};var lw=class extends Ih{constructor(){super(lw.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let o=0;o<n;o++)t[o]=this.get(this.wrap(this.begin+o));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},zy=lw;zy.INITIAL_CAPACITY=32;function pw(r){return new $M(r)}function Ch(r){return new OM(r)}function LM(r,e){return new mw(r,e)}function BM(r,e=pu.FAIL){return new qM(r,e)}var ir=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new jM(this,e)}filter(e){return new KM(this,e)}map(e){return new VM(this,e)}mapAsync(e){return new cw(this,e)}serialMapAsync(e){return new cw(this,e).serial()}flatmap(e){return new HM(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new UM(this,e,t)}columnMajorBatch(e,t=!0,n=uw){return this.rowMajorBatch(e,t).map(s=>PM(s,n))}concatenate(e,t){return new mw(pw([this,e]),t)}take(e){return e<0||e==null?this:new WM(this,e)}skip(e){return e<0||e==null?this:new GM(this,e)}prefetch(e){return new fw(this,e)}shuffle(e,t){return new XM(this,e,t)}serial(){return new zM(this)}},$M=class extends ir{constructor(e){super();this.items=e;this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:EM(e),done:!1}}},OM=class extends ir{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},zM=class extends ir{constructor(e){super();this.upstream=e;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},GM=class extends ir{constructor(e,t){super();this.upstream=e;this.maxCount=t;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Ee(e.value)}return this.upstream.next()}},WM=class extends ir{constructor(e,t){super();this.upstream=e;this.maxCount=t;this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},UM=class extends ir{constructor(e,t,n=!0){super();this.upstream=e;this.batchSize=t;this.enableSmallLastBatch=n;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},KM=class extends ir{constructor(e,t){super();this.upstream=e;this.predicate=t;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Ee(e.value)}}},VM=class extends ir{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ns.getTensorsInContainer(e.value),n=this.transform(e.value),o=Ns.getTensorsInContainer(n);for(let s of t)Ns.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},jM=class extends ir{constructor(e,t){super();this.upstream=e;this.handler=t;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},cw=class extends ir{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ns.getTensorsInContainer(e.value),n=await this.transform(e.value),o=Ns.getTensorsInContainer(n);for(let s of t)Ns.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},xm=class extends ir{constructor(){super();this.outputQueue=new zy,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},HM=class extends xm{constructor(e,t){super();this.upstream=e;this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Ns.getTensorsInContainer(e.value),n=this.transform(e.value),o=Ns.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let s of t)Ns.isTensorInList(s,o)||s.dispose();return!0}},mw=class extends ir{constructor(e,t){super();this.baseErrorHandler=t;this.lastRead=null;this.iterator=null;this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},pu;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(pu||(pu={}));var qM=class extends ir{constructor(e,t=0){super();this.iterators=e;this.mismatchMode=t;this.count=0;this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function o(i){return i instanceof ir?{value:i.next().then(u=>(t++,u.done&&n++,u.value)),recurse:!1}:{value:null,recurse:!0}}let s=await Oy(this.iterators,o);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},fw=class extends ir{constructor(e,t){super();this.upstream=e;this.bufferSize=t;this.buffer=new Ih(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},XM=class extends fw{constructor(e,t,n){super(e,t);this.upstream=e;this.windowSize=t;this.upstreamExhausted=!1;this.random=RM.alea(n||b.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}};var li=class{constructor(){this.size=null}batch(e,t=!0){let n=this;b.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let o;return this.size===1/0||this.size==null?o=this.size:t?o=Math.ceil(this.size/e):o=Math.floor(this.size/e),Fn(async()=>(await n.iterator()).columnMajorBatch(e,t,eJ),o)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,Fn(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,Fn(async()=>(await t.iterator()).filter(o=>G(()=>e(o))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Fn(async()=>(await t.iterator()).map(n=>G(()=>e(n))),this.size)}mapAsync(e){let t=this;return Fn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Fn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,Fn(async()=>{let o=Ch(async()=>({value:await t.iterator(),done:!1}));return LM(o.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,Fn(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let o=this,s=YM.alea(t||b.now().toString());return Fn(async()=>{let i=s.int32();return n&&(i+=s.int32()),(await o.iterator()).shuffle(e,i.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,Fn(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};li.MAX_BUFFER_SIZE=1e4;function Fn(r,e=null){return new class extends li{constructor(){super(...arguments);this.size=e}async iterator(){return r()}}}function QM(r){return Fn(async()=>pw(r),r.length)}function ZM(r){if(!ol(r))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(r))for(let t=0;t<r.length;t++)e=e==null?r[t].size:Math.min(e,r[t].size);else if(r instanceof Object)for(let t in r)e=e==null?r[t].size:Math.min(e,r[t].size);return Fn(async()=>{let t=await Oy(r,n=>{if(n instanceof li)return{value:n.iterator(),recurse:!1};if(ol(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return BM(t,pu.SHORTEST)},e)}function eJ(r){if(r===null)return null;let e=r[0];return MM(e)?{value:tJ(r),recurse:!1}:{value:null,recurse:!0}}function tJ(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof Qe?fr(r):Mr(r)}var vh=class extends li{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(o=>(o.endsWith("\r")&&(o=o.slice(0,-1)),o))}};var Gy='"',wh=Symbol("out"),JM=Symbol("field"),Wy=Symbol("quote"),dw=Symbol("quoteafterquote"),eE=Symbol("quoteinquote"),Sh=class extends li{constructor(e,t){super();this.input=e;this.hasHeader=!0;this.fullColumnNames=null;this.columnNamesValidated=!1;this.columnConfigs=null;this.configuredColumnsOnly=!1;this.delimiter=",";this.delimWhitespace=!1;this.base=new vh(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(b.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&b.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((o,s)=>(o[s]=o[s]+1||1,o),{}),n=Object.keys(t).filter(o=>t[o]>1);if(b.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let o of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(o)===-1)throw new Error('The key "'+o+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},o={};for(let s=0;s<this.fullColumnNames.length;s++){let i=this.fullColumnNames[s],a=this.columnConfigs?this.columnConfigs[i]:null;if(!(this.configuredColumnsOnly&&!a)){let u=t[s],l=null;if(u==="")if(a&&a.default!==void 0)l=a.default;else{if(a&&(a.required||a.isLabel))throw new Error(`Required column ${i} is empty in this line: ${e}`);l=void 0}else{let p=Number(u);if(isNaN(p))a&&a.dtype==="bool"?l=this.getBoolean(u):l=u;else if(!a||!a.dtype)l=p;else switch(a.dtype){case"float32":l=p;break;case"int32":l=Math.floor(p);break;case"bool":l=this.getBoolean(u);break;default:l=p}}a&&a.isLabel?o[i]=l:n[i]=l}}return Object.keys(o).length===0?n:{xs:n,ys:o}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],o=0,s=e.length,i=wh;for(let a=0;a<s;a++)switch(i){case wh:switch(e.charAt(a)){case Gy:o=a+1,i=Wy;break;case this.delimiter:if(o=a+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),i=wh;break;default:i=JM,o=a;break}break;case JM:switch(e.charAt(a)){case this.delimiter:n.push(e.substring(o,a)),i=wh,o=a+1;break;default:}break;case Wy:switch(e.charAt(a)){case Gy:i=dw;break;default:}break;case dw:switch(e.charAt(a)){case this.delimiter:n.push(e.substring(o,a-1)),i=wh,o=a+1;break;case Gy:i=Wy;break;default:i=eE;break}break;case eE:switch(e.charAt(a)){case Gy:i=Wy;break;default:}break;default:}if(i===dw?n.push(e.substring(o,s-1)):n.push(e.substring(o)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}};var _h=class extends ir{constructor(e){super();this.microphoneConfig=e;this.isClosed=!1;this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if($().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new _h(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let o=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(o,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let o=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(o,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(o=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&o({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),o({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((o,s)=>n.set(o,s*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(b.sizeFromShape(t));return n.set(e,n.length-e.length),Mr(n,t)}};var Ah=class extends ir{constructor(e,t){super();this.webcamVideoElement=e;this.webcamConfig=t;this.isClosed=!0;this.resize=!1;if(this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=zt([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,o=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-n)/2,i=(1-o)/2,a=s+n,u=o+i;this.cropBox=ri([i,s,u,a],[1,4])}else this.cropBox=ri([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if($().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new Ah(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&b.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=yb.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return G(()=>{let t=_r(J(e,"float32"),0),n;n=Nn.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let o=n.shape;return L(n,o.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}};var Nh=class{};var Uy=class extends ir{split(e){return new tE(this,e)}},tE=class extends Uy{constructor(e,t){super();this.upstream=e;this.impl=new rE(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},rE=class extends xm{constructor(e,t){super();this.upstream=e;this.separator=t;this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}};var hw=class extends ir{decodeUTF8(){return new nE(this)}},nE=class extends Uy{constructor(e){super();this.upstream=e;this.impl=new oE(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},oE=class extends xm{constructor(e){super();this.upstream=e;if($().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=iw();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return $().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}};var Dh=class extends hw{constructor(e,t={}){super();this.file=e;this.options=t;b.assert(e instanceof Uint8Array||($().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let o=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,o)));else{let s=new FileReader;s.onload=a=>{let u=s.result;if(u instanceof ArrayBuffer&&(u=new Uint8Array(u)),!(u instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(u)},s.onabort=a=>n(new Error("Aborted")),s.onerror=a=>n(new Error(a.type));let i=this.file.slice(this.offset,o);s.readAsArrayBuffer(i)}this.offset=o}),done:!1}}};async function sE(r,e={},t){let n,o;typeof r=="string"?n=r:(n=r.url,o=rJ(r));let s=await(t||b.fetch)(n,o);if(s.ok){let i=new Uint8Array(await s.arrayBuffer());return new Dh(i,e)}else throw new Error(s.statusText)}var rJ=r=>({method:r.method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:r.referrer,integrity:r.integrity});function Ky(r){return typeof r=="string"&&r.substr(0,7)==="file://"}var Fh=class extends Nh{constructor(e,t={}){super();this.input=e;this.options=t}async iterator(){if(Ky(this.input)&&$().get("IS_NODE")){let e=Ph();this.input=e.readFileSync(this.input.substr(7))}return new Dh(this.input,this.options)}};var Mh=class extends Nh{constructor(e,t={}){super();this.url=e;this.fileOptions=t}async iterator(){return Ky(this.url)?new Fh(this.url,this.fileOptions).iterator():sE(this.url,this.fileOptions)}};function aE(r,e={}){return new Sh(new Mh(r),e)}function iE(r){let e=Ch(r);return Fn(async()=>e)}function uE(r){return Fn(async()=>{let e=await r();return Ch(()=>e.next())})}async function lE(r,e){return Ah.create(r,e)}async function pE(r){return _h.create(r)}var cE="0.0.0";function ne(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&b.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}var nJ=xr.whereImpl,gw=class extends ss{constructor(){super();this.blockSize=48;this.firstUse=!0;this.data=new Ga(this,Uo())}nextDataId(){return gw.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,$().get("IS_NODE")&&I.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let o={id:this.nextDataId()};return this.data.set(o,{values:e,dtype:n,refCount:1}),o}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(i=>b.encodeString(i));o=this.write(s,e,t)}else o=this.write(n,e,t);return{dataId:o,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,o,s){this.data.set(e,{values:t,dtype:o,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let o=this.readSync(n.real.dataId),s=this.readSync(n.imag.dataId);return I.mergeRealAndImagArrays(o,s)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>b.decodeString(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}makeOutput(e,t,n){let o=this.write(e,t,n);return Uo().makeTensorFromDataId(o,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=b.now();return e(),{kernelMs:b.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ne([e],"where");let t=this.readSync(e.dataId);return nJ(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},Eh=gw;Eh.nextDataId=0;var wm={};Ye(wm,{addImpl:()=>yw,bincountImpl:()=>Im,bincountReduceImpl:()=>Vy,ceilImpl:()=>xw,concatImpl:()=>gp,equalImpl:()=>Tw,expImpl:()=>Iw,expm1Impl:()=>vw,floorImpl:()=>ww,gatherNdImpl:()=>jy,gatherV2Impl:()=>Hy,greaterEqualImpl:()=>_w,greaterImpl:()=>Sw,lessEqualImpl:()=>Nw,lessImpl:()=>Aw,linSpaceImpl:()=>qy,logImpl:()=>Dw,maxImpl:()=>Xy,maximumImpl:()=>Pw,minimumImpl:()=>Fw,multiplyImpl:()=>Rh,negImpl:()=>Mw,notEqualImpl:()=>Ew,prodImpl:()=>Rw,rangeImpl:()=>yp,rsqrtImpl:()=>Lw,sigmoidImpl:()=>BE,simpleAbsImpl:()=>bw,sliceImpl:()=>xp,sparseFillEmptyRowsImpl:()=>Yy,sparseReshapeImpl:()=>Qy,sparseSegmentReductionImpl:()=>vm,sqrtImpl:()=>zE,squaredDifferenceImpl:()=>$w,stridedSliceImpl:()=>Zy,stringNGramsImpl:()=>Jy,stringSplitImpl:()=>ex,stringToHashBucketFastImpl:()=>tx,subImpl:()=>Ow,tileImpl:()=>rx,topKImpl:()=>nx,transposeImpl:()=>Cm,uniqueImpl:()=>ox});function bw(r){let e=new Float32Array(r.length);for(let t=0;t<r.length;++t)e[t]=Math.abs(r[t]);return e}var oJ=r=>{let{x:e}=r.inputs,t=r.backend;ne(e,"abs");let n=new Float32Array(b.sizeFromShape(e.shape)),o=t.data.get(e.dataId).values;return n=bw(o),t.makeOutput(n,e.shape,e.dtype)},fE={kernelName:is,backendName:"cpu",kernelFunc:oJ};function tt(r){return(e,t,n,o,s)=>{let i=I.assertAndGetBroadcastShape(e,t),a=i.length,u=b.computeStrides(i),l=b.sizeFromShape(i),p=b.getTypedArrayFromDType(s,l),c=e.length,m=t.length,f=b.computeStrides(e),d=b.computeStrides(t),h=I.getBroadcastDims(e,i),g=I.getBroadcastDims(t,i);if(h.length+g.length===0)for(let x=0;x<p.length;++x)p[x]=r(n[x%n.length],o[x%o.length]);else for(let x=0;x<p.length;++x){let y=b.indexToLoc(x,a,u),T=y.slice(-c);h.forEach(A=>T[A]=0);let k=b.locToIndex(T,c,f),C=y.slice(-m);g.forEach(A=>C[A]=0);let N=b.locToIndex(C,m,d);p[x]=r(n[k],o[N])}return[p,i]}}function Cr(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,a=t.makeTensorInfo(n.shape,"complex64"),u=t.data.get(a.dataId);return u.complexTensorInfos={real:t.makeTensorInfo(n.shape,"float32",s),imag:t.makeTensorInfo(o.shape,"float32",i)},a}var dE={kernelName:Nu,backendName:"cpu",kernelFunc:Cr};function Tm(r,e,t="float32"){if(t==="complex64"){let o=Tm(r,e,"float32"),s=Tm(r,e,"float32");return Cr({inputs:{real:o,imag:s},backend:r})}let n=b.makeZerosTypedArray(b.sizeFromShape(e),t);return r.makeTensorInfo(e,t,n)}function Xr(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var hE={kernelName:Wn,backendName:"cpu",kernelFunc:Xr};function Ws(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.real,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var gE={kernelName:Bu,backendName:"cpu",kernelFunc:Ws};function Us(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return Xr({inputs:{x:o},backend:t});let i=Tm(t,o.shape,o.dtype),a=Us({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=Cr({inputs:{real:a,imag:i},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),u}if(o.dtype==="complex64"){let i=Ws({inputs:{input:o},backend:t}),a=Us({inputs:{x:i},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(i),a}if(!b.hasEncodingLoss(o.dtype,s)){let i=Xr({inputs:{x:o},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32"){let i=t.data.get(o.dataId).values,a=Int32Array.from(i);return t.makeTensorInfo(o.shape,"int32",a)}if(s==="bool"){let i=t.data.get(o.dataId).values,a=b.toTypedArray([0],o.dtype),[u,l]=tt((p,c)=>p!==c?1:0)(o.shape,[],i,a,"bool");return t.makeTensorInfo(l,"bool",u)}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var bE={kernelName:zn,backendName:"cpu",kernelFunc:Us};function at(r,e,t,n){return t==null?({inputs:o,backend:s})=>{let{a:i,b:a}=o,u=s;ne([i,a],r);let l=u.data.get(i.dataId).values,p=u.data.get(a.dataId).values,c=i.dtype==="string"?I.fromUint8ToStringArray(l):l,m=i.dtype==="string"?I.fromUint8ToStringArray(p):p,f=n||i.dtype,[d,h]=e(i.shape,a.shape,c,m,f);return u.makeTensorInfo(h,f,d)}:({inputs:o,backend:s})=>{let{a:i,b:a}=o,u=s;if(i.dtype==="complex64"||a.dtype==="complex64"){let l=Us({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),p=u.data.get(l.dataId),c=p.complexTensorInfos.real,m=p.complexTensorInfos.imag,f=u.data.get(c.dataId).values,d=u.data.get(m.dataId).values,h=Us({inputs:{x:a},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(h.dataId),x=g.complexTensorInfos.real,y=g.complexTensorInfos.imag,T=u.data.get(x.dataId).values,k=u.data.get(y.dataId).values,[C,N,A]=t(i.shape,a.shape,f,d,T,k),M=u.makeTensorInfo(A,"float32",C),E=u.makeTensorInfo(A,"float32",N),B=Cr({inputs:{real:M,imag:E},backend:u});return u.disposeIntermediateTensorInfo(l),u.disposeIntermediateTensorInfo(h),u.disposeIntermediateTensorInfo(M),u.disposeIntermediateTensorInfo(E),B}else{let l=u.data.get(i.dataId).values,p=u.data.get(a.dataId).values,c=n||i.dtype,[m,f]=e(i.shape,a.shape,l,p,c);return u.makeTensorInfo(f,c,m)}}}function km(r){return(e,t,n,o,s,i)=>{let a=I.assertAndGetBroadcastShape(e,t),u=b.sizeFromShape(a),l=a.length,p=b.computeStrides(a),c=b.getTypedArrayFromDType("float32",u),m=b.getTypedArrayFromDType("float32",u),f=I.getBroadcastDims(e,a),d=I.getBroadcastDims(t,a),h=I.mergeRealAndImagArrays(n,o),g=I.mergeRealAndImagArrays(s,i),x=e.length,y=b.computeStrides(e),T=t.length,k=b.computeStrides(t);if(f.length+d.length===0)for(let C=0;C<c.length;C++){let N=C%h.length,A=C%g.length,M=r(h[N*2],h[N*2+1],g[A*2],g[A*2+1]);c[C]=M.real,m[C]=M.imag}else for(let C=0;C<c.length;C++){let N=b.indexToLoc(C,l,p),A=N.slice(-x);f.forEach(U=>A[U]=0);let M=b.locToIndex(A,x,y),E=N.slice(-T);d.forEach(U=>E[U]=0);let B=b.locToIndex(E,T,k),W=r(h[M*2],h[M*2+1],g[B*2],g[B*2+1]);c[C]=W.real,m[C]=W.imag}return[c,m,a]}}var yw=tt((r,e)=>r+e),sJ=km((r,e,t,n)=>({real:r+t,imag:e+n})),cu=at(Cn,yw,sJ),yE={kernelName:Cn,backendName:"cpu",kernelFunc:cu};function Im(r,e,t,n,o){let s=b.sizeFromShape(n),i=b.makeZerosTypedArray(o,t);for(let a=0;a<r.length;a++){let u=r[a];if(u<0)throw new Error("Input x must be non-negative!");u>=o||(s>0?i[u]+=e[a]:i[u]+=1)}return i}function Vy(r,e,t,n=!1){let o=r.shape[0],s=r.shape[1],i=Ce([o,t],e.dtype);for(let a=0;a<o;a++)for(let u=0;u<s;u++){let l=r.get(a,u);if(l<0)throw new Error("Input x must be non-negative!");l>=t||(n?i.set(1,a,l):e.size>0?i.set(i.get(a,l)+e.get(a,u),a,l):i.set(i.get(a,l)+1,a,l))}return i}function yn(r){return(e,t,n)=>{let o=b.getTypedArrayFromDType(t,e.length);for(let s=0;s<e.length;++s)o[s]=r(e[s],n);return o}}function Le(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:i}=n;if(ne(i,r),i.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let a=s,u=a.data.get(i.dataId).values,l=b.sizeFromShape(i.shape),p=t||i.dtype,c=b.getArrayFromDType(p,l);for(let m=0;m<l;++m)c[m]=e(u[m],o);return a.makeTensorInfo(i.shape,p,c)}}function Ks(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:i}=n;if(ne(i,r),i.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let a=s,u=a.data.get(i.dataId).values,l=t||i.dtype,p=e(u,l,o);return a.makeTensorInfo(i.shape,l,p)}}var xw=yn(r=>Math.ceil(r)),aJ=Ks(oo,xw),xE={kernelName:oo,backendName:"cpu",kernelFunc:aJ};function gp(r,e,t,n){let o=b.getArrayFromDType(t,b.sizeFromShape(e));if(n&&t!=="string"){let s=0;r.forEach(i=>{let a=b.sizeFromShape(i.shape);o.set(i.vals,s),s+=a})}else{let s=0;r.forEach(i=>{let a=t==="string"?I.fromUint8ToStringArray(i.vals):i.vals,u=0;for(let l=0;l<i.shape[0];++l){let p=l*e[1]+s;for(let c=0;c<i.shape[1];++c)o[p+c]=a[u++]}s+=i.shape[1]})}return o}var Tw=tt((r,e)=>r===e?1:0),kw=at(Zs,Tw,null,"bool"),TE={kernelName:Zs,backendName:"cpu",kernelFunc:kw};var Iw=yn(r=>Math.exp(r)),Cw=Ks(mo,Iw,"float32"),kE={kernelName:mo,backendName:"cpu",kernelFunc:Cw};var vw=yn(r=>Math.expm1(r)),iJ=Ks(Js,vw),IE={kernelName:Js,backendName:"cpu",kernelFunc:iJ};var ww=yn(r=>Math.floor(r)),uJ=Ks(fo,ww),CE={kernelName:fo,backendName:"cpu",kernelFunc:uJ};function jy(r,e,t,n,o,s,i,a,u){let l=Ce([n,s],t);for(let p=0;p<n;p++){let c=[],m=0;for(let f=0;f<o;f++){let d=r[p*o+f];m+=d*i[f],c.push(d)}if(m<0||m>=u/s)throw new Error(`Invalid indices: ${c} does not index into ${a}`);for(let f=0;f<s;f++)l.values[p*s+f]=e.get(...e.indexToLoc(m*s+f))}return l}function Hy(r,e,t){let n=Ce(t,r.dtype);for(let o=0;o<n.size;++o){let i=n.indexToLoc(o).slice(),a=i[0],u=i[2],l=e.locToIndex([a,u]);i[2]=e.values[l];let p=r.locToIndex(i);n.values[o]=r.values[p]}return n}var Sw=tt((r,e)=>r>e?1:0),lJ=at(ra,Sw,null,"bool"),vE={kernelName:ra,backendName:"cpu",kernelFunc:lJ};var _w=tt((r,e)=>r>=e?1:0),pJ=at(bo,_w,null,"bool"),wE={kernelName:bo,backendName:"cpu",kernelFunc:pJ};var Aw=tt((r,e)=>r<e?1:0),cJ=at(oa,Aw,null,"bool"),SE={kernelName:oa,backendName:"cpu",kernelFunc:cJ};var Nw=tt((r,e)=>r<=e?1:0),mJ=at(sa,Nw,null,"bool"),_E={kernelName:sa,backendName:"cpu",kernelFunc:mJ};function qy(r,e,t){let n=(e-r)/(t-1),o=b.makeZerosTypedArray(t,"float32");o[0]=r;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}var Dw=yn(r=>Math.log(r)),fJ=Ks(yo,Dw),AE={kernelName:yo,backendName:"cpu",kernelFunc:fJ};function Xy(r,e,t,n){let o=b.getTypedArrayFromDType(n,b.sizeFromShape(t));for(let s=0;s<o.length;++s){let i=s*e,a=r[i];for(let u=0;u<e;++u){let l=r[i+u];(Number.isNaN(l)||l>a)&&(a=l)}o[s]=a}return o}var Pw=tt((r,e)=>Math.max(r,e)),dJ=at(To,Pw),NE={kernelName:To,backendName:"cpu",kernelFunc:dJ};var Fw=tt((r,e)=>Math.min(r,e)),hJ=at(vo,Fw),DE={kernelName:vo,backendName:"cpu",kernelFunc:hJ};var Rh=tt((r,e)=>r*e),gJ=km((r,e,t,n)=>({real:r*t-e*n,imag:r*n+e*t})),bp=at(So,Rh,gJ),PE={kernelName:So,backendName:"cpu",kernelFunc:bp};function Mw(r,e,t){let n=b.createScalarValue(-1,t);return Rh([],e,n,r,t)}function bJ(r){let{inputs:e,backend:t}=r,{x:n}=e;ne(n,"neg");let o=t.data.get(n.dataId).values,[s,i]=Mw(o,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,s)}var FE={kernelName:ms,backendName:"cpu",kernelFunc:bJ};var Ew=tt((r,e)=>r!==e?1:0),yJ=at(ia,Ew,null,"bool"),ME={kernelName:ia,backendName:"cpu",kernelFunc:yJ};function Cm(r,e,t,n,o){let s=e.length,i=b.sizeFromShape(e),a=b.computeStrides(e),u=b.computeStrides(o),l=b.getTypedArrayFromDType(t,b.sizeFromShape(o));for(let p=0;p<i;++p){let c=b.indexToLoc(p,s,a),m=new Array(c.length);for(let d=0;d<m.length;d++)m[d]=c[n[d]];let f=b.locToIndex(m,s,u);l[f]=r[p]}return l}function ur(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{perm:s}=t;ne(o,"transpose");let i=o.shape.length,a=new Array(i);for(let c=0;c<a.length;c++)a[c]=o.shape[s[c]];let u=n.data.get(o.dataId).values,l=Cm(u,o.shape,o.dtype,s,a);return{dataId:n.write(l,a,o.dtype),shape:a,dtype:o.dtype}}var EE={kernelName:Wo,backendName:"cpu",kernelFunc:ur};function Rw(r,e,t,n){let[o,s]=I.computeOutAndReduceShapes(r,n),i=Kt(e,"int32"),a=b.makeZerosTypedArray(b.sizeFromShape(o),i),u=b.sizeFromShape(s);for(let l=0;l<a.length;++l){let p=l*u,c=1;for(let m=0;m<u;++m)c*=t[p+m];a[l]=c}return{outVals:a,outShape:o,outDtype:i}}function xJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;ne(o,"prod");let a=o.shape.length,u=b.parseAxisParam(s,o.shape),l=I.getAxesPermutation(u,a),p=u,c=o,m=[];l!=null&&(c=ur({inputs:{x:o},backend:t,attrs:{perm:l}}),m.push(c),p=I.getInnerMostAxes(p.length,a));let f=t.data.get(c.dataId).values,{outVals:d,outShape:h,outDtype:g}=Rw(c.shape,c.dtype,f,p),x=h;return i&&(x=I.expandShapeToKeepDim(h,u)),m.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.makeTensorInfo(x,g,d)}var RE={kernelName:ca,backendName:"cpu",kernelFunc:xJ};function yp(r,e,t,n){let o=r===e,s=r<e&&t<0,i=e<r&&t>1;if(o||s||i)return b.makeZerosTypedArray(0,n);let a=Math.abs(Math.ceil((e-r)/t)),u=b.makeZerosTypedArray(a,n);e<r&&t===1&&(t=-1),u[0]=r;for(let l=1;l<u.length;l++)u[l]=u[l-1]+t;return u}var Lw=yn(r=>1/Math.sqrt(r)),TJ=Ks(Mo,Lw),LE={kernelName:Mo,backendName:"cpu",kernelFunc:TJ};var BE=yn(r=>1/(1+Math.exp(-r))),Bw=Le(Ro,r=>1/(1+Math.exp(-r))),$E={kernelName:Ro,backendName:"cpu",kernelFunc:Bw};function xp(r,e,t,n,o){let s=kt.isSliceContinous(n,e,t),i=b.sizeFromShape(t),a=b.computeStrides(n);if(s){let c=kt.computeFlatOffset(e,a);return o==="string"?r.slice(c,c+i):r.subarray(c,c+i)}let u=o==="string"?I.fromUint8ToStringArray(r):r,l=Ce(n,o,u),p=Ce(t,o);for(let c=0;c<p.size;++c){let m=p.indexToLoc(c),f=m.map((d,h)=>d+e[h]);p.set(l.get(...f),...m)}return o==="string"?I.fromStringArrayToUint8(p.values):p.values}function Vs(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:i}=n;ne(o,"slice");let[a,u]=kt.parseSliceParams(o,s,i);kt.assertParamsValid(o,a,u);let l=t.data.get(o.dataId).values,p=xp(l,a,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,p)}var OE={kernelName:bs,backendName:"cpu",kernelFunc:Vs};function Yy(r,e,t,n,o,s,i){let a=e[0],u=s[0],l=new Array(u),p=new Array(a),c=e[1];if(u===0){if(a!==0)throw new Error(`Received SparseTensor with denseShape[0] = 0 but
         indices.shape[0] = ${a}`);let g=b.getArrayFromDType(t,0),x=b.getArrayFromDType(o,0);return[g,[0,c],x,l,p]}let m=!0,f=0,d=new Array(u).fill(0);for(let g=0;g<a;++g){let x=r[g*c];if(x<0)throw new Error(`indices(${g}, 0) is invalid: ${x} < 0`);if(x>=u)throw new Error(`indices(${g}, 0) is invalid: ${x} >= ${u}`);++d[x],m=m&&x>=f,f=x}let h=!0;for(let g=0;g<u;++g){let x=d[g]===0;l[g]=x,h=h&&!x,d[g]=Math.max(d[g],1),g>0&&(d[g]+=d[g-1])}if(h&&m){let g=r,x=n;for(let y=0;y<a;++y)p[y]=y;return[g,[a,c],x,l,p]}else{let g=d[u-1],x=b.getArrayFromDType(t,g*c),y=b.getArrayFromDType(o,g),T=new Array(u).fill(0);for(let k=0;k<a;++k){let C=r[k*c],N=T[C],A=(C===0?0:d[C-1])+N;T[C]++;for(let M=0;M<c;++M)x[A*c+M]=r[k*c+M];y[A]=n[k],p[k]=A}for(let k=0;k<u;++k)if(T[k]===0){let N=k===0?0:d[k-1];x[N*c+0]=k;for(let A=1;A<c;++A)x[N*c+A]=0;y[N]=i}return[x,[g,c],y,l,p]}}function Qy(r,e,t,n,o){let s=b.sizeFromShape(n),i=e[0],a=o.length,u=[],l=1,p=-1;for(let g=0;g<a;++g){let x=o[g];if(x===-1){if(p!==-1)throw new Error(`only one output dimension may be -1, not both ${p} and ${g}`);p=g,u.push(1)}else{if(x<0)throw new Error(`size ${g} must be non-negative, not ${x}`);l*=x,u.push(x)}}if(p!==-1){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");let g=Math.trunc(s/l);if(l*g!==s)throw new Error(`Input to reshape is a SparseTensor with ${s}
          dense values, but the requested shape requires a multiple of ${l}. inputShape=${n} outputShape= ${u}`);u[p]=g}let c=b.sizeFromShape(u);if(c!==s)throw new Error(`Input to reshape is a tensor with ${s} dense values, but the requested shape has ${c}. inputShape=${n} outputShape=${u}`);let m=n.length,f=[];if(m>0){f[m-1]=1;for(let g=m-2;g>=0;--g)f[g]=f[g+1]*n[g+1]}let d=[];if(a>0){d[a-1]=1;for(let g=a-2;g>=0;--g)d[g]=d[g+1]*u[g+1]}let h=b.getArrayFromDType(t,i*a);for(let g=0;g<i;++g){let x=0;for(let y=0;y<m;++y)x+=r[g*m+y]*f[y];for(let y=0;y<a;++y)h[g*a+y]=Math.trunc(x/d[y]),x%=d[y]}return[h,[i,a],u]}function vm(r,e,t,n,o,s=!1,i=0){let a=n.length;if(a!==o.length)throw new Error("segmentIds and indices should have same size.");let u=[e[0],r.length/e[0]],l=u[1],c=a>0?o[a-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");let m=e.slice();m[0]=c;let f=m.reduce((T,k)=>T*k,1),d=b.getArrayFromDType(t,f);if(a===0)return c>0&&d.fill(i),[d,m];if(c<=0)throw new Error("segment ids must be >= 0");let h=0,g=1,x=0,y=o[h];for(;;){let T=0;if(g<a){if(T=o[g],y===T){++g;continue}if(y>=T)throw new Error("segment ids are not increasing")}if(y<0||y>=c)throw new Error(`Segment id ${y} out of range [0, ${c}), possibly because segmentIds input is not sorted.`);y>x&&d.fill(i,x*l,y*l);for(let k=h;k<g;++k){let C=n[k];if(C<0||C>=u[0])throw new Error(`Bad: indices[${k}] == ${n[k]} out of range [0, ${u[0]})`);for(let N=0;N<l;N++)d[y*l+N]+=r[C*l+N]}if(s)for(let k=0;k<l;k++)d[y*l+k]/=g-h;if(h=g,++g,x=y+1,y=T,g>a)break}return x<c&&d.fill(i,x*l,c*l),[d,m]}var zE=yn(r=>Math.sqrt(r)),kJ=Le(Lo,r=>Math.sqrt(r)),GE={kernelName:Lo,backendName:"cpu",kernelFunc:kJ};var $w=tt((r,e)=>{let t=r-e;return t*t}),IJ=at(Oo,$w),WE={kernelName:Oo,backendName:"cpu",kernelFunc:IJ};function Zy(r,e,t,n){let o=Ce(r,e.dtype);for(let s=0;s<o.size;s++){let i=o.indexToLoc(s),a=new Array(i.length);for(let u=0;u<a.length;u++)a[u]=i[u]*t[u]+n[u];o.set(e.get(...a),...i)}return o}var UE=class{constructor(e,t,n,o,s,i){this.separator=b.encodeString(e),this.nGramWidths=t,this.leftPad=b.encodeString(n),this.rightPad=b.encodeString(o),this.padWidth=s,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,o,s,i){for(let a=0;a<s;++a){let u=this.getPadWidth(i),l=Math.max(0,u-a),p=Math.max(0,u-(s-(a+1))),c=i-(l+p),m=t+(l>0?0:a-u),f=0;f+=l*this.leftPad.length;for(let y=0;y<c;++y)f+=e[m+y].length;f+=p*this.rightPad.length,f+=(l+p+c-1)*this.separator.length,n[o+a]=new Uint8Array(f);let h=n[o+a],g=0,x=y=>y.forEach(T=>h[g++]=T);for(let y=0;y<l;++y)x(this.leftPad),x(this.separator);for(let y=0;y<c-1;++y)x(e[m+y]),x(this.separator);if(c>0){x(e[m+c-1]);for(let y=0;y<p;++y)x(this.separator),x(this.rightPad)}else{for(let y=0;y<p-1;++y)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(e,t){let n=e.length,o=t.length;if(o>0){let u=t[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let l=1;l<o;++l){let p=t[l]>=u;if(p=p&&t[l]<=n,!p)throw new Error(`Invalid split value ${t[l]}, must be in [${u}, ${n}]`);u=t[l]}if(u!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${u}`)}let s=o-1,i=b.getArrayFromDType("int32",o);if(n===0||o===0){let u=new Array(n);for(let l=0;l<=s;++l)i[l]=0;return[u,i]}i[0]=0;for(let u=1;u<=s;++u){let l=t[u]-t[u-1],p=0;this.nGramWidths.forEach(c=>{p+=this.getNumNGrams(l,c)}),this.preserveShort&&l>0&&p===0&&(p=1),i[u]=i[u-1]+p}let a=new Array(i[s]);for(let u=0;u<s;++u){let l=t[u],p=i[u];if(this.nGramWidths.forEach(c=>{let m=t[u+1]-t[u],f=this.getNumNGrams(m,c);this.createNGrams(e,l,a,p,f,c),p+=f}),this.preserveShort&&p===i[u]){let c=t[u+1]-t[u];if(c===0)continue;let m=c+2*this.padWidth,f=1;this.createNGrams(e,l,a,p,f,m)}}return[a,i]}};function Jy(r,e,t,n,o,s,i,a){return new UE(t,n,o,s,i,a).compute(r,e)}function CJ(r,e,t,n){if(!r.length)return;if(e.length===0){for(let s=0;s<r.length;++s)n.push(r.subarray(s,s+1));return}if(e.length===1){let s=e[0],i=r.indexOf(s);for(;i!==-1;){let a=r.subarray(0,i);(!t||a.length!==0)&&n.push(a),r=r.subarray(i+1),i=r.indexOf(s)}(!t||r.length!==0)&&n.push(r);return}let o=0;for(let s=0;s<r.length+1;s++)if(s===r.length||e.indexOf(r[s])!==-1){let i=r.subarray(o,s);(!t||i.length!==0)&&n.push(i),o=s+1}}function ex(r,e,t){let n=r.length,o=[],s=0,i=0,a=new Array(n);for(let m=0;m<n;++m){let f=o.length;CJ(r[m],e,t,o);let d=o.length-f;a[m]=d,s+=d,i=Math.max(i,d)}let u=b.getArrayFromDType("int32",s*2),l=new Array(s),p=[n,i],c=0;for(let m=0;m<n;++m)for(let f=0;f<a[m];++f)u[c*2]=m,u[c*2+1]=f,l[c]=o[c],++c;return[u,l,p]}function tx(r,e){let t=b.getArrayFromDType("int32",r.length);for(let n=0;n<r.length;++n)t[n]=b.fingerPrint64(r[n]).modulo(e).getLowBitsUnsigned();return t}var Ow=tt((r,e)=>r-e),vJ=km((r,e,t,n)=>({real:r-t,imag:e-n})),Lh=at(zo,Ow,vJ),KE={kernelName:zo,backendName:"cpu",kernelFunc:Lh};function rx(r,e){let t=new Array(r.rank);for(let o=0;o<t.length;o++)t[o]=r.shape[o]*e[o];let n=Ce(t,r.dtype);for(let o=0;o<n.values.length;++o){let s=n.indexToLoc(o),i=new Array(r.rank);for(let u=0;u<i.length;u++)i[u]=s[u]%r.shape[u];let a=r.locToIndex(i);n.values[o]=r.values[a]}return n}var Bh=(r,e)=>{let t=e.value-r.value;return t===0?r.index-e.index:t};function VE(r,e,t=0,n=r.length-1){for(;n>t;){if(n-t>600){let a=n-t+1,u=e-t+1,l=Math.log(a),p=.5*Math.exp(2*l/3),c=.5*Math.sqrt(l*p*(a-p)/a)*Math.sign(u-a/2),m=Math.max(t,Math.floor(e-u*p/a+c)),f=Math.min(n,Math.floor(e+(a-u)*p/a+c));VE(r,e,m,f)}let o=r[e],s=t,i=n;for(b.swap(r,t,e),Bh(r[n],o)>0&&b.swap(r,t,n);s<i;){for(b.swap(r,s,i),s++,i--;Bh(r[s],o)<0;)s=s+1;for(;Bh(r[i],o)>0;)i=i-1}Bh(r[t],o)===0?b.swap(r,t,i):(i=i+1,b.swap(r,i,n)),i<=e&&(t=i+1),e<=i&&(n=i-1)}}function nx(r,e,t,n,o){let s=e[e.length-1],[i,a]=[r.length/s,s],u=b.getTypedArrayFromDType(t,i*n),l=b.getTypedArrayFromDType("int32",i*n);for(let c=0;c<i;c++){let m=c*a,f=r.subarray(m,m+a),d=new Array(f.length);f.forEach((y,T)=>d[T]={value:y,index:T}),n<d.length&&(VE(d,n),d=d.slice(0,n)),o&&d.sort(Bh);let h=c*n,g=u.subarray(h,h+n),x=l.subarray(h,h+n);for(let y=0;y<n;y++)g[y]=d[y].value,x[y]=d[y].index}let p=e.slice();return p[p.length-1]=n,[Ce(p,t,u),Ce(p,"int32",l)]}function ox(r,e,t,n){let o=b.parseAxisParam(e,t)[0],s=[1,t[0],1];for(let d=0;d<o;d++)s[0]*=t[d];s[1]=t[o];for(let d=o+1;d<t.length;d++)s[2]*=t[d];let i={},a=new Int32Array(t[o]),u=new xt(s,n,r),l=[],p=s[0]===1&&s[2]===1;for(let d=0;d<t[o];d++){let h;if(p)h=r[d].toString();else{let g=[];for(let x=0;x<s[0];x++)for(let y=0;y<s[2];y++)g.push(u.get(x,d,y));h=g.join(",")}if(i[h]!==void 0)a[d]=i[h];else{let g=Object.keys(i).length;i[h]=g,a[d]=g,l.push(d)}}let c=s.slice();c[1]=Object.keys(i).length;let m=new xt(c,n);l.forEach((d,h)=>{for(let g=0;g<s[0];g++)for(let x=0;x<s[2];x++)m.set(u.get(g,d,x),g,h,x)});let f=t.slice();return f[o]=c[1],{outputValues:m.values,outputShape:f,indices:a}}var wJ="0.0.0";Vu("cpu",()=>new Eh,1);var zw=Le(co,r=>r>=0?r:Math.exp(r)-1),jE={kernelName:co,backendName:"cpu",kernelFunc:zw};function Gw(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n;ne([o],"leakyRelu");let i=b.sizeFromShape(o.shape),a=t.data.get(o.dataId).values,u=b.getTypedArrayFromDType("float32",i);for(let l=0;l<a.length;l++)u[l]=a[l]<0?s*a[l]:a[l];return t.makeTensorInfo(o.shape,"float32",u)}var HE={kernelName:na,backendName:"cpu",kernelFunc:Gw};var SJ=tt((r,e)=>r<0?e*r:r);function Ww(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e;ne([n,o],"prelu");let s=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,[a,u]=SJ(n.shape,o.shape,s,i,"float32");return t.makeTensorInfo(u,"float32",a)}var qE={kernelName:No,backendName:"cpu",kernelFunc:Ww};var Uw=Le(Do,r=>Math.max(0,r)),XE={kernelName:Do,backendName:"cpu",kernelFunc:Uw};var Kw=Le(Fo,r=>Math.min(Math.max(0,r),6)),YE={kernelName:Fo,backendName:"cpu",kernelFunc:Kw};function Sm(r,e,t,n,o){if(t==="linear")return Xr({inputs:{x:e},backend:r});if(t==="relu")return Uw({inputs:{x:e},backend:r});if(t==="elu")return zw({inputs:{x:e},backend:r});if(t==="relu6")return Kw({inputs:{x:e},backend:r});if(t==="prelu")return Ww({inputs:{x:e,alpha:n},backend:r});if(t==="leakyrelu")return Gw({inputs:{x:e},backend:r,attrs:{alpha:o}});if(t==="sigmoid")return Bw({inputs:{x:e},backend:r});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}function nt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,i=b.sizeFromShape(o.shape),a=b.inferFromImplicitShape(s,i),u=b.sizeFromShape(a);b.assert(i===u,()=>`The new shape (${a}) has ${u} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),t.incRef(o.dataId);let l=t.data.get(o.dataId);if(l.complexTensorInfos!=null){let p=l.complexTensorInfos.real,c=l.complexTensorInfos.imag;p.shape=a,c.shape=a}return{dataId:o.dataId,shape:a,dtype:o.dtype}}var QE={kernelName:hs,backendName:"cpu",kernelFunc:nt};function Vw(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:i,transposeB:a}=n;ne([o,s],"matMul");let u=o.shape.length,l=s.shape.length,p=i?o.shape[u-2]:o.shape[u-1],c=a?s.shape[l-1]:s.shape[l-2],m=i?o.shape[u-1]:o.shape[u-2],f=a?s.shape[l-2]:s.shape[l-1],d=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=b.sizeFromShape(d),x=b.sizeFromShape(h),T=Ds.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([m,f]);b.assert(p===c,()=>`Error in matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${i} and transposeB=${a} must match.`);let k=i?[g,p,m]:[g,m,p],C=a?[x,f,c]:[x,c,f],N=nt({inputs:{x:o},backend:t,attrs:{shape:k}}),A=nt({inputs:{x:s},backend:t,attrs:{shape:C}}),M=i?N.shape[1]:N.shape[2],E=i?N.shape[2]:N.shape[1],B=a?A.shape[1]:A.shape[2],W=Math.max(g,x),U=t.data.get(N.dataId).values,K=t.data.get(A.dataId).values,j=b.computeStrides(N.shape),V=b.computeStrides(A.shape),[q,ee,Z]=i?[j[0],1,j[1]]:[j[0],j[1],1],[te,oe,ie]=a?[1,V[1],V[0]]:[V[1],1,V[0]],se=E*B,ue=Ce([W,E,B],N.dtype),ye=ue.values,de=t.blockSize;for(let Te=0;Te<W;Te++)for(let Se=0;Se<E;Se+=de)for(let Be=0;Be<B;Be+=de)for(let $e=0;$e<M;$e+=de){let Ke=Math.min(Se+de,E),Y=Math.min(Be+de,B),bt=Math.min($e+de,M);for(let Ct=Se;Ct<Ke;Ct++)for(let Dt=Be;Dt<Y;Dt++){let Gt=0;for(let ht=$e;ht<bt;ht++){let st=Math.min(Te,g-1)*q,Wt=Math.min(Te,x-1)*ie,Rn=U[st+Ct*ee+ht*Z],lr=K[ht*te+Dt*oe+Wt];Gt+=Rn*lr}ye[Te*se+(Ct*B+Dt)]+=Gt}}return t.disposeIntermediateTensorInfo(N),t.disposeIntermediateTensorInfo(A),t.makeTensorInfo(T,ue.dtype,ue.values)}var ZE={kernelName:no,backendName:"cpu",kernelFunc:Vw};function _J(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:i,preluActivationWeights:a}=e,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:c}=n,m,f,d,h=[];m=Vw({inputs:{a:o,b:s},attrs:{transposeA:u,transposeB:l},backend:t}),i&&(f=cu({inputs:{a:m,b:i},backend:t}),h.push(m),m=f),p&&(d=Sm(t,m,p,a,c),h.push(m),m=d);for(let x of h)t.disposeIntermediateTensorInfo(x);return m}var JE={kernelName:Cs,backendName:"cpu",kernelFunc:_J};var AJ=Le(ki,r=>Math.acos(r)),eR={kernelName:ki,backendName:"cpu",kernelFunc:AJ};var NJ=Le(Ii,r=>Math.acosh(r)),tR={kernelName:Ii,backendName:"cpu",kernelFunc:NJ};function DJ(r){let{inputs:e,backend:t}=r,n=e;ne(e,"addN");let o=n.map(a=>t.data.get(a.dataId).values),s=Ce(n[0].shape,n[0].dtype),i=s.values;for(let a=0;a<n.length;a++){let u=o[a];for(let l=0;l<i.length;l++)i[l]+=u[l]}return t.makeTensorInfo(s.shape,s.dtype,s.values)}var rR={kernelName:eo,backendName:"cpu",kernelFunc:DJ};function PJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;ne(o,"all");let a=b.parseAxisParam(s,o.shape),u=a,l=I.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=ur({inputs:{x:o},backend:t,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,o.shape.length)),I.assertAxesAreInnerMostDims("all",u,p.shape.length);let[c,m]=I.computeOutAndReduceShapes(p.shape,u),f=b.sizeFromShape(m),d=b.makeZerosTypedArray(b.sizeFromShape(c),p.dtype),h=t.data.get(p.dataId).values;for(let x=0;x<d.length;++x){let y=x*f,T=h[y];for(let k=0;k<f;++k){let C=h[y+k];T=T&&C}d[x]=T}l!=null&&t.disposeIntermediateTensorInfo(p);let g=t.makeTensorInfo(c,p.dtype,d);if(i){let x=I.expandShapeToKeepDim(c,a),y=nt({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),y}return g}var nR={kernelName:Ci,backendName:"cpu",kernelFunc:PJ};function FJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;ne(o,"any");let a=b.parseAxisParam(s,o.shape),u=a,l=I.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=ur({inputs:{x:o},backend:t,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,o.shape.length)),I.assertAxesAreInnerMostDims("any",u,p.shape.length);let[c,m]=I.computeOutAndReduceShapes(p.shape,u),f=b.sizeFromShape(m),d=b.makeZerosTypedArray(b.sizeFromShape(c),p.dtype),h=t.data.get(p.dataId).values;for(let x=0;x<d.length;++x){let y=x*f,T=h[y];for(let k=0;k<f;++k){let C=h[y+k];T=T||C}d[x]=T}l!=null&&t.disposeIntermediateTensorInfo(p);let g=t.makeTensorInfo(c,p.dtype,d);if(i){let x=I.expandShapeToKeepDim(c,a),y=nt({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),y}return g}var oR={kernelName:vi,backendName:"cpu",kernelFunc:FJ};function MJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;ne(o,"argMax");let i=b.parseAxisParam(s,o.shape),a=I.getAxesPermutation(i,o.shape.length),u=o,l=[];a!=null&&(u=ur({inputs:{x:o},backend:t,attrs:{perm:a}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],I.assertAxesAreInnerMostDims("argMax",i,u.shape.length);let[p,c]=I.computeOutAndReduceShapes(u.shape,i),m=b.sizeFromShape(p),f=b.makeZerosTypedArray(m,"int32"),d=b.sizeFromShape(c),h=t.data.get(u.dataId).values;for(let g=0;g<f.length;++g){let x=g*d,y=h[x],T=0;for(let k=0;k<d;++k){let C=h[x+k];C>y&&(y=C,T=k)}f[g]=T}return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(p,"int32",f)}var sR={kernelName:to,backendName:"cpu",kernelFunc:MJ};function EJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;ne(o,"argMin");let i=b.parseAxisParam(s,o.shape),a=I.getAxesPermutation(i,o.shape.length),u=o,l=[];a!=null&&(u=ur({inputs:{x:o},backend:t,attrs:{perm:a}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],I.assertAxesAreInnerMostDims("argMin",i,u.shape.length);let[p,c]=I.computeOutAndReduceShapes(u.shape,i),m=b.sizeFromShape(p),f=b.makeZerosTypedArray(m,"int32"),d=b.sizeFromShape(c),h=t.data.get(u.dataId).values;for(let g=0;g<f.length;++g){let x=g*d,y=h[x],T=0;for(let k=0;k<d;++k){let C=h[x+k];C<y&&(y=C,T=k)}f[g]=T}return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(p,"int32",f)}var aR={kernelName:Ka,backendName:"cpu",kernelFunc:EJ};var RJ=Le(wi,r=>Math.asin(r)),iR={kernelName:wi,backendName:"cpu",kernelFunc:RJ};var LJ=Le(Si,r=>Math.asinh(r)),uR={kernelName:Si,backendName:"cpu",kernelFunc:LJ};var BJ=Le(_i,r=>Math.atan(r)),lR={kernelName:_i,backendName:"cpu",kernelFunc:BJ};var $J=tt((r,e)=>Math.atan2(r,e)),OJ=at(Ni,$J),pR={kernelName:Ni,backendName:"cpu",kernelFunc:OJ};var zJ=Le(Ai,r=>Math.atanh(r)),cR={kernelName:Ai,backendName:"cpu",kernelFunc:zJ};function _m(r,e,t,n,o,s){let i=o.strideHeight,a=o.strideWidth,u=o.dilationHeight,l=o.dilationWidth,p=o.effectiveFilterHeight,c=o.effectiveFilterWidth,m=o.padInfo.top,f=o.padInfo.left,d=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=Ce(o.outShape,t),g=h.values,x=o.outShape[1]*o.outShape[2]*o.outShape[3],y=o.outShape[2]*o.outShape[3],T=o.outShape[3];for(let k=0;k<o.batchSize;++k){let C=k*x,N=k*n[0];for(let A=0;A<o.inChannels;++A)for(let M=0;M<o.outHeight;++M){let E=M*i-m,B=Math.max(0,E),W=Math.min(o.inHeight,p+E),U=C+M*y;for(let K=0;K<o.outWidth;++K){let j=K*a-f,V=Math.max(0,j),q=Math.min(o.inWidth,c+j),ee=d,Z=0,te=0;for(let ie=B;ie<W;ie+=u){let se=N+ie*n[1];for(let ue=V;ue<q;ue+=l){let ye=se+ue*n[2],de=r[ye+A];s==="max"&&de>ee?ee=de:s==="avg"&&(Z+=de,te++)}if(isNaN(ee))break}let oe=U+K*T+A;g[oe]=s==="avg"?Z/te:ee}}}return h}function sx(r,e,t,n,o=!1,s=!1){let i=Ce(n.outShape,"int32"),a=n.strideHeight,u=n.strideWidth,l=n.dilationHeight,p=n.dilationWidth,c=n.effectiveFilterHeight,m=n.effectiveFilterWidth,f=n.padInfo.top,d=n.padInfo.left,h=Ce(e,t,r);for(let g=0;g<n.batchSize;++g)for(let x=0;x<n.inChannels;++x)for(let y=0;y<n.outHeight;++y){let T=y*a-f,k=T;for(;k<0;)k+=l;let C=Math.min(n.inHeight,c+T);for(let N=0;N<n.outWidth;++N){let A=N*u-d,M=A;for(;M<0;)M+=p;let E=Math.min(n.inWidth,m+A),B=Number.NEGATIVE_INFINITY,W=-1;for(let U=k;U<C;U+=l){let K=U-T;for(let j=M;j<E;j+=p){let V=j-A,q=h.get(g,U,j,x);q>B&&(B=q,o?W=s?((g*n.inHeight+U)*n.inWidth+j)*n.inChannels+x:(U*n.inWidth+j)*n.inChannels+x:W=K*m+V)}}i.set(W,g,y,N,x)}}return i}function ax(r,e,t,n,o,s){let i=o.strideDepth,a=o.strideHeight,u=o.strideWidth,l=o.dilationDepth,p=o.dilationHeight,c=o.dilationWidth,m=o.effectiveFilterDepth,f=o.effectiveFilterHeight,d=o.effectiveFilterWidth,h=o.padInfo.front,g=o.padInfo.top,x=o.padInfo.left,y=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,T=Ce(o.outShape,t),k=T.values,C=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],N=o.outShape[2]*o.outShape[3]*o.outShape[4],A=o.outShape[3]*o.outShape[4],M=o.outShape[4];for(let E=0;E<o.batchSize;++E){let B=E*C,W=E*n[0];for(let U=0;U<o.inChannels;++U)for(let K=0;K<o.outDepth;++K){let j=K*i-h,V=j;for(;V<0;)V+=l;let q=Math.min(o.inDepth,m+j),ee=B+K*N;for(let Z=0;Z<o.outHeight;++Z){let te=Z*a-g,oe=te;for(;oe<0;)oe+=p;let ie=Math.min(o.inHeight,f+te),se=ee+Z*A;for(let ue=0;ue<o.outWidth;++ue){let ye=ue*u-x,de=ye;for(;de<0;)de+=c;let Te=Math.min(o.inWidth,d+ye),Se=se+ue*M,Be=y,$e=0,Ke=0;for(let bt=V;bt<q;bt+=l){let Ct=W+bt*n[1];for(let Dt=oe;Dt<ie;Dt+=p){let Gt=Ct+Dt*n[2];for(let ht=de;ht<Te;ht+=c){let st=Gt+ht*n[3],Wt=r[st+U];if(s==="max"&&Wt>Be?Be=Wt:s==="avg"&&($e+=Wt,Ke++),isNaN(Be))break}if(isNaN(Be))break}if(isNaN(Be))break}let Y=Se+U;k[Y]=s==="avg"?$e/Ke:Be}}}}return T}function mR(r,e){let t=Ce(e.outShape,"int32"),n=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,a=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,p=e.effectiveFilterHeight,c=e.effectiveFilterWidth,m=e.padInfo.front,f=e.padInfo.top,d=e.padInfo.left;for(let h=0;h<e.batchSize;++h)for(let g=0;g<e.inChannels;++g)for(let x=0;x<e.outDepth;++x){let y=x*n-m,T=y;for(;T<0;)T+=i;let k=Math.min(e.inDepth,l+y);for(let C=0;C<e.outHeight;++C){let N=C*o-f,A=N;for(;A<0;)A+=a;let M=Math.min(e.inHeight,p+N);for(let E=0;E<e.outWidth;++E){let B=E*s-d,W=B;for(;W<0;)W+=u;let U=Math.min(e.inWidth,c+B),K=Number.NEGATIVE_INFINITY,j=-1;for(let V=T;V<k;V+=i){let q=V-y;for(let ee=A;ee<M;ee+=a){let Z=ee-N;for(let te=W;te<U;te+=u){let oe=te-B,ie=r.get(h,V,ee,te,g);ie>=K&&(K=ie,j=q*p*c+Z*p+oe)}}}t.set(j,h,x,C,E,g)}}}return t}function GJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;ne(o,"avgPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,l=1;b.assert(I.eitherStridesOrDilationsAreOne(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let p=I.computePool2DInfo(o.shape,s,i,l,a,u),c;if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))c=Xr({inputs:{x:o},backend:t});else{let m=t.data.get(o.dataId).values,f=b.computeStrides(o.shape),d=_m(m,o.shape,o.dtype,f,p,"avg");c=t.makeTensorInfo(p.outShape,o.dtype,d.values)}return c}var fR={kernelName:ro,backendName:"cpu",kernelFunc:GJ};function WJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u,dataFormat:l}=n;ne(o,"avgPool3d");let p=I.computePool3DInfo(o.shape,s,i,1,a,u,l),c=t.data.get(o.dataId).values,m=ax(c,o.shape,o.dtype,b.computeStrides(o.shape),p,"avg");return t.makeTensorInfo(m.shape,"float32",m.values)}var dR={kernelName:Au,backendName:"cpu",kernelFunc:WJ};function UJ(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:i,strides:a,pad:u,dimRoundingMode:l}=n;ne([o,s],"avgPool3DGrad");let p=I.computePool3DInfo(s.shape,i,a,1,u,l),c=p.strideDepth,m=p.strideHeight,f=p.strideWidth,d=p.filterDepth,h=p.filterHeight,g=p.filterWidth,x=p.dilationDepth,y=p.dilationHeight,T=p.dilationWidth,k=p.effectiveFilterDepth,C=p.effectiveFilterHeight,N=p.effectiveFilterWidth,A=k-1-p.padInfo.front,M=N-1-p.padInfo.left,E=C-1-p.padInfo.top,B=Ce(s.shape,"float32"),W=1/(d*h*g),U=t.bufferSync(o);for(let K=0;K<p.batchSize;++K)for(let j=0;j<p.inChannels;++j)for(let V=0;V<p.inDepth;++V)for(let q=0;q<p.inHeight;++q)for(let ee=0;ee<p.inWidth;++ee){let Z=V-A,te=q-E,oe=ee-M,ie=0;for(let se=0;se<k;se+=x){let ue=(Z+se)/c;if(!(ue<0||ue>=p.outDepth||Math.floor(ue)!==ue))for(let ye=0;ye<C;ye+=y){let de=(te+ye)/m;if(!(de<0||de>=p.outHeight||Math.floor(de)!==de))for(let Te=0;Te<N;Te+=T){let Se=(oe+Te)/f;if(Se<0||Se>=p.outWidth||Math.floor(Se)!==Se)continue;ie+=U.get(K,ue,de,Se,j)}}}B.set(ie*W,K,V,q,ee,j)}return t.makeTensorInfo(B.shape,B.dtype,B.values)}var hR={kernelName:Qp,backendName:"cpu",kernelFunc:UJ};function KJ(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,i=s;ne([o,s],"avgPoolGrad");let{filterSize:a,strides:u,pad:l}=n,p=I.computePool2DInfo(i.shape,a,u,1,l),c=p.strideHeight,m=p.strideWidth,f=p.filterHeight,d=p.filterWidth,h=p.dilationHeight,g=p.dilationWidth,x=p.effectiveFilterHeight,y=p.effectiveFilterWidth,T=y-1-p.padInfo.left,k=x-1-p.padInfo.top,C=Ce(i.shape,"float32"),N=1/(f*d),A=t.data.get(o.dataId).values,M=Ce(o.shape,"float32",A);for(let E=0;E<p.batchSize;++E)for(let B=0;B<p.inChannels;++B)for(let W=0;W<p.inHeight;++W)for(let U=0;U<p.inWidth;++U){let K=W-k,j=U-T,V=0;for(let q=0;q<x;q+=h){let ee=(K+q)/c;if(!(ee<0||ee>=p.outHeight||Math.floor(ee)!==ee))for(let Z=0;Z<y;Z+=g){let te=(j+Z)/m;if(te<0||te>=p.outWidth||Math.floor(te)!==te)continue;V+=M.get(E,ee,te,B)}}C.set(V*N,E,W,U,B)}return t.makeTensorInfo(C.shape,C.dtype,C.values)}var gR={kernelName:Yp,backendName:"cpu",kernelFunc:KJ};function VJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,scale:s,offset:i,mean:a,variance:u}=e;b.assert(a.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(s==null||a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ne([o,a,u,s,i],"batchNorm");let{varianceEpsilon:l}=n;l==null&&(l=.001);let p=t.data.get(o.dataId).values,c=t.data.get(a.dataId).values,m=t.data.get(u.dataId).values,f=s?t.data.get(s.dataId).values:new Float32Array([1]),d=i?t.data.get(i.dataId).values:new Float32Array([0]),h=new Float32Array(p.length),g=d.length,x=f.length,y=m.length,T=c.length,k=0,C=0,N=0,A=0;for(let M=0;M<p.length;++M)h[M]=d[k++]+(p[M]-c[C++])*f[N++]/Math.sqrt(m[A++]+l),k>=g&&(k=0),C>=T&&(C=0),N>=x&&(N=0),A>=y&&(A=0);return t.makeTensorInfo(o.shape,o.dtype,h)}var bR={kernelName:go,backendName:"cpu",kernelFunc:VJ};function jJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:i}=n;ne([o],"batchToSpaceND");let a=s.reduce((x,y)=>x*y),u=I.getReshaped(o.shape,s,a),l=I.getPermuted(u.length,s.length),p=I.getReshapedPermuted(o.shape,s,a),c=I.getSliceBeginCoords(i,s.length),m=I.getSliceSize(p,i,s.length),f=nt({inputs:{x:o},backend:t,attrs:{shape:u}}),d=ur({inputs:{x:f},backend:t,attrs:{perm:l}}),h=nt({inputs:{x:d},backend:t,attrs:{shape:p}}),g=Vs({inputs:{x:h},backend:t,attrs:{begin:c,size:m}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var yR={kernelName:us,backendName:"cpu",kernelFunc:jJ};function HJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:i}=n,a=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,l=Im(a,u,s.dtype,s.shape,i);return t.makeTensorInfo([i],s.dtype,l)}var xR={kernelName:Zp,backendName:"cpu",kernelFunc:HJ};function qJ(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,a=I.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var TR={kernelName:Jp,backendName:"cpu",kernelFunc:qJ};var XJ=Le(Gn,(r,e)=>{let t=e;return r>t.clipValueMax?t.clipValueMax:r<t.clipValueMin?t.clipValueMin:r}),kR={kernelName:Gn,backendName:"cpu",kernelFunc:XJ};var YJ=r=>{let{x:e}=r.inputs,t=r.backend,n=new Float32Array(b.sizeFromShape(e.shape)),o=t.data.get(e.dataId),s=o.complexTensorInfos.real,i=o.complexTensorInfos.imag,a=t.data.get(s.dataId).values,u=t.data.get(i.dataId).values;for(let l=0;l<a.length;l++){let p=a[l],c=u[l];n[l]=Math.hypot(p,c)}return t.makeOutput(n,e.shape,"float32")},IR={kernelName:Du,backendName:"cpu",kernelFunc:YJ};function pi(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.imag,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var CR={kernelName:Eu,backendName:"cpu",kernelFunc:pi};function sl(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],i=I.computeOutShape(e.map(h=>h.shape),s);if(b.sizeFromShape(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);let a=e.filter(h=>b.sizeFromShape(h.shape)>0);if(a.length===1)return Xr({inputs:{x:a[0]},backend:t});let u=a.map(h=>h.shape);if(I.assertParamsConsistent(u,s),a[0].dtype==="complex64"){let h=a.map(k=>Ws({inputs:{input:k},backend:t})),g=a.map(k=>pi({inputs:{input:k},backend:t})),x=sl({inputs:h,backend:t,attrs:{axis:s}}),y=sl({inputs:g,backend:t,attrs:{axis:s}}),T=Cr({inputs:{real:x,imag:y},backend:t});return h.forEach(k=>t.disposeIntermediateTensorInfo(k)),g.forEach(k=>t.disposeIntermediateTensorInfo(k)),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),T}let l=a.map(h=>{let g=b.sizeFromShape(h.shape.slice(s));return nt({inputs:{x:h},backend:t,attrs:{shape:[-1,g]}})}),p=l.map(h=>({vals:t.data.get(h.dataId).values,shape:h.shape}));i=I.computeOutShape(l.map(h=>h.shape),1);let c=l[0].shape[0]===1,m=gp(p,i,e[0].dtype,c),f=I.computeOutShape(a.map(h=>h.shape),s),d=t.makeTensorInfo(f,e[0].dtype,m);return l.forEach(h=>t.disposeIntermediateTensorInfo(h)),d}var vR={kernelName:ls,backendName:"cpu",kernelFunc:sl};function jw(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dataFormat:u,dilations:l,dimRoundingMode:p}=n;ne([o,s],"conv2d");let c=I.convertConv2DDataFormat(u),m=I.computeConv2DInfo(o.shape,s.shape,i,l,a,p,!1,c),f=m.filterHeight,d=m.filterWidth,h=m.dilationHeight,g=m.dilationWidth,x=m.padInfo.left,y=m.padInfo.top,T=m.dataFormat==="channelsLast",k=new xt(m.outShape,o.dtype),C=b.computeStrides(o.shape),N=b.computeStrides(s.shape),A=C[0],M=T?C[1]:C[2],E=T?C[2]:1,B=T?1:C[1],W=k.strides[0],U=T?k.strides[1]:k.strides[2],K=T?k.strides[2]:1,j=T?1:k.strides[1],V=t.data.get(o.dataId).values,q=t.data.get(s.dataId).values,ee=k.values;for(let Z=0;Z<m.batchSize;++Z){let te=Z*A,oe=Z*W;for(let ie=0;ie<m.outHeight;++ie){let se=oe+ie*U,ue=ie*m.strideHeight-y;for(let ye=0;ye<f;++ye){let de=ue+ye*h;if(de<0||de>=m.inHeight)continue;let Te=ye*N[0],Se=te+de*M;for(let Be=0;Be<m.outWidth;++Be){let $e=se+Be*K,Ke=Be*m.strideWidth-x;for(let Y=0;Y<d;++Y){let bt=Ke+Y*g;if(bt<0||bt>=m.inWidth)continue;let Ct=Te+Y*N[1],Dt=Se+bt*E,Gt=Ct;for(let ht=0;ht<m.inChannels;++ht){let st=V[Dt+ht*B];for(let Wt=0;Wt<m.outChannels;++Wt)ee[$e+Wt*j]+=st*q[Gt+Wt];Gt+=m.outChannels}}}}}}return t.makeTensorInfo(k.shape,k.dtype,ee)}var wR={kernelName:so,backendName:"cpu",kernelFunc:jw};function QJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,pad:a,dataFormat:u,dimRoundingMode:l,filterShape:p}=n;ne([o,s],"conv2dBackpropFilter");let c=I.convertConv2DDataFormat(u),m=I.computeConv2DInfo(o.shape,p,i,1,a,l,!1,c),{strideHeight:f,strideWidth:d,filterHeight:h,filterWidth:g}=m,x=m.dataFormat==="channelsLast",y=new xt(m.filterShape,"float32"),T=m.padInfo.left,k=m.padInfo.top,C=t.data.get(o.dataId).values,N=t.data.get(s.dataId).values,A=new xt(o.shape,o.dtype,C),M=new xt(s.shape,s.dtype,N);for(let E=0;E<h;++E){let B=Math.max(0,Math.ceil((k-E)/f)),W=Math.min(m.outHeight,(m.inHeight+k-E)/f);for(let U=0;U<g;++U){let K=Math.max(0,Math.ceil((T-U)/d)),j=Math.min(m.outWidth,(m.inWidth+T-U)/d);for(let V=0;V<m.inChannels;++V)for(let q=0;q<m.outChannels;++q){let ee=0;for(let Z=0;Z<m.batchSize;++Z)for(let te=B;te<W;++te){let oe=E+te*f-k;for(let ie=K;ie<j;++ie){let se=U+ie*d-T;x?ee+=A.get(Z,oe,se,V)*M.get(Z,te,ie,q):ee+=A.get(Z,V,oe,se)*M.get(Z,q,te,ie)}}y.set(ee,E,U,V,q)}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}var SR={kernelName:ec,backendName:"cpu",kernelFunc:QJ};function ZJ(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:i,strides:a,pad:u,dataFormat:l,dimRoundingMode:p}=n;ne([o,s],"conv2dBackpropInput");let c=b.computeStrides(s.shape),m=b.computeStrides(o.shape),f=I.convertConv2DDataFormat(l),d=I.computeConv2DInfo(i,s.shape,a,1,u,p,!1,f),h=new xt(d.inShape,"float32"),g=h.values,x=t.data.get(o.dataId).values,y=t.data.get(s.dataId).values,[T,k,C]=c,{batchSize:N,filterHeight:A,filterWidth:M,inChannels:E,inHeight:B,inWidth:W,outChannels:U,outHeight:K,outWidth:j,strideHeight:V,strideWidth:q}=d;f=d.dataFormat;let ee=A-1-d.padInfo.top,Z=M-1-d.padInfo.left,te=f==="channelsLast",oe=h.strides[0],ie=te?h.strides[1]:h.strides[2],se=te?h.strides[2]:1,ue=te?1:h.strides[1],ye=m[0],de=te?m[1]:m[2],Te=te?m[2]:1,Se=te?1:m[1];for(let Be=0;Be<N;++Be)for(let $e=0;$e<E;++$e)for(let Ke=0;Ke<B;++Ke){let Y=Ke-ee,bt=Math.max(0,Math.ceil(Y/V)),Ct=Math.min(K,(A+Y)/V);for(let Dt=0;Dt<W;++Dt){let Gt=Dt-Z,ht=Math.max(0,Math.ceil(Gt/q)),st=Math.min(j,(M+Gt)/q),Wt=0;for(let lr=bt;lr<Ct;++lr){let es=lr*V-Y;for(let Or=ht;Or<st;++Or){let ts=Or*q-Gt,Tn=ye*Be+de*lr+Te*Or,Ln=T*(A-1-es)+k*(M-1-ts)+C*$e;for(let zr=0;zr<U;++zr){let Zn=x[Tn+Se*zr],gr=y[Ln+zr];Wt+=Zn*gr}}}let Rn=oe*Be+ie*Ke+se*Dt+ue*$e;g[Rn]=Wt}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}var _R={kernelName:ao,backendName:"cpu",kernelFunc:ZJ};function JJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u}=n;ne([o,s],"conv3d");let l=I.computeConv3DInfo(o.shape,s.shape,i,u,a),{filterDepth:p,filterHeight:c,filterWidth:m,dilationDepth:f,dilationHeight:d,dilationWidth:h,padInfo:g}=l,x=g.front,y=g.left,T=g.top,k=new xt(l.outShape,o.dtype),C=t.data.get(o.dataId).values,N=t.data.get(s.dataId).values,A=k.values,M=b.computeStrides(o.shape),E=b.computeStrides(s.shape);for(let B=0;B<l.batchSize;++B){let W=B*M[0],U=B*k.strides[0];for(let K=0;K<l.outDepth;++K){let j=U+K*k.strides[1],V=K*l.strideDepth-x;for(let q=0;q<p;++q){let ee=V+q*f;if(ee<0||ee>=l.inDepth)continue;let Z=q*E[0],te=W+ee*M[1];for(let oe=0;oe<l.outHeight;++oe){let ie=j+oe*k.strides[2],se=oe*l.strideHeight-T;for(let ue=0;ue<c;++ue){let ye=se+ue*d;if(ye<0||ye>=l.inHeight)continue;let de=Z+ue*E[1],Te=te+ye*M[2];for(let Se=0;Se<l.outWidth;++Se){let Be=ie+Se*l.outChannels,$e=Se*l.strideWidth-y;for(let Ke=0;Ke<m;++Ke){let Y=$e+Ke*h;if(Y<0||Y>=l.inWidth)continue;let bt=de+Ke*E[2],Ct=Te+Y*l.inChannels,Dt=bt;for(let Gt=0;Gt<l.inChannels;++Gt){let ht=C[Ct+Gt];for(let st=0;st<l.outChannels;++st)A[Be+st]+=ht*N[Dt+st];Dt+=l.outChannels}}}}}}}}return t.makeTensorInfo(k.shape,k.dtype,k.values)}var AR={kernelName:Pu,backendName:"cpu",kernelFunc:JJ};function eee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,pad:a,filterShape:u}=n;ne([o,s],"conv3dBackpropFilterV2");let l=b.computeStrides(o.shape),p=b.computeStrides(s.shape),c=I.computeConv3DInfo(o.shape,u,i,1,a),m=c.strideDepth,f=c.strideHeight,d=c.strideWidth,h=c.filterDepth,g=c.filterHeight,x=c.filterWidth,y=new xt(c.filterShape,"float32"),T=y.values,[k,C,N,A]=y.strides,M=t.data.get(s.dataId).values,[E,B,W,U]=p,K=t.data.get(o.dataId).values,[j,V,q,ee]=l,Z=c.padInfo.front,te=c.padInfo.left,oe=c.padInfo.top;for(let ie=0;ie<h;++ie){let se=Math.max(0,Math.ceil((Z-ie)/m)),ue=Math.min(c.outDepth,(c.inDepth+Z-ie)/m),ye=ie*k;for(let de=0;de<g;++de){let Te=Math.max(0,Math.ceil((oe-de)/f)),Se=Math.min(c.outHeight,(c.inHeight+oe-de)/f),Be=de*C+ye;for(let $e=0;$e<x;++$e){let Ke=Math.max(0,Math.ceil((te-$e)/d)),Y=Math.min(c.outWidth,(c.inWidth+te-$e)/d),bt=$e*N+Be;for(let Ct=0;Ct<c.inChannels;++Ct){let Dt=Ct*A+bt;for(let Gt=0;Gt<c.outChannels;++Gt){let ht=0;for(let st=0;st<c.batchSize;++st){let Wt=st*j,Rn=st*E;for(let lr=se;lr<ue;++lr){let Or=(ie+lr*m-Z)*V+Wt,ts=lr*B+Rn;for(let Tn=Te;Tn<Se;++Tn){let zr=(de+Tn*f-oe)*q+Or,Zn=Tn*W+ts;for(let gr=Ke;gr<Y;++gr){let ns=($e+gr*d-te)*ee+zr,dl=gr*U+Zn;ht+=K[ns+Ct]*M[dl+Gt]}}}}T[Dt+Gt]=ht}}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}var NR={kernelName:tc,backendName:"cpu",kernelFunc:eee};function tee(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:i,strides:a,inputShape:u}=n;ne([o],"conv3dBackpropInputV2");let l=b.computeStrides(o.shape),p=b.computeStrides(s.shape),c=I.computeConv3DInfo(u,s.shape,a,1,i),m=new xt(c.inShape,"float32"),f=m.values,[d,h,g,x]=m.strides,y=t.data.get(o.dataId).values,[T,k,C,N]=l,A=t.data.get(s.dataId).values,[M,E,B,W]=p,{batchSize:U,filterDepth:K,filterHeight:j,filterWidth:V,inChannels:q,inDepth:ee,inHeight:Z,inWidth:te,outChannels:oe,outDepth:ie,outHeight:se,outWidth:ue,strideDepth:ye,strideHeight:de,strideWidth:Te}=c,Se=K-1-c.padInfo.front,Be=j-1-c.padInfo.top,$e=V-1-c.padInfo.left;for(let Ke=0;Ke<U;++Ke)for(let Y=0;Y<q;++Y)for(let bt=0;bt<ee;++bt){let Ct=bt-Se,Dt=Math.max(0,Math.ceil(Ct/ye)),Gt=Math.min(ie,(K+Ct)/ye);for(let ht=0;ht<Z;++ht){let st=ht-Be,Wt=Math.max(0,Math.ceil(st/de)),Rn=Math.min(se,(j+st)/de);for(let lr=0;lr<te;++lr){let es=lr-$e,Or=Math.max(0,Math.ceil(es/Te)),ts=Math.min(ue,(V+es)/Te),Tn=0;for(let Ln=Dt;Ln<Gt;++Ln){let zr=Ln*ye-Ct;for(let Zn=Wt;Zn<Rn;++Zn){let gr=Zn*de-st;for(let rs=Or;rs<ts;++rs){let ns=rs*Te-es,dl=T*Ke+k*Ln+C*Zn+N*rs,Vm=M*(K-1-zr)+E*(j-1-gr)+B*(V-1-ns)+W*Y;for(let Bn=0;Bn<oe;++Bn){let Rp=y[dl+Bn],jm=A[Vm+Bn];Tn+=Rp*jm}}}}f[d*Ke+h*bt+g*ht+x*lr+Y]=Tn}}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}var DR={kernelName:rc,backendName:"cpu",kernelFunc:tee};var ree=Le(io,r=>Math.cos(r)),PR={kernelName:io,backendName:"cpu",kernelFunc:ree};var nee=Le(uo,r=>Math.cosh(r)),FR={kernelName:uo,backendName:"cpu",kernelFunc:nee};function oee(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:i}=e,{cropSize:a,method:u,extrapolationValue:l}=n,[p,c,m,f]=o.shape,d=s.shape[0],[h,g]=a,x=Ce([d,h,g,f],"float32"),y=t.data.get(s.dataId).values,T=t.data.get(i.dataId).values,k=t.data.get(o.dataId).values,C=b.computeStrides(o.shape),N=b.computeStrides(x.shape);for(let A=0;A<d;A++){let M=A*4,E=y[M],B=y[M+1],W=y[M+2],U=y[M+3],K=T[A];if(K>=p)continue;let j=h>1?(W-E)*(c-1)/(h-1):0,V=g>1?(U-B)*(m-1)/(g-1):0;for(let q=0;q<h;q++){let ee=h>1?E*(c-1)+q*j:.5*(E+W)*(c-1);if(ee<0||ee>c-1){for(let Z=0;Z<g;Z++)for(let te=0;te<f;te++){let oe=te+Z*N[2]+q*N[1]+A*N[0];x.values[oe]=l}continue}if(u==="bilinear"){let Z=Math.floor(ee),te=Math.ceil(ee),oe=ee-Z;for(let ie=0;ie<g;ie++){let se=g>1?B*(m-1)+ie*V:.5*(B+U)*(m-1);if(se<0||se>m-1){for(let Te=0;Te<f;Te++){let Se=Te+ie*N[2]+q*N[1]+A*N[0];x.values[Se]=l}continue}let ue=Math.floor(se),ye=Math.ceil(se),de=se-ue;for(let Te=0;Te<f;Te++){let Se=Te+ue*C[2]+Z*C[1]+K*C[0],Be=k[Se];Se=Te+ye*C[2]+Z*C[1]+K*C[0];let $e=k[Se];Se=Te+ue*C[2]+te*C[1]+K*C[0];let Ke=k[Se];Se=Te+ye*C[2]+te*C[1]+K*C[0];let Y=k[Se],bt=Be+($e-Be)*de,Ct=Ke+(Y-Ke)*de;Se=Te+ie*N[2]+q*N[1]+A*N[0],x.values[Se]=bt+(Ct-bt)*oe}}}else for(let Z=0;Z<g;++Z){let te=g>1?B*(m-1)+Z*V:.5*(B+U)*(m-1);if(te<0||te>m-1){for(let se=0;se<f;se++){let ue=se+Z*N[2]+q*N[1]+A*N[0];x.values[ue]=l}continue}let oe=Math.round(te),ie=Math.round(ee);for(let se=0;se<f;se++){let ue=se+oe*C[2]+ie*C[1]+K*C[0],ye=se+Z*N[2]+q*N[1]+A*N[0];x.values[ye]=k[ue]}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}var MR={kernelName:Ys,backendName:"cpu",kernelFunc:oee};function see(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:i,reverse:a}=n;ne(o,"cumsum");let u=I.getAxesPermutation([s],o.shape.length),l=o;u!=null&&(l=ur({inputs:{x:o},backend:t,attrs:{perm:u}}));let p=I.getInnerMostAxes(1,o.shape.length)[0];if(p!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${p}`);let c=Kt(l.dtype,"int32"),m=b.makeZerosTypedArray(b.sizeFromShape(l.shape),c),f=t.data.get(l.dataId).values,d=l.shape[l.shape.length-1],h=a?(x,y)=>x+d-y-1:(x,y)=>x+y;for(let x=0;x<f.length;x+=d)for(let y=0;y<d;y++){let T=h(x,y);if(y===0)m[T]=i?0:f[T];else{let k=h(x,y-1);m[T]=i?f[k]+m[k]:f[T]+m[k]}}let g=t.makeTensorInfo(l.shape,c,m);if(u!=null){let x=I.getUndoAxesPermutation(u),y=ur({inputs:{x:g},backend:t,attrs:{perm:x}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(l),y}return g}var ER={kernelName:Xs,backendName:"cpu",kernelFunc:see};function aee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:i,binaryOutput:a}=n;if(o.shape.length===1){let u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,p=Im(u,l,s.dtype,s.shape,i);return t.makeTensorInfo([i],s.dtype,p)}else if(o.shape.length===2){let u=t.bufferSync(o),l=t.bufferSync(s),p=Vy(u,l,i,a);return t.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var RR={kernelName:nc,backendName:"cpu",kernelFunc:aee};function iee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:i}=n;b.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let a=o.shape[0],u=o.shape[1],l=o.shape[2],p=o.shape[3],c=u*s,m=l*s,f=p/(s*s),d=t.data.get(o.dataId).values,h=new Float32Array(a*c*m*f),g=0;for(let x=0;x<a;++x)for(let y=0;y<c;++y){let T=Math.floor(y/s),k=y%s;for(let C=0;C<m;++C){let N=Math.floor(C/s),A=C%s,M=(k*s+A)*f;for(let E=0;E<f;++E){let W=E+M+p*(N+l*(T+u*x));h[g++]=d[W]}}}return t.makeTensorInfo([a,c,m,f],o.dtype,h)}var LR={kernelName:Qs,backendName:"cpu",kernelFunc:iee};function Hw(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u,dimRoundingMode:l}=n;ne([o,s],"depthwiseConv2DNative");let p=b.computeStrides(o.shape),c=b.computeStrides(s.shape),m=u;m==null&&(m=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(i,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${m}'`);let f=I.computeConv2DInfo(o.shape,s.shape,i,m,a,l,!0),{filterHeight:d,filterWidth:h,dilationHeight:g,dilationWidth:x,padInfo:y}=f,T=y.left,k=y.top,C=f.outChannels/f.inChannels,N=new xt(f.outShape,o.dtype),A=t.data.get(o.dataId).values,M=t.data.get(s.dataId).values,E=N.values;for(let B=0;B<f.batchSize;++B){let W=B*p[0],U=B*N.strides[0];for(let K=0;K<f.outHeight;++K){let j=U+K*N.strides[1],V=K*f.strideHeight-k;for(let q=0;q<d;++q){let ee=V+q*g;if(ee<0||ee>=f.inHeight)continue;let Z=q*c[0],te=W+ee*p[1];for(let oe=0;oe<f.outWidth;++oe){let ie=j+oe*N.strides[2],se=oe*f.strideWidth-T;for(let ue=0;ue<h;++ue){let ye=se+ue*x;if(ye<0||ye>=f.inWidth)continue;let de=Z+ue*c[1],Te=te+ye*f.inChannels,Se=ie,Be=de;for(let $e=0;$e<f.inChannels;++$e){let Ke=A[Te+$e];for(let Y=0;Y<C;++Y)E[Se+Y]+=Ke*M[Be+Y];Se+=C,Be+=C}}}}}}return t.makeTensorInfo(N.shape,N.dtype,N.values)}var BR={kernelName:lo,backendName:"cpu",kernelFunc:Hw};function uee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:l,filterShape:p}=n;ne([o,s],"depthwiseConv2dNativeBackpropFilter");let c=I.computeConv2DInfo(o.shape,p,i,a,u,l,!0),{strideHeight:m,strideWidth:f,filterHeight:d,filterWidth:h}=c,g=new xt(c.filterShape,"float32"),x=c.padInfo.left,y=c.padInfo.top,T=c.outChannels/c.inChannels,k=t.data.get(o.dataId).values,C=new xt(o.shape,o.dtype,k),N=t.data.get(s.dataId).values,A=new xt(s.shape,s.dtype,N);for(let M=0;M<d;++M){let E=Math.max(0,Math.ceil((y-M)/m)),B=Math.min(c.outHeight,(c.inHeight+y-M)/m);for(let W=0;W<h;++W){let U=Math.max(0,Math.ceil((x-W)/f)),K=Math.min(c.outWidth,(c.inWidth+x-W)/f);for(let j=0;j<c.outChannels;++j){let V=Math.trunc(j/T),q=j%T,ee=0;for(let Z=0;Z<c.batchSize;++Z)for(let te=E;te<B;++te){let oe=M+te*m-y;for(let ie=U;ie<K;++ie){let se=W+ie*f-x;ee+=C.get(Z,oe,se,V)*A.get(Z,te,ie,j)}}g.set(ee,M,W,V,q)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}var $R={kernelName:oc,backendName:"cpu",kernelFunc:uee};function lee(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:l,inputShape:p}=n;ne([o,s],"depthwiseConv2DNativeBackpropInput");let c=b.computeStrides(o.shape),m=b.computeStrides(s.shape),f=I.computeConv2DInfo(p,s.shape,i,a,u,l,!0),d=new xt(f.inShape,"float32"),h=d.values,[g,x,y]=d.strides,T=t.data.get(o.dataId).values,[k,C,N]=c,A=t.data.get(s.dataId).values,[M,E,B]=m,{batchSize:W,filterHeight:U,filterWidth:K,inChannels:j,inHeight:V,inWidth:q,outChannels:ee,outHeight:Z,outWidth:te,strideHeight:oe,strideWidth:ie}=f,se=U-1-f.padInfo.top,ue=K-1-f.padInfo.left,ye=ee/j;for(let de=0;de<W;++de)for(let Te=0;Te<j;++Te)for(let Se=0;Se<V;++Se){let Be=Se-se,$e=Math.max(0,Math.ceil(Be/oe)),Ke=Math.min(Z,(U+Be)/oe);for(let Y=0;Y<q;++Y){let bt=Y-ue,Ct=Math.max(0,Math.ceil(bt/ie)),Dt=Math.min(te,(K+bt)/ie),Gt=0;for(let ht=$e;ht<Ke;++ht){let st=ht*oe-Be;for(let Wt=Ct;Wt<Dt;++Wt){let Rn=Wt*ie-bt,lr=k*de+C*ht+N*Wt,es=M*(U-1-st)+E*(K-1-Rn)+B*Te;for(let Or=0;Or<ye;++Or){let ts=Te*ye+Or,Tn=T[lr+ts],Ln=A[es+Or];Gt+=Tn*Ln}}}h[g*de+x*Se+y*Y+Te]=Gt}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}var OR={kernelName:sc,backendName:"cpu",kernelFunc:lee};function pee(r){let{inputs:e,backend:t}=r,{x:n}=e,o=b.sizeFromShape(n.shape),s=t.data.get(n.dataId).values,i=Ce([o,o],n.dtype),a=i.values;for(let l=0;l<s.length;l++)a[l*o+l]=s[l];let u=[...n.shape,...n.shape];return t.makeTensorInfo(u,i.dtype,i.values)}var zR={kernelName:ac,backendName:"cpu",kernelFunc:pee};var GR={kernelName:Fu,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o}=r,{strides:s,pad:i,dilations:a}=t,u=e,l=u.data.get(n.dataId).values,p=n.shape.length,c=u.data.get(o.dataId).values,m=o.shape.length,{batchSize:f,inHeight:d,inWidth:h,inChannels:g,outHeight:x,outWidth:y,padInfo:T,strideHeight:k,strideWidth:C,filterHeight:N,filterWidth:A,dilationHeight:M,dilationWidth:E,outShape:B}=I.computeDilation2DInfo(n.shape,o.shape,s,i,"NHWC",a),W=b.sizeFromShape(B),U=B.length,K=b.getArrayFromDType(n.dtype,W);for(let V=0;V<f;++V)for(let q=0;q<x;++q){let ee=q*k-T.top;for(let Z=0;Z<y;++Z){let te=Z*C-T.left;for(let oe=0;oe<g;++oe){let ie=Number.MIN_SAFE_INTEGER;for(let ue=0;ue<N;++ue){let ye=ee+ue*M;if(ye>=0&&ye<d)for(let de=0;de<A;++de){let Te=te+de*E;if(Te>=0&&Te<h){let Se=b.locToIndex([V,ye,Te,oe],p,b.computeStrides(n.shape)),Be=b.locToIndex([ue,de,oe],m,b.computeStrides(o.shape)),$e=l[Se]+c[Be];$e>ie&&(ie=$e)}}}let se=b.locToIndex([V,q,Z,oe],U,b.computeStrides(B));K[se]=ie}}}return{dataId:u.write(b.toTypedArray(K,n.dtype),B,n.dtype),shape:B,dtype:n.dtype}}};var WR={kernelName:pf,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:i,pad:a,dilations:u}=t,l=e,p=b.toNestedArray(n.shape,l.data.get(n.dataId).values),c=b.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:m,inHeight:f,inWidth:d,inChannels:h,outHeight:g,outWidth:x,padInfo:y,strideHeight:T,strideWidth:k,filterHeight:C,filterWidth:N,dilationHeight:A,dilationWidth:M,outShape:E}=I.computeDilation2DInfo(n.shape,o.shape,i,a,"NHWC",u);b.assert(s.rank===E.length,()=>`Error in ${pf}, dy must have the same rank as output ${E.length}, but got ${s.rank}`);let B=b.toNestedArray(E,l.data.get(s.dataId).values),W=b.makeZerosNestedTypedArray(o.shape,o.dtype);for(let K=0;K<m;++K)for(let j=0;j<g;++j){let V=j*T-y.top;for(let q=0;q<x;++q){let ee=q*k-y.left;for(let Z=0;Z<h;++Z){let te=Number.MIN_SAFE_INTEGER,oe=0,ie=0;for(let se=0;se<C;++se){let ue=V+se*A;if(ue>=0&&ue<f)for(let ye=0;ye<N;++ye){let de=ee+ye*M;if(de>=0&&de<d){let Te=p[K][ue][de][Z]+c[se][ye][Z];Te>te&&(te=Te,oe=se,ie=ye)}}}W[oe][ie][Z]+=B[K][j][q][Z]}}}return{dataId:l.write(b.toTypedArray(W,n.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var UR={kernelName:lf,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:i,pad:a,dilations:u}=t,l=e,p=b.toNestedArray(n.shape,l.data.get(n.dataId).values),c=b.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:m,inHeight:f,inWidth:d,inChannels:h,outHeight:g,outWidth:x,padInfo:y,strideHeight:T,strideWidth:k,filterHeight:C,filterWidth:N,dilationHeight:A,dilationWidth:M,outShape:E}=I.computeDilation2DInfo(n.shape,o.shape,i,a,"NHWC",u);b.assert(s.rank===E.length,()=>`Error in ${lf}, dy must have the same rank as output ${E.length}, but got ${s.rank}`);let B=b.toNestedArray(E,l.data.get(s.dataId).values),W=b.makeZerosNestedTypedArray(n.shape,n.dtype);for(let K=0;K<m;++K)for(let j=0;j<g;++j){let V=j*T-y.top;for(let q=0;q<x;++q){let ee=q*k-y.left;for(let Z=0;Z<h;++Z){let te=Number.MIN_SAFE_INTEGER,oe=V<0?0:V,ie=ee<0?0:ee;for(let se=0;se<C;++se){let ue=V+se*A;if(ue>=0&&ue<f)for(let ye=0;ye<N;++ye){let de=ee+ye*M;if(de>=0&&de<d){let Te=p[K][ue][de][Z]+c[se][ye][Z];Te>te&&(te=Te,oe=ue,ie=de)}}}W[K][oe][ie][Z]+=B[K][j][q][Z]}}}return{dataId:l.write(b.toTypedArray(W,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function mu(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;ne(o,"sum");let a;o.dtype==="bool"?a=Us({inputs:{x:o},backend:t,attrs:{dtype:"int32"}}):a=Xr({inputs:{x:o},backend:t});let u=a.shape.length,l=b.parseAxisParam(s,a.shape),p=I.getAxesPermutation(l,u),c=l,m=a;p!=null&&(m=ur({inputs:{x:a},backend:t,attrs:{perm:p}}),c=I.getInnerMostAxes(c.length,u)),I.assertAxesAreInnerMostDims("sum",c,m.shape.length);let[f,d]=I.computeOutAndReduceShapes(m.shape,c),h=I.upcastType(m.dtype,"int32"),g=Tm(t,f,h),x=b.sizeFromShape(d),y=t.data.get(g.dataId).values,T=t.data.get(m.dataId).values;for(let k=0;k<y.length;++k){let C=k*x,N=0;for(let A=0;A<x;++A)N+=T[C+A];y[k]=N}if(i){let k=I.expandShapeToKeepDim(g.shape,l),C=g;g=nt({inputs:{x:g},backend:t,attrs:{shape:k}}),t.disposeIntermediateTensorInfo(C)}return t.disposeIntermediateTensorInfo(a),p!=null&&t.disposeIntermediateTensorInfo(m),g}var KR={kernelName:Bo,backendName:"cpu",kernelFunc:mu};function cee(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:i,summedDims:a,idDims:u}=I.decodeEinsumEquation(o,s.length);I.checkEinsumDimSizes(i.length,u,s);let{path:l,steps:p}=I.getEinsumComputePath(a,u),c=p.length,m=null,f=i.length,d=[];for(let h=0;h<c;++h){for(let g of p[h]){let{permutationIndices:x,expandDims:y}=I.getEinsumPermutation(f,u[g]),T;I.isIdentityPermutation(x)?T=s[g]:(T=ur({inputs:{x:s[g]},backend:t,attrs:{perm:x}}),d.push(T));let k=T.shape.slice();for(let C=0;C<y.length;++C)k.splice(y[C],0,1);b.arraysEqual(T.shape,k)||(T=nt({inputs:{x:T},backend:t,attrs:{shape:k}}),d.push(T)),m===null?m=T:(m=bp({inputs:{a:T,b:m},backend:t}),d.push(m))}h<c-1&&(l[h]>=0&&(m=mu({inputs:{x:m},backend:t,attrs:{axis:l[h]-(i.length-f),keepDims:!1}}),d.push(m)),f--)}for(let h of d)h!==m&&t.disposeIntermediateTensorInfo(h);return m}var VR={kernelName:Mu,backendName:"cpu",kernelFunc:cee};function mee(r){let{inputs:e,backend:t}=r,{dy:n,y:o}=e;ne([n,o],"eluGrad");let s=new Float32Array(b.sizeFromShape(o.shape)),i=t.data.get(o.dataId).values,a=t.data.get(n.dataId).values;for(let u=0;u<i.length;++u){let l=i[u];l>=1?s[u]=a[u]:s[u]=a[u]*(l+1)}return t.makeTensorInfo(o.shape,"float32",s)}var jR={kernelName:ic,backendName:"cpu",kernelFunc:mee};var fee=I.ERF_P,dee=I.ERF_A1,hee=I.ERF_A2,gee=I.ERF_A3,bee=I.ERF_A4,yee=I.ERF_A5,xee=Le(Di,r=>{let e=Math.sign(r),t=Math.abs(r),n=1/(1+fee*t);return e*(1-((((yee*n+bee)*n+gee)*n+hee)*n+dee)*n*Math.exp(-t*t))}),HR={kernelName:Di,backendName:"cpu",kernelFunc:xee};function Am(r){let{inputs:e,backend:t,attrs:n}=r,{input:o}=e,{dim:s}=n,i=o.shape.length,a=o.shape.slice(),u=s;return s<0&&(b.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),a.splice(u,0,1),nt({inputs:{x:o},backend:t,attrs:{shape:a}})}var qR={kernelName:ps,backendName:"cpu",kernelFunc:Am};var Tee=tt((r,e)=>r/e),$h=at(po,Tee),Oh={kernelName:po,backendName:"cpu",kernelFunc:$h};function ix(r,e,t){let n=r.shape,o=n[0],s=n[1],i=t.data.get(r.dataId),a=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[o,s],p=b.sizeFromShape(l),c=b.getTypedArrayFromDType("float32",p),m=b.getTypedArrayFromDType("float32",p);for(let g=0;g<o;g++){let x=Vs({inputs:{x:a},backend:t,attrs:{begin:[g,0],size:[1,s]}}),y=Vs({inputs:{x:u},backend:t,attrs:{begin:[g,0],size:[1,s]}}),T=Cr({inputs:{real:x,imag:y},backend:t}),{real:k,imag:C}=kee(T,e,t),N=I.mergeRealAndImagArrays(k,C);for(let A=0;A<s;A++){let M=I.getComplexWithIndex(N,A);c[g*s+A]=M.real,m[g*s+A]=M.imag}t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(T)}let f=t.makeTensorInfo(l,"float32",c),d=t.makeTensorInfo(l,"float32",m),h=Cr({inputs:{real:f,imag:d},backend:t});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),h}function kee(r,e,t){let n=b.sizeFromShape(r.shape),o=t.data.get(r.dataId),s=t.data.get(o.complexTensorInfos.real.dataId).values,i=t.data.get(o.complexTensorInfos.imag.dataId).values;if(Iee(n)){let a=qw(s,i,n,e,t),u=[r.shape[0],r.shape[1]];if(e){let l=t.makeTensorInfo(u,"float32",a.real),p=t.makeTensorInfo(u,"float32",a.imag),c=t.makeTensorInfo([],"float32",b.createScalarValue(n,"float32")),m=Xr({inputs:{x:c},backend:t}),f=Oh.kernelFunc({inputs:{a:l,b:c},backend:t}),d=Oh.kernelFunc({inputs:{a:p,b:m},backend:t}),h=t.data.get(f.dataId).values,g=t.data.get(d.dataId).values;return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),{real:h,imag:g}}return a}else{let a=I.mergeRealAndImagArrays(s,i),u=Cee(a,n,e);return I.splitRealAndImagArrays(u)}}function Iee(r){return(r&r-1)==0}function qw(r,e,t,n,o){if(t===1)return{real:r,imag:e};let s=I.mergeRealAndImagArrays(r,e),i=t/2,a=I.complexWithEvenIndex(s),u=a.real,l=a.imag,p=[u.length],c=o.makeTensorInfo(p,"float32",u),m=o.makeTensorInfo(p,"float32",l),f=Cr({inputs:{real:c,imag:m},backend:o}),d=I.complexWithOddIndex(s),h=d.real,g=d.imag,x=[h.length],y=o.makeTensorInfo(x,"float32",h),T=o.makeTensorInfo(x,"float32",g),k=Cr({inputs:{real:y,imag:T},backend:o}),C=qw(u,l,i,n,o),N=C.real,A=C.imag,M=[N.length],E=o.makeTensorInfo(M,"float32",N),B=o.makeTensorInfo(M,"float32",A),W=Cr({inputs:{real:E,imag:B},backend:o}),U=qw(h,g,i,n,o),K=U.real,j=U.imag,V=[K.length],q=o.makeTensorInfo(V,"float32",K),ee=o.makeTensorInfo(V,"float32",j),Z=Cr({inputs:{real:q,imag:ee},backend:o}),te=I.exponents(t,n),oe=[te.real.length],ie=o.makeTensorInfo(oe,"float32",te.real),se=o.makeTensorInfo(oe,"float32",te.imag),ue=Cr({inputs:{real:ie,imag:se},backend:o}),ye=bp({inputs:{a:ue,b:Z},backend:o}),de=cu({inputs:{a:W,b:ye},backend:o}),Te=Lh({inputs:{a:W,b:ye},backend:o}),Se=Ws({inputs:{input:de},backend:o}),Be=Ws({inputs:{input:Te},backend:o}),$e=pi({inputs:{input:de},backend:o}),Ke=pi({inputs:{input:Te},backend:o}),Y=sl({inputs:[Se,Be],backend:o,attrs:{axis:0}}),bt=sl({inputs:[$e,Ke],backend:o,attrs:{axis:0}}),Ct=o.data.get(Y.dataId).values,Dt=o.data.get(bt.dataId).values;return o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(f),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(k),o.disposeIntermediateTensorInfo(E),o.disposeIntermediateTensorInfo(B),o.disposeIntermediateTensorInfo(W),o.disposeIntermediateTensorInfo(q),o.disposeIntermediateTensorInfo(ee),o.disposeIntermediateTensorInfo(Z),o.disposeIntermediateTensorInfo(ie),o.disposeIntermediateTensorInfo(se),o.disposeIntermediateTensorInfo(ue),o.disposeIntermediateTensorInfo(ye),o.disposeIntermediateTensorInfo(de),o.disposeIntermediateTensorInfo(Te),o.disposeIntermediateTensorInfo(Se),o.disposeIntermediateTensorInfo($e),o.disposeIntermediateTensorInfo(Be),o.disposeIntermediateTensorInfo(Ke),o.disposeIntermediateTensorInfo(Y),o.disposeIntermediateTensorInfo(bt),{real:Ct,imag:Dt}}function Cee(r,e,t){let n=new Float32Array(e*2);for(let o=0;o<e;o++){let s=0,i=0;for(let a=0;a<e;a++){let u=I.exponent(o*a,e,t),l=I.getComplexWithIndex(r,a);s+=l.real*u.real-l.imag*u.imag,i+=l.real*u.imag+l.imag*u.real}t&&(s/=e,i/=e),I.assignToTypedArray(n,s,i,o)}return n}function vee(r){let{inputs:e,backend:t}=r,{input:n}=e,o=b.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=o/s,a=nt({inputs:{x:n},backend:t,attrs:{shape:[i,s]}}),u=ix(a,!1,t),l=nt({inputs:{x:u},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),l}var XR={kernelName:uc,backendName:"cpu",kernelFunc:vee};function zh(r){let{backend:e,attrs:t}=r,{shape:n,value:o,dtype:s}=t,i=s||b.inferDtype(o),a=b.getArrayFromDType(i,b.sizeFromShape(n));return wee(a,o,i),e.makeTensorInfo(n,i,a)}var YR={kernelName:Va,backendName:"cpu",kernelFunc:zh};function wee(r,e,t){r.fill(e)}var QR={kernelName:ea,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,o=t,s=b.getTypedArrayFromDType(n.dtype,b.sizeFromShape(n.shape)),[i,a,u,l]=n.shape,p=o.data.get(n.dataId).values;for(let m=0;m<i;m++){let f=m*u*a*l;for(let d=0;d<a;d++){let h=d*(u*l);for(let g=0;g<u;g++){let x=g*l;for(let y=0;y<l;y++){let T=Math.round(u-g-1),k=f+h+x+y,C=p[k];if(T>=0&&T<u){let N=T*l,A=f+h+N+y;C=p[A]}s[k]=C}}}}return{dataId:o.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var See=tt((r,e)=>Math.floor(r/e)),_ee=at(ho,See,null,"int32"),ZR={kernelName:ho,backendName:"cpu",kernelFunc:_ee};function Aee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dataFormat:p,dilations:c,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=jw({inputs:{x:o,filter:s},backend:t,attrs:{strides:u,pad:l,dataFormat:p,dilations:c,dimRoundingMode:m}});if(i){let g=h;h=cu({inputs:{a:h,b:i},backend:t}),t.disposeIntermediateTensorInfo(g)}if(f){let g=h;h=Sm(t,h,f,a,d),t.disposeIntermediateTensorInfo(g)}return h}var JR={kernelName:vs,backendName:"cpu",kernelFunc:Aee};function Nee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dataFormat:p,dilations:c,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=Hw({inputs:{x:o,filter:s},backend:t,attrs:{strides:u,pad:l,dataFormat:p,dilations:c,dimRoundingMode:m}});if(i){let g=h;h=cu({inputs:{a:h,b:i},backend:t}),t.disposeIntermediateTensorInfo(g)}if(f){let g=h;h=Sm(t,h,f,a,d),t.disposeIntermediateTensorInfo(g)}return h}var eL={kernelName:ws,backendName:"cpu",kernelFunc:Nee};function Dee(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=b.sizeFromShape(n.shape),i=o.shape,a=i[i.length-1],[u,l,p,c]=I.prepareAndValidate(n,o);if(l===0)return t.makeTensorInfo(u,n.dtype,[]);let m=t.data.get(o.dataId).values,f=t.bufferSync(n),d=jy(m,f,n.dtype,l,a,p,c,n.shape,s);return t.makeTensorInfo(u,n.dtype,d.values)}var tL={kernelName:ta,backendName:"cpu",kernelFunc:Dee};function Pee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:i,batchDims:a}=n;ne([o,s],"gatherV2");let u=b.parseAxisParam(i,o.shape)[0],l=t.data.get(s.dataId).values,p=o.shape[u];for(let k=0;k<l.length;++k){let C=l[k];b.assert(C<=p-1&&C>=0,()=>`GatherV2: the index value ${C} is not in [0, ${p-1}]`)}let c=a;a==null&&(c=0);let m=b.sizeFromShape(s.shape),f=I.segment_util.collectGatherOpShapeInfo(o,s,u,c),d=nt({inputs:{x:o},backend:t,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),h=nt({inputs:{x:s},backend:t,attrs:{shape:[f.batchSize,m/f.batchSize]}}),g=[f.batchSize,f.outerSize,m/f.batchSize,f.sliceSize],x=t.bufferSync(h),y=t.bufferSync(d),T=Hy(y,x,g);return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.makeTensorInfo(f.outputShape,T.dtype,T.values)}var rL={kernelName:cs,backendName:"cpu",kernelFunc:Pee};function Fee(r){let{inputs:e,backend:t}=r,{input:n}=e,o=b.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=o/s,a=nt({inputs:{x:n},backend:t,attrs:{shape:[i,s]}}),u=ix(a,!0,t),l=nt({inputs:{x:u},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),l}var nL={kernelName:lc,backendName:"cpu",kernelFunc:Fee};var Mee=Le(Pi,r=>Number.isFinite(r)?1:0,"bool"),oL={kernelName:Pi,backendName:"cpu",kernelFunc:Mee};var Eee=Le(Fi,r=>Math.abs(r)===1/0?1:0,"bool"),sL={kernelName:Fi,backendName:"cpu",kernelFunc:Eee};var Ree=Le(Mi,r=>Number.isNaN(r)?1:0,"bool"),aL={kernelName:Mi,backendName:"cpu",kernelFunc:Ree};function Lee(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,i=qy(n,o,s);return e.makeTensorInfo([i.length],"float32",i)}var iL={kernelName:pc,backendName:"cpu",kernelFunc:Lee};var Bee=Le(Ei,r=>Math.log1p(r)),uL={kernelName:Ei,backendName:"cpu",kernelFunc:Bee};var $ee=tt((r,e)=>r&&e),Oee=at(aa,$ee,null,"bool"),lL={kernelName:aa,backendName:"cpu",kernelFunc:Oee};var zee=Le(Ri,r=>r?0:1,"bool"),pL={kernelName:Ri,backendName:"cpu",kernelFunc:zee};var Gee=tt((r,e)=>r||e),Wee=at(Il,Gee,null,"bool"),cL={kernelName:Il,backendName:"cpu",kernelFunc:Wee};function Uee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:i,alpha:a,beta:u}=n;ne(o,"LRN");let l=o.shape[3],p=l-1,c=t.data.get(o.dataId).values,m=b.sizeFromShape(o.shape),f=new Float32Array(m);function d(h){let g=h%l,x=h-g+Math.max(0,g-s),y=h-g+Math.min(g+s,p),T=0;for(;x<=y;x++){let k=c[x];T+=k*k}return T}for(let h=0;h<m;h++){let g=d(h),x=c[h]*Math.pow(i+a*g,-u);f[h]=x}return t.makeTensorInfo(o.shape,o.dtype,f)}var mL={kernelName:Ru,backendName:"cpu",kernelFunc:Uee};function Kee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:i}=e,{depthRadius:a,bias:u,alpha:l,beta:p}=n;ne(i,"LRNGrad");let c=b.sizeFromShape(i.shape),m=i.shape[3],f=t.data.get(i.dataId).values,d=t.data.get(o.dataId).values,h=t.data.get(s.dataId).values,g=new Float32Array(c),x=c;for(let y=0;y<x;y++){let T=y%m,k=y-T+Math.max(0,T-a),C=y-T+Math.min(m,T+a+1),N=0;for(let A=k;A<C;A++)N+=Math.pow(d[A],2);N=l*N+u;for(let A=k;A<C;A++){let M=-2*l*p*d[A]*h[y]/N;y===A&&(M+=Math.pow(N,-p)),M*=f[y],g[A]+=M}}return t.makeTensorInfo(i.shape,o.dtype,g)}var fL={kernelName:cc,backendName:"cpu",kernelFunc:Kee};function Xw(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:i}=n,a=t,u=o.shape,l=u.length,p=b.parseAxisParam(s,u),c=p,m=I.getAxesPermutation(c,l),f=a.data.get(o.dataId).values;if(m!=null){let k=new Array(l);for(let C=0;C<k.length;C++)k[C]=u[m[C]];f=Cm(f,u,o.dtype,m,k),c=I.getInnerMostAxes(c.length,l),u=k}ne(o,"max"),I.assertAxesAreInnerMostDims("max",c,l);let[d,h]=I.computeOutAndReduceShapes(u,c),g=b.sizeFromShape(h),x=Xy(f,g,d,o.dtype),y=a.write(x,d,o.dtype),T=d;return i&&(T=I.expandShapeToKeepDim(d,p)),{dataId:y,shape:T,dtype:o.dtype}}var dL={kernelName:xo,backendName:"cpu",kernelFunc:Xw};function Vee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;ne(o,"maxPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,l=1;b.assert(I.eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let p=I.computePool2DInfo(o.shape,s,i,l,a,u),c;if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))c=Xr({inputs:{x:o},backend:t});else{let m=t.data.get(o.dataId).values,f=b.computeStrides(o.shape),d=_m(m,o.shape,o.dtype,f,p,"max");c=t.makeTensorInfo(p.outShape,o.dtype,d.values)}return c}var hL={kernelName:ko,backendName:"cpu",kernelFunc:Vee};function jee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u,dataFormat:l}=n;ne(o,"maxPool3d");let p=I.computePool3DInfo(o.shape,s,i,1,a,u,l),c=t.data.get(o.dataId).values,m=ax(c,o.shape,o.dtype,b.computeStrides(o.shape),p,"max");return t.makeTensorInfo(m.shape,"float32",m.values)}var gL={kernelName:Lu,backendName:"cpu",kernelFunc:jee};function Hee(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:i,strides:a,pad:u,dimRoundingMode:l}=n;ne([o,s],"maxPool3DGrad");let p=I.computePool3DInfo(s.shape,i,a,1,u,l),c=t.bufferSync(s),m=mR(c,p),f=p.strideDepth,d=p.strideHeight,h=p.strideWidth,g=p.dilationDepth,x=p.dilationHeight,y=p.dilationWidth,T=p.effectiveFilterDepth,k=p.effectiveFilterHeight,C=p.effectiveFilterWidth,N=T-1-p.padInfo.front,A=C-1-p.padInfo.left,M=k-1-p.padInfo.top,E=Ce(s.shape,"float32"),B=t.bufferSync(o);for(let W=0;W<p.batchSize;++W)for(let U=0;U<p.inChannels;++U)for(let K=0;K<p.inDepth;++K)for(let j=0;j<p.inHeight;++j)for(let V=0;V<p.inWidth;++V){let q=K-N,ee=j-M,Z=V-A,te=0;for(let oe=0;oe<T;oe+=g){let ie=(q+oe)/f;if(!(ie<0||ie>=p.outDepth||Math.floor(ie)!==ie))for(let se=0;se<k;se+=x){let ue=(ee+se)/d;if(!(ue<0||ue>=p.outHeight||Math.floor(ue)!==ue))for(let ye=0;ye<C;ye+=y){let de=(Z+ye)/h;if(de<0||de>=p.outWidth||Math.floor(de)!==de)continue;let Te=T*k*C-1-m.get(W,ie,ue,de,U),Se=oe*k*C+se*C+ye,Be=Te===Se?1:0;if(Be===0)continue;te+=B.get(W,ie,ue,de,U)*Be}}}E.set(te,W,K,j,V,U)}return t.makeTensorInfo(E.shape,E.dtype,E.values)}var bL={kernelName:fc,backendName:"cpu",kernelFunc:Hee};function qee(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:i}=e,a=s;ne([s,i],"maxPoolGrad");let{filterSize:u,strides:l,pad:p,dimRoundingMode:c}=n,m=I.computePool2DInfo(a.shape,u,l,1,p,c),f=t.data.get(a.dataId).values,d=Ce(m.outShape,a.dtype,sx(f,a.shape,a.dtype,m).values),h=m.strideHeight,g=m.strideWidth,x=m.dilationHeight,y=m.dilationWidth,T=m.effectiveFilterHeight,k=m.effectiveFilterWidth,C=k-1-m.padInfo.left,N=T-1-m.padInfo.top,A=Ce(a.shape,"float32"),M=t.data.get(o.dataId).values,E=Ce(o.shape,"float32",M);for(let B=0;B<m.batchSize;++B)for(let W=0;W<m.inChannels;++W)for(let U=0;U<m.inHeight;++U)for(let K=0;K<m.inWidth;++K){let j=U-N,V=K-C,q=0;for(let ee=0;ee<T;ee+=x){let Z=(j+ee)/h;if(!(Z<0||Z>=m.outHeight||Math.floor(Z)!==Z))for(let te=0;te<k;te+=y){let oe=(V+te)/g;if(oe<0||oe>=m.outWidth||Math.floor(oe)!==oe)continue;let ie=T*k-1-d.get(B,Z,oe,W),se=ee*k+te,ue=ie===se?1:0;if(ue===0)continue;q+=E.get(B,Z,oe,W)*ue}}A.set(q,B,U,K,W)}return t.makeTensorInfo(A.shape,A.dtype,A.values)}var yL={kernelName:mc,backendName:"cpu",kernelFunc:qee};function xL(r,e,t,n,o){let s=b.computeStrides(e),i=_m(r,e,t,s,o,"max"),a=sx(r,e,t,o,!0,n);return[i.values,a.values]}var TL={kernelName:dc,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:i,includeBatchInIndex:a}=e,u=t;ne(n,"MaxPoolWithArgmax");let l=u.data.get(n.dataId).values,p=I.computePool2DInfo(n.shape,o,s,[1,1],i),[c,m]=xL(l,n.shape,n.dtype,a,p),f=u.write(c,p.outShape,n.dtype),d=u.write(m,p.outShape,n.dtype);return[{dataId:f,shape:p.outShape,dtype:n.dtype},{dataId:d,shape:p.outShape,dtype:"int32"}]}};function Xee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n,a=b.parseAxisParam(s,o.shape),l=I.computeOutAndReduceShapes(o.shape,a)[1],p=b.sizeFromShape(l),c=[],m=t.makeTensorInfo([],"float32",new Float32Array([p]));c.push(m);let f=Us({inputs:{x:o},backend:t,attrs:{dtype:"float32"}});c.push(f);let d=$h({inputs:{a:f,b:m},backend:t});c.push(d);let h=mu({inputs:{x:d},backend:t,attrs:{axis:s,keepDims:i}});return c.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}var kL={kernelName:Io,backendName:"cpu",kernelFunc:Xee};function Yee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;ne(o,"min");let a=b.parseAxisParam(s,o.shape),u=a,l=I.getAxesPermutation(u,o.shape.length),p=o;l!=null&&(p=ur({inputs:{x:o},backend:t,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,o.shape.length)),I.assertAxesAreInnerMostDims("min",u,p.shape.length);let[c,m]=I.computeOutAndReduceShapes(p.shape,u),f=b.sizeFromShape(m),d=b.makeZerosTypedArray(b.sizeFromShape(c),p.dtype),h=t.data.get(p.dataId).values;for(let x=0;x<d.length;++x){let y=x*f,T=h[y];for(let k=0;k<f;++k){let C=h[y+k];(Number.isNaN(C)||C<T)&&(T=C)}d[x]=T}l!=null&&t.disposeIntermediateTensorInfo(p);let g=t.makeTensorInfo(c,p.dtype,d);if(i){let x=I.expandShapeToKeepDim(c,a),y=nt({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),y}return g}var IL={kernelName:Co,backendName:"cpu",kernelFunc:Yee};function Qee(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,mode:i}=n;ne(o,"mirrorPad");let a=s.map((T,k)=>T[0]+o.shape[k]+T[1]),u=s.map(T=>T[0]),l=s.map((T,k)=>T[0]+o.shape[k]),p=i==="reflect"?0:1,c=t.data.get(o.dataId).values,m=o.shape.length,f=b.computeStrides(o.shape),d=b.sizeFromShape(a),h=a.length,g=b.computeStrides(a),x=b.getTypedArrayFromDType(o.dtype,d);for(let T=0;T<d;T++){let k=b.indexToLoc(T,h,g);for(let N=0;N<h;N++)k[N]<u[N]?k[N]=u[N]*2-k[N]-p:k[N]>=l[N]&&(k[N]=(l[N]-1)*2-k[N]+p);k=k.map((N,A)=>N-u[A]);let C=b.locToIndex(k,m,f);x[T]=c[C]}return{dataId:t.write(x,a,o.dtype),shape:a,dtype:o.dtype}}var CL={kernelName:wo,backendName:"cpu",kernelFunc:Qee};var Zee=tt((r,e)=>{let t=r%e;return r<0&&e<0||r>=0&&e>=0?t:(t+e)%e}),Jee=at(Li,Zee),vL={kernelName:Li,backendName:"cpu",kernelFunc:Jee};var SL=xl(Lf());function Yw(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,i=o.shape.length,a=s;if(a===-1&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);let u=b.parseAxisParam([a],o.shape),l=Xw({inputs:{x:o},backend:t,attrs:{reductionIndices:u,keepDims:!1}}),p=I.expandShapeToKeepDim(l.shape,u),c=nt({inputs:{x:l},backend:t,attrs:{shape:p}}),m=Lh({inputs:{a:o,b:c},backend:t}),f=Cw({inputs:{x:m},backend:t}),d=mu({inputs:{x:f},backend:t,attrs:{axis:u,keepDims:!1}}),h=nt({inputs:{x:d},backend:t,attrs:{shape:p}}),g=$h({inputs:{a:f,b:h},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var wL={kernelName:$o,backendName:"cpu",kernelFunc:Yw};function ete(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:i,normalized:a}=n;ne(o,"multinomial");let u=a?o:Yw({inputs:{logits:o},backend:t,attrs:{dim:-1}}),l=u.shape[0],p=u.shape[1],c=t.data.get(u.dataId).values,m=[l,s],f=b.makeZerosTypedArray(b.sizeFromShape(m),"int32");for(let d=0;d<l;++d){let h=d*p,g=new Float32Array(p-1);g[0]=c[h];for(let T=1;T<g.length;++T)g[T]=g[T-1]+c[h+T];let x=SL.alea(i.toString()),y=d*s;for(let T=0;T<s;++T){let k=x();f[y+T]=g.length;for(let C=0;C<g.length;C++)if(k<g[C]){f[y+T]=C;break}}}return a||t.disposeIntermediateTensorInfo(u),t.makeTensorInfo(m,"int32",f)}var _L={kernelName:hc,backendName:"cpu",kernelFunc:ete};var tte=xr.nonMaxSuppressionV3Impl;function rte(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u}=n;ne(o,"NonMaxSuppression");let l=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,{selectedIndices:c}=tte(l,p,i,a,u);return t.makeTensorInfo([c.length],"int32",new Int32Array(c))}var AL={kernelName:ua,backendName:"cpu",kernelFunc:rte};var nte=xr.nonMaxSuppressionV4Impl;function ote(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:l}=n;ne(o,"NonMaxSuppressionPadded");let p=t.data.get(o.dataId).values,c=t.data.get(s.dataId).values,{selectedIndices:m,validOutputs:f}=nte(p,c,i,a,u,l);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}var NL={kernelName:Bi,backendName:"cpu",kernelFunc:ote};var ste=xr.nonMaxSuppressionV5Impl;function ate(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=n;ne(o,"NonMaxSuppressionWithScore");let p=t.data.get(o.dataId).values,c=t.data.get(s.dataId).values,m=i,f=a,d=u,h=l,{selectedIndices:g,selectedScores:x}=ste(p,c,m,f,d,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}var DL={kernelName:la,backendName:"cpu",kernelFunc:ate};function ite(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:i,offValue:a}=n;ne(o,"oneHot");let u=b.sizeFromShape(o.shape),l=new Float32Array(u*s);l.fill(a);let p=t.data.get(o.dataId).values;for(let c=0;c<u;++c)p[c]>=0&&p[c]<s&&(l[c*s+p[c]]=i);return t.makeTensorInfo([...o.shape,s],"int32",l)}var PL={kernelName:pa,backendName:"cpu",kernelFunc:ite};function Gh(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Ws({inputs:{input:n},backend:t}),s=Gh({inputs:{x:o},backend:t}),i=pi({inputs:{input:n},backend:t}),a=Gh({inputs:{x:i},backend:t}),u=Cr({inputs:{real:s,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),u}else return zh({backend:t,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var FL={kernelName:ks,backendName:"cpu",kernelFunc:Gh};function ML(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Ws({inputs:{input:n},backend:t}),s=ML({inputs:{x:o},backend:t}),i=pi({inputs:{input:n},backend:t}),a=Gh({inputs:{x:i},backend:t}),u=Cr({inputs:{real:s,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),u}else return zh({backend:t,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var EL={kernelName:fs,backendName:"cpu",kernelFunc:ML};function Qw(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return Am({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,i=e[0].dtype;e.forEach(p=>{b.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),b.assert(i===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],u=e.map(p=>{let c=Am({inputs:{input:p},backend:t,attrs:{dim:o}});return a.push(c),c}),l=sl({inputs:u,backend:t,attrs:{axis:o}});return a.forEach(p=>t.disposeIntermediateTensorInfo(p)),l}var RL={kernelName:ds,backendName:"cpu",kernelFunc:Qw};function ute(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:i}=n;ne(o,"pad");let a=s.map((y,T)=>y[0]+o.shape[T]+y[1]),u=s.map(y=>y[0]),l=t.data.get(o.dataId).values,p=b.sizeFromShape(o.shape),c=o.shape.length,m=b.computeStrides(o.shape),f=b.sizeFromShape(a),d=a.length,h=b.computeStrides(a),g=b.getTypedArrayFromDType(o.dtype,f);i!==0&&g.fill(i);for(let y=0;y<p;y++){let k=b.indexToLoc(y,c,m).map((N,A)=>N+u[A]),C=b.locToIndex(k,d,h);g[C]=l[y]}return{dataId:t.write(g,a,o.dtype),shape:a,dtype:o.dtype}}var ux={kernelName:_o,backendName:"cpu",kernelFunc:ute};var lte=tt((r,e)=>Math.pow(r,e)),pte=at(Ao,lte),LL={kernelName:Ao,backendName:"cpu",kernelFunc:pte};function cte(r){let{backend:e,attrs:t}=r,{start:n,stop:o,dtype:s,step:i}=t,a=yp(n,o,i,s);return e.makeTensorInfo([a.length],s,a)}var BL={kernelName:ja,backendName:"cpu",kernelFunc:cte};var mte=Le($i,r=>1/r),$L={kernelName:$i,backendName:"cpu",kernelFunc:mte};function fte(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:a}=n;ne(o,"resizeBilinear");let u=b.computeStrides(o.shape),[l,p]=a,[c,m,f,d]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(b.sizeFromShape([c,l,p,d])),x=[s&&l>1?m-1:m,s&&p>1?f-1:f],y=[s&&l>1?l-1:l,s&&p>1?p-1:p],T=0,k=x[0]/y[0],C=x[1]/y[1];for(let N=0;N<c;N++)for(let A=0;A<l;A++){let M;i?M=k*(A+.5)-.5:M=k*A;let E=Math.max(0,Math.floor(M)),B=M-E,W=Math.min(m-1,Math.ceil(M)),U=N*u[0]+E*u[1],K=N*u[0]+W*u[1];for(let j=0;j<p;j++){let V;i?V=C*(j+.5)-.5:V=C*j;let q=Math.max(0,Math.floor(V)),ee=V-q,Z=Math.min(f-1,Math.ceil(V)),te=U+q*u[2],oe=K+q*u[2],ie=U+Z*u[2],se=K+Z*u[2];for(let ue=0;ue<d;ue++){let ye=h[te+ue],de=h[oe+ue],Te=h[ie+ue],Se=h[se+ue],Be=ye+(Te-ye)*ee,$e=de+(Se-de)*ee,Ke=Be+($e-Be)*B;g[T++]=Ke}}}return t.makeTensorInfo([c,l,p,d],"float32",g)}var OL={kernelName:Po,backendName:"cpu",kernelFunc:fte};function dte(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:i}=n;ne([s,o],"resizeBilinearGrad");let a=b.computeStrides(o.shape),[u,l,p,c]=o.shape,[,m,f]=s.shape,d=new Float32Array(u*l*p*c),h=[i&&m>1?l-1:l,i&&f>1?p-1:p],g=[i&&m>1?m-1:m,i&&f>1?f-1:f],x=h[0]/g[0],y=h[1]/g[1],T=t.data.get(s.dataId).values,k=0;for(let C=0;C<u;C++){let N=C*a[0];for(let A=0;A<m;A++){let M=A*x,E=Math.floor(M),B=Math.min(Math.ceil(M),l-1),W=N+E*a[1],U=N+B*a[1],K=M-E,j=1-K;for(let V=0;V<f;V++){let q=V*y,ee=Math.floor(q),Z=Math.min(Math.ceil(q),p-1),te=q-ee,oe=1-te,ie=W+ee*a[2],se=W+Z*a[2],ue=U+ee*a[2],ye=U+Z*a[2],de=j*oe,Te=j*te,Se=K*oe,Be=K*te;for(let $e=0;$e<c;$e++){let Ke=T[k++];d[ie+$e]+=Ke*de,d[se+$e]+=Ke*Te,d[ue+$e]+=Ke*Se,d[ye+$e]+=Ke*Be}}}}return t.makeTensorInfo([u,p,l,c],"float32",d)}var zL={kernelName:bc,backendName:"cpu",kernelFunc:dte};function hte(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:a}=n;ne(o,"resizeNearestNeighbor");let u=b.computeStrides(o.shape),[l,p]=a,[c,m,f,d]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(c*l*p*d),x=[s&&l>1?m-1:m,s&&p>1?f-1:f],y=[s&&l>1?l-1:l,s&&p>1?p-1:p],T=x[0]/y[0],k=x[1]/y[1],C=0;for(let N=0;N<c;N++){let A=N*u[0];for(let M=0;M<l;M++){let E=i?T*(M+.5):T*M,B=Math.min(m-1,s?Math.round(E):Math.floor(E));i&&(B=Math.max(0,B));let W=A+B*u[1];for(let U=0;U<p;U++){let K=i?k*(U+.5):k*U,j=Math.min(f-1,s?Math.round(K):Math.floor(K));i&&(j=Math.max(0,j));let V=W+j*u[2];for(let q=0;q<d;q++){let ee=h[V+q];g[C++]=ee}}}}return t.makeTensorInfo([c,l,p,d],o.dtype,g)}var GL={kernelName:Ha,backendName:"cpu",kernelFunc:hte};function gte(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:i}=n;ne([s,o],"resizeNearestNeighborGrad");let a=b.computeStrides(o.shape),u=b.computeStrides(s.shape),[l,p,c,m]=o.shape,[,f,d]=s.shape,h=new Float32Array(l*p*c*m),g=t.data.get(s.dataId).values,x=[i&&f>1?p-1:p,i&&d>1?c-1:c],y=[i&&f>1?f-1:f,i&&d>1?d-1:d],T=x[0]/y[0],k=x[1]/y[1],C=1/T,N=1/k,A=Math.ceil(C)*2+2,M=Math.ceil(N)*2+2;for(let E=0;E<l;E++){let B=E*a[0];for(let W=0;W<p;W++){let U=B+W*a[1],K=Math.floor(W*C),j=Math.floor(K-A/2);for(let V=0;V<c;V++){let q=U+V*a[2],ee=Math.floor(V*N),Z=Math.floor(ee-M/2);for(let te=0;te<m;te++){let oe=0;for(let ie=0;ie<A;ie++){let se=ie+j;if(se<0||se>=f)continue;let ue=B+se*u[1],ye=se*T,de=Math.min(p-1,i?Math.round(ye):Math.floor(ye));if(W===de)for(let Te=0;Te<M;Te++){let Se=Te+Z;if(Se<0||Se>=d)continue;let Be=ue+Se*u[2],$e=Se*k,Ke=Math.min(c-1,i?Math.round($e):Math.floor($e));V===Ke&&(oe+=g[Be+te])}}h[q+te]=oe}}}}return t.makeTensorInfo(o.shape,o.dtype,h)}var WL={kernelName:gc,backendName:"cpu",kernelFunc:gte};function bte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n;ne(o,"reverse");let i=o.shape.length,a=b.parseAxisParam(s,o.shape);if(i===0)return Xr({inputs:{x:o},backend:t});let u=new xt(o.shape,o.dtype),l=t.bufferSync(o);for(let p=0;p<u.size;p++){let c=u.indexToLoc(p),m=c.slice();a.forEach(f=>m[f]=o.shape[f]-1-m[f]),u.set(l.get(...m),...c)}return t.makeTensorInfo(u.shape,u.dtype,u.values)}var UL={kernelName:ma,backendName:"cpu",kernelFunc:bte};var KL={kernelName:Ta,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:i}=e,a=t,u=b.getTypedArrayFromDType(n.dtype,b.sizeFromShape(n.shape)),[l,p,c,m]=n.shape,[f,d]=I.getImageCenter(i,p,c),h=255,g=Math.sin(o),x=Math.cos(o),y=a.data.get(n.dataId).values;for(let k=0;k<l;k++){let C=k*c*p*m;for(let N=0;N<p;N++){let A=N*(c*m);for(let M=0;M<c;M++){let E=M*m;for(let B=0;B<m;B++){let W=[l,N,M,B],U=W[2],K=W[1],j=(U-f)*x-(K-d)*g,V=(U-f)*g+(K-d)*x;j=Math.round(j+f),V=Math.round(V+d);let q=s;if(typeof s!="number"&&(B===3?q=h:q=s[B]),j>=0&&j<c&&V>=0&&V<p){let Z=V*(c*m),te=j*m,oe=C+Z+te+B;q=y[oe]}let ee=C+A+E+B;u[ee]=q}}}}return{dataId:a.write(u,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var yte=Le(fa,r=>{let e=Math.floor(r);return r-e<.5?Math.floor(r):r-e>.5?Math.ceil(r):e%2==0?e:e+1}),VL={kernelName:fa,backendName:"cpu",kernelFunc:yte};function lx(r,e,t,n,o,s,i,a,u,l){let p=[n/o,o],c=r.values,m=e.values;if(n===0)return Ce(t,e.dtype);let f=Ce(p,e.dtype);f.values.fill(u);for(let d=0;d<s;d++){let h=[],g=0;for(let x=0;x<i;x++){let y=c[d*i+x];h.push(y),g+=y*a[x]}if(g<0||g>=n/o)throw new Error(`Invalid indices: ${h} does not index into ${t}`);for(let x=0;x<o;x++)l?f.values[g*o+x]+=m[d*o+x]:f.values[g*o+x]=e.rank===0?m[0]:m[d*o+x]}return f}function xte(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:i}=n,{sliceRank:a,numUpdates:u,sliceSize:l,strides:p,outputSize:c}=I.calculateShapes(s,o,i),m=!0,f=t.bufferSync(o),d=t.bufferSync(s),h=lx(f,d,i,c,l,u,a,p,0,m);return t.makeTensorInfo(i,h.dtype,h.values)}var jL={kernelName:da,backendName:"cpu",kernelFunc:xte};function Tte(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e;ne([n,o,s],"select");let i=n.shape.length,a=t.data.get(n.dataId).values,u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,p=Kt(o.dtype,s.dtype),c=b.makeZerosTypedArray(b.sizeFromShape(o.shape),p),m=0,f=i===0||i>1||o.shape.length===1?1:b.sizeFromShape(o.shape.slice(1));for(let d=0;d<a.length;d++)for(let h=0;h<f;h++)a[d]===1?c[m++]=u[d]:c[m++]=l[d];return t.makeTensorInfo(o.shape,p,c)}var HL={kernelName:gs,backendName:"cpu",kernelFunc:Tte};var kte=I.SELU_SCALEALPHA,Ite=I.SELU_SCALE,Cte=Le(Oi,r=>r>=0?Ite*r:kte*(Math.exp(r)-1)),qL={kernelName:Oi,backendName:"cpu",kernelFunc:Cte};var vte=Le(zi,r=>r<0?-1:r>0?1:0),XL={kernelName:zi,backendName:"cpu",kernelFunc:vte};var wte=Le(Eo,r=>Math.sin(r)),YL={kernelName:Eo,backendName:"cpu",kernelFunc:wte};var Ste=Le(ha,r=>Math.sinh(r)),QL={kernelName:ha,backendName:"cpu",kernelFunc:Ste};var _te=11920928955078125e-23,ZL=Math.log(_te)+2,Ate=Le(Gi,r=>{let e=r>-ZL,t=r<ZL,n=Math.exp(r),o;return t?o=n:e?o=r:o=Math.log(1+n),o}),JL={kernelName:Gi,backendName:"cpu",kernelFunc:Ate};function Nte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:i}=n;ne([o],"spaceToBatchND");let a=b.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let N=1+s.length;N<o.shape.length;++N)u.push([0,0]);let l=ux.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),p=I.getReshaped(l.shape,s,a,!1),c=I.getPermuted(p.length,s.length,!1),m=I.getReshapedPermuted(l.shape,s,a,!1),h=nt({inputs:{x:l},backend:t,attrs:{shape:p}}),y=ur({inputs:{x:h},backend:t,attrs:{perm:c}}),C=nt({inputs:{x:y},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(y),C}var eB={kernelName:ys,backendName:"cpu",kernelFunc:Nte};function Dte(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:i}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let a=t.data.get(n.dataId).values,u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,p=t.data.get(i.dataId).values[0],[c,m,f,d,h]=Yy(a,n.shape,n.dtype,u,o.dtype,l,p);return[t.makeTensorInfo(m,n.dtype,c),t.makeTensorInfo([m[0]],o.dtype,f),t.makeTensorInfo([d.length],"bool",new Uint8Array(d.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var tB={kernelName:yc,backendName:"cpu",kernelFunc:Dte};function Pte(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(t.data.get(o.dataId).values),a=t.data.get(n.dataId).values,u=Array.from(t.data.get(s.dataId).values),[l,p,c]=Qy(a,n.shape,n.dtype,i,u);return[t.makeTensorInfo(p,n.dtype,l),t.makeTensorInfo([c.length],s.dtype,new Int32Array(c))]}var rB={kernelName:xc,backendName:"cpu",kernelFunc:Pte};function Fte(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);let i=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,[l,p]=vm(i,n.shape,n.dtype,a,u,!0);return t.makeTensorInfo(p,n.dtype,l)}var nB={kernelName:Tc,backendName:"cpu",kernelFunc:Fte};function Mte(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);let i=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,[l,p]=vm(i,n.shape,n.dtype,a,u);return t.makeTensorInfo(p,n.dtype,l)}var oB={kernelName:kc,backendName:"cpu",kernelFunc:Mte};function Ete(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:i}=e,{outputShape:a}=n,{sliceRank:u,numUpdates:l,sliceSize:p,strides:c,outputSize:m}=I.calculateShapes(s,o,a),f=!1,d=t.bufferSync(o),h=t.bufferSync(s),g=t.data.get(i.dataId).values[0],x=lx(d,h,a,m,p,l,u,c,g,f);return t.makeTensorInfo(a,x.dtype,x.values)}var sB={kernelName:$u,backendName:"cpu",kernelFunc:Ete};function Rte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:i}=n,a=b.parseAxisParam(i,o.shape)[0],u=I.prepareSplitSize(o,s,a),l=new Array(o.shape.length).fill(0),p=o.shape.slice();return u.map(c=>{let m=[...p];m[a]=c;let f=Vs({inputs:{x:o},backend:t,attrs:{begin:l,size:m}});return l[a]+=c,f})}var aB={kernelName:xs,backendName:"cpu",kernelFunc:Rte};var iB={kernelName:qa,backendName:"cpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e;ne(t,"square");let o=n.data.get(t.dataId).values,s=new Float32Array(o.length);for(let a=0;a<o.length;++a){let u=o[a];s[a]=u*u}return{dataId:n.write(s,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};var Lte=Le(Is,(r,e)=>{let t=e;return isNaN(r)?NaN:r>0?1:t.alpha}),uB={kernelName:Is,backendName:"cpu",kernelFunc:Lte};function Bte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:i,strides:a,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:c,shrinkAxisMask:m}=n;ne(o,"stridedSlice");let{finalShapeSparse:f,finalShape:d,isIdentity:h,sliceDim0:g,isSimpleSlice:x,begin:y,end:T,strides:k}=kt.sliceInfo(o.shape,s,i,a,u,l,p,c,m),C;if(h)C=nt({inputs:{x:o},backend:t,attrs:{shape:d}});else if(g||x){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let N=kt.computeOutShape(y,T,k),A=Vs({inputs:{x:o},backend:t,attrs:{begin:y,size:N}});C=nt({inputs:{x:A},backend:t,attrs:{shape:d}}),t.disposeIntermediateTensorInfo(A)}else{let N=t.bufferSync(o),A=Zy(f,N,k,y);C=t.makeTensorInfo(d,A.dtype,A.values)}return C}var lB={kernelName:ga,backendName:"cpu",kernelFunc:Bte};function $te(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:i,rightPad:a,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:c}=e,m=t.data.get(p.dataId).values,f=t.data.get(c.dataId).values,[d,h]=Jy(m,f,o,s,i,a,u,l);return[t.makeTensorInfo([d.length],"string",d),t.makeTensorInfo(c.shape,"int32",h)]}var pB={kernelName:Ou,backendName:"cpu",kernelFunc:$te};function Ote(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:i}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let a=t.data.get(s.dataId).values,u=t.data.get(i.dataId).values[0],[l,p,c]=ex(a,u,o),m=p.length;return[t.makeTensorInfo([m,2],"int32",l),t.makeTensorInfo([m],"string",p),t.makeTensorInfo([2],"int32",new Int32Array(c))]}var cB={kernelName:Ic,backendName:"cpu",kernelFunc:Ote};function zte(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let i=t.data.get(s.dataId).values,a=tx(i,o);return t.makeTensorInfo(s.shape,"int32",a)}var mB={kernelName:Cc,backendName:"cpu",kernelFunc:zte};var Gte=Le(ba,r=>Math.tan(r)),fB={kernelName:ba,backendName:"cpu",kernelFunc:Gte};var Wte=Le(Go,r=>Math.tanh(r)),dB={kernelName:Go,backendName:"cpu",kernelFunc:Wte};function Ute(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;ne(o,"tile");let i=rx(t.bufferSync(o),s);return t.makeTensorInfo(i.shape,i.dtype,i.values)}var hB={kernelName:vn,backendName:"cpu",kernelFunc:Ute};function Kte(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:i}=n;ne(o,"topk");let a=t.data.get(o.dataId).values,[u,l]=nx(a,o.shape,o.dtype,s,i);return[t.makeTensorInfo(u.shape,u.dtype,u.values),t.makeTensorInfo(l.shape,l.dtype,l.values)]}var gB={kernelName:ya,backendName:"cpu",kernelFunc:Kte};function Vte(r){let{inputs:e,attrs:t,backend:n}=r,{image:o,transforms:s}=e,{interpolation:i,fillMode:a,fillValue:u,outputShape:l}=t,[p,c,m,f]=o.shape,[d,h]=l??[c,m],g=[p,d,h,f],x=b.computeStrides(o.shape),y=x[0],T=x[1],k=x[2],C=b.getTypedArrayFromDType(o.dtype,b.sizeFromShape(g));C.fill(u);let N=n.data.get(o.dataId).values,A=n.data.get(s.dataId).values;for(let E=0;E<p;++E){let B=s.shape[0]===1?A:A.subarray(E*8,E*8+8);for(let W=0;W<d;++W)for(let U=0;U<h;++U)for(let K=0;K<f;++K){let j,V=B[6]*U+B[7]*W+1;if(V===0)continue;let q=(B[0]*U+B[1]*W+B[2])/V,ee=(B[3]*U+B[4]*W+B[5])/V,Z=yB(q,m,a),te=yB(ee,c,a);switch(i){case"nearest":j=Yte(N,c,m,y,T,k,E,te,Z,K,u);break;case"bilinear":j=Qte(N,c,m,y,T,k,E,te,Z,K,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let oe=E*y+W*T+U*k+K;C[oe]=j}return n.makeTensorInfo(g,o.dtype,C)}return{dataId:n.write(C,g,o.dtype),shape:o.shape,dtype:o.dtype}}var bB={kernelName:xa,backendName:"cpu",kernelFunc:Vte};function yB(r,e,t){switch(t){case"reflect":return jte(r,e);case"wrap":return Hte(r,e);case"nearest":return Xte(r,e);case"constant":default:return qte(r,e)}}function jte(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=2*e;t<n&&(t=n*Math.trunc(-t/n)+t),t=t<-e?t+n:-t-1}else if(t>e-1)if(e<=1)t=0;else{let n=2*e;t-=n*Math.trunc(t/n),t>=e&&(t=n-t-1)}return b.clamp(0,t,e-1)}function Hte(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=e-1;t+=e*(Math.trunc(-t/n)+1)}else if(t>e-1)if(e<=1)t=0;else{let n=e-1;t-=e*Math.trunc(t/n)}return b.clamp(0,t,e-1)}function qte(r,e){return r}function Xte(r,e){return b.clamp(0,r,e-1)}function Wh(r,e,t,n,o,s,i,a,u,l,p){let c=i*n+a*o+u*s+l;return 0<=a&&a<e&&0<=u&&u<t?r[c]:p}function Yte(r,e,t,n,o,s,i,a,u,l,p){let c=Math.round(a),m=Math.round(u);return Wh(r,e,t,n,o,s,i,c,m,l,p)}function Qte(r,e,t,n,o,s,i,a,u,l,p){let c=Math.floor(a),m=Math.floor(u),f=c+1,d=m+1,h=(d-u)*Wh(r,e,t,n,o,s,i,c,m,l,p)+(u-m)*Wh(r,e,t,n,o,s,i,c,d,l,p),g=(d-u)*Wh(r,e,t,n,o,s,i,f,m,l,p)+(u-m)*Wh(r,e,t,n,o,s,i,f,d,l,p);return(f-a)*h+(a-c)*g}function Zte(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;ne(s,"unique");let i=n.data.get(s.dataId).values,{outputValues:a,outputShape:u,indices:l}=ox(i,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,a),n.makeTensorInfo([l.length],"int32",l)]}var xB={kernelName:vc,backendName:"cpu",kernelFunc:Zte};function Jte(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let i=o.shape.length,a=o.shape[s],u=new Array(i-1),l=0;for(let f=0;f<i;f++)f!==s&&(u[l++]=o.shape[f]);let p=new Array(i).fill(0),c=o.shape.slice();c[s]=1;let m=new Array(a);for(let f=0;f<m.length;f++){p[s]=f;let d=Vs({inputs:{x:o},backend:t,attrs:{begin:p,size:c}});m[f]=nt({inputs:{x:d},backend:t,attrs:{shape:u}}),t.disposeIntermediateTensorInfo(d)}return m}var TB={kernelName:Ts,backendName:"cpu",kernelFunc:Jte};function ere(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:i}=n;ne(o,"unsortedSegmentSum");let a=o.shape.length,u=s.shape.length,l=[],p=[],c=a-u,m=s;for(let d=0;d<c;++d){let h=Am({inputs:{input:m},backend:t,attrs:{dim:d+1}});m=h,p.push(h)}for(let d=0;d<i;++d){let h=b.createScalarValue(d,"int32"),g=t.makeTensorInfo([],"int32",h),x=kw({inputs:{a:g,b:m},backend:t}),y=Us({inputs:{x},backend:t,attrs:{dtype:"float32"}}),T=bp({inputs:{a:y,b:o},backend:t}),k=mu({inputs:{x:T},backend:t,attrs:{axis:0,keepDims:!1}});l.push(k),p.push(g),p.push(x),p.push(y),p.push(T),p.push(k)}let f=Qw({inputs:l,backend:t,attrs:{axis:0}});return p.forEach(d=>t.disposeIntermediateTensorInfo(d)),f}var kB={kernelName:zu,backendName:"cpu",kernelFunc:ere};var tre=[JE,fE,eR,tR,yE,rR,nR,oR,sR,aR,iR,uR,lR,pR,cR,fR,dR,hR,gR,ZE,bR,yR,xR,TR,bE,xE,kR,dE,IR,vR,SR,_R,wR,NR,DR,AR,PR,FR,MR,ER,RR,LR,BR,$R,OR,zR,GR,UR,WR,Oh,VR,jE,jR,TE,HR,kE,qR,IE,XR,YR,QR,CE,ZR,JR,eL,tL,rL,vE,wE,hE,nL,CR,oL,sL,aL,HE,SE,_E,iL,AE,uL,lL,pL,cL,mL,fL,NE,hL,gL,bL,yL,TL,dL,kL,IL,DE,CL,vL,_L,PE,FE,AL,NL,DL,ME,PL,EL,RL,ux,LL,qE,RE,BL,gE,$L,XE,YE,QE,OL,zL,GL,WL,UL,KL,VL,LE,jL,HL,qL,$E,XL,YL,QL,OE,wL,JL,eB,tB,rB,nB,oB,sB,aB,GE,iB,WE,uB,lB,pB,cB,mB,KE,KR,fB,dB,hB,gB,EE,bB,xB,TB,kB,FL];for(let r of tre)Wi(r);var AB={};Ye(AB,{assertNotComplex:()=>Ma,bindCanvasToFramebuffer:()=>cre,bindColorTextureToFramebuffer:()=>jh,bindTextureToProgramUniformSampler:()=>mS,bindTextureUnit:()=>wB,bindVertexBufferToProgramAttribute:()=>px,callAndCheck:()=>we,canBeRepresented:()=>eS,createFragmentShader:()=>rS,createFramebuffer:()=>lS,createProgram:()=>nS,createStaticIndexBuffer:()=>aS,createStaticVertexBuffer:()=>sS,createTexture:()=>iS,createVertexShader:()=>tS,getBatchDim:()=>du,getExtensionOrThrow:()=>Nm,getFramebufferErrorMessage:()=>SB,getMaxTexturesInShader:()=>hS,getNumChannels:()=>lre,getProgramUniformLocation:()=>cS,getProgramUniformLocationOrThrow:()=>pS,getRowsCols:()=>hu,getShapeAs3D:()=>Hh,getTextureShapeFromLogicalShape:()=>fS,getWebGLDisjointQueryTimerVersion:()=>gS,getWebGLErrorMessage:()=>vB,getWebGLMaxTextureSize:()=>dS,hasExtension:()=>Yn,isCapableOfRenderingToFloatTexture:()=>bS,isDownloadFloatTextureEnabled:()=>yS,isReshapeFree:()=>il,isWebGLFenceEnabled:()=>TS,isWebGLVersionEnabled:()=>hx,linkProgram:()=>oS,resetMaxTextureSize:()=>mre,resetMaxTexturesInShader:()=>fre,unbindColorTextureFromFramebuffer:()=>cx,unbindTextureUnit:()=>pre,validateFramebuffer:()=>Dm,validateProgram:()=>Vh,validateTextureSize:()=>uS});var Tp={},Zw={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Jw(r,e){Tp[r]=e}function Qo(r){if(!(r in Tp)){let t=nre(r);if(t!==null)Tp[r]=t;else return console.log("Could not get context for WebGL version",r),null}let e=Tp[r];return e==null||e.isContextLost()?(delete Tp[r],Qo(r)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Tp[r])}function rre(r){if(typeof OffscreenCanvas!="undefined"&&r===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function nre(r){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let e=rre(r);return e.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete Tp[r]},!1),r===1?e.getContext("webgl",Zw)||e.getContext("experimental-webgl",Zw):e.getContext("webgl2",Zw)}var al;(function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"})(al||(al={}));var Yr;(function(o){o[o.RENDER=0]="RENDER",o[o.UPLOAD=1]="UPLOAD",o[o.PIXELS=2]="PIXELS",o[o.DOWNLOAD=3]="DOWNLOAD"})(Yr||(Yr={}));var $r;(function(s){s[s.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",s[s.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",s[s.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",s[s.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",s[s.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})($r||($r={}));function kp(r,e){return[e,r]}function IB(r,e){return r*e}function Uh(r){let e=b.sizeFromShape(r),t=Math.ceil(e/4);return b.sizeToSquarishShape(t)}function ci(r,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(r/2))]}function CB(r,e){let[t,n]=ci(r,e);return t*n*4}function Kh(r,e){let t=r,n,o,s,i,a,u,l,p,c,m;return $().getNumber("WEBGL_VERSION")===2?(n=t.R32F,o=t.R16F,s=t.RGBA16F,i=t.RGBA32F,a=t.RED,l=4,p=1,c=t.HALF_FLOAT,m=t.FLOAT,u=t.RGBA8):(n=r.RGBA,o=r.RGBA,s=r.RGBA,i=t.RGBA,a=r.RGBA,l=4,p=4,c=e!=null?e.HALF_FLOAT_OES:null,m=r.FLOAT,u=r.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:p,textureTypeHalfFloat:c,textureTypeFloat:m}}function we(r,e){let t=e();return $().getBool("DEBUG")&&ore(r),t}function ore(r){let e=r.getError();if(e!==r.NO_ERROR)throw new Error("WebGL Error: "+vB(r,e))}var sre=596e-10,are=65504;function eS(r){return!!($().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||sre<Math.abs(r)&&Math.abs(r)<are)}function vB(r,e){switch(e){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Nm(r,e){return fu(r,()=>r.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function tS(r,e){let t=fu(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(we(r,()=>r.shaderSource(t,e)),we(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function rS(r,e){let t=fu(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(we(r,()=>r.shaderSource(t,e)),we(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw ure(e,r.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}var ire=/ERROR: [0-9]+:([0-9]+):/g;function ure(r,e){let t=ire.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(r);return}let n=+t[1],o=r.split(`
`),s=o.length.toString().length+2,i=o.map((c,m)=>b.rightPad((m+1).toString(),s)+c),a=0;for(let c=0;c<i.length;c++)a=Math.max(i[c].length,a);let u=i.slice(0,n-1),l=i.slice(n-1,n),p=i.slice(n);console.log(u.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${b.rightPad(l[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join(`
`))}function nS(r){return fu(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function oS(r,e){if(we(r,()=>r.linkProgram(e)),r.getProgramParameter(e,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Vh(r,e){if(we(r,()=>r.validateProgram(e)),r.getProgramParameter(e,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function sS(r,e){let t=fu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return we(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),we(r,()=>r.bufferData(r.ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function aS(r,e){let t=fu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return we(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t)),we(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function lre(){return $().getNumber("WEBGL_VERSION")===2?1:4}function iS(r){return fu(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function uS(r,e){let t=$().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||e<=0){let n=`[${r}x${e}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(r>t||e>t){let n=`[${r}x${e}]`,o=`[${t}x${t}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+o+".")}}function lS(r){return fu(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function px(r,e,t,n,o,s,i){let a=r.getAttribLocation(e,t);return a===-1?!1:(we(r,()=>r.bindBuffer(r.ARRAY_BUFFER,n)),we(r,()=>r.vertexAttribPointer(a,o,r.FLOAT,!1,s,i)),we(r,()=>r.enableVertexAttribArray(a)),!0)}function wB(r,e,t){_B(r,t),we(r,()=>r.activeTexture(r.TEXTURE0+t)),we(r,()=>r.bindTexture(r.TEXTURE_2D,e))}function pre(r,e){_B(r,e),we(r,()=>r.activeTexture(r.TEXTURE0+e)),we(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function pS(r,e,t){return fu(r,()=>r.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function cS(r,e,t){return r.getUniformLocation(e,t)}function mS(r,e,t,n){we(r,()=>wB(r,e,n)),we(r,()=>r.uniform1i(t,n))}function cre(r){we(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,null)),we(r,()=>r.viewport(0,0,r.canvas.width,r.canvas.height)),we(r,()=>r.scissor(0,0,r.canvas.width,r.canvas.height))}function jh(r,e,t){we(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),we(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0))}function cx(r,e){we(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),we(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function Dm(r){let e=r.checkFramebufferStatus(r.FRAMEBUFFER);if(e!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+SB(r,e))}function SB(r,e){switch(e){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function fu(r,e,t){let n=we(r,()=>e());if(n==null)throw new Error(t);return n}function _B(r,e){let t=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=e+r.TEXTURE0;if(n<r.TEXTURE0||n>t){let o=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${o}.`)}}function du(r,e=2){return b.sizeFromShape(r.slice(0,r.length-e))}function hu(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function Hh(r){let e=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(e=[du(r),...hu(r)]),e}function fS(r,e=!1){let t=$().getNumber("WEBGL_MAX_TEXTURE_SIZE");e&&(t=t*2,r=r.map((o,s)=>s>=r.length-2?b.nearestLargerEven(r[s]):r[s]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=b.squeezeShape(r).newShape);let n=b.sizeFromShape(r);if(r.length<=1&&n<=t)return[1,n];if(r.length===2&&r[0]<=t&&r[1]<=t)return r;if(r.length===3&&r[0]*r[1]<=t&&r[2]<=t)return[r[0]*r[1],r[2]];if(r.length===3&&r[0]<=t&&r[1]*r[2]<=t)return[r[0],r[1]*r[2]];if(r.length===4&&r[0]*r[1]*r[2]<=t&&r[3]<=t)return[r[0]*r[1]*r[2],r[3]];if(r.length===4&&r[0]<=t&&r[1]*r[2]*r[3]<=t)return[r[0],r[1]*r[2]*r[3]];if(e){let o=du(r),s=2,i=2;return r.length&&([s,i]=hu(r)),n=o*(s/2)*(i/2),b.sizeToSquarishShape(n).map(a=>a*2)}return b.sizeToSquarishShape(n)}function mx(r){return r%2==0}function il(r,e){if(r=r.slice(-2),e=e.slice(-2),b.arraysEqual(r,e)||!r.length||!e.length||r[0]===0||r[1]===0||e[0]===0||e[1]===0)return!0;if(r.length!==e.length){let t=r.slice(-1)[0],n=e.slice(-1)[0];if(t===n||mx(t)&&mx(n)&&(r[0]===1||e[0]===1))return!0}return r[1]===e[1]&&mx(r[0])&&mx(e[0])}var fx,dx;function dS(r){if(fx==null){let e=Qo(r);fx=e.getParameter(e.MAX_TEXTURE_SIZE)}return fx}function mre(){fx=null}function fre(){dx=null}function hS(r){if(dx==null){let e=Qo(r);dx=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,dx)}function gS(r){if(r===0)return 0;let e,t=Qo(r);return Yn(t,"EXT_disjoint_timer_query_webgl2")&&r===2?e=2:Yn(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Yn(r,e){return r.getExtension(e)!=null}function hx(r){try{if(Qo(r)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function bS(r){if(r===0)return!1;let e=Qo(r);if(r===1){if(!Yn(e,"OES_texture_float"))return!1}else if(!Yn(e,"EXT_color_buffer_float"))return!1;return xS(e)}function yS(r){if(r===0)return!1;let e=Qo(r);if(r===1){if(!Yn(e,"OES_texture_float")||!Yn(e,"WEBGL_color_buffer_float"))return!1}else{if(Yn(e,"EXT_color_buffer_float"))return xS(e);let n="EXT_color_buffer_half_float";if(Yn(e,n)){let o=e.getExtension(n);return dre(e,o)}return!1}return xS(e)}function xS(r){let e=Kh(r),t=r.createTexture();r.bindTexture(r.TEXTURE_2D,t);let n=1,o=1;r.texImage2D(r.TEXTURE_2D,0,e.internalFormatFloat,n,o,0,e.textureFormatFloat,e.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(t),r.deleteFramebuffer(s),i}function dre(r,e){let t=Kh(r,e),n=r.createTexture();r.bindTexture(r.TEXTURE_2D,n);let o=1,s=1;r.texImage2D(r.TEXTURE_2D,0,t.internalFormatHalfFloat,o,s,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);let i=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,i),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,n,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(n),r.deleteFramebuffer(i),a}function TS(r){return r!==2?!1:Qo(r).fenceSync!=null}function Ma(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&b.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}var ze=$();ze.registerFlag("HAS_WEBGL",()=>ze.getNumber("WEBGL_VERSION")>0);ze.registerFlag("WEBGL_VERSION",()=>hx(2)?2:hx(1)?1:0);ze.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);ze.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>ze.get("WEBGL_VERSION")===2);ze.registerFlag("WEBGL_CPU_FORWARD",()=>!0);ze.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);ze.registerFlag("WEBGL_PACK",()=>ze.getBool("HAS_WEBGL"));ze.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_CLIP",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_PACK_REDUCE",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_LAZILY_UNPACK",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_CONV_IM2COL",()=>ze.getBool("WEBGL_PACK"));ze.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>dS(ze.getNumber("WEBGL_VERSION")));ze.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>hS(ze.getNumber("WEBGL_VERSION")));ze.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=ze.getNumber("WEBGL_VERSION");return r===0?0:gS(r)});ze.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ze.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ki.isMobile());ze.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>bS(ze.getNumber("WEBGL_VERSION")));ze.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>ze.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:ze.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));ze.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>yS(ze.getNumber("WEBGL_VERSION")));ze.registerFlag("WEBGL_FENCE_API_ENABLED",()=>TS(ze.getNumber("WEBGL_VERSION")));ze.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ze.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);ze.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});ze.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Ki.isMobile()?1:-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});ze.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);ze.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);ze.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);ze.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function Qt(){let r,e,t,n,o,s,i,a,u,l;return $().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",e="in",t="out",n="in",o="texture",s="outputColor",i="out vec4 outputColor;",a=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,u="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",e="attribute",t="varying",n="varying",o="texture2D",s="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:e,varyingVs:t,varyingFs:n,texture2D:o,output:s,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:u,defineRound:l}}function Ea(r,e,t="index"){let n=b.computeStrides(e);return n.map((o,s)=>{let i=`int ${r[s]} = ${t} / ${o}`,a=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * ${o}`:`index -= ${r[s]} * ${o}`;return`${i}; ${a};`}).join("")}function Ip(r,e,t="index"){let n=b.computeStrides(e);return n.map((o,s)=>{let i=`int ${r[s]} = ${t} / outShapeStrides[${s}]`,a=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * outShapeStrides[${s}]`:`index -= ${r[s]} * outShapeStrides[${s}]`;return`${i}; ${a};`}).join("")}function hre(r,e){let t=r.length,n=r.map(s=>`${e}[${s}]`),o=new Array(t-1);o[t-2]=n[t-1];for(let s=t-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function NB(r,e,t="index"){let n=r.map((s,i)=>i),o=hre(n,e);return o.map((s,i)=>{let a=`int ${r[i]} = ${t} / ${o[i]}`,u=i===o.length-1?`int ${r[i+1]} = ${t} - ${r[i]} * ${o[i]}`:`index -= ${r[i]} * ${o[i]}`;return`${a}; ${u};`}).join("")}function Pm(r){let e=b.computeStrides(r).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Fm(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var gx=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:DB}=I;function PB(r,e,t){let n=[];if(r.forEach(f=>{let d=b.sizeFromShape(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?n.push(`uniform float ${f.name}${d>1?`[${d}]`:""};`):(n.push(`uniform sampler2D ${f.name};`),n.push(`uniform int offset${f.name};`)),t.enableShapeUniforms){let{uniformShape:h}=bx(t.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(h.length){case 1:n.push(`uniform int ${f.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${f.name}Shape;`);break;default:break}n.push(`uniform ivec2 ${f.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break;default:break}n.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(f=>{n.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});let o=n.join(`
`),s=r.map(f=>gre(f,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),i=e.texShape,a=Qt(),u=xre(a),l,p,c=Ire(a);return e.isPacked?(l=bre(e.logicalShape,i,t.enableShapeUniforms),p=kre(a)):(l=yre(e.logicalShape,i,t.enableShapeUniforms),p=Tre(a)),t.packedInputs&&(c+=Sre),[c,u,p,o,l,s,t.userCode].join(`
`)}function Mm(r,e=!1){let t=r.shapeInfo.logicalShape;switch(t.length){case 0:return $re(r,e);case 1:return zre(r,e);case 2:return Wre(r,e);case 3:return Kre(r,e);case 4:return jre(r,e);case 5:return Hre(r);case 6:return qre(r);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function FB(r,e){switch(r.shapeInfo.logicalShape.length){case 0:return Bre(r);case 1:return Ore(r,e);case 2:return Gre(r,e);case 3:return Ure(r,e);default:return Vre(r,e)}}function gre(r,e,t=!1,n){let o="";t?o+=FB(r,n):o+=Mm(r,n);let s=r.shapeInfo.logicalShape,i=e.logicalShape;return s.length<=i.length&&(t?o+=Xre(r,e):o+=Yre(r,e)),o}function bre(r,e,t){switch(r.length){case 0:return MB();case 1:return _re(r,e,t);case 2:return Rre(r,e,t);case 3:return Nre(r,e,t);default:return Pre(r,e,t)}}function yre(r,e,t){switch(r.length){case 0:return MB();case 1:return Are(r,e,t);case 2:return Lre(r,e,t);case 3:return Dre(r,e,t);case 4:return Fre(r,e,t);case 5:return Mre(r,e);case 6:return Ere(r,e);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function xre(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function Tre(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function kre(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function Ire(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${Cre}
    ${vre}
    ${wre}
  `}var Cre=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,vre=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,wre=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Sre=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function MB(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function _re(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return n[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function Are(r,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function Nre(r,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[2]/2),s=o*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function Dre(r,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Ip(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let n=Ea(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function Pre(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[r.length-1]/2),s=o*Math.ceil(r[r.length-2]/2),i=s,a="",u="b, r, c";for(let l=2;l<r.length-1;l++)i*=r[r.length-l-1],a=`
      int b${l} = index / ${i};
      index -= b${l} * ${i};
    `+a,u=`b${l}, `+u;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${a}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${r.length}(${u});
    }
  `}function Fre(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Ip(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let n=Ea(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function Mre(r,e){let t=Ea(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Ere(r,e){let t=Ea(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Rre(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(b.arraysEqual(r,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let o=Math.ceil(r[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function Lre(r,e,t){return b.arraysEqual(r,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:r[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function Cp(r){return`offset${r}`}function Bre(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),n=Qt();return`
    vec4 ${t}() {
      return ${n.texture2D}(${e}, halfCR);
    }
  `}function $re(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;let[o,s]=r.shapeInfo.texShape;if(o===1&&s===1)return`
      float ${n}() {
        return sampleTexture(${t}, halfCR);
      }
    `;let i=Cp(t);if(e)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${i});
      return sampleTexture(${t}, uv);
    }
  `;let[a,u]=r.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${a}, ${u}, ${i});
      return sampleTexture(${t}, uv);
    }
  `}function Ore(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=r.shapeInfo.texShape,s=Qt();if(e)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${t}, uv);
    }
  `;let i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${t}, uv);
    }
  `}function zre(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${Em(r)}
      }
    `;let o=r.shapeInfo.texShape,s=o[0],i=o[1];if(i===1&&s===1)return`
      float ${n}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;let a=Cp(t);return i===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${s}.0);
        return sampleTexture(${t}, uv);
      }
    `:s===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${a});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${a});
      return sampleTexture(${t}, uv);
    }
  `}function Gre(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,i=s[0],a=s[1],u=Qt();if(s!=null&&b.arraysEqual(t,s))return e?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${u.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${u.texture2D}(${n}, uv);
      }
    `;if(e)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `;let l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],p=Math.ceil(t[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${p}, ${l[0]}, ${l[1]}, row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `}function Wre(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape;if(s!=null&&b.arraysEqual(t,s)){if(e)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;let m=s[0],f=s[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${m}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:i,keptDims:a}=b.squeezeShape(t),u=i;if(u.length<t.length){let m=Rm(r,u),f=["row","col"];return`
      ${Mm(m,e)}
      float ${o}(int row, int col) {
        return ${o}(${Lm(f,a)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Em(r)}
      }
    `;let l=s[0],p=s[1],c=Cp(n);return p===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${c}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${n}, uv);
    }
  `:l===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${c}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:e?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${c};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${c};
    vec2 uv = uvFromFlat(${l}, ${p}, index);
    return sampleTexture(${n}, uv);
  }
`}function Ure(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(t[0]===1){let m=t.slice(1),f=[1,2],d=Rm(r,m),h=["b","row","col"];return`
        ${FB(d,e)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${Lm(h,f)});
        }
      `}let a=Qt();if(e)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `;let u=i[0],l=i[1],p=Math.ceil(t[2]/2),c=p*Math.ceil(t[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${l}, ${c}, ${p}, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `}function Kre(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],i=t[2],{newShape:a,keptDims:u}=b.squeezeShape(t),l=a;if(l.length<t.length){let h=Rm(r,l),g=["row","col","depth"];return`
        ${Mm(h,e)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${Lm(g,u)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${Em(r)}
      }
    `;let p=r.shapeInfo.texShape,c=p[0],m=p[1],f=r.shapeInfo.flatOffset;if(m===s&&f==null)return e?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${m}.0, ${c}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(m===i&&f==null)return e?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${m}.0, ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `;let d=Cp(n);return e?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * ${s} + col * ${i} + depth + ${d};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${d};
        vec2 uv = uvFromFlat(${c}, ${m}, index);
        return sampleTexture(${n}, uv);
      }
  `}function Vre(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=Qt();if(e)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${t}, uv);
    }
  `;let s=r.shapeInfo.logicalShape,i=s.length,a=r.shapeInfo.texShape,u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],l=u[0],p=u[1],c=Math.ceil(s[i-1]/2),m=c*Math.ceil(s[i-2]/2),f="int b, int row, int col",d=`b * ${m} + (row / 2) * ${c} + (col / 2)`;for(let h=2;h<i-1;h++)f=`int b${h}, `+f,m*=s[i-h-1],d=`b${h} * ${m} + `+d;return`
    vec4 ${n}(${f}) {
      int index = ${d};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${l});
      return ${o.texture2D}(${t}, uv);
    }
  `}function jre(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],i=t[2]*s,a=t[1]*i,{newShape:u,keptDims:l}=b.squeezeShape(t);if(u.length<t.length){let y=Rm(r,u),T=["row","col","depth","depth2"];return`
      ${Mm(y,e)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${Lm(T,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${s}, 1)));
        ${Em(r)}
      }
    `;let p=r.shapeInfo.flatOffset,c=r.shapeInfo.texShape,m=c[0],f=c[1],d=`int stride2 = ${n}Shape[3];`,h=`int stride1 = ${n}Shape[2] * stride2;`,g=`int stride0 = ${n}Shape[1] * stride1;`;if(f===a&&p==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${d}
        ${h}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===s&&p==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${n}, uv);
      }
    `;let x=Cp(n);return e?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${d}
      ${h}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${x});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${m}, ${f}, index + ${x});
      return sampleTexture(${n}, uv);
    }
  `}function Hre(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[4],s=e[3]*o,i=e[2]*s,a=e[1]*i,{newShape:u,keptDims:l}=b.squeezeShape(e);if(u.length<e.length){let h=Rm(r,u),g=["row","col","depth","depth2","depth3"];return`
      ${Mm(h)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${Lm(g,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${s}, ${o})) +
          depth3;
        ${Em(r)}
      }
    `;let p=r.shapeInfo.flatOffset,c=r.shapeInfo.texShape,m=c[0],f=c[1];if(f===a&&p==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===o&&p==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;let d=Cp(t);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${s} +
          depth2 * ${o} + depth3 + ${d};
      vec2 uv = uvFromFlat(${m}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function qre(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:o,keptDims:s}=b.squeezeShape(e);if(o.length<e.length){let g=Rm(r,o),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${Mm(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${Lm(x,s)});
      }
    `}let i=e[5],a=e[4]*i,u=e[3]*a,l=e[2]*u,p=e[1]*l;if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${p}, ${l}, ${u}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${Em(r)}
      }
    `;let c=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,f=m[0],d=m[1];if(d===p&&c==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${u}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(d===i&&c==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;let h=Cp(t);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${p} + col * ${l} + depth * ${u} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${h};
      vec2 uv = uvFromFlat(${f}, ${d}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Em(r){let e=r.name,t=b.sizeFromShape(r.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function Xre(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=r.shapeInfo.logicalShape.length,i=e.logicalShape.length,a=DB(r.shapeInfo.logicalShape,e.logicalShape),u=He(i),l=i-s,p,c=["x","y","z","w","u","v"];s===0?p="":i<2&&a.length>=1?p="coords = 0;":p=a.map(y=>`coords.${c[y+l]} = 0;`).join(`
`);let m="";i<2&&s>0?m="coords":m=r.shapeInfo.logicalShape.map((y,T)=>`coords.${c[T+l]}`).join(", ");let f="return outputValue;",h=b.sizeFromShape(r.shapeInfo.logicalShape)===1,x=b.sizeFromShape(e.logicalShape)===1;if(s===1&&!h&&!x)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(h&&!x)i===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(a.length){let y=s-2,T=s-1;a.indexOf(y)>-1&&a.indexOf(T)>-1?f="return vec4(outputValue.x);":a.indexOf(y)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(T)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${u} coords = getOutputCoords();
      ${p}
      vec4 outputValue = get${n}(${m});
      ${f}
    }
  `}function Yre(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=e.texShape,i=r.shapeInfo.texShape,a=r.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!r.shapeInfo.isUniform&&a===u&&r.shapeInfo.flatOffset==null&&b.arraysEqual(i,s))return`
      float ${o}() {
        return sampleTexture(${t}, resultUV);
      }
    `;let l=He(u),p=DB(r.shapeInfo.logicalShape,e.logicalShape),c=u-a,m,f=["x","y","z","w","u","v"];a===0?m="":u<2&&p.length>=1?m="coords = 0;":m=p.map(h=>`coords.${f[h+c]} = 0;`).join(`
`);let d="";return u<2&&a>0?d="coords":d=r.shapeInfo.logicalShape.map((h,g)=>`coords.${f[g+c]}`).join(", "),`
    float ${o}() {
      ${l} coords = getOutputCoords();
      ${m}
      return get${n}(${d});
    }
  `}function He(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function bx(r,e,t){let{newShape:n,keptDims:o}=b.squeezeShape(e),s=e.length,i=r&&s===3&&e[0]===1,a=i?e.slice(1):n,u=!r&&s>1&&!b.arraysEqual(e,t)&&n.length<s||i;return{useSqueezeShape:u,uniformShape:u?a:e,keptDims:o}}function Rm(r,e){let t=JSON.parse(JSON.stringify(r));return t.shapeInfo.logicalShape=e,t}function Lm(r,e){return e.map(t=>r[t]).join(", ")}function EB(r,e,t,n){let o=t.map((k,C)=>{let N={logicalShape:k.shape,texShape:k.isUniform?null:k.texData.texShape,isUniform:k.isUniform,isPacked:k.isUniform?!1:k.texData.isPacked,flatOffset:null};return k.texData!=null&&k.texData.slice!=null&&k.texData.slice.flatOffset>0&&(N.flatOffset=k.texData.slice.flatOffset),{name:e.variableNames[C],shapeInfo:N}}),s=o.map(k=>k.shapeInfo),i={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},a=PB(o,i,e),u=rS(r.gl,a),l=r.createProgram(u),p=null,c=r.getUniformLocation(l,"NAN",!1);$().getNumber("WEBGL_VERSION")===1&&(p=r.getUniformLocation(l,"INFINITY",!1));let m=!1,f={},d={},h={};for(let k=0;k<e.variableNames.length;k++){let C=e.variableNames[k];f[C]=r.getUniformLocation(l,C,m),f[`offset${C}`]=r.getUniformLocation(l,`offset${C}`,m),e.enableShapeUniforms&&(d[`${C}Shape`]=r.getUniformLocation(l,`${C}Shape`,m),h[`${C}TexShape`]=r.getUniformLocation(l,`${C}TexShape`,m))}let g,x,y;e.enableShapeUniforms&&(g=r.getUniformLocation(l,"outShape",m),y=r.getUniformLocation(l,"outShapeStrides",m),x=r.getUniformLocation(l,"outTexShape",m));let T=[];return e.customUniforms&&e.customUniforms.forEach((k,C)=>{T[C]=r.getUniformLocation(l,k.name,m)}),{program:e,fragmentShader:u,source:a,webGLProgram:l,uniformLocations:f,customUniformLocations:T,inShapeInfos:s,outShapeInfo:i,infLoc:p,nanLoc:c,inShapesLocations:d,inTexShapesLocations:h,outShapeLocation:g,outShapeStridesLocation:y,outTexShapeLocation:x}}function RB(r,e){if(r.length!==e.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${e.length} inputs`);r.forEach((t,n)=>{let o=t.logicalShape,s=e[n],i=s.shape;if(!b.arraysEqual(o,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${i} must match`);if(t.isUniform&&s.isUniform)return;let a=t.texShape,u=s.isUniform?null:s.texData.texShape;if(!b.arraysEqual(a,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${u} must match`)})}function LB(r,e,t,n,o){e.program.enableShapeUniforms||(RB(e.inShapeInfos,t),RB([e.outShapeInfo],[n]));let s=n.texData.texture,i=n.texData.texShape;n.texData.isPacked?r.setOutputPackedMatrixTexture(s,i[0],i[1]):r.setOutputMatrixTexture(s,i[0],i[1]),r.setProgram(e.webGLProgram),$().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&r.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&r.gl.uniform1f(e.nanLoc,NaN),t.forEach((u,l)=>{let p=e.program.variableNames[l],c=e.uniformLocations[p],m=e.uniformLocations[`offset${p}`],f=e.inShapesLocations[`${p}Shape`],d=e.inTexShapesLocations[`${p}TexShape`];if(f){let{uniformShape:h}=bx(e.program.packedInputs,u.shape,u.texData.texShape);switch(h.length){case 1:r.gl.uniform1iv(f,new Int32Array(h));break;case 2:r.gl.uniform2iv(f,new Int32Array(h));break;case 3:r.gl.uniform3iv(f,new Int32Array(h));break;case 4:r.gl.uniform4iv(f,new Int32Array(h));break;default:break}}if(d&&r.gl.uniform2i(d,u.texData.texShape[0],u.texData.texShape[1]),c!=null){if(u.isUniform){if(b.sizeFromShape(u.shape)<2)r.gl.uniform1f(c,u.uniformValues[0]);else{let h=u.uniformValues;h instanceof Float32Array||(h=new Float32Array(h)),r.gl.uniform1fv(c,h)}return}u.texData.slice!=null&&m!=null&&r.gl.uniform1i(m,u.texData.slice.flatOffset),r.setInputMatrixTexture(u.texData.texture,c,l)}});let a=e.outShapeLocation;if(a)switch(n.shape.length){case 1:r.gl.uniform1iv(a,new Int32Array(n.shape));break;case 2:r.gl.uniform2iv(a,new Int32Array(n.shape));break;case 3:r.gl.uniform3iv(a,new Int32Array(n.shape));break;case 4:r.gl.uniform4iv(a,new Int32Array(n.shape));break;default:break}if(e.outShapeStridesLocation){let u=b.computeStrides(n.shape);switch(n.shape.length){case 2:r.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(u));break;case 3:r.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(u));break;case 4:r.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(u));break;default:break}}e.outTexShapeLocation&&r.gl.uniform2i(e.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),e.program.customUniforms&&o&&e.program.customUniforms.forEach((u,l)=>{let p=e.customUniformLocations[l],c=o[l];if(u.type==="float")r.gl.uniform1fv(p,c);else if(u.type==="vec2")r.gl.uniform2fv(p,c);else if(u.type==="vec3")r.gl.uniform3fv(p,c);else if(u.type==="vec4")r.gl.uniform4fv(p,c);else if(u.type==="int")r.gl.uniform1iv(p,c);else if(u.type==="ivec2")r.gl.uniform2iv(p,c);else if(u.type==="ivec3")r.gl.uniform3iv(p,c);else if(u.type==="ivec4")r.gl.uniform4iv(p,c);else throw Error(`uniform type ${u.type} is not supported yet.`)}),r.executeProgram()}function BB(r,e,t){let n="";e.concat(t).forEach(i=>{let a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!i.isUniform){let u=i.texData.texShape,{useSqueezeShape:l,uniformShape:p,keptDims:c}=bx(r.packedInputs,i.shape,u),m="",f="",d="";if(p.length===1&&r.packedInputs){let C=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];m=`${C[0]>1}_${C[1]>1}`}else if(p.length===2&&!r.packedInputs)f=`${p[0]>1}_${p[1]>1}`;else if(p.length>2&&!r.packedInputs){let C=b.computeStrides(p);d=`${C[0]===u[1]}_${C[C.length-1]===u[1]}`}let h=i.shape.length,g=p.length===2&&b.arraysEqual(i.shape,u),x=b.sizeFromShape(i.shape)===1,y=I.getBroadcastDims(i.shape,t.shape),T=!r.packedInputs&&h===t.shape.length&&b.arraysEqual(u,t.texData.texShape),k=r.packedInputs||p.length>2?"":`${u[0]>1}_${u[1]>1}`;n+=`${h}_${T}_${l?c:""}_${p.length}_${x}_${y}_${g}_${m}_${f}_${d}_${k}_${a}`}else{let u=i.isUniform?"uniform":i.texData.texShape;n+=`${i.shape}_${u}_${a}`}});let o=r.userCode,s=r.constructor.name;return s+="_"+n+"_"+o+`${$().getNumber("WEBGL_VERSION")}`,s}function Bt(r){return $().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var kS=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.outPackingScheme=al.DENSE;this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Qt();this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Ip(["r","c","d"],e):Ea(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}};var IS=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outPackingScheme=al.DENSE;this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Qt();this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Ip(["r","c","d"],e):Ea(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}};var CS=class{constructor(e){this.variableNames=["A"];this.outTexUsage=Yr.DOWNLOAD;let t=Qt();this.outputShape=e,this.userCode=`
      ${gx}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}};var vS=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outTexUsage=Yr.DOWNLOAD;let t=Qt();this.outputShape=e,this.userCode=`
      ${gx}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}};var wS=class{constructor(e,t=!1){this.variableNames=["A"];this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Qt();this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?Fm():Pm(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${o}, 0., 0., 0.);
      }
    `}};var SS=class{constructor(e,t=!1){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Qt();this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length);let o="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){let u=i*2+a;o+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Fm():Pm(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${n.output} = ${s};
        }
    `}};var $B={};Ye($B,{bindVertexProgramAttributeStreams:()=>RS,createBufferFromOutputTexture:()=>$S,createFloat16MatrixTexture:()=>PS,createFloat16PackedMatrixTexture:()=>ES,createFloat32MatrixTexture:()=>DS,createIndexBuffer:()=>NS,createPackedMatrixTexture:()=>MS,createUnsignedBytesMatrixTexture:()=>FS,createVertexBuffer:()=>AS,createVertexShader:()=>_S,downloadByteEncodedFloatMatrixFromOutputTexture:()=>zS,downloadFloat32MatrixFromBuffer:()=>OS,downloadMatrixFromPackedOutputTexture:()=>WS,downloadPackedMatrixFromBuffer:()=>GS,getInternalFormatForFloat16MatrixTexture:()=>xx,getInternalFormatForFloat16PackedMatrixTexture:()=>Ix,getInternalFormatForFloat32MatrixTexture:()=>yx,getInternalFormatForPackedMatrixTexture:()=>kx,getInternalFormatForUnsignedBytesMatrixTexture:()=>Tx,uploadDenseMatrixToTexture:()=>LS,uploadPixelDataToTexture:()=>BS});function _S(r){let e=Qt(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return tS(r,t)}function AS(r){let e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return sS(r,e)}function NS(r){let e=new Uint16Array([0,1,2,2,1,3]);return aS(r,e)}function qh(r,e,t,n,o,s){uS(e,t);let i=iS(r),a=r.TEXTURE_2D;return we(r,()=>r.bindTexture(a,i)),we(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),we(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),we(r,()=>r.texParameteri(a,r.TEXTURE_MIN_FILTER,r.NEAREST)),we(r,()=>r.texParameteri(a,r.TEXTURE_MAG_FILTER,r.NEAREST)),$().getNumber("WEBGL_VERSION")===1?we(r,()=>r.texImage2D(a,0,n,e,t,0,o,s,null)):we(r,()=>r.texStorage2D(a,1,n,e,t)),we(r,()=>r.bindTexture(r.TEXTURE_2D,null)),i}function yx(r){return r.internalFormatFloat}function DS(r,e,t,n){let[o,s]=kp(e,t);return qh(r,o,s,yx(n),n.textureFormatFloat,r.FLOAT)}function xx(r){return r.internalFormatHalfFloat}function PS(r,e,t,n){let[o,s]=kp(e,t);return qh(r,o,s,xx(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function Tx(r){return r.downloadTextureFormat}function FS(r,e,t,n){let[o,s]=kp(e,t);return qh(r,o,s,Tx(n),r.RGBA,r.UNSIGNED_BYTE)}function kx(r){return r.internalFormatPackedFloat}function MS(r,e,t,n){let[o,s]=ci(e,t);return qh(r,o,s,kx(n),r.RGBA,r.FLOAT)}function Ix(r){return r.internalFormatPackedHalfFloat}function ES(r,e,t,n){let[o,s]=ci(e,t);return qh(r,o,s,Ix(n),r.RGBA,n.textureTypeHalfFloat)}function RS(r,e,t){let n=0,o=3*4,s=3*4+2*4;return we(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),px(r,e,"clipSpacePos",t,3,s,n)&&px(r,e,"uv",t,2,s,o)}function LS(r,e,t,n,o,s){we(r,()=>r.bindTexture(r.TEXTURE_2D,e));let i,a,u;o instanceof Uint8Array?(i=new Uint8Array(t*n*4),a=r.UNSIGNED_BYTE,u=r.RGBA):(i=new Float32Array(t*n*4),a=r.FLOAT,u=s.internalFormatPackedFloat),i.set(o),$().getNumber("WEBGL_VERSION")===2?we(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t,n,r.RGBA,a,i)):we(r,()=>r.texImage2D(r.TEXTURE_2D,0,u,t,n,0,r.RGBA,a,i)),we(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function BS(r,e,t){we(r,()=>r.bindTexture(r.TEXTURE_2D,e)),t.data instanceof Uint8Array?$().getNumber("WEBGL_VERSION")===2?(we(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t.width,t.height,r.RGBA,r.UNSIGNED_BYTE,t.data)),r.flush()):we(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t.width,t.height,0,r.RGBA,r.UNSIGNED_BYTE,t.data)):$().getNumber("WEBGL_VERSION")===2?(we(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,t)),r.flush()):we(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t)),we(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function $S(r,e,t,n){let o=r.createBuffer();we(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,o));let a=4*4*e*t;return we(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,a,r.STREAM_READ)),we(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,0)),we(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),o}function OS(r,e,t){let n=r,o=new Float32Array(t);return n.bindBuffer(n.PIXEL_PACK_BUFFER,e),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,o),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),o}function zS(r,e,t,n){let[o,s]=kp(e,t),i=4,a=new Uint8Array(IB(e*t,i));return we(r,()=>r.readPixels(0,0,o,s,n.downloadTextureFormat,r.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function GS(r,e,t,n,o,s,i,a){let u=r,l=new Float32Array(CB(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function WS(r,e,t){let n=new Float32Array(e*t*4);return we(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,n)),n}var Cx=class{constructor(e){this.outputTexture=null;this.program=null;this.disposed=!1;this.vertexAttrsAreBound=!1;this.itemsToPoll=[];let t=$().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,Jw(t,e)):this.gl=Qo(t);let n="WEBGL_color_buffer_float",o="EXT_color_buffer_half_float";if($().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=Nm(this.gl,s),Yn(this.gl,i))this.textureHalfFloatExtension=Nm(this.gl,i);else if($().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Yn(this.gl,o))this.colorBufferHalfFloatExtension=Nm(this.gl,o);else if($().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Yn(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Yn(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=AS(this.gl),this.indexBuffer=NS(this.gl),this.framebuffer=lS(this.gl),this.textureConfig=Kh(this.gl,this.textureHalfFloatExtension)}get debug(){return $().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;we(e,()=>e.finish()),we(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),we(e,()=>e.deleteFramebuffer(this.framebuffer)),we(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),we(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),we(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),DS(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),PS(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),FS(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),BS(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,o){this.throwIfDisposed(),LS(this.gl,e,t,n,o,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),ES(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),MS(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(cx(this.gl,this.framebuffer),this.outputTexture=null),we(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>zS(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,o,s,i){return GS(this.gl,e,t,n,o,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return OS(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let o=$S(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if($().getBool("WEBGL_FENCE_API_ENABLED")){let o=e,s=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let i=o.clientWaitSync(s,0,0);return i===o.ALREADY_SIGNALED||i===o.CONDITION_SATISFIED},t=s}else $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>WS(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=_S(t));let n=nS(t);return we(t,()=>t.attachShader(n,this.vertexShader)),we(t,()=>t.attachShader(n,e)),oS(t,n),this.debug&&Vh(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=RS(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&we(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Vh(this.gl,this.program),we(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?pS(this.gl,e,t):cS(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),we(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),mS(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[o,s]=ci(t,n);this.setOutputMatrixTextureDriver(e,o,s)}setOutputMatrixWriteRegion(e,t,n,o){this.setOutputMatrixWriteRegionDriver(n,e,o,t)}setOutputPackedMatrixWriteRegion(e,t,n,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Vh(this.gl,this.program),Dm(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),we(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),we(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Nm(this.gl,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,s),s}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await b.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),o=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=Qre(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&b.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),jh(this.gl,e,this.framebuffer),this.debug&&Dm(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(jh(this.gl,this.outputTexture,this.framebuffer),this.debug&&Dm(this.gl)):cx(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let o=this.gl;jh(o,e,this.framebuffer),this.debug&&Dm(o),this.outputTexture=e,we(o,()=>o.viewport(0,0,t,n)),we(o,()=>o.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,o){this.throwIfDisposed(),we(this.gl,()=>this.gl.scissor(e,t,n,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function Qre(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var{addImpl:OB,bincountImpl:vx,bincountReduceImpl:zB,ceilImpl:GB,concatImpl:WB,equalImpl:UB,expImpl:KB,expm1Impl:VB,floorImpl:jB,gatherNdImpl:HB,gatherV2Impl:qB,greaterImpl:XB,greaterEqualImpl:YB,lessImpl:QB,lessEqualImpl:ZB,linSpaceImpl:JB,logImpl:e$,maxImpl:t$,maximumImpl:r$,minimumImpl:n$,multiplyImpl:o$,negImpl:s$,notEqualImpl:a$,prodImpl:i$,rangeImpl:u$,rsqrtImpl:l$,sigmoidImpl:p$,simpleAbsImpl:wx,sliceImpl:c$,sparseFillEmptyRowsImpl:m$,sparseReshapeImpl:f$,sparseSegmentReductionImpl:Sx,sqrtImpl:d$,stridedSliceImpl:h$,stringNGramsImpl:g$,stringSplitImpl:b$,stringToHashBucketFastImpl:y$,subImpl:x$,tileImpl:T$,topKImpl:k$,transposeImpl:vp,uniqueImpl:I$}=wm;function US(r,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${r}.${t}`)}function sr(r,e){return e===1?[r]:US(r,e)}function C$(r,e){if(r===1)return"rc";let t="";for(let n=0;n<r;n++)t+=e[n],n<r-1&&(t+=",");return t}var KS=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;if(this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Bt(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=sr("rc",this.rank),n=He(this.rank),o=this.getOutOfBoundsCondition(t),s=this.getSetup(t),i=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let o=0;o<=1;o++){let s=`${n===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)s=`${e[e.length-1-i]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${o};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc),
              rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1),
              0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}};var Xh=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec3"}];this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length);let n="";for(let o=0;o<4;o++){let s="thisRC = rc;";o%2==1&&(s+="thisRC.z += 1;"),o>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${Zre(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Fm():Pm(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function Zre(r,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?NB(["r","c","d"],"inputShape"):Ea(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var VS=class{constructor(e){this.gpgpu=e;this.numUsedTextures=0;this.numFreeTextures=0;this._numBytesAllocated=0;this._numBytesFree=0;this.freeTextures={};this.logEnabled=!1;this.usedTextures={}}acquireTexture(e,t,n){let o=w$(t,n),s=S$(e,o,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let i=v$(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let u=this.freeTextures[s].shift();return this.usedTextures[s].push(u),u}let a;return o===$r.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===$r.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===$r.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===$r.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===$r.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,n,o){if(this.freeTextures==null)return;let s=w$(n,o),i=S$(t,s,o);i in this.freeTextures||(this.freeTextures[i]=[]);let a=v$(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,o),u=$().get("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;let l=this.usedTextures[i],p=l.indexOf(e);if(p<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(p,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function Jre(r,e){let t=r;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===r.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function v$(r,e,t,n,o){let s=ene(e,n),i;if(o){let[u,l]=ci(r[0],r[1]);i=u*l}else{let[u,l]=kp(r[0],r[1]);i=u*l}let a=Jre(t,s);return i*a}function ene(r,e){switch(r){case $r.PACKED_2X2_FLOAT32:return kx(e);case $r.PACKED_2X2_FLOAT16:return Ix(e);case $r.UNPACKED_FLOAT32:return yx(e);case $r.UNPACKED_FLOAT16:return xx(e);case $r.PACKED_4X1_UNSIGNED_BYTE:return Tx(e);default:throw new Error(`Unknown physical texture type ${r}`)}}function tne(r){return $().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?$r.PACKED_2X2_FLOAT32:$r.UNPACKED_FLOAT32:r?$r.PACKED_2X2_FLOAT16:$r.UNPACKED_FLOAT16}function w$(r,e){if(r===Yr.UPLOAD)return $r.PACKED_2X2_FLOAT32;if(r===Yr.RENDER||r==null)return tne(e);if(r===Yr.DOWNLOAD||r===Yr.PIXELS)return $r.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${r}`)}function S$(r,e,t){return`${r[0]}_${r[1]}_${e}_${t}`}var Mn=class{constructor(e,t){this.variableNames=["A"];this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Dr="if (isnan(x)) return x;",_$="return x;",jS="return abs(x);";var A$="return (x >= 0.0) ? x : (exp(x) - 1.0);",N$=Dr+`
  return (x < 0.0) ? 0.0 : x;
`,D$=Dr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Yh="return x;",P$="return 1.0 / (1.0 + exp(-1.0 * x));";var F$="return x;",M$=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,E$=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,R$=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,L$="return 1.0 / (1.0 + exp(-1.0 * x));",Ra=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var HS=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length);let t=e.length,n=sr("rc",t),o=He(t),s=C$(t,n),i=n.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}};var rne=xr.whereImpl,nne=1e-7,one=1e-4,_x={};function sne(r){return r in _x||(_x[r]={}),_x[r]}var ane=$().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),ine=600;function une(){return $().global.screen==null?1024:$().global.screen.height*$().global.screen.width*window.devicePixelRatio*ine/1024/1024}var qS=class extends ss{constructor(e){super();this.pendingRead=new WeakMap;this.pendingDisposal=new WeakSet;this.dataRefCount=new WeakMap;this.numBytesInGPU=0;this.uploadWaitMs=0;this.downloadWaitMs=0;this.lastGlFlushTime=0;this.warnedAboutMemory=!1;this.pendingDeletes=0;this.disposed=!1;if(!$().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(e==null){let t=Qo($().getNumber("WEBGL_VERSION"));this.binaryCache=sne($().getNumber("WEBGL_VERSION")),this.gpgpu=new Cx(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new VS(this.gpgpu),this.numMBBeforeWarning=une(),this.texData=new Ga(this,Uo())}nextDataId(){return qS.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if(($().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||$().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()};return this.texData.set(o,{shape:t,dtype:n,values:e,usage:Yr.UPLOAD,refCount:1}),o}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,o,s){if($().getBool("DEBUG")&&this.checkNumericalProblems(t),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:o,values:t,usage:Yr.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:o,complexTensorInfos:s,slice:i,shape:a,isPacked:u}=t;if(i!=null){let m;u?m=new Ra(a,Yh):m=new Mn(a,Yh);let f=this.runWebGLProgram(m,[{dataId:e,shape:a,dtype:o}],o),d=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),d}if(n!=null)return this.convertAndCacheOnCPU(e);if(o==="string")return n;let l=this.activeTimers!=null,p;l&&(p=b.now());let c;if(o==="complex64"){let m=this.readSync(s.real.dataId),f=this.readSync(s.imag.dataId);c=I.mergeRealAndImagArrays(m,f)}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=b.now()-p),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){let d=this.pendingRead.get(e);return new Promise(h=>d.push(h))}let t=this.texData.get(e),{values:n,shape:o,slice:s,dtype:i,complexTensorInfos:a,isPacked:u}=t;if(s!=null){let d;u?d=new Ra(o,Yh):d=new Mn(o,Yh);let h=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:i}],i),g=this.read(h.dataId);return this.disposeIntermediateTensorInfo(h),g}if(n!=null)return this.convertAndCacheOnCPU(e);if($().getBool("DEBUG")&&!$().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&$().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,p;if(i!=="complex64"&&$().get("WEBGL_BUFFER_SUPPORTED")){p=this.decode(e);let d=this.texData.get(p.dataId);l=this.gpgpu.createBufferFromTexture(d.texture,...Uh(o))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let c;if(i==="complex64"){let d=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),h=d[0],g=d[1];c=I.mergeRealAndImagArrays(h,g)}else if(l==null)c=this.getValuesFromTexture(e);else{let d=b.sizeFromShape(o);c=this.gpgpu.downloadFloat32MatrixFromBuffer(l,d)}if(p!=null&&this.disposeIntermediateTensorInfo(p),l!=null){let d=this.gpgpu.gl;we(d,()=>d.deleteBuffer(l))}let m=this.convertAndCacheOnCPU(e,c),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(d=>d(m)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Uo().removeDataId(e,this),this.pendingDeletes--),m}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>b.decodeString(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!eS(n))throw $().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:o}=this.texData.get(e),s=b.sizeFromShape(t);if($().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let m=this.decode(e),f=this.texData.get(m.dataId),d=this.gpgpu.downloadMatrixFromPackedTexture(f.texture,...Uh(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(m),d}let i=$().getBool("WEBGL_PACK")&&o===!0,a=i?Hh(t):t,u=i?new vS(a):new CS(a),l=this.runWebGLProgram(u,[{shape:a,dtype:n,dataId:e}],"float32"),p=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture,p.texShape[0],p.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=b.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),i=b.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let u=await Promise.all(s);a.kernelMs=b.sum(u),a.getExtraProfileInfo=()=>u.map((l,p)=>({name:i[p],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:b.now(),endMs:null}}endTimer(e){return $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=b.now(),e)}async getQueryTime(e){if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:o,usage:s,isPacked:i,slice:a}=this.texData.get(e),u=a&&a.origDataId||e,l=this.dataRefCount.get(u);l>1?this.dataRefCount.set(u,l-1):(this.dataRefCount.delete(u),t!=null&&(this.numBytesInGPU-=this.computeBytes(o,n),this.textureManager.releaseTexture(t,o,s,i)));let p=this.texData.get(e);p.texture=null,p.texShape=null,p.isPacked=!1,p.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=ane){return $().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&b.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){I.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return rne(e.shape,t)}packedUnaryOp(e,t,n){let o=new Ra(e.shape,t),s=this.compileAndRun(o,[e],n);return Uo().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let o=wx(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,o)}if($().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,jS,e.dtype);let t=new Mn(e.shape,jS),n=this.compileAndRun(t,[e]);return Uo().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(i=>b.encodeString(i));o=this.write(s,e,t)}else o=this.write(n,e,t);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:o}=this.makeTensorInfo(e,t,n);return Uo().makeTensorFromDataId(o,e,t,this)}unpackTensor(e){let t=new HS(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new KS(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[du(e.shape),...hu(e.shape)],o={dtype:e.dtype,shape:n,dataId:e.dataId},s=[du(t),...hu(t)],i=new Xh(s,n),a=!0,u=[n],l=this.runWebGLProgram(i,[o],e.dtype,u,a);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e){let t=this.texData.get(e),{isPacked:n,shape:o,dtype:s}=t,i=Hh(o),a,u=Uh(i);n?a=new IS(i):a=new kS(i);let l=!0,p=[u],c=this.runWebGLProgram(a,[{shape:i,dtype:s,dataId:e}],s,p,l);return{dtype:s,shape:o,dataId:c.dataId}}runWebGLProgram(e,t,n,o,s=!1){let i=this.makeTensorInfo(e.outputShape,n),a=this.texData.get(i.dataId);if(e.packedOutput&&(a.isPacked=!0),e.outPackingScheme===al.DENSE){let g=Uh(e.outputShape);a.texShape=g.map(x=>x*2)}if(e.outTexUsage!=null&&(a.usage=e.outTexUsage),b.sizeFromShape(i.shape)===0)return a.values=b.getTypedArrayFromDType(i.dtype,0),i;let u=[],l=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(g.dataId);if(x.texture==null){if(!e.packedInputs&&b.sizeFromShape(g.shape)<=$().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:x.values};e.packedInputs&&(x.isPacked=!0,x.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!x.isPacked!=!!e.packedInputs)g=x.isPacked?this.unpackTensor(g):this.packTensor(g),u.push(g),x=this.texData.get(g.dataId);else if(x.isPacked&&!il(x.shape,g.shape)){let y=g,T=g.shape;g.shape=x.shape,g=this.packedReshape(g,T),u.push(g),x=this.texData.get(g.dataId),y.shape=T}return{shape:g.shape,texData:x,isUniform:!1}});this.uploadToGPU(i.dataId);let p={shape:i.shape,texData:a,isUniform:!1},c=BB(e,l,p),m=this.getAndSaveBinary(c,()=>EB(this.gpgpu,e,l,p)),f=this.activeTimers!=null,d;f&&(d=this.startTimer()),LB(this.gpgpu,m,l,p,o),u.forEach(g=>this.disposeIntermediateTensorInfo(g)),f&&(d=this.endTimer(d),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(d)}));let h=$().get("WEBGL_FLUSH_THRESHOLD");if(h>0){let g=b.now();g-this.lastGlFlushTime>h&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!$().getBool("WEBGL_LAZILY_UNPACK")&&a.isPacked&&s===!1){let g=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),g}return i}compileAndRun(e,t,n,o,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,o,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||($().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=G(()=>{if(!$().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=$().getBool("DEBUG");$().set("DEBUG",!1);let t=this.abs(me(1e-8)).dataSync()[0];if($().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?nne:one}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:o,values:s,texture:i,usage:a,isPacked:u}=t;if(i!=null)return;let l=this.activeTimers!=null,p;l&&(p=b.now());let c=t.texShape;if(c==null&&(c=fS(n,u),t.texShape=c),s!=null){let m=Hh(n),f,d=c[1],h=c[0],g=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(u||!g)&&([d,h]=ci(c[0],c[1])),u?f=new SS(m,g):f=new wS(m,g);let x=g?[h,d]:c,y=this.makeTensorInfo(x,o),T=this.texData.get(y.dataId);g?T.usage=Yr.PIXELS:T.usage=Yr.UPLOAD,T.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),d,h,s);let k=[[h,d]],C=!0,N=this.runWebGLProgram(f,[y],o,k,C),A=this.texData.get(N.dataId);t.texture=A.texture,t.texShape=A.texShape,t.isPacked=A.isPacked,t.usage=A.usage,this.disposeIntermediateTensorInfo(y),this.texData.delete(N.dataId),t.values=null,l&&(this.uploadWaitMs+=b.now()-p)}else{let m=this.acquireTexture(c,a,o,u);t.texture=m}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:o}=n;return this.releaseGPUData(e),t!=null&&(n.values=lne(t,o)),n.values}acquireTexture(e,t,n,o){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,o)}computeBytes(e,t){return e[0]*e[1]*b.bytesPerElement(t)}},Qh=qS;Qh.nextDataId=0;function lne(r,e){if(e==="float32"||e==="complex64")return r;if(e==="int32"||e==="bool"){let t=e==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let n=0;n<t.length;++n)t[n]=Math.round(r[n]);return t}else throw new Error(`Unknown dtype ${e}`)}var pne="0.0.0";function B$(){$().set("WEBGL_FORCE_F16_TEXTURES",!0)}Ki.isBrowser()&&Vu("webgl",()=>new Qh,2);var h5t={forceHalfFloat:B$};var Ax=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var js=class{constructor(e,t,n){this.variableNames=["A","B"];this.outputShape=I.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=Bt(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var ul=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;var La=class{constructor(e,t,n,o=!1){this.variableNames=["A","B"];this.supportsBroadcasting=!0;this.packedInputs=!0;this.packedOutput=!0;this.outputShape=I.assertAndGetBroadcastShape(t,n);let s=this.outputShape.length;this.enableShapeUniforms=Bt(s);let i="";if(o)if(s===0||b.sizeFromShape(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${He(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let u=sr("coords",s);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}};function ar(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var $$={kernelName:Wn,backendName:"webgl",kernelFunc:ar};function En(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),i=t.texData.get(s.dataId),a=ar({inputs:{x:n},backend:t}),u=ar({inputs:{x:o},backend:t});return i.complexTensorInfos={real:a,imag:u},s}var O$={kernelName:Nu,backendName:"webgl",kernelFunc:En};var XS="return (a < 0.) ? b * a : a;",YS=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function cne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n,i=t.makeTensorInfo([],"float32",b.createScalarValue(s,"float32")),a=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new La(YS,o.shape,i.shape):new js(XS,o.shape,i.shape),u=t.runWebGLProgram(a,[o,i],"float32");return t.disposeIntermediateTensorInfo(i),u}var z$={kernelName:na,backendName:"webgl",kernelFunc:cne};var QS="return (a < 0.) ? b * a : a;",ZS=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function mne(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new La(ZS,n.shape,o.shape):new js(QS,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],"float32")}var G$={kernelName:No,backendName:"webgl",kernelFunc:mne};var Nx="if (isnan(x)) return x;",W$=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,U$=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Ae({opSnippet:r,packedOpSnippet:e,cpuKernelImpl:t,dtype:n}){return({inputs:o,backend:s})=>{let{x:i}=o,a=s,u=n||i.dtype;if(a.shouldExecuteOnCPU([i])&&t!=null){let c=a.texData.get(i.dataId),m=t(c.values,u);return a.makeTensorInfo(i.shape,u,m)}let l=$().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null,p;return l?p=new Ra(i.shape,e):p=new Mn(i.shape,r),a.runWebGLProgram(p,[i],u)}}function mt({opSnippet:r,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:n=!1,cpuKernelImpl:o,dtype:s}){return({inputs:i,backend:a})=>{let{a:u,b:l}=i,p=a;if(n&&u.dtype==="complex64"){let d=p.texData.get(u.dataId),h=p.texData.get(l.dataId),[g,x]=[[d.complexTensorInfos.real,h.complexTensorInfos.real],[d.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(T=>{let[k,C]=T,N={dataId:k.dataId,dtype:k.dtype,shape:u.shape},A={dataId:C.dataId,dtype:C.dtype,shape:l.shape},M=new js(r,u.shape,l.shape);return p.runWebGLProgram(M,[N,A],Kt(k.dtype,C.dtype))}),y=En({inputs:{real:g,imag:x},backend:p});return p.disposeIntermediateTensorInfo(g),p.disposeIntermediateTensorInfo(x),y}let c=s||Kt(u.dtype,l.dtype);if((u.dtype==="string"||l.dtype==="string"||p.shouldExecuteOnCPU([u,l]))&&o!=null){let d=p.texData.get(u.dataId).values,h=p.texData.get(l.dataId).values,g=u.dtype==="string"?I.fromUint8ToStringArray(d):d,x=u.dtype==="string"?I.fromUint8ToStringArray(h):h,[y,T]=o(u.shape,l.shape,g,x,c),k=p.makeTensorInfo(T,c),C=p.texData.get(k.dataId);return C.values=y,k}let m=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null,f;return m?f=new La(e,u.shape,l.shape,t):f=new js(r,u.shape,l.shape),p.runWebGLProgram(f,[u,l],c)}}function ll(r,e=!1){if(r==="linear")return e?F$:_$;if(r==="relu")return e?E$:N$;if(r==="elu")return e?M$:A$;if(r==="relu6")return e?R$:D$;if(r==="prelu")return e?ZS:QS;if(r==="leakyrelu")return e?YS:XS;if(r==="sigmoid")return e?L$:P$;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var Zh=class{constructor(e,t,n,o=!1,s=!1,i=!1,a=null,u=!1,l=!1){this.variableNames=["matrixA","matrixB"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=n,this.enableShapeUniforms=Bt(this.outputShape.length);let p=o?e[1]:e[2],c=Math.ceil(p/2),m=o?"i * 2, rc.y":"rc.y, i * 2",f=s?"rc.z, i * 2":"i * 2, rc.z",d=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",x="";a&&(u?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:l?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,x="result = activation(result);");let y=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let T="rc.x",k="rc.x";e[0]<t[0]?T=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(k=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${c}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${c}; i++) {
          int batchA = ${T};
          int batchB = ${k};
          vec4 a = getMatrixA(batchA, ${m});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${d[0]} * ${h[0]});
          result += (${d[1]} * ${h[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${x}

        setOutput(result);
      }
    `}};var JS={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},Dx=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.outputShape=I.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var K$="return a * b;";function Jh(r){let{inputs:e,backend:t}=r,{a:n,b:o}=e,s=I.upcastType(n.dtype,o.dtype);if(n.dtype==="complex64"){let a=t.texData.get(n.dataId),u=t.texData.get(o.dataId),l=new Dx(JS.REAL,n.shape,o.shape),p=new Dx(JS.IMAG,n.shape,o.shape),c=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:n.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:o.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:o.shape}],m=t.runWebGLProgram(l,c,"float32"),f=t.runWebGLProgram(p,c,"float32"),d=En({inputs:{real:m,imag:f},backend:t});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),d}if(t.shouldExecuteOnCPU([n,o])){let a=t.texData.get(n.dataId),u=t.texData.get(o.dataId),[l,p]=o$(n.shape,o.shape,a.values,u.values,s),c=t.makeTensorInfo(p,s),m=t.texData.get(c.dataId);return m.values=l,c}let i;return $().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new La(K$,n.shape,o.shape):i=new js(K$,n.shape,o.shape),t.runWebGLProgram(i,[n,o],s)}var V$={kernelName:So,backendName:"webgl",kernelFunc:Jh};function j$(r,e,t){let n=[du(r.shape),...hu(r.shape)],o={dtype:r.dtype,shape:n,dataId:r.dataId},s=[du(e),...hu(e)],i=new Xh(s,n),a=!0,u=[n],l=t.runWebGLProgram(i,[o],r.dtype,u,a);return{dataId:l.dataId,shape:e,dtype:l.dtype}}function le(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,i=t,a=b.sizeFromShape(o.shape),u=b.inferFromImplicitShape(s,a),l=b.sizeFromShape(u);b.assert(a===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);let p=i.texData.get(o.dataId);return p.isPacked&&!il(o.shape,u)&&!(p.texture!==null&&il(p.shape,u))?j$(o,u,i):(i.incRef(o.dataId),{dataId:o.dataId,shape:u,dtype:o.dtype})}var H$={kernelName:hs,backendName:"webgl",kernelFunc:le};var Px=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:i}=e;this.outputShape=[o,i];let a=Math.floor(n/4)*4,u=n%4,l="sumValue += dot(values, ones);";if(t!=null){let c=1/t;l=`sumValue += dot(values * ${b.isInt(c)?c.toPrecision(2):c}, ones);`}let p="";s%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${a};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}};var e_=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:i}=e;this.outputShape=[o,i];let a="0.0",u="";t==="prod"?a="1.0":t==="min"?(a="1.0 / 1e-20",u="min"):t==="max"&&(a="-1.0 / 1e-20",u="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let p=Math.floor(n/4)*4,c=n%4,m=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";t==="all"?(a="1.0",m=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):t==="any"&&(a="0.0",m=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${m}
        }

        int inIdx = inOffset + ${p};
        if (${c===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${c===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${c===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${m}
        }
        setOutput(${l});
      }
    `}};function fne(r){let e=[];for(;e.length===0||e[e.length-1].outSize!==1;){let t=e.length?e[e.length-1].outSize:r[1],n=I.computeOptimalWindowSize(t);e.push({inSize:t,windowSize:n,outSize:Math.ceil(t/n)})}return e}function Qn(r,e,t,n){let o=fne(r.shape),s=r;for(let i=0;i<o.length;i++){let{inSize:a,windowSize:u,outSize:l}=o[i],p,c;t==="mean"?p=i===0?new Px({windowSize:u,inSize:a,batchSize:r.shape[0],outSize:l},a):new Px({windowSize:u,inSize:a,batchSize:r.shape[0],outSize:l}):p=new e_({windowSize:u,inSize:a,batchSize:r.shape[0],outSize:l},t),c=s,s=n.runWebGLProgram(p,[s],e),c.dataId!==r.dataId&&n.disposeIntermediateTensorInfo(c)}return s}var t_=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[t[i]];this.outputShape=n,this.rank=n.length;let o=He(this.rank),s=dne(t);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function dne(r){let e=r.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(e);for(let o=0;o<r.length;o++)n[r[o]]=t[o];return n.join()}var r_=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;let n=new Array(e.length);for(let p=0;p<n.length;p++)n[p]=e[t[p]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let o=He(this.rank),s=US("rc",this.rank),i=new Array(this.rank);for(let p=0;p<t.length;p++)i[t[p]]=s[p];let a=`vec2(${i.slice(-2).join()})`,u=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${u}) {
        result[1] = ${l};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${u}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function pl(r,e,t){let n=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new r_(r.shape,e):new t_(r.shape,e);return t.runWebGLProgram(n,[r],r.dtype)}function q$(r,e,t,n){let o=e,s=r.shape.length,i=b.parseAxisParam(o,r.shape),a=i,u=I.getAxesPermutation(a,s),l=u!=null,p=r;l&&(p=pl(r,u,n),a=I.getInnerMostAxes(a.length,s)),I.assertAxesAreInnerMostDims("sum",a,s);let[c,m]=I.computeOutAndReduceShapes(p.shape,a),f=c;t&&(f=I.expandShapeToKeepDim(c,i));let d=b.sizeFromShape(m),g=b.sizeFromShape(r.shape)/d,x=le({inputs:{x:p},attrs:{shape:[g,d]},backend:n}),y=Ui(r.dtype),T=Qn(x,y,"sum",n),k=le({inputs:{x:T},attrs:{shape:f},backend:n});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(T),l&&n.disposeIntermediateTensorInfo(p),k}function wp(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;return q$(o,s,i,t)}var X$={kernelName:Bo,backendName:"webgl",kernelFunc:wp};function Ht(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,i=t,a=o.shape.length,u=new Array(a);for(let p=0;p<u.length;p++)u[p]=o.shape[s[p]];let l;if(i.shouldExecuteOnCPU([o])){let c=i.texData.get(o.dataId).values,m=vp(c,o.shape,o.dtype,s,u);l=i.makeTensorInfo(u,o.dtype);let f=i.texData.get(l.dataId);f.values=m}else l=pl(o,s,i);return l}var Y$={kernelName:Wo,backendName:"webgl",kernelFunc:Ht};var n_=1e3;function Sp({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:u=null}){let l=r.shape.length,p=e.shape.length,c=t?r.shape[l-2]:r.shape[l-1],m=n?e.shape[p-1]:e.shape[p-2],f=t?r.shape[l-1]:r.shape[l-2],d=n?e.shape[p-2]:e.shape[p-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),x=b.sizeFromShape(h),y=b.sizeFromShape(g),k=Ds.assertAndGetBroadcastShape(r.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,d]);b.assert(c===m,()=>`Error in matMul: inner shapes (${c}) and (${m}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let C=t?[x,c,f]:[x,f,c],N=n?[y,d,m]:[y,m,d],A=le({inputs:{x:r},backend:o,attrs:{shape:C}}),M=le({inputs:{x:e},backend:o,attrs:{shape:N}}),E=[A,M],B=Math.max(x,y),W=t?A.shape[1]:A.shape[2],U=s!=null,K=i!=null,j=u==="leakyrelu",V=u!=null?ll(u,!0):null,q=U||K||j||V!=null,ee;if((f===1||d===1)&&W>n_&&q===!1){let te=A,oe=M;t&&(te=Ht({inputs:{x:A},backend:o,attrs:{perm:[0,2,1]}}),E.push(te)),n&&(oe=Ht({inputs:{x:M},backend:o,attrs:{perm:[0,2,1]}}),E.push(oe));let ie=d!==1,se=d===1,ue=te;ie&&(ue=le({inputs:{x:te},backend:o,attrs:{shape:[B,W,1]}}),E.push(ue));let ye=d===1?2:1,de=oe;se&&(de=le({inputs:{x:oe},backend:o,attrs:{shape:[B,1,W]}}),E.push(de));let Te=Jh({inputs:{a:ue,b:de},backend:o});ee=wp({inputs:{x:Te},backend:o,attrs:{axis:ye,keepDims:!0}}),E.push(Te)}else{let te=Kt(r.dtype,e.dtype),oe=new Zh(C,N,[B,f,d],t,n,U,V,K,j),ie=[A,M];if(s!=null&&ie.push(s),K&&ie.push(i),j){let se=o.makeTensorInfo([],"float32",b.createScalarValue(a,"float32"));ie.push(se),E.push(se)}ee=o.runWebGLProgram(oe,ie,te)}let Z=le({inputs:{x:ee},backend:o,attrs:{shape:k}});E.push(ee);for(let te of E)o.disposeIntermediateTensorInfo(te);return Z}function hne(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:i,preluActivationWeights:a}=e,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:c}=n;return Sp({a:o,b:s,transposeA:u,transposeB:l,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:c,activation:p})}var Q$={kernelName:Cs,backendName:"webgl",kernelFunc:hne};var Z$="return abs(x);";function gne(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=t.texData.get(n.dataId),i=wx(s.values);return t.makeTensorInfo(n.shape,n.dtype,i)}let o;return $().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Ra(n.shape,Z$):o=new Mn(n.shape,Z$),t.runWebGLProgram(o,[n],n.dtype)}var J$={kernelName:is,backendName:"webgl",kernelFunc:gne};var bne=Dr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,yne=Ae({opSnippet:bne}),eO={kernelName:ki,backendName:"webgl",kernelFunc:yne};var xne=Dr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Tne=Ae({opSnippet:xne}),tO={kernelName:Ii,backendName:"webgl",kernelFunc:Tne};var rO="return a + b;",kne=mt({opSnippet:rO,packedOpSnippet:rO,supportsComplex:!0,cpuKernelImpl:OB}),nO={kernelName:Cn,backendName:"webgl",kernelFunc:kne};var o_=class{constructor(e,t){this.outputShape=[];this.outputShape=e,this.variableNames=t.map((s,i)=>`T${i}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}};var s_=class{constructor(e,t){this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.variableNames=t.map((s,i)=>`T${i}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}};function Fx(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return ar({inputs:{x:n[0]},backend:t});if(n.length>$().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(n.length/2),l=Fx({inputs:n.slice(0,u),backend:t}),p=Fx({inputs:n.slice(u),backend:t});return Fx({inputs:[l,p],backend:t})}let o=n.map(u=>u.dtype).reduce((u,l)=>Kt(u,l)),s=n.map(u=>u.shape),a=$().getBool("WEBGL_PACK")?new s_(n[0].shape,s):new o_(n[0].shape,s);return t.runWebGLProgram(a,n,o)}var oO={kernelName:eo,backendName:"webgl",kernelFunc:Fx};function Ine(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n,a=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,p=I.getAxesPermutation(l,a),c=o;p!=null&&(c=Ht({inputs:{x:o},backend:t,attrs:{perm:p}}),l=I.getInnerMostAxes(l.length,a)),I.assertAxesAreInnerMostDims("all",l,a);let[m,f]=I.computeOutAndReduceShapes(c.shape,l),d=b.sizeFromShape(f),h=le({inputs:{x:c},backend:t,attrs:{shape:[-1,d]}}),g=Qn(h,h.dtype,"all",t),x;if(i){let y=I.expandShapeToKeepDim(m,u);x=le({inputs:{x:g},backend:t,attrs:{shape:y}})}else x=le({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),p!=null&&t.disposeIntermediateTensorInfo(c),x}var sO={kernelName:Ci,backendName:"webgl",kernelFunc:Ine};function Cne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n,a=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,p=I.getAxesPermutation(l,a),c=o;p!=null&&(c=Ht({inputs:{x:o},backend:t,attrs:{perm:p}}),l=I.getInnerMostAxes(l.length,a)),I.assertAxesAreInnerMostDims("any",l,a);let[m,f]=I.computeOutAndReduceShapes(c.shape,l),d=b.sizeFromShape(f),h=le({inputs:{x:c},backend:t,attrs:{shape:[-1,d]}}),g=Qn(h,h.dtype,"any",t),x;if(i){let y=I.expandShapeToKeepDim(m,u);x=le({inputs:{x:g},backend:t,attrs:{shape:y}})}else x=le({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),p!=null&&t.disposeIntermediateTensorInfo(c),x}var aO={kernelName:vi,backendName:"webgl",kernelFunc:Cne};var a_=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:o,batchSize:s,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];let a=t==="max"?">":"<",u=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var i_=class{constructor(e,t,n,o){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;b.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=e[e.length-1],i=Math.ceil(s/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),o||this.variableNames.push("bestIndicesA");let a=this.outputShape,u=a.length,l=He(u),p=sr("coords",u),c,m;if(i===1){m=u+1;let M=He(m);c=`
        ${M} sourceLocR = ${M}(${p.join()}, 0);
        ++${p[u-1]};
        ${M} sourceLocG = ${M}(${p.join()}, 0);
        ++${p[u-2]};
        ${M} sourceLocA = ${M}(${p.join()}, 0);
        --${p[u-1]};
        ${M} sourceLocB = ${M}(${p.join()}, 0);
        --${p[u-2]};`}else m=u,c=`
        ${l} sourceLocR = coords;
        ++${p[u-1]};
        ${l} sourceLocG = coords;
        ++${p[u-2]};
        ${l} sourceLocA = coords;
        --${p[u-1]};
        ${l} sourceLocB = coords;
        --${p[u-2]};`;let f=["x","y","z","w","u","v"].slice(0,m),d="."+f[m-1],h=f.map(M=>"int "+M),g=sr("sourceLocR",m-1).concat("inIdx.r"),x=sr("sourceLocG",m-1).concat("inIdx.g"),y=sr("sourceLocB",m-1).concat("inIdx.b"),T=sr("sourceLocA",m-1).concat("inIdx.a"),k=n==="max"?"greaterThan":"lessThan",C=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${T.join()})));`,N=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${T.join()}) : 0.)`,A=o?"":`
      float getBestIndicesAChannel(${h.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${h.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${A}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${p[u-1]} < ${a[u-1]-1};
        bool hasNextRow = ${p[u-2]} < ${a[u-2]-1};
        ${c}
        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},
          sourceLocB${d}, sourceLocA${d}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${N};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${C}
          vec4 candidate = ${N};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${k}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function iO(r,e,t,n=null){let o=e.shape[0],s=e.shape[1];n!=null&&(o=n.shape[0],s=n.shape[1]);let i=I.computeOptimalWindowSize(s),a={windowSize:i,inSize:s,batchSize:o,outSize:Math.ceil(s/i)},u=new a_(a,t,n==null),l=[e];n!=null&&l.push(n);let p=r.runWebGLProgram(u,l,"int32");if(p.shape[1]===1)return p;let c=iO(r,e,t,p);return r.disposeIntermediateTensorInfo(p),c}function uO(r,e,t,n=null){let o=n!=null?n.shape:e.shape,s=o[o.length-1],i=I.computeOptimalWindowSize(s),a=new i_(o,i,t,n==null),u=n==null?[e]:[e,n],l=r.runWebGLProgram(a,u,"int32");if(l.shape.length===e.shape.length){let p=uO(r,e,t,l);return r.disposeIntermediateTensorInfo(l),p}return l}function Mx(r,e,t,n){let o=[t];if(I.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.shape.length),!$().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){let s=[],i=r.texData.get(e.dataId),a=i!==null&&i.isPacked,u=e;a&&(u=r.unpackTensor(e),s.push(u));let[l,p]=I.computeOutAndReduceShapes(u.shape,o),c=b.sizeFromShape(p),m=le({inputs:{x:u},backend:r,attrs:{shape:[-1,c]}});s.push(m);let f=iO(r,m,n);s.push(f);let d=le({inputs:{x:f},backend:r,attrs:{shape:l}});return s.forEach(h=>r.disposeIntermediateTensorInfo(h)),d}return uO(r,e,n)}function vne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,i=b.parseAxisParam(s,o.shape),a=I.getAxesPermutation(i,o.shape.length),u=o,l=[];a!=null&&(u=Ht({inputs:{x:o},backend:t,attrs:{perm:a}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);let p=Mx(t,u,i[0],"max");return l.forEach(c=>t.disposeIntermediateTensorInfo(c)),p}var lO={kernelName:to,backendName:"webgl",kernelFunc:vne};function wne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,i=b.parseAxisParam(s,o.shape),a=I.getAxesPermutation(i,o.shape.length),u=o,l=[];a!=null&&(u=Ht({inputs:{x:o},backend:t,attrs:{perm:a}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);let p=Mx(t,u,i[0],"min");return l.forEach(c=>t.disposeIntermediateTensorInfo(c)),p}var pO={kernelName:Ka,backendName:"webgl",kernelFunc:wne};var Sne=Dr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,_ne=Ae({opSnippet:Sne}),cO={kernelName:wi,backendName:"webgl",kernelFunc:_ne};var Ane=Dr+"return log(x + sqrt(x * x + 1.0));",Nne=Ae({opSnippet:Ane}),mO={kernelName:Si,backendName:"webgl",kernelFunc:Nne};var Dne=Dr+`
  return atan(x);
`,Pne=Ae({opSnippet:Dne}),fO={kernelName:_i,backendName:"webgl",kernelFunc:Pne};var Fne=W$+`
  return atan(a, b);
`,Mne=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+U$+`
  return result;
`,Ene=mt({opSnippet:Fne,packedOpSnippet:Mne}),dO={kernelName:Ni,backendName:"webgl",kernelFunc:Ene};var Rne=Dr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Lne=Ae({opSnippet:Rne}),hO={kernelName:Ai,backendName:"webgl",kernelFunc:Lne};var mi=class{constructor(e,t,n,o=!1,s=!1){this.variableNames=["x"];if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let i=e.filterWidth,a=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,p=e.dilationWidth,c=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;let h=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,x=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(h||(y="-1.0 / 1e-20"),n){let M=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${u});
        const ivec2 pads = ivec2(${f}, ${d});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${c};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m};
                wC += ${p}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${M} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?s?g:x:`wR * ${m} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let T="max",k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(k="avgValue / count");let C=Math.floor(i/4)*4,N=i%4,A=`
      if (${h}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${T}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${u});
      const ivec2 pads = ivec2(${f}, ${d});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${c};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${C}; wC += 4) {
            int xC = xCCorner + wC * ${p};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              getValue(batch, xR, xC + 3 * ${p}, d)
            );

            ${A}
          }

          int xC = xCCorner + ${C};
          if (${N===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${A}
          } else if (${N===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              initializationValue,
              initializationValue
            );

            ${A}
          } else if (${N===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              initializationValue
            );

            ${A}
          }
        }
        setOutput(${k});
      }
    `}},_p=class{constructor(e,t,n,o=!1,s=!1){this.variableNames=["x"];if(t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let i=e.filterWidth,a=e.strideDepth,u=e.strideHeight,l=e.strideWidth,p=e.dilationDepth,c=e.dilationHeight,m=e.dilationWidth,f=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,g=e.padInfo.front,x=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let T=t==="avg",k="0.0";if(T||(k="-1.0 / 1e-20"),n){let B=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${u}, ${l});
        const ivec3 pads = ivec3(${g}, ${x}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${p}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${d};
                wR += ${c}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${h};
                  wC += ${m}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${B} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${h} +
                      wR * ${h} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let C="max",N=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(N="avgValue / count");let A=Math.floor(i/4)*4,M=i%4,E=`
      if (${T}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${C}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${u}, ${l});
      const ivec3 pads = ivec3(${g}, ${x}, ${y});
      const float initializationValue = ${k};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${k});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${p}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d};
            wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${A}; wC += 4) {
              int xC = xCCorner + wC * ${m};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                getValue(batch, xD, xR, xC + 3 * ${m}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${A};
            if (${M===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${M===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${M===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                initializationValue
              );

              ${E}
            }
          }
          setOutput(${N});
        }
      }
    `}};function Bne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;Ma(o,"avgPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,l=1;b.assert(I.eitherStridesOrDilationsAreOne(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let p=I.computePool2DInfo(o.shape,s,i,l,a,u);if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))return ar({inputs:{x:o},backend:t});let c=new mi(p,"avg",!1);return t.runWebGLProgram(c,[o],"float32")}var gO={kernelName:ro,backendName:"webgl",kernelFunc:Bne};function $ne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u,dataFormat:l}=n,p=[1,1,1],c=I.computePool3DInfo(o.shape,s,i,p,a,u,l),m=new _p(c,"avg",!1);return t.runWebGLProgram(m,[o],"float32")}var bO={kernelName:Au,backendName:"webgl",kernelFunc:$ne};var u_=class{constructor(e){this.variableNames=["dy"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,p=u-1-e.padInfo.top,c=l-1-e.padInfo.left,m=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${p}, ${c});
      const float avgMultiplier = float(${m});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},l_=class{constructor(e){this.variableNames=["dy"];this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,p=e.dilationWidth,c=e.effectiveFilterDepth,m=e.effectiveFilterHeight,f=e.effectiveFilterWidth,d=c-1-e.padInfo.front,h=m-1-e.padInfo.top,g=f-1-e.padInfo.left,x=1/(t*n*o);this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${g});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${m};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${p}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function One(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,i=s,{filterSize:a,strides:u,pad:l,dimRoundingMode:p}=n,c=[1,1,1],m=I.computePool3DInfo(i.shape,a,u,c,l,p),f=new l_(m);return t.runWebGLProgram(f,[o],i.dtype)}var yO={kernelName:Qp,backendName:"webgl",kernelFunc:One};function zne(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,i=s;Ma([o,s],"avgPoolGrad");let{filterSize:a,strides:u,pad:l}=n,p=I.computePool2DInfo(i.shape,a,u,1,l),c=new u_(p);return t.runWebGLProgram(c,[o],i.dtype)}var xO={kernelName:Yp,backendName:"webgl",kernelFunc:zne};function Gne(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:i,transposeB:a}=n;return Sp({a:o,b:s,transposeA:i,transposeB:a,backend:t})}var TO={kernelName:no,backendName:"webgl",kernelFunc:Gne};var p_=class{constructor(e,t,n,o,s,i){this.outputShape=[];this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n);let a="0.0";o!=null&&(I.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="1.0";s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var c_=class{constructor(e,t,n,o,s,i){this.packedInputs=!0;this.packedOutput=!0;this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n);let a="vec4(0.0)";o!=null&&(I.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="vec4(1.0)";s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var Wne=({inputs:r,backend:e,attrs:t})=>{let{x:n,mean:o,variance:s,offset:i,scale:a}=r;b.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=t;u==null&&(u=.001);let l=[n,o,s],p=null;i!=null&&(p=i.shape,l.push(i));let c=null;a!=null&&(c=a.shape,l.push(a));let m=$().getBool("WEBGL_PACK_NORMALIZATION")?new c_(n.shape,o.shape,s.shape,p,c,u):new p_(n.shape,o.shape,s.shape,p,c,u);return e.runWebGLProgram(m,l,l[0].dtype)},kO={kernelName:go,backendName:"webgl",kernelFunc:Wne};var m_=class{constructor(e){this.variableNames=["source"];this.outputShape=e,this.rank=e.length;let t=He(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=Une(this.rank),o,s=e.map((i,a)=>`sourceLoc.${f_[a]} = start[${a}] + coords.${f_[a]};`);o=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${n}));
      }
    `}},f_=["x","y","z","w","u","v"];function Une(r){if(r===1)return"sourceLoc";if(r<=6)return f_.slice(0,r).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var d_=class{constructor(e){this.variableNames=["source"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=He(this.rank),n=sr("coords",this.rank),o=sr("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,i=`getChannel(getSource(${o.join()}), ${s})`,a=`
      result.x = ${i};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${i};
        --${o[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${i};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${i};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((p,c)=>`start[${c}]`).join()});`:e.map((p,c)=>`${o[c]} = ${n[c]} + start[${c}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${a}
        ${u}
        setOutput(result);
      }
    `}};function Kne(r,e,t,n){let o=n.texData.get(r.dataId),s=n.makeTensorInfo(t,r.dtype),i=n.texData.get(s.dataId);Object.assign(i,o),i.refCount=1,i.shape=t,i.dtype=r.dtype;let a=kt.computeFlatOffset(e,b.computeStrides(r.shape));o.slice&&(a+=o.slice.flatOffset),i.slice={flatOffset:a,origDataId:o.slice&&o.slice.origDataId||r.dataId};let u=n.dataRefCount.get(i.slice.origDataId)||1;return n.dataRefCount.set(i.slice.origDataId,u+1),s}function Ba(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:i}=n,[a,u]=kt.parseSliceParams(o,s,i);if(kt.assertParamsValid(o,a,u),b.sizeFromShape(u)===0)return t.makeTensorInfo(u,o.dtype,[]);if(t.shouldExecuteOnCPU([o])||o.dtype==="string"){let c=t.texData.get(o.dataId),m=c$(c.values,a,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,m)}let{isPacked:l}=t.texData.get(o.dataId),p=kt.isSliceContinous(o.shape,a,u);if(l||!p){let c=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new d_(u):new m_(u),m=[a];return t.runWebGLProgram(c,[o],o.dtype,m)}return t.uploadToGPU(o.dataId),Kne(o,a,u,t)}var IO={kernelName:bs,backendName:"webgl",kernelFunc:Ba};var Vne=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:i}=n;b.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let a=s.reduce((y,T)=>y*T),u=I.getReshaped(o.shape,s,a),l=I.getPermuted(u.length,s.length),p=I.getReshapedPermuted(o.shape,s,a),c=I.getSliceBeginCoords(i,s.length),m=I.getSliceSize(p,i,s.length),f=[],d=le({inputs:{x:o},backend:t,attrs:{shape:u}}),h=Ht({inputs:{x:d},backend:t,attrs:{perm:l}}),g=le({inputs:{x:h},backend:t,attrs:{shape:p}}),x=Ba({inputs:{x:g},backend:t,attrs:{begin:c,size:m}});return f.push(d),f.push(h),f.push(g),f.forEach(y=>t.disposeIntermediateTensorInfo(y)),x},CO={kernelName:us,backendName:"webgl",kernelFunc:Vne};function jne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:i}=n,a=t.readSync(o.dataId),u=t.readSync(s.dataId),l=vx(a,u,s.dtype,s.shape,i);return t.makeTensorInfo([i],s.dtype,l)}var vO={kernelName:Zp,backendName:"webgl",kernelFunc:jne};function Hne(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.readSync(n.dataId),i=t.readSync(o.dataId),a=I.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var wO={kernelName:Jp,backendName:"webgl",kernelFunc:Hne};var qne="return float(a != b);",h_=mt({opSnippet:qne,cpuKernelImpl:a$,dtype:"bool"}),SO={kernelName:ia,backendName:"webgl",kernelFunc:h_};function gu(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return ar({inputs:{x:o.complexTensorInfos.real},backend:t})}var _O={kernelName:Bu,backendName:"webgl",kernelFunc:gu};var Xne="return float(int(x));";function AO(r,e){let t=new Mn(r.shape,Xne),n=e.runWebGLProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function g_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return ar({inputs:{x:o},backend:t});let i=Tt(o.shape),a=g_({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=En({inputs:{real:a,imag:i},backend:t});return i.dispose(),t.disposeIntermediateTensorInfo(a),u}if(o.dtype==="complex64"){let i=gu({inputs:{input:o},backend:t}),a=g_({inputs:{x:i},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(i),a}if(!b.hasEncodingLoss(o.dtype,s)){let i=ar({inputs:{x:o},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32")return AO(o,t);if(s==="bool"){let i=t.makeTensorInfo([],"bool",b.getTypedArrayFromDType("bool",1)),u=h_({inputs:{a:o,b:i},backend:t});return t.disposeIntermediateTensorInfo(i),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var NO={kernelName:zn,backendName:"webgl",kernelFunc:g_};var DO="return ceil(x);",Yne=Ae({opSnippet:DO,packedOpSnippet:DO,cpuKernelImpl:GB}),PO={kernelName:oo,backendName:"webgl",kernelFunc:Yne};var b_=class{constructor(e){this.variableNames=["A"];this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var y_=class{constructor(e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function Qne(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:i}=n,a;$().getBool("WEBGL_PACK_CLIP")?a=new y_(o.shape):a=new b_(o.shape);let u=[[s],[i]];return t.runWebGLProgram(a,[o],o.dtype,u)}var FO={kernelName:Gn,backendName:"webgl",kernelFunc:Qne};var x_=class{constructor(e){this.variableNames=["real","imag"];this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function MO(r,e){return{dataId:e.dataId,dtype:e.dtype,shape:r.shape}}function Zne(r){let{inputs:e,backend:t}=r,{x:n}=e,o=t.texData.get(n.dataId),s=new x_(n.shape),i=[MO(n,o.complexTensorInfos.real),MO(n,o.complexTensorInfos.imag)];return t.runWebGLProgram(s,i,i[0].dtype)}var EO={kernelName:Du,backendName:"webgl",kernelFunc:Zne};var T_=class{constructor(e){this.outputShape=[];this.outputShape=I.computeOutShape(e,1),this.variableNames=e.map((i,a)=>`T${a}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){let a=t[i-1];n.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${a}));`)}let o=t.length,s=t[t.length-1];n.push(`else setOutput(getT${o}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}};var k_=class{constructor(e,t){this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];this.outputShape=I.computeOutShape(e,t);let n=this.outputShape,o=n.length,s=He(o),i=sr("coords",o),a=["x","y","z","w","u","v"].slice(0,o);this.variableNames=e.map((h,g)=>`T${g}`);let u=new Array(e.length-1);u[0]=e[0][t];for(let h=1;h<u.length;h++)u[h]=u[h-1]+e[h][t];let l=a[t],p=a.slice(-2),c=a.join(),m=`if (${l} < ${u[0]}) {
        return getChannel(
            getT0(${c}), vec2(${p.join()}));
        }`;for(let h=1;h<u.length;h++){let g=u[h-1];m+=`
        if (${l} < ${u[h]}  && ${l} >= ${u[h-1]}) {
          return getChannel(
            getT${h}(${Ex(a,l,g)}),
            vec2(${Ex(p,l,g)}));
        }`}let f=u.length,d=u[u.length-1];m+=`
        return getChannel(
          getT${f}(${Ex(a,l,d)}),
          vec2(${Ex(p,l,d)}));`,this.userCode=`
      float getValue(${a.map(h=>"int "+h)}) {
        ${m}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[o-1]} = ${i[o-1]} + 1;
        if (${i[o-1]} < ${n[o-1]}) {
          result.g = getValue(${i});
        }

        ${i[o-2]} = ${i[o-2]} + 1;
        if (${i[o-2]} < ${n[o-2]}) {
          result.a = getValue(${i});
        }

        ${i[o-1]} = ${i[o-1]} - 1;
        if (${i[o-2]} < ${n[o-2]} &&
            ${i[o-1]} < ${n[o-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}};function Ex(r,e,t){let n=r.indexOf(e);return r.map((s,i)=>i===n?`${s} - ${t}`:s).join()}function Ap(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return ar({inputs:{x:o.complexTensorInfos.imag},backend:t})}var RO={kernelName:Eu,backendName:"webgl",kernelFunc:Ap};function Np(r,e,t){let n=r[0].dtype;if(n==="complex64"){let p=r.map(h=>gu({inputs:{input:h},backend:t})),c=r.map(h=>Ap({inputs:{input:h},backend:t})),m=Np(p,e,t),f=Np(c,e,t),d=En({inputs:{real:m,imag:f},backend:t});return p.forEach(h=>t.disposeIntermediateTensorInfo(h)),c.forEach(h=>t.disposeIntermediateTensorInfo(h)),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),d}let o=t.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let p=r.map(x=>{let y=b.sizeFromShape(x.shape.slice(e));return le({inputs:{x},backend:t,attrs:{shape:[-1,y]}})}),c=p.map(x=>({vals:t.readSync(x.dataId),shape:x.shape})),m=I.computeOutShape(p.map(x=>x.shape),1),f=p[0].shape[0]===1,d=WB(c,m,n,f),h=I.computeOutShape(r.map(x=>x.shape),e),g=t.makeTensorInfo(h,n,d);return p.forEach(x=>t.disposeIntermediateTensorInfo(x)),g}if(r.length>$().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let p=Math.floor(r.length/2),c=Np(r.slice(0,p),e,t),m=Np(r.slice(p),e,t),f=Np([c,m],e,t);return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(m),f}if($().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1){let p=new k_(r.map(c=>c.shape),e);return t.runWebGLProgram(p,r,n)}let{tensors2D:s,outShape:i}=Jne(r,e,t),a=new T_(s.map(p=>p.shape)),u=t.runWebGLProgram(a,s,n);s.forEach(p=>t.disposeIntermediateTensorInfo(p));let l=le({inputs:{x:u},attrs:{shape:i},backend:t});return t.disposeIntermediateTensorInfo(u),l}function Jne(r,e,t){let n=I.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>le({inputs:{x:s},attrs:{shape:[-1,b.sizeFromShape(s.shape.slice(e))]},backend:t})),outShape:n}}function I_(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],i=I.computeOutShape(e.map(l=>l.shape),s);if(b.sizeFromShape(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);let a=e.filter(l=>b.sizeFromShape(l.shape)>0);if(a.length===1)return ar({inputs:{x:a[0]},backend:t});let u=a.map(l=>l.shape);return I.assertParamsConsistent(u,s),Np(a,s,t)}var LO={kernelName:ls,backendName:"webgl",kernelFunc:I_};var eg=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.outputShape=e.outShape;let i=e.padInfo.top,a=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,p=e.dilationHeight,c=e.dilationWidth,m=e.filterHeight,f=e.filterWidth,d=Math.floor(e.inChannels/4)*4,h=e.inChannels%4,g=e.dataFormat==="channelsLast",x=g?1:2,y=g?2:3,T=g?3:1,k="",C="";n&&(o?k=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?k=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:k=`
          float activation(float x) {
            ${n}
          }
        `,C="result = activation(result);");let N=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${k}

      const ivec2 strides = ivec2(${u}, ${l});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${T}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${m}; wR++) {
          int xR = xRCorner + wR * ${p};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${c};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${d}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${h===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${d}) *
                    getW(wR, wC, ${d}, d2);
              } else {
                dotProd +=
                    getX(batch, ${d}, xR, xC) *
                    getW(wR, wC, ${d}, d2);
              }

            } else if (${h===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${h===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2),
                getW(wR, wC, ${d} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1),
                  getX(batch, xR, xC, ${d} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC),
                  getX(batch, ${d} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${N}
        ${C}
        setOutput(result);
      }
    `}},C_=class{constructor(e){this.variableNames=["x","W"];this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,o=e.padInfo.left,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,p=e.dilationWidth,c=e.filterDepth,m=e.filterHeight,f=e.filterWidth,d=Math.floor(e.inChannels/4)*4,h=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${i}, ${a});
      const ivec3 pads = ivec3(${t}, ${n}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${c}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${p};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${d}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${h===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${d}) *
                  getW(wF, wR, wC, ${d}, d2);
              } else if (${h===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${h===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1),
                  getX(batch, xF, xR, xC, ${d} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2),
                  getW(wF, wR, wC, ${d} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var v_=class{constructor(e,t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}];this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length);let{dataFormat:n}=t,o=Qt(),s=n==="channelsLast",i=s?0:1,a=s?1:2,u=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,l="";for(let p=0;p<=1;p++)for(let c=0;c<=1;c++)l+=`
          blockIndex = rc.y + ${c};
          pos = rc.x + ${p};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${p*2+c}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${p*2+c}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${o.output} = result;
      }
    `}};function Rx({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let u=r.shape,l=n.texData.get(r.dataId),p=t.inChannels,c=u[0]*u[1]*u[2],m=t.outChannels,f=t.dataFormat==="channelsLast",d=!1,h=!1,g,x=[];if(!((c===1||m===1)&&p>n_)&&l.isPacked&&f&&l.texture!=null&&u[2]%2!=0&&b.arraysEqual(l.shape.slice(-3),u.slice(-3))){let k=u[0]*u[1]*(u[2]+1),C={dataId:r.dataId,shape:[1,k,t.inChannels],dtype:r.dtype},N=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,b.assert(il(l.shape,C.shape),()=>`packed reshape ${l.shape} to ${C.shape} isn't free`);let A=le({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});x.push(A);let M=Sp({a:C,b:A,backend:n,transposeA:d,transposeB:h,bias:o,activation:a,preluActivationWeights:s,leakyreluAlpha:i}),E=n.texData.get(M.dataId);b.assert(E.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=N,E.shape=t.outShape,g=ar({inputs:{x:M},backend:n}),g.shape=t.outShape,x.push(M)}else{let k=f?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],C=le({inputs:{x:r},backend:n,attrs:{shape:[1,k,t.inChannels]}}),N=le({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),A=Sp({a:C,b:N,transposeA:d,transposeB:h,backend:n,bias:o,activation:a,preluActivationWeights:s,leakyreluAlpha:i});g=le({inputs:{x:A},backend:n,attrs:{shape:t.outShape}}),x.push(C),x.push(N),x.push(A)}for(let k of x)n.disposeIntermediateTensorInfo(k);return g}function Lx({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let{filterWidth:u,filterHeight:l,inChannels:p,outWidth:c,outHeight:m,dataFormat:f}=t,d=f==="channelsLast",h=u*l*p,g=m*c,x=[h,g],y=!0,T=!1,k=[],C=le({inputs:{x:r},backend:n,attrs:{shape:r.shape.slice(1)}}),N=le({inputs:{x:e},backend:n,attrs:{shape:[1,h,b.sizeFromShape(e.shape)/h]}});k.push(C),k.push(N);let A=new v_(x,t),M=[C.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],E=n.runWebGLProgram(A,[C],"float32",M),B=le({inputs:{x:E},backend:n,attrs:{shape:[1,x[0],x[1]]}});k.push(E),k.push(B);let W=o!=null,U=s!=null,K=a==="leakyrelu",j=a?ll(a,!0):null,V=new Zh(B.shape,N.shape,[1,g,t.outChannels],y,T,W,j,U,K),q=[B,N];if(o&&q.push(o),U&&q.push(s),K){let oe=n.makeTensorInfo([],"float32",b.createScalarValue(i,"float32"));q.push(oe),k.push(oe)}let ee=n.runWebGLProgram(V,q,"float32"),Z=d?[1,m,c,t.outChannels]:[1,t.outChannels,m,c],te=le({inputs:{x:ee},backend:n,attrs:{shape:Z}});k.push(ee);for(let oe of k)n.disposeIntermediateTensorInfo(oe);return te}function eoe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dataFormat:u,dilations:l,dimRoundingMode:p}=n,c=I.convertConv2DDataFormat(u),m=I.computeConv2DInfo(o.shape,s.shape,i,l,a,p,!1,c),f;if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))f=Rx({x:o,filter:s,convInfo:m,backend:t});else if($().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)f=Lx({x:o,filter:s,convInfo:m,backend:t});else{let h=new eg(m);f=t.runWebGLProgram(h,[o,s],"float32")}let d=le({inputs:{x:f},backend:t,attrs:{shape:m.outShape}});return t.disposeIntermediateTensorInfo(f),d}var BO={kernelName:so,backendName:"webgl",kernelFunc:eoe};var w_=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,i=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${i}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},S_=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,i=e.dataFormat==="channelsLast",a=t-1-e.padInfo.top,u=n-1-e.padInfo.left,l=i?1:2,p=i?2:3,c=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${c}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${p}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},__=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${s};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},A_=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,u=t-1-e.padInfo.front,l=n-1-e.padInfo.top,p=o-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${l}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function toe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,pad:a,dataFormat:u,dimRoundingMode:l,filterShape:p}=n,c=I.convertConv2DDataFormat(u),m=I.computeConv2DInfo(o.shape,p,i,1,a,l,!1,c),f=new w_(m);return t.runWebGLProgram(f,[o,s],"float32")}var $O={kernelName:ec,backendName:"webgl",kernelFunc:toe};function roe(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:i,strides:a,pad:u,dataFormat:l,dimRoundingMode:p}=n,c=I.convertConv2DDataFormat(l),m=I.computeConv2DInfo(i,s.shape,a,1,u,p,!1,c),f=new S_(m);return t.runWebGLProgram(f,[o,s],"float32")}var OO={kernelName:ao,backendName:"webgl",kernelFunc:roe};function noe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u}=n,l=I.computeConv3DInfo(o.shape,s.shape,i,u,a),p=new C_(l);return t.runWebGLProgram(p,[o,s],"float32")}var zO={kernelName:Pu,backendName:"webgl",kernelFunc:noe};function ooe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,pad:a,filterShape:u}=n,l=I.computeConv3DInfo(o.shape,u,i,1,a),p=new __(l);return t.runWebGLProgram(p,[o,s],"float32")}var GO={kernelName:tc,backendName:"webgl",kernelFunc:ooe};function soe(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:i,strides:a,inputShape:u}=n,l=I.computeConv3DInfo(u,s.shape,a,1,i),p=new A_(l);return t.runWebGLProgram(p,[o,s],"float32")}var WO={kernelName:rc,backendName:"webgl",kernelFunc:soe};var aoe=Nx+`
  return cos(x);
`,ioe=Ae({opSnippet:aoe}),UO={kernelName:io,backendName:"webgl",kernelFunc:ioe};var uoe=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,loe=Ae({opSnippet:uoe}),KO={kernelName:uo,backendName:"webgl",kernelFunc:loe};var N_=class{constructor(e,t,n,o,s){this.variableNames=["Image","Boxes","BoxInd"];this.outputShape=[];let[i,a,u,l]=e,[p]=t,[c,m]=n;this.outputShape=[p,c,m,l];let f=o==="bilinear"?1:0,[d,h]=[`${a-1}.0`,`${u-1}.0`],[g,x,y]=c>1?[`${(a-1)/(c-1)}`,"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[T,k,C]=m>1?[`${(u-1)/(m-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${T});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${k};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${d} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${C};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var poe=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:i}=e,{cropSize:a,method:u,extrapolationValue:l}=n,p=new N_(o.shape,s.shape,a,u,l);return t.runWebGLProgram(p,[o,s,i],"float32")},VO={kernelName:Ys,backendName:"webgl",kernelFunc:poe};var Bx=class{constructor(e,t,n){this.variableNames=["x"];this.customUniforms=[{name:"index",type:"float"}];this.outputShape=e;let o=e.length,s=t?"0.0":`getX(${jO(o,"coords")})`,i=e[e.length-1],a="",u="";t?(a=n?`end != ${i-1}`:"end != 0",u=n?"end + 1":"end - 1"):(a=n?`end + pow2 < ${i}`:"end >= pow2",u=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${He(o)} coords = getOutputCoords();
        int end = ${HO(o,"coords")};
        float val = ${s};
        int pow2 = int(pow(2.0, index));
        if (${a}) {
          int idx = ${u};
          ${HO(o,"coords")} = idx;
          val += getX(${jO(o,"coords")});
        }
        setOutput(val);
      }
    `}};function jO(r,e){if(r===1)return`${e}`;if(r===2)return`${e}.x, ${e}.y`;if(r===3)return`${e}.x, ${e}.y, ${e}.z`;if(r===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${r} is not yet supported`)}function HO(r,e){if(r===1)return`${e}`;if(r===2)return`${e}.y`;if(r===3)return`${e}.z`;if(r===4)return`${e}.w`;throw Error(`Cumulative sum for rank ${r} is not yet supported`)}function coe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:i,reverse:a}=n,u=o.shape.length,l=I.getAxesPermutation([s],u),p=o;l!=null&&(p=Ht({inputs:{x:o},backend:t,attrs:{perm:l}}));let c=I.getInnerMostAxes(1,u)[0];if(c!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${o.shape.length-1} but got axis=${s}`);let m=p.shape[c],f=ar({inputs:{x:p},backend:t});for(let d=0;d<=Math.ceil(Math.log2(m))-1;d++){let h=new Bx(p.shape,!1,a),g=[[d]],x=f;f=t.runWebGLProgram(h,[f],f.dtype,g),t.disposeIntermediateTensorInfo(x)}if(i){let d=new Bx(p.shape,i,a),h=f;f=t.runWebGLProgram(d,[f],f.dtype),t.disposeIntermediateTensorInfo(h)}if(l!=null){let d=I.getUndoAxesPermutation(l),h=Ht({inputs:{x:f},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(p),h}return f}var qO={kernelName:Xs,backendName:"webgl",kernelFunc:coe};function moe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:i,binaryOutput:a}=n;if(o.shape.length===1){let u=t.readSync(o.dataId),l=t.readSync(s.dataId),p=vx(u,l,s.dtype,s.shape,i);return t.makeTensorInfo([i],s.dtype,p)}else if(o.shape.length===2){let u=t.bufferSync(o),l=t.bufferSync(s),p=zB(u,l,i,a);return t.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var XO={kernelName:nc,backendName:"webgl",kernelFunc:moe};var D_=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=[];this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function foe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:i}=n,a=o.shape[0],u=i==="NHWC"?o.shape[1]:o.shape[2],l=i==="NHWC"?o.shape[2]:o.shape[3],p=i==="NHWC"?o.shape[3]:o.shape[1],c=u*s,m=l*s,f=p/(s*s),d=i==="NHWC"?[a,c,m,f]:[a,f,c,m],h=new D_(d,s,i);return t.runWebGLProgram(h,[o],o.dtype)}var YO={kernelName:Qs,backendName:"webgl",kernelFunc:foe};var tg=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=e.outShape,this.enableShapeUniforms=Bt(this.outputShape.length);let i=e.filterHeight,a=e.filterWidth,u=e.outChannels/e.inChannels,l="",p="";n&&(o?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,p="result = activation(result);");let c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${c}
        ${p}
        setOutput(result);
      }
    `}};var rg=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=e.outShape,this.enableShapeUniforms=Bt(this.outputShape.length);let i=e.outChannels/e.inChannels,a=e.padInfo.left,u=e.strideWidth,l=e.dilationWidth,p=e.filterHeight,c=e.filterWidth,m=c,f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<c;x++)f+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;f+=`
    for (int r = 0; r < ${p}; r++) {
      `;for(let x=0;x<c;x++)f+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(m+1)/2;x++){let y=x*2;if(f+=`
          xC = xCCorner + ${y*l};
          `,u===1){if(y<c&&(a%2==1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,l===1&&y>0?f+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<c)){let T=a%2==0?b.nearestLargerEven(l):l;l%2==0&&a%2==1||l%2!=0&&a%2!=1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${T};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,l>1&&(f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                      xTexelC${y} = getX(batch, xR, xCOffset, d1);
                      xTexelC${y}Ready = 1;
                    }
                    `),f+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                  `):T===1?f+=`
                    xC${y+1} = xTexelC${y};
                    `:f+=`
                    xCOffset = xC + ${T};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<c&&(a%2==1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<c&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<c&&(f+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<c&&(f+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<c&&(f+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let d="",h="";n&&(o?d=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?d=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:d=`vec4 activation(vec4 x) {
          ${n}
        }`,h="result = activation(result);");let g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${d}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${h}
        setOutput(result);
      }
    `}};function doe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u,dimRoundingMode:l}=n,p=u;p==null&&(p=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let c=I.computeConv2DInfo(o.shape,s.shape,i,p,a,l,!0),m;$().getBool("WEBGL_PACK_DEPTHWISECONV")&&c.strideWidth<=2&&c.outChannels/c.inChannels==1?m=new rg(c):m=new tg(c);let f=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];return t.runWebGLProgram(m,[o,s],"float32",f)}var QO={kernelName:lo,backendName:"webgl",kernelFunc:doe};var P_=class{constructor(e){this.variableNames=["x","dy"];this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},F_=class{constructor(e){this.variableNames=["dy","W"];this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,i=t-1-e.padInfo.top,a=n-1-e.padInfo.left,u=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function hoe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:l,filterShape:p}=n,c=I.computeConv2DInfo(o.shape,p,i,a,u,l,!0),m=new P_(c);return t.runWebGLProgram(m,[o,s],"float32")}var ZO={kernelName:oc,backendName:"webgl",kernelFunc:hoe};function goe(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:l,inputShape:p}=n,c=I.computeConv2DInfo(p,s.shape,i,a,u,l,!0),m=new F_(c);return t.runWebGLProgram(m,[o,s],"float32")}var JO={kernelName:sc,backendName:"webgl",kernelFunc:goe};var M_=class{constructor(e){this.variableNames=["X"];this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function boe(r){let{inputs:e,backend:t}=r,{x:n}=e,o=[...n.shape,...n.shape],s=b.sizeFromShape(n.shape),i=le({inputs:{x:n},backend:t,attrs:{shape:[s]}}),a=new M_(s),u=t.runWebGLProgram(a,[i],i.dtype),l=le({inputs:{x:u},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),l}var ez={kernelName:ac,backendName:"webgl",kernelFunc:boe};var E_=class{constructor(e){this.variableNames=["x","W"];this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:o,strideHeight:s,strideWidth:i,filterHeight:a,filterWidth:u,dilationHeight:l,dilationWidth:p}=e,{top:c,left:m}=o;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${i});
      const ivec2 pads = ivec2(${c}, ${m});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${p};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function yoe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u}=n,l=I.computeDilation2DInfo(o.shape,s.shape,i,a,"NHWC",u),p,c=new E_(l);p=t.runWebGLProgram(c,[o,s],"float32");let m=le({inputs:{x:p},backend:t,attrs:{shape:l.outShape}});return t.disposeIntermediateTensorInfo(p),m}var tz={kernelName:Fu,backendName:"webgl",kernelFunc:yoe};function xoe(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:i,summedDims:a,idDims:u}=I.decodeEinsumEquation(o,s.length);I.checkEinsumDimSizes(i.length,u,s);let{path:l,steps:p}=I.getEinsumComputePath(a,u),c=p.length,m=null,f=i.length,d=[];for(let h=0;h<c;++h){for(let g of p[h]){let{permutationIndices:x,expandDims:y}=I.getEinsumPermutation(f,u[g]),T;I.isIdentityPermutation(x)?T=s[g]:(T=Ht({inputs:{x:s[g]},backend:t,attrs:{perm:x}}),d.push(T));let k=T.shape.slice();for(let C=0;C<y.length;++C)k.splice(y[C],0,1);b.arraysEqual(T.shape,k)||(T=le({inputs:{x:T},backend:t,attrs:{shape:k}}),d.push(T)),m===null?m=T:(m=Jh({inputs:{a:T,b:m},backend:t}),d.push(m))}h<c-1&&(l[h]>=0&&(m=wp({inputs:{x:m},backend:t,attrs:{axis:l[h]-(i.length-f),keepDims:!1}}),d.push(m)),f--)}for(let h of d)h!==m&&t.disposeIntermediateTensorInfo(h);return m}var rz={kernelName:Mu,backendName:"webgl",kernelFunc:xoe};var Toe="return (x >= 0.0) ? x : (exp(x) - 1.0);",koe=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Ioe=Ae({opSnippet:Toe,packedOpSnippet:koe}),nz={kernelName:co,backendName:"webgl",kernelFunc:Ioe};var Coe="return (b >= 1.0) ? a : a * (b + 1.0);",voe=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,woe=r=>{let{inputs:e,backend:t}=r,{dy:n,y:o}=e,s=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new La(voe,n.shape,o.shape):new js(Coe,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],n.dtype)},oz={kernelName:ic,backendName:"webgl",kernelFunc:woe};var Soe=`
  return vec4(equal(a, b));
`,_oe="return float(a == b);",Aoe=mt({opSnippet:_oe,packedOpSnippet:Soe,dtype:"bool",cpuKernelImpl:UB}),sz={kernelName:Zs,backendName:"webgl",kernelFunc:Aoe};var Noe=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${I.ERF_P};
  float a1 = ${I.ERF_A1};
  float a2 = ${I.ERF_A2};
  float a3 = ${I.ERF_A3};
  float a4 = ${I.ERF_A4};
  float a5 = ${I.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Doe=Ae({opSnippet:Noe}),az={kernelName:Di,backendName:"webgl",kernelFunc:Doe};var iz="return exp(x);",R_=Ae({opSnippet:iz,packedOpSnippet:iz,cpuKernelImpl:KB,dtype:"float32"}),uz={kernelName:mo,backendName:"webgl",kernelFunc:R_};function $x(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,i=s.shape.length,a=s.shape.slice(),u=o;return o<0&&(b.assert(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+o+1),a.splice(u,0,1),le({inputs:{x:s},backend:n,attrs:{shape:a}})}var lz={kernelName:ps,backendName:"webgl",kernelFunc:$x};var pz="return exp(x) - 1.0;",Poe=Ae({opSnippet:pz,packedOpSnippet:pz,cpuKernelImpl:VB}),cz={kernelName:Js,backendName:"webgl",kernelFunc:Poe};var Ox=class{constructor(e,t,n){this.variableNames=["real","imag"];let o=t[1];this.outputShape=t;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${o}.0`:"1.0",a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function zx(r,e,t){let n=t.texData.get(r.dataId),o=b.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=o/s,a=le({inputs:{x:r},backend:t,attrs:{shape:[i,s]}}),u=a.shape,l=new Ox("real",u,e),p=new Ox("imag",u,e),c=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:u},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:u}],m=t.runWebGLProgram(l,c,"float32"),f=t.runWebGLProgram(p,c,"float32"),d=En({inputs:{real:m,imag:f},backend:t});t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f);let h=le({inputs:{x:d},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(d),h}function Foe(r){let{inputs:e,backend:t}=r,{input:n}=e;return zx(n,!1,t)}var mz={kernelName:uc,backendName:"webgl",kernelFunc:Foe};var L_=class{constructor(e,t){this.outputShape=[];this.customUniforms=[{name:"value",type:"float"}];this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function bu(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||b.inferDtype(o),s==="string"){let i=b.getArrayFromDType(s,b.sizeFromShape(n));return i.fill(o),e.makeTensorInfo(n,s,i)}else{let i=new L_(n,o),a=[[o]];return e.runWebGLProgram(i,[],s,a)}}var fz={kernelName:Va,backendName:"webgl",kernelFunc:bu};var B_=class{constructor(e){this.variableNames=["Image"];this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var dz={kernelName:ea,backendName:"webgl",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new B_(t.shape);return n.runWebGLProgram(o,[t],t.dtype)}};var hz="return floor(x);",Moe=Ae({opSnippet:hz,packedOpSnippet:hz,cpuKernelImpl:jB}),gz={kernelName:fo,backendName:"webgl",kernelFunc:Moe};var Eoe=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Roe=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Loe=mt({opSnippet:Eoe,packedOpSnippet:Roe,dtype:"int32"}),bz={kernelName:ho,backendName:"webgl",kernelFunc:Loe};var $_=class{constructor(e){this.variableNames=["A"];let t=Qt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var O_=class{constructor(e){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;let t=Qt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}};var yz={kernelName:Cl,backendName:"webgl",kernelFunc:Boe},Bm;function Boe(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n,i=typeof HTMLVideoElement!="undefined"&&o instanceof HTMLVideoElement,a=typeof HTMLImageElement!="undefined"&&o instanceof HTMLImageElement,[u,l]=i?[o.videoWidth,o.videoHeight]:[o.width,o.height],p=[l,u],c=[l,u,s];(a||i)&&(Bm==null&&(Bm=document.createElement("canvas").getContext("2d")),Bm.canvas.width=u,Bm.canvas.height=l,Bm.drawImage(o,0,0,u,l),o=Bm.canvas);let m=t.makeTensorInfo(p,"int32");t.texData.get(m.dataId).usage=Yr.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(m.dataId),o);let f=$().getBool("WEBGL_PACK")?new O_(c):new $_(c),d=t.runWebGLProgram(f,[m],"int32");return t.disposeData(m.dataId),d}function $oe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dataFormat:p,dilations:c,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=I.convertConv2DDataFormat(p),g=I.computeConv2DInfo(o.shape,s.shape,u,c,l,m,!1,h),x,y=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))x=Rx({x:o,filter:s,convInfo:g,backend:t,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:d});else if($().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)x=Lx({x:o,filter:s,convInfo:g,backend:t,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:d});else{let k=i!=null,C=a!=null,N=f==="leakyrelu",A=f?ll(f,!1):null,M=new eg(g,k,A,C,N),E=[o,s];if(i&&E.push(i),a&&E.push(a),N){let B=t.makeTensorInfo([],"float32",b.createScalarValue(d,"float32"));E.push(B),y.push(B)}x=t.runWebGLProgram(M,E,"float32")}let T=le({inputs:{x},backend:t,attrs:{shape:g.outShape}});return y.push(x),y.forEach(k=>t.disposeIntermediateTensorInfo(k)),T}var xz={kernelName:vs,backendName:"webgl",kernelFunc:$oe};function Ooe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dilations:p,dimRoundingMode:c,activation:m,leakyreluAlpha:f}=n,d=[],h=p;h==null&&(h=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(u,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${h}'`);let g=I.computeConv2DInfo(o.shape,s.shape,u,h,l,c,!0),x=$().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,y=m?ll(m,x):null,T=[o,s],k=i!=null,C=a!=null,N=m==="leakyrelu";if(k&&T.push(i),C&&T.push(a),N){let B=t.makeTensorInfo([],"float32",b.createScalarValue(f,"float32"));T.push(B),d.push(B)}let A;x?A=new rg(g,k,y,C,N):A=new tg(g,k,y,C,N);let M=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],E=t.runWebGLProgram(A,T,"float32",M);return d.forEach(B=>t.disposeIntermediateTensorInfo(B)),E}var Tz={kernelName:ws,backendName:"webgl",kernelFunc:Ooe};var z_=class{constructor(e,t,n){this.sliceDim=e;this.strides=t;this.variableNames=["x","indices"];this.outputShape=n;let o=He(t.length),s=He(n.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${this.strides});
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${i};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function zoe(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,i=s[s.length-1],a=b.sizeFromShape(n.shape),[u,l,p,c]=I.prepareAndValidate(n,o),m=le({inputs:{x:o},backend:t,attrs:{shape:[l,i]}}),f=le({inputs:{x:n},backend:t,attrs:{shape:[b.sizeFromShape(n.shape)/p,p]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let x=t.readSync(o.dataId),y=t.bufferSync(n),T=HB(x,y,n.dtype,l,i,p,c,n.shape,a);return t.makeTensorInfo(u,n.dtype,T.values)}let d=new z_(i,c,[l,p]),h=t.runWebGLProgram(d,[f,m],f.dtype),g=le({inputs:{x:h},backend:t,attrs:{shape:u}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),g}var kz={kernelName:ta,backendName:"webgl",kernelFunc:zoe};var G_=class{constructor(e,t){this.variableNames=["A","indices"];this.outputShape=t,this.rank=t.length;let n=He(this.rank),o=Goe(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}};function Goe(r,e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push("int(getIndices(resRC.x, resRC.z))"):n.push(`${t[o]}`);return n.join()}function W_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:i,batchDims:a}=n,u=b.parseAxisParam(i,o.shape)[0],l=t.readSync(s.dataId),p=o.shape[u];for(let k=0;k<l.length;++k){let C=l[k];b.assert(C<=p-1&&C>=0,()=>`GatherV2: the index value ${C} is not in [0, ${p-1}]`)}let c=I.segment_util.collectGatherOpShapeInfo(o,s,u,a),m=b.sizeFromShape(s.shape),f=[],d=le({inputs:{x:o},backend:t,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),h=le({inputs:{x:s},backend:t,attrs:{shape:[c.batchSize,m/c.batchSize]}});f.push(d),f.push(h);let g=[c.batchSize,c.outerSize,m/c.batchSize,c.sliceSize];if(t.shouldExecuteOnCPU([o,s])||o.dtype==="string"){let k=t.bufferSync(h),C=t.bufferSync(d),N=qB(C,k,g);return f.forEach(A=>t.disposeIntermediateTensorInfo(A)),t.makeTensorInfo(c.outputShape,N.dtype,N.values)}let x=new G_(d.shape,g),y=t.runWebGLProgram(x,[d,h],d.dtype);f.push(y);let T=le({inputs:{x:y},backend:t,attrs:{shape:c.outputShape}});return f.forEach(k=>t.disposeIntermediateTensorInfo(k)),T}var Iz={kernelName:cs,backendName:"webgl",kernelFunc:W_};var Woe="return float(a > b);",Uoe=`
  return vec4(greaterThan(a, b));
`,Koe=mt({opSnippet:Woe,packedOpSnippet:Uoe,cpuKernelImpl:XB,dtype:"bool"}),Cz={kernelName:ra,backendName:"webgl",kernelFunc:Koe};var Voe="return float(a >= b);",joe=`
  return vec4(greaterThanEqual(a, b));
`,Hoe=mt({opSnippet:Voe,packedOpSnippet:joe,dtype:"bool",cpuKernelImpl:YB}),vz={kernelName:bo,backendName:"webgl",kernelFunc:Hoe};function qoe(r){let{inputs:e,backend:t}=r,{input:n}=e;return zx(n,!0,t)}var wz={kernelName:lc,backendName:"webgl",kernelFunc:qoe};var Xoe="return float(!isnan(x) && !isinf(x));",Yoe=Ae({opSnippet:Xoe,dtype:"bool"}),Sz={kernelName:Pi,backendName:"webgl",kernelFunc:Yoe};var Qoe="return float(isinf(x));",Zoe=Ae({opSnippet:Qoe,dtype:"bool"}),_z={kernelName:Fi,backendName:"webgl",kernelFunc:Zoe};var Joe="return float(isnan(x));",ese=Ae({opSnippet:Joe,dtype:"bool"}),Az={kernelName:Mi,backendName:"webgl",kernelFunc:ese};var tse="return float(a < b);",rse=`
  return vec4(lessThan(a, b));
`,nse=mt({opSnippet:tse,packedOpSnippet:rse,cpuKernelImpl:QB,dtype:"bool"}),Nz={kernelName:oa,backendName:"webgl",kernelFunc:nse};var ose="return float(a <= b);",sse=`
  return vec4(lessThanEqual(a, b));
`,ase=mt({opSnippet:ose,packedOpSnippet:sse,cpuKernelImpl:ZB,dtype:"bool"}),Dz={kernelName:sa,backendName:"webgl",kernelFunc:ase};function ise(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,i=JB(n,o,s);return e.makeTensorInfo([i.length],"float32",i)}var Pz={kernelName:pc,backendName:"webgl",kernelFunc:ise};var use=`if (x < 0.0) return NAN;
  return log(x);`,lse=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,pse=Ae({opSnippet:use,packedOpSnippet:lse,cpuKernelImpl:e$}),Fz={kernelName:yo,backendName:"webgl",kernelFunc:pse};var cse="return log(1.0 + x);",mse=Ae({opSnippet:cse}),Mz={kernelName:Ei,backendName:"webgl",kernelFunc:mse};var fse="return float(a >= 1.0 && b >= 1.0);",dse=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,hse=mt({opSnippet:fse,packedOpSnippet:dse,dtype:"bool"}),Ez={kernelName:aa,backendName:"webgl",kernelFunc:hse};var gse="return float(!(x >= 1.0));",bse=Ae({opSnippet:gse}),Rz={kernelName:Ri,backendName:"webgl",kernelFunc:bse};var yse="return float(a >= 1.0 || b >= 1.0);",xse=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Tse=mt({opSnippet:yse,packedOpSnippet:xse,dtype:"bool"}),Lz={kernelName:Il,backendName:"webgl",kernelFunc:Tse};var U_=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.outputShape=[];let i=t,a=e[3]-1;this.outputShape=e;let u,l=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${l})`:s===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}};var K_=class{constructor(e,t,n,o,s){this.variableNames=["x"];this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;let i=t,a=e[3]-1;this.outputShape=e;let u,l=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${l})`:s===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}};var kse=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:i,alpha:a,beta:u}=n,l=$().getBool("WEBGL_PACK_NORMALIZATION")?new K_(o.shape,s,i,a,u):new U_(o.shape,s,i,a,u);return t.runWebGLProgram(l,[o],o.dtype)},Bz={kernelName:Ru,backendName:"webgl",kernelFunc:kse};var V_=class{constructor(e,t,n,o,s){this.variableNames=["inputImage","outputImage","dy"];this.outputShape=[];this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=o,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${s})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var Ise=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:i}=e,{depthRadius:a,bias:u,alpha:l,beta:p}=n,c=new V_(o.shape,a,u,l,p);return t.runWebGLProgram(c,[o,s,i],o.dtype)},$z={kernelName:cc,backendName:"webgl",kernelFunc:Ise};function Oz(r,e,t,n){let o=b.sizeFromShape(e),i=b.sizeFromShape(r.shape)/o,a=le({inputs:{x:r},attrs:{shape:[i,o]},backend:n}),u=Qn(a,r.dtype,"max",n),l=le({inputs:{x:u},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),l}function j_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:i}=n,a=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,p=I.getAxesPermutation(l,a),c=p!=null,m=t.shouldExecuteOnCPU([o]),f=o;if(c){if(m){let T=t.texData.get(f.dataId).values,k=new Array(a);for(let A=0;A<k.length;A++)k[A]=o.shape[p[A]];let C=vp(T,o.shape,o.dtype,p,k);f=t.makeTensorInfo(k,o.dtype);let N=t.texData.get(f.dataId);N.values=C}else f=pl(o,p,t);l=I.getInnerMostAxes(l.length,a)}I.assertAxesAreInnerMostDims("max",l,a);let[d,h]=I.computeOutAndReduceShapes(f.shape,l),g=d;i&&(g=I.expandShapeToKeepDim(d,u));let x;if(m){let T=t.texData.get(f.dataId).values,k=t$(T,b.sizeFromShape(h),g,o.dtype);x=t.makeTensorInfo(g,o.dtype);let C=t.texData.get(x.dataId);C.values=k}else x=Oz(f,h,g,t);return c&&t.disposeIntermediateTensorInfo(f),x}var zz={kernelName:xo,backendName:"webgl",kernelFunc:j_};var Cse=Ax+`
  return max(a, b);
`,vse=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+ul+`
  return result;
`,wse=mt({opSnippet:Cse,packedOpSnippet:vse,cpuKernelImpl:r$}),Gz={kernelName:To,backendName:"webgl",kernelFunc:wse};function Sse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;Ma(o,"maxPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,l=1;b.assert(I.eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let p=I.computePool2DInfo(o.shape,s,i,l,a,u);if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))return ar({inputs:{x:o},backend:t});let c=new mi(p,"max",!1);return t.runWebGLProgram(c,[o],o.dtype)}var Wz={kernelName:ko,backendName:"webgl",kernelFunc:Sse};function _se(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dataFormat:u,dimRoundingMode:l}=n,p=[1,1,1],c=I.computePool3DInfo(o.shape,s,i,p,a,l,u),m=new _p(c,"max",!1);return t.runWebGLProgram(m,[o],o.dtype)}var Uz={kernelName:Lu,backendName:"webgl",kernelFunc:_se};var H_=class{constructor(e){this.variableNames=["dy","maxPos"];this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,o=e.dilationHeight,s=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=s-1-e.padInfo.top,u=i-1-e.padInfo.left,l=s*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},q_=class{constructor(e){this.variableNames=["dy","maxPos"];this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,u=e.effectiveFilterDepth,l=e.effectiveFilterHeight,p=e.effectiveFilterWidth,c=u-1-e.padInfo.front,m=l-1-e.padInfo.top,f=p-1-e.padInfo.left,d=u*l*p-1;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${m}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${d} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${p} +
                  wR * ${p} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Ase(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,i=s,{filterSize:a,strides:u,pad:l,dimRoundingMode:p}=n,c=[1,1,1],m=I.computePool3DInfo(i.shape,a,u,c,l,p),f=new _p(m,"max",!0),d=t.runWebGLProgram(f,[i],i.dtype),h=new q_(m),g=t.runWebGLProgram(h,[o,d],i.dtype);return t.disposeIntermediateTensorInfo(d),g}var Kz={kernelName:fc,backendName:"webgl",kernelFunc:Ase};function Nse(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:i}=e,a=s;Ma([s,i],"maxPoolGrad");let{filterSize:u,strides:l,pad:p,dimRoundingMode:c}=n,m=I.computePool2DInfo(a.shape,u,l,1,p,c),f=!0,d=new mi(m,"max",f),h=t.runWebGLProgram(d,[a],a.dtype),g=new H_(m),x=t.runWebGLProgram(g,[o,h],a.dtype);return t.disposeIntermediateTensorInfo(h),x}var Vz={kernelName:mc,backendName:"webgl",kernelFunc:Nse};function jz(r,e,t,n){let o=new mi(t,"max",!1),s=n.runWebGLProgram(o,[r],"float32");o=new mi(t,"max",!0,!0,e);let i=n.runWebGLProgram(o,[r],"float32");return[s,i]}var Hz={kernelName:dc,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:i,includeBatchInIndex:a}=e,u=t;b.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let l=[1,1];b.assert(I.eitherStridesOrDilationsAreOne(s,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`);let p=I.computePool2DInfo(n.shape,o,s,l,i),[c,m]=jz(n,a,p,u);return[c,m]}};function qz(r,e,t,n){let o=b.sizeFromShape(e),i=b.sizeFromShape(r.shape)/o,a=le({inputs:{x:r},attrs:{shape:[i,o]},backend:n}),u=Qn(a,"float32","mean",n),l=le({inputs:{x:u},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),l}var Xz={kernelName:Io,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{keepDims:o,axis:s}=e,i=t,a=n.shape.length,u=b.parseAxisParam(s,n.shape),l=u,p=I.getAxesPermutation(l,a),c=p!=null,m=i.shouldExecuteOnCPU([n]),f=[],d=n;if(c){if(m){let k=i.texData.get(d.dataId).values,C=new Array(a);for(let M=0;M<C.length;M++)C[M]=n.shape[p[M]];let N=vp(k,n.shape,n.dtype,p,C);d=i.makeTensorInfo(C,n.dtype);let A=i.texData.get(d.dataId);A.values=N}else d=pl(n,p,i);f.push(d),l=I.getInnerMostAxes(l.length,a)}I.assertAxesAreInnerMostDims("sum",l,a);let[h,g]=I.computeOutAndReduceShapes(d.shape,l),x=h;o&&(x=I.expandShapeToKeepDim(h,u));let y=qz(d,g,x,i);for(let T of f)i.disposeIntermediateTensorInfo(T);return y}};function Dse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n,a=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,p=I.getAxesPermutation(l,a),c=o;p!=null&&(c=Ht({inputs:{x:o},backend:t,attrs:{perm:p}}),l=I.getInnerMostAxes(l.length,o.shape.length)),I.assertAxesAreInnerMostDims("min",l,a);let[m,f]=I.computeOutAndReduceShapes(c.shape,l),d=b.sizeFromShape(f),h=le({inputs:{x:c},backend:t,attrs:{shape:[-1,d]}}),g=Qn(h,h.dtype,"min",t),x;if(i){let y=I.expandShapeToKeepDim(m,u);x=le({inputs:{x:g},backend:t,attrs:{shape:y}})}else x=le({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),p!=null&&t.disposeIntermediateTensorInfo(c),x}var Yz={kernelName:Co,backendName:"webgl",kernelFunc:Dse};var Pse=Ax+`
  return min(a, b);
`,Fse=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+ul+`
  return result;
`,Mse=mt({opSnippet:Pse,packedOpSnippet:Fse,cpuKernelImpl:n$}),Qz={kernelName:vo,backendName:"webgl",kernelFunc:Mse};var X_=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=t.map((p,c)=>p[0]+e[c]+p[1]);let o=e.length,s=He(o),i=t.map(p=>p[0]).join(","),a=t.map((p,c)=>p[0]+e[c]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),l=n==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${i});
      ${s} end = ${s}(${a});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}};var Y_=class{constructor(e,t,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=t.map((d,h)=>d[0]+e[h]+d[1]);let o=e.length,s=He(o),i=t.map(d=>d[0]).join(","),a=t.map((d,h)=>d[0]+e[h]).join(","),u=sr("rc",o),l=sr("source",o),p=`${u[o-1]} < ${this.outputShape[o-1]}`,c=o===1?"source":`vec2(${l.slice(-2).join()})`,m=n==="reflect"?0:1,f="";if(o===1){let d=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${m};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${m};
        }
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${d}
        result[0] = getChannel(getX(${l.join()}), ${c});
        ${u[o-1]} += 1;
        if(${p}) {
          ${d}
          result[1] = getChannel(getX(${l.join()}), ${c});
        }
      `}else{let d=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${m}) +
                gte * ((end - 1) * 2 - source + ${m});
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${d}
        result[0] = getChannel(getX(${l.join()}), ${c});
        ${u[o-1]} += 1;
        if(${p}) {
          ${d}
          result[1] = getChannel(getX(${l.join()}), ${c});
        }
        rc = outputLoc;
        ${u[o-2]} += 1;
        if(${u[o-2]} < ${this.outputShape[o-2]}) {
          ${d}
          result[2] = getChannel(getX(${l.join()}), ${c});
          ${u[o-1]} += 1;
          if(${p}) {
            ${d}
            result[3] = getChannel(getX(${l.join()}), ${c});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${i});
      const ${s} end = ${s}(${a});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var Ese=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{paddings:o,mode:s}=t,i=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Y_(n.shape,o,s):new X_(n.shape,o,s);return e.runWebGLProgram(i,[n],n.dtype)},Zz={kernelName:wo,backendName:"webgl",kernelFunc:Ese};var Rse=`if (b == 0.0) return NAN;
  return mod(a, b);`,Lse=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+ul+`
  return result;
`,Bse=mt({opSnippet:Rse,packedOpSnippet:Lse}),Jz={kernelName:Li,backendName:"webgl",kernelFunc:Bse};var Q_=class{constructor(e,t,n){this.variableNames=["probs"];this.customUniforms=[{name:"seed",type:"float"}];this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}};var $se=`
if (a == b) {
  return 1.0;
};
return a / b;`,Ose=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,Z_=mt({opSnippet:$se,packedOpSnippet:Ose,checkOutOfBounds:!0}),e3={kernelName:po,backendName:"webgl",kernelFunc:Z_};var t3="return a - b;",J_=mt({opSnippet:t3,packedOpSnippet:t3,supportsComplex:!0,cpuKernelImpl:x$}),r3={kernelName:zo,backendName:"webgl",kernelFunc:J_};function eA(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,i=b.parseAxisParam([s],o.shape),a=j_({inputs:{x:o},backend:t,attrs:{reductionIndices:i,keepDims:!1}}),u=I.expandShapeToKeepDim(a.shape,i),l=le({inputs:{x:a},backend:t,attrs:{shape:u}}),p=J_({inputs:{a:o,b:l},backend:t}),c=R_({inputs:{x:p},backend:t}),m=wp({inputs:{x:c},backend:t,attrs:{axis:i,keepDims:!1}}),f=le({inputs:{x:m},backend:t,attrs:{shape:u}}),d=Z_({inputs:{a:c,b:f},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),d}var n3={kernelName:$o,backendName:"webgl",kernelFunc:eA};function zse(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:i,normalized:a}=n,u=a?o:eA({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),l=u.shape[0],p=u.shape[1],c=new Q_(l,p,s),m=[[i]],f=t.runWebGLProgram(c,[u],"int32",m);return a||t.disposeIntermediateTensorInfo(u),f}var o3={kernelName:hc,backendName:"webgl",kernelFunc:zse};var s3="return -x;";function Gse(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.texData.get(n.dataId),[i,a]=s$(s.values,n.shape,n.dtype);return t.makeTensorInfo(a,n.dtype,i)}let o;return $().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Ra(n.shape,s3):o=new Mn(n.shape,s3),t.runWebGLProgram(o,[n],n.dtype)}var a3={kernelName:ms,backendName:"webgl",kernelFunc:Gse};var Wse=xr.nonMaxSuppressionV3Impl;function Use(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u}=n,l=t.readSync(o.dataId),p=t.readSync(s.dataId),{selectedIndices:c}=Wse(l,p,i,a,u);return t.makeTensorInfo([c.length],"int32",new Int32Array(c))}var i3={kernelName:ua,backendName:"webgl",kernelFunc:Use};var Kse=xr.nonMaxSuppressionV4Impl;function Vse(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:l}=n,p=t.readSync(o.dataId),c=t.readSync(s.dataId),{selectedIndices:m,validOutputs:f}=Kse(p,c,i,a,u,l);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}var u3={kernelName:Bi,backendName:"webgl",kernelFunc:Vse};var jse=xr.nonMaxSuppressionV5Impl;function Hse(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=n,p=t.readSync(o.dataId),c=t.readSync(s.dataId),m=i,f=a,d=u,h=l,{selectedIndices:g,selectedScores:x}=jse(p,c,m,f,d,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}var l3={kernelName:la,backendName:"webgl",kernelFunc:Hse};var tA=class{constructor(e,t,n,o){this.variableNames=["indices"];this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${n}),
                      float(index == coords.y)));
      }
    `}};var qse=r=>{let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:i,offValue:a}=n,u=b.sizeFromShape(o.shape),l=new tA(u,s,i,a),p=le({inputs:{x:o},backend:t,attrs:{shape:[u]}}),c=t.runWebGLProgram(l,[p],o.dtype);t.disposeIntermediateTensorInfo(p);let m=[...o.shape,s],f=le({inputs:{x:c},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(c),f},p3={kernelName:pa,backendName:"webgl",kernelFunc:qse};function ng(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=gu({inputs:{input:n},backend:t}),s=ng({inputs:{x:o},backend:t}),i=Ap({inputs:{input:n},backend:t}),a=ng({inputs:{x:i},backend:t}),u=En({inputs:{real:s,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),u}else return bu({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var c3={kernelName:ks,backendName:"webgl",kernelFunc:ng};function m3(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=gu({inputs:{input:n},backend:t}),s=m3({inputs:{x:o},backend:t}),i=Ap({inputs:{input:n},backend:t}),a=ng({inputs:{x:i},backend:t}),u=En({inputs:{real:s,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),u}else return bu({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var f3={kernelName:fs,backendName:"webgl",kernelFunc:m3};function Xse(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return $x({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,i=e[0].dtype;e.forEach(p=>{b.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),b.assert(i===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],u=e.map(p=>{let c=$x({inputs:{input:p},backend:t,attrs:{dim:o}});return a.push(c),c}),l=I_({inputs:u,backend:t,attrs:{axis:o}});return a.forEach(p=>t.disposeIntermediateTensorInfo(p)),l}var d3={kernelName:ds,backendName:"webgl",kernelFunc:Xse};var rA=class{constructor(e,t,n){this.variableNames=["x"];this.customUniforms=[{name:"value",type:"float"}];this.outputShape=t.map((l,p)=>l[0]+e[p]+l[1]);let o=e.length,s=He(o),i=t.map(l=>l[0]).join(","),a=t.map((l,p)=>l[0]+e[p]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${i});
      ${s} end = ${s}(${a});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}};var nA=class{constructor(e,t,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"value",type:"float"}];this.outputShape=t.map((h,g)=>h[0]+e[g]+h[1]);let o=e.length,s=He(o),i=t.map(h=>h[0]).join(","),a=t.map((h,g)=>h[0]+e[g]).join(","),u=sr("rc",o),l=sr("source",o),p=`${u[o-1]} < ${this.outputShape[o-1]}`,c=o===1?"source":`vec2(${l.slice(-2).join()})`,m=[`${s} rc = outputLoc;`,`${u[o-1]} += 1;
       if(${p}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${u[o-2]} += 1;
       if(${u[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${u[o-1]} += 1;
         if(${p}) {`],f=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",d="";for(let h=0,g=o===1?2:4;h<g;h++)d+=`
        ${m[h]}
        if (${f}) {
          result[${h}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${h}] = getChannel(getX(${l.join()}), ${c});
        }
      `;d+=o===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${i});
      const ${s} end = ${s}(${a});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}};var oA=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:i}=n;if(b.sizeFromShape(o.shape)===0){let l=s.map((p,c)=>p[0]+o.shape[c]+p[1]);return bu({backend:t,attrs:{shape:l,value:i,dtype:o.dtype}})}let a=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nA(o.shape,s,i):new rA(o.shape,s,i),u=[[i]];return t.runWebGLProgram(a,[o],o.dtype,u)},h3={kernelName:_o,backendName:"webgl",kernelFunc:oA};var Yse=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Qse=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+ul+`
  return result;
`,Zse=mt({opSnippet:Yse,packedOpSnippet:Qse}),g3={kernelName:Ao,backendName:"webgl",kernelFunc:Zse};function Jse(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n,a=o.shape.length,u=[],l=b.parseAxisParam(s,o.shape),p=l,c=I.getAxesPermutation(p,a),m=o;c!=null&&(m=Ht({inputs:{x:o},backend:t,attrs:{perm:c}}),p=I.getInnerMostAxes(p.length,a),u.push(m)),I.assertAxesAreInnerMostDims("prod",p,a);let f;if(t.shouldExecuteOnCPU([m])){let d=t.texData.get(m.dataId).values,{outVals:h,outShape:g,outDtype:x}=i$(m.shape,m.dtype,d,p);f=t.makeTensorInfo(g,x,h)}else{let[d,h]=I.computeOutAndReduceShapes(m.shape,p),g=b.sizeFromShape(h),x=le({inputs:{x:m},backend:t,attrs:{shape:[-1,g]}}),y=Ui(o.dtype),T=Qn(x,y,"prod",t);f=le({inputs:{x:T},backend:t,attrs:{shape:d}}),u.push(x),u.push(T)}if(i){u.push(f);let d=I.expandShapeToKeepDim(f.shape,l);f=le({inputs:{x:f},backend:t,attrs:{shape:d}})}return u.forEach(d=>t.disposeIntermediateTensorInfo(d)),f}var b3={kernelName:ca,backendName:"webgl",kernelFunc:Jse};var sA=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:i}=t,a=u$(n,o,s,i);return e.makeTensorInfo([a.length],i,a)},y3={kernelName:ja,backendName:"webgl",kernelFunc:sA};var eae="return 1.0 / x;",tae=Ae({opSnippet:eae}),x3={kernelName:$i,backendName:"webgl",kernelFunc:tae};var rae=Dr+`
  return (x < 0.0) ? 0.0 : x;
`,nae=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,oae=Ae({opSnippet:rae,packedOpSnippet:nae}),T3={kernelName:Do,backendName:"webgl",kernelFunc:oae};var sae=Dr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,aae=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,iae=Ae({opSnippet:sae,packedOpSnippet:aae}),k3={kernelName:Fo,backendName:"webgl",kernelFunc:iae};var aA=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.outputShape=[];let[i,a,u,l]=e;this.outputShape=[i,t,n,l];let p=[o&&t>1?a-1:a,o&&n>1?u-1:u],c=[o&&t>1?t-1:t,o&&n>1?n-1:n],m;s?m="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/c[0]},
          ${p[1]/c[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var iA=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[i,a,u,l]=e;this.outputShape=[i,t,n,l];let p=[o&&t>1?a-1:a,o&&n>1?u-1:u],c=[o&&t>1?t-1:t,o&&n>1?n-1:n],m;s?m="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/c[0]},
          ${p[1]/c[1]},
          ${p[1]/c[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function uae(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:a}=n,[u,l]=a,p=$().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new iA(o.shape,u,l,s,i):new aA(o.shape,u,l,s,i);return t.runWebGLProgram(p,[o],"float32")}var I3={kernelName:Po,backendName:"webgl",kernelFunc:uae};var uA=class{constructor(e,t,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=t;let[,o,s]=t,[,i,a]=e,u=[n&&i>1?o-1:o,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],p=u[0]/l[0],c=u[1]/l[1],m=1/p,f=1/c,d=Math.ceil(m)*2+2,h=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${c});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${d});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function lae(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:i}=n,a=new uA(s.shape,o.shape,i);return t.runWebGLProgram(a,[s],s.dtype)}var C3={kernelName:bc,backendName:"webgl",kernelFunc:lae};var lA=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.outputShape=[];let[i,a,u,l]=e;this.outputShape=[i,t,n,l];let p=[o&&t>1?a-1:a,o&&n>1?u-1:u],c=[o&&t>1?t-1:t,o&&n>1?n-1:n],m=o?"0.5":"0.0",f;s?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/c[0]},
          ${p[1]/c[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var pA=class{constructor(e,t,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[i,a,u,l]=e;this.outputShape=[i,t,n,l];let p=[o&&t>1?a-1:a,o&&n>1?u-1:u],c=[o&&t>1?t-1:t,o&&n>1?n-1:n],m=o?"0.5":"0.0",f;s?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/c[0]},
          ${p[1]/c[1]},
          ${p[1]/c[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function pae(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:a}=n,[u,l]=a,p=$().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new pA(o.shape,u,l,s,i):new lA(o.shape,u,l,s,i);return t.runWebGLProgram(p,[o],o.dtype)}var v3={kernelName:Ha,backendName:"webgl",kernelFunc:pae};var cA=class{constructor(e,t,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=t;let[,o,s]=t,[,i,a]=e,u=[n&&i>1?o-1:o,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],p=u[0]/l[0],c=u[1]/l[1],m=1/p,f=1/c,d=Math.ceil(m)*2+2,h=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${c});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${d});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function cae(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:i}=n,a=new cA(s.shape,o.shape,i);return t.runWebGLProgram(a,[s],s.dtype)}var w3={kernelName:gc,backendName:"webgl",kernelFunc:cae};var mA=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let o=a=>t.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,s=e.map((a,u)=>o(u)).join(","),i=He(n);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var fA=class{constructor(e,t){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let o=sr("rc",n),s=`${o[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${o[n-2]} + 1 < ${this.outputShape[n-2]}`,a=He(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(o.slice())};
          if(${s}){
            result.g = ${l(o.slice())};
          }
          if(${i}) {
            result.b = ${p(o.slice())};
            if(${s}) {
              result.a = ${c(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(d){return m(d)}function l(d){return d[n-1]="("+d[n-1]+" + 1)",m(d)}function p(d){return d[n-2]="("+d[n-2]+" + 1)",m(d)}function c(d){return d[n-1]="("+d[n-1]+" + 1)",d[n-2]="("+d[n-2]+" + 1)",m(d)}function m(d){let h=e.map((y,T)=>f(T,d)),g=h.join(","),x=h.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${x}))`}function f(d,h){return t.indexOf(d)!==-1&&e[d]!==1?`${e[d]} - ${h[d]} - 1`:`${h[d]}`}}};function mae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,i=o.shape.length,a=b.parseAxisParam(s,o.shape);if(i===0)return ar({inputs:{x:o},backend:t});let u=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fA(o.shape,a):new mA(o.shape,a);return t.runWebGLProgram(u,[o],o.dtype)}var S3={kernelName:ma,backendName:"webgl",kernelFunc:mae};var dA=class{constructor(e,t){this.variableNames=["Image"];this.outputShape=[];this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],o=e[2];this.outputShape=e;let s="";typeof t=="number"?s=`float outputValue = ${t.toFixed(2)};`:s=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var _3={kernelName:Ta,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:i}=e,a=t,u=new dA(n.shape,s),[l,p]=I.getImageCenter(i,n.shape[1],n.shape[2]),c=[[l,p,Math.sin(o),Math.cos(o)]];return a.runWebGLProgram(u,[n],n.dtype,c)}};var fae=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,dae=Ae({opSnippet:fae}),A3={kernelName:fa,backendName:"webgl",kernelFunc:dae};var hae="return inversesqrt(x);",gae=Ae({opSnippet:hae,cpuKernelImpl:l$}),N3={kernelName:Mo,backendName:"webgl",kernelFunc:gae};var og=class{constructor(e,t,n,o,s,i,a=!0){this.variableNames=["updates","indices","defaultValue"];this.outputShape=i;let u=He(s.length),l=He(i.length),p="";n===1?p="i":n===2&&(p="i, j");let c=`getIndices(${p})`,m="";o===1?m="i":o===2&&(m="i, coords[1]");let f=`getUpdates(${m})`,d=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${s});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${c});
              flattenedIndex += index * ${d};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function bae(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:i}=n,{sliceRank:a,numUpdates:u,sliceSize:l,strides:p,outputSize:c}=I.calculateShapes(s,o,i),m=[c/l,l];if(c===0)return t.makeTensorInfo(i,o.dtype);let f=le({inputs:{x:o},backend:t,attrs:{shape:[u,a]}}),d=le({inputs:{x:s},backend:t,attrs:{shape:[u,l]}}),h=t.makeTensorInfo([],"float32",new Float32Array([0])),g=new og(u,a,f.shape.length,d.shape.length,p,m),x=t.runWebGLProgram(g,[d,f,h],d.dtype),y=le({inputs:{x},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(h),y}var D3={kernelName:da,backendName:"webgl",kernelFunc:bae};var hA=class{constructor(e,t,n){this.variableNames=["c","a","b"];this.outputShape=t;let o,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",o="resRC";else{let a=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],l=[];for(let p=0;p<t.length;p++)l.push(`${a[p]}`),p<e&&u.push(`${a[p]}`);o=u.join(),s=l.join()}let i=He(n);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function yae(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,i=new hA(n.shape.length,o.shape,o.shape.length);return t.runWebGLProgram(i,[n,o,s],Kt(o.dtype,s.dtype))}var P3={kernelName:gs,backendName:"webgl",kernelFunc:yae};var xae=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${I.SELU_SCALEALPHA};
  float scale = ${I.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Tae=Ae({opSnippet:xae}),F3={kernelName:Oi,backendName:"webgl",kernelFunc:Tae};var M3="return 1.0 / (1.0 + exp(-1.0 * x));",kae=Ae({opSnippet:M3,packedOpSnippet:M3,cpuKernelImpl:p$}),E3={kernelName:Ro,backendName:"webgl",kernelFunc:kae};var Iae=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Cae=Ae({opSnippet:Iae}),R3={kernelName:zi,backendName:"webgl",kernelFunc:Cae};var vae=Nx+`
  return sin(x);
`,wae=Ae({opSnippet:vae}),L3={kernelName:Eo,backendName:"webgl",kernelFunc:wae};var Sae=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,_ae=Ae({opSnippet:Sae}),B3={kernelName:ha,backendName:"webgl",kernelFunc:_ae};var Aae=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Nae=Ae({opSnippet:Aae}),$3={kernelName:Gi,backendName:"webgl",kernelFunc:Nae};var Dae=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:i}=n;b.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let a=s.reduce((x,y)=>x*y),u=[[0,0]];u.push(...i);for(let x=1+s.length;x<o.shape.length;++x)u.push([0,0]);let l=[],p=oA({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),c=I.getReshaped(p.shape,s,a,!1),m=I.getPermuted(c.length,s.length,!1),f=I.getReshapedPermuted(p.shape,s,a,!1),d=le({inputs:{x:p},backend:t,attrs:{shape:c}}),h=Ht({inputs:{x:d},backend:t,attrs:{perm:m}}),g=le({inputs:{x:h},backend:t,attrs:{shape:f}});return l.push(p),l.push(d),l.push(h),l.forEach(x=>t.disposeIntermediateTensorInfo(x)),g},O3={kernelName:ys,backendName:"webgl",kernelFunc:Dae};function Pae(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:i}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let a=t.readSync(n.dataId),u=t.readSync(o.dataId),l=t.readSync(s.dataId),p=t.readSync(i.dataId)[0],[c,m,f,d,h]=m$(a,n.shape,n.dtype,u,o.dtype,l,p);return[t.makeTensorInfo(m,n.dtype,c),t.makeTensorInfo([m[0]],o.dtype,f),t.makeTensorInfo([d.length],"bool",new Uint8Array(d.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var z3={kernelName:yc,backendName:"webgl",kernelFunc:Pae};function Fae(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(t.readSync(o.dataId)),a=t.readSync(n.dataId),u=Array.from(t.readSync(s.dataId)),[l,p,c]=f$(a,n.shape,n.dtype,i,u);return[t.makeTensorInfo(p,n.dtype,l),t.makeTensorInfo([c.length],s.dtype,new Int32Array(c))]}var G3={kernelName:xc,backendName:"webgl",kernelFunc:Fae};function Mae(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=t.readSync(n.dataId),a=t.readSync(o.dataId),u=t.readSync(s.dataId),[l,p]=Sx(i,n.shape,n.dtype,a,u,!0);return t.makeTensorInfo(p,n.dtype,l)}var W3={kernelName:Tc,backendName:"webgl",kernelFunc:Mae};function Eae(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=t.readSync(n.dataId),a=t.readSync(o.dataId),u=t.readSync(s.dataId),[l,p]=Sx(i,n.shape,n.dtype,a,u);return t.makeTensorInfo(p,n.dtype,l)}var U3={kernelName:kc,backendName:"webgl",kernelFunc:Eae};function Rae(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:i}=e,{outputShape:a}=n,{sliceRank:u,numUpdates:l,strides:p,outputSize:c}=I.calculateShapes(s,o,a),m=!1,f=new og(l,u,o.shape.length,s.shape.length,p,[c,1],m),d=t.runWebGLProgram(f,[s,o,i],s.dtype),h=le({inputs:{x:d},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(d),h}var K3={kernelName:$u,backendName:"webgl",kernelFunc:Rae};function Lae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:i}=n,a=b.parseAxisParam(i,o.shape)[0],u=I.prepareSplitSize(o,s,a),l=o.shape.length,p=new Array(l).fill(0),c=o.shape.slice();return u.map(m=>{let f=[...c];f[a]=m;let d=Ba({inputs:{x:o},backend:t,attrs:{begin:p,size:f}});return p[a]+=m,d})}var V3={kernelName:xs,backendName:"webgl",kernelFunc:Lae};var j3="return sqrt(x);",Bae=Ae({opSnippet:j3,packedOpSnippet:j3,cpuKernelImpl:d$}),H3={kernelName:Lo,backendName:"webgl",kernelFunc:Bae};var $ae="return x * x;",Oae=Ae({opSnippet:$ae}),q3={kernelName:qa,backendName:"webgl",kernelFunc:Oae};var X3="return (a - b) * (a - b);",zae=mt({opSnippet:X3,packedOpSnippet:X3}),Y3={kernelName:Oo,backendName:"webgl",kernelFunc:zae};function Gae({inputs:r,attrs:e,backend:t}){let{x:n}=r,o=Dr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,s=new Mn(n.shape,o);return t.runWebGLProgram(s,[n],n.dtype)}var Q3={kernelName:Is,backendName:"webgl",kernelFunc:Gae};var gA=class{constructor(e,t,n){this.variableNames=["x"];this.outputShape=n;let o=n.length,s=He(n.length),i=He(n.length),a="";if(o===1)a="coords * strides + begin";else{let u=0;a=n.map((l,p)=>(u++,n.length===1?`coords * strides[${p}] + begin[${p}]`:`coords[${u-1}] * strides[${p}] + begin[${p}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${e});
      ${s} strides = ${s}(${t});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}};function Wae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:i,strides:a,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:c,shrinkAxisMask:m}=n,{finalShapeSparse:f,finalShape:d,isIdentity:h,sliceDim0:g,isSimpleSlice:x,begin:y,end:T,strides:k}=kt.sliceInfo(o.shape,s,i,a,u,l,p,c,m),C;if(h)C=le({inputs:{x:o},backend:t,attrs:{shape:d}});else if(g||x){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let A=kt.computeOutShape(y,T,k),M=Ba({inputs:{x:o},backend:t,attrs:{begin:y,size:A}});C=le({inputs:{x:M},backend:t,attrs:{shape:d}}),t.disposeIntermediateTensorInfo(M)}else if(t.shouldExecuteOnCPU([o])){let M=t.readSync(o.dataId),E=Ce(o.shape,o.dtype,M),B=h$(f,E,k,y);C=t.makeTensorInfo(d,o.dtype,B.values)}else{let M=new gA(y,k,f);C=t.runWebGLProgram(M,[o],o.dtype)}let N=le({inputs:{x:C},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(C),N}var Z3={kernelName:ga,backendName:"webgl",kernelFunc:Wae};function Uae(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:i,rightPad:a,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:c}=e,m=t.readSync(p.dataId),f=t.readSync(c.dataId),[d,h]=g$(m,f,o,s,i,a,u,l);return[t.makeTensorInfo([d.length],"string",d),t.makeTensorInfo(c.shape,"int32",h)]}var J3={kernelName:Ou,backendName:"webgl",kernelFunc:Uae};function Kae(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:i}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let a=t.readSync(s.dataId),u=t.readSync(i.dataId)[0],[l,p,c]=b$(a,u,o),m=p.length;return[t.makeTensorInfo([m,2],"int32",l),t.makeTensorInfo([m],"string",p),t.makeTensorInfo([2],"int32",new Int32Array(c))]}var eG={kernelName:Ic,backendName:"webgl",kernelFunc:Kae};function Vae(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let i=t.readSync(s.dataId),a=y$(i,o);return t.makeTensorInfo(s.shape,"int32",a)}var tG={kernelName:Cc,backendName:"webgl",kernelFunc:Vae};var jae="return tan(x);",Hae=Ae({opSnippet:jae}),rG={kernelName:ba,backendName:"webgl",kernelFunc:Hae};var qae=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Xae=Ae({opSnippet:qae}),nG={kernelName:Go,backendName:"webgl",kernelFunc:Xae};var bA=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[i]*t[i];this.outputShape=n,this.rank=n.length;let o=He(this.rank),s=Yae(e);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function Yae(r){let e=r.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${r[0]})`;let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let o=0;o<r.length;o++)n.push(`imod(${t[o]}, ${r[o]})`);return n.join()}function yA(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(o.dtype==="string"||o.shape.length>5){let u=t.readSync(o.dataId),l=o.dtype==="string"?u.map(m=>b.decodeString(m)):u,p=Ce(o.shape,o.dtype,l),c=T$(p,s);return t.makeTensorInfo(c.shape,c.dtype,c.values)}let i=new bA(o.shape,s);return t.runWebGLProgram(i,[o],o.dtype)}var oG={kernelName:vn,backendName:"webgl",kernelFunc:yA};var xA=class{constructor(e){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}];this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},TA=class{constructor(e){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}];this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Dp(r,e){e!==null&&r.disposeIntermediateTensorInfo(e)}function sG(r){let e=1;for(;e<r;)e*=2;return e}function Qae(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:i}=n,a=$().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=$().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=o.shape,p=l[l.length-1];if(t.shouldExecuteOnCPU([o])||p<a||s>u){let B=t.readSync(o.dataId),[W,U]=k$(B,l,o.dtype,s,i);return[t.makeTensorInfo(W.shape,W.dtype,W.values),t.makeTensorInfo(U.shape,U.dtype,U.values)]}if(s===0)return l[l.length-1]=0,[t.makeTensorInfo(l,o.dtype,[]),t.makeTensorInfo(l,"int32",[])];if(p===1)return[o,bu({attrs:{shape:l,dtype:"int32",value:0},backend:t})];let c=t.texData.get(o.dataId),m=c!==null&&c.isPacked,f=m?t.unpackTensor(o):o,h=b.sizeFromShape(l)/p,g=le({inputs:{x:f},attrs:{shape:[h,p]},backend:t});m&&Dp(t,f);let x=sG(s),y=sG(p),T=null,k=()=>T===null?[g,g]:[g,T],C=(B,W,U)=>{let K=k(),j=new xA(U),q=[[p],[T===null?1:0],[Number.NEGATIVE_INFINITY],[B],[W]],ee=T;T=t.runWebGLProgram(j,K,"int32",q),Dp(t,ee)};for(let B=1;B<x;B*=2){let W=B*2;for(let U=B;U>=1;U/=2)C(W,U,[h,y])}for(let B=y;B>x;B/=2){let W=k(),U=new TA([h,B/2]),j=[[p],[T===null?1:0],[x]],V=T;T=t.runWebGLProgram(U,W,"int32",j),Dp(t,V);let q=x/2,ee=q*2;for(let Z=q;Z>=1;Z/=2)C(ee,Z,T.shape)}let N=T;T=Ba({inputs:{x:T},backend:t,attrs:{begin:0,size:[h,s]}}),Dp(t,N);let A=W_({inputs:{x:g,indices:T},backend:t,attrs:{axis:1,batchDims:1}});Dp(t,g);let M=l.slice(0,-1);M.push(s),N=T,T=le({inputs:{x:T},attrs:{shape:M},backend:t}),Dp(t,N);let E=A;return A=le({inputs:{x:A},attrs:{shape:M},backend:t}),Dp(t,E),[A,T]}var aG={kernelName:ya,backendName:"webgl",kernelFunc:Qae};var kA=class{constructor(e,t,n,o,s,i){this.variableNames=["Image","Transforms"];this.outputShape=i;let a=n==="nearest"?1:2,u;switch(o){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Zae(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:i,fillMode:a,fillValue:u,outputShape:l}=n,[p,c,m,f]=o.shape,[d,h]=l??[c,m],g=[p,d,h,f],x=new kA(c,m,i,a,u,g);return t.runWebGLProgram(x,[o,s],"float32")}var iG={kernelName:xa,backendName:"webgl",kernelFunc:Zae};function Jae(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;Ma(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=n.readSync(s.dataId),{outputValues:a,outputShape:u,indices:l}=I$(i,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,a),n.makeTensorInfo([l.length],"int32",l)]}var uG={kernelName:vc,backendName:"webgl",kernelFunc:Jae};function eie(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let i=o,a=i.shape.length,u=o.shape[s],l=new Array(a-1),p=0;for(let h=0;h<a;h++)h!==s&&(l[p++]=i.shape[h]);let c=[],m=new Array(a).fill(0),f=i.shape.slice();f[s]=1;let d=new Array(u);for(let h=0;h<d.length;h++){m[s]=h;let g=Ba({inputs:{x:i},backend:t,attrs:{begin:m,size:f}}),x=le({inputs:{x:g},backend:t,attrs:{shape:l}});d[h]=x,c.push(g)}return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),d}var lG={kernelName:Ts,backendName:"webgl",kernelFunc:eie};var IA=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,o=e.batchSize,s=e.inSize,i=e.numSegments,a=i*Math.ceil(s/n);this.outputShape=[o,a];let u="0.0",l="sumValue",p=Math.floor(n/4)*4,c=n%4,m=`
        sumValue += dot(values, segFilter);
    `,f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${d}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${m}
        }

        int inIdx = inOffset + ${p};
        if (${c===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${m}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${m}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${m}
        }
        setOutput(${l});
      }
    `}};function tie(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:i}=n,a=o.shape.length,u=[],l=0,p=I.getAxesPermutation([l],a),c=o;p!=null&&(c=Ht({inputs:{x:o},backend:t,attrs:{perm:p}}),u.push(c),l=I.getInnerMostAxes(1,a)[0]);let m=I.segment_util.computeOutShape(c.shape,l,i),f=b.sizeFromShape([c.shape[l]]),d=le({inputs:{x:c},backend:t,attrs:{shape:[-1,f]}});u.push(d);let h=Ui(o.dtype),g=(k,C,N,A,M)=>{let E=k.shape[0],B=k.shape[1],W=I.segment_util.segOpComputeOptimalWindowSize(B,M),U={windowSize:W,inSize:B,batchSize:E,numSegments:M},K=new IA(U,C),j=t.compileAndRun(K,[k,N],A);if(u.push(j),j.shape[1]===M)return j;let V=sA({backend:t,attrs:{start:0,stop:M,step:1,dtype:"float32"}}),q=yA({inputs:{x:V},backend:t,attrs:{reps:[B/W]}});return u.push(V),u.push(q),g(j,C,q,A,M)},x=g(d,"unsortedSegmentSum",s,h,i),y=le({inputs:{x},backend:t,attrs:{shape:m}}),T=y;if(p!=null){u.push(y);let k=I.getUndoAxesPermutation(p);T=Ht({inputs:{x:T},backend:t,attrs:{perm:k}})}return u.forEach(k=>t.disposeIntermediateTensorInfo(k)),T}var pG={kernelName:zu,backendName:"webgl",kernelFunc:tie};var rie=[Bz,$z,Q$,J$,eO,tO,nO,oO,sO,aO,lO,pO,cO,mO,dO,fO,hO,bO,gO,yO,xO,TO,kO,CO,vO,wO,NO,PO,FO,EO,O$,LO,$O,OO,BO,GO,WO,zO,UO,KO,VO,qO,XO,YO,ZO,JO,QO,ez,tz,rz,nz,oz,sz,az,uz,lz,cz,mz,fz,dz,gz,bz,yz,xz,Tz,kz,Iz,Cz,vz,$$,wz,RO,Sz,_z,Az,z$,Nz,Dz,Pz,Mz,Fz,Ez,Rz,Lz,zz,Uz,Wz,Kz,Vz,Hz,Gz,Xz,Yz,Qz,Zz,Jz,o3,V$,a3,i3,u3,l3,SO,p3,f3,d3,h3,g3,G$,b3,y3,_O,e3,x3,k3,T3,H$,I3,C3,v3,w3,S3,_3,A3,N3,D3,P3,F3,E3,R3,L3,B3,IO,n3,$3,O3,z3,G3,W3,U3,K3,V3,H3,q3,Y3,Q3,Z3,J3,eG,tG,r3,X$,rG,nG,oG,aG,iG,Y$,uG,lG,pG,c3];for(let r of rie)Wi(r);var fi=$();fi.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);fi.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);fi.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);fi.registerFlag("WEBGPU_USE_NAIVE_CONV2D",()=>!1);fi.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);fi.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);fi.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);fi.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);fi.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);fi.registerFlag("WEBGPU_USE_IMPORT",()=>!1);function cG(r,e){if(Math.max(...r)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let t=r.length,n=r.map(s=>`${e}[${s}]`),o=new Array(t-1);o[t-2]=n[t-1];for(let s=t-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function Zt(r){if(r<=1)return"i32";if(r===2)return"vec2<i32>";if(r===3)return"vec3<i32>";if(r===4)return"vec4<i32>";throw Error(`GPU for rank ${r} is not yet supported`)}function Gx(r,e){return r==="float32"?e?"vec4<f32>":"f32":r==="int32"||r==="bool"?e?"vec4<i32>":"i32":r}function $m(){return`
  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]
`}function sg(){return`
  ${$m()}
  fn main([[builtin(local_invocation_id)]] localId : vec3<u32>,
          [[builtin(global_invocation_id)]] globalId : vec3<u32>,
          [[builtin(num_workgroups)]] numWorkgroups: vec3<u32>)
`}function di(){return`
  ${$m()}
  fn main([[builtin(local_invocation_id)]] localId : vec3<u32>,
          [[builtin(global_invocation_id)]] globalId : vec3<u32>)
`}function ve(){return`
    ${sg()} {
      let index = getGlobalIndex(globalId, localId, numWorkgroups);
`}function mG(r,e,t,n=!1){let o=`
    let workGroupSizeX = ${t.workGroupSize[0]}u;
    let workGroupSizeY = ${t.workGroupSize[1]}u;
    let workGroupSizeZ = ${t.workGroupSize[2]}u;`;if(n===!0){let f=hG(e.shape),d=`
      [[block]] struct Matrix0 {
        numbers: array<${Gx(e.dtype,t.isVec4)}>;
      };
      [[block]] struct Uniform {
        size            : i32;
        numChannels     : i32;
        outShapeStrides : vec2<i32>;
        dispatchSize    : vec3<u32>;
      };

      [[group(0), binding(0)]] var<storage, write> result : Matrix0;
      [[group(0), binding(2)]] var<uniform> uniforms: Uniform;
    `;return[fG,d,o,dG,f,t.getUserCode()].join(`
`)}let s=[],i="[[block]] struct Uniforms { NAN : f32; ";t.variableNames.forEach((f,d)=>{i+=`${f.charAt(0).toLowerCase()+f.slice(1)}Shape : ${Zt(r[d].shape.length)}; `}),i+=`outShape : ${Zt(e.shape.length)} ; `;let a=e.shape.length-1;i+=`
       outShapeStrides: ${Zt(a)}; `,t.size&&(i+="size : i32; "),t.uniforms&&(i+=t.uniforms),i+="};",s.push(i),t.atomic?s.push(`
    [[block]] struct Matrix0 {
        numbers: array<atomic<i32>>;
    };

    [[group(0), binding(0)]] var<storage, read_write> result : Matrix0;
  `):s.push(`
    [[block]] struct Matrix0 {
        numbers: array<${Gx(e.dtype,t.isVec4)}>;
    };

    [[group(0), binding(0)]] var<storage, write> result : Matrix0;
  `),t.variableNames.forEach((f,d)=>{s.push(`
    [[block]] struct Matrix${1+d} {
      numbers: array<${Gx(r[d].dtype,t.isVec4)}>;
    };
    [[group(0), binding(${1+d})]] var<storage, read> ${f} : Matrix${1+d};
    `)}),i!==""&&s.push(`
    [[group(0), binding(${1+t.variableNames.length})]] var<uniform> uniforms : Uniforms;
    `),s.push(o);let[u,l]=uie(e.shape,t.dispatchLayout),p=hG(e.shape),c=[fG,s.join(`
`),dG,p,u,nie(e.shape.length)];if(t.atomic||c.push(oie(e.shape,e.dtype,t.isVec4)),l===e.shape.length){let f=r.map(d=>sie(d,e.shape,t.isVec4,t.dispatchLayout.x.length===e.shape.length)).join(`
`);c.push(f)}return c.push(t.getUserCode()),c.join(`
`)}var fG=`
  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  fn isNanCustom(val : f32) -> bool {
    if (val > 0.0) {
      return false;
    }
    if (val < 0.0) {
      return false;
    }
    if (val == 0.0) {
      return false;
    }
    return true;
  }

  fn isNanCustomVec4F32(val : vec4<f32>) -> vec4<f32> {
    var res = vec4<f32> (0.0);
    for (var i = 0u; i < 4u; i = i + 1u) {
      if (isNanCustom(val[i])) {
        res[i] = 1.0;
      } else {
        res[i] = 0.0;
      }
    }
    return res;
  }

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) &&
        all(coord < shape);
  }

  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) &&
        all(coord < shape);
  }

  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) &&
        all(coord < shape);
  }
  `,dG=`
  fn getFlatIndex1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }

  fn getFlatIndex2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return i32(dot(vec2<f32>(coords), vec2<f32>(f32(shape.y), 1.0)));
  }

  fn getFlatIndex3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return i32(dot(vec3<f32>(coords), vec3<f32>(f32(shape.y) * f32(shape.z), f32(shape.z), 1.0)));
  }

  fn getFlatIndex4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return i32(dot(vec4<f32>(coords), vec4<f32>(
        f32(shape.y) * f32(shape.z) * f32(shape.w), f32(shape.z) * f32(shape.w), f32(shape.w), 1.0)));
  }

  // Only used when the y/z dimension of workgroup size is 1.
  fn getGlobalIndex(globalId : vec3<u32>, localId : vec3<u32>, numWorkgroups: vec3<u32>) -> i32 {
    if (numWorkgroups.y == 1u && numWorkgroups.z == 1u) {
      return i32(globalId.x);
    }

    let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
        localId.y * workGroupSizeX + localId.x;
    let workGroupID = (globalId - localId)/vec3<u32>(
        workGroupSizeX, workGroupSizeY, workGroupSizeZ);

    return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
      workGroupID.y * numWorkgroups.x + workGroupID.x) *
      (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
      localInvocationIndex);
  }
`;function nie(r){let e="";switch(r){case 0:case 1:e+=`
        fn getOutputFlatIndex(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputFlatIndex(coords : vec2<i32>) -> i32 {
          return i32(dot(vec2<f32>(coords), vec2<f32>(f32(uniforms.outShapeStrides), 1.0)));
        }
        `;break;case 3:e+=`
        fn getOutputFlatIndex(coords : vec3<i32>) -> i32 {
          return i32(dot(vec3<f32>(coords), vec3<f32>(f32(uniforms.outShapeStrides.x), f32(uniforms.outShapeStrides.y), 1.0)));
        }
        `;break;case 4:e+=`
        fn getOutputFlatIndex(coords : vec4<i32>) -> i32 {
          return i32(dot(vec4<f32>(coords), vec4<f32>(
            f32(uniforms.outShapeStrides.x), f32(uniforms.outShapeStrides.y), f32(uniforms.outShapeStrides.z), 1.0)));
        }
        `;break;default:b.assert(!1,()=>`Unsupported ${r}D shape`);break}return e}function oie(r,e,t){let n=r.length,o=Gx(e,t),s;if(t?s=`fn setOutputFlat(flatIndex : i32, value : vec4<f32>) {
      result.numbers[flatIndex] = ${o}(value);
    }
    fn setOutputFlatI32(flatIndex : i32, value : vec4<i32>) {
      result.numbers[flatIndex] = ${o}(value);
    }`:s=`fn setOutputFlat(flatIndex : i32, value : f32) {
      result.numbers[flatIndex] = ${o}(value);
    }
    fn setOutputFlatI32(flatIndex : i32, value : i32) {
      result.numbers[flatIndex] = ${o}(value);
    }`,n>=2){let i=["d0","d1","d2","d3"].slice(0,n),a=Zt(n);t?s+=`
      fn setOutput(${i.map(u=>`${u} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputFlatIndex(${a}(${i.join(", ")}));
        setOutputFlat(flatIndex / 4, value);
      }
      fn setOutputI32(${i.map(u=>`${u} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputFlatIndex(${a}(${i.join(", ")}));
        setOutputFlatI32(flatIndex / 4, value);
      }
    `:s+=`
      fn setOutput(${i.map(u=>`${u} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputFlatIndex(${a}(${i.join(", ")}));
        setOutputFlat(flatIndex, value);
      }
      fn setOutputI32(${i.map(u=>`${u} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputFlatIndex(${a}(${i.join(", ")}));
        setOutputFlatI32(flatIndex, value);
      }
    `}return s}function sie(r,e,t,n){let o=aie(r,t);return r.shape.length<=e.length&&(o+=iie(r,e,t,n)),o}function aie(r,e){let t=r.name,n=r.shape.length,o=Zt(n),s="get"+t.charAt(0).toUpperCase()+t.slice(1),i=["d0","d1","d2","d3"].slice(0,n),a=i.map(p=>`${p} : i32`).join(", ");if(n<1)return e?`
        fn ${s}() -> vec4<f32> {
          return vec4<f32>(${t}.numbers[0]);
        }
      `:`
      fn ${s}() ->f32 {
        return f32(${t}.numbers[0]);
      }
    `;let u=`uniforms.${t.charAt(0).toLowerCase()+t.slice(1)}Shape`,l=`${n}D`;return n===0&&(l="1D"),e?`
      fn ${s}(${a}) -> vec4<f32> {
        return vec4<f32>(${t}.numbers[getFlatIndex${l}(${o}(${i.join(",")}),
          ${u}) / 4]);
      }
      `:`
    fn ${s}(${a}) -> f32 {
      return f32(${t}.numbers[getFlatIndex${l}(${o}(${i.join(",")}),
        ${u})]);
    }
   `}function iie(r,e,t,n){let o=r.name,s=o.charAt(0).toUpperCase()+o.slice(1),i="get"+s+"AtOutCoords",a=r.shape.length,u=e.length,l=Zt(u);if(b.arraysEqual(r.shape,e)&&n)return t?`
        fn ${i}ByGlobalIndex(globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${o}.numbers[globalIndex]);
        }

        fn ${i}ByCoords(coords : ${l}) -> vec4<f32> {
          return vec4<f32>(${o}.numbers[${u>1?"getOutputFlatIndex(coords)":"coords"} / 4]);
        }
        `:`
      fn ${i}ByGlobalIndex(globalIndex : i32) -> f32 {
        return f32(${o}.numbers[globalIndex]);
      }

      fn ${i}ByCoords(coords : ${l}) -> f32 {
        return f32(${o}.numbers[${u>1?"getOutputFlatIndex(coords)":"coords"}]);
      }
      `;let p=I.getBroadcastDims(r.shape,e),c=u-a,m="";if(a===0)return t?`
      fn ${i}ByGlobalIndex(globalIndex : i32) -> vec4<f32> {
        return get${s}();
      }

      fn ${i}ByCoords(coords : ${l}) -> vec4<f32> {
        return get${s}();
      }
    `:`
      fn ${i}ByGlobalIndex(globalIndex : i32) -> f32{
        return get${s}();
      }

      fn ${i}ByCoords(coords : ${l}) -> f32{
        return get${s}();
      }
    `;u<2&&p.length>=1?m="coords = 0;":m=p.map(g=>`coords[${g+c}] = 0;`).join(`
`);let f="";if(u<2&&a>0)f="coords";else if(u>1){let g=Zt(a),x=r.shape.map((y,T)=>`coords[${T+c}]`).join(", ");f=`${g}(${x})`}else f="coords";let d=`uniforms.${o.charAt(0).toLowerCase()+o.slice(1)}Shape`,h=`${a}D`;return t?`
      fn ${i}ByGlobalIndex(globalIndex : i32) -> vec4<f32> {
        var coords = getCoordsFromFlatIndex(globalIndex);
        ${m}
        return ${o}.numbers[getFlatIndex${h}(${f}, ${d}) / 4];
      }

      fn ${i}ByCoords(coordsIn : ${l}) -> vec4<f32> {
        var coords = coordsIn;
        ${m}
        return ${o}.numbers[getFlatIndex${h}(${f}, ${d}) / 4];
      }
    `:`
    fn ${i}ByGlobalIndex(globalIndex : i32) -> f32 {
      var coords = getCoordsFromFlatIndex(globalIndex);
      ${m}
      return f32(${o}.numbers[getFlatIndex${h}(${f}, ${d})]);
    }

    fn ${i}ByCoords(coordsIn : ${l}) -> f32 {
      var coords = coordsIn;
      ${m}
      return f32(${o}.numbers[getFlatIndex${h}(${f}, ${d})]);
    }
  `}function uie(r,e){let{x:t,y:n=[],z:o=[]}=e,s=r.length;if(t.length===s)return[`fn getOutputCoordsWithFlatDispatchLayout(globalId : vec3<u32>, localId : vec3<u32>, numWorkgroups: vec3<u32>) -> ${Zt(s)}{
      let globalIndex = getGlobalIndex(globalId, localId, numWorkgroups);
      return getCoordsFromFlatIndex(globalIndex);
    }
    `,s];let i="",a=[t,n,o],u=0;for(let m=0;m<a.length;m++){let f=a[m];if(f.length!==0)if(u+=f.length,f.length===1)i+=`let d${f[0]} = i32(globalId[${m}]);`;else{let d=cG(f,"uniforms.outShape");i+=`var index${m} = i32(globalId[${m}]);`;for(let h=0;h<d.length;h++)i+=`let d${f[h]} = index${m} / ${d[h]};`,h===d.length-1?i+=`let d${f[h+1]} = index${m} - d${f[h]} * ${d[h]};`:i+=`index${m} = index${m} - d${f[h]} * ${d[h]};`}}let l=[];for(let m=0;m<u;m++)l.push(`d${m}`);let p=Zt(u),c=`fn getOutputCoordsWithNonFlatDispatchLayout(globalId : vec3<u32>) -> ${p} {
    ${i}
  `;return l.length===0?c+=`return ${p}(0); }`:c+=`return ${p}(${l.join(",")}); }`,[c,u]}function hG(r){let e=r.length;if(e<=1)return"fn getCoordsFromFlatIndex(index : i32) -> i32 { return index; }";let t=b.computeStrides(r),n=Zt(e),o=[];for(let i=0;i<e;i++)o.push(`d${i}`);if(t.length===1)return`    fn getCoordsFromFlatIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let s="var index2 = index;"+t.map((i,a)=>{let u=`let ${o[a]} = index2 / uniforms.outShapeStrides[${a}]`,l=a===t.length-1?`let ${o[a+1]} = index2 - ${o[a]} * uniforms.outShapeStrides[${a}]`:`index2 = index2 - ${o[a]} * uniforms.outShapeStrides[${a}]`;return`${u}; ${l};`}).join("");return`
    fn getCoordsFromFlatIndex(index : i32) -> ${n} {
      ${s}
      return ${n}(${o.join(",")});
    }
  `}var vA={};Ye(vA,{ArrayBufferToTypedArray:()=>CA,GPUBytesPerElement:()=>Wx,computeDispatch:()=>fe,computeWorkGroupSizeForConv2d:()=>ag,computeWorkGroupSizeForMatMul:()=>ig,computeWorkPerThreadForConv2d:()=>ug,flatDispatchLayout:()=>Ie,isWebGPUSupported:()=>lg,tilesFitEvenlyIntoShape:()=>Zo});var Pp=65535;var Fp=r=>{let e=1;for(let t=0;t<r.length;t++)e*=r[t];return e};function Zo(r,e){if(r.length!==e.length)throw new Error(`Cannot compute whether rank ${r.length} tiles fit evenly into rank ${e.length} shape - ranks must match.`);return e.every((t,n)=>t%r[n]==0)}function fe(r,e,t=[1,1,1],n=[1,1,1]){let[o,s,i]=[Math.ceil(Fp(r.x.map(u=>e[u]))/(t[0]*n[0])),r.y?Math.ceil(Fp(r.y.map(u=>e[u]))/(t[1]*n[1])):1,r.z?Math.ceil(Fp(r.z.map(u=>e[u]))/(t[2]*n[2])):1];if(o<=Pp&&s<=Pp&&i<=Pp)return[o,s,i];b.assert(o>Pp&&r.y===void 0&&r.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let a=Math.ceil(Math.sqrt(o));return a>Pp?(a=Math.ceil(Math.cbrt(o)),b.assert(a<=Pp,()=>"Total dispatch size exceeds WebGPU maximum."),[a,a,a]):[a,a,1]}function ag(r,e){let t=Fp(r.x.map(o=>e[o])),n=Fp(r.y.map(o=>e[o]));return t<=4?[4,16,1]:n<=4?[16,4,1]:[16,16,1]}function ig(r,e,t){return r===1?[32,1,1]:t===1?[1,32,1]:[8,8,1]}function ug(r,e){let t=Fp(r.x.map(o=>e[o])),n=Fp(r.y.map(o=>e[o]));return t<=4?[1,2,1]:n<=4?[2,1,1]:[2,2,1]}function Ie(r){return{x:r.map((e,t)=>t)}}function Wx(r){if(r==="float32"||r==="int32"||r==="bool"||r==="string")return 4;if(r==="complex64")return 8;throw new Error(`Unknown dtype ${r}`)}function CA(r,e){if(e==="float32")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"||e==="string"){let t=new Int32Array(r),n=new ArrayBuffer(t.length),o=new Uint8Array(n);for(let s=0;s<t.length;s++)o[s]=t[s];return o}else throw new Error(`Unknown dtype ${e}`)}function lg(){return!!navigator.gpu}var Re;(function(T){T[T.MUL=0]="MUL",T[T.ADD=1]="ADD",T[T.SUB=2]="SUB",T[T.DIV=3]="DIV",T[T.EQUAL=4]="EQUAL",T[T.GREATER=5]="GREATER",T[T.GREATER_EQUAL=6]="GREATER_EQUAL",T[T.LESS=7]="LESS",T[T.LESS_EQUAL=8]="LESS_EQUAL",T[T.LOGICAL_AND=9]="LOGICAL_AND",T[T.NOT_EQUAL=10]="NOT_EQUAL",T[T.SQUARED_DIFFERENCE=11]="SQUARED_DIFFERENCE",T[T.INT_DIV=12]="INT_DIV",T[T.POW=13]="POW",T[T.PRELU=14]="PRELU",T[T.MAX=15]="MAX",T[T.MIN=16]="MIN",T[T.COMPLEX_MULTIPLY_REAL=17]="COMPLEX_MULTIPLY_REAL",T[T.COMPLEX_MULTIPLY_IMAG=18]="COMPLEX_MULTIPLY_IMAG"})(Re||(Re={}));var lie="return a + b;",pie="return areal * breal - aimag * bimag;",cie="return areal * bimag + aimag * breal;",mie="return a / b;",fie="return a * b;",die="return (a - b) * (a - b);",hie="return a - b;",gie="return f32(a == b);",bie="return vec4<f32>(a == b);",yie="return f32(a > b);",xie="return vec4<f32>(a > b);",Tie="return f32(a >= b);",kie="return vec4<f32>(a >= b);",Iie="return f32(a < b);",Cie="return vec4<f32>(a < b);",vie="return f32(a <= b);",wie="return vec4<f32>(a <= b);",Sie="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",_ie=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Aie=`
  if (isNanCustom(a)) { return a; }
  if (isNanCustom(b)) { return b; }
  `,gG=`
  if (isNaN.r > 0.) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g > 0.) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b > 0.) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a > 0.) {
    resultTemp.a = uniforms.NAN;
  }
  `,Nie=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,Die=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,Pie="return f32(a != b);",Fie="return vec4<f32>(a != b);",Mie=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,Eie=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = vec4<f32>(a < vec4<f32>(0.0)) * vec4<f32>(floor(b) < b);
  ${gG}
  return resultTemp;
  `,Rie="if (a < 0.0) { return b * a; }  return a;",Lie=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function bG(r,e){let t=e?gG:Aie;return e?`
    var resultTemp = vec4<f32>(${r}(a, b));
    let isNaN = min(vec4<f32>(isNanCustomVec4F32(a)) + vec4<f32>(isNanCustomVec4F32(b)), vec4<f32>(1.0));
    `+t+`
    return resultTemp;
  `:t+`
    return ${r}(a, b);
  `}function hi(r,e){switch(r){case 0:return fie;case 1:return lie;case 2:return hie;case 3:return mie;case 4:return e?bie:gie;case 5:return e?xie:yie;case 6:return e?kie:Tie;case 7:return e?Cie:Iie;case 8:return e?wie:vie;case 9:return e?_ie:Sie;case 10:return e?Fie:Pie;case 11:return die;case 12:return e?Die:Nie;case 14:return e?Lie:Rie;case 15:return bG("max",e);case 16:return bG("min",e);case 13:return e?Eie:Mie;case 17:return pie;case 18:return cie;default:throw new Error(`BinaryType ${r} is not implemented!`)}}var _e;(function(A){A[A.ABS=0]="ABS",A[A.CEIL=1]="CEIL",A[A.COS=2]="COS",A[A.COSH=3]="COSH",A[A.ELU=4]="ELU",A[A.EXP=5]="EXP",A[A.EXPM1=6]="EXPM1",A[A.FLOOR=7]="FLOOR",A[A.LINEAR=8]="LINEAR",A[A.LOG=9]="LOG",A[A.LOGICAL_NOT=10]="LOGICAL_NOT",A[A.NEG=11]="NEG",A[A.PRELU=12]="PRELU",A[A.RELU=13]="RELU",A[A.RELU6=14]="RELU6",A[A.RSQRT=15]="RSQRT",A[A.SIN=16]="SIN",A[A.SINH=17]="SINH",A[A.SIGMOID=18]="SIGMOID",A[A.SQRT=19]="SQRT",A[A.SQUARE=20]="SQUARE",A[A.TANH=21]="TANH",A[A.TO_INT=22]="TO_INT"})(_e||(_e={}));var Bie="return abs(a);",$ie="return ceil(a);",Oie="return cos(a);",zie=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Gie="return exp(a) - 1.0;",Wie="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Uie=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Kie="return exp(a);",Vie="return floor(a);",jie="return a;",Hie=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,qie="return f32(!(a >= 1.0));",Xie="return -a;",Yie="return (a < 0.0) ? b * a : a;",Qie="return max(a, 0.0);",Zie="return clamp(a, 0.0, 6.0);",Jie="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",eue=`
  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));
  let isNaN = isNan(a);

  if (isNaN.r) {
    resFloat.r = a.r;
  }
  if (isNaN.g) {
    resFloat.g = a.g;
  }
  if (isNaN.b) {
    resFloat.b = a.b;
  }
  if (isNaN.a) {
    resFloat.a = a.a;
  }
  return resFloat;
`,tue="return 1.0/sqrt(a);",rue="return 1.0 / (1.0 + exp(-1.0 * a));",nue="return sin(a);",oue=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,sue="return sqrt(a);",aue="return a * a;",iue=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,uue="return f32(i32((a)));";function cl(r,e){switch(r){case 0:return Bie;case 2:return Oie;case 3:return zie;case 1:return $ie;case 4:return e?Uie:Wie;case 5:return Kie;case 6:return Gie;case 7:return Vie;case 8:return jie;case 9:return Hie;case 10:return qie;case 11:return Xie;case 12:return Yie;case 13:return e?eue:Qie;case 14:return e?Jie:Zie;case 15:return tue;case 18:return rue;case 16:return nue;case 17:return oue;case 19:return sue;case 20:return aue;case 21:return iue;case 22:return uue;default:throw new Error(`BinaryType ${r} is not implemented!`)}}function Qr(r,e=!1){if(r===null)return null;if(r==="linear")return cl(_e.LINEAR);if(r==="relu")return cl(_e.RELU,e);if(r==="elu")return cl(_e.ELU,e);if(r==="relu6")return cl(_e.RELU6,e);if(r==="prelu")return hi(Re.PRELU,e);if(r==="sigmoid")return cl(_e.SIGMOID);throw new Error(`Activation ${r} has not been implemented for the WebGPU backend.`)}function wA(r,e){let t={RowPerThread:r[1],ColPerThread:r[0],TileAOuter:e[1]*r[1],TileBOuter:e[0]*r[0],TileInner:e[0]*r[0]};return`
  var<workgroup> mm_Asub : array<array<vec4<f32>, ${t.TileInner/t.ColPerThread}>, ${t.TileAOuter}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${t.TileBOuter/t.ColPerThread}>, ${t.TileInner}>;

  let RowPerThread = ${t.RowPerThread};
  let ColPerThread = ${t.ColPerThread}; // only support ColPerThread = 4
  let TileAOuter = ${t.TileAOuter};
  let TileBOuter = ${t.TileBOuter};
  let TileInner = ${t.TileInner};

  ${di()} {

    let tileRow = i32(localId.y) * RowPerThread;
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * RowPerThread;
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, ${t.RowPerThread}>;
    var ACached : vec4<f32>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / ${e[1]};
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / ColPerThread;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {
            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];
            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];
            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];
            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];

            for (var i = 0; i < RowPerThread; i = i + 1) {
                ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                acc[i] = BCached[3] * ACached.w + acc[i];
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
}`}function lue(r){return`
  var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;
  let tileSize = ${r[0]*4};
  ${di()} {
    let tileCol = i32(localId.x);
    let globalCol = i32(globalId.x);
    let globalRow = i32(globalId.y);

    let numTiles = (uniforms.dimInner - 1) / tileSize + 1;

    // Without this initialization strange values show up in acc.
    var acc = vec4<f32>(0.0);

    // Loop over shared dimension.
    for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      let colA = t * tileSize / 4 + tileCol;
      mm_Asub[tileCol] = mm_readA(globalRow, colA, globalId);

      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileSize / 4; k = k + 1) {
        let rowB = t * tileSize + k * 4;
        let BCached0 = mm_readB(rowB, globalCol, globalId);
        let BCached1 = mm_readB(rowB + 1, globalCol, globalId);
        let BCached2 = mm_readB(rowB + 2, globalCol, globalId);
        let BCached3 = mm_readB(rowB + 3, globalCol, globalId);

        let ACached = mm_Asub[k];
        acc = acc + BCached0 * ACached.x;
        acc = acc + BCached1 * ACached.y;
        acc = acc + BCached2 * ACached.z;
        acc = acc + BCached3 * ACached.w;
      }

      workgroupBarrier();
    }

    if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
      mm_write(globalRow, globalCol, acc, globalId);
    }
  }
`}var SA=class{constructor(e,t,n,o=null,s=null,i=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.workGroupSize=[16,16,1];this.isVec4=!0;this.vecSize=4;this.outputShape=t,this.workGroupSize=ig(t[1],e[2],t[2]),this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1&&(n=1),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.vecSize,n,1]);let a=o!=null,u=i!=null;a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.addBias=a,this.activation=s,this.hasPreluActivationWeights=u,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${n}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],o=this.workGroupSize[1]*this.workPerThread,s=this.workGroupSize[0]*this.vecSize,i=s,a=[o,i],u=[i,s];return[Zo(a,this.aShape.slice(1)),Zo(u,n.slice(1))]}getUserCode(){let e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,n="",o="";if(this.activation){let a=Qr(this.activation,this.isVec4);this.hasPreluActivationWeights?n=`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
                  ${a}
                }`:n=`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${a}
            }`,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${s}
          ${o}
          setOutput(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${this.outputShape[1]>1?wA([this.vecSize,this.workPerThread,1],this.workGroupSize):lue(this.workGroupSize)}

    `}};function pg(r,e){let t=e[1]*r[1],n=e[0]*r[0],o=t>n?t:n;return`
    var<workgroup> mm_Asub : array<array<f32, ${o}>, ${t}>;
    var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${o}>;
    ${di()} {
      let tileRow = i32(localId.y) * ${r[1]};
      let tileCol = i32(localId.x) * ${r[0]};

      let globalRow = i32(globalId.y) * ${r[1]};
      let globalCol = i32(globalId.x) * ${r[0]};

      let numTiles = (uniforms.dimInner - 1) / ${o} + 1;

      var acc : array<array<f32, ${r[0]}>, ${r[1]}>;
      var ACached : f32;
      var BCached : array<f32, ${r[0]}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let ColPerThreadA = ${o} / ${e[0]};
      let tileColA = i32(localId.x) * ColPerThreadA;
      let RowPerThreadB = ${o} / ${e[1]};
      let tileRowB = i32(localId.y) * RowPerThreadB;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;

            mm_Asub[inputRow][inputCol] = mm_readA(
                globalRow + innerRow,
                t * ${o} + inputCol, globalId);
          }
        }
        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;

            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${o} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${o}; k = k + 1) {
          for (var inner = 0; inner < ${r[0]}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
            ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < ${r[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${r[0]}; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}function pue(r){return`
    let TileSize = ${r[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;

    ${di()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),
                                mm_readA(globalRow, colA + 1, globalId),
                                mm_readA(globalRow, colA + 2, globalId),
                                mm_readA(globalRow, colA + 3, globalId));
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var cg=class{constructor(e,t,n,o=!1,s=!1,i=null,a=null,u=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.workGroupSize=[16,16,1];this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let l=o?e[1]:e[2];this.workGroupSize=ig(t[1],l,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),b.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let p=i!=null,c=u!=null;p&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=o,this.transposeB=s,this.addBias=p,this.activation=a,this.hasPreluActivationWeights=c;let m=this.outputShape[2],f=this.transposeB?[this.outputShape[0],m,l]:[this.outputShape[0],l,m];[this.fitA,this.fitB]=this.getShapeFit(f),this.shaderKey=`matMulPacked_${this.workPerThread}_${o}_${s}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread,o=t>n?t:n;this.outputShape[1]===1&&(o*=4),b.assert(o%this.workGroupSize[0]==0&&o%this.workGroupSize[1]==0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let s=[t,o],i=[o,n];return[Zo(s,this.aShape.slice(1)),Zo(i,e.slice(1))]}getUserCode(){let e;this.transposeA===!1?e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
           }
           return 0.0;`:e=this.fitA?"return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch* batchASize + col * uniforms.dimAOuter + row];
           }
           return 0.0;`;let t;this.transposeB===!1?t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
           }
           return 0.0;`:t=this.fitB?"return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];
           }
           return 0.0;`;let n="",o="";if(this.activation){let a=Qr(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${a}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${a}
              }
            `,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${s}
        ${o}
        setOutput(batch, row, col, value);
      }
      ${this.outputShape[1]>1?pg([this.workPerThread,this.workPerThread,1],this.workGroupSize):pue(this.workGroupSize)}
    `}};function cue(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${di()} {
      let coords = getOutputCoordsWithNonFlatDispatchLayout(globalId);
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var _A=class{constructor(e,t=!1,n=!1,o=null,s=null,i=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.workGroupSize=[256,1,1];this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize);let a=o!=null,u=i!=null;a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=a,this.activation=s,this.hasPreluActivationWeights=u,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){let e;this.transposeA===!1?e="return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":e="return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];";let t;this.transposeB===!1?t="return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":t="return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];";let n="",o="";if(this.activation){let a=Qr(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${a}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${a}
              }
            `,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        ${e}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let outCoord = vec3<i32>(batch, row, col);
        ${s}
        ${o}
        setOutput(batch, row, col, value);
      }
      ${cue()}
    `}};function mue(r){let e=r[1]/2,t=r[0],n=e>t?e:t;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${n}>, ${e}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${t}>, ${n}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${n}>, ${e}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${t}>, ${n}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${di()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${e}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${n};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${n};
        }
      } else {
        if (tileRow < ${e}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${n};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${n};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${n}; k = k + 1) {
            let subRow = tileRow - ${e};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${e}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${n};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${n};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${n}; k = k + 1) {
            let subRow = tileRow - ${e};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${e};
    if (tileRow >= ${e} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var AA=class{constructor(e,t,n,o=null,s=null,i=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.workGroupSize=[8,16,1];b.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]*2/this.workGroupSize[1]),n[0]];let a=o!=null;a&&this.variableNames.push("bias");let u=i!=null;u&&this.variableNames.push("preluActivationWeights"),this.addBias=a,this.activation=s,this.hasPreluActivationWeights=u,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;`,t=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;`,n="",o="";if(this.activation){let a=Qr(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
            ${a}
            }`:n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${a}
        }`,o="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${s}
          ${o}
          setOutput(batch, row, col, value);
        }
      }
      ${mue(this.workGroupSize)}
    `}};function Oe(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=b.sizeFromShape(n.shape),i=b.inferFromImplicitShape(o,s),a=b.sizeFromShape(i);return b.assert(s===a,()=>`The new shape (${i}) has ${a} elements and the old shape (${n.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:i,dtype:n.dtype}}var yG={kernelName:hs,backendName:"webgpu",kernelFunc:Oe};function Om({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:u=null}){let l=r.shape.length,p=e.shape.length,c=t?r.shape[l-2]:r.shape[l-1],m=n?e.shape[p-1]:e.shape[p-2],f=t?r.shape[l-1]:r.shape[l-2],d=n?e.shape[p-2]:e.shape[p-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),x=b.sizeFromShape(h),y=b.sizeFromShape(g),k=Ds.assertAndGetBroadcastShape(r.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,d]);b.assert(c===m,()=>`Error in matMul: inner shapes (${c}) and (${m}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let C=t?[x,c,f]:[x,f,c],N=n?[y,d,m]:[y,m,d],A=Oe({inputs:{x:r},backend:o,attrs:{shape:C}}),M=Oe({inputs:{x:e},backend:o,attrs:{shape:N}}),E=[A,M],B=Math.max(x,y),W=c%4==0&&d%4==0&&!t&&!n&&d>=32,U;f*d<=32?U=new _A([B,f,d],t,n,s,u,i):!t&&!n&&(f<=16&&(d<=512||m>=2*d)||d<=16&&(f<=512||c>=2*f))?U=new AA(C,N,[B,f,d],s,u,i):W?U=new SA(C,[B,f,d],$().get("WEBGPU_MATMUL_WORK_PER_THREAD"),s,u,i):U=new cg(C,[B,f,d],$().get("WEBGPU_MATMUL_WORK_PER_THREAD"),t,n,s,u,i);let K=[A,M];s&&K.push(s),i&&K.push(i);let j=[{type:"int32",data:[f]},{type:"int32",data:[d]},{type:"int32",data:[c]}],V=o.runWebGPUProgram(U,K,r.dtype,j),q=Oe({inputs:{x:V},backend:o,attrs:{shape:k}});E.push(V);for(let ee of E)o.disposeData(ee.dataId);return q}function fue(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:i,preluActivationWeights:a}=e,{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:c}=n;return Om({a:o,b:s,transposeA:u,transposeB:l,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:c,activation:p})}var xG={kernelName:Cs,backendName:"webgpu",kernelFunc:fue};var Ux=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.workGroupSize=[128,1,1];this.size=!0;this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${hi(this.op,!1)}
      }

      ${ve()}
        if(index < uniforms.size) {
          let areal = getARealAtOutCoordsByGlobalIndex(index);
          let aimag = getAImagAtOutCoordsByGlobalIndex(index);
          let breal = getBRealAtOutCoordsByGlobalIndex(index);
          let bimag = getBImagAtOutCoordsByGlobalIndex(index);
          setOutputFlat(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};var NA=class{constructor(e,t,n,o){this.variableNames=["A","B"];this.size=!0;let s=256;this.workGroupSize=[s,1,1],this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ie(this.outputShape),this.lastDimensionSize=o?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=o,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAAtOutCoordsByCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBAtOutCoordsByCoords(coords);`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${hi(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${ve()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}.numbers[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromFlatIndex(flatIndex);

              ${t}
              setOutputFlat(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}};var DA=class{constructor(e,t,n){this.variableNames=["A","B"];this.workPerThread=4;this.isVec4=!0;this.size=!0;let o=128;this.workGroupSize=[o,1,1],this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`
      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
        ${hi(this.op,this.isVec4)}
      }
      ${ve()}
        if (index < uniforms.size) {
          let a = getAAtOutCoordsByGlobalIndex(index);
          let b = getBAtOutCoordsByGlobalIndex(index);
          setOutputFlat(index, binaryOperation(a, b));
        }
      }
    `}};var mg=class{constructor(e,t,n){this.variableNames=["A","B"];this.size=!0;let o=128;this.workGroupSize=[o,1,1],this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`
      fn binaryOperation(a : f32, b : f32) -> f32 {
        ${hi(this.op,!1)}
      }
      ${ve()}
        if (index < uniforms.size) {
          let a = getAAtOutCoordsByGlobalIndex(index);
          let b = getBAtOutCoordsByGlobalIndex(index);
          setOutputFlat(index, binaryOperation(a, b));
        }
      }
      `}};function PA(r,e,t){if(b.arraysEqual(e,t)&&b.sizeFromShape(e)%4==0)return new DA(r,e,t);let o=e.length===1&&t.length>1&&e[0]<1024,s=t.length===1&&e.length>1&&t[0]<1024;return o||s?new NA(r,e,t,s):new mg(r,e,t)}function vr(r){let{inputs:e}=r,{x:t}=e;return r.backend.incRef(t.dataId),{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}var TG={kernelName:Wn,backendName:"webgpu",kernelFunc:vr};function $a(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),i=t.tensorMap.get(s.dataId),a=vr({inputs:{x:n},backend:t}),u=vr({inputs:{x:o},backend:t});return i.complexTensorInfos={real:a,imag:u},s}var kG={kernelName:Nu,backendName:"webgpu",kernelFunc:$a};var yu=class{constructor(e,t){this.variableNames=["A"];this.size=!0;let n=128;this.workGroupSize=[n,1,1],this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${cl(this.op,!1)}
      }
      ${ve()}
        if (index < uniforms.size) {
          let a = getAAtOutCoordsByGlobalIndex(index);
          setOutputFlat(index, unaryOperation(a));
        }
      }
      `}};function ft({opType:r,cpuKernelImpl:e,dtype:t}){return({inputs:n,backend:o})=>{let{x:s}=n,i=o,a=t||s.dtype;if(i.shouldExecuteOnCPU([s])&&e!=null){let l=i.tensorMap.get(s.dataId),p=e(l.values,a);return i.makeTensorInfo(s.shape,a,p)}let u=new yu(s.shape,r);return i.runWebGPUProgram(u,[s],a)}}function At({opSnippet:r,cpuKernelImpl:e,supportsComplex:t=!1,dtype:n}){return({inputs:o,backend:s})=>{let{a:i,b:a}=o,u=s;if(t&&i.dtype==="complex64"){let c=u.tensorMap.get(i.dataId),m=u.tensorMap.get(a.dataId),f,d;if(r!==Re.MUL)[f,d]=[[c.complexTensorInfos.real,m.complexTensorInfos.real],[c.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(g=>{let[x,y]=g,T={dataId:x.dataId,dtype:x.dtype,shape:i.shape},k={dataId:y.dataId,dtype:y.dtype,shape:a.shape},C=PA(r,i.shape,a.shape);return u.runWebGPUProgram(C,[T,k],Kt(x.dtype,y.dtype))});else{let g=new Ux(Re.COMPLEX_MULTIPLY_REAL,i.shape,a.shape),x=new Ux(Re.COMPLEX_MULTIPLY_IMAG,i.shape,a.shape),y=[{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:i.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:m.complexTensorInfos.real.dataId,dtype:m.complexTensorInfos.real.dtype,shape:a.shape},{dataId:m.complexTensorInfos.imag.dataId,dtype:m.complexTensorInfos.imag.dtype,shape:a.shape}];f=u.runWebGPUProgram(g,y,"float32"),d=u.runWebGPUProgram(x,y,"float32")}let h=$a({inputs:{real:f,imag:d},backend:u});return u.disposeData(f.dataId),u.disposeData(d.dataId),h}let l=n||Kt(i.dtype,a.dtype);if((i.dtype==="string"||a.dtype==="string"||u.shouldExecuteOnCPU([i,a]))&&e!=null){let c=u.tensorMap.get(i.dataId).values,m=u.tensorMap.get(a.dataId).values,f=i.dtype==="string"?I.fromUint8ToStringArray(c):c,d=i.dtype==="string"?I.fromUint8ToStringArray(m):m,[h,g]=e(i.shape,a.shape,f,d,l);return u.makeTensorInfo(g,l,h)}let p=PA(r,i.shape,a.shape);return u.runWebGPUProgram(p,[i,a],l)}}var{addImpl:IG,ceilImpl:CG,concatImpl:vG,equalImpl:wG,expImpl:SG,expm1Impl:_G,floorImpl:AG,gatherNdImpl:NG,gatherV2Impl:DG,greaterEqualImpl:PG,greaterImpl:FG,lessEqualImpl:MG,lessImpl:EG,logImpl:RG,maxImpl:LG,maximumImpl:BG,minimumImpl:$G,multiplyImpl:OG,negImpl:zG,notEqualImpl:GG,prodImpl:WG,rangeImpl:UG,rsqrtImpl:KG,simpleAbsImpl:VG,sliceImpl:jG,stridedSliceImpl:HG,stringNGramsImpl:qG,subImpl:XG,tileImpl:YG,topKImpl:QG,transposeImpl:ZG,uniqueImpl:_Cr}=wm;var due=ft({opType:_e.ABS,cpuKernelImpl:VG}),JG={kernelName:is,backendName:"webgpu",kernelFunc:due};var hue=At({opSnippet:Re.ADD,cpuKernelImpl:IG,supportsComplex:!0}),eW={kernelName:Cn,backendName:"webgpu",kernelFunc:hue};var FA=class{constructor(e){this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(o=>{e.push(`let v${o} = get${o}AtOutCoordsByCoords(coords);`)});let t=this.variableNames.map(o=>`v${o}`).join(" + ");return`
      ${ve()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputFlat(flatIndex, ${t});
          }
        }
      }
    `}};function gue(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return vr({inputs:{x:n[0]},backend:t});let o=n.map(a=>a.dtype).reduce((a,u)=>Kt(a,u)),s=n.map(a=>a.shape),i=new FA(s);return t.runWebGPUProgram(i,n,o)}var tW={kernelName:eo,backendName:"webgpu",kernelFunc:gue};var fg=class{constructor(e,t,n){this.workGroupSize=[64,1,1];this.variableNames=["x"];this.uniforms="axis : i32; infinityValue : f32;";this.size=!0;let o=[t];I.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.length),this.op=n==="min"?"<":">";let[s]=I.computeOutAndReduceShapes(e,o);this.outputShape=s.length===0?[1]:s,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=(s,i)=>this.outputShape.length===1?s:`${s}[${i}]`,n=s=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape[${s}]`;return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      // In order to get a flattened index into the input tensor, we need to
      // add back the index along the reduced dimension to |outputCoords|.
      // This function outputs the offset to the first value along
      // |axis| and the stride to get the next value of the input along |axis|.
      fn getInputCoordInfo(outputIndex : i32) -> vec2<i32>{
        let outputCoords = getCoordsFromFlatIndex(outputIndex);
        var i = ${this.outputShape.length-1};

        var stride = 1;
        var inputStride = 1;
        var offset = 0;

        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {
          let length = ${n(`${this.inputShape.length} - r`)};
          if (${this.inputShape.length} - r == uniforms.axis) {
            inputStride = stride;
          } else {
            offset = offset + ${t("outputCoords","i")} * stride;
            i = i - 1;
          }
          stride = stride * length;
        }

        return vec2<i32>(offset, inputStride);
      }

      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{
        return coordInfo[0] + coordInfo[1] * index;
      }

      ${ve()}
        let outputIndex = index / i32(workGroupSizeX);
        let coordInfo = getInputCoordInfo(outputIndex);
        let Length = ${n("uniforms.axis")};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;

        for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = f32(x.numbers[getInputIndex(coordInfo, k)]);
          if (!isNanCustom(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(Length), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputFlatI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}};var MA=class{constructor(e,t){this.variableNames=["A"];this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${$m()}
      fn main([[builtin(local_invocation_id)]] localId : vec3<u32>,
              [[builtin(workgroup_id)]] workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] =
              A.numbers[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputFlat((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}};var EA=class{constructor(e,t){this.variableNames=["A"];this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=Zt(this.outputShape.length),t=bue(this.newDim);return`
      ${ve()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromFlatIndex(flatIndex);
            setOutputFlat(flatIndex, A.numbers[getFlatIndex${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function bue(r){let e=r.length;if(e>4)throw Error(`Transpose for rank ${e} is not yet supported`);let t=new Array(e);for(let n=0;n<r.length;n++)t[r[n]]=`resRC[${n}]`;return t.join()}function Jo(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,i=t,a=o.shape.length,u=new Array(a);for(let p=0;p<u.length;p++)u[p]=o.shape[s[p]];if(t.shouldExecuteOnCPU([o])){let c=i.tensorMap.get(o.dataId).values,m=ZG(c,o.shape,o.dtype,s,u);return t.makeTensorInfo(u,o.dtype,m)}if(o.shape.length===2&&b.arraysEqual(s,[1,0])){let p=new MA(o.shape,s);return i.runWebGPUProgram(p,[o],o.dtype)}let l=new EA(o.shape,s);return i.runWebGPUProgram(l,[o],o.dtype)}var rW={kernelName:Wo,backendName:"webgpu",kernelFunc:Jo};function yue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,i=b.parseAxisParam(s,o.shape),a=I.getAxesPermutation(i,o.shape.length),u=o,l=[];a!=null&&(u=Jo({inputs:{x:o},backend:t,attrs:{perm:a}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);let p=new fg(u.shape,i[0],"max"),c=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.NEGATIVE_INFINITY]}],m=t.runWebGPUProgram(p,[u],"int32",c);return l.forEach(f=>t.disposeData(f.dataId)),m}var nW={kernelName:to,backendName:"webgpu",kernelFunc:yue};function xue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,i=b.parseAxisParam(s,o.shape),a=I.getAxesPermutation(i,o.shape.length),u=o,l=[];a!=null&&(u=Jo({inputs:{x:o},backend:t,attrs:{perm:a}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);let p=new fg(u.shape,i[0],"min"),c=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.POSITIVE_INFINITY]}],m=t.runWebGPUProgram(p,[u],"int32",c);return l.forEach(f=>t.disposeData(f.dataId)),m}var oW={kernelName:Ka,backendName:"webgpu",kernelFunc:xue};var dg=class{constructor(e,t){this.variableNames=["x"];this.uniforms="stride : vec2<i32>; pad : vec2<i32>; dilation : vec2<i32>; convDims : vec2<i32>; filterDims : vec2<i32>;";this.workGroupSize=[128,1,1];this.size=!0;this.outputShape=e.outShape,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${ve()}
      if (index < uniforms.size) {
        let coords = getCoordsFromFlatIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputFlat(index, ${t});
        }
      }
    `}};var hg=class{constructor(e){this.variableNames=["x"];this.uniforms="stride : vec2<i32>;";this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=e.outShape,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${ve()}
        if (index < uniforms.size) {
          let coords = getCoordsFromFlatIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputFlat(index, value);
        }
      }
    `}};function Tue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,l=1,p=I.computePool2DInfo(o.shape,s,i,l,a,u);if(p.filterWidth===1&&p.filterHeight===1&&b.arraysEqual(p.inShape,p.outShape))return vr({inputs:{x:o},backend:t});let c,m=[{type:"int32",data:[p.strideHeight,p.strideWidth]}];return p.filterHeight===1&&p.filterWidth===1?c=new hg(p):(c=new dg(p,"avg"),m.push({type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]})),t.runWebGPUProgram(c,[o],o.dtype,m)}var sW={kernelName:ro,backendName:"webgpu",kernelFunc:Tue};function kue(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:i,transposeB:a}=n;return Om({a:o,b:s,transposeA:i,transposeB:a,backend:t})}var aW={kernelName:no,backendName:"webgpu",kernelFunc:kue};var RA=class{constructor(e,t){this.variableNames=["source"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.rank=t.length,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Zt(e.length)}; `,this.shaderKey="slice"}getUserCode(){let e=Zt(this.rank),t=Iue(this.rank),n;return this.start.length===1?n=this.outputShape.map((s,i)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((s,i)=>`sourceLoc.${LA[i]} = uniforms.start[${i}] + coords.${LA[i]};`),`
      ${ve()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromFlatIndex(index);
          ${n.join(`
`)}
          setOutputFlat(index, getSource(${t}));
        }
      }
    `}},LA=["x","y","z","w","u","v"];function Iue(r){if(r===1)return"sourceLoc";if(r<=6)return LA.slice(0,r).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}function Oa(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:i}=n,[a,u]=kt.parseSliceParams(o,s,i);if(kt.assertParamsValid(o,a,u),t.shouldExecuteOnCPU([o])||o.dtype==="string"){let c=t.tensorMap.get(o.dataId),m=jG(c.values,a,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,m)}if(b.sizeFromShape(u)===0)return t.makeTensorInfo(u,o.dtype,[]);let l=new RA(a,u),p=[{type:"int32",data:a}];return t.runWebGPUProgram(l,[o],o.dtype,p)}var iW={kernelName:bs,backendName:"webgpu",kernelFunc:Oa};var Cue=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:i}=n;b.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let a=s.reduce((y,T)=>y*T),u=I.getReshaped(o.shape,s,a),l=I.getPermuted(u.length,s.length),p=I.getReshapedPermuted(o.shape,s,a),c=I.getSliceBeginCoords(i,s.length),m=I.getSliceSize(p,i,s.length),f=[],d=Oe({inputs:{x:o},backend:t,attrs:{shape:u}}),h=Jo({inputs:{x:d},backend:t,attrs:{perm:l}}),g=Oe({inputs:{x:h},backend:t,attrs:{shape:p}}),x=Oa({inputs:{x:g},backend:t,attrs:{begin:c,size:m}});return f.push(d),f.push(h),f.push(g),f.forEach(y=>t.disposeData(y.dataId)),x},uW={kernelName:us,backendName:"webgpu",kernelFunc:Cue};var BA=At({opSnippet:Re.NOT_EQUAL,dtype:"bool",cpuKernelImpl:GG}),lW={kernelName:ia,backendName:"webgpu",kernelFunc:BA};function xu(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.tensorMap.get(n.dataId);return vr({inputs:{x:o.complexTensorInfos.real},backend:t})}var pW={kernelName:Bu,backendName:"webgpu",kernelFunc:xu};function cW(r,e){let t=new yu(r.shape,_e.TO_INT),n=e.runWebGPUProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function $A(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return vr({inputs:{x:o},backend:t});let i=Tt(o.shape),a=$A({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=$a({inputs:{real:a,imag:i},backend:t});return i.dispose(),t.disposeData(a.dataId),u}if(o.dtype==="complex64"){let i=xu({inputs:{input:o},backend:t}),a=$A({inputs:{x:i},backend:t,attrs:{dtype:s}});return t.disposeData(i.dataId),a}if(!b.hasEncodingLoss(o.dtype,s)){let i=vr({inputs:{x:o},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32")return cW(o,t);if(s==="bool"){let i=t.makeTensorInfo([],"bool",b.getTypedArrayFromDType("bool",1)),u=BA({inputs:{a:o,b:i},backend:t});return t.disposeData(i.dataId),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var mW={kernelName:zn,backendName:"webgpu",kernelFunc:$A};var vue=ft({opType:_e.CEIL,cpuKernelImpl:CG}),fW={kernelName:oo,backendName:"webgpu",kernelFunc:vue};var OA=class{constructor(e){this.variableNames=["A"];this.uniforms="minVal : f32; maxVal : f32;";this.workPerThread=4;this.workGroupSize=[64,1,1];this.isVec4=!0;this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${ve()}
        if(index < uniforms.size) {
          let value = getAAtOutCoordsByGlobalIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isNanCustom(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputFlat(index, clampedValue);
        }
      }
    `}};var zA=class{constructor(e){this.variableNames=["A"];this.uniforms="minVal : f32; maxVal : f32;";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${ve()}
        if(index < uniforms.size) {
          let value = getAAtOutCoordsByGlobalIndex(index);
          if (isNanCustom(value)) {
            setOutputFlat(index, value);
            return;
          }
          setOutputFlat(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function wue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:i}=n,a,u=[{type:"float32",data:[s]},{type:"float32",data:[i]}];return b.sizeFromShape(o.shape)%4==0?a=new OA(o.shape):a=new zA(o.shape),t.runWebGPUProgram(a,[o],o.dtype,u)}var dW={kernelName:Gn,backendName:"webgpu",kernelFunc:wue};var GA=class{constructor(e){this.uniforms="";this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=I.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32;`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutput(coords.x, coords.y, getT0(yR, yC)); }");for(let s=1;s<this.offsetLength;s++)e.push(`elseif (yC < uniforms.offset${[s]}){ setOutput(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${s-1})); }`);let n=this.offsetLength,o=this.offsetLength-1;e.push(`else { setOutput(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${o})); }`)}else e.push("setOutput(coords.x, coords.y, getT0(yR, yC));");return`
      ${ve()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function Mp(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.tensorMap.get(n.dataId);return vr({inputs:{x:o.complexTensorInfos.imag},backend:t})}var hW={kernelName:Eu,backendName:"webgpu",kernelFunc:Mp};function Kx(r,e,t){let n=r[0].dtype;if(n==="complex64"){let f=r.map(y=>xu({inputs:{input:y},backend:t})),d=r.map(y=>Mp({inputs:{input:y},backend:t})),h=Kx(f,e,t),g=Kx(d,e,t),x=$a({inputs:{real:h,imag:g},backend:t});return f.forEach(y=>t.disposeData(y.dataId)),d.forEach(y=>t.disposeData(y.dataId)),t.disposeData(h.dataId),t.disposeData(g.dataId),x}let o=t.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let f=r.map(k=>{let C=b.sizeFromShape(k.shape.slice(e));return Oe({inputs:{x:k},backend:t,attrs:{shape:[-1,C]}})}),d=f.map(k=>({vals:t.readSync(k.dataId),shape:k.shape})),h=I.computeOutShape(f.map(k=>k.shape),1),g=f[0].shape[0]===1,x=vG(d,h,n,g),y=I.computeOutShape(r.map(k=>k.shape),e),T=t.makeTensorInfo(y,n,x);return f.forEach(k=>t.disposeData(k.dataId)),T}let{tensors2D:s,outShape:i}=Sue(r,e,t),a=s.map(f=>f.shape),u=new GA(a),l=[],p=new Array(a.length-1);if(p.length>0){p[0]=a[0][1],l.push({type:"int32",data:[p[0]]});for(let f=1;f<p.length;f++)p[f]=p[f-1]+a[f][1],l.push({type:"int32",data:[p[f]]})}let c=t.runWebGPUProgram(u,s,s[0].dtype,l);s.forEach(f=>t.disposeData(f.dataId));let m=Oe({inputs:{x:c},backend:t,attrs:{shape:i}});return t.disposeData(c.dataId),m}function Sue(r,e,t){let n=I.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>Oe({inputs:{x:s},backend:t,attrs:{shape:[b.sizeFromShape(s.shape.slice(0,e)),b.sizeFromShape(s.shape.slice(e))]}})),outShape:n}}function WA(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],i=I.computeOutShape(e.map(l=>l.shape),s);if(b.sizeFromShape(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);let a=e.filter(l=>b.sizeFromShape(l.shape)>0);if(a.length===1)return vr({inputs:{x:a[0]},backend:t});let u=a.map(l=>l.shape);return I.assertParamsConsistent(u,s),Kx(a,s,t)}var gW={kernelName:ls,backendName:"webgpu",kernelFunc:WA};var UA=class{constructor(e,t){this.variableNames=["A"];this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; outWidth : i32; itemsPerBlockRow : i32;
      inChannels : i32;`;this.workPerThread=4;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`
    ${ve()}

      for(var i = 0; i<${this.workPerThread}; i = i + 1) {
        let flatIndex = index * ${this.workPerThread} + i;

        let rc = getCoordsFromFlatIndex(flatIndex);

        if(flatIndex < uniforms.size) {
          let blockIndex = rc[0];
          let pos = rc[1];

          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];
          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;
          var value = 0.0;
          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {
            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -
              uniforms.pad[0];
            let d1 = offsetX + uniforms.dilation[0] * ((pos %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
            let ch = pos % uniforms.inChannels;
            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {
              value = getA(d0, d1, ch);
            }
          }
          setOutputFlat(flatIndex, value);
        }
      }
    }
  `}};function Vx({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let u=r.shape,l=t.dataFormat==="channelsLast",p=!1,c=!1,m=l?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],f=Oe({inputs:{x:r},backend:n,attrs:{shape:[1,m,t.inChannels]}}),d=Oe({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),h=Om({a:f,b:d,transposeA:p,transposeB:c,backend:n,bias:o,activation:a,preluActivationWeights:s,leakyreluAlpha:i}),g=Oe({inputs:{x:h},backend:n,attrs:{shape:t.outShape}});return n.disposeData(f.dataId),n.disposeData(d.dataId),n.disposeData(h.dataId),g}function bW({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let{filterWidth:u,filterHeight:l,inChannels:p,strideWidth:c,strideHeight:m,padInfo:f,outWidth:d,outHeight:h,dilationWidth:g,dilationHeight:x,dataFormat:y}=t,T=y==="channelsLast",k=u*l*p,C=h*d,N=[C,k],A=!1,M=!1,E=[],B=Oe({inputs:{x:r},backend:n,attrs:{shape:r.shape.slice(1)}}),W=Oe({inputs:{x:e},backend:n,attrs:{shape:[1,k,-1]}});E.push(B),E.push(W);let U=new UA(N,T),K=[{type:"int32",data:[f.left,f.top]},{type:"int32",data:[c,m]},{type:"int32",data:[g,x]},{type:"int32",data:[d]},{type:"int32",data:[p*u]},{type:"int32",data:[p]}],j=n.runWebGPUProgram(U,[B],B.dtype,K),V=Oe({inputs:{x:j},backend:n,attrs:{shape:[1,N[0],N[1]]}});E.push(j),E.push(V);let q=[1,N[0],N[1]],ee=new cg(q,[1,C,t.outChannels],$().get("WEBGPU_MATMUL_WORK_PER_THREAD"),A,M),Z=q[1],te=q[2],oe=t.outChannels,ie=[{type:"int32",data:[Z]},{type:"int32",data:[oe]},{type:"int32",data:[te]}],se=n.runWebGPUProgram(ee,[V,W],V.dtype,ie),ue=T?[1,h,d,t.outChannels]:[1,t.outChannels,h,d],ye=Oe({inputs:{x:se},backend:n,attrs:{shape:ue}});E.push(se);for(let de of E)n.disposeData(de.dataId);return ye}var gg=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.uniforms=`filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      dimAOuter : i32; dimBOuter : i32; dimInner : i32;`;this.isVec4=!0;this.outputShape=e.outShape,b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=[8,8,1];let i=[4,4,1];this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,i),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=o,this.hasLeakyreluAlpha=s,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),[this.fitA,this.fitB]=this.getShapeFit(i),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(e){let t=this.workGroupSize[1]*e[1],n=this.workGroupSize[0]*e[0],o=n,s=[t,o],i=[o,n],a=this.outputShape[1]*this.outputShape[2],u=this.outputShape[3],l=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[Zo(s,[a,l]),Zo(i,[l,u])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getFlatIndex4D(coord, uniforms.xShape);
    let divBy4Remainder${e} = flatIndex${e} % 4;
    let divBy4Index${e} = flatIndex${e} / 4;
    let curData${e} = x.numbers[divBy4Index${e}];
    if (divBy4Remainder${e} == 0) {
      temp = curData${e};
    } else {
      // TODO: This could end up being a redundant load with another one in
      // the same shader invocation. Perhaps there's an opportunity for
      // optimization
      let nextData${e} = x.numbers[divBy4Index${e} + 1];
      if (divBy4Remainder${e} == 1) {
        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);
      } elseif (divBy4Remainder${e} == 2) {
        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);
      } elseif (divBy4Remainder${e} == 3) {
        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);
      }
    }
    `}getUserCode(){let t=wA([4,4,1],this.workGroupSize),s=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        var coord = vec4<i32>(
            batch,
            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
            inChCoord);
        var resData = vec4<f32>(0.0);
        ${this.convInfo.inChannels%4===0?`// The bounds checking is always needed since we use it to pad zero for
          // the 'same' padding type.
          if (coordsInBounds4D(coord, uniforms.xShape)) {
            resData = x.numbers[getFlatIndex4D(coord, uniforms.xShape) / 4];
          } else {
            resData = vec4<f32>(0.0); }`:`var temp = vec4<f32>(0.0);
          ${this.getSampleAWithRemainder(1)}
          resData = temp;
          if (WCol == (uniforms.filterDims[1] - 1)) {
            coord = vec4<i32>(
              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);
              ${this.getSampleAWithRemainder(2)}
            if (inChCoord == 0) {
              resData = vec4<f32>(resData.xyz, temp.x);
            } elseif (inChCoord == 1) {
              resData = vec4<f32>(resData.xy, temp.xy);
            } else {
              resData = vec4<f32>(resData.x, temp.xyz);
            }
          }
          `}
        return resData;`,i=this.fitA?`${s}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${s}
         }
         return vec4<f32>(0.0);
        `,a=this.fitB?"return W.numbers[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,u="",l="";if(this.activation){let m=Qr(this.activation,this.isVec4);if(this.hasPreluActivationWeights)u=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
          ${m}
        }`;else{if(this.hasLeakyreluAlpha)throw u=`fn activation(a: vec4<f32>) -> vec4<f32> {
          let b = getLeakyreluAlphaAtOutCoords();
          ${m}
        }`,new Error("Leakyrelu is not supported.");u=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${m}
        }`}l="value = activation(value, outCoord);"}let p=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
        ${u}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          let r = row;
          let c = col * 4;
          var batch = i32(globalId.z);
          ${i}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${a}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${p}
            ${l}
            setOutput(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${t}
      `}};var bg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.outputShape=e.outShape,b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=ag(this.dispatchLayout,this.outputShape),this.elementsPerThread=ug(this.dispatchLayout,this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=o,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;b.assert(n%this.workGroupSize[0]==0&&n%this.workGroupSize[1]==0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let o=[e,n],s=[n,t],i=this.outputShape[1]*this.outputShape[2],a=this.outputShape[3],u=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[Zo(o,[i,u]),Zo(s,[u,a])]}getUserCode(){let e=pg(this.elementsPerThread,this.workGroupSize),t=`
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);
    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];
    let coord = vec4<i32>(
        batch,
        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
        col % uniforms.xShape[3]);
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x.numbers[getFlatIndex4D(coord, uniforms.xShape)];
    }
    return 0.0;`,n=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${t}
    }
    return 0.0;
    `,o=this.fitB?"return W.numbers[row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter + col];
	 }
	 return 0.0;
	 `,s="",i="";if(this.activation){let l=Qr(this.activation,!1);this.hasPreluActivationWeights?s=`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
                  ${l}
                }`:s=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${l}
                  }
                `,i="value = activation(value, outCoord);"}let a=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
    ${s}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${n}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      ${o}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      ${a}
      ${i}
      result.numbers[getFlatIndex4D(outCoord, uniforms.outShape)] = value;
    }
    ${e}
  `}};var yg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;";this.workGroupSize=[128,1,1];this.outputShape=e.outShape,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=o,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let s=Qr(this.activation);this.hasPreluActivationWeights?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32{
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${s}
             }`:e=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{
                    ${s}
                  }
                `,t="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${e}
      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {
        let coord = vec4<i32>(batch, row, col, chan);
        if(coordsInBounds4D(coord, uniforms.xShape)) {
          return getX(batch, row, col, chan);
        }
        return 0.0;
      }

      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
        let coord = vec4<i32>(row, col, xChannel, outChannel);
        if(coordsInBounds4D(coord, uniforms.wShape)) {
          return getW(row, col, xChannel, outChannel);
        }
        return 0.0;
      }

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          ${n}
          ${t}
          setOutput(batch, row, col, chan, value);
        }
      }

      ${sg()} {
        let coords = getOutputCoordsWithFlatDispatchLayout(globalId, localId, numWorkgroups);
        let batch = coords[0];
        let outChannel = coords[3];

        var acc = 0.0;

        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {
              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
              let v = readInp(batch, coordRow, coordCol, xChannel);
              let f = readFilt(row, col, xChannel, outChannel);
              acc = acc + v * f;
            }
          }
        }

        writeResult(batch, coords[1], coords[2], outChannel, acc);
      }
    `}};function _ue(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dataFormat:u,dilations:l,dimRoundingMode:p}=t,c=I.convertConv2DDataFormat(u),m=I.computeConv2DInfo(o.shape,s.shape,i,l,a,p,!1,c);if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))return Vx({x:o,filter:s,convInfo:m,backend:n});if($().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&o.shape[0]===1)return bW({x:o,filter:s,convInfo:m,backend:n});let f,d=[m.padInfo.top,m.padInfo.left],h=[{type:"int32",data:[m.filterHeight,m.filterWidth]},{type:"int32",data:[...d]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]}],g=$().getBool("WEBGPU_USE_NAIVE_CONV2D");if(g?f=new yg(m):(m.inChannels%4==0||m.inChannels===3&&m.padInfo.type==="VALID")&&m.outChannels%4==0&&m.outChannels>=64?f=new gg(m):f=new bg(m),!g){let x=m.outShape[1]*m.outShape[2],y=m.outShape[3],T=m.filterHeight*m.filterWidth*m.inShape[3];h.push({type:"int32",data:[x]},{type:"int32",data:[y]},{type:"int32",data:[T]})}return n.runWebGPUProgram(f,[o,s],o.dtype,h)}var yW={kernelName:so,backendName:"webgpu",kernelFunc:_ue};var KA=class{constructor(e){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;";this.outputShape=e.inShape,b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=ag(this.dispatchLayout,this.outputShape),this.elementsPerThread=ug(this.dispatchLayout,this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x.numbers[getFlatIndex4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W.numbers[getFlatIndex4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result.numbers[getFlatIndex4D(outCoord, uniforms.outShape)] = value;
    }

    ${pg(this.elementsPerThread,this.workGroupSize)}
  `}};var VA=class{constructor(e){this.variableNames=["dy","W"];this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>;";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e.inShape,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${ve()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromFlatIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputFlat(index, dotProd);
      }
    }
  `}};function Aue(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:i,strides:a,pad:u,dataFormat:l,dimRoundingMode:p}=n,c=I.convertConv2DDataFormat(l),m=I.computeConv2DInfo(i,s.shape,a,1,u,p,!1,c),f=[{type:"int32",data:[m.filterHeight,m.filterWidth]},{type:"int32",data:[m.filterHeight-1-m.padInfo.top,m.filterWidth-1-m.padInfo.left]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.batchSize,m.outHeight,m.outWidth,m.outChannels]}],d;if($().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))d=new VA(m);else{d=new KA(m);let h=m.inShape[1]*m.inShape[2],g=m.inShape[3],x=m.filterHeight*m.filterWidth*m.outChannels;f.push({type:"uint32",data:[h]},{type:"uint32",data:[g]},{type:"uint32",data:[x]})}return t.runWebGPUProgram(d,[o,s],"float32",f)}var xW={kernelName:ao,backendName:"webgpu",kernelFunc:Aue};var Nue=ft({opType:_e.COS}),TW={kernelName:io,backendName:"webgpu",kernelFunc:Nue};var Due=ft({opType:_e.COSH}),kW={kernelName:uo,backendName:"webgpu",kernelFunc:Due};var jA=class{constructor(e,t,n,o){this.variableNames=["Image","Boxes","BoxInd"];this.uniforms="extrapolationValue : f32;";this.workGroupSize=[64,1,1];this.size=!0;let[s]=t;this.outputShape=[s,n[0],n[1],e],this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=o==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,o,s]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[i,a,u]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${ve()}
      if (index < uniforms.size) {
        let coords = getCoordsFromFlatIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${i});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${o};
        let width_scale = ${a};
        let in_y = ${s};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputFlat(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${u};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputFlat(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputFlat(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputFlat(index, newValue);
        }
      }
    }
    `}};var Pue=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:i}=e,{cropSize:a,method:u,extrapolationValue:l}=n,p=new jA(o.shape[3],s.shape,a,u),c=[{type:"float32",data:[l]}];return t.runWebGPUProgram(p,[o,s,i],"float32",c)},IW={kernelName:Ys,backendName:"webgpu",kernelFunc:Pue};var HA=class{constructor(e,t){this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.uniforms="blockSize : i32;";this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${ve()}
        if (index < uniforms.size) {
          let coords = getCoordsFromFlatIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputFlat(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Fue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:i}=n,a=o.shape[0],u=i==="NHWC"?o.shape[1]:o.shape[2],l=i==="NHWC"?o.shape[2]:o.shape[3],p=i==="NHWC"?o.shape[3]:o.shape[1],c=u*s,m=l*s,f=p/(s*s),d=i==="NHWC"?[a,c,m,f]:[a,f,c,m],h=[{type:"int32",data:[s]}],g=new HA(d,i);return t.runWebGPUProgram(g,[o],o.dtype,h)}var CW={kernelName:Qs,backendName:"webgpu",kernelFunc:Fue};var xg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;";this.workGroupSize=[4,4,4];this.isVec4=!0;this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let s=Qr(this.activation,this.isVec4);this.hasPreluActivation?e=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
          ${s}
        }`:e=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
            ${s}
          }
        `,t="dotProd[i] = activation(dotProd[i], coords);"}let n=this.addBias?"dotProd[i] = dotProd[i] + getBiasAtOutCoordsByCoords(coords);":"";return`
      ${e}

      ${$m()}
      fn main([[builtin(global_invocation_id)]] globalId: vec3<u32>) {
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${n}
            ${t}
            setOutput(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}};var Tg=class{constructor(e,t=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;";this.workGroupSize=[256,1,1];this.outputShape=e.outShape,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),b.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwise_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.activation}_${this.convInfo.outChannels/this.convInfo.inChannels}`}getUserCode(){let e=this.convInfo.outChannels/this.convInfo.inChannels,t="",n="";if(this.activation){let i=Qr(this.activation,!1);this.hasPreluActivation?t=`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
          let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
          ${i}
        }`:t=`
          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
            ${i}
          }
        `,n="dotProd = activation(dotProd, coords);"}let o=this.addBias?"dotProd = dotProd + getBiasAtOutCoordsByCoords(coords);":"";return`
      ${t}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutput(batch, row, col, chan, value);
        }
      }

      ${sg()} {
        let coords = getOutputCoordsWithFlatDispatchLayout(globalId, localId, numWorkgroups);
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / ${e};
        let q = d2 - d1 * ${e};

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + ${this.convInfo.filterHeight} * uniforms.dilation[0];
        let inputColEnd = inputColStart + ${this.convInfo.filterWidth} * uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] && inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${o}
        ${n}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function Mue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u,dimRoundingMode:l}=n,p=u;p==null&&(p=[1,1]);let c=I.computeConv2DInfo(o.shape,s.shape,i,p,a,l,!0),m;c.batchSize===1&&c.inHeight===c.outHeight&&c.inWidth===c.outWidth&&c.strideHeight===1&&c.strideWidth===1&&c.filterHeight===c.filterWidth&&c.inChannels===c.outChannels&&c.filterHeight===3&&c.inChannels%4==0?m=new xg(c):m=new Tg(c);let f=[{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]}];return t.runWebGPUProgram(m,[o,s],o.dtype,f)}var vW={kernelName:lo,backendName:"webgpu",kernelFunc:Mue};var qA=At({opSnippet:Re.MUL,cpuKernelImpl:OG,supportsComplex:!0}),wW={kernelName:So,backendName:"webgpu",kernelFunc:qA};var XA=class{constructor(e,t){this.workGroupSize=[64,1,1];this.variableNames=["x"];this.uniforms="reduceSize : i32;";this.size=!0;this.inputShape=[e.batchSize,e.inSize];let[n]=I.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isNanCustom(candidate)) {
          bestValue = uniforms.NAN;
         } elseif (!isNanCustom(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x.numbers[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n=this.reduceType==="mean"?"setOutputFlat(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputFlat(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromFlatIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${ve()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x.numbers[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function gi(r,e,t,n,o){let s=r.shape.length,i=[],a=b.parseAxisParam(e,r.shape),u=a,l=I.getAxesPermutation(u,s),p=r;l!=null&&(p=Jo({inputs:{x:r},attrs:{perm:l},backend:o}),u=I.getInnerMostAxes(u.length,s),i.push(p)),I.assertAxesAreInnerMostDims(n,u,s);let[c,m]=I.computeOutAndReduceShapes(p.shape,u),f=c;t&&(f=I.expandShapeToKeepDim(c,a));let d;if((n==="max"||n==="prod")&&o.shouldExecuteOnCPU([p])){let h=o.tensorMap.get(p.dataId).values;switch(n){case"max":let g=LG(h,b.sizeFromShape(m),f,r.dtype);d=o.makeTensorInfo(f,r.dtype,g);break;case"prod":let{outVals:x,outShape:y,outDtype:T}=WG(p.shape,p.dtype,h,u);d=o.makeTensorInfo(y,T,x);break;default:throw new Error(`${n} CPU implementation is not yet supported.`)}}else{let h=b.sizeFromShape(m),x=b.sizeFromShape(p.shape)/h,y={windowSize:h,inSize:h,batchSize:x,outSize:1},T=n==="mean"?"float32":Ui(r.dtype),k=[{type:"int32",data:[h]}],C=new XA(y,n),N=o.runWebGPUProgram(C,[p],T,k);i.push(N),d=Oe({inputs:{x:N},attrs:{shape:f},backend:o})}return i.forEach(h=>o.disposeData(h.dataId)),d}function kg(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;return gi(o,s,i,"sum",t)}var SW={kernelName:Bo,backendName:"webgpu",kernelFunc:kg};function Eue(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:i,summedDims:a,idDims:u}=I.decodeEinsumEquation(o,s.length);I.checkEinsumDimSizes(i.length,u,s);let{path:l,steps:p}=I.getEinsumComputePath(a,u),c=p.length,m=null,f=i.length,d=[];for(let h=0;h<c;++h){for(let g of p[h]){let{permutationIndices:x,expandDims:y}=I.getEinsumPermutation(f,u[g]),T;I.isIdentityPermutation(x)?T=s[g]:(T=Jo({inputs:{x:s[g]},backend:t,attrs:{perm:x}}),d.push(T));let k=T.shape.slice();for(let C=0;C<y.length;++C)k.splice(y[C],0,1);b.arraysEqual(T.shape,k)||(T=Oe({inputs:{x:T},backend:t,attrs:{shape:k}}),d.push(T)),m===null?m=T:(m=qA({inputs:{a:T,b:m},backend:t}),d.push(m))}h<c-1&&(l[h]>=0&&(m=kg({inputs:{x:m},backend:t,attrs:{axis:l[h]-(i.length-f),keepDims:!1}}),d.push(m)),f--)}for(let h of d)h!==m&&t.disposeData(h.dataId);return m}var _W={kernelName:Mu,backendName:"webgpu",kernelFunc:Eue};var Rue=ft({opType:_e.ELU}),AW={kernelName:co,backendName:"webgpu",kernelFunc:Rue};var Lue=At({opSnippet:Re.EQUAL,dtype:"bool",cpuKernelImpl:wG}),NW={kernelName:Zs,backendName:"webgpu",kernelFunc:Lue};var YA=ft({opType:_e.EXP,cpuKernelImpl:SG,dtype:"float32"}),DW={kernelName:mo,backendName:"webgpu",kernelFunc:YA};function jx(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,i=s.shape.length,a=s.shape.slice(),u=o;return o<0&&(b.assert(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+o+1),a.splice(u,0,1),Oe({inputs:{x:s},backend:n,attrs:{shape:a}})}var PW={kernelName:ps,backendName:"webgpu",kernelFunc:jx};var Bue=ft({opType:_e.EXPM1,cpuKernelImpl:_G}),FW={kernelName:Js,backendName:"webgpu",kernelFunc:Bue};var QA=class{constructor(e){this.variableNames=[];this.outputShape=[];this.uniforms="value : f32;";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${ve()}
      if (index < uniforms.size) {
        setOutputFlat(index, uniforms.value);
      }
    }
  `}};function za(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||b.inferDtype(o),s==="string"){let i=b.getArrayFromDType(s,b.sizeFromShape(n));return i.fill(o),e.makeTensorInfo(n,s,i)}else{let i=new QA(n),a=[{type:"float32",data:[o]}];return e.runWebGPUProgram(i,[],s,a)}}var MW={kernelName:Va,backendName:"webgpu",kernelFunc:za};var ZA=class{constructor(e){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${ve()}
        if (index < uniforms.size) {
          let coords = getCoordsFromFlatIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputFlat(index, outputValue);
        }
      }
    `}};var EW={kernelName:ea,backendName:"webgpu",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new ZA(t.shape);return n.runWebGPUProgram(o,[t],t.dtype)}};var $ue=ft({opType:_e.FLOOR,cpuKernelImpl:AG}),RW={kernelName:fo,backendName:"webgpu",kernelFunc:$ue};var Oue=At({opSnippet:Re.INT_DIV,dtype:"int32"}),LW={kernelName:ho,backendName:"webgpu",kernelFunc:Oue};var BW=(r,e,t,n,o)=>{let s=[n,...t];return o&&s.push(o),r.createBindGroup({layout:e,entries:s.map((i,a)=>({binding:a,resource:i}))})},Hx=(r,e,t,n,o,s=!1)=>{let i={dtype:o.dtype,shape:o.shape},a=mG(n,i,e,s),u=r.createShaderModule({code:a});return r.createComputePipeline({layout:t,compute:{module:u,entryPoint:"main"}})};function qx(r,e,t,n="",o=""){return r.shaderKey+"_"+(r.workGroupSize?r.workGroupSize.join(","):"")+e.map(i=>i.length).join(",")+t.join(",")+r.variableNames.join(",")+n+o}function JA(r){let{externalImage:e,backend:t,attrs:n,outShape:o,useImport:s}=r,{numChannels:i}=n,a=b.sizeFromShape(o),u=b.computeStrides(o),l=t.makeTensorInfo(o,"int32"),p=t.getFromPixelsProgram(s?"import":"copyExternal");p.updateOutputShape(o);let c=[l.shape],m=[l.dtype,s?"import":"copyExternal"],f=qx(p,c,m),d=p.getLayout(t.device),h=t.getAndSavePipeline(f,()=>Hx(t.device,p,d.pipelineLayout,[],l,!0));p.setPipeline(h),s||t.queue.copyExternalImageToTexture({source:e,origin:{x:0,y:0}},{texture:p.makeInputTexture(t.device,o[1],o[0])},[o[1],o[0]]);let g=t.tensorMap.get(l.dataId);g.bufferInfo.buffer=t.acquireBuffer(g.bufferInfo.byteSize);let x=[a,i,...u,...p.dispatch];p.setUniform(t.device,x);let y;if(s){let T={source:e};y=t.device.importExternalTexture(T)}else y=p.inputTexture.createView();return t.runFromPixelsProgram(p,g.bufferInfo.buffer,d,y,l.dataId),l}var $W={kernelName:Cl,backendName:"webgpu",kernelFunc:zue},zm;function zue(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n;if(o==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let i=typeof HTMLVideoElement!="undefined"&&o instanceof HTMLVideoElement,a=typeof HTMLImageElement!="undefined"&&o instanceof HTMLImageElement,u=typeof HTMLCanvasElement!="undefined"&&o instanceof HTMLCanvasElement||typeof OffscreenCanvas!="undefined"&&o instanceof OffscreenCanvas,l=typeof ImageBitmap!="undefined"&&o instanceof ImageBitmap,[p,c]=i?[o.videoWidth,o.videoHeight]:[o.width,o.height],m=[c,p,s];if($().getBool("WEBGPU_USE_IMPORT")&&i)return JA({externalImage:o,backend:t,attrs:n,outShape:m,useImport:!0});if((i||a)&&(zm==null&&(zm=document.createElement("canvas").getContext("2d")),zm.canvas.width=p,zm.canvas.height=c,zm.drawImage(o,0,0,p,c),o=zm.canvas),l||u||i||a)return JA({externalImage:o,backend:t,attrs:n,outShape:m,useImport:!1});let f=o.data,d=f;if(s!=null&&s!==4){d=new Uint8Array(o.width*o.height*s);let x=f.length,y=0;for(let T=0;T<x;T++)T%4<s&&(d[y++]=f[T])}let h=t.makeTensorInfo(m,"int32"),g=t.tensorMap.get(h.dataId);return g.values=new Int32Array(d),t.maybeReleaseBuffer(h.dataId),t.uploadToGPU(h.dataId),h}var eN=class{constructor(e,t,n,o,s){this.uniforms="varianceEpsilon : f32;";this.workGroupSize=[128,1,1];this.size=!0;this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),o!=null&&(I.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset")),s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale")),this.offsetShape=o,this.scaleShape=s,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetAtOutCoordsByGlobalIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleAtOutCoordsByGlobalIndex(index)"),`
      ${ve()}
        if (index < uniforms.size)
        {
          let xValue = getXAtOutCoordsByGlobalIndex(index);
          let meanValue = getMeanAtOutCoordsByGlobalIndex(index);
          let varianValue = getVarianceAtOutCoordsByGlobalIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputFlat(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}};var OW={kernelName:go,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n,scale:o,offset:s,mean:i,variance:a}=r,{varianceEpsilon:u}=e,l=t,p=[n,i,a],c=null;s!=null&&(c=s.shape,p.push(s));let m=null;o!=null&&(m=o.shape,p.push(o));let f=new eN(n.shape,i.shape,a.shape,c,m),d=[{type:"float32",data:[u]}];return l.runWebGPUProgram(f,p,n.dtype,d)}};function Gue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dataFormat:p,dilations:c,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=I.convertConv2DDataFormat(p),g=I.computeConv2DInfo(o.shape,s.shape,u,c,l,m,!1,h),x=i!=null,y=a!=null,T;if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))return Vx({x:o,filter:s,convInfo:g,backend:t,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:d});let k=$().getBool("WEBGPU_USE_NAIVE_CONV2D"),C=g.inChannels%4==0&&g.outChannels%4==0,N=[g.padInfo.top,g.padInfo.left],A=[{type:"int32",data:[g.filterHeight,g.filterWidth]},{type:"int32",data:[...N]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]}];if(k)T=new yg(g,x,f,y);else{C?T=new gg(g,x,f,y):T=new bg(g,x,f,y);let E=g.outShape[1]*g.outShape[2],B=g.outShape[3],W=g.filterHeight*g.filterWidth*g.inShape[3];A.push({type:"int32",data:[E]},{type:"int32",data:[B]},{type:"int32",data:[W]})}let M=[o,s];return x&&M.push(i),y&&M.push(a),t.runWebGPUProgram(T,M,o.dtype,A)}var zW={kernelName:vs,backendName:"webgpu",kernelFunc:Gue};function Wue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dilations:p,dimRoundingMode:c,activation:m}=n,f=p;f==null&&(f=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(u,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`);let d=I.computeConv2DInfo(o.shape,s.shape,u,f,l,c,!0),h=[o,s],g=i!=null,x=a!=null;g&&h.push(i),x&&h.push(a);let y;d.batchSize===1&&d.inHeight===d.outHeight&&d.inWidth===d.outWidth&&d.strideHeight===1&&d.strideWidth===1&&d.filterHeight===d.filterWidth&&d.inChannels===d.outChannels&&d.filterHeight===3&&d.inChannels%4==0?y=new xg(d,g,m,x):y=new Tg(d,g,m,x);let T=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]}];return t.runWebGPUProgram(y,h,"float32",T)}var GW={kernelName:ws,backendName:"webgpu",kernelFunc:Wue};var tN=class{constructor(e,t){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32; strides : ${Zt(e)};`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${ve()}
        if (index < uniforms.size) {
          let coords = getCoordsFromFlatIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputFlat(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function Uue(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,i=s[s.length-1],a=b.sizeFromShape(n.shape),[u,l,p,c]=I.prepareAndValidate(n,o),m=Oe({inputs:{x:o},backend:t,attrs:{shape:[l,i]}}),f=Oe({inputs:{x:n},backend:t,attrs:{shape:[b.sizeFromShape(n.shape)/p,p]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let y=t.readSync(o.dataId),T=t.bufferSync(n),k=NG(y,T,n.dtype,l,i,p,c,n.shape,a);return t.makeTensorInfo(u,n.dtype,k.values)}let d=new tN(i,[l,p]),h=[{type:"int32",data:[i]},{type:"int32",data:c}],g=t.runWebGPUProgram(d,[f,m],f.dtype,h),x=Oe({inputs:{x:g},backend:t,attrs:{shape:u}});return t.disposeData(m.dataId),t.disposeData(f.dataId),t.disposeData(g.dataId),x}var WW={kernelName:ta,backendName:"webgpu",kernelFunc:Uue};var rN=class{constructor(e,t){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=Kue(this.aShape,"i32");return`
      ${ve()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromFlatIndex(index);
          setOutputFlat(index, getA(${e}));
        }
      }
    `}};function Kue(r,e="int"){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push(`${e}(getIndices(resRC.x, resRC.z))`):n.push(`${t[o]}`);return n.join()}function nN(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:i,batchDims:a}=n,u=b.parseAxisParam(i,o.shape)[0],l=I.segment_util.collectGatherOpShapeInfo(o,s,u,a),p=b.sizeFromShape(s.shape),c=[],m=Oe({inputs:{x:o},backend:t,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=Oe({inputs:{x:s},backend:t,attrs:{shape:[l.batchSize,p/l.batchSize]}});c.push(m),c.push(f);let d=[l.batchSize,l.outerSize,p/l.batchSize,l.sliceSize];if(t.shouldExecuteOnCPU([o,s])){let T=t.tensorMap.get(f.dataId).values,k=Ce(f.shape,f.dtype,T),N=t.tensorMap.get(m.dataId).values,A=Ce(m.shape,m.dtype,N),M=DG(A,k,d);return c.forEach(E=>t.disposeData(E.dataId)),t.makeTensorInfo(l.outputShape,M.dtype,M.values)}let h=new rN(m.shape,d),g=t.runWebGPUProgram(h,[m,f],m.dtype);c.push(g);let x=Oe({inputs:{x:g},backend:t,attrs:{shape:l.outputShape}});return c.forEach(y=>t.disposeData(y.dataId)),x}var UW={kernelName:cs,backendName:"webgpu",kernelFunc:nN};var Vue=At({opSnippet:Re.GREATER,cpuKernelImpl:FG,dtype:"bool"}),KW={kernelName:ra,backendName:"webgpu",kernelFunc:Vue};var jue=At({opSnippet:Re.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:PG}),VW={kernelName:bo,backendName:"webgpu",kernelFunc:jue};var Hue=At({opSnippet:Re.LESS,dtype:"bool",cpuKernelImpl:EG}),jW={kernelName:oa,backendName:"webgpu",kernelFunc:Hue};var que=At({opSnippet:Re.LESS_EQUAL,dtype:"bool",cpuKernelImpl:MG}),HW={kernelName:sa,backendName:"webgpu",kernelFunc:que};var Xue=ft({opType:_e.LOG,cpuKernelImpl:RG}),qW={kernelName:yo,backendName:"webgpu",kernelFunc:Xue};var Yue=At({opSnippet:Re.LOGICAL_AND,dtype:"bool"}),XW={kernelName:aa,backendName:"webgpu",kernelFunc:Yue};var Que=ft({opType:_e.LOGICAL_NOT}),YW={kernelName:Ri,backendName:"webgpu",kernelFunc:Que};function oN(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:i}=n;return gi(o,s,i,"max",t)}var QW={kernelName:xo,backendName:"webgpu",kernelFunc:oN};var Zue=At({opSnippet:Re.MAX,cpuKernelImpl:BG}),ZW={kernelName:To,backendName:"webgpu",kernelFunc:Zue};function Jue(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,l=1,p=I.computePool2DInfo(o.shape,s,i,l,a,u),c,m=[];if(p.filterHeight===1&&p.filterWidth===1){if(b.arraysEqual(p.inShape,p.outShape))return vr({inputs:{x:o},backend:t});c=new hg(p),m.push({type:"int32",data:[p.strideHeight,p.strideWidth]})}else c=new dg(p,"max"),m.push({type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]});return t.runWebGPUProgram(c,[o],o.dtype,m)}var JW={kernelName:ko,backendName:"webgpu",kernelFunc:Jue};function ele(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{keepDims:s,axis:i}=n;return gi(o,i,s,"mean",t)}var eU={kernelName:Io,backendName:"webgpu",kernelFunc:ele};function tle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;return gi(o,s,i,"min",t)}var tU={kernelName:Co,backendName:"webgpu",kernelFunc:tle};var rle=At({opSnippet:Re.MIN,cpuKernelImpl:$G}),rU={kernelName:vo,backendName:"webgpu",kernelFunc:rle};var sN=class{constructor(e,t,n){this.uniforms="";this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t.map((o,s)=>o[0]+e[s]+o[1]),this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((o,s)=>{this.uniforms+=` pad${s} : vec2<i32>;`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((l,p)=>`uniforms.pad${p}[0]`).join(","),n=this.xShape.map((l,p)=>`uniforms.pad${p}[0] + uniforms.xShape${e>1?`[${p}]`:""}`).join(","),o=e===1?"start":"start[i]",s=e===1?"end":"end[i]",i=e===1?"outC":"outC[i]",a=Zt(e),u=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${ve()}
        if (index < uniforms.size) {
          let start = ${a}(${t});
          let end = ${a}(${n});
          var outC = getCoordsFromFlatIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${i} < ${o}) {
              ${i} = ${o} * 2 - ${i} - ${this.offset};
            } elseif(${i} >= ${s}) {
              ${i} = (${s} - 1) * 2 - ${i} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputFlat(index, getX(${u}));
        }
      }
    `}};var nU={kernelName:wo,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{paddings:o,mode:s}=e,i=t,a=o.map(p=>({type:"int32",data:[p[0],p[1]]})),u=new sN(n.shape,o,s);return i.runWebGPUProgram(u,[n],n.dtype,a)}};function nle(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.tensorMap.get(n.dataId),[i,a]=zG(s.values,n.shape,n.dtype);return t.makeTensorInfo(a,n.dtype,i)}let o=new yu(n.shape,_e.NEG);return t.runWebGPUProgram(o,[n],n.dtype)}var oU={kernelName:ms,backendName:"webgpu",kernelFunc:nle};function ole(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u}=n,l=t.readSync(o.dataId),p=t.readSync(s.dataId),{selectedIndices:c}=xr.nonMaxSuppressionV3Impl(l,p,i,a,u);return t.makeTensorInfo([c.length],"int32",new Int32Array(c))}var sU={kernelName:ua,backendName:"webgpu",kernelFunc:ole};function sle(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=n,p=t.readSync(o.dataId),c=t.readSync(s.dataId),m=i,f=a,d=u,h=l,{selectedIndices:g,selectedScores:x}=xr.nonMaxSuppressionV5Impl(p,c,m,f,d,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}var aU={kernelName:la,backendName:"webgpu",kernelFunc:sle};function Ig(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=xu({inputs:{input:n},backend:t}),s=Ig({inputs:{x:o},backend:t}),i=Mp({inputs:{input:n},backend:t}),a=Ig({inputs:{x:i},backend:t}),u=$a({inputs:{real:s,imag:a},backend:t});return t.disposeData(o.dataId),t.disposeData(s.dataId),t.disposeData(i.dataId),t.disposeData(a.dataId),u}else return za({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var iU={kernelName:ks,backendName:"webgpu",kernelFunc:Ig};function uU(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=xu({inputs:{input:n},backend:t}),s=uU({inputs:{x:o},backend:t}),i=Mp({inputs:{input:n},backend:t}),a=Ig({inputs:{x:i},backend:t}),u=$a({inputs:{real:s,imag:a},backend:t});return t.disposeData(o.dataId),t.disposeData(s.dataId),t.disposeData(i.dataId),t.disposeData(a.dataId),u}else return za({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var lU={kernelName:fs,backendName:"webgpu",kernelFunc:uU};function ale(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return jx({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,i=e[0].dtype;e.forEach(p=>{b.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),b.assert(i===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],u=e.map(p=>{let c=jx({inputs:{input:p},backend:t,attrs:{dim:o}});return a.push(c),c}),l=WA({inputs:u,backend:t,attrs:{axis:o}});return a.forEach(p=>t.disposeData(p.dataId)),l}var pU={kernelName:ds,backendName:"webgpu",kernelFunc:ale};var aN=class{constructor(e,t){this.variableNames=["x"];this.uniforms="constantValue : f32;";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t.map((n,o)=>n[0]+e[o]+n[1]),this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,o)=>{this.uniforms+=` pad${o} : vec2<i32>;`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=Zt(e),n=this.xShape.map((c,m)=>`uniforms.pad${m}[0]`).join(","),o=this.xShape.map((c,m)=>`uniforms.pad${m}[0] + uniforms.xShape${e>1?`[${m}]`:""}`).join(","),s=e>1?`${t}(${n})`:`${n}`,i=e>1?`${t}(${o})`:`${o}`,a=e>1?"any(outC < start)":"outC < start",u=e>1?"any(outC >= end)":"outC >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${ve()}
        if (index < uniforms.size) {
          let start = ${s};
          let end = ${i};
          let outC = getCoordsFromFlatIndex(index);

          if (${a} || ${u}) {
            setOutputFlat(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputFlat(index, getX(${l}));
          }
        }
      }
    `}};var iN=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:i}=n;if(s.every(l=>b.arraysEqual(l,[0,0])))return vr({inputs:{x:o},backend:t});if(b.sizeFromShape(o.shape)===0){let l=s.map((p,c)=>p[0]+o.shape[c]+p[1]);return za({backend:t,attrs:{shape:l,value:i,dtype:o.dtype}})}let a=[{type:"float32",data:[i]}];s.map(l=>a.push({type:"int32",data:[l[0],l[1]]}));let u=new aN(o.shape,s);return t.runWebGPUProgram(u,[o],o.dtype,a)},cU={kernelName:_o,backendName:"webgpu",kernelFunc:iN};var ile=At({opSnippet:Re.POW}),mU={kernelName:Ao,backendName:"webgpu",kernelFunc:ile};function ule(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=new mg(Re.PRELU,n.shape,o.shape);return t.runWebGPUProgram(s,[n,o],"float32")}var fU={kernelName:No,backendName:"webgpu",kernelFunc:ule};function lle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;return gi(o,s,i,"prod",t)}var dU={kernelName:ca,backendName:"webgpu",kernelFunc:lle};var ple=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:i}=t,a=UG(n,o,s,i);return e.makeTensorInfo([a.length],i,a)},hU={kernelName:ja,backendName:"webgpu",kernelFunc:ple};var uN=At({opSnippet:Re.DIV}),gU={kernelName:po,backendName:"webgpu",kernelFunc:uN};var cle=ft({opType:_e.RELU}),bU={kernelName:Do,backendName:"webgpu",kernelFunc:cle};var mle=ft({opType:_e.RELU6}),yU={kernelName:Fo,backendName:"webgpu",kernelFunc:mle};var lN=class{constructor(e,t,n){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>; halfPixelCenters : f32;";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${ve()}
        if (index < uniforms.size) {
        let coords = getCoordsFromFlatIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputFlat(index, newValue);
        }
      }
    `}};function fle(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,size:i,halfPixelCenters:a}=n,[u,l]=i,p=s&&u>1?1:0,c=s&&l>1?1:0,f=[{type:"float32",data:[p,c]},{type:"float32",data:[a?.5:0]}],d=new lN(o.shape,u,l);return t.runWebGPUProgram(d,[o],"float32",f)}var xU={kernelName:Po,backendName:"webgpu",kernelFunc:fle};var pN=class{constructor(e,t,n,o){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>; roundBase : f32;";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=o,this.shaderKey=`resizeNearest_${o}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${ve()}
        if (index < uniforms.size) {
          let coords = getCoordsFromFlatIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputFlat(index, newValue);
        }
      }
    `}};function dle(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:a}=n,[u,l]=a,p=s&&u>1?1:0,c=s&&l>1?1:0,f=[{type:"float32",data:[p,c]},{type:"float32",data:[s?.5:0]}],d=new pN(o.shape,u,l,i);return t.runWebGPUProgram(d,[o],o.dtype,f)}var TU={kernelName:Ha,backendName:"webgpu",kernelFunc:dle};var cN=class{constructor(e,t){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32; centerY : f32; sinRadians : f32;
          cosRadians : f32;`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32;",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>;",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${ve()}

          if (index < uniforms.size) {
            let coords = getCoordsFromFlatIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputFlat(index, outputValue);
          }
        }
      `}};var kU={kernelName:Ta,backendName:"webgpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:i}=e,a=t,u=new cN(n.shape,s),[l,p]=I.getImageCenter(i,n.shape[1],n.shape[2]),c=[{type:"float32",data:[l]},{type:"float32",data:[p]},{type:"float32",data:[Math.sin(o)]},{type:"float32",data:[Math.cos(o)]}];return typeof s=="number"?c.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):c.push({type:"float32",data:s}),a.runWebGPUProgram(u,[n],n.dtype,c)}};var hle=ft({opType:_e.RSQRT,cpuKernelImpl:KG}),IU={kernelName:Mo,backendName:"webgpu",kernelFunc:hle};var mN=class{constructor(e,t,n,o,s,i,a){this.variableNames=["updates","indices"];this.workGroupSize=[64,1,1];this.atomic=!0;this.outputShape=i,this.type=a,this.dispatchLayout=Ie(e),this.dispatch=fe(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${o}_${this.sliceDimGreaterThanOne}_${a}`;let u=Zt(s.length);this.uniforms=`sliceDim : i32; strides: ${u}; size: i32;`,this.updatesRank=o,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",o="",s="",i="";this.updatesRank===1?(o="coords[0]",s="flattenedIndex",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.updatesRank===2&&(o="coords[0], coords[1]",s="vec2<i32>(flattenedIndex, coords[1])",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        let d0 = index / uniforms.updatesShape[1];
        let d1 = index - d0 * uniforms.updatesShape[1];
        return vec2<i32>(d0, d1);
      }
      `);let a=`getUpdates(${o})`,u=this.type==="int32"?"atomicAdd(&(result.numbers[flatIndex]), i32(updateValue));":`
     var assumed = atomicLoad(&(result.numbers[flatIndex]));
     var success = 0;
     for (; success == 0;) {
       let new = bitcast<f32>(assumed) + updateValue;
       let newI32 = bitcast<i32>(new);
       let resValue = atomicCompareExchangeWeak(&(result.numbers[flatIndex]), assumed, newI32);
       assumed = resValue[0];
       success = resValue[1];
     }
     `;return`
    ${i}

      ${ve()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue = ${a};
          let flatIndex = getOutputFlatIndex(${s});

         ${u}
        }
      }`}};function gle(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:i}=n,{sliceRank:a,numUpdates:u,sliceSize:l,strides:p,outputSize:c}=I.calculateShapes(s,o,i),m=[c/l,l];if(c===0)return t.makeTensorInfo(i,o.dtype);let f=Oe({inputs:{x:o},backend:t,attrs:{shape:[u,a]}}),d=Oe({inputs:{x:s},backend:t,attrs:{shape:[u,l]}}),h=d.dtype,g=za({backend:t,attrs:{shape:m,value:0,dtype:h}}),x=b.sizeFromShape(d.shape),y=[{type:"int32",data:[a]},{type:"int32",data:p},{type:"int32",data:[x]}],T=new mN(d.shape,a,f.shape.length,d.shape.length,p,m,h),k=t.runWebGPUProgram(T,[d,f],h,y,g),C=Oe({inputs:{x:k},backend:t,attrs:{shape:i}});return t.disposeData(f.dataId),t.disposeData(d.dataId),t.disposeData(k.dataId),C}var CU={kernelName:da,backendName:"webgpu",kernelFunc:gle};var fN=class{constructor(e,t,n){this.variableNames=["c","a","b"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let a=0;a<this.outputShape.length;a++)i.push(`${o[a]}`),a<this.cRank&&s.push(`${o[a]}`);e=s.join(),t=i.join()}return`
      ${ve()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromFlatIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputFlat(index, getA(${t}));
          } else {
            setOutputFlat(index, getB(${t}));
          }
        }
      }
    `}};function ble(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,i=new fN(n.shape.length,o.shape,o.shape.length);return t.runWebGPUProgram(i,[n,o,s],Kt(o.dtype,s.dtype))}var vU={kernelName:gs,backendName:"webgpu",kernelFunc:ble};var yle=ft({opType:_e.SIGMOID}),wU={kernelName:Ro,backendName:"webgpu",kernelFunc:yle};var xle=ft({opType:_e.SIN}),SU={kernelName:Eo,backendName:"webgpu",kernelFunc:xle};var Tle=ft({opType:_e.SINH}),_U={kernelName:ha,backendName:"webgpu",kernelFunc:Tle};var dN=At({opSnippet:Re.SUB,cpuKernelImpl:XG,supportsComplex:!0}),AU={kernelName:zo,backendName:"webgpu",kernelFunc:dN};function kle(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,i=b.parseAxisParam([s],o.shape),a=oN({inputs:{x:o},backend:t,attrs:{reductionIndices:i,keepDims:!1}}),u=I.expandShapeToKeepDim(a.shape,i),l=Oe({inputs:{x:a},backend:t,attrs:{shape:u}}),p=dN({inputs:{a:o,b:l},backend:t}),c=YA({inputs:{x:p},backend:t}),m=kg({inputs:{x:c},backend:t,attrs:{axis:i,keepDims:!1}}),f=Oe({inputs:{x:m},backend:t,attrs:{shape:u}}),d=uN({inputs:{a:c,b:f},backend:t});return t.disposeData(a.dataId),t.disposeData(l.dataId),t.disposeData(p.dataId),t.disposeData(c.dataId),t.disposeData(m.dataId),t.disposeData(f.dataId),d}var NU={kernelName:$o,backendName:"webgpu",kernelFunc:kle};var Ile=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:i}=n;b.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let a=s.reduce((x,y)=>x*y),u=[[0,0]];u.push(...i);for(let x=1+s.length;x<o.shape.length;++x)u.push([0,0]);let l=[],p=iN({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),c=I.getReshaped(p.shape,s,a,!1),m=I.getPermuted(c.length,s.length,!1),f=I.getReshapedPermuted(p.shape,s,a,!1),d=Oe({inputs:{x:p},backend:t,attrs:{shape:c}}),h=Jo({inputs:{x:d},backend:t,attrs:{perm:m}}),g=Oe({inputs:{x:h},backend:t,attrs:{shape:f}});return l.push(p),l.push(d),l.push(h),l.forEach(x=>t.disposeData(x.dataId)),g},DU={kernelName:ys,backendName:"webgpu",kernelFunc:Ile};var hN=class{constructor(e,t,n,o,s,i,a=!0){this.variableNames=["updates","indices","defaultValue"];this.workGroupSize=[64,1,1];this.workPerThread=4;this.size=!0;this.outputShape=i,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let u=t>1;this.shaderKey=`scatter_${n}_${o}_${u}`;let l=Zt(s.length);this.uniforms=`updateSize : i32; sliceDim : i32; strides: ${l};`;let p="";n===1?p="i":n===2&&(p="i, j"),this.indicesSnippet=`getIndices(${p})`;let c="";o===1?c="i":o===2&&(c="i, coords[1]"),this.updatesSnippet=`getUpdates(${c})`,this.strideString=u?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${ve()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromFlatIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputFlat(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function Cle(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:i}=e,{outputShape:a}=n,{sliceRank:u,numUpdates:l,strides:p,outputSize:c}=I.calculateShapes(s,o,a),m=!1,f=[{type:"int32",data:[l]},{type:"int32",data:[u]},{type:"int32",data:p}],d=new hN(l,u,o.shape.length,s.shape.length,p,[c,1],m),h=t.runWebGPUProgram(d,[s,o,i],s.dtype,f),g=Oe({inputs:{x:h},backend:t,attrs:{shape:a}});return t.disposeData(h.dataId),g}var PU={kernelName:$u,backendName:"webgpu",kernelFunc:Cle};function vle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:i}=n,a=b.parseAxisParam(i,o.shape)[0],u=I.prepareSplitSize(o,s,a),l=o.shape.length,p=new Array(l).fill(0),c=o.shape.slice();return u.map(m=>{let f=[...c];f[a]=m;let d=Oa({inputs:{x:o},backend:t,attrs:{begin:p,size:f}});return p[a]+=m,d})}var FU={kernelName:xs,backendName:"webgpu",kernelFunc:vle};var wle=ft({opType:_e.SQRT}),MU={kernelName:Lo,backendName:"webgpu",kernelFunc:wle};var EU={kernelName:qa,backendName:"webgpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e,o=new yu(t.shape,_e.SQUARE);return n.runWebGPUProgram(o,[t],t.dtype)}};var Sle=At({opSnippet:Re.SQUARED_DIFFERENCE}),RU={kernelName:Oo,backendName:"webgpu",kernelFunc:Sle};var gN=class{constructor(e){this.variableNames=["x"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=Zt(this.outputShape.length);this.uniforms=`begin : ${t};  strides : ${t}; `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let o=0;t=this.outputShape.map((s,i)=>(o++,this.outputShape.length===1?`coords * uniforms.strides[${i}] + uniforms.begin[${i}]`:`coords[${o-1}] * uniforms.strides[${i}] + uniforms.begin[${i}]`)).join(",")}return`
       ${ve()}
         if (index < uniforms.size) {
           let coords = getCoordsFromFlatIndex(index);
           setOutputFlat(index, getX(${t}));
         }
       }
     `}};function _le(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:i,strides:a,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:c,shrinkAxisMask:m}=n,{finalShapeSparse:f,finalShape:d,isIdentity:h,sliceDim0:g,isSimpleSlice:x,begin:y,end:T,strides:k}=kt.sliceInfo(o.shape,s,i,a,u,l,p,c,m),C;if(h)C=Oe({inputs:{x:o},backend:t,attrs:{shape:d}});else if(g||x){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let N=kt.computeOutShape(y,T,k),A=Oa({inputs:{x:o},backend:t,attrs:{begin:y,size:N}});C=Oe({inputs:{x:A},backend:t,attrs:{shape:d}}),t.disposeData(A.dataId)}else if(t.shouldExecuteOnCPU([o])){let A=t.readSync(o.dataId),M=Ce(o.shape,o.dtype,A),E=HG(f,M,k,y);C=t.makeTensorInfo(d,o.dtype,E.values)}else{let A=new gN(f),M=[{type:"int32",data:y},{type:"int32",data:k}],E=t.runWebGPUProgram(A,[o],o.dtype,M);C=Oe({inputs:{x:E},backend:t,attrs:{shape:d}}),t.disposeData(E.dataId)}return C}var LU={kernelName:ga,backendName:"webgpu",kernelFunc:_le};function Ale(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:i,rightPad:a,padWidth:u,preserveShortSequences:l}=n,{data:p,dataSplits:c}=e,m=t.readSync(p.dataId),f=t.readSync(c.dataId),[d,h]=qG(m,f,o,s,i,a,u,l);return[t.makeTensorInfo([d.length],"string",d),t.makeTensorInfo(c.shape,"int32",h)]}var BU={kernelName:Ou,backendName:"webgpu",kernelFunc:Ale};var Nle=ft({opType:_e.TANH}),$U={kernelName:Go,backendName:"webgpu",kernelFunc:Nle};var bN=class{constructor(e,t){this.variableNames=["A"];this.workGroupSize=[64,1,1];this.size=!0;let n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[o]*t[o];this.outputShape=n,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=Dle(this.rank,"uniforms.");return`
      ${ve()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromFlatIndex(index);
          setOutputFlat(index, getA(${e}));
        }
      }
    `}};function Dle(r,e=""){if(r>=5)throw Error(`Tile for rank ${r} is not yet supported`);if(r===1)return`(resRC % ${e}aShape)`;let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r;o++)n.push(`(${t[o]} % ${e}aShape[${o}])`);return n.join()}function Ple(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(t.shouldExecuteOnCPU([o])||o.dtype==="string"||o.shape.length>=5){let u=t.readSync(o.dataId),l=o.dtype==="string"?u.map(m=>b.decodeString(m)):u,p=Ce(o.shape,o.dtype,l),c=YG(p,s);return t.makeTensorInfo(c.shape,c.dtype,c.values)}let i=new bN(o.shape,s);return t.runWebGPUProgram(i,[o],o.dtype)}var OU={kernelName:vn,backendName:"webgpu",kernelFunc:Ple};var yN=class{constructor(e){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32; firstPass : i32; negativeInf : f32;
        dir : i32; inc : i32;`,this.shaderKey="swap"}getUserCode(){return`
        ${ve()}
          if (index < uniforms.size) {
            let outC = getCoordsFromFlatIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputFlat(index, f32(i0));
            } else {
              setOutputFlat(index, f32(i1));
            }
          }
        }
      `}},xN=class{constructor(e){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32; firstPass : i32; k : i32;",this.shaderKey="merge"}getUserCode(){return`
        ${ve()}
          if (index < uniforms.size) {
            let outC = getCoordsFromFlatIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputFlat(index, f32(i0));
            } else {
              setOutputFlat(index, f32(i1));
            }
          }
        }
      `}};function Gm(r,e){e!==null&&r.disposeData(e.dataId)}function zU(r){let e=1;for(;e<r;)e*=2;return e}function Fle(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:i}=n,a=o.shape,u=a[a.length-1];if(t.shouldExecuteOnCPU([o])){let C=t.readSync(o.dataId),[N,A]=QG(C,a,o.dtype,s,i);return[t.makeTensorInfo(N.shape,N.dtype,N.values),t.makeTensorInfo(A.shape,A.dtype,A.values)]}if(s===0)return a[a.length-1]=0,[t.makeTensorInfo(a,o.dtype,[]),t.makeTensorInfo(a,"int32",[])];if(u===1)return[o,za({attrs:{shape:a,dtype:"int32",value:0},backend:t})];let p=b.sizeFromShape(a)/u,c=Oe({inputs:{x:o},attrs:{shape:[p,u]},backend:t}),m=zU(s),f=zU(u),d=null,h=()=>d===null?[c,c]:[c,d],g=(C,N,A)=>{let M=h(),E=new yN(A),W=[{type:"int32",data:[u]},{type:"int32",data:[d===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[C]},{type:"int32",data:[N]}],U=d;d=t.runWebGPUProgram(E,M,"int32",W),Gm(t,U)};for(let C=1;C<m;C*=2){let N=C*2;for(let A=C;A>=1;A/=2)g(N,A,[p,f])}for(let C=f;C>m;C/=2){let N=h(),A=new xN([p,C/2]),E=[{type:"int32",data:[u]},{type:"int32",data:[d===null?1:0]},{type:"int32",data:[m]}],B=d;d=t.runWebGPUProgram(A,N,"int32",E),Gm(t,B);let W=m/2,U=W*2;for(let K=W;K>=1;K/=2)g(U,K,d.shape)}let x=d;d=Oa({inputs:{x:d},backend:t,attrs:{begin:0,size:[p,s]}}),Gm(t,x);let y=nN({inputs:{x:c,indices:d},backend:t,attrs:{axis:1,batchDims:1}});Gm(t,c);let T=a.slice(0,-1);T.push(s),x=d,d=Oe({inputs:{x:d},attrs:{shape:T},backend:t}),Gm(t,x);let k=y;return y=Oe({inputs:{x:y},attrs:{shape:T},backend:t}),Gm(t,k),[y,d]}var GU={kernelName:ya,backendName:"webgpu",kernelFunc:Fle};var TN=class{constructor(e){this.variableNames=["Image","Transforms"];this.uniforms="interpolationModeId : i32; fillModeId : i32; fillValue : f32;";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } elseif (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } elseif (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } elseif (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } elseif (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${ve()}
            if (index < uniforms.size) {
              let coords = getCoordsFromFlatIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputFlat(index, outputValue);
            }
          }
        `}};function Mle(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:i,fillMode:a,fillValue:u,outputShape:l}=n,[p,c,m,f]=o.shape,[d,h]=l??[c,m],g=[p,d,h,f],x=new TN(g),y=i==="nearest"?1:2,T;switch(a){case"constant":T=1;break;case"reflect":T=2;break;case"wrap":T=3;break;case"nearest":T=4;break;default:T=1;break}let k=[{type:"int32",data:[y]},{type:"int32",data:[T]},{type:"float32",data:[u]}];return t.runWebGPUProgram(x,[o,s],"float32",k)}var WU={kernelName:xa,backendName:"webgpu",kernelFunc:Mle};function Ele(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let i=o,a=i.shape.length,u=o.shape[s],l=new Array(a-1),p=0;for(let h=0;h<a;h++)h!==s&&(l[p++]=i.shape[h]);let c=[],m=new Array(a).fill(0),f=i.shape.slice();f[s]=1;let d=new Array(u);for(let h=0;h<d.length;h++){m[s]=h;let g=Oa({inputs:{x:i},backend:t,attrs:{begin:m,size:f}}),x=Oe({inputs:{x:g},backend:t,attrs:{shape:l}});d[h]=x,c.push(g)}return c.forEach(h=>t.disposeData(h.dataId)),d}var UU={kernelName:Ts,backendName:"webgpu",kernelFunc:Ele};var Rle=[xG,JG,eW,tW,nW,oW,sW,aW,uW,mW,fW,dW,kG,gW,yW,xW,TW,kW,IW,CW,vW,_W,AW,NW,PW,DW,FW,MW,EW,$W,RW,LW,OW,zW,GW,WW,UW,KW,VW,TG,hW,jW,HW,qW,XW,YW,QW,ZW,JW,eU,tU,rU,nU,wW,oU,sU,aU,lW,lU,pU,cU,fU,dU,mU,hU,pW,gU,bU,yU,yG,xU,TU,kU,IU,CU,vU,wU,SU,_U,iW,LU,BU,NU,DU,FU,PU,MU,EU,RU,AU,SW,$U,OU,GU,WU,rW,UU,iU];for(let r of Rle)Wi(r);var kN=class{constructor(e){this.device=e;this.numUsedBuffers=0;this.numFreeBuffers=0;this.freeBuffers=new Map;this.usedBuffers=new Map;this.numBytesUsed=0;this.numBytesAllocated=0}acquireBuffer(e,t){let n=KU(e,t);if(this.freeBuffers.has(n)||this.freeBuffers.set(n,[]),this.usedBuffers.has(n)||this.usedBuffers.set(n,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(n).length>0){this.numFreeBuffers--;let s=this.freeBuffers.get(n).shift();return this.usedBuffers.get(n).push(s),s}this.numBytesAllocated+=e;let o=this.device.createBuffer({size:e,usage:t});return this.usedBuffers.get(n).push(o),o}releaseBuffer(e,t,n){if(this.freeBuffers==null)return;let o=KU(t,n);this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.freeBuffers.get(o).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let s=this.usedBuffers.get(o),i=s.indexOf(e);if(i<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");s.splice(i,1),this.numBytesUsed-=t}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}reset(){this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}dispose(){this.freeBuffers==null&&this.usedBuffers==null||(this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=null,this.usedBuffers=null,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0)}};function KU(r,e){return`${r}_${e}`}var Cg=class{constructor(){this.outputShape=[0];this.variableNames=[];this.workGroupSize=[256,1,1];this.lastUniformData=[];this.inputTexture=null;this.layout=null;this.lastPixelSize={width:0,height:0};this.disposed=!1;this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){b.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=Ie(this.outputShape),this.dispatch=fe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      [[binding(1), group(0)]] var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${ve()}
        let flatIndexBase = index * uniforms.numChannels;
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndexBase);
            let values = ${e};
            result.numbers[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){if(!this.uniform){let n=e.createBuffer({size:t.length*4,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.uniform=n}!t||t.length===this.lastUniformData.length&&t.every((n,o)=>n===this.lastUniformData[o])||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,n){return(!this.inputTexture||this.lastPixelSize.width!==t||this.lastPixelSize.height!==n)&&(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,n],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=n),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return this.layout===null&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),o=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:o}}};var IN=class extends Cg{constructor(){super(...arguments);this.layout=null;this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return this.layout===null&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),o=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:o}}};var Lle=$().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),CN=class extends ss{constructor(e,t=!1){super();this.commandQueueOwnedIds=new WeakSet;this.tensorDisposalQueue=[];this.uniformDisposalQueue=[];this.disposed=!1;this.uploadWaitMs=0;this.downloadWaitMs=0;this.dispatchNumberInEncoder=0;if(!lg())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new kN(this.device),this.tensorMap=new Ga(this,Uo()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),$().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return CN.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:o}=this.tensorMap.get(e);o!=null&&(this.disposeData(o.real.dataId,!0),this.disposeData(o.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);t!=null&&t.bufferInfo.buffer!=null&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()},s=b.sizeFromShape(t)*Wx(n);return n==="bool"&&e instanceof Uint8Array&&(e=Int32Array.from(e)),this.tensorMap.set(o,{dtype:n,values:e,bufferInfo:{byteSize:s,usage:this.defaultGpuBufferUsage()},refCount:1}),o}move(e,t,n,o,s){if(o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let i=b.sizeFromShape(n)*Wx(o);this.tensorMap.set(e,{dtype:o,values:t,bufferInfo:{byteSize:i,usage:this.defaultGpuBufferUsage()},refCount:s})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new Cg),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new IN),this.fromPixelImportProgram;default:b.assert(!1,()=>"Unsupported fromPixels shape");return}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.endPass(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(e.values!=null)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let n=t.getMappedRange().slice(0);return t.unmap(),t!=null&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),$().getBool("WEBGPU_USE_PROFILE_TOOL")&&(b.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let o;if(t.dtype==="complex64"){let s=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),i=s[0],a=s[1];o=I.mergeRealAndImagArrays(i,a)}else{let s=await this.getBufferData(t);o=CA(s,t.dtype)}return this.convertAndCacheOnCPU(e,o),o}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>b.decodeString(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}async time(e){let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=b.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=b.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},u=await Promise.all(s);return a.kernelMs=b.sum(u),a.getExtraProfileInfo=()=>u.map((l,p)=>({name:i[p],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,a}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&b.isString(n[0])){let s=n.map(i=>b.encodeString(i));o=this.write(s,e,t)}else o=this.write(n,e,t);return{dataId:o,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);t.bufferInfo.buffer==null&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values&&this.queue.writeBuffer(t.bufferInfo.buffer,0,t.values))}makeUniformsDataView(e){let t=this.acquireBuffer(e.byteLength,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(t,0,e),{offset:0,size:e.byteLength,buffer:t}}arrayToDataView(e,t){let n=4,o=new DataView(new ArrayBuffer(t*n)),s=0;return e.forEach(i=>{let a=i.data;if(i.type!=="int32"&&i.type!=="float32"&&i.type!=="uint32")throw new Error(`${i.type} not supported!`);i.type==="int32"?a.forEach(u=>{o.setInt32(s*n,u,!0),s++}):i.type==="uint32"?a.forEach(u=>{o.setUint32(s*n,u,!0),s++}):a.forEach(u=>{o.setFloat32(s*n,u,!0),s++})}),o}computePadding(e){let t=0,n=0,o=0,s=[];return e.forEach((i,a)=>{i.data.length===0&&(i.data=[1]);let u;switch(i.data.length){case 0:u=1;break;case 1:u=1;break;case 2:u=2;break;case 3:u=4;break;case 4:u=4;break;default:b.assert(!1,()=>`Unsupported ${i.data.length}D shape`)}n=Math.ceil(t/u)*u-t;for(let l=0;l<n;++l)s.push({type:i.type,data:[0]}),o++;s.push({type:i.type,data:i.data}),o=o+i.data.length,t+=i.data.length+n}),this.arrayToDataView(s,o)}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let s=0;s<e;s++)t.push({binding:s+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t}),o=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:o}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,o,s){if(!s){if(s=this.makeTensorInfo(e.outputShape,n),b.sizeFromShape(s.shape)===0){let E=this.tensorMap.get(s.dataId);return E.values=b.getTypedArrayFromDType(s.dtype,0),s}this.uploadToGPU(s.dataId)}let i=[{type:"float32",data:[NaN]}],a=t.concat(s).map(E=>E.shape),u="int32";a.map(E=>{i.push({type:u,data:E})});let l=b.computeStrides(s.shape);if(i.push({type:u,data:l}),e.size){let E=b.sizeFromShape(e.outputShape);i.push({type:u,data:[e.isVec4?E/4:E]})}o&&(i=[...i,...o]);let p=null,c=this.computePadding(i),m=c.byteLength;p=this.makeUniformsDataView(c);let f=t.map((E,B)=>{if(E.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(E.dataId),{dtype:this.tensorMap.get(E.dataId).dtype,shape:E.shape,name:e.variableNames[B]}}),d=f.map(E=>E.dtype).concat(s.dtype),h=f.map(E=>I.getBroadcastDims(E.shape,s.shape)),g=f.map(E=>b.arraysEqual(E.shape,s.shape)).join("_"),x=h.map(E=>E.join("_")).join(";"),y=qx(e,a,d,x,g),{bindGroupLayout:T,pipelineLayout:k}=this.getCachedOrCreateLayout(e.variableNames.length),C=this.getAndSavePipeline(y,()=>Hx(this.device,e,k,f,s)),N=this.activeTimers!=null,A=BW(this.device,T,t.map(E=>this.tensorToBinding(E)),this.tensorToBinding(s),p);this.ensureCommandEncoderReady();let M=this.getComputePass();if(N&&this.supportTimeQuery&&M.writeTimestamp(this.querySet,0),M.setPipeline(C),M.setBindGroup(0,A),M.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),N&&this.supportTimeQuery&&M.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(E=>{this.commandQueueOwnedIds.add(E.dataId)}),this.commandQueueOwnedIds.add(s.dataId),p){let E={byteSize:m,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:p.buffer};this.uniformDisposalQueue.push(E)}return $().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),N&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),s}runFromPixelsProgram(e,t,n,o,s){let i=this.device.createBindGroup({layout:n.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:o},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();let a=this.getComputePass(),u=this.activeTimers!=null;u&&this.supportTimeQuery&&a.writeTimestamp(this.querySet,0),a.setPipeline(e.pipeline),a.setBindGroup(0,i),a.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),u&&this.supportTimeQuery&&a.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(s),this.submitQueue(),u&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let o=new BigUint64Array(n.getMappedRange()),s=Number(o[1]-o[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),s/1e6}shouldExecuteOnCPU(e,t=Lle){return $().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).bufferInfo.buffer==null&&b.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}},Wm=CN;Wm.nextDataId=0;var VU={};Ye(VU,{WebGPUBackend:()=>Wm,webgpu_util:()=>vA});Ki.isBrowser()&&lg()&&Vu("webgpu",async()=>{$().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let r={powerPreference:$().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(r),t={},n=e.features.has("timestamp-query");n?t={requiredFeatures:["timestamp-query"]}:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let o=await e.requestDevice(t);return new Wm(o,n)},3);var ot;(function(s){s[s.float32=0]="float32",s[s.int32=1]="int32",s[s.bool=2]="bool",s[s.string=3]="string",s[s.complex64=4]="complex64"})(ot||(ot={}));var ml;(function(a){a[a.linear=0]="linear",a[a.relu=1]="relu",a[a.relu6=2]="relu6",a[a.prelu=3]="prelu",a[a.leakyrelu=4]="leakyrelu",a[a.sigmoid=5]="sigmoid",a[a.elu=6]="elu"})(ml||(ml={}));var jU;function Ble(r){jU=r.wasm.cwrap(Cs,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function $le(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:i,preluActivationWeights:a}=e;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:u,transposeB:l,activation:p,leakyreluAlpha:c}=n,m=t.dataIdMap.get(o.dataId).id,f=t.dataIdMap.get(s.dataId).id,d=0;if(i!=null){let M=t.dataIdMap.get(i.dataId);if(M.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${M.shape.length}.`);d=M.id}let h=a==null?0:t.dataIdMap.get(a.dataId).id,g=ml[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);let x=u?o.shape[2]:o.shape[1],y=l?s.shape[1]:s.shape[2],T=Ds.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)),k=t.makeOutput([...T,x,y],o.dtype),C=t.dataIdMap.get(k.dataId).id,N=new Uint8Array(new Int32Array(o.shape).buffer),A=new Uint8Array(new Int32Array(s.shape).buffer);return jU(m,N,o.shape.length,f,A,s.shape.length,u,l,g,d,h,c||0,C),k}var HU={kernelName:Cs,backendName:"wasm",setupFunc:Ble,kernelFunc:$le};function dt(r,e){let t;function n(s){t=s.wasm.cwrap(r,null,["number","number","number"])}function o(s){let{backend:i,inputs:{x:a}}=s,u=i.dataIdMap.get(a.dataId).id,l=i.makeOutput(a.shape,e||a.dtype),p=i.dataIdMap.get(l.dataId).id;return b.sizeFromShape(l.shape)===0||t(u,ot[a.dtype],p),l}return{kernelName:r,backendName:"wasm",setupFunc:n,kernelFunc:o}}var qU=dt(is);function Nt(r,e,t){let n;function o(i){n=i.wasm.cwrap(r,null,["number","array","number","number","array","number","number","number"])}function s(i){let{backend:a,inputs:u}=i,{a:l,b:p}=u,c=a.dataIdMap.get(l.dataId).id,m=a.dataIdMap.get(p.dataId).id,f=t??l.dtype,d=I.assertAndGetBroadcastShape(l.shape,p.shape),h=a.makeOutput(d,f);if(b.sizeFromShape(d)===0)return h;let g=new Uint8Array(new Int32Array(l.shape).buffer),x=new Uint8Array(new Int32Array(p.shape).buffer),y=a.dataIdMap.get(h.dataId).id;return(()=>n(c,g,l.shape.length,m,x,p.shape.length,ot[l.dtype],y))(),h}return{kernelName:r,backendName:"wasm",setupFunc:o,kernelFunc:s}}var Ole=!0,XU=Nt(Cn,Ole);var YU;function zle(r){YU=r.wasm.cwrap(eo,null,["array","number","number","number"])}function Gle(r){let{inputs:e,backend:t}=r,n=t.makeOutput(e[0].shape,e[0].dtype);if(b.sizeFromShape(n.shape)===0)return n;let o=e.map(a=>t.dataIdMap.get(a.dataId).id),s=new Uint8Array(new Int32Array(o).buffer),i=t.dataIdMap.get(n.dataId).id;return YU(s,o.length,ot[n.dtype],i),n}var QU={kernelName:eo,backendName:"wasm",setupFunc:zle,kernelFunc:Gle};function Ep(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype),o=t.typedArrayFromHeap(e);return t.typedArrayFromHeap(n).set(o),n}var ZU={kernelName:Wn,backendName:"wasm",kernelFunc:Ep};var JU;function Wle(r){JU=r.wasm.cwrap(Wo,null,["number","array","number","number","number","array","number"])}function bi(r){let{inputs:e,backend:t,attrs:n}=r,[o,s]=Kle(e.x.shape,n.perm),i=!0;for(let d=0;d<s.length;d++)s[d]!==d&&(i=!1);let a=Ule(e.x.shape,n.perm),u={dataId:e.x.dataId,shape:o,dtype:e.x.dtype};if(i){let d=Ep({inputs:e,backend:t});return d.shape=a,d}let l=t.makeOutput(a,u.dtype),p=t.dataIdMap.get(u.dataId).id,c=t.dataIdMap.get(l.dataId).id,m=new Uint8Array(new Int32Array(s).buffer),f=new Uint8Array(new Int32Array(u.shape).buffer);return JU(p,f,u.shape.length,ot[u.dtype],c,m,s.length),l}function Ule(r,e){let t=new Array(r.length);for(let n=0;n<t.length;n++)t[n]=r[e[n]];return t}function Kle(r,e){let t=[],n=[];for(let o=0;o<r.length;++o)r[o]!==1&&t.push(r[o]),r[e[o]]!==1&&n.push(e[o]);for(let o=0;o<n.length;++o){let s=-1;for(let i=0;i<n.length;++i)n[i]>=o&&(s===-1||n[s]>n[i])&&(s=i);n[s]=o}return[t,n]}var eK={kernelName:Wo,backendName:"wasm",kernelFunc:bi,setupFunc:Wle};function xn(r,e,t){let n=r.shape,o=r.shape.length,s=b.parseAxisParam(e,n),i=s,a=I.getAxesPermutation(i,o),u=null,l=!1;if(a!=null){let p=new Array(o);for(let f=0;f<p.length;f++)p[f]=n[a[f]];i=I.getInnerMostAxes(i.length,o),u=bi({inputs:{x:r},attrs:{perm:a},backend:t});let c=t.dataIdMap.get(r.dataId).id;t.dataIdMap.get(u.dataId).id!==c&&(l=!0)}return{transposed:u,originalAxes:s,axes:i,inputWasTransposed:l}}var tK;function Vle(r){tK=r.wasm.cwrap(Ci,null,["number, number, number"])}function jle(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,u=e.dataIdMap.get(i.dataId).id,l=i,{transposed:p,axes:c,originalAxes:m,inputWasTransposed:f}=xn(i,o,e);if(f){let T=e.dataIdMap.get(p.dataId).id;l=p,u=T}let d=l.shape.length;I.assertAxesAreInnerMostDims("all",c,d);let[h,g]=I.computeOutAndReduceShapes(l.shape,c),x=b.sizeFromShape(g),y=e.makeOutput(h,i.dtype);if(b.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(y.dataId).id;tK(u,x,T)}if(f&&e.disposeData(p.dataId),s){let T=I.expandShapeToKeepDim(y.shape,m);y.shape=T}return y}var rK={kernelName:Ci,backendName:"wasm",setupFunc:Vle,kernelFunc:jle};var nK;function Hle(r){nK=r.wasm.cwrap(vi,null,["number, number, number"])}function qle(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,u=e.dataIdMap.get(i.dataId).id,l=i,{transposed:p,axes:c,originalAxes:m,inputWasTransposed:f}=xn(i,o,e);if(f){let T=e.dataIdMap.get(p.dataId).id;l=p,u=T}let d=l.shape.length;I.assertAxesAreInnerMostDims("any",c,d);let[h,g]=I.computeOutAndReduceShapes(l.shape,c),x=b.sizeFromShape(g),y=e.makeOutput(h,i.dtype);if(b.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(y.dataId).id;nK(u,x,T)}if(f&&e.disposeData(p.dataId),s){let T=I.expandShapeToKeepDim(y.shape,m);y.shape=T}return y}var oK={kernelName:vi,backendName:"wasm",setupFunc:Hle,kernelFunc:qle};var sK;function Xle(r){sK=r.wasm.cwrap(to,null,["number","number","number","number","number"])}function Yle(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o}=n,{x:s}=t,i=e.dataIdMap.get(s.dataId).id,a=i,u=s,{transposed:l,axes:p,inputWasTransposed:c}=xn(s,o,e);if(c){let x=e.dataIdMap.get(l.dataId).id;x!==i&&(u=l,a=x)}let m=u.shape.slice(0,-1),f=e.makeOutput(m,"int32"),d=e.dataIdMap.get(f.dataId).id,h=b.sizeFromShape(f.shape),g=u.shape[p[0]];return sK(a,ot[u.dtype],h,g,d),c&&e.disposeData(l.dataId),f}var aK={kernelName:to,backendName:"wasm",kernelFunc:Yle,setupFunc:Xle};var iK;function Qle(r){iK=r.wasm.cwrap(ro,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Zle(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:i,strides:a,pad:u,dimRoundingMode:l}=t,p=I.computePool2DInfo(o.shape,i,a,1,u,l),c=p.filterHeight,m=p.filterWidth,f=p.padInfo.top,d=p.padInfo.right,h=p.padInfo.bottom,g=p.padInfo.left,x=p.strideHeight,y=p.strideWidth,T=p.inChannels;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);if(p.dilationWidth!==1||p.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${p.dilationHeight}, ${p.dilationWidth}].`);let k=n.makeOutput(p.outShape,"float32"),C=n.dataIdMap.get(k.dataId).id;return iK(s,o.shape[0],o.shape[1],o.shape[2],c,m,f,d,h,g,x,y,T,C),k}var uK={kernelName:ro,backendName:"wasm",setupFunc:Qle,kernelFunc:Zle};function hr(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=b.sizeFromShape(n.shape),i=b.inferFromImplicitShape(o,s);return b.assert(s===b.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:i,dtype:n.dtype}}var lK={kernelName:hs,backendName:"wasm",kernelFunc:hr};var pK;function Jle(r){pK=r.wasm.cwrap(no,null,["number","array","number","number","array","number","number","number","number"])}function epe(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:i,transposeB:a}=n;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let u=o.shape.length,l=s.shape.length,p=i?o.shape[u-2]:o.shape[u-1],c=a?s.shape[l-1]:s.shape[l-2],m=i?o.shape[u-1]:o.shape[u-2],f=a?s.shape[l-2]:s.shape[l-1],d=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=b.sizeFromShape(d),x=b.sizeFromShape(h),T=Ds.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([m,f]);b.assert(p===c,()=>`Error in matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${i} and transposeB=${a} must match.`);let k=i?[g,p,m]:[g,m,p],C=a?[x,f,c]:[x,c,f],N=hr({inputs:{x:o},backend:t,attrs:{shape:k}}),A=hr({inputs:{x:s},backend:t,attrs:{shape:C}}),M=t.dataIdMap.get(N.dataId).id,E=t.dataIdMap.get(A.dataId).id,B=i?N.shape[2]:N.shape[1],W=a?A.shape[1]:A.shape[2],U=Math.max(g,x),K=t.makeOutput([U,B,W],N.dtype),j=t.dataIdMap.get(K.dataId).id,V=new Uint8Array(new Int32Array(N.shape).buffer),q=new Uint8Array(new Int32Array(A.shape).buffer);return pK(M,V,N.shape.length,E,q,A.shape.length,i,a,j),t.disposeData(N.dataId),t.disposeData(A.dataId),K.shape=T,K}var cK={kernelName:no,backendName:"wasm",setupFunc:Jle,kernelFunc:epe};function Tu(r){let{inputs:{x:e},attrs:{begin:t,size:n},backend:o}=r,[s,i]=kt.parseSliceParams(e,t,n),a=kt.isSliceContinous(e.shape,s,i),u=o.readSync(e.dataId),l=o.makeOutput(i,e.dtype),p=b.computeStrides(e.shape),c=o.dataIdMap.get(l.dataId);if(a){let d=kt.computeFlatOffset(s,p);return e.dtype==="string"?c.stringBytes=u.slice(d,d+b.sizeFromShape(i)):o.typedArrayFromHeap(l).set(u.subarray(d,d+b.sizeFromShape(i))),l}if(e.dtype==="string"){let d=xp(u,s,i,e.shape,e.dtype);return c.stringBytes=d,l}let m=o.typedArrayFromHeap(l),f=e.shape.length;if(f===2)tpe(u,p[0],m,s,i);else if(f===3)rpe(u,p[0],p[1],m,s,i);else if(f===4)npe(u,p[0],p[1],p[2],m,s,i);else{let d=xp(u,s,i,e.shape,e.dtype);m.set(d)}return l}function tpe(r,e,t,n,o){let s=0,i=n[0],a=n[1],u=i+o[0];for(let l=i;l<u;l++){let p=l*e+a;t.set(r.subarray(p,p+o[1]),s),s+=o[1]}}function rpe(r,e,t,n,o,s){let i=0,a=o[0],u=o[1],l=o[2],p=a+s[0],c=u+s[1];for(let m=a;m<p;m++)for(let f=u;f<c;f++){let d=m*e+f*t+l;n.set(r.subarray(d,d+s[2]),i),i+=s[2]}}function npe(r,e,t,n,o,s,i){let a=0,u=s[0],l=s[1],p=s[2],c=u+i[0],m=l+i[1],f=p+i[2],d=s[3];for(let h=u;h<c;h++)for(let g=l;g<m;g++)for(let x=p;x<f;x++){let y=h*e+g*t+x*n+d;o.set(r.subarray(y,y+i[3]),a),a+=i[3]}}var mK={kernelName:bs,backendName:"wasm",kernelFunc:Tu};function ope(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:i}=n,a=s.reduce((x,y)=>x*y),u=I.getReshaped(o.shape,s,a),l=I.getPermuted(u.length,s.length),p=I.getReshapedPermuted(o.shape,s,a),c=I.getSliceBeginCoords(i,s.length),m=I.getSliceSize(p,i,s.length),f=hr({inputs:{x:o},backend:t,attrs:{shape:u}}),d=bi({inputs:{x:f},backend:t,attrs:{perm:l}}),h=hr({inputs:{x:d},backend:t,attrs:{shape:p}}),g=Tu({inputs:{x:h},backend:t,attrs:{begin:c,size:m}});return t.disposeData(f.dataId),t.disposeData(d.dataId),t.disposeData(f.dataId),g}var fK={kernelName:us,backendName:"wasm",kernelFunc:ope};function ku(r){let{inputs:{x:e},attrs:{dtype:t},backend:n}=r,o=n.makeOutput(e.shape,t),s=n.typedArrayFromHeap(e);return n.typedArrayFromHeap(o).set(s),o}var dK={kernelName:zn,backendName:"wasm",kernelFunc:ku};var hK=dt(oo);var gK;function spe(r){gK=r.wasm.cwrap(Gn,null,["number","number","number","number"])}function ape(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:i}=n,a=t.dataIdMap.get(o.dataId).id,u=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(u.dataId).id;return gK(a,s,i,l),u}var bK={kernelName:Gn,backendName:"wasm",setupFunc:spe,kernelFunc:ape};function vN(r){let{inputs:e,backend:t}=r,n=b.parseAxisParam(r.attrs.axis,e[0].shape)[0],o=I.computeOutShape(e.map(f=>f.shape),n),s=e.filter(f=>b.sizeFromShape(f.shape)>0);if(s.length===1)return Ep({inputs:{x:s[0]},backend:t});let i=t.makeOutput(o,e[0].dtype);if(b.sizeFromShape(o)===0)return i;let a=s.map(f=>f.shape);if(I.assertParamsConsistent(a,n),s[0].dtype==="string"){let f=s.map(T=>{let k=b.sizeFromShape(T.shape.slice(n));return hr({inputs:{x:T},backend:t,attrs:{shape:[-1,k]}})}),d=f.map(T=>({vals:t.readSync(T.dataId),shape:T.shape}));o=I.computeOutShape(f.map(T=>T.shape),1);let h=f[0].shape[0]===1,g=gp(d,o,e[0].dtype,h),x=I.computeOutShape(s.map(T=>T.shape),n);i.shape=x;let y=t.dataIdMap.get(i.dataId);return y.stringBytes=I.fromStringArrayToUint8(g),f.forEach(T=>t.disposeData(T.dataId)),i}let u=b.sizeFromShape(s[0].shape.slice(0,n)),l=0,p=s.map(f=>{let d=b.sizeFromShape(f.shape.slice(n));return l+=d,d}),c=s.map(f=>t.typedArrayFromHeap(f)),m=t.typedArrayFromHeap(i);for(let f=0;f<u;f++){let d=f*l;for(let h=0;h<c.length;h++){let g=p[h],x=f*g,y=c[h].subarray(x,x+g);m.set(y,d),d+=g}}return i}var yK={kernelName:ls,backendName:"wasm",kernelFunc:vN};var xK;function ipe(r){xK=r.wasm.cwrap(so,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function upe(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,i=n.dataIdMap.get(o.dataId).id,a=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:p,dimRoundingMode:c,dataFormat:m}=t,f=I.convertConv2DDataFormat(m),d=I.computeConv2DInfo(o.shape,s.shape,u,l,p,c,!1,f),h=d.filterHeight,g=d.filterWidth,x=d.padInfo.top,y=d.padInfo.right,T=d.padInfo.bottom,k=d.padInfo.left,C=d.dilationHeight,N=d.dilationWidth,A=d.strideHeight,M=d.strideWidth,E=d.inChannels,B=d.outChannels,W=d.padInfo.type==="SAME"?1:0;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let U=n.makeOutput(d.outShape,"float32"),K=n.dataIdMap.get(U.dataId).id;return xK(i,o.shape[0],o.shape[1],o.shape[2],a,h,g,x,y,T,k,W,C,N,A,M,E,B,K),U}var TK={kernelName:so,backendName:"wasm",setupFunc:ipe,kernelFunc:upe};var kK;function lpe(r){kK=r.wasm.cwrap(ao,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ppe(r){let{backend:e,inputs:t,attrs:n}=r,{dy:o,filter:s}=t,{strides:i,pad:a,dataFormat:u,dimRoundingMode:l,inputShape:p}=n,c=1,m=I.convertConv2DDataFormat(u),f=I.computeConv2DInfo(p,s.shape,i,c,a,l,!1,m),{batchSize:d,filterHeight:h,filterWidth:g,inChannels:x,inHeight:y,inWidth:T,outChannels:k,outHeight:C,outWidth:N,strideHeight:A,strideWidth:M}=f,E=h-1-f.padInfo.top,B=g-1-f.padInfo.left,W=f.dataFormat==="channelsLast",U=b.computeStrides(f.inShape),K=b.computeStrides(o.shape),[j,V,q]=b.computeStrides(s.shape),ee=U[0],Z=W?U[1]:U[2],te=W?U[2]:1,oe=W?1:U[1],ie=K[0],se=W?K[1]:K[2],ue=W?K[2]:1,ye=W?1:K[1],de=e.makeOutput(f.inShape,"float32"),Te=e.dataIdMap.get(de.dataId).id,Se=e.dataIdMap.get(o.dataId).id,Be=e.dataIdMap.get(s.dataId).id;return kK(Se,Be,d,h,g,y,T,x,C,N,k,A,M,E,B,j,V,q,ee,Z,te,oe,ie,se,ue,ye,Te),de}var IK={kernelName:ao,backendName:"wasm",setupFunc:lpe,kernelFunc:ppe};var CK=dt(io);var vK=dt(uo);var wN;(function(t){t[t.bilinear=0]="bilinear",t[t.nearest=1]="nearest"})(wN||(wN={}));var wK;function cpe(r){wK=r.wasm.cwrap(Ys,null,["number","number","number","number","array","number","number","number","number","number"])}function mpe(r){let{backend:e,inputs:t,attrs:n}=r,{method:o,extrapolationValue:s,cropSize:i}=n,{image:a,boxes:u,boxInd:l}=t,p=u.shape[0],[c,m]=i,f=[p,c,m,a.shape[3]],d=e.dataIdMap.get(a.dataId),h;a.dtype!=="float32"&&(h=ku({backend:e,inputs:{x:a},attrs:{dtype:"float32"}}),d=e.dataIdMap.get(h.dataId));let g=d.id,x=e.dataIdMap.get(u.dataId).id,y=e.dataIdMap.get(l.dataId).id,T=e.makeOutput(f,"float32"),k=e.dataIdMap.get(T.dataId).id,C=new Uint8Array(new Int32Array(a.shape).buffer);return wK(g,x,y,p,C,c,m,wN[o],s,k),h!=null&&e.disposeData(h.dataId),T}var SK={kernelName:Ys,backendName:"wasm",setupFunc:cpe,kernelFunc:mpe};var _K;function fpe(r){_K=r.wasm.cwrap(Xs,null,["number","number","number","number","number","number"])}function dpe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:i,reverse:a}=n,u=o.shape.length;b.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumsum does not support ${o.dtype} tensors in the WASM backend`);let l=I.getAxesPermutation([s],u),p=o;l!==null&&(p=bi({inputs:{x:o},attrs:{perm:l},backend:t}));let c=I.getInnerMostAxes(1,u)[0];I.assertAxesAreInnerMostDims("cumsum",[c],u);let m=t.makeOutput(p.shape,p.dtype),f=p.shape[c],d=t.dataIdMap.get(p.dataId).id,h=t.dataIdMap.get(m.dataId).id;_K(d,i?1:0,a?1:0,f,h,ot[o.dtype]);let g=m;if(l!==null){let x=I.getUndoAxesPermutation(l);g=bi({inputs:{x:m},attrs:{perm:x},backend:t}),t.disposeData(p.dataId),t.disposeData(m.dataId)}return g}var AK={kernelName:Xs,backendName:"wasm",setupFunc:fpe,kernelFunc:dpe};var NK;function hpe(r){NK=r.wasm.cwrap(Qs,null,["number","number","number","array","number","array","array","number","number"])}function gpe(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:i}=n,a=o.shape[0],u=i==="NHWC"?o.shape[1]:o.shape[2],l=i==="NHWC"?o.shape[2]:o.shape[3],p=i==="NHWC"?o.shape[3]:o.shape[1],c=u*s,m=l*s,f=p/(s*s),d=i==="NHWC"?[a,c,m,f]:[a,f,c,m],h=e.makeOutput(d,"float32"),x=e.dataIdMap.get(o.dataId).id,y=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),T=new Uint8Array(new Int32Array(d).buffer),k=new Uint8Array(new Int32Array(b.computeStrides(d)).buffer),C=e.dataIdMap.get(h.dataId).id;return NK(x,s,i==="NHWC"?1:0,y,o.shape.length-1,T,k,d.length,C),h}var DK={kernelName:Qs,backendName:"wasm",setupFunc:hpe,kernelFunc:gpe};var PK;function bpe(r){PK=r.wasm.cwrap(lo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ype(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,i=n.dataIdMap.get(o.dataId).id,a=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:p,dimRoundingMode:c}=t,m=l??[1,1],f=I.computeConv2DInfo(o.shape,s.shape,u,m,p,c,!0),d=f.filterHeight,h=f.filterWidth,g=f.padInfo.top,x=f.padInfo.right,y=f.padInfo.bottom,T=f.padInfo.left,k=f.dilationHeight,C=f.dilationWidth,N=f.strideHeight,A=f.strideWidth,M=f.inChannels,E=f.outChannels,B=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let W=n.makeOutput(f.outShape,"float32"),U=n.dataIdMap.get(W.dataId).id;return PK(i,o.shape[0],o.shape[1],o.shape[2],a,d,h,g,x,y,T,B,k,C,N,A,M,E,U),W}var FK={kernelName:lo,backendName:"wasm",setupFunc:bpe,kernelFunc:ype};var MK=dt(co);var xpe=!1,EK=Nt(Zs,xpe,"bool");var RK=dt(mo,"float32");function Xx(r){let{inputs:e,attrs:t,backend:n}=r,{input:o}=e,{dim:s}=t,i=o.shape.length,a=o.shape.slice(),u=s;return s<0&&(b.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),a.splice(u,0,1),hr({inputs:{x:o},backend:n,attrs:{shape:a}})}var LK={kernelName:ps,backendName:"wasm",kernelFunc:Xx};function SN(r){let{attrs:{shape:e,value:t,dtype:n},backend:o}=r,s=o.makeOutput(e,n);return o.typedArrayFromHeap(s).fill(t),s}var BK={kernelName:Va,backendName:"wasm",kernelFunc:SN};var $K;function Tpe(r){$K=r.wasm.cwrap(ea,null,["number","number","number","number","number","number"])}function kpe(r){let{inputs:e,backend:t}=r,{image:n}=e,o=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,[a,u,l,p]=n.shape;return $K(s,a,u,l,p,i),o}var OK={kernelName:ea,backendName:"wasm",kernelFunc:kpe,setupFunc:Tpe};var zK=dt(fo);var Ipe=!1,GK=Nt(ho,Ipe);var WK;function Cpe(r){WK=r.wasm.cwrap(go,null,["number","number","number","number","number","number","number"])}function vpe(r){let{backend:e,inputs:t,attrs:n}=r,{varianceEpsilon:o}=n,{x:s,mean:i,variance:a,offset:u,scale:l}=t,p=e.dataIdMap.get(s.dataId).id,c=e.dataIdMap.get(i.dataId).id,m=e.dataIdMap.get(a.dataId).id,f=u!=null?e.dataIdMap.get(u.dataId).id:0,d=l!=null?e.dataIdMap.get(l.dataId).id:0,h=e.makeOutput(s.shape,s.dtype);if(b.sizeFromShape(s.shape)===0)return h;let g=e.dataIdMap.get(h.dataId).id;return WK(p,c,m,f,d,o,g),h}var UK={kernelName:go,backendName:"wasm",setupFunc:Cpe,kernelFunc:vpe};var KK;function wpe(r){KK=r.wasm.cwrap(vs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Spe(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dilations:p,dataFormat:c,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=t,h=I.computeConv2DInfo(o.shape,s.shape,u,p,l,m),g=ml[f];if(g==null)throw new Error(`${f} activation not yet supported for FusedConv2D in the wasm backend.`);let x=n.dataIdMap.get(o.dataId).id,y=n.dataIdMap.get(s.dataId).id,T=h.outChannels,k=0;if(i!=null){let ue=n.dataIdMap.get(i.dataId);if(ue.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${ue.shape.length}.`);if(ue.shape[0]!==T)throw new Error(`FusedConv2D bias shape (${ue.shape}) does not match the number of output channels (${T})`);k=ue.id}let C=h.filterHeight,N=h.filterWidth,A=h.padInfo.top,M=h.padInfo.right,E=h.padInfo.bottom,B=h.padInfo.left,W=h.dilationHeight,U=h.dilationWidth,K=h.strideHeight,j=h.strideWidth,V=h.inChannels,q=h.padInfo.type==="SAME"?1:0,ee=h.batchSize,Z=h.inHeight,te=h.inWidth;if(c!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${c}'. Please use 'NHWC'.`);let oe=n.makeOutput(h.outShape,"float32"),ie=n.dataIdMap.get(oe.dataId).id,se=a==null?0:n.dataIdMap.get(a.dataId).id;return KK(x,ee,Z,te,y,C,N,k,A,M,E,B,q,W,U,K,j,V,T,g,se,d||0,ie),oe}var VK={kernelName:vs,backendName:"wasm",setupFunc:wpe,kernelFunc:Spe};var jK;function _pe(r){jK=r.wasm.cwrap(ws,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ape(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dilations:p,dataFormat:c,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=t,h=I.computeConv2DInfo(o.shape,s.shape,u,p,l,m,!0),g=ml[f];if(g==null)throw new Error(`${f} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let x=n.dataIdMap.get(o.dataId).id,y=n.dataIdMap.get(s.dataId).id,T=h.outChannels,k=0;if(i!=null){let ue=n.dataIdMap.get(i.dataId);if(ue.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${ue.shape.length}.`);if(ue.shape[0]!==T)throw new Error(`FusedDepthwiseConv2D bias shape (${ue.shape}) does not match the number of output channels (${T})`);k=ue.id}let C=h.filterHeight,N=h.filterWidth,A=h.padInfo.top,M=h.padInfo.right,E=h.padInfo.bottom,B=h.padInfo.left,W=h.dilationHeight,U=h.dilationWidth,K=h.strideHeight,j=h.strideWidth,V=h.inChannels,q=h.padInfo.type==="SAME"?1:0,ee=h.batchSize,Z=h.inHeight,te=h.inWidth;if(c!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${c}'. Please use 'NHWC'.`);let oe=n.makeOutput(h.outShape,"float32"),ie=n.dataIdMap.get(oe.dataId).id,se=a==null?0:n.dataIdMap.get(a.dataId).id;return jK(x,ee,Z,te,y,C,N,k,A,M,E,B,q,W,U,K,j,V,T,g,se,d||0,ie),oe}var HK={kernelName:ws,backendName:"wasm",setupFunc:_pe,kernelFunc:Ape};var qK;function Npe(r){qK=r.wasm.cwrap(ta,null,["number","number","number","number","number","number","array","number"])}function Dpe(r){let{backend:e,inputs:t}=r,{params:n,indices:o}=t,[s,i,a,u]=xb.prepareAndValidate(n,o),l=e.makeOutput(s,n.dtype);if(i===0)return l;let p=o.shape,c=p[p.length-1],f=e.dataIdMap.get(n.dataId).id,h=e.dataIdMap.get(o.dataId).id,g=new Uint8Array(new Int32Array(u).buffer),x=e.dataIdMap.get(l.dataId).id;return qK(f,ot[n.dtype],h,i,c,a,g,x),l}var XK={kernelName:ta,backendName:"wasm",setupFunc:Npe,kernelFunc:Dpe};var YK;function Ppe(r){YK=r.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Fpe(r){let{backend:e,inputs:t,attrs:n}=r,{x:o,indices:s}=t,{axis:i,batchDims:a}=n,u=b.parseAxisParam(i,o.shape)[0],l=e.readSync(s.dataId),p=o.shape[u];for(let E=0;E<l.length;++E){let B=l[E];b.assert(B<=p-1&&B>=0,()=>`GatherV2: the index value ${B} is not in [0, ${p-1}]`)}let c=I.segment_util.collectGatherOpShapeInfo(o,s,u,a),m=hr({inputs:{x:o},attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]},backend:e}),f=b.sizeFromShape(s.shape),d=hr({inputs:{x:s},attrs:{shape:[c.batchSize,f/c.batchSize]},backend:e}),h=[c.batchSize,c.outerSize,f/c.batchSize,c.sliceSize],g=e.makeOutput(h,o.dtype);if(b.sizeFromShape(o.shape)===0)return g;let x=m.shape.length-1,T=e.dataIdMap.get(m.dataId).id,C=e.dataIdMap.get(d.dataId).id,N=e.dataIdMap.get(g.dataId).id,A=new Uint8Array(new Int32Array(b.computeStrides(m.shape)).buffer),M=new Uint8Array(new Int32Array(b.computeStrides(h)).buffer);return YK(T,ot[o.dtype],A,x,C,c.batchSize,M,N),e.disposeData(m.dataId),e.disposeData(d.dataId),g.shape=c.outputShape,g}var QK={kernelName:cs,backendName:"wasm",setupFunc:Ppe,kernelFunc:Fpe};var Mpe=!1,ZK=Nt(ra,Mpe,"bool");var Epe=!1,JK=Nt(bo,Epe,"bool");var eV;function Rpe(r){eV=r.wasm.cwrap(na,null,["number","number","number","number"])}function Lpe(r){let{inputs:{x:e},attrs:{alpha:t},backend:n}=r,o=n.dataIdMap.get(e.dataId).id,s=n.makeOutput(e.shape,"float32");if(b.sizeFromShape(e.shape)!==0){let i=n.dataIdMap.get(s.dataId).id;eV(o,ot[e.dtype],t,i)}return s}var tV={kernelName:na,backendName:"wasm",setupFunc:Rpe,kernelFunc:Lpe};var Bpe=!1,rV=Nt(oa,Bpe,"bool");var $pe=!1,nV=Nt(sa,$pe,"bool");var oV=dt(yo);var Ope=!1,sV=Nt(aa,Ope,"bool");var aV;function zpe(r){aV=r.wasm.cwrap(xo,null,["number","number","number","number"])}function Gpe(r){let{backend:e,inputs:t,attrs:n}=r,{reductionIndices:o,keepDims:s}=n,{x:i}=t,u=e.dataIdMap.get(i.dataId).id,l=i,{transposed:p,axes:c,originalAxes:m,inputWasTransposed:f}=xn(i,o,e);if(f){let T=e.dataIdMap.get(p.dataId).id;l=p,u=T}let d=l.shape.length;I.assertAxesAreInnerMostDims("max",c,d);let[h,g]=I.computeOutAndReduceShapes(l.shape,c),x=b.sizeFromShape(g),y=e.makeOutput(h,i.dtype);if(b.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(y.dataId).id;aV(u,ot[i.dtype],x,T)}if(f&&e.disposeData(p.dataId),s){let T=I.expandShapeToKeepDim(y.shape,m);y.shape=T}return y}var iV={kernelName:xo,backendName:"wasm",setupFunc:zpe,kernelFunc:Gpe};var Wpe=!1,uV=Nt(To,Wpe);var lV;function Upe(r){lV=r.wasm.cwrap(ko,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Kpe(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id;b.assert(o.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${o.dtype}.`);let{filterSize:i,strides:a,pad:u,dimRoundingMode:l}=t,p=I.computePool2DInfo(o.shape,i,a,1,u,l),c=p.filterHeight,m=p.filterWidth,f=p.padInfo.top,d=p.padInfo.right,h=p.padInfo.bottom,g=p.padInfo.left,x=p.dilationHeight,y=p.dilationWidth,T=p.strideHeight,k=p.strideWidth,C=p.inChannels,N=p.outChannels;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);let A=n.makeOutput(p.outShape,"float32"),M=n.dataIdMap.get(A.dataId).id;return lV(s,o.shape[0],o.shape[1],o.shape[2],c,m,f,d,h,g,x,y,T,k,C,N,M),A}var pV={kernelName:ko,backendName:"wasm",setupFunc:Upe,kernelFunc:Kpe};var cV;function Vpe(r){cV=r.wasm.cwrap(Io,null,["number, number, number"])}function jpe(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,a=e.dataIdMap.get(i.dataId).id,u=a,l=i,{transposed:p,axes:c,originalAxes:m,inputWasTransposed:f}=xn(i,o,e),d=c;if(f){let k=e.dataIdMap.get(p.dataId).id;k!==a&&(l=p,u=k,d=I.getInnerMostAxes(d.length,l.shape.length))}I.assertAxesAreInnerMostDims("mean",d,l.shape.length);let[h,g]=I.computeOutAndReduceShapes(l.shape,d),x=b.sizeFromShape(g),y=l;l.dtype!=="float32"&&(y=ku({backend:e,inputs:{x:l},attrs:{dtype:"float32"}}),u=e.dataIdMap.get(y.dataId).id);let T=e.makeOutput(h,"float32");if(b.sizeFromShape(l.shape)!==0){let k=e.dataIdMap.get(T.dataId).id;cV(u,x,k)}if(f&&e.disposeData(p.dataId),s){let k=I.expandShapeToKeepDim(T.shape,m);T.shape=k}return l.dtype!=="float32"&&e.disposeData(y.dataId),T}var mV={kernelName:Io,backendName:"wasm",setupFunc:Vpe,kernelFunc:jpe};var fV;function Hpe(r){fV=r.wasm.cwrap(Co,null,["number","number","number","number"])}function qpe(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,a=e.dataIdMap.get(i.dataId).id,u=a,l=i,{transposed:p,axes:c,originalAxes:m,inputWasTransposed:f}=xn(i,o,e);if(f){let T=e.dataIdMap.get(p.dataId).id;T!==a&&(l=p,u=T)}let d=l.shape.length;I.assertAxesAreInnerMostDims("min",c,d);let[h,g]=I.computeOutAndReduceShapes(l.shape,c),x=b.sizeFromShape(g),y=e.makeOutput(h,l.dtype);if(b.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(y.dataId).id;fV(u,ot[i.dtype],x,T)}if(f&&e.disposeData(p.dataId),s){let T=I.expandShapeToKeepDim(y.shape,m);y.shape=T}return y}var dV={kernelName:Co,backendName:"wasm",setupFunc:Hpe,kernelFunc:qpe};var Xpe=!1,hV=Nt(vo,Xpe);var _N;(function(t){t[t.reflect=0]="reflect",t[t.symmetric=1]="symmetric"})(_N||(_N={}));var gV;function Ype(r){gV=r.wasm.cwrap(wo,null,["number","array","number","number","array","array","number","number"])}function Qpe(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,mode:o}}=r,s=n.map((d,h)=>d[0]+e.shape[h]+d[1]),i=t.dataIdMap.get(e.dataId).id,a=t.makeOutput(s,e.dtype),u=t.dataIdMap.get(a.dataId).id,l=new Uint8Array(new Int32Array(e.shape).buffer),p=n.map(d=>d[0]),c=n.map(d=>d[1]),m=new Uint8Array(new Int32Array(p).buffer),f=new Uint8Array(new Int32Array(c).buffer);return gV(i,l,e.shape.length,ot[e.dtype],m,f,_N[o],u),a}var bV={kernelName:wo,backendName:"wasm",kernelFunc:Qpe,setupFunc:Ype};var Zpe=!0,yV=Nt(So,Zpe);var xV=dt(ms);function Um(r,e){let t=new Int32Array(r.wasm.HEAPU8.buffer,e,4),n=t[0],o=t[1],s=t[2],i=t[3];return r.wasm._free(e),{pSelectedIndices:n,selectedSize:o,pSelectedScores:s,pValidOutputs:i}}var TV;function Jpe(r){TV=r.wasm.cwrap(ua,"number",["number","number","number","number","number"])}function ece(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:i}=n,{boxes:a,scores:u}=t,l=e.dataIdMap.get(a.dataId).id,p=e.dataIdMap.get(u.dataId).id,c=TV(l,p,s,o,i),{pSelectedIndices:m,selectedSize:f,pSelectedScores:d,pValidOutputs:h}=Um(e,c);return e.wasm._free(d),e.wasm._free(h),e.makeOutput([f],"int32",m)}var kV={kernelName:ua,backendName:"wasm",setupFunc:Jpe,kernelFunc:ece};var IV;function tce(r){IV=r.wasm.cwrap(Bi,"number",["number","number","number","number","number","bool"])}function rce(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:a}=n,{boxes:u,scores:l}=t,p=e.dataIdMap.get(u.dataId).id,c=e.dataIdMap.get(l.dataId).id,m=IV(p,c,s,o,i,a),{pSelectedIndices:f,selectedSize:d,pSelectedScores:h,pValidOutputs:g}=Um(e,m);e.wasm._free(h);let x=e.makeOutput([d],"int32",f),y=e.makeOutput([],"int32",g);return[x,y]}var CV={kernelName:Bi,backendName:"wasm",setupFunc:tce,kernelFunc:rce};var vV;function nce(r){vV=r.wasm.cwrap(la,"number",["number","number","number","number","number","number"])}function oce(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:i,softNmsSigma:a}=n,{boxes:u,scores:l}=t,p=e.dataIdMap.get(u.dataId).id,c=e.dataIdMap.get(l.dataId).id,m=vV(p,c,s,o,i,a),{pSelectedIndices:f,selectedSize:d,pSelectedScores:h,pValidOutputs:g}=Um(e,m);e.wasm._free(g);let x=e.makeOutput([d],"int32",f),y=e.makeOutput([d],"float32",h);return[x,y]}var wV={kernelName:la,backendName:"wasm",setupFunc:nce,kernelFunc:oce};var sce=!1,SV=Nt(ia,sce,"bool");var _V;function ace(r){_V=r.wasm.cwrap(pa,null,["number","number","number","number","number"])}function ice(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:i,offValue:a}=n,u=t.makeOutput([...o.shape,s],"int32"),l=t.dataIdMap.get(u.dataId).id,c=t.dataIdMap.get(o.dataId).id;return _V(c,s,i,a,l),u}var AV={kernelName:pa,backendName:"wasm",setupFunc:ace,kernelFunc:ice};function uce(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(1),n}var NV={kernelName:fs,backendName:"wasm",kernelFunc:uce};function lce(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return Xx({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,i=e[0].dtype;e.forEach(p=>{b.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),b.assert(i===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],u=e.map(p=>{let c=Xx({inputs:{input:p},backend:t,attrs:{dim:o}});return a.push(c),c}),l=vN({inputs:u,backend:t,attrs:{axis:o}});return a.forEach(p=>t.disposeData(p.dataId)),l}var DV={kernelName:ds,backendName:"wasm",kernelFunc:lce};var PV;function pce(r){PV=r.wasm.cwrap(_o,null,["number","array","number","number","array","array","number","number"])}function cce(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,constantValue:o}}=r,s=n.map((h,g)=>h[0]+e.shape[g]+h[1]);if(b.sizeFromShape(e.shape)===0)return SN({backend:t,attrs:{shape:s,value:o,dtype:e.dtype}});let i=t.dataIdMap.get(e.dataId).id,a=t.makeOutput(s,e.dtype),l=t.dataIdMap.get(a.dataId).id,p=new Uint8Array(new Int32Array(e.shape).buffer),c=n.map(h=>h[0]),m=n.map(h=>h[1]),f=new Uint8Array(new Int32Array(c).buffer),d=new Uint8Array(new Int32Array(m).buffer);return PV(i,p,e.shape.length,ot[e.dtype],f,d,o,l),a}var Yx={kernelName:_o,backendName:"wasm",kernelFunc:cce,setupFunc:pce};var mce=!1,FV=Nt(Ao,mce);var MV;function fce(r){MV=r.wasm.cwrap(No,null,["number","number","number"])}function dce(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,a=s,u=n,l=u;u.dtype!=="float32"&&(l=ku({backend:t,inputs:{x:n},attrs:{dtype:"float32"}}),a=t.dataIdMap.get(l.dataId).id);let p=t.makeOutput(n.shape,"float32"),c=t.dataIdMap.get(p.dataId).id;return MV(a,i,c),u.dtype!=="float32"&&t.disposeData(l.dataId),p}var EV={kernelName:No,backendName:"wasm",setupFunc:fce,kernelFunc:dce};var RV;function hce(r){RV=r.wasm.cwrap(ca,null,["number","number","number","number"])}function gce(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,a=e.dataIdMap.get(i.dataId).id,u=a,l=i,{transposed:p,axes:c,originalAxes:m,inputWasTransposed:f}=xn(i,o,e),d=c;if(f){let T=e.dataIdMap.get(p.dataId).id;T!==a&&(l=p,u=T,d=I.getInnerMostAxes(d.length,l.shape.length))}I.assertAxesAreInnerMostDims("prod",d,l.shape.length);let[h,g]=I.computeOutAndReduceShapes(l.shape,d),x=b.sizeFromShape(g),y=e.makeOutput(h,l.dtype);if(b.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(y.dataId).id;RV(u,x,ot[y.dtype],T)}if(f&&e.disposeData(p.dataId),s){let T=I.expandShapeToKeepDim(y.shape,m);y.shape=T}return y}var LV={kernelName:ca,backendName:"wasm",setupFunc:hce,kernelFunc:gce};var bce=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:i}=t,a=yp(n,o,s,i),u=e.makeOutput([a.length],i);return e.typedArrayFromHeap(u).set(a),u},BV={kernelName:ja,backendName:"wasm",kernelFunc:bce};var yce=!0,$V=Nt(po,yce);var OV=dt(Do);var zV=dt(Fo);var GV;function xce(r){GV=r.wasm.cwrap(Po,null,["number","number","number","number","number","number","number","number","number","number"])}function Tce(r){let{backend:e,inputs:t,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:i,size:a}=n,[u,l]=a,[p,c,m,f]=o.shape,d=[p,u,l,f],h=e.dataIdMap.get(o.dataId),g;h.dtype!=="float32"&&(g=ku({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),h=e.dataIdMap.get(g.dataId));let x=h.id,y=e.makeOutput(d,"float32");if(b.sizeFromShape(o.shape)===0)return y;let T=e.dataIdMap.get(y.dataId).id;return GV(x,p,c,m,f,u,l,s?1:0,i?1:0,T),g!=null&&e.disposeData(g.dataId),y}var WV={kernelName:Po,backendName:"wasm",setupFunc:xce,kernelFunc:Tce};var UV;function kce(r){UV=r.wasm.cwrap(ma,null,["number","array","number","array","number","number"])}function Ice(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,i=b.parseAxisParam(s,o.shape);if(o.shape.length===0)return Ep({inputs:{x:o},backend:t});let a=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(o.dataId).id,l=t.dataIdMap.get(a.dataId).id,p=new Uint8Array(new Int32Array(i).buffer),c=new Uint8Array(new Int32Array(o.shape).buffer);UV(u,p,i.length,c,o.shape.length,l);let m=hr({inputs:{x:a},attrs:{shape:o.shape},backend:t});return t.disposeData(a.dataId),m}var KV={kernelName:ma,backendName:"wasm",kernelFunc:Ice,setupFunc:kce};var VV;function Cce(r){VV=r.wasm.cwrap(Ta,null,["number","number","number","number","number","number","number","number","array","number","number"])}function vce(r){let{inputs:e,backend:t,attrs:n}=r,{image:o}=e,{radians:s,fillValue:i,center:a}=n,u=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(u.dataId).id,[c,m,f,d]=o.shape,[h,g]=I.getImageCenter(a,m,f),x=i===0,y=255,T=typeof i=="number"?[i,i,i,x?0:y]:[...i,y],k=new Uint8Array(new Int32Array(T).buffer);return VV(l,c,m,f,d,s,h,g,k,T.length,p),u}var jV={kernelName:Ta,backendName:"wasm",kernelFunc:vce,setupFunc:Cce};var HV=dt(fa);var qV=dt(Mo);var XV;function wce(r){XV=r.wasm.cwrap(da,null,["number","number","number","number","number","number","array","number","number"])}function Sce(r){let{backend:e,inputs:t,attrs:n}=r,{indices:o,updates:s}=t,{shape:i}=n,a=e.makeOutput(i,s.dtype);if(b.sizeFromShape(i)===0)return a;let{sliceRank:u,numUpdates:l,sliceSize:p,strides:c,outputSize:m}=kb.calculateShapes(s,o,i),d=e.dataIdMap.get(o.dataId).id,g=e.dataIdMap.get(s.dataId).id,x=new Uint8Array(new Int32Array(c).buffer),y=e.dataIdMap.get(a.dataId).id;return XV(d,g,ot[s.dtype],u,l,p,x,m,y),a}var YV={kernelName:da,backendName:"wasm",setupFunc:wce,kernelFunc:Sce};var QV;function _ce(r){QV=r.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Ace(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,i=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(s.dataId).id,l=t.makeOutput(o.shape,o.dtype),p=t.dataIdMap.get(l.dataId).id,c=n.shape.length,m=o.shape.length,f=c===0||c>1||m===1?1:b.sizeFromShape(o.shape.slice(1));return QV(i,a,u,f,p),l}var ZV={kernelName:gs,backendName:"wasm",kernelFunc:Ace,setupFunc:_ce};var JV;function Nce(r){JV=r.wasm.cwrap(Ro,null,["number","number"])}function Dce(r){let{backend:e,inputs:{x:t}}=r,n=e.dataIdMap.get(t.dataId).id,o=e.makeOutput(t.shape,t.dtype),s=e.dataIdMap.get(o.dataId).id;return b.sizeFromShape(o.shape)===0||JV(n,s),o}var e4={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Nce,kernelFunc:Dce};var t4=dt(Eo);var r4;function Pce(r){r4=r.wasm.cwrap($o,null,["number","number","number","number"])}function Fce(r){let{backend:e,inputs:{logits:t},attrs:{dim:n}}=r,o=e.dataIdMap.get(t.dataId).id,s=e.makeOutput(t.shape,t.dtype),i=e.dataIdMap.get(s.dataId).id,a=t.shape[n],u=b.sizeFromShape(t.shape)/a;return b.sizeFromShape(s.shape)===0||r4(o,i,a,u),s}var n4={kernelName:$o,backendName:"wasm",setupFunc:Pce,kernelFunc:Fce};function Mce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:i}=n,a=b.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let N=1+s.length;N<o.shape.length;++N)u.push([0,0]);let l=Yx.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),p=I.getReshaped(l.shape,s,a,!1),c=I.getPermuted(p.length,s.length,!1),m=I.getReshapedPermuted(l.shape,s,a,!1),h=hr({inputs:{x:l},backend:t,attrs:{shape:p}}),y=bi({inputs:{x:h},backend:t,attrs:{perm:c}}),C=hr({inputs:{x:y},backend:t,attrs:{shape:m}});return t.disposeData(l.dataId),t.disposeData(h.dataId),t.disposeData(y.dataId),C}var o4={kernelName:ys,backendName:"wasm",kernelFunc:Mce};function Ece(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:i}=t,a=b.parseAxisParam(i,o.shape)[0],u=I.prepareSplitSize(o,s,a),l=new Array(o.shape.length).fill(0),p=o.shape.slice();return u.map(c=>{let m=[...p];m[a]=c;let f=Tu({inputs:{x:o},attrs:{begin:l,size:m},backend:n});return l[a]+=c,f})}var s4={kernelName:xs,backendName:"wasm",kernelFunc:Ece};var a4=dt(Lo);var i4=dt(qa);var Rce=!0,u4=Nt(Oo,Rce);var l4;function Lce(r){l4=r.wasm.cwrap(Is,null,["number","number","number","number"])}function Bce(r){let{backend:e,inputs:t,attrs:n}=r,{alpha:o}=n,{x:s}=t,i=e.dataIdMap.get(s.dataId).id,a=e.makeOutput(s.shape,s.dtype),u=e.dataIdMap.get(a.dataId).id;return l4(i,o,ot[s.dtype],u),a}var p4={kernelName:Is,backendName:"wasm",setupFunc:Lce,kernelFunc:Bce};var c4;function $ce(r){c4=r.wasm.cwrap(ga,null,["number","array","number","array","array","array","array","array","number","number"])}function Oce(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{begin:s,end:i,strides:a,beginMask:u,endMask:l,ellipsisMask:p,newAxisMask:c,shrinkAxisMask:m}=n,{finalShapeSparse:f,finalShape:d,isIdentity:h,sliceDim0:g,isSimpleSlice:x,begin:y,end:T,strides:k}=kt.sliceInfo(o.shape,s,i,a,u,l,p,c,m),C;if(h)C=hr({inputs:{x:o},backend:e,attrs:{shape:d}});else if(g||x){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let N=kt.computeOutShape(y,T,k),A=Tu({inputs:{x:o},backend:e,attrs:{begin:y,size:N}});C=hr({inputs:{x:A},backend:e,attrs:{shape:d}}),e.disposeData(A.dataId)}else{let N=e.makeOutput(f,"float32"),A=e.dataIdMap.get(o.dataId).id,M=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),E=new Uint8Array(new Int32Array(y).buffer),B=new Uint8Array(new Int32Array(T).buffer),W=new Uint8Array(new Int32Array(k).buffer),U=new Uint8Array(new Int32Array(f).buffer),K=new Uint8Array(new Int32Array(b.computeStrides(f)).buffer),j=e.dataIdMap.get(N.dataId).id;c4(A,M,o.shape.length,E,B,W,U,K,f.length,j),C=hr({inputs:{x:N},backend:e,attrs:{shape:d}}),e.disposeData(N.dataId)}return C}var m4={kernelName:ga,backendName:"wasm",setupFunc:$ce,kernelFunc:Oce};var zce=!0,f4=Nt(zo,zce);var d4;function Gce(r){d4=r.wasm.cwrap(Bo,null,["number","number","number","number"])}function Wce(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,a=e.dataIdMap.get(i.dataId).id,u=a,l=i,{transposed:p,axes:c,originalAxes:m,inputWasTransposed:f}=xn(i,o,e),d=c;if(f){let T=e.dataIdMap.get(p.dataId).id;T!==a&&(l=p,u=T,d=I.getInnerMostAxes(d.length,l.shape.length))}I.assertAxesAreInnerMostDims("sum",d,l.shape.length);let[h,g]=I.computeOutAndReduceShapes(l.shape,d),x=b.sizeFromShape(g),y=e.makeOutput(h,l.dtype);if(b.sizeFromShape(l.shape)!==0){let T=e.dataIdMap.get(y.dataId).id;d4(u,x,ot[y.dtype],T)}if(f&&e.disposeData(p.dataId),s){let T=I.expandShapeToKeepDim(y.shape,m);y.shape=T}return y}var h4={kernelName:Bo,backendName:"wasm",setupFunc:Gce,kernelFunc:Wce};var g4=dt(ba);var b4=dt(Go);var y4;function Uce(r){y4=r.wasm.cwrap(vn,null,["number","array","number","array","number","number"])}function Kce(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,s=t.dataIdMap.get(o.dataId).id,{reps:i}=n,a=new Array(o.shape.length);for(let m=0;m<a.length;m++)a[m]=o.shape[m]*i[m];let u=new Uint8Array(new Int32Array(o.shape).buffer),l=new Uint8Array(new Int32Array(a).buffer),p=t.makeOutput(a,o.dtype),c=t.dataIdMap.get(p.dataId).id;return y4(s,u,o.shape.length,l,a.length,ot[p.dtype],c),p}var x4={kernelName:vn,backendName:"wasm",setupFunc:Uce,kernelFunc:Kce};var T4;function Vce(r){T4=r.wasm.cwrap(ya,null,["number","array","number","number","number","bool","number","number"])}var jce=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{k:o,sorted:s}=t,i=e.dataIdMap.get(n.dataId).id,a=new Uint8Array(new Int32Array(n.shape).buffer),u=n.shape.slice();u[u.length-1]=o;let l=e.makeOutput(u,n.dtype),p=e.dataIdMap.get(l.dataId).id,c=e.makeOutput(u,"int32"),m=e.dataIdMap.get(c.dataId).id;return T4(i,a,n.shape.length,ot[n.dtype],o,s,p,m),[l,c]},k4={kernelName:ya,backendName:"wasm",setupFunc:Vce,kernelFunc:jce};var I4;function Hce(r){I4=r.wasm.cwrap(xa,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function qce(r){let{backend:e,inputs:t,attrs:n}=r,{image:o,transforms:s}=t,{interpolation:i,fillMode:a,fillValue:u,outputShape:l}=n,[p,c,m,f]=o.shape,[d,h]=l??[c,m],g=[p,d,h,f],x=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),y=e.makeOutput(g,o.dtype),T=e.dataIdMap.get(y.dataId).id,C=e.dataIdMap.get(o.dataId).id,A=e.dataIdMap.get(s.dataId).id,M=i==="nearest"?1:2,E;switch(a){case"constant":E=1;break;case"reflect":E=2;break;case"wrap":E=3;break;case"nearest":E=4;break;default:E=1;break}return I4(C,A,s.shape[0]>1,p,d,h,f,m,c,x,o.shape.length-1,M,E,u,T),y}var C4={kernelName:xa,backendName:"wasm",setupFunc:Hce,kernelFunc:qce};function Xce(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let i=o.shape[s],a=o.shape.length,u=new Array(a-1),l=0;for(let f=0;f<a;f++)f!==s&&(u[l++]=o.shape[f]);let p=new Array(i),c=new Array(a).fill(0),m=o.shape.slice();m[s]=1;for(let f=0;f<p.length;f++)c[s]=f,p[f]=Tu({inputs:{x:o},attrs:{begin:c,size:m},backend:t});return p.map(({dataId:f,dtype:d})=>({dataId:f,dtype:d,shape:u}))}var v4={kernelName:Ts,backendName:"wasm",kernelFunc:Xce};function Yce(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(0),n}var w4={kernelName:ks,backendName:"wasm",kernelFunc:Yce};var Qce=[qU,XU,QU,rK,oK,aK,uK,cK,fK,dK,hK,bK,yK,TK,IK,CK,vK,SK,AK,DK,FK,MK,EK,RK,LK,BK,OK,zK,GK,HU,UK,VK,HK,XK,QK,ZK,JK,ZU,tV,rV,nV,oV,sV,iV,uV,pV,mV,dV,hV,bV,yV,xV,kV,CV,wV,SV,AV,NV,DV,Yx,FV,EV,LV,BV,$V,OV,zV,lK,WV,KV,jV,qV,HV,YV,ZV,e4,t4,mK,n4,o4,s4,a4,i4,u4,p4,m4,f4,h4,g4,b4,x4,k4,C4,eK,v4,w4];for(let r of Qce)Wi(r);var AN=$();AN.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));AN.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(AN.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var MN=xl(N4());var D4='var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}';var F4=xl(P4());var Jx=class extends ss{constructor(e){super();this.wasm=e;this.dataIdNextNumber=1;this.wasm.tfjs.initWithThreadsCount(R4),RN=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Ga(this,Uo())}write(e,t,n){let o={id:this.dataIdNextNumber++};return this.move(o,e,t,n,1),o}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=b.now();return e(),{kernelMs:b.now()-t}}move(e,t,n,o,s){let i=this.dataIdNextNumber++;if(o==="string"){let p=t;this.dataIdMap.set(e,{id:i,stringBytes:p,shape:n,dtype:o,memoryOffset:null,refCount:s});return}let a=b.sizeFromShape(n),u=a*b.bytesPerElement(o),l=this.wasm._malloc(u);this.dataIdMap.set(e,{id:i,memoryOffset:l,shape:n,dtype:o,refCount:s}),this.wasm.tfjs.registerTensor(i,a,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,u),l)}async read(e){return this.readSync(e)}readSync(e){let{memoryOffset:t,dtype:n,shape:o,stringBytes:s}=this.dataIdMap.get(e);if(n==="string")return s;let i=this.wasm.HEAPU8.slice(t,t+b.sizeFromShape(o)*b.bytesPerElement(n));return Jce(i.buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let o;if(n==null)o=this.write(null,e,t);else{let s=this.dataIdNextNumber++;o={id:s},this.dataIdMap.set(o,{id:s,memoryOffset:n,shape:e,dtype:t,refCount:1});let i=b.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,i,n)}return{dataId:o,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let o=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(n),i=b.sizeFromShape(e);switch(t){case"float32":return new Float32Array(o,s,i);case"int32":return new Int32Array(o,s,i);case"bool":return new Uint8Array(o,s,i);default:throw new Error(`Unknown dtype ${t}`)}}};function Zce(r){return(e,t)=>(b.fetch(r,{credentials:"same-origin"}).then(n=>{n.ok||e.env.a(`failed to load wasm binary file at '${r}'`),n.arrayBuffer().then(o=>{WebAssembly.instantiate(o,e).then(s=>{t(s.instance,s.module)})})}),{})}function M4(r,e,t){if(eT!=null)return eT;let n="tfjs-backend-wasm.wasm";return r&&e?n="tfjs-backend-wasm-threaded-simd.wasm":r&&(n="tfjs-backend-wasm-simd.wasm"),wg!=null&&wg[n]!=null?wg[n]:t+n}async function E4(){let[r,e]=await Promise.all([$().getAsync("WASM_HAS_SIMD_SUPPORT"),$().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((t,n)=>{let o={};o.locateFile=(a,u)=>{if(a.endsWith(".worker.js")){let l=D4,p=new Blob([l],{type:"application/javascript"});return URL.createObjectURL(p)}return a.endsWith(".wasm")?M4(r,e,vg??u):u+a},EN&&(o.instantiateWasm=Zce(M4(r,e,vg??"")));let s=!1;o.onAbort=()=>{if(s||Sg)return;Sg=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let i;e&&r&&eT==null?(o.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+MN.default.toString()],{type:"text/javascript"}),i=(0,MN.default)(o)):i=(0,F4.default)(o),i.then(a=>{s=!0,Sg=!1;let u=null;a.tfjs={init:a.cwrap("init",null,[]),initWithThreadsCount:a.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:a.cwrap("get_threads_count","number",[]),registerTensor:a.cwrap("register_tensor",null,["number","number","number"]),disposeData:a.cwrap("dispose_data",u,["number"]),dispose:a.cwrap("dispose",u,[])},t({wasm:a})})})}function Jce(r,e){switch(e){case"float32":return new Float32Array(r);case"int32":return new Int32Array(r);case"bool":return new Uint8Array(r);default:throw new Error(`Unknown dtype ${e}`)}}var eme=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],eT=null,vg=null,wg={},Sg=!1,EN=!1;function tme(r,e=!1){if(dI("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Sg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");eT=r,EN=e}function rme(r,e=!1){if(Sg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof r=="string")vg=r;else{wg=r;let t=eme.filter(n=>wg[n]==null);if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}EN=e}var R4=-1,RN=-1;function nme(r){R4=r}function ome(){if(RN===-1)throw new Error("WASM backend not initialized.");return RN}var sme="0.0.0";var ame=2;Vu("wasm",async()=>{let{wasm:r}=await E4();return new Jx(r)},ame);var fl="3.11.0-20211124",E8r={tfjs:fl,"tfjs-core":fl,"tfjs-data":fl,"tfjs-layers":fl,"tfjs-converter":fl,"tfjs-backend-cpu":fl,"tfjs-backend-webgl":fl,"tfjs-backend-wasm":fl};export{is as Abs,ki as Acos,Ii as Acosh,Jl as AdadeltaOptimizer,ep as AdagradOptimizer,tp as AdamOptimizer,rp as AdamaxOptimizer,Cn as Add,eo as AddN,Ci as All,vi as Any,to as ArgMax,Ka as ArgMin,wi as Asin,Si as Asinh,_i as Atan,Ni as Atan2,Ai as Atanh,ro as AvgPool,Au as AvgPool3D,Qp as AvgPool3DGrad,Yp as AvgPoolGrad,Jx as BackendWasm,no as BatchMatMul,us as BatchToSpaceND,Zp as Bincount,Jp as BroadcastArgs,rD as BroadcastTo,Nv as Callback,BC as CallbackList,zn as Cast,oo as Ceil,Gn as ClipByValue,Nu as Complex,Du as ComplexAbs,ls as Concat,so as Conv2D,ec as Conv2DBackpropFilter,ao as Conv2DBackpropInput,Pu as Conv3D,tc as Conv3DBackpropFilterV2,rc as Conv3DBackpropInputV2,io as Cos,uo as Cosh,Ys as CropAndResize,Xs as Cumsum,OC as CustomCallback,Ga as DataStorage,nc as DenseBincount,Qs as DepthToSpace,lo as DepthwiseConv2dNative,oc as DepthwiseConv2dNativeBackpropFilter,sc as DepthwiseConv2dNativeBackpropInput,ac as Diag,Fu as Dilation2D,pf as Dilation2DBackpropFilter,lf as Dilation2DBackpropInput,Nk as ENV,Dv as EarlyStopping,Mu as Einsum,co as Elu,ic as EluGrad,rb as Environment,Zs as Equal,Di as Erf,mo as Exp,ps as ExpandDims,Js as Expm1,uc as FFT,Va as Fill,ea as FlipLeftRight,fo as Floor,ho as FloorDiv,Cl as FromPixels,go as FusedBatchNorm,vs as FusedConv2D,ws as FusedDepthwiseConv2D,Cx as GPGPUContext,ta as GatherNd,cs as GatherV2,aw as GraphModel,ra as Greater,bo as GreaterEqual,$C as History,lc as IFFT,Wn as Identity,Eu as Imag,Mt as InputSpec,Pi as IsFinite,Fi as IsInf,Mi as IsNan,ss as KernelBackend,Ru as LRN,cc as LRNGrad,oy as LayerVariable,Xo as LayersModel,na as LeakyRelu,oa as Less,sa as LessEqual,pc as LinSpace,yo as Log,Ei as Log1p,nD as LogSoftmax,aa as LogicalAnd,Ri as LogicalNot,Il as LogicalOr,Eh as MathBackendCPU,Qh as MathBackendWebGL,xo as Max,ko as MaxPool,Lu as MaxPool3D,fc as MaxPool3DGrad,mc as MaxPoolGrad,dc as MaxPoolWithArgmax,To as Maximum,Io as Mean,Co as Min,vo as Minimum,wo as MirrorPad,Li as Mod,np as MomentumOptimizer,hc as Multinomial,So as Multiply,ms as Neg,ua as NonMaxSuppressionV3,Bi as NonMaxSuppressionV4,la as NonMaxSuppressionV5,ia as NotEqual,FD as OP_SCOPE_SUFFIX,pa as OneHot,fs as OnesLike,Jr as Optimizer,ni as OptimizerConstructors,ds as Pack,_o as PadV2,fme as Pool,Ao as Pow,No as Prelu,ca as Prod,op as RMSPropOptimizer,zs as RNN,ja as Range,Ok as Rank,Bu as Real,po as RealDiv,$i as Reciprocal,nr as Reduction,Do as Relu,Fo as Relu6,hs as Reshape,Po as ResizeBilinear,bc as ResizeBilinearGrad,Ha as ResizeNearestNeighbor,gc as ResizeNearestNeighborGrad,ma as Reverse,Ta as RotateWithOffset,fa as Round,Mo as Rsqrt,su as SGDOptimizer,da as ScatterNd,gs as Select,Oi as Selu,um as Sequential,Ro as Sigmoid,zi as Sign,Eo as Sin,ha as Sinh,bs as Slice,$o as Softmax,Gi as Softplus,ys as SpaceToBatchND,yc as SparseFillEmptyRows,xc as SparseReshape,Tc as SparseSegmentMean,kc as SparseSegmentSum,$u as SparseToDense,xs as SplitV,Lo as Sqrt,qa as Square,Oo as SquaredDifference,Is as Step,ga as StridedSlice,Ou as StringNGrams,Ic as StringSplit,Cc as StringToHashBucketFast,zo as Sub,Bo as Sum,dn as SymbolicTensor,ba as Tan,Go as Tanh,Qe as Tensor,xt as TensorBuffer,vn as Tile,ya as TopK,xa as Transform,Wo as Transpose,vc as Unique,Ts as Unpack,zu as UnsortedSegmentSum,Uu as Variable,ks as ZerosLike,Cs as _FusedMatMul,$t as abs,hI as acos,gI as acosh,X as add,bI as addN,If as all,Rc as any,Qi as argMax,yI as argMin,xI as asin,TI as asinh,kI as atan,II as atan2,CI as atanh,Ml as avgPool,Cf as avgPool3d,D0 as backend,I as backend_util,o6 as basicLSTMCell,Za as batchNorm,_I as batchNorm2d,AI as batchNorm3d,NI as batchNorm4d,El as batchToSpaceND,vf as bincount,yLe as booleanMaskAsync,DI as broadcastArgs,Rl as broadcastTo,Ds as broadcast_util,yb as browser,Ce as buffer,x9 as callbacks,J as cast,PI as ceil,Rr as clipByValue,wn as clone,Vn as complex,ut as concat,FI as concat1d,MI as concat2d,EI as concat3d,RI as concat4d,HP as constraints,wf as conv1d,jn as conv2d,Sf as conv2dTranspose,_f as conv3d,LI as conv3dTranspose,Ime as copyRegisteredKernels,Ll as cos,Af as cosh,Lb as cosineWindow,Nf as cumsum,ln as customGrad,mE as data,BI as denseBincount,dI as deprecationWarn,$I as depthToSpace,Ji as depthwiseConv2d,I9 as deregisterOp,Ki as device_util,M6 as diag,OI as dilation2d,hbe as disableDeprecationWarnings,Ee as dispose,gbe as disposeVariables,ce as div,zI as divNoNan,z6 as dot,r2 as dropout,GI as einsum,eu as elu,dbe as enableDebugMode,fbe as enableProdMode,n2 as enclosingPowerOfTwo,Uo as engine,$ as env,Kr as equal,WI as erf,cr as exp,_r as expandDims,UI as expm1,$c as eye,jl as fft,Ca as fill,Ibe as findBackend,Cbe as findBackendFactory,tu as floor,kf as floorDiv,B$ as forceHalfFloat,Fs as fused,Ja as gather,e2 as gatherND,xb as gather_util,Tbe as getBackend,Fk as getGradient,mf as getKernel,nb as getKernelsForBackend,ome as getThreadsCount,$B as gpgpu_util,c5 as grad,m5 as grads,rr as greater,Vo as greaterEqual,Hu as ifft,Bl as imag,Nn as image,MBe as inTopKAsync,fF as initializers,qC as input,Ur as io,Vf as irfft,t5 as isFinite,n5 as isInf,KI as isNaN,Vt as keep,xr as kernel_impls,qF as layers,$l as leakyRelu,Df as less,jo as lessEqual,K2 as linalg,VI as linspace,Y9 as loadGraphModel,FQ as loadLayersModel,jI as localResponseNormalization,Lr as log,Ol as log1p,y5 as logSigmoid,Pf as logSoftmax,YI as logSumExp,jr as logicalAnd,zl as logicalNot,Mf as logicalOr,D5 as logicalXor,hVe as losses,je as matMul,m0 as math,Zr as max,Gl as maxPool,Ef as maxPool3d,QI as maxPoolWithArgmax,Hn as maximum,Rt as mean,Tf as memory,L5 as meshgrid,XF as metrics,Oc as min,ru as minimum,ZI as mirrorPad,JI as mod,DQ as model,YF as models,zc as moments,KLe as movingAverage,R as mul,K5 as multiRNNCell,eC as multinomial,Je as neg,xC as nextFrame,Eb as norm,ti as notEqual,Xi as oneHot,mr as ones,Ar as onesLike,_ as op,X5 as outerProduct,_n as pad,Z5 as pad1d,e8 as pad2d,r8 as pad3d,o8 as pad4d,l8 as pool,An as pow,Ul as prelu,oI as print,Rf as prod,bbe as profile,d8 as rand,I8 as randomGamma,Db as randomNormal,va as randomUniform,nu as range,xbe as ready,ju as real,lC as reciprocal,Vu as registerBackend,MQ as registerCallbackConstructor,oD as registerGradient,Wi as registerKernel,k9 as registerOp,QF as regularizers,Hr as relu,Bf as relu6,kbe as removeBackend,L as reshape,yr as reverse,P8 as reverse1d,M8 as reverse2d,R8 as reverse3d,B8 as reverse4d,Hl as rfft,$f as round,Of as rsqrt,me as scalar,Z0 as scatterND,kb as scatter_util,zf as selu,pC as separableConv2d,PQ as sequential,re as serialization,Sq as setBackend,vbe as setPlatform,nme as setThreadsCount,tme as setWasmPath,rme as setWasmPaths,Jw as setWebGLContext,cC as setdiff1dAsync,wm as shared,un as sigmoid,mC as sign,WKe as signal,Gf as sin,Wf as sinh,We as slice,Uf as slice1d,Pb as slice2d,Kf as slice3d,Wc as slice4d,kt as slice_util,Vl as softmax,ei as softplus,Wl as spaceToBatchND,qf as sparse,Rb as sparseToDense,BKe as spectral,kr as split,Lt as sqrt,Xe as square,jf as squaredDifference,pn as squeeze,fr as stack,ou as step,fC as stridedSlice,Kb as string,pe as sub,he as sum,Ui as sumOutType,dC as tan,Zi as tanh,Mr as tensor,zt as tensor1d,ri as tensor2d,uI as tensor3d,lX as tensor4d,pX as tensor5d,cX as tensor6d,Ns as tensor_util,N0 as test_util,G as tidy,Vr as tile,ybe as time,hC as topk,sp as train,qe as transpose,ql as truncatedNormal,Fb as unique,kme as unregisterGradient,Tme as unregisterKernel,gC as unsortedSegmentSum,Br as unstack,Kt as upcastType,b as util,f5 as valueAndGrad,d5 as valueAndGrads,bC as variable,Sb as variableGrads,E8r as version,Q9 as version_converter,wq as version_core,wJ as version_cpu,xd as version_layers,sme as version_wasm,pne as version_webgl,h5t as webgl,AB as webgl_util,VU as webgpu,Ot as where,Hf as whereAsync,Tt as zeros,De as zerosLike};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
//# sourceMappingURL=tfjs.min.esm.js.map
