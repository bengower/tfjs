var Nj=Object.create;var QS=Object.defineProperty;var Dj=Object.getOwnPropertyDescriptor;var Rj=Object.getOwnPropertyNames;var Fj=Object.getPrototypeOf,Pj=Object.prototype.hasOwnProperty;var cm=(r=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(r,{get:(t,e)=>(typeof require<"u"?require:t)[e]}):r)(function(r){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+r+'" is not supported')});var Fr=(r,t)=>()=>(t||r((t={exports:{}}).exports,t),t.exports),We=(r,t)=>{for(var e in t)QS(r,e,{get:t[e],enumerable:!0})},Mj=(r,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of Rj(t))!Pj.call(r,o)&&o!==e&&QS(r,o,{get:()=>t[o],enumerable:!(n=Dj(t,o))||n.enumerable});return r};var dm=(r,t,e)=>(e=r!=null?Nj(Fj(r)):{},Mj(t||!r||!r.__esModule?QS(e,"default",{value:r,enumerable:!0}):e,r));var $1=Fr(()=>{});var B1=Fr(()=>{});var mR=Fr((lR,Yv)=>{(function(r,t,e){function n(i){var u=this,p=a();u.next=function(){var l=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=l-(u.c=l|0)},u.c=1,u.s0=p(" "),u.s1=p(" "),u.s2=p(" "),u.s0-=p(i),u.s0<0&&(u.s0+=1),u.s1-=p(i),u.s1<0&&(u.s1+=1),u.s2-=p(i),u.s2<0&&(u.s2+=1),p=null}function o(i,u){return u.c=i.c,u.s0=i.s0,u.s1=i.s1,u.s2=i.s2,u}function s(i,u){var p=new n(i),l=u&&u.state,m=p.next;return m.int32=function(){return p.next()*4294967296|0},m.double=function(){return m()+(m()*2097152|0)*11102230246251565e-32},m.quick=m,l&&(typeof l=="object"&&o(l,p),m.state=function(){return o(p,{})}),m}function a(){var i=4022871197,u=function(p){p=String(p);for(var l=0;l<p.length;l++){i+=p.charCodeAt(l);var m=.02519603282416938*i;i=m>>>0,m-=i,m*=i,i=m>>>0,m-=i,i+=m*4294967296}return(i>>>0)*23283064365386963e-26};return u}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.alea=s})(lR,typeof Yv=="object"&&Yv,typeof define=="function"&&define)});var dR=Fr((cR,Zv)=>{(function(r,t,e){function n(a){var i=this,u="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var l=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^l^l>>>8},a===(a|0)?i.x=a:u+=a;for(var p=0;p<u.length+64;p++)i.x^=u.charCodeAt(p)|0,i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i}function s(a,i){var u=new n(a),p=i&&i.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=u.next,l.quick=l,p&&(typeof p=="object"&&o(p,u),l.state=function(){return o(u,{})}),l}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xor128=s})(cR,typeof Zv=="object"&&Zv,typeof define=="function"&&define)});var hR=Fr((fR,Qv)=>{(function(r,t,e){function n(a){var i=this,u="";i.next=function(){var l=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(l^l<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,a===(a|0)?i.x=a:u+=a;for(var p=0;p<u.length+64;p++)i.x^=u.charCodeAt(p)|0,p==u.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i.v=a.v,i.d=a.d,i}function s(a,i){var u=new n(a),p=i&&i.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=u.next,l.quick=l,p&&(typeof p=="object"&&o(p,u),l.state=function(){return o(u,{})}),l}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xorwow=s})(fR,typeof Qv=="object"&&Qv,typeof define=="function"&&define)});var bR=Fr((gR,Jv)=>{(function(r,t,e){function n(a){var i=this;i.next=function(){var p=i.x,l=i.i,m,c,d;return m=p[l],m^=m>>>7,c=m^m<<24,m=p[l+1&7],c^=m^m>>>10,m=p[l+3&7],c^=m^m>>>3,m=p[l+4&7],c^=m^m<<7,m=p[l+7&7],m=m^m<<13,c^=m^m<<9,p[l]=c,i.i=l+1&7,c};function u(p,l){var m,c,d=[];if(l===(l|0))c=d[0]=l;else for(l=""+l,m=0;m<l.length;++m)d[m&7]=d[m&7]<<15^l.charCodeAt(m)+d[m+1&7]<<13;for(;d.length<8;)d.push(0);for(m=0;m<8&&d[m]===0;++m);for(m==8?c=d[7]=-1:c=d[m],p.x=d,p.i=0,m=256;m>0;--m)p.next()}u(i,a)}function o(a,i){return i.x=a.x.slice(),i.i=a.i,i}function s(a,i){a==null&&(a=+new Date);var u=new n(a),p=i&&i.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=u.next,l.quick=l,p&&(p.x&&o(p,u),l.state=function(){return o(u,{})}),l}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xorshift7=s})(gR,typeof Jv=="object"&&Jv,typeof define=="function"&&define)});var TR=Fr((yR,eA)=>{(function(r,t,e){function n(a){var i=this;i.next=function(){var p=i.w,l=i.X,m=i.i,c,d;return i.w=p=p+1640531527|0,d=l[m+34&127],c=l[m=m+1&127],d^=d<<13,c^=c<<17,d^=d>>>15,c^=c>>>12,d=l[m]=d^c,i.i=m,d+(p^p>>>16)|0};function u(p,l){var m,c,d,f,h,g=[],b=128;for(l===(l|0)?(c=l,l=null):(l=l+"\0",c=0,b=Math.max(b,l.length)),d=0,f=-32;f<b;++f)l&&(c^=l.charCodeAt((f+32)%l.length)),f===0&&(h=c),c^=c<<10,c^=c>>>15,c^=c<<4,c^=c>>>13,f>=0&&(h=h+1640531527|0,m=g[f&127]^=c+h,d=m==0?d+1:0);for(d>=128&&(g[(l&&l.length||0)&127]=-1),d=127,f=4*128;f>0;--f)c=g[d+34&127],m=g[d=d+1&127],c^=c<<13,m^=m<<17,c^=c>>>15,m^=m>>>12,g[d]=c^m;p.w=h,p.X=g,p.i=d}u(i,a)}function o(a,i){return i.i=a.i,i.w=a.w,i.X=a.X.slice(),i}function s(a,i){a==null&&(a=+new Date);var u=new n(a),p=i&&i.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=u.next,l.quick=l,p&&(p.X&&o(p,u),l.state=function(){return o(u,{})}),l}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xor4096=s})(yR,typeof eA=="object"&&eA,typeof define=="function"&&define)});var IR=Fr((xR,tA)=>{(function(r,t,e){function n(a){var i=this,u="";i.next=function(){var l=i.b,m=i.c,c=i.d,d=i.a;return l=l<<25^l>>>7^m,m=m-c|0,c=c<<24^c>>>8^d,d=d-l|0,i.b=l=l<<20^l>>>12^m,i.c=m=m-c|0,i.d=c<<16^m>>>16^d,i.a=d-l|0},i.a=0,i.b=0,i.c=-1640531527,i.d=1367130551,a===Math.floor(a)?(i.a=a/4294967296|0,i.b=a|0):u+=a;for(var p=0;p<u.length+20;p++)i.b^=u.charCodeAt(p)|0,i.next()}function o(a,i){return i.a=a.a,i.b=a.b,i.c=a.c,i.d=a.d,i}function s(a,i){var u=new n(a),p=i&&i.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var m=u.next()>>>11,c=(u.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=u.next,l.quick=l,p&&(typeof p=="object"&&o(p,u),l.state=function(){return o(u,{})}),l}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.tychei=s})(xR,typeof tA=="object"&&tA,typeof define=="function"&&define)});var CR=Fr(()=>{});var SR=Fr((kR,oy)=>{(function(r,t,e){var n=256,o=6,s=52,a="random",i=e.pow(n,o),u=e.pow(2,s),p=u*2,l=n-1,m;function c(x,I,k){var w=[];I=I==!0?{entropy:!0}:I||{};var R=g(h(I.entropy?[x,T(t)]:x??b(),3),w),F=new d(w),P=function(){for(var E=F.g(o),B=i,G=0;E<u;)E=(E+G)*n,B*=n,G=F.g(1);for(;E>=p;)E/=2,B/=2,G>>>=1;return(E+G)/B};return P.int32=function(){return F.g(4)|0},P.quick=function(){return F.g(4)/4294967296},P.double=P,g(T(F.S),t),(I.pass||k||function(E,B,G,U){return U&&(U.S&&f(U,F),E.state=function(){return f(F,{})}),G?(e[a]=E,B):E})(P,R,"global"in I?I.global:this==e,I.state)}function d(x){var I,k=x.length,w=this,R=0,F=w.i=w.j=0,P=w.S=[];for(k||(x=[k++]);R<n;)P[R]=R++;for(R=0;R<n;R++)P[R]=P[F=l&F+x[R%k]+(I=P[R])],P[F]=I;(w.g=function(E){for(var B,G=0,U=w.i,V=w.j,W=w.S;E--;)B=W[U=l&U+1],G=G*n+W[l&(W[U]=W[V=l&V+B])+(W[V]=B)];return w.i=U,w.j=V,G})(n)}function f(x,I){return I.i=x.i,I.j=x.j,I.S=x.S.slice(),I}function h(x,I){var k=[],w=typeof x,R;if(I&&w=="object")for(R in x)try{k.push(h(x[R],I-1))}catch{}return k.length?k:w=="string"?x:x+"\0"}function g(x,I){for(var k=x+"",w,R=0;R<k.length;)I[l&R]=l&(w^=I[l&R]*19)+k.charCodeAt(R++);return T(I)}function b(){try{var x;return m&&(x=m.randomBytes)?x=x(n):(x=new Uint8Array(n),(r.crypto||r.msCrypto).getRandomValues(x)),T(x)}catch{var I=r.navigator,k=I&&I.plugins;return[+new Date,r,k,r.screen,T(t)]}}function T(x){return String.fromCharCode.apply(0,x)}if(g(e.random(),t),typeof oy=="object"&&oy.exports){oy.exports=c;try{m=CR()}catch{}}else typeof define=="function"&&define.amd?define(function(){return c}):e["seed"+a]=c})(typeof self<"u"?self:kR,[],Math)});var Ih=Fr((qEe,vR)=>{var iY=mR(),uY=dR(),pY=hR(),lY=bR(),mY=TR(),cY=IR(),Jp=SR();Jp.alea=iY;Jp.xor128=uY;Jp.xorwow=pY;Jp.xorshift7=lY;Jp.xor4096=mY;Jp.tychei=cY;vR.exports=Jp});var hw=Fr(()=>{});var Yh=Fr(()=>{});var wg=Fr(()=>{});var t0=Fr(()=>{});var $q=Fr(()=>{});var Bq=Fr(()=>{});var Oq=Fr((fk,n0)=>{"use strict";var r0=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(t){t=t||{};function e(){return ae.buffer!=Ye&&er(ae.buffer),Pt}function n(){return ae.buffer!=Ye&&er(ae.buffer),bt}function o(){return ae.buffer!=Ye&&er(ae.buffer),_t}function s(){return ae.buffer!=Ye&&er(ae.buffer),$n}function a(){return ae.buffer!=Ye&&er(ae.buffer),lr}function i(){return ae.buffer!=Ye&&er(ae.buffer),eo}function u(){return ae.buffer!=Ye&&er(ae.buffer),Br}var p=typeof t<"u"?t:{},l,m;p.ready=new Promise(function(_,K){l=_,m=K});var c;typeof process<"u"&&process.listeners&&(c={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var d=Object.assign({},p),f=[],h="./this.program",g=(_,K)=>{throw K},b=typeof window=="object",T=typeof importScripts=="function",x=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",I=p.ENVIRONMENT_IS_PTHREAD||!1,k="";function w(_){return p.locateFile?p.locateFile(_,k):k+_}var R,F,P,E;function B(_){if(_ instanceof $p)return;j("exiting due to exception: "+_)}if(x){T?k=wg().dirname(k)+"/":k=__dirname+"/";var G,U;typeof cm=="function"&&(G=Yh(),U=wg()),R=(K,pe)=>(K=U.normalize(K),G.readFileSync(K,pe?void 0:"utf8")),P=K=>{var pe=R(K,!0);return pe.buffer||(pe=new Uint8Array(pe)),pe},F=(K,pe,xe)=>{K=U.normalize(K),G.readFile(K,function(Le,pt){Le?xe(Le):pe(pt.buffer)})},process.argv.length>1&&(h=process.argv[1].replace(/\\/g,"/")),f=process.argv.slice(2),process.on("uncaughtException",function(K){if(!(K instanceof $p))throw K}),process.on("unhandledRejection",function(K){throw K}),g=(K,pe)=>{if(na())throw process.exitCode=K,pe;B(pe),process.exit(K)},p.inspect=function(){return"[Emscripten Module object]"};let _;try{_=t0()}catch(K){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),K}global.Worker=_.Worker}else(b||T)&&(T?k=self.location.href:typeof document<"u"&&document.currentScript&&(k=document.currentScript.src),r&&(k=r),k.indexOf("blob:")!==0?k=k.substr(0,k.replace(/[?#].*/,"").lastIndexOf("/")+1):k="",x||(R=_=>{var K=new XMLHttpRequest;return K.open("GET",_,!1),K.send(null),K.responseText},T&&(P=_=>{var K=new XMLHttpRequest;return K.open("GET",_,!1),K.responseType="arraybuffer",K.send(null),new Uint8Array(K.response)}),F=(_,K,pe)=>{var xe=new XMLHttpRequest;xe.open("GET",_,!0),xe.responseType="arraybuffer",xe.onload=()=>{if(xe.status==200||xe.status==0&&xe.response){K(xe.response);return}pe()},xe.onerror=pe,xe.send(null)}),E=_=>document.title=_);x&&typeof performance>"u"&&(global.performance=$q().performance);var V=console.log.bind(console),W=console.warn.bind(console);x&&(V=_=>G.writeSync(1,_+`
`),W=_=>G.writeSync(2,_+`
`));var H=p.print||V,j=p.printErr||W;Object.assign(p,d),d=null,p.arguments&&(f=p.arguments),p.thisProgram&&(h=p.thisProgram),p.quit&&(g=p.quit);var X=4,ee=Atomics.load,ne=Atomics.store,oe=Atomics.compareExchange,se;p.wasmBinary&&(se=p.wasmBinary);var re=p.noExitRuntime||!0;typeof WebAssembly!="object"&&sm("no native wasm support detected");var ae,ce,ye=!1,ke;function Fe(_,K){_||sm(K)}var Me=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function Ve(_,K,pe){for(var xe=K+pe,Le=K;_[Le]&&!(Le>=xe);)++Le;if(Le-K>16&&_.buffer&&Me)return Me.decode(_.buffer instanceof SharedArrayBuffer?_.slice(K,Le):_.subarray(K,Le));for(var pt="";K<Le;){var He=_[K++];if(!(He&128)){pt+=String.fromCharCode(He);continue}var Ze=_[K++]&63;if((He&224)==192){pt+=String.fromCharCode((He&31)<<6|Ze);continue}var Ir=_[K++]&63;if((He&240)==224?He=(He&15)<<12|Ze<<6|Ir:He=(He&7)<<18|Ze<<12|Ir<<6|_[K++]&63,He<65536)pt+=String.fromCharCode(He);else{var oo=He-65536;pt+=String.fromCharCode(55296|oo>>10,56320|oo&1023)}}return pt}function Z(_,K){return _?Ve(n(),_,K):""}function ft(_,K,pe,xe){if(!(xe>0))return 0;for(var Le=pe,pt=pe+xe-1,He=0;He<_.length;++He){var Ze=_.charCodeAt(He);if(Ze>=55296&&Ze<=57343){var Ir=_.charCodeAt(++He);Ze=65536+((Ze&1023)<<10)|Ir&1023}if(Ze<=127){if(pe>=pt)break;K[pe++]=Ze}else if(Ze<=2047){if(pe+1>=pt)break;K[pe++]=192|Ze>>6,K[pe++]=128|Ze&63}else if(Ze<=65535){if(pe+2>=pt)break;K[pe++]=224|Ze>>12,K[pe++]=128|Ze>>6&63,K[pe++]=128|Ze&63}else{if(pe+3>=pt)break;K[pe++]=240|Ze>>18,K[pe++]=128|Ze>>12&63,K[pe++]=128|Ze>>6&63,K[pe++]=128|Ze&63}}return K[pe]=0,pe-Le}function Ct(_,K,pe){return ft(_,n(),K,pe)}var Ye,Pt,bt,_t,Yt,$n,lr,eo,Br;I&&(Ye=p.buffer);function er(_){Ye=_,p.HEAP8=Pt=new Int8Array(_),p.HEAP16=_t=new Int16Array(_),p.HEAP32=$n=new Int32Array(_),p.HEAPU8=bt=new Uint8Array(_),p.HEAPU16=Yt=new Uint16Array(_),p.HEAPU32=lr=new Uint32Array(_),p.HEAPF32=eo=new Float32Array(_),p.HEAPF64=Br=new Float64Array(_)}var Or=p.INITIAL_MEMORY||16777216;if(I)ae=p.wasmMemory,Ye=p.buffer;else if(p.wasmMemory)ae=p.wasmMemory;else if(ae=new WebAssembly.Memory({initial:Or/65536,maximum:32768,shared:!0}),!(ae.buffer instanceof SharedArrayBuffer))throw j("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),x&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");ae&&(Ye=ae.buffer),Or=Ye.byteLength,er(Ye);var zr,to=[],ro=[],Zr=[],Ni=!1;function na(){return re}function Ru(){if(p.preRun)for(typeof p.preRun=="function"&&(p.preRun=[p.preRun]);p.preRun.length;)Gf(p.preRun.shift());Kf(to)}function Rr(){Ni=!0,!I&&Kf(ro)}function Di(){if(!I){if(p.postRun)for(typeof p.postRun=="function"&&(p.postRun=[p.postRun]);p.postRun.length;)h0(p.postRun.shift());Kf(Zr)}}function Gf(_){to.unshift(_)}function Uf(_){ro.unshift(_)}function h0(_){Zr.unshift(_)}var Fu=0,om=null,Ri=null;function g0(_){Fu++,p.monitorRunDependencies&&p.monitorRunDependencies(Fu)}function b0(_){if(Fu--,p.monitorRunDependencies&&p.monitorRunDependencies(Fu),Fu==0&&(om!==null&&(clearInterval(om),om=null),Ri)){var K=Ri;Ri=null,K()}}function sm(_){I?postMessage({cmd:"onAbort",arg:_}):p.onAbort&&p.onAbort(_),_="Aborted("+_+")",j(_),ye=!0,ke=1,_+=". Build with -sASSERTIONS for more info.";var K=new WebAssembly.RuntimeError(_);throw m(K),K}var bk="data:application/octet-stream;base64,";function Pg(_){return _.startsWith(bk)}function Mg(_){return _.startsWith("file://")}var un;un="tfjs-backend-wasm-threaded-simd.wasm",Pg(un)||(un=w(un));function Eg(_){try{if(_==un&&se)return new Uint8Array(se);if(P)return P(_);throw"both async and sync fetching of the wasm failed"}catch(K){sm(K)}}function yk(){if(!se&&(b||T)){if(typeof fetch=="function"&&!Mg(un))return fetch(un,{credentials:"same-origin"}).then(function(_){if(!_.ok)throw"failed to load wasm binary file at '"+un+"'";return _.arrayBuffer()}).catch(function(){return Eg(un)});if(F)return new Promise(function(_,K){F(un,function(pe){_(new Uint8Array(pe))},K)})}return Promise.resolve().then(function(){return Eg(un)})}function Lg(){var _={env:jg,wasi_snapshot_preview1:jg};function K(He,Ze){var Ir=He.exports;if(p.asm=Ir,Nk(p.asm._emscripten_tls_init),zr=p.asm.__indirect_function_table,Uf(p.asm.__wasm_call_ctors),ce=Ze,!I){var oo=je.unusedWorkers.length;je.unusedWorkers.forEach(function(Pi){je.loadWasmModuleToWorker(Pi,function(){--oo||b0("wasm-instantiate")})})}}I||g0("wasm-instantiate");function pe(He){K(He.instance,He.module)}function xe(He){return yk().then(function(Ze){return WebAssembly.instantiate(Ze,_)}).then(function(Ze){return Ze}).then(He,function(Ze){j("failed to asynchronously prepare wasm: "+Ze),sm(Ze)})}function Le(){return!se&&typeof WebAssembly.instantiateStreaming=="function"&&!Pg(un)&&!Mg(un)&&!x&&typeof fetch=="function"?fetch(un,{credentials:"same-origin"}).then(function(He){var Ze=WebAssembly.instantiateStreaming(He,_);return Ze.then(pe,function(Ir){return j("wasm streaming compile failed: "+Ir),j("falling back to ArrayBuffer instantiation"),xe(pe)})}):xe(pe)}if(p.instantiateWasm)try{var pt=p.instantiateWasm(_,K);return pt}catch(He){j("Module.instantiateWasm callback failed with error: "+He),m(He)}return Le().catch(m),{}}var y0,T0,Tk={};function $p(_){this.name="ExitStatus",this.message="Program terminated with exit("+_+")",this.status=_}function xk(_){var K=je.pthreads[_];delete je.pthreads[_],K.terminate(),XS(_),je.runningWorkers.splice(je.runningWorkers.indexOf(K),1),K.pthread_ptr=0}function _g(_){var K=je.pthreads[_];K.postMessage({cmd:"cancel"})}function $g(_){var K=je.pthreads[_];Fe(K),je.returnWorkerToPool(K)}function Bg(_){var K=je.getNewWorker();if(!K)return 6;je.runningWorkers.push(K),je.pthreads[_.pthread_ptr]=K,K.pthread_ptr=_.pthread_ptr;var pe={cmd:"run",start_routine:_.startRoutine,arg:_.arg,pthread_ptr:_.pthread_ptr};return K.runPthread=()=>{pe.time=performance.now(),K.postMessage(pe,_.transferList)},K.loaded&&(K.runPthread(),delete K.runPthread),0}var Wf={varargs:void 0,get:function(){Wf.varargs+=4;var _=s()[Wf.varargs-4>>2];return _},getStr:function(_){var K=Z(_);return K}};function Ik(_){if(I)return Pu(1,1,_);ke=_,na()||(je.terminateAllThreads(),p.onExit&&p.onExit(_),ye=!0),g(_,new $p(_))}function Ck(_,K){if(ke=_,!K&&I)throw zg(_),"unwind";Ik(_)}var Og=Ck;function kk(_){if(_ instanceof $p||_=="unwind")return ke;g(1,_)}var je={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){I?je.initWorker():je.initMainThread()},initMainThread:function(){for(var _=8;_--;)je.allocateUnusedWorker()},initWorker:function(){re=!1},setExitStatus:function(_){ke=_},terminateAllThreads:function(){for(var _ of Object.values(je.pthreads))je.returnWorkerToPool(_);for(var _ of je.unusedWorkers)_.terminate();je.unusedWorkers=[]},returnWorkerToPool:function(_){var K=_.pthread_ptr;delete je.pthreads[K],je.unusedWorkers.push(_),je.runningWorkers.splice(je.runningWorkers.indexOf(_),1),_.pthread_ptr=0,XS(K)},receiveObjectTransfer:function(_){},threadInitTLS:function(){je.tlsInitFunctions.forEach(_=>_())},loadWasmModuleToWorker:function(_,K){_.onmessage=pe=>{var xe=pe.data,Le=xe.cmd;if(_.pthread_ptr&&(je.currentProxiedOperationCallerThread=_.pthread_ptr),xe.targetThread&&xe.targetThread!=eb()){var pt=je.pthreads[xe.targetThread];pt?pt.postMessage(xe,xe.transferList):j('Internal error! Worker sent a message "'+Le+'" to target pthread '+xe.targetThread+", but that thread no longer exists!"),je.currentProxiedOperationCallerThread=void 0;return}Le==="processProxyingQueue"?Vf(xe.queue):Le==="spawnThread"?Bg(xe):Le==="cleanupThread"?$g(xe.thread):Le==="killThread"?xk(xe.thread):Le==="cancelThread"?_g(xe.thread):Le==="loaded"?(_.loaded=!0,K&&K(_),_.runPthread&&(_.runPthread(),delete _.runPthread)):Le==="print"?H("Thread "+xe.threadId+": "+xe.text):Le==="printErr"?j("Thread "+xe.threadId+": "+xe.text):Le==="alert"?alert("Thread "+xe.threadId+": "+xe.text):xe.target==="setimmediate"?_.postMessage(xe):Le==="onAbort"?p.onAbort&&p.onAbort(xe.arg):Le&&j("worker sent an unknown command "+Le),je.currentProxiedOperationCallerThread=void 0},_.onerror=pe=>{var xe="worker sent an error!";throw j(xe+" "+pe.filename+":"+pe.lineno+": "+pe.message),pe},x&&(_.on("message",function(pe){_.onmessage({data:pe})}),_.on("error",function(pe){_.onerror(pe)}),_.on("detachedExit",function(){})),_.postMessage({cmd:"load",urlOrBlob:p.mainScriptUrlOrBlob||r,wasmMemory:ae,wasmModule:ce})},allocateUnusedWorker:function(){var _=w("tfjs-backend-wasm-threaded-simd.worker.js");je.unusedWorkers.push(new Worker(_))},getNewWorker:function(){return je.unusedWorkers.length==0&&(je.allocateUnusedWorker(),je.loadWasmModuleToWorker(je.unusedWorkers[0])),je.unusedWorkers.pop()}};p.PThread=je;function Kf(_){for(;_.length>0;)_.shift()(p)}function Sk(_){var K=YS(),pe=_();return tb(K),pe}function x0(_){return _}function I0(_){var K=/\b_Z[\w\d_]+/g;return _.replace(K,function(pe){var xe=pe;return pe===xe?pe:xe+" ["+pe+"]"})}function vk(){var _=eb(),K=s()[_+44>>2],pe=s()[_+48>>2],xe=K-pe;N0(K,xe),tb(K)}p.establishStackSpace=vk;function zg(_){if(I)return Pu(2,0,_);try{Og(_)}catch(K){kk(K)}}var am=[];function Ak(_){var K=am[_];return K||(_>=am.length&&(am.length=_+1),am[_]=K=zr.get(_)),K}function wk(_,K){var pe=Ak(_)(K);na()?je.setExitStatus(pe):w0(pe)}p.invokeEntryPoint=wk;function C0(){var _=new Error;if(!_.stack){try{throw new Error}catch(K){_=K}if(!_.stack)return"(no stack trace available)"}return _.stack.toString()}function Nk(_){je.tlsInitFunctions.push(_)}function Dk(_,K){e().set(_,K)}function Rk(_){S0(_,!T,1,!b),je.threadInitTLS()}function Fk(_){I?postMessage({cmd:"cleanupThread",thread:_}):$g(_)}function Gg(_,K,pe,xe){return I?Pu(3,1,_,K,pe,xe):Ug(_,K,pe,xe)}function Ug(_,K,pe,xe){if(typeof SharedArrayBuffer>"u")return j("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var Le=[],pt=0;if(I&&(Le.length===0||pt))return Gg(_,K,pe,xe);if(pt)return pt;var He={startRoutine:pe,pthread_ptr:_,arg:xe,transferList:Le};return I?(He.cmd="spawnThread",postMessage(He,Le),0):Bg(He)}function Pk(){return 2097152}var Mk=!0;function Ek(){return Mk}function Vf(_){Atomics.store(s(),_>>2,1),eb()&&A0(_),Atomics.compareExchange(s(),_>>2,1,0)}p.executeNotifiedProxyingQueue=Vf;function Lk(_,K,pe,xe){if(_==K)setTimeout(()=>Vf(xe));else if(I)postMessage({targetThread:_,cmd:"processProxyingQueue",queue:xe});else{var Le=je.pthreads[_];if(!Le)return;Le.postMessage({cmd:"processProxyingQueue",queue:xe})}return 1}function _k(_,K,pe){return-1}function $k(){sm("")}function Bp(_){Bp.shown||(Bp.shown={}),Bp.shown[_]||(Bp.shown[_]=1,x&&(_="warning: "+_),j(_))}function Bk(){x||T||Bp("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Ok(){return Date.now()}function Wg(){return 2147483648}function zk(){return Wg()}var im;x?im=()=>{var _=process.hrtime();return _[0]*1e3+_[1]/1e6}:I?im=()=>performance.now()-p.__performance_now_clock_drift:im=()=>performance.now();function Gk(_,K,pe){n().copyWithin(_,K,K+pe)}function Uk(){return x?Bq().cpus().length:navigator.hardwareConcurrency}function Pu(_,K){var pe=arguments.length-2,xe=arguments;return Sk(()=>{for(var Le=pe,pt=rb(Le*8),He=pt>>3,Ze=0;Ze<pe;Ze++){var Ir=xe[2+Ze];u()[He+Ze]=Ir}return v0(_,Le,pt,K)})}var Hf=[];function Wk(_,K,pe){Hf.length=K;for(var xe=pe>>3,Le=0;Le<K;Le++)Hf[Le]=u()[xe+Le];var pt=_<0,He=pt?Tk[-_-1]:Zk[_];return He.apply(null,Hf)}function Kk(_){try{return ae.grow(_-Ye.byteLength+65535>>>16),er(ae.buffer),1}catch{}}function Vk(_){var K=n().length;if(_=_>>>0,_<=K)return!1;var pe=Wg();if(_>pe)return!1;let xe=(Ir,oo)=>Ir+(oo-Ir%oo)%oo;for(var Le=1;Le<=4;Le*=2){var pt=K*(1+.2/Le);pt=Math.min(pt,_+100663296);var He=Math.min(pe,xe(Math.max(_,pt),65536)),Ze=Kk(He);if(Ze)return!0}return!1}function Hk(){throw"unwind"}function Kg(_){return I?Pu(4,1,_):52}function Vg(_,K,pe,xe,Le){return I?Pu(5,1,_,K,pe,xe,Le):70}var qk=[null,[],[]];function jk(_,K){var pe=qk[_];K===0||K===10?((_===1?H:j)(Ve(pe,0)),pe.length=0):pe.push(K)}function Hg(_,K,pe,xe){if(I)return Pu(6,1,_,K,pe,xe);for(var Le=0,pt=0;pt<pe;pt++){var He=a()[K>>2],Ze=a()[K+4>>2];K+=8;for(var Ir=0;Ir<Ze;Ir++)jk(_,n()[He+Ir]);Le+=Ze}return a()[xe>>2]=Le,0}function qg(_){var K=p["_"+_];return K}function Xk(_,K,pe,xe,Le){var pt={string:Bn=>{var mm=0;if(Bn!=null&&Bn!==0){var F0=(Bn.length<<2)+1;mm=rb(F0),Ct(Bn,mm,F0)}return mm},array:Bn=>{var mm=rb(Bn.length);return Dk(Bn,mm),mm}};function He(Bn){return K==="string"?Z(Bn):K==="boolean"?Boolean(Bn):Bn}var Ze=qg(_),Ir=[],oo=0;if(xe)for(var Pi=0;Pi<xe.length;Pi++){var R0=pt[pe[Pi]];R0?(oo===0&&(oo=YS()),Ir[Pi]=R0(xe[Pi])):Ir[Pi]=xe[Pi]}var ZS=Ze.apply(null,Ir);function wj(Bn){return oo!==0&&tb(oo),He(Bn)}return ZS=wj(ZS),ZS}function Yk(_,K,pe,xe){pe=pe||[];var Le=pe.every(He=>He==="number"||He==="boolean"),pt=K!=="string";return pt&&Le&&!xe?qg(_):function(){return Xk(_,K,pe,arguments,xe)}}je.init();var Zk=[null,Ik,zg,Gg,Kg,Vg,Hg],jg={__emscripten_init_main_thread_js:Rk,__emscripten_thread_cleanup:Fk,__pthread_create_js:Ug,_emscripten_default_pthread_stack_size:Pk,_emscripten_get_now_is_monotonic:Ek,_emscripten_notify_task_queue:Lk,_emscripten_set_offscreencanvas_size:_k,abort:$k,emscripten_check_blocking_allowed:Bk,emscripten_date_now:Ok,emscripten_get_heap_max:zk,emscripten_get_now:im,emscripten_memcpy_big:Gk,emscripten_num_logical_cores:Uk,emscripten_receive_on_main_thread_js:Wk,emscripten_resize_heap:Vk,emscripten_unwind_to_js_event_loop:Hk,exit:Og,fd_close:Kg,fd_seek:Vg,fd_write:Hg,memory:ae||p.wasmMemory},k0=Lg(),Qk=p.___wasm_call_ctors=function(){return(Qk=p.___wasm_call_ctors=p.asm.__wasm_call_ctors).apply(null,arguments)},Jk=p._init=function(){return(Jk=p._init=p.asm.init).apply(null,arguments)},eS=p._init_with_threads_count=function(){return(eS=p._init_with_threads_count=p.asm.init_with_threads_count).apply(null,arguments)},tS=p._get_threads_count=function(){return(tS=p._get_threads_count=p.asm.get_threads_count).apply(null,arguments)},rS=p._register_tensor=function(){return(rS=p._register_tensor=p.asm.register_tensor).apply(null,arguments)},nS=p._dispose_data=function(){return(nS=p._dispose_data=p.asm.dispose_data).apply(null,arguments)},oS=p._dispose=function(){return(oS=p._dispose=p.asm.dispose).apply(null,arguments)},sS=p._Abs=function(){return(sS=p._Abs=p.asm.Abs).apply(null,arguments)},aS=p._Add=function(){return(aS=p._Add=p.asm.Add).apply(null,arguments)},iS=p._AddN=function(){return(iS=p._AddN=p.asm.AddN).apply(null,arguments)},uS=p._All=function(){return(uS=p._All=p.asm.All).apply(null,arguments)},pS=p._Any=function(){return(pS=p._Any=p.asm.Any).apply(null,arguments)},lS=p._ArgMax=function(){return(lS=p._ArgMax=p.asm.ArgMax).apply(null,arguments)},mS=p._AvgPool=function(){return(mS=p._AvgPool=p.asm.AvgPool).apply(null,arguments)},cS=p._BatchMatMul=function(){return(cS=p._BatchMatMul=p.asm.BatchMatMul).apply(null,arguments)},dS=p._Ceil=function(){return(dS=p._Ceil=p.asm.Ceil).apply(null,arguments)},fS=p._ClipByValue=function(){return(fS=p._ClipByValue=p.asm.ClipByValue).apply(null,arguments)},hS=p._Conv2D=function(){return(hS=p._Conv2D=p.asm.Conv2D).apply(null,arguments)},gS=p._Conv2DBackpropInput=function(){return(gS=p._Conv2DBackpropInput=p.asm.Conv2DBackpropInput).apply(null,arguments)},bS=p._Cos=function(){return(bS=p._Cos=p.asm.Cos).apply(null,arguments)},yS=p._Cosh=function(){return(yS=p._Cosh=p.asm.Cosh).apply(null,arguments)},TS=p._CropAndResize=function(){return(TS=p._CropAndResize=p.asm.CropAndResize).apply(null,arguments)},xS=p._Cumprod=function(){return(xS=p._Cumprod=p.asm.Cumprod).apply(null,arguments)},IS=p._Cumsum=function(){return(IS=p._Cumsum=p.asm.Cumsum).apply(null,arguments)},CS=p._DepthToSpace=function(){return(CS=p._DepthToSpace=p.asm.DepthToSpace).apply(null,arguments)},kS=p._DepthwiseConv2dNative=function(){return(kS=p._DepthwiseConv2dNative=p.asm.DepthwiseConv2dNative).apply(null,arguments)},SS=p._Elu=function(){return(SS=p._Elu=p.asm.Elu).apply(null,arguments)},vS=p._Equal=function(){return(vS=p._Equal=p.asm.Equal).apply(null,arguments)},AS=p._Exp=function(){return(AS=p._Exp=p.asm.Exp).apply(null,arguments)},wS=p._FlipLeftRight=function(){return(wS=p._FlipLeftRight=p.asm.FlipLeftRight).apply(null,arguments)},NS=p._Floor=function(){return(NS=p._Floor=p.asm.Floor).apply(null,arguments)},DS=p._FloorDiv=function(){return(DS=p._FloorDiv=p.asm.FloorDiv).apply(null,arguments)},RS=p._FusedBatchNorm=function(){return(RS=p._FusedBatchNorm=p.asm.FusedBatchNorm).apply(null,arguments)},FS=p._FusedConv2D=function(){return(FS=p._FusedConv2D=p.asm.FusedConv2D).apply(null,arguments)},PS=p._FusedDepthwiseConv2D=function(){return(PS=p._FusedDepthwiseConv2D=p.asm.FusedDepthwiseConv2D).apply(null,arguments)},MS=p._Gather=function(){return(MS=p._Gather=p.asm.Gather).apply(null,arguments)},ES=p._GatherNd=function(){return(ES=p._GatherNd=p.asm.GatherNd).apply(null,arguments)},LS=p._Greater=function(){return(LS=p._Greater=p.asm.Greater).apply(null,arguments)},_S=p._GreaterEqual=function(){return(_S=p._GreaterEqual=p.asm.GreaterEqual).apply(null,arguments)},$S=p._LeakyRelu=function(){return($S=p._LeakyRelu=p.asm.LeakyRelu).apply(null,arguments)},BS=p._Less=function(){return(BS=p._Less=p.asm.Less).apply(null,arguments)},OS=p._LessEqual=function(){return(OS=p._LessEqual=p.asm.LessEqual).apply(null,arguments)},zS=p._Log=function(){return(zS=p._Log=p.asm.Log).apply(null,arguments)},GS=p._LogicalAnd=function(){return(GS=p._LogicalAnd=p.asm.LogicalAnd).apply(null,arguments)},US=p._LogicalNot=function(){return(US=p._LogicalNot=p.asm.LogicalNot).apply(null,arguments)},WS=p._LogicalOr=function(){return(WS=p._LogicalOr=p.asm.LogicalOr).apply(null,arguments)},KS=p._LogicalXor=function(){return(KS=p._LogicalXor=p.asm.LogicalXor).apply(null,arguments)},Xg=p._Max=function(){return(Xg=p._Max=p.asm.Max).apply(null,arguments)},Yg=p._MaxPool=function(){return(Yg=p._MaxPool=p.asm.MaxPool).apply(null,arguments)},qf=p._Maximum=function(){return(qf=p._Maximum=p.asm.Maximum).apply(null,arguments)},VS=p._Mean=function(){return(VS=p._Mean=p.asm.Mean).apply(null,arguments)},HS=p._Min=function(){return(HS=p._Min=p.asm.Min).apply(null,arguments)},um=p._Minimum=function(){return(um=p._Minimum=p.asm.Minimum).apply(null,arguments)},Zg=p._MirrorPad=function(){return(Zg=p._MirrorPad=p.asm.MirrorPad).apply(null,arguments)},pm=p._Multiply=function(){return(pm=p._Multiply=p.asm.Multiply).apply(null,arguments)},lm=p._Neg=function(){return(lm=p._Neg=p.asm.Neg).apply(null,arguments)},qS=p._NonMaxSuppressionV3=function(){return(qS=p._NonMaxSuppressionV3=p.asm.NonMaxSuppressionV3).apply(null,arguments)},q=p._NonMaxSuppressionV4=function(){return(q=p._NonMaxSuppressionV4=p.asm.NonMaxSuppressionV4).apply(null,arguments)},ue=p._NonMaxSuppressionV5=function(){return(ue=p._NonMaxSuppressionV5=p.asm.NonMaxSuppressionV5).apply(null,arguments)},Pe=p._NotEqual=function(){return(Pe=p._NotEqual=p.asm.NotEqual).apply(null,arguments)},at=p._OneHot=function(){return(at=p._OneHot=p.asm.OneHot).apply(null,arguments)},tr=p._PadV2=function(){return(tr=p._PadV2=p.asm.PadV2).apply(null,arguments)},rr=p._Pow=function(){return(rr=p._Pow=p.asm.Pow).apply(null,arguments)},st=p._Prelu=function(){return(st=p._Prelu=p.asm.Prelu).apply(null,arguments)},nt=p._Prod=function(){return(nt=p._Prod=p.asm.Prod).apply(null,arguments)},xr=p._RealDiv=function(){return(xr=p._RealDiv=p.asm.RealDiv).apply(null,arguments)},no=p._Relu=function(){return(no=p._Relu=p.asm.Relu).apply(null,arguments)},Fi=p._Relu6=function(){return(Fi=p._Relu6=p.asm.Relu6).apply(null,arguments)},Qg=p._ResizeBilinear=function(){return(Qg=p._ResizeBilinear=p.asm.ResizeBilinear).apply(null,arguments)},jf=p._ResizeNearestNeighbor=function(){return(jf=p._ResizeNearestNeighbor=p.asm.ResizeNearestNeighbor).apply(null,arguments)},jS=p._Reverse=function(){return(jS=p._Reverse=p.asm.Reverse).apply(null,arguments)},pn=p._RotateWithOffset=function(){return(pn=p._RotateWithOffset=p.asm.RotateWithOffset).apply(null,arguments)},Mu=p._Round=function(){return(Mu=p._Round=p.asm.Round).apply(null,arguments)},Jg=p._Rsqrt=function(){return(Jg=p._Rsqrt=p.asm.Rsqrt).apply(null,arguments)},jq=p._ScatterNd=function(){return(jq=p._ScatterNd=p.asm.ScatterNd).apply(null,arguments)},Xq=p._SelectV2=function(){return(Xq=p._SelectV2=p.asm.SelectV2).apply(null,arguments)},Yq=p._Sigmoid=function(){return(Yq=p._Sigmoid=p.asm.Sigmoid).apply(null,arguments)},Zq=p._Sin=function(){return(Zq=p._Sin=p.asm.Sin).apply(null,arguments)},Qq=p._Softmax=function(){return(Qq=p._Softmax=p.asm.Softmax).apply(null,arguments)},Jq=p._SparseFillEmptyRows=function(){return(Jq=p._SparseFillEmptyRows=p.asm.SparseFillEmptyRows).apply(null,arguments)},ej=p._SparseReshape=function(){return(ej=p._SparseReshape=p.asm.SparseReshape).apply(null,arguments)},tj=p._SparseSegmentReduction=function(){return(tj=p._SparseSegmentReduction=p.asm.SparseSegmentReduction).apply(null,arguments)},rj=p._Sqrt=function(){return(rj=p._Sqrt=p.asm.Sqrt).apply(null,arguments)},nj=p._Square=function(){return(nj=p._Square=p.asm.Square).apply(null,arguments)},oj=p._SquaredDifference=function(){return(oj=p._SquaredDifference=p.asm.SquaredDifference).apply(null,arguments)},sj=p._Step=function(){return(sj=p._Step=p.asm.Step).apply(null,arguments)},aj=p._StridedSlice=function(){return(aj=p._StridedSlice=p.asm.StridedSlice).apply(null,arguments)},ij=p._Sub=function(){return(ij=p._Sub=p.asm.Sub).apply(null,arguments)},uj=p._Sum=function(){return(uj=p._Sum=p.asm.Sum).apply(null,arguments)},pj=p._Tan=function(){return(pj=p._Tan=p.asm.Tan).apply(null,arguments)},lj=p._Tanh=function(){return(lj=p._Tanh=p.asm.Tanh).apply(null,arguments)},mj=p._Tile=function(){return(mj=p._Tile=p.asm.Tile).apply(null,arguments)},cj=p._TopK=function(){return(cj=p._TopK=p.asm.TopK).apply(null,arguments)},dj=p._Transform=function(){return(dj=p._Transform=p.asm.Transform).apply(null,arguments)},fj=p._Transpose=function(){return(fj=p._Transpose=p.asm.Transpose).apply(null,arguments)},hj=p.__FusedMatMul=function(){return(hj=p.__FusedMatMul=p.asm._FusedMatMul).apply(null,arguments)},gj=p._malloc=function(){return(gj=p._malloc=p.asm.malloc).apply(null,arguments)},bj=p._free=function(){return(bj=p._free=p.asm.free).apply(null,arguments)},yj=p.__emscripten_tls_init=function(){return(yj=p.__emscripten_tls_init=p.asm._emscripten_tls_init).apply(null,arguments)},eb=p._pthread_self=function(){return(eb=p._pthread_self=p.asm.pthread_self).apply(null,arguments)},Tj=p.___errno_location=function(){return(Tj=p.___errno_location=p.asm.__errno_location).apply(null,arguments)},S0=p.__emscripten_thread_init=function(){return(S0=p.__emscripten_thread_init=p.asm._emscripten_thread_init).apply(null,arguments)},xj=p.__emscripten_thread_crashed=function(){return(xj=p.__emscripten_thread_crashed=p.asm._emscripten_thread_crashed).apply(null,arguments)},Ij=p._emscripten_main_thread_process_queued_calls=function(){return(Ij=p._emscripten_main_thread_process_queued_calls=p.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},Cj=p._emscripten_main_browser_thread_id=function(){return(Cj=p._emscripten_main_browser_thread_id=p.asm.emscripten_main_browser_thread_id).apply(null,arguments)},v0=p._emscripten_run_in_main_runtime_thread_js=function(){return(v0=p._emscripten_run_in_main_runtime_thread_js=p.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},kj=p._emscripten_dispatch_to_thread_=function(){return(kj=p._emscripten_dispatch_to_thread_=p.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},A0=p.__emscripten_proxy_execute_task_queue=function(){return(A0=p.__emscripten_proxy_execute_task_queue=p.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)},XS=p.__emscripten_thread_free_data=function(){return(XS=p.__emscripten_thread_free_data=p.asm._emscripten_thread_free_data).apply(null,arguments)},w0=p.__emscripten_thread_exit=function(){return(w0=p.__emscripten_thread_exit=p.asm._emscripten_thread_exit).apply(null,arguments)},N0=p._emscripten_stack_set_limits=function(){return(N0=p._emscripten_stack_set_limits=p.asm.emscripten_stack_set_limits).apply(null,arguments)},YS=p.stackSave=function(){return(YS=p.stackSave=p.asm.stackSave).apply(null,arguments)},tb=p.stackRestore=function(){return(tb=p.stackRestore=p.asm.stackRestore).apply(null,arguments)},rb=p.stackAlloc=function(){return(rb=p.stackAlloc=p.asm.stackAlloc).apply(null,arguments)},Sj=p.dynCall_iijjiiii=function(){return(Sj=p.dynCall_iijjiiii=p.asm.dynCall_iijjiiii).apply(null,arguments)},vj=p.dynCall_jiji=function(){return(vj=p.dynCall_jiji=p.asm.dynCall_jiji).apply(null,arguments)};p.keepRuntimeAlive=na,p.wasmMemory=ae,p.cwrap=Yk,p.ExitStatus=$p,p.PThread=je;var nb;Ri=function _(){nb||D0(),nb||(Ri=_)};function D0(_){if(_=_||f,Fu>0)return;if(I){l(p),Rr(),postMessage({cmd:"loaded"});return}if(Ru(),Fu>0)return;function K(){nb||(nb=!0,p.calledRun=!0,!ye&&(Rr(),l(p),p.onRuntimeInitialized&&p.onRuntimeInitialized(),Di()))}p.setStatus?(p.setStatus("Running..."),setTimeout(function(){setTimeout(function(){p.setStatus("")},1),K()},1)):K()}if(p.preInit)for(typeof p.preInit=="function"&&(p.preInit=[p.preInit]);p.preInit.length>0;)p.preInit.pop()();D0();var ob;c&&(ob={uncaughtException:process.listeners("uncaughtException").filter(function(_){return!c.uncaughtException.indexOf(_)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(_){return!c.unhandledRejection.indexOf(_)>-1})});var sb;if(typeof WasmBackendModule<"u")sb=WasmBackendModule;else if(typeof t<"u")sb=t;else throw new Error("Could not find wasm module in post.js");if(ob){var Aj=sb._dispose;sb._dispose=function(){Aj(),ob.uncaughtException.forEach(function(_){process.removeListener("uncaughtException",_)}),ob.unhandledRejection.forEach(function(_){process.removeListener("unhandledRejection",_)})}}return t.ready}})();typeof fk=="object"&&typeof n0=="object"?n0.exports=r0:typeof define=="function"&&define.amd?define([],function(){return r0}):typeof fk=="object"&&(fk.WasmBackendModuleThreadedSimd=r0)});var Uq=Fr((hk,l0)=>{"use strict";var p0=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(t){t=t||{};var e=typeof t<"u"?t:{},n,o;e.ready=new Promise(function(q,ue){n=q,o=ue});var s;typeof process<"u"&&process.listeners&&(s={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var a=Object.assign({},e),i=[],u="./this.program",p=(q,ue)=>{throw ue},l=typeof window=="object",m=typeof importScripts=="function",c=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",d="";function f(q){return e.locateFile?e.locateFile(q,d):d+q}var h,g,b,T;function x(q){if(q instanceof om)return;R("exiting due to exception: "+q)}if(c){m?d=wg().dirname(d)+"/":d=__dirname+"/";var I,k;typeof cm=="function"&&(I=Yh(),k=wg()),h=(q,ue)=>(q=k.normalize(q),I.readFileSync(q,ue?void 0:"utf8")),b=q=>{var ue=h(q,!0);return ue.buffer||(ue=new Uint8Array(ue)),ue},g=(q,ue,Pe)=>{q=k.normalize(q),I.readFile(q,function(at,tr){at?Pe(at):ue(tr.buffer)})},process.argv.length>1&&(u=process.argv[1].replace(/\\/g,"/")),i=process.argv.slice(2),process.on("uncaughtException",function(q){if(!(q instanceof om))throw q}),process.on("unhandledRejection",function(q){throw q}),p=(q,ue)=>{if(bt())throw process.exitCode=q,ue;x(ue),process.exit(q)},e.inspect=function(){return"[Emscripten Module object]"}}else(l||m)&&(m?d=self.location.href:typeof document<"u"&&document.currentScript&&(d=document.currentScript.src),r&&(d=r),d.indexOf("blob:")!==0?d=d.substr(0,d.replace(/[?#].*/,"").lastIndexOf("/")+1):d="",h=q=>{var ue=new XMLHttpRequest;return ue.open("GET",q,!1),ue.send(null),ue.responseText},m&&(b=q=>{var ue=new XMLHttpRequest;return ue.open("GET",q,!1),ue.responseType="arraybuffer",ue.send(null),new Uint8Array(ue.response)}),g=(q,ue,Pe)=>{var at=new XMLHttpRequest;at.open("GET",q,!0),at.responseType="arraybuffer",at.onload=()=>{if(at.status==200||at.status==0&&at.response){ue(at.response);return}Pe()},at.onerror=Pe,at.send(null)},T=q=>document.title=q);var w=e.print||console.log.bind(console),R=e.printErr||console.warn.bind(console);Object.assign(e,a),a=null,e.arguments&&(i=e.arguments),e.thisProgram&&(u=e.thisProgram),e.quit&&(p=e.quit);var F=4,P;e.wasmBinary&&(P=e.wasmBinary);var E=e.noExitRuntime||!0;typeof WebAssembly!="object"&&Zr("no native wasm support detected");var B,G=!1,U;function V(q,ue){q||Zr(ue)}var W=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function H(q,ue,Pe){for(var at=ue+Pe,tr=ue;q[tr]&&!(tr>=at);)++tr;if(tr-ue>16&&q.buffer&&W)return W.decode(q.subarray(ue,tr));for(var rr="";ue<tr;){var st=q[ue++];if(!(st&128)){rr+=String.fromCharCode(st);continue}var nt=q[ue++]&63;if((st&224)==192){rr+=String.fromCharCode((st&31)<<6|nt);continue}var xr=q[ue++]&63;if((st&240)==224?st=(st&15)<<12|nt<<6|xr:st=(st&7)<<18|nt<<12|xr<<6|q[ue++]&63,st<65536)rr+=String.fromCharCode(st);else{var no=st-65536;rr+=String.fromCharCode(55296|no>>10,56320|no&1023)}}return rr}function j(q,ue){return q?H(se,q,ue):""}function X(q,ue,Pe,at){if(!(at>0))return 0;for(var tr=Pe,rr=Pe+at-1,st=0;st<q.length;++st){var nt=q.charCodeAt(st);if(nt>=55296&&nt<=57343){var xr=q.charCodeAt(++st);nt=65536+((nt&1023)<<10)|xr&1023}if(nt<=127){if(Pe>=rr)break;ue[Pe++]=nt}else if(nt<=2047){if(Pe+1>=rr)break;ue[Pe++]=192|nt>>6,ue[Pe++]=128|nt&63}else if(nt<=65535){if(Pe+2>=rr)break;ue[Pe++]=224|nt>>12,ue[Pe++]=128|nt>>6&63,ue[Pe++]=128|nt&63}else{if(Pe+3>=rr)break;ue[Pe++]=240|nt>>18,ue[Pe++]=128|nt>>12&63,ue[Pe++]=128|nt>>6&63,ue[Pe++]=128|nt&63}}return ue[Pe]=0,Pe-tr}function ee(q,ue,Pe){return X(q,se,ue,Pe)}var ne,oe,se,re,ae,ce,ye,ke,Fe;function Me(q){ne=q,e.HEAP8=oe=new Int8Array(q),e.HEAP16=re=new Int16Array(q),e.HEAP32=ce=new Int32Array(q),e.HEAPU8=se=new Uint8Array(q),e.HEAPU16=ae=new Uint16Array(q),e.HEAPU32=ye=new Uint32Array(q),e.HEAPF32=ke=new Float32Array(q),e.HEAPF64=Fe=new Float64Array(q)}var Ve=e.INITIAL_MEMORY||16777216,Z,ft=[],Ct=[],Ye=[],Pt=!1;function bt(){return E}function _t(){if(e.preRun)for(typeof e.preRun=="function"&&(e.preRun=[e.preRun]);e.preRun.length;)lr(e.preRun.shift());Ri(ft)}function Yt(){Pt=!0,Ri(Ct)}function $n(){if(e.postRun)for(typeof e.postRun=="function"&&(e.postRun=[e.postRun]);e.postRun.length;)Br(e.postRun.shift());Ri(Ye)}function lr(q){ft.unshift(q)}function eo(q){Ct.unshift(q)}function Br(q){Ye.unshift(q)}var er=0,Or=null,zr=null;function to(q){er++,e.monitorRunDependencies&&e.monitorRunDependencies(er)}function ro(q){if(er--,e.monitorRunDependencies&&e.monitorRunDependencies(er),er==0&&(Or!==null&&(clearInterval(Or),Or=null),zr)){var ue=zr;zr=null,ue()}}function Zr(q){e.onAbort&&e.onAbort(q),q="Aborted("+q+")",R(q),G=!0,U=1,q+=". Build with -sASSERTIONS for more info.";var ue=new WebAssembly.RuntimeError(q);throw o(ue),ue}var Ni="data:application/octet-stream;base64,";function na(q){return q.startsWith(Ni)}function Ru(q){return q.startsWith("file://")}var Rr;Rr="tfjs-backend-wasm.wasm",na(Rr)||(Rr=f(Rr));function Di(q){try{if(q==Rr&&P)return new Uint8Array(P);if(b)return b(q);throw"both async and sync fetching of the wasm failed"}catch(ue){Zr(ue)}}function Gf(){if(!P&&(l||m)){if(typeof fetch=="function"&&!Ru(Rr))return fetch(Rr,{credentials:"same-origin"}).then(function(q){if(!q.ok)throw"failed to load wasm binary file at '"+Rr+"'";return q.arrayBuffer()}).catch(function(){return Di(Rr)});if(g)return new Promise(function(q,ue){g(Rr,function(Pe){q(new Uint8Array(Pe))},ue)})}return Promise.resolve().then(function(){return Di(Rr)})}function Uf(){var q={env:Wf,wasi_snapshot_preview1:Wf};function ue(st,nt){var xr=st.exports;e.asm=xr,B=e.asm.memory,Me(B.buffer),Z=e.asm.__indirect_function_table,eo(e.asm.__wasm_call_ctors),ro("wasm-instantiate")}to("wasm-instantiate");function Pe(st){ue(st.instance)}function at(st){return Gf().then(function(nt){return WebAssembly.instantiate(nt,q)}).then(function(nt){return nt}).then(st,function(nt){R("failed to asynchronously prepare wasm: "+nt),Zr(nt)})}function tr(){return!P&&typeof WebAssembly.instantiateStreaming=="function"&&!na(Rr)&&!Ru(Rr)&&!c&&typeof fetch=="function"?fetch(Rr,{credentials:"same-origin"}).then(function(st){var nt=WebAssembly.instantiateStreaming(st,q);return nt.then(Pe,function(xr){return R("wasm streaming compile failed: "+xr),R("falling back to ArrayBuffer instantiation"),at(Pe)})}):at(Pe)}if(e.instantiateWasm)try{var rr=e.instantiateWasm(q,ue);return rr}catch(st){R("Module.instantiateWasm callback failed with error: "+st),o(st)}return tr().catch(o),{}}var h0,Fu;function om(q){this.name="ExitStatus",this.message="Program terminated with exit("+q+")",this.status=q}function Ri(q){for(;q.length>0;)q.shift()(e)}function g0(q){return q}function b0(q){var ue=/\b_Z[\w\d_]+/g;return q.replace(ue,function(Pe){var at=Pe;return Pe===at?Pe:at+" ["+Pe+"]"})}function sm(){var q=new Error;if(!q.stack){try{throw new Error}catch(ue){q=ue}if(!q.stack)return"(no stack trace available)"}return q.stack.toString()}function bk(q,ue){oe.set(q,ue)}function Pg(){Zr("")}function Mg(q,ue,Pe){se.copyWithin(q,ue,ue+Pe)}function un(){return 2147483648}function Eg(q){try{return B.grow(q-ne.byteLength+65535>>>16),Me(B.buffer),1}catch{}}function yk(q){var ue=se.length;q=q>>>0;var Pe=un();if(q>Pe)return!1;let at=(xr,no)=>xr+(no-xr%no)%no;for(var tr=1;tr<=4;tr*=2){var rr=ue*(1+.2/tr);rr=Math.min(rr,q+100663296);var st=Math.min(Pe,at(Math.max(q,rr),65536)),nt=Eg(st);if(nt)return!0}return!1}var Lg={varargs:void 0,get:function(){Lg.varargs+=4;var q=ce[Lg.varargs-4>>2];return q},getStr:function(q){var ue=j(q);return ue}};function y0(q){return 52}function T0(q,ue,Pe,at,tr){return 70}var Tk=[null,[],[]];function $p(q,ue){var Pe=Tk[q];ue===0||ue===10?((q===1?w:R)(H(Pe,0)),Pe.length=0):Pe.push(ue)}function xk(q,ue,Pe,at){for(var tr=0,rr=0;rr<Pe;rr++){var st=ye[ue>>2],nt=ye[ue+4>>2];ue+=8;for(var xr=0;xr<nt;xr++)$p(q,se[st+xr]);tr+=nt}return ye[at>>2]=tr,0}function _g(q){var ue=e["_"+q];return ue}function $g(q,ue,Pe,at,tr){var rr={string:pn=>{var Mu=0;if(pn!=null&&pn!==0){var Jg=(pn.length<<2)+1;Mu=qf(Jg),ee(pn,Mu,Jg)}return Mu},array:pn=>{var Mu=qf(pn.length);return bk(pn,Mu),Mu}};function st(pn){return ue==="string"?j(pn):ue==="boolean"?Boolean(pn):pn}var nt=_g(q),xr=[],no=0;if(at)for(var Fi=0;Fi<at.length;Fi++){var Qg=rr[Pe[Fi]];Qg?(no===0&&(no=Xg()),xr[Fi]=Qg(at[Fi])):xr[Fi]=at[Fi]}var jf=nt.apply(null,xr);function jS(pn){return no!==0&&Yg(no),st(pn)}return jf=jS(jf),jf}function Bg(q,ue,Pe,at){Pe=Pe||[];var tr=Pe.every(st=>st==="number"||st==="boolean"),rr=ue!=="string";return rr&&tr&&!at?_g(q):function(){return $g(q,ue,Pe,arguments,at)}}var Wf={abort:Pg,emscripten_memcpy_big:Mg,emscripten_resize_heap:yk,fd_close:y0,fd_seek:T0,fd_write:xk},Ik=Uf(),Ck=e.___wasm_call_ctors=function(){return(Ck=e.___wasm_call_ctors=e.asm.__wasm_call_ctors).apply(null,arguments)},Og=e._init=function(){return(Og=e._init=e.asm.init).apply(null,arguments)},kk=e._init_with_threads_count=function(){return(kk=e._init_with_threads_count=e.asm.init_with_threads_count).apply(null,arguments)},je=e._get_threads_count=function(){return(je=e._get_threads_count=e.asm.get_threads_count).apply(null,arguments)},Kf=e._register_tensor=function(){return(Kf=e._register_tensor=e.asm.register_tensor).apply(null,arguments)},Sk=e._dispose_data=function(){return(Sk=e._dispose_data=e.asm.dispose_data).apply(null,arguments)},x0=e._dispose=function(){return(x0=e._dispose=e.asm.dispose).apply(null,arguments)},I0=e._Abs=function(){return(I0=e._Abs=e.asm.Abs).apply(null,arguments)},vk=e._Add=function(){return(vk=e._Add=e.asm.Add).apply(null,arguments)},zg=e._AddN=function(){return(zg=e._AddN=e.asm.AddN).apply(null,arguments)},am=e._All=function(){return(am=e._All=e.asm.All).apply(null,arguments)},Ak=e._Any=function(){return(Ak=e._Any=e.asm.Any).apply(null,arguments)},wk=e._ArgMax=function(){return(wk=e._ArgMax=e.asm.ArgMax).apply(null,arguments)},C0=e._AvgPool=function(){return(C0=e._AvgPool=e.asm.AvgPool).apply(null,arguments)},Nk=e._BatchMatMul=function(){return(Nk=e._BatchMatMul=e.asm.BatchMatMul).apply(null,arguments)},Dk=e._Ceil=function(){return(Dk=e._Ceil=e.asm.Ceil).apply(null,arguments)},Rk=e._ClipByValue=function(){return(Rk=e._ClipByValue=e.asm.ClipByValue).apply(null,arguments)},Fk=e._Conv2D=function(){return(Fk=e._Conv2D=e.asm.Conv2D).apply(null,arguments)},Gg=e._Conv2DBackpropInput=function(){return(Gg=e._Conv2DBackpropInput=e.asm.Conv2DBackpropInput).apply(null,arguments)},Ug=e._Cos=function(){return(Ug=e._Cos=e.asm.Cos).apply(null,arguments)},Pk=e._Cosh=function(){return(Pk=e._Cosh=e.asm.Cosh).apply(null,arguments)},Mk=e._CropAndResize=function(){return(Mk=e._CropAndResize=e.asm.CropAndResize).apply(null,arguments)},Ek=e._Cumprod=function(){return(Ek=e._Cumprod=e.asm.Cumprod).apply(null,arguments)},Vf=e._Cumsum=function(){return(Vf=e._Cumsum=e.asm.Cumsum).apply(null,arguments)},Lk=e._DepthToSpace=function(){return(Lk=e._DepthToSpace=e.asm.DepthToSpace).apply(null,arguments)},_k=e._DepthwiseConv2dNative=function(){return(_k=e._DepthwiseConv2dNative=e.asm.DepthwiseConv2dNative).apply(null,arguments)},$k=e._Elu=function(){return($k=e._Elu=e.asm.Elu).apply(null,arguments)},Bp=e._Equal=function(){return(Bp=e._Equal=e.asm.Equal).apply(null,arguments)},Bk=e._Exp=function(){return(Bk=e._Exp=e.asm.Exp).apply(null,arguments)},Ok=e._FlipLeftRight=function(){return(Ok=e._FlipLeftRight=e.asm.FlipLeftRight).apply(null,arguments)},Wg=e._Floor=function(){return(Wg=e._Floor=e.asm.Floor).apply(null,arguments)},zk=e._FloorDiv=function(){return(zk=e._FloorDiv=e.asm.FloorDiv).apply(null,arguments)},im=e._FusedBatchNorm=function(){return(im=e._FusedBatchNorm=e.asm.FusedBatchNorm).apply(null,arguments)},Gk=e._FusedConv2D=function(){return(Gk=e._FusedConv2D=e.asm.FusedConv2D).apply(null,arguments)},Uk=e._FusedDepthwiseConv2D=function(){return(Uk=e._FusedDepthwiseConv2D=e.asm.FusedDepthwiseConv2D).apply(null,arguments)},Pu=e._Gather=function(){return(Pu=e._Gather=e.asm.Gather).apply(null,arguments)},Hf=e._GatherNd=function(){return(Hf=e._GatherNd=e.asm.GatherNd).apply(null,arguments)},Wk=e._Greater=function(){return(Wk=e._Greater=e.asm.Greater).apply(null,arguments)},Kk=e._GreaterEqual=function(){return(Kk=e._GreaterEqual=e.asm.GreaterEqual).apply(null,arguments)},Vk=e._LeakyRelu=function(){return(Vk=e._LeakyRelu=e.asm.LeakyRelu).apply(null,arguments)},Hk=e._Less=function(){return(Hk=e._Less=e.asm.Less).apply(null,arguments)},Kg=e._LessEqual=function(){return(Kg=e._LessEqual=e.asm.LessEqual).apply(null,arguments)},Vg=e._Log=function(){return(Vg=e._Log=e.asm.Log).apply(null,arguments)},qk=e._LogicalAnd=function(){return(qk=e._LogicalAnd=e.asm.LogicalAnd).apply(null,arguments)},jk=e._LogicalNot=function(){return(jk=e._LogicalNot=e.asm.LogicalNot).apply(null,arguments)},Hg=e._LogicalOr=function(){return(Hg=e._LogicalOr=e.asm.LogicalOr).apply(null,arguments)},qg=e._LogicalXor=function(){return(qg=e._LogicalXor=e.asm.LogicalXor).apply(null,arguments)},Xk=e._Max=function(){return(Xk=e._Max=e.asm.Max).apply(null,arguments)},Yk=e._MaxPool=function(){return(Yk=e._MaxPool=e.asm.MaxPool).apply(null,arguments)},Zk=e._Maximum=function(){return(Zk=e._Maximum=e.asm.Maximum).apply(null,arguments)},jg=e._Mean=function(){return(jg=e._Mean=e.asm.Mean).apply(null,arguments)},k0=e._Min=function(){return(k0=e._Min=e.asm.Min).apply(null,arguments)},Qk=e._Minimum=function(){return(Qk=e._Minimum=e.asm.Minimum).apply(null,arguments)},Jk=e._MirrorPad=function(){return(Jk=e._MirrorPad=e.asm.MirrorPad).apply(null,arguments)},eS=e._Multiply=function(){return(eS=e._Multiply=e.asm.Multiply).apply(null,arguments)},tS=e._Neg=function(){return(tS=e._Neg=e.asm.Neg).apply(null,arguments)},rS=e._NonMaxSuppressionV3=function(){return(rS=e._NonMaxSuppressionV3=e.asm.NonMaxSuppressionV3).apply(null,arguments)},nS=e._NonMaxSuppressionV4=function(){return(nS=e._NonMaxSuppressionV4=e.asm.NonMaxSuppressionV4).apply(null,arguments)},oS=e._NonMaxSuppressionV5=function(){return(oS=e._NonMaxSuppressionV5=e.asm.NonMaxSuppressionV5).apply(null,arguments)},sS=e._NotEqual=function(){return(sS=e._NotEqual=e.asm.NotEqual).apply(null,arguments)},aS=e._OneHot=function(){return(aS=e._OneHot=e.asm.OneHot).apply(null,arguments)},iS=e._PadV2=function(){return(iS=e._PadV2=e.asm.PadV2).apply(null,arguments)},uS=e._Pow=function(){return(uS=e._Pow=e.asm.Pow).apply(null,arguments)},pS=e._Prelu=function(){return(pS=e._Prelu=e.asm.Prelu).apply(null,arguments)},lS=e._Prod=function(){return(lS=e._Prod=e.asm.Prod).apply(null,arguments)},mS=e._RealDiv=function(){return(mS=e._RealDiv=e.asm.RealDiv).apply(null,arguments)},cS=e._Relu=function(){return(cS=e._Relu=e.asm.Relu).apply(null,arguments)},dS=e._Relu6=function(){return(dS=e._Relu6=e.asm.Relu6).apply(null,arguments)},fS=e._ResizeBilinear=function(){return(fS=e._ResizeBilinear=e.asm.ResizeBilinear).apply(null,arguments)},hS=e._ResizeNearestNeighbor=function(){return(hS=e._ResizeNearestNeighbor=e.asm.ResizeNearestNeighbor).apply(null,arguments)},gS=e._Reverse=function(){return(gS=e._Reverse=e.asm.Reverse).apply(null,arguments)},bS=e._RotateWithOffset=function(){return(bS=e._RotateWithOffset=e.asm.RotateWithOffset).apply(null,arguments)},yS=e._Round=function(){return(yS=e._Round=e.asm.Round).apply(null,arguments)},TS=e._Rsqrt=function(){return(TS=e._Rsqrt=e.asm.Rsqrt).apply(null,arguments)},xS=e._ScatterNd=function(){return(xS=e._ScatterNd=e.asm.ScatterNd).apply(null,arguments)},IS=e._SelectV2=function(){return(IS=e._SelectV2=e.asm.SelectV2).apply(null,arguments)},CS=e._Sigmoid=function(){return(CS=e._Sigmoid=e.asm.Sigmoid).apply(null,arguments)},kS=e._Sin=function(){return(kS=e._Sin=e.asm.Sin).apply(null,arguments)},SS=e._Softmax=function(){return(SS=e._Softmax=e.asm.Softmax).apply(null,arguments)},vS=e._SparseFillEmptyRows=function(){return(vS=e._SparseFillEmptyRows=e.asm.SparseFillEmptyRows).apply(null,arguments)},AS=e._SparseReshape=function(){return(AS=e._SparseReshape=e.asm.SparseReshape).apply(null,arguments)},wS=e._SparseSegmentReduction=function(){return(wS=e._SparseSegmentReduction=e.asm.SparseSegmentReduction).apply(null,arguments)},NS=e._Sqrt=function(){return(NS=e._Sqrt=e.asm.Sqrt).apply(null,arguments)},DS=e._Square=function(){return(DS=e._Square=e.asm.Square).apply(null,arguments)},RS=e._SquaredDifference=function(){return(RS=e._SquaredDifference=e.asm.SquaredDifference).apply(null,arguments)},FS=e._Step=function(){return(FS=e._Step=e.asm.Step).apply(null,arguments)},PS=e._StridedSlice=function(){return(PS=e._StridedSlice=e.asm.StridedSlice).apply(null,arguments)},MS=e._Sub=function(){return(MS=e._Sub=e.asm.Sub).apply(null,arguments)},ES=e._Sum=function(){return(ES=e._Sum=e.asm.Sum).apply(null,arguments)},LS=e._Tan=function(){return(LS=e._Tan=e.asm.Tan).apply(null,arguments)},_S=e._Tanh=function(){return(_S=e._Tanh=e.asm.Tanh).apply(null,arguments)},$S=e._Tile=function(){return($S=e._Tile=e.asm.Tile).apply(null,arguments)},BS=e._TopK=function(){return(BS=e._TopK=e.asm.TopK).apply(null,arguments)},OS=e._Transform=function(){return(OS=e._Transform=e.asm.Transform).apply(null,arguments)},zS=e._Transpose=function(){return(zS=e._Transpose=e.asm.Transpose).apply(null,arguments)},GS=e.__FusedMatMul=function(){return(GS=e.__FusedMatMul=e.asm._FusedMatMul).apply(null,arguments)},US=e._malloc=function(){return(US=e._malloc=e.asm.malloc).apply(null,arguments)},WS=e._free=function(){return(WS=e._free=e.asm.free).apply(null,arguments)},KS=e.___errno_location=function(){return(KS=e.___errno_location=e.asm.__errno_location).apply(null,arguments)},Xg=e.stackSave=function(){return(Xg=e.stackSave=e.asm.stackSave).apply(null,arguments)},Yg=e.stackRestore=function(){return(Yg=e.stackRestore=e.asm.stackRestore).apply(null,arguments)},qf=e.stackAlloc=function(){return(qf=e.stackAlloc=e.asm.stackAlloc).apply(null,arguments)},VS=e.dynCall_iijjiiii=function(){return(VS=e.dynCall_iijjiiii=e.asm.dynCall_iijjiiii).apply(null,arguments)},HS=e.dynCall_jiji=function(){return(HS=e.dynCall_jiji=e.asm.dynCall_jiji).apply(null,arguments)};e.cwrap=Bg;var um;zr=function q(){um||Zg(),um||(zr=q)};function Zg(q){if(q=q||i,er>0||(_t(),er>0))return;function ue(){um||(um=!0,e.calledRun=!0,!G&&(Yt(),n(e),e.onRuntimeInitialized&&e.onRuntimeInitialized(),$n()))}e.setStatus?(e.setStatus("Running..."),setTimeout(function(){setTimeout(function(){e.setStatus("")},1),ue()},1)):ue()}if(e.preInit)for(typeof e.preInit=="function"&&(e.preInit=[e.preInit]);e.preInit.length>0;)e.preInit.pop()();Zg();var pm;s&&(pm={uncaughtException:process.listeners("uncaughtException").filter(function(q){return!s.uncaughtException.indexOf(q)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(q){return!s.unhandledRejection.indexOf(q)>-1})});var lm;if(typeof t<"u")lm=t;else if(typeof WasmBackendModuleThreadedSimd<"u")lm=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(pm){var qS=lm._dispose;lm._dispose=function(){qS(),pm.uncaughtException.forEach(function(q){process.removeListener("uncaughtException",q)}),pm.unhandledRejection.forEach(function(q){process.removeListener("unhandledRejection",q)})}}return t.ready}})();typeof hk=="object"&&typeof l0=="object"?l0.exports=p0:typeof define=="function"&&define.amd?define([],function(){return p0}):typeof hk=="object"&&(hk.WasmBackendModule=p0)});var Ej=1e-7,Lj=1e-4,oa=class{constructor(t,e){this.backend=t;this.dataMover=e;this.data=new WeakMap;this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}},ao=class{refCount(t){return so("refCount")}incRef(t){return so("incRef")}timerAvailable(){return!0}time(t){return so("time")}read(t){return so("read")}readSync(t){return so("readSync")}readToGPU(t,e){return so("readToGPU")}numDataIds(){return so("numDataIds")}disposeData(t,e){return so("disposeData")}write(t,e,n){return so("write")}move(t,e,n,o,s){return so("move")}memory(){return so("memory")}floatPrecision(){return so("floatPrecision")}epsilon(){return this.floatPrecision()===32?Ej:Lj}dispose(){return so("dispose")}};function so(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function P0(r){let t=r.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,ab(r,t,e)}function _j(r,t){if(r.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${t.length}`);let e=r.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,ab(r,e,n),ab(t,e,n)}function fm(r,t,e){return Math.max(r,Math.min(t,e))}function $j(r){return r%2===0?r:r+1}function ab(r,t,e){let n=r[t];r[t]=r[e],r[e]=n}function Bj(r){let t=0;for(let e=0;e<r.length;e++)t+=r[e];return t}function Oj(r,t){let e=Math.random();return t*e+(1-e)*r}function zj(r,t){let e=0;for(let n=0;n<r.length;n++){let o=Number(r[n])-Number(t[n]);e+=o*o}return e}function D(r,t){if(!r)throw new Error(typeof t=="string"?t:t())}function $t(r,t,e=""){D(On(r,t),()=>e+` Shapes ${r} and ${t} must match`)}function io(r){D(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function sa(r,t=[],e=!1){if(t==null&&(t=[]),Array.isArray(r)||Cr(r)&&!e)for(let n=0;n<r.length;++n)sa(r[n],t,e);else t.push(r);return t}function et(r){if(r.length===0)return 1;let t=r[0];for(let e=1;e<r.length;e++)t*=r[e];return t}function Gj(r){return r.length===0}function On(r,t){if(r===t)return!0;if(r==null||t==null||r.length!==t.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==t[e])return!1;return!0}function Mi(r){return r%1===0}function Uj(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let t=Math.exp(2*r);return(t-1)/(t+1)}}function Wj(r){let t=Math.ceil(Math.sqrt(r));return[t,Math.ceil(r/t)]}function Kj(r){let t=new Uint32Array(r);for(let e=0;e<r;++e)t[e]=e;return P0(t),t}function zp(r,t){return t<=r.length?r:r+" ".repeat(t-r.length)}function Vj(r,t=o=>0,e,n=setTimeout){return new Promise((o,s)=>{let a=0,i=()=>{if(r()){o();return}a++;let u=t(a);if(e!=null&&a>=e){s();return}n(i,u)};i()})}function Hj(r,t){let e=1,n=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)e*=r[s];else if(r[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(n===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${r}`);return r}if(e===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);let o=r.slice();return o[n]=t/e,o}function fr(r,t){let e=t.length;return r=r==null?t.map((n,o)=>o):[].concat(r),D(r.every(n=>n>=-e&&n<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${r}`),D(r.every(n=>Mi(n)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(n=>n<0?e+n:n)}function JS(r,t){let e=[],n=[],o=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||o?null:fr(t,r).sort(),a=0;for(let i=0;i<r.length;++i){if(s!=null){if(s[a]===i&&r[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${r[i]}' is not 1`);(s[a]==null||s[a]>i)&&r[i]===1&&(e.push(r[i]),n.push(i)),s[a]<=i&&a++}r[i]!==1&&(e.push(r[i]),n.push(i))}return{newShape:e,keptDims:n}}function ev(r,t){let e=null;if(r==null||r==="float32")e=new Float32Array(t);else if(r==="int32")e=new Int32Array(t);else if(r==="bool")e=new Uint8Array(t);else throw new Error(`Unknown data type ${r}`);return e}function tv(r,t){let e=null;if(r==null||r==="float32")e=new Float32Array(t);else if(r==="int32")e=new Int32Array(t);else if(r==="bool")e=new Uint8Array(t);else if(r==="string")e=new Array(t);else throw new Error(`Unknown data type ${r}`);return e}function rv(r,t){for(let e=0;e<r.length;e++){let n=r[e];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}function nv(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function qj(r,t){return!(t==="complex64"||t==="float32"&&r!=="complex64"||t==="int32"&&r!=="float32"&&r!=="complex64"||t==="bool"&&r==="bool")}function Cr(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}function ib(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function ov(r){if(r==null)return 0;let t=0;return r.forEach(e=>t+=e.length),t}function aa(r){return typeof r=="string"||r instanceof String}function M0(r){return typeof r=="boolean"}function E0(r){return typeof r=="number"}function hm(r){return Array.isArray(r)?hm(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":E0(r)?"float32":aa(r)?"string":M0(r)?"bool":"float32"}function oi(r){return!!(r&&r.constructor&&r.call&&r.apply)}function gm(r,t){for(let e=t;e<r;++e)if(r%e===0)return e;return r}function si(r){let t=r.length;if(t<2)return[];let e=new Array(t-1);e[t-2]=r[t-1];for(let n=t-3;n>=0;--n)e[n]=e[n+1]*r[n+1];return e}function L0(r,t,e,n=!1){let o=new Array;if(t.length===1){let s=t[0]*(n?2:1);for(let a=0;a<s;a++)o[a]=e[r+a]}else{let s=t[0],a=t.slice(1),i=a.reduce((u,p)=>u*p)*(n?2:1);for(let u=0;u<s;u++)o[u]=L0(r+u*i,a,e,n)}return o}function Op(r,t,e=!1){if(r.length===0)return t[0];let n=r.reduce((o,s)=>o*s)*(e?2:1);if(n===0)return[];if(n!==t.length)throw new Error(`[${r}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return L0(0,r,t,e)}function Xf(r,t){let e=bm(r,t);for(let n=0;n<e.length;n++)e[n]=1;return e}function bm(r,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${t}`)}function jj(r,t){let e=r.reduce((n,o)=>n*o,1);if(t==null||t==="float32")return Op(r,new Float32Array(e));if(t==="int32")return Op(r,new Int32Array(e));if(t==="bool")return Op(r,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function Yf(r){r.forEach(t=>{D(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function Xj(r,t,e){if(t===0)return 0;if(t===1)return r[0];let n=r[r.length-1];for(let o=0;o<r.length-1;++o)n+=e[o]*r[o];return n}function Yj(r,t,e){if(t===0)return[];if(t===1)return[r];let n=new Array(t);for(let o=0;o<n.length-1;++o)n[o]=Math.floor(r/e[o]),r-=n[o]*e[o];return n[n.length-1]=r,n}function Zf(r){return r&&r.then&&typeof r.then=="function"}var _0="tfjsflags",Qf=class{constructor(t){this.global=t;this.flags={};this.flagRegistry={};this.urlFlags={};this.getQueryParams=Qj;this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&($().getBool("IS_TEST")||$().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},this.urlFlags[t]!=null){let o=this.urlFlags[t];$().getBool("IS_TEST")||$().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${o}.`),this.set(t,o)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];let e=this.evaluateFlag(t);if(Zf(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let t=this.getQueryParams(this.global.location.search);_0 in t&&t[_0].split(",").forEach(n=>{let[o,s]=n.split(":");this.urlFlags[o]=e6(o,s)})}};function Qj(r){let t={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(Jj(t,n[0],n[1]),n.join("="))),t}function Jj(r,t,e){r[decodeURIComponent(t)]=decodeURIComponent(e||"")}function e6(r,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${r}.`)}function $(){return sv}var sv=null;function $0(r){sv=r}var av;function iv(){if(av==null){let r;if(typeof window<"u")r=window;else if(typeof global<"u")r=global;else if(typeof process<"u")r=process;else if(typeof self<"u")r=self;else throw new Error("Could not find a global object");av=r}return av}function t6(){let r=iv();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function Jf(r,t){let e=t6();if(e.has(r))return e.get(r);{let n=t();return e.set(r,n),e.get(r)}}var ls="Abs",Ei="Acos",Li="Acosh",vn="Add",uo="AddN",_i="All",$i="Any",po="ArgMax",ai="ArgMin",Bi="Asin",Oi="Asinh",zi="Atan",Gi="Atanh",ia="Atan2",lo="AvgPool",ym="AvgPoolGrad",Eu="AvgPool3D",Tm="AvgPool3DGrad",mo="BatchMatMul",ms="BatchToSpaceND",xm="Bincount",B0="BroadcastTo",Im="BroadcastArgs",zn="Cast",co="Ceil",Gn="ClipByValue",Lu="Complex",_u="ComplexAbs",cs="Concat",fo="Conv2D",Cm="Conv2DBackpropFilter",ho="Conv2DBackpropInput",$u="Conv3D",km="Conv3DBackpropFilterV2",Sm="Conv3DBackpropInputV2",go="Cos",bo="Cosh",ua="Cumprod",yo="Cumsum",pa="CropAndResize",vm="DenseBincount",la="DepthToSpace",To="DepthwiseConv2dNative",Am="DepthwiseConv2dNativeBackpropFilter",wm="DepthwiseConv2dNativeBackpropInput",Nm="Diag",Bu="Dilation2D",eh="Dilation2DBackpropInput",th="Dilation2DBackpropFilter",xo="RealDiv",Ou="Einsum",Io="Elu",Dm="EluGrad",Ui="Erf",ma="Equal",Co="Exp",ds="ExpandDims",ca="Expm1",Rm="FFT",ii="Fill",da="FlipLeftRight",ko="Floor",So="FloorDiv",vo="FusedBatchNorm",fs="GatherV2",fa="GatherNd",ha="Greater",Ao="GreaterEqual",Un="Identity",Fm="IFFT",zu="Imag",Wi="IsFinite",Ki="IsInf",ga="IsNan",wo="LeakyRelu",ba="Less",ya="LessEqual",Pm="LinSpace",No="Log",Vi="Log1p",Ta="LogicalAnd",xa="LogicalNot",Hi="LogicalOr",O0="LogicalXor",z0="LogSoftmax",uge="LowerBound",Gu="LRN",Mm="LRNGrad",Do="Max",Ro="Maximum",Fo="MaxPool",Em="MaxPoolGrad",Uu="MaxPool3D",Lm="MaxPool3DGrad",_m="MaxPoolWithArgmax",Po="Mean",Mo="Min",Eo="Minimum",Lo="MirrorPad",qi="Mod",$m="Multinomial",_o="Multiply",hs="Neg",Ia="NotEqual",Ca="NonMaxSuppressionV3",ji="NonMaxSuppressionV4",ka="NonMaxSuppressionV5",gs="OnesLike",Sa="OneHot",bs="Pack",$o="PadV2",pge="Pool",Bo="Pow",Oo="Prelu",zo="Prod",Bm="RaggedGather",Om="RaggedTensorToTensor",ui="Range",Wu="Real",va="Reciprocal",Go="Relu",ys="Reshape",Uo="ResizeNearestNeighbor",zm="ResizeNearestNeighborGrad",Wo="ResizeBilinear",Gm="ResizeBilinearGrad",Ko="Relu6",Aa="Reverse",wa="Round",Vo="Rsqrt",Na="ScatterNd",Um="SearchSorted",Ts="Select",Xi="Selu",xs="Slice",Ho="Sin",Da="Sinh",Yi="Sign",qo="Sigmoid",Zi="Softplus",jo="Sqrt",Xo="Sum",Is="SpaceToBatchND",Cs="SplitV",Yo="Softmax",Ku="SparseFillEmptyRows",Qi="SparseReshape",Vu="SparseSegmentMean",Hu="SparseSegmentSum",qu="SparseToDense",Zo="SquaredDifference",pi="Square",Ra="StridedSlice",li="StringNGrams",ju="StringSplit",Xu="StringToHashBucketFast",Qo="Sub",Fa="Tan",Jo="Tanh",An="Tile",Pa="TopK",Ma="Transform",wn="Transpose",Wm="Unique",ks="Unpack",Yu="UnsortedSegmentSum",lge="UpperBound",Ss="ZerosLike",vs="Step",Gp="FromPixels",Ea="RotateWithOffset",As="_FusedMatMul",ws="FusedConv2D",Ns="FusedDepthwiseConv2D";function mi(...r){$().getBool("IS_TEST")||$().getBool("PROD")||console.warn(...r)}function r6(...r){$().getBool("IS_TEST")||$().getBool("PROD")||console.log(...r)}var Km=Jf("kernelRegistry",()=>new Map),rh=Jf("gradRegistry",()=>new Map);function nh(r,t){let e=pv(r,t);return Km.get(e)}function uv(r){return rh.get(r)}function ub(r){let t=Km.entries(),e=[];for(;;){let{done:n,value:o}=t.next();if(n)break;let[s,a]=o,[i]=s.split("_");i===r&&e.push(a)}return e}function Ji(r){let{kernelName:t,backendName:e}=r,n=pv(t,e);Km.has(n)&&mi(`The kernel '${t}' for backend '${e}' is already registered`),Km.set(n,r)}function U0(r){let{kernelName:t}=r;rh.has(t)&&$().getBool("DEBUG")&&mi(`Overriding the gradient for '${t}'`),rh.set(t,r)}function hge(r,t){let e=pv(r,t);if(!Km.has(e))throw new Error(`The kernel '${r}' for backend '${t}' is not registered`);Km.delete(e)}function gge(r){if(!rh.has(r))throw new Error(`The gradient '${r}' for backend is not registered`);rh.delete(r)}function bge(r,t){ub(r).forEach(n=>{let o=Object.assign({},n,{backendName:t});Ji(o)})}function pv(r,t){return`${t}_${r}`}var y={};We(y,{arraysEqual:()=>On,assert:()=>D,assertNonNegativeIntegerDimensions:()=>Yf,assertNonNull:()=>io,assertShapesMatch:()=>$t,bytesFromStringArray:()=>ov,bytesPerElement:()=>ib,checkConversionForErrors:()=>rv,clamp:()=>fm,computeStrides:()=>si,createScalarValue:()=>p6,createShuffledIndices:()=>Kj,decodeString:()=>jm,distSquared:()=>zj,encodeString:()=>Qu,fetch:()=>m6,fingerPrint64:()=>u6,flatten:()=>sa,getArrayFromDType:()=>tv,getTypedArrayFromDType:()=>ev,hasEncodingLoss:()=>qj,hexToLong:()=>oh,indexToLoc:()=>Yj,inferDtype:()=>hm,inferFromImplicitShape:()=>Hj,isBoolean:()=>M0,isFunction:()=>oi,isInt:()=>Mi,isNumber:()=>E0,isPromise:()=>Zf,isScalarShape:()=>Gj,isString:()=>aa,isTypedArray:()=>Cr,isValidDtype:()=>nv,locToIndex:()=>Xj,makeOnesTypedArray:()=>Xf,makeZerosNestedTypedArray:()=>jj,makeZerosTypedArray:()=>bm,nearestDivisor:()=>gm,nearestLargerEven:()=>$j,now:()=>Vp,parseAxisParam:()=>fr,randUniform:()=>Oj,repeatedTry:()=>Vj,rightPad:()=>zp,shuffle:()=>P0,shuffleCombo:()=>_j,sizeFromShape:()=>et,sizeToSquarishShape:()=>Wj,squeezeShape:()=>JS,sum:()=>Bj,swap:()=>ab,tanh:()=>Uj,toNestedArray:()=>Op,toTypedArray:()=>qm});var dv={};We(dv,{default:()=>cv});var Ds=null;try{Ds=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Zt(r,t,e){this.low=r|0,this.high=t|0,this.unsigned=!!e}Zt.prototype.__isLong__;Object.defineProperty(Zt.prototype,"__isLong__",{value:!0});function ln(r){return(r&&r.__isLong__)===!0}function W0(r){var t=Math.clz32(r&-r);return r?31-t:t}Zt.isLong=ln;var K0={},V0={};function Up(r,t){var e,n,o;return t?(r>>>=0,(o=0<=r&&r<256)&&(n=V0[r],n)?n:(e=kt(r,0,!0),o&&(V0[r]=e),e)):(r|=0,(o=-128<=r&&r<128)&&(n=K0[r],n)?n:(e=kt(r,r<0?-1:0,!1),o&&(K0[r]=e),e))}Zt.fromInt=Up;function Rs(r,t){if(isNaN(r))return t?eu:La;if(t){if(r<0)return eu;if(r>=X0)return Q0}else{if(r<=-q0)return Wn;if(r+1>=q0)return Z0}return r<0?Rs(-r,t).neg():kt(r%Hm|0,r/Hm|0,t)}Zt.fromNumber=Rs;function kt(r,t,e){return new Zt(r,t,e)}Zt.fromBits=kt;var pb=Math.pow;function mv(r,t,e){if(r.length===0)throw Error("empty string");if(typeof t=="number"?(e=t,t=!1):t=!!t,r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return t?eu:La;if(e=e||10,e<2||36<e)throw RangeError("radix");var n;if((n=r.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return mv(r.substring(1),t,e).neg();for(var o=Rs(pb(e,8)),s=La,a=0;a<r.length;a+=8){var i=Math.min(8,r.length-a),u=parseInt(r.substring(a,a+i),e);if(i<8){var p=Rs(pb(e,i));s=s.mul(p).add(Rs(u))}else s=s.mul(o),s=s.add(Rs(u))}return s.unsigned=t,s}Zt.fromString=mv;function _a(r,t){return typeof r=="number"?Rs(r,t):typeof r=="string"?mv(r,t):kt(r.low,r.high,typeof t=="boolean"?t:r.unsigned)}Zt.fromValue=_a;var H0=1<<16,n6=1<<24,Hm=H0*H0,X0=Hm*Hm,q0=X0/2,j0=Up(n6),La=Up(0);Zt.ZERO=La;var eu=Up(0,!0);Zt.UZERO=eu;var Vm=Up(1);Zt.ONE=Vm;var Y0=Up(1,!0);Zt.UONE=Y0;var lv=Up(-1);Zt.NEG_ONE=lv;var Z0=kt(-1,2147483647,!1);Zt.MAX_VALUE=Z0;var Q0=kt(-1,-1,!0);Zt.MAX_UNSIGNED_VALUE=Q0;var Wn=kt(0,-2147483648,!1);Zt.MIN_VALUE=Wn;var he=Zt.prototype;he.toInt=function(){return this.unsigned?this.low>>>0:this.low};he.toNumber=function(){return this.unsigned?(this.high>>>0)*Hm+(this.low>>>0):this.high*Hm+(this.low>>>0)};he.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Wn)){var e=Rs(t),n=this.div(e),o=n.mul(e).sub(this);return n.toString(t)+o.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var s=Rs(pb(t,6),this.unsigned),a=this,i="";;){var u=a.div(s),p=a.sub(u.mul(s)).toInt()>>>0,l=p.toString(t);if(a=u,a.isZero())return l+i;for(;l.length<6;)l="0"+l;i=""+l+i}};he.getHighBits=function(){return this.high};he.getHighBitsUnsigned=function(){return this.high>>>0};he.getLowBits=function(){return this.low};he.getLowBitsUnsigned=function(){return this.low>>>0};he.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Wn)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&(t&1<<e)==0;e--);return this.high!=0?e+33:e+1};he.isZero=function(){return this.high===0&&this.low===0};he.eqz=he.isZero;he.isNegative=function(){return!this.unsigned&&this.high<0};he.isPositive=function(){return this.unsigned||this.high>=0};he.isOdd=function(){return(this.low&1)===1};he.isEven=function(){return(this.low&1)===0};he.equals=function(t){return ln(t)||(t=_a(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};he.eq=he.equals;he.notEquals=function(t){return!this.eq(t)};he.neq=he.notEquals;he.ne=he.notEquals;he.lessThan=function(t){return this.comp(t)<0};he.lt=he.lessThan;he.lessThanOrEqual=function(t){return this.comp(t)<=0};he.lte=he.lessThanOrEqual;he.le=he.lessThanOrEqual;he.greaterThan=function(t){return this.comp(t)>0};he.gt=he.greaterThan;he.greaterThanOrEqual=function(t){return this.comp(t)>=0};he.gte=he.greaterThanOrEqual;he.ge=he.greaterThanOrEqual;he.compare=function(t){if(ln(t)||(t=_a(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};he.comp=he.compare;he.negate=function(){return!this.unsigned&&this.eq(Wn)?Wn:this.not().add(Vm)};he.neg=he.negate;he.add=function(t){ln(t)||(t=_a(t));var e=this.high>>>16,n=this.high&65535,o=this.low>>>16,s=this.low&65535,a=t.high>>>16,i=t.high&65535,u=t.low>>>16,p=t.low&65535,l=0,m=0,c=0,d=0;return d+=s+p,c+=d>>>16,d&=65535,c+=o+u,m+=c>>>16,c&=65535,m+=n+i,l+=m>>>16,m&=65535,l+=e+a,l&=65535,kt(c<<16|d,l<<16|m,this.unsigned)};he.subtract=function(t){return ln(t)||(t=_a(t)),this.add(t.neg())};he.sub=he.subtract;he.multiply=function(t){if(this.isZero())return this;if(ln(t)||(t=_a(t)),Ds){var e=Ds.mul(this.low,this.high,t.low,t.high);return kt(e,Ds.get_high(),this.unsigned)}if(t.isZero())return this.unsigned?eu:La;if(this.eq(Wn))return t.isOdd()?Wn:La;if(t.eq(Wn))return this.isOdd()?Wn:La;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(j0)&&t.lt(j0))return Rs(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,o=this.high&65535,s=this.low>>>16,a=this.low&65535,i=t.high>>>16,u=t.high&65535,p=t.low>>>16,l=t.low&65535,m=0,c=0,d=0,f=0;return f+=a*l,d+=f>>>16,f&=65535,d+=s*l,c+=d>>>16,d&=65535,d+=a*p,c+=d>>>16,d&=65535,c+=o*l,m+=c>>>16,c&=65535,c+=s*p,m+=c>>>16,c&=65535,c+=a*u,m+=c>>>16,c&=65535,m+=n*l+o*p+s*u+a*i,m&=65535,kt(d<<16|f,m<<16|c,this.unsigned)};he.mul=he.multiply;he.divide=function(t){if(ln(t)||(t=_a(t)),t.isZero())throw Error("division by zero");if(Ds){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?Ds.div_u:Ds.div_s)(this.low,this.high,t.low,t.high);return kt(e,Ds.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?eu:La;var n,o,s;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return eu;if(t.gt(this.shru(1)))return Y0;s=eu}else{if(this.eq(Wn)){if(t.eq(Vm)||t.eq(lv))return Wn;if(t.eq(Wn))return Vm;var a=this.shr(1);return n=a.div(t).shl(1),n.eq(La)?t.isNegative()?Vm:lv:(o=this.sub(t.mul(n)),s=n.add(o.div(t)),s)}else if(t.eq(Wn))return this.unsigned?eu:La;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();s=La}for(o=this;o.gte(t);){n=Math.max(1,Math.floor(o.toNumber()/t.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),u=i<=48?1:pb(2,i-48),p=Rs(n),l=p.mul(t);l.isNegative()||l.gt(o);)n-=u,p=Rs(n,this.unsigned),l=p.mul(t);p.isZero()&&(p=Vm),s=s.add(p),o=o.sub(l)}return s};he.div=he.divide;he.modulo=function(t){if(ln(t)||(t=_a(t)),Ds){var e=(this.unsigned?Ds.rem_u:Ds.rem_s)(this.low,this.high,t.low,t.high);return kt(e,Ds.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};he.mod=he.modulo;he.rem=he.modulo;he.not=function(){return kt(~this.low,~this.high,this.unsigned)};he.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32};he.clz=he.countLeadingZeros;he.countTrailingZeros=function(){return this.low?W0(this.low):W0(this.high)+32};he.ctz=he.countTrailingZeros;he.and=function(t){return ln(t)||(t=_a(t)),kt(this.low&t.low,this.high&t.high,this.unsigned)};he.or=function(t){return ln(t)||(t=_a(t)),kt(this.low|t.low,this.high|t.high,this.unsigned)};he.xor=function(t){return ln(t)||(t=_a(t)),kt(this.low^t.low,this.high^t.high,this.unsigned)};he.shiftLeft=function(t){return ln(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?kt(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):kt(0,this.low<<t-32,this.unsigned)};he.shl=he.shiftLeft;he.shiftRight=function(t){return ln(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?kt(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):kt(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};he.shr=he.shiftRight;he.shiftRightUnsigned=function(t){return ln(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?kt(this.low>>>t|this.high<<32-t,this.high>>>t,this.unsigned):t===32?kt(this.high,0,this.unsigned):kt(this.high>>>t-32,0,this.unsigned)};he.shru=he.shiftRightUnsigned;he.shr_u=he.shiftRightUnsigned;he.rotateLeft=function(t){var e;return ln(t)&&(t=t.toInt()),(t&=63)===0?this:t===32?kt(this.high,this.low,this.unsigned):t<32?(e=32-t,kt(this.low<<t|this.high>>>e,this.high<<t|this.low>>>e,this.unsigned)):(t-=32,e=32-t,kt(this.high<<t|this.low>>>e,this.low<<t|this.high>>>e,this.unsigned))};he.rotl=he.rotateLeft;he.rotateRight=function(t){var e;return ln(t)&&(t=t.toInt()),(t&=63)===0?this:t===32?kt(this.high,this.low,this.unsigned):t<32?(e=32-t,kt(this.high<<e|this.low>>>t,this.low<<e|this.high>>>t,this.unsigned)):(t-=32,e=32-t,kt(this.low<<e|this.high>>>t,this.high<<e|this.low>>>t,this.unsigned))};he.rotr=he.rotateRight;he.toSigned=function(){return this.unsigned?kt(this.low,this.high,!1):this};he.toUnsigned=function(){return this.unsigned?this:kt(this.low,this.high,!0)};he.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};he.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};he.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};Zt.fromBytes=function(t,e,n){return n?Zt.fromBytesLE(t,e):Zt.fromBytesBE(t,e)};Zt.fromBytesLE=function(t,e){return new Zt(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};Zt.fromBytesBE=function(t,e){return new Zt(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)};var cv=Zt;var Kp=cv||dv;function oh(r){return Kp.fromString(r,!0,16)}var e1=oh("c3a5c85c97cb3127"),Wp=oh("b492b66fbe98f273"),mn=oh("9ae16a3b2f90404f");function fv(r){return r.xor(r.shru(47))}function t1(r,t,e){let n=r.slice(t,t+e);return Kp.fromBytes(Array.from(n),!0,!0)}function Wt(r,t){return t1(r,t,8)}function J0(r,t){return t1(r,t,4)}function Pr(r,t){return t===0?r:r.shru(t).or(r.shl(64-t))}function Zu(r,t,e=oh("9ddfea08eb382d69")){let n=r.xor(t).mul(e);n=n.xor(n.shru(47));let o=t.xor(n).mul(e);return o=o.xor(o.shru(47)),o=o.mul(e),o}function o6(r,t,e,n,o,s){o=o.add(r),s=Pr(s.add(o).add(n),21);let a=o;return o=o.add(t),o=o.add(e),s=s.add(Pr(o,44)),[o.add(n),s.add(a)]}function lb(r,t,e,n){return o6(Wt(r,t),Wt(r,t+8),Wt(r,t+16),Wt(r,t+24),e,n)}function s6(r,t=r.length){if(t>=8){let e=mn.add(t*2),n=Wt(r,0).add(mn),o=Wt(r,t-8),s=Pr(o,37).mul(e).add(n),a=Pr(n,25).add(o).mul(e);return Zu(s,a,e)}if(t>=4){let e=mn.add(t*2),n=J0(r,0);return Zu(n.shl(3).add(t),J0(r,t-4),e)}if(t>0){let e=r[0],n=r[t>>1],o=r[t-1],s=e+(n<<8),a=t+(o<<2);return fv(mn.mul(s).xor(e1.mul(a))).mul(mn)}return mn}function a6(r,t=r.length){let e=mn.add(t*2),n=Wt(r,0).mul(Wp),o=Wt(r,8),s=Wt(r,t-8).mul(e),a=Wt(r,t-16).mul(mn);return Zu(Pr(n.add(o),43).add(Pr(s,30)).add(a),n.add(Pr(o.add(mn),18)).add(s),e)}function i6(r,t=r.length){let e=mn.add(t*2),n=Wt(r,0).mul(mn),o=Wt(r,8),s=Wt(r,t-8).mul(e),a=Wt(r,t-16).mul(mn),i=Pr(n.add(o),43).add(Pr(s,30)).add(a),u=Zu(i,n.add(Pr(o.add(mn),18)).add(s),e),p=Wt(r,16).mul(e),l=Wt(r,24),m=i.add(Wt(r,t-32)).mul(e),c=u.add(Wt(r,t-24)).mul(e);return Zu(Pr(p.add(l),43).add(Pr(m,30)).add(c),p.add(Pr(l.add(n),18)).add(m),e)}function u6(r,t=r.length){let e=Kp.fromNumber(81,!0);if(t<=32)return t<=16?s6(r,t):a6(r,t);if(t<=64)return i6(r,t);let n=e,o=e.mul(Wp).add(113),s=fv(o.mul(mn).add(113)).mul(mn),a=[Kp.UZERO,Kp.UZERO],i=[Kp.UZERO,Kp.UZERO];n=n.mul(mn).add(Wt(r,0));let u=0,p=(t-1>>6)*64,l=p+(t-1&63)-63;do n=Pr(n.add(o).add(a[0]).add(Wt(r,u+8)),37).mul(Wp),o=Pr(o.add(a[1]).add(Wt(r,u+48)),42).mul(Wp),n=n.xor(i[1]),o=o.add(a[0]).add(Wt(r,u+40)),s=Pr(s.add(i[0]),33).mul(Wp),a=lb(r,u,a[1].mul(Wp),n.add(i[0])),i=lb(r,u+32,s.add(i[1]),o.add(Wt(r,u+16))),[s,n]=[n,s],u+=64;while(u!==p);let m=Wp.add(s.and(255).shl(1));return u=l,i[0]=i[0].add(t-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),n=Pr(n.add(o).add(a[0]).add(Wt(r,u+8)),37).mul(m),o=Pr(o.add(a[1]).add(Wt(r,u+48)),42).mul(m),n=n.xor(i[1].mul(9)),o=o.add(a[0].mul(9).add(Wt(r,u+40))),s=Pr(s.add(i[0]),33).mul(m),a=lb(r,u,a[1].mul(m),n.add(i[0])),i=lb(r,u+32,s.add(i[1]),o.add(Wt(r,u+16))),[s,n]=[n,s],Zu(Zu(a[0],i[0],m).add(fv(o).mul(e1)).add(s),Zu(a[1],i[1],m).add(n),m)}function p6(r,t){return t==="string"?Qu(r):qm([r],t)}function l6(r,t){return r instanceof Float32Array&&t==="float32"||r instanceof Int32Array&&t==="int32"||r instanceof Uint8Array&&t==="bool"}function qm(r,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=sa(r)),$().getBool("DEBUG")&&rv(r,t),l6(r,t))return r;if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool"){let e=new Uint8Array(r.length);for(let n=0;n<e.length;++n)Math.round(r[n])!==0&&(e[n]=1);return e}else throw new Error(`Unknown data type ${t}`)}function Vp(){return $().platform.now()}function m6(r,t){return $().platform.fetch(r,t)}function Qu(r,t="utf-8"){return t=t||"utf-8",$().platform.encode(r,t)}function jm(r,t="utf-8"){return t=t||"utf-8",$().platform.decode(r,t)}var mb=class{constructor(t,e){this.backendTimer=t;this.logger=e;e==null&&(this.logger=new hv)}profileKernel(t,e,n){let o,s=()=>{o=n()},a,i=Vp();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let p of o)p.dataSync();a=Promise.resolve({kernelMs:Vp()-i})}if($().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let p=0;p<o.length;p++){let l=o[p];l.data().then(m=>{c6(m,l.dtype,t)})}return{kernelName:t,outputs:o,inputs:e,timeMs:a.then(p=>p.kernelMs),extraInfo:a.then(p=>p.getExtraProfileInfo!=null?p.getExtraProfileInfo():"")}}logKernelProfile(t){let{kernelName:e,outputs:n,timeMs:o,inputs:s,extraInfo:a}=t;n.forEach(i=>{Promise.all([i.data(),o,a]).then(u=>{this.logger.logKernelProfile(e,i,u[0],u[1],s,u[2])})})}};function c6(r,t,e){if(t!=="float32")return!1;for(let n=0;n<r.length;n++){let o=r[n];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${e}'`),!0}return!1}var hv=class{logKernelProfile(t,e,n,o,s,a){let i=typeof o=="number"?zp(`${o}ms`,9):o.error,u=zp(t,25),p=e.rank,l=e.size,m=zp(e.shape.toString(),14),c="";for(let d in s){let f=s[d];if(f!=null){let h=f.shape||e.shape,g=h.length;c+=`${d}: ${g}D ${g>0?h:""} `}}console.log(`%c${u}	%c${i}	%c${p}D ${m}	%c${l}	%c${c}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function r1(r,t,e){let n={},o={};for(let u=0;u<t.length;u++)n[t[u].id]=!0;for(let u=0;u<r.length;u++){let p=r[u],l=p.inputs;for(let m in l){let c=l[m],d=!1;for(let f=0;f<t.length;f++)if(n[c.id]){p.outputs.forEach(h=>n[h.id]=!0),d=!0,o[p.id]=!0;break}if(d)break}}let s={};s[e.id]=!0;let a={};for(let u=r.length-1;u>=0;u--){let p=r[u],l=p.inputs;for(let m=0;m<p.outputs.length;m++)if(s[p.outputs[m].id]){for(let c in l)s[l[c].id]=!0,a[p.id]=!0;break}}let i=[];for(let u=0;u<r.length;u++){let p=r[u];if(o[p.id]&&a[p.id]){let l={};for(let c in p.inputs){let d=p.inputs[c];n[d.id]&&(l[c]=d)}let m=Object.assign({},p);m.inputs=l,m.outputs=p.outputs,i.push(m)}}return i}function n1(r,t,e,n){for(let o=t.length-1;o>=0;o--){let s=t[o],a=[];if(s.outputs.forEach(u=>{let p=r[u.id];p!=null?a.push(p):a.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let i=s.gradient(a);for(let u in s.inputs){if(!(u in i))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(i)}.`);let p=e(()=>i[u]());if(p.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${p.dtype}'`);let l=s.inputs[u];if(!On(p.shape,l.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${u}' has shape '${p.shape}', which does not match the shape of the input '${l.shape}'`);if(r[l.id]==null)r[l.id]=p;else{let m=r[l.id];r[l.id]=n(m,p),m.dispose()}}}}var o1=20,sh=3,gv=7;function s1(r,t,e,n){let o=si(t),s=d6(r,t,e,o),a=t.length,i=cb(r,t,e,o,s),u=["Tensor"];return n&&(u.push(`  dtype: ${e}`),u.push(`  rank: ${a}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(i.map(p=>"    "+p).join(`
`)),u.join(`
`)}function d6(r,t,e,n){let o=et(t),s=n[n.length-1],a=new Array(s).fill(0),i=t.length,u=e==="complex64"?ih(r):r;if(i>1)for(let p=0;p<o/s;p++){let l=p*s;for(let m=0;m<s;m++)a[m]=Math.max(a[m],ah(u[l+m],0,e).length)}return a}function ah(r,t,e){let n;return Array.isArray(r)?n=`${parseFloat(r[0].toFixed(gv))} + ${parseFloat(r[1].toFixed(gv))}j`:aa(r)?n=`'${r}'`:e==="bool"?n=a1(r):n=parseFloat(r.toFixed(gv)).toString(),zp(n,t)}function a1(r){return r===0?"false":"true"}function cb(r,t,e,n,o,s=!0){let a=e==="complex64"?2:1,i=t[0],u=t.length;if(u===0){if(e==="complex64"){let h=ih(r);return[ah(h[0],0,e)]}return e==="bool"?[a1(r[0])]:[r[0].toString()]}if(u===1){if(i>o1){let g=sh*a,b=Array.from(r.slice(0,g)),T=Array.from(r.slice((i-sh)*a,i*a));return e==="complex64"&&(b=ih(b),T=ih(T)),["["+b.map((x,I)=>ah(x,o[I],e)).join(", ")+", ..., "+T.map((x,I)=>ah(x,o[i-sh+I],e)).join(", ")+"]"]}let h=e==="complex64"?ih(r):Array.from(r);return["["+h.map((g,b)=>ah(g,o[b],e)).join(", ")+"]"]}let p=t.slice(1),l=n.slice(1),m=n[0]*a,c=[];if(i>o1){for(let h=0;h<sh;h++){let g=h*m,b=g+m;c.push(...cb(r.slice(g,b),p,e,l,o,!1))}c.push("...");for(let h=i-sh;h<i;h++){let g=h*m,b=g+m;c.push(...cb(r.slice(g,b),p,e,l,o,h===i-1))}}else for(let h=0;h<i;h++){let g=h*m,b=g+m;c.push(...cb(r.slice(g,b),p,e,l,o,h===i-1))}let d=u===2?",":"";c[0]="["+c[0]+d;for(let h=1;h<c.length-1;h++)c[h]=" "+c[h]+d;let f=`,
`;for(let h=2;h<u;h++)f+=`
`;return c[c.length-1]=" "+c[c.length-1]+"]"+(s?"":f),c}function ih(r){let t=[];for(let e=0;e<r.length;e+=2)t.push([r[e],r[e+1]]);return t}var ht=class{constructor(t,e,n){this.dtype=e;if(this.shape=t.slice(),this.size=et(t),n!=null){let o=n.length;D(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||tv(e,this.size),this.strides=si(t)}set(t,...e){e.length===0&&(e=[0]),D(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);let n=this.locToIndex(e);this.values[n]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(let o of t){if(o<0||o>=this.shape[e]){let s=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(s)}e++}let n=t[t.length-1];for(let o=0;o<t.length-1;++o)n+=this.strides[o]*t[o];return this.values[n]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];let e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return $a().makeTensor(this.values,this.shape,this.dtype)}},$a=null,Xm=null,f6=null;function i1(r){$a=r}function u1(r){Xm=r}function p1(r){f6=r}var ze=class{constructor(t,e,n,o){this.kept=!1;this.isDisposedInternal=!1;this.shape=t.slice(),this.dtype=e||"float32",this.size=et(t),this.strides=si(t),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let t=await this.data();return Xm.buffer(this.shape,this.dtype,t)}bufferSync(){return Xm.buffer(this.shape,this.dtype,this.dataSync())}async array(){let t=await this.data();return Op(this.shape,t,this.dtype==="complex64")}arraySync(){return Op(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let t=$a().read(this.dataId);if(this.dtype==="string"){let e=await t;try{return e.map(n=>jm(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),$a().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();let t=$a().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>jm(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();let t=await $a().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||($a().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Xm.print(this,t)}clone(){return this.throwIfDisposed(),Xm.clone(this)}toString(t=!1){let e=this.dataSync();return s1(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Xm.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),$a().makeVariable(this,t,e,n)}};Object.defineProperty(ze,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function h6(){return Jf("Tensor",()=>ze)}h6();var tu=class extends ze{constructor(e,n,o,s){super(e.shape,e.dtype,e.dataId,s);this.trainable=n;this.name=o}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!On(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);$a().disposeTensor(this),this.dataId=e.dataId,$a().incRef(this,null)}dispose(){$a().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(tu,Symbol.hasInstance,{value:r=>r instanceof ze&&r.assign!=null&&r.assign instanceof Function});var Fs={};We(Fs,{assertTypesMatch:()=>bv,getTensorsInContainer:()=>uh,isTensorInList:()=>b6,makeTypesMatch:()=>qe});var l1=(i=>(i.R0="R0",i.R1="R1",i.R2="R2",i.R3="R3",i.R4="R4",i.R5="R5",i.R6="R6",i))(l1||{}),m1=(o=>(o.float32="float32",o.int32="int32",o.bool="int32",o.complex64="complex64",o))(m1||{}),c1=(o=>(o.float32="float32",o.int32="int32",o.bool="bool",o.complex64="complex64",o))(c1||{}),d1=(o=>(o.float32="float32",o.int32="float32",o.bool="float32",o.complex64="complex64",o))(d1||{}),f1=(o=>(o.float32="complex64",o.int32="complex64",o.bool="complex64",o.complex64="complex64",o))(f1||{}),g6={float32:d1,int32:m1,bool:c1,complex64:f1};function Mt(r,t){if(r==="string"||t==="string"){if(r==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${r} with ${t}`)}return g6[r][t]}function ru(r){return Mt(r,"int32")}function qe(r,t){if(r.dtype===t.dtype)return[r,t];let e=Mt(r.dtype,t.dtype);return[r.cast(e),t.cast(e)]}function bv(r,t){D(r.dtype===t.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${t.dtype}) input must match`)}function b6(r,t){return t.some(e=>e.id===r.id)}function uh(r){let t=[];return h1(r,t,new Set),t}function h1(r,t,e){if(r==null)return;if(r instanceof ze){t.push(r);return}if(!y6(r))return;let n=r;for(let o in n){let s=n[o];e.has(s)||(e.add(s),h1(s,t,e))}}function y6(r){return Array.isArray(r)||typeof r=="object"}function yv(r){return r.kernelName!=null}var db=class{constructor(){this.registeredVariables={};this.nextTapeNodeId=0;this.numBytes=0;this.numTensors=0;this.numStringTensors=0;this.numDataBuffers=0;this.gradientDepth=0;this.kernelDepth=0;this.scopeStack=[];this.numDataMovesStack=[];this.nextScopeId=0;this.tensorInfo=new WeakMap;this.profiling=!1;this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(let t in this.registeredVariables)this.registeredVariables[t].dispose()}},fb=class{constructor(t){this.ENV=t;this.registry={};this.registryFactory={};this.pendingBackendInitId=0;this.state=new db}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let t=this.getSortedBackends();for(let e=0;e<t.length;e++){let n=t[e];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){let{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(mi(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;let{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new mb(this.backendInstance),!0}setupRegisteredKernels(){ub(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){ub(t).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[t])})}initializeBackend(t){let e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{let n=e.factory();if(n&&!(n instanceof ao)&&typeof n.then=="function"){let o=++this.pendingBackendInitId,s=n.then(a=>o<this.pendingBackendInitId?!1:(this.registry[t]=a,this.pendingBackendInit=null,!0)).catch(a=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,mi(`Initialization of backend ${t} failed`),mi(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(n){return mi(`Initialization of backend ${t} failed`),mi(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){let t=this.getSortedBackends();for(let e=0;e<t.length;e++){let n=t[e],{success:o,asyncInit:s}=this.initializeBackend(n);if(s||o)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){let n=this.state.tensorInfo.get(e),o=n.backend,s=this.readSync(e),a=o.refCount(e);o.disposeData(e,!0),n.backend=t,t.move(e,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=t}let o;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(o),()=>(o=e(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(t,e,n){t();try{let o=n();return e(),o}catch(o){throw e(),o}}nextTensorId(){return fb.nextTensorId++}nextVariableId(){return fb.nextVariableId++}clone(t){let e=N.runKernel(Un,{x:t}),n={x:t},o=a=>({x:()=>{let i="float32",u={x:a},p={dtype:i};return N.runKernel(zn,u,p)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[e],o,s,{}),e}runKernel(t,e,n){if(this.backendName==null&&this.backend,!(nh(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){let o=this.backend.numDataIds(),s=0;n.forEach(u=>{s+=u.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=o-e-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[],o=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let u,p=yv(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(yv(t)){let{kernelName:f,inputs:h,attrs:g}=t;this.backendName==null&&this.backend;let b=nh(f,this.backendName);D(b!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{let T=this.backend.numDataIds();u=b.kernelFunc({inputs:h,attrs:g,backend:this.backend});let x=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,T,x);let I=x.map(k=>k.rank!=null?k:this.makeTensorFromTensorInfo(k));if(o){let k=this.getTensorsForGradient(f,h,I);n=this.saveTensorsForBackwardMode(k)}return I}}else{let{forwardFunc:f}=t,h=g=>{!o||(n=g.map(b=>this.keep(this.clone(b))))};i=()=>{let g=this.backend.numDataIds();u=this.tidy(()=>f(this.backend,h));let b=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,g,b),b}}let{inputs:l,attrs:m}=t,c=yv(t)?null:t.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=i():(d=this.profiler.profileKernel(p,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),e=d.outputs)}),o&&this.addTapeNode(p,l,e,c,n,m),this.state.profiling&&this.state.activeProfile.kernels.push({name:p,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(f=>l[f]!=null?l[f].shape:null),outputShapes:e.map(f=>f.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(u)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(t,e,n){let o=uv(t);if(o!=null){let s=o.inputsToSave||[],a=o.outputsToSave||[],i;o.saveAllInputs?(D(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(e).map(p=>e[p])):i=s.map(p=>e[p]);let u=n.filter((p,l)=>a[l]);return i.concat(u)}return[]}makeTensor(t,e,n,o){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",o=o||this.backend;let s=t;n==="string"&&aa(t[0])&&(s=t.map(u=>Qu(u)));let a=o.write(s,e,n),i=new ze(e,n,a,this.nextTensorId());if(this.trackTensor(i,o),n==="string"){let u=this.state.tensorInfo.get(a),p=ov(s);this.state.numBytes+=p-u.bytes,u.bytes=p}return i}makeTensorFromDataId(t,e,n,o){n=n||"float32";let s={dataId:t,shape:e,dtype:n};return this.makeTensorFromTensorInfo(s,o)}makeTensorFromTensorInfo(t,e){let{dataId:n,shape:o,dtype:s}=t,a=new ze(o,s,n,this.nextTensorId());return this.trackTensor(a,e),a}makeVariable(t,e=!0,n,o){n=n||this.nextVariableId().toString(),o!=null&&o!==t.dtype&&(t=t.cast(o));let s=new tu(t,e,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let n=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(n=t.size*ib(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof tu||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;let e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){let n=t.size*ib(t.dtype);this.state.numBytes-=n}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(let t in this.state.registeredVariables){let e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){let t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;let e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,n,o,s,a){let i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},u=uv(t);u!=null&&(o=u.gradFunc),o!=null&&(i.gradient=p=>(p=p.map((l,m)=>{if(l==null){let c=n[m],d=bm(c.size,c.dtype);return this.makeTensor(d,c.shape,c.dtype)}return l}),o(p.length>1?p:p[0],s,a))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){let e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){let e=uh(t),n=new Set(e.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!n.has(a.id)&&a.dispose()}let o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(s=>{!s.kept&&s.scopeId===o.id&&this.track(s)})}gradients(t,e,n,o=!1){if(D(e.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));D(s instanceof ze,()=>"The result y returned by f() must be a tensor.");let a=r1(this.state.activeTape,e,s);if(!o&&a.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[s.id]=n??T6(s.shape),n1(i,a,p=>this.tidy(p),x6);let u=e.map(p=>i[p.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(p=>{for(let l of p.saved)l.dispose()}),this.state.activeTape=null),{value:s,grads:u}})}customGrad(t){return D(oi(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{D(e.every(i=>i instanceof ze),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,o={};e.forEach((i,u)=>{o[u]=i});let s=(i,u)=>(n=t(...e,u),D(n.value instanceof ze,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),D(oi(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(i,u)=>{let p=n.gradFunc(i,u),l=Array.isArray(p)?p:[p];D(l.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),D(l.every(c=>c instanceof ze),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let m={};return l.forEach((c,d)=>{m[d]=()=>c}),m};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:o})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){let e=Vp(),n=await this.backend.time(t);return n.wallMs=Vp()-e,n}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new db;for(let t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},ph=fb;ph.nextTensorId=0,ph.nextVariableId=0;function T6(r){let t=Xf(et(r),"float32");return N.makeTensor(t,r,"float32")}function Tv(){let r=iv();if(r._tfengine==null){let t=new Qf(r);r._tfengine=new ph(t)}return $0(r._tfengine.ENV),i1(()=>r._tfengine),r._tfengine}var N=Tv();function x6(r,t){let e={a:r,b:t};return N.runKernel(vn,e)}var Ju={};We(Ju,{isBrowser:()=>Iv,isMobile:()=>k6,mockIsMobile:()=>C6});function I6(){return typeof navigator<"u"&&navigator!=null}var xv;function C6(r){xv=r}function k6(r){if(xv!==void 0)return xv;if(r||I6()){if(r||(r=navigator),r.product==="ReactNative")return!0;let t=r.userAgent||r.vendor||(typeof window<"u"?window.opera:"");if(!t){let e=r;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Iv(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Kn=$();Kn.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Kn.registerFlag("IS_BROWSER",()=>Iv());Kn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Kn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Kn.registerFlag("PROD",()=>!1);Kn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Kn.getBool("DEBUG"));Kn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Kn.registerFlag("IS_TEST",()=>!1);Kn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Kn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Kn.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);Kn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Kn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function Gr(r,t){let e=r;if(Cr(r))return t==="string"?[]:[r.length];if(!Array.isArray(r))return[];let n=[];for(;Array.isArray(e)||Cr(e)&&t!=="string";)n.push(e.length),e=e[0];return Array.isArray(r)&&$().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&b1(r,n,[]),n}function b1(r,t,e){if(e=e||[],!Array.isArray(r)&&!Cr(r)){D(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}D(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${r.length} elements`),D(r.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${r.length} elements`);let n=t.slice(1);for(let o=0;o<r.length;++o)b1(r[o],n,e.concat(o))}function g1(r,t,e,n){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==t||r==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${n}' must be ${r} tensor, but got ${t} tensor`)}}function S(r,t,e,n="numeric"){if(r instanceof ze)return g1(n,r.dtype,t,e),r;let o=hm(r);if(o!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(o=n),g1(n,o,t,e),r==null||!Cr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let u=r==null?"null":r.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${u}'`)}let s=Gr(r,o);!Cr(r)&&!Array.isArray(r)&&(r=[r]);let i=o!=="string"?qm(r,o):sa(r,[],!0);return N.makeTensor(i,s,o)}function nu(r,t,e,n="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,a)=>S(s,`${t}[${a}]`,e,n))}var Cv="__op";function A(r){let t=Object.keys(r);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0],n=r[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+Cv;let o=(...s)=>{N.startScope(e);try{let a=n(...s);return Zf(a)&&console.error("Cannot return a Promise inside of tidy."),N.endScope(a),a}catch(a){throw N.endScope(null),a}};return Object.defineProperty(o,"name",{value:e,configurable:!0}),o}function S6(r,t){let e=S(r,"real","complex"),n=S(t,"imag","complex");$t(e.shape,n.shape,`real and imag shapes, ${e.shape} and ${n.shape}, must match in call to tf.complex().`);let o={real:e,imag:n};return N.runKernel(Lu,o)}var Nn=A({complex_:S6});function cn(r,t,e,n){if(n==null&&(n=hm(r)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Cr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Yf(t);let o=et(t),s=et(e);D(o===s,()=>`Based on the provided shape, [${t}], the tensor should have ${o} values but has ${s}`);for(let a=0;a<e.length;++a){let i=e[a],u=a===e.length-1?i!==et(t.slice(a)):!0;D(e[a]===t[a]||!u,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!Cr(r)&&!Array.isArray(r)&&(r=[r]),t=t||e,r=n!=="string"?qm(r,n):sa(r,[],!0),N.makeTensor(r,t,n)}function vr(r,t,e){let n=Gr(r,e);return cn(r,t,n,e)}var lh={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var hb=4;async function T1(r,t){let e=[],n=[],o=Array.isArray(r)?r.map(a=>a.name):Object.keys(r);for(let a=0;a<o.length;++a){let i=o[a],u=Array.isArray(r)?r[a].tensor:r[i];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${u.dtype}`);let p={name:i,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){let l=new Promise(async m=>{let c=await u.bytes(),d=c.reduce((g,b)=>g+b.length,0)+hb*c.length,f=new Uint8Array(d),h=0;for(let g=0;g<c.length;g++){let b=c[g],T=new Uint8Array(new Uint32Array([b.length]).buffer);f.set(T,h),h+=hb,f.set(b,h),h+=b.length}m(f)});n.push(l)}else n.push(u.data());t!=null&&(p.group=t),e.push(p)}let s=await Promise.all(n);return{data:v6(s),specs:e}}function gb(r,t){let e={},n,o=0;for(let s of t){let a=s.name,i=s.dtype,u=s.shape,p=et(u),l;if("quantization"in s){let m=s.quantization;if(m.dtype==="uint8"||m.dtype==="uint16"){if(!("min"in m&&"scale"in m))throw new Error(`Weight ${s.name} with quantization ${m.dtype} doesn't have corresponding metadata min and scale.`)}else if(m.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${s.name} is quantized with ${m.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${m.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let c=lh[m.dtype],d=r.slice(o,o+p*c),f=m.dtype==="uint8"?new Uint8Array(d):new Uint16Array(d);if(i==="float32")if(m.dtype==="uint8"||m.dtype==="uint16"){l=new Float32Array(f.length);for(let h=0;h<f.length;h++){let g=f[h];l[h]=g*m.scale+m.min}}else if(m.dtype==="float16")n===void 0&&(n=D6()),l=n(f);else throw new Error(`Unsupported quantization type ${m.dtype} for weight type float32.`);else if(i==="int32"){if(m.dtype!=="uint8"&&m.dtype!=="uint16")throw new Error(`Unsupported quantization type ${m.dtype} for weight type int32.`);l=new Int32Array(f.length);for(let h=0;h<f.length;h++){let g=f[h];l[h]=Math.round(g*m.scale+m.min)}}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=p*c}else if(i==="string"){let m=et(s.shape);l=[];for(let c=0;c<m;c++){let d=new Uint32Array(r.slice(o,o+hb))[0];o+=hb;let f=new Uint8Array(r.slice(o,o+d));l.push(f),o+=d}}else{let m=lh[i],c=r.slice(o,o+p*m);if(i==="float32")l=new Float32Array(c);else if(i==="int32")l=new Int32Array(c);else if(i==="bool")l=new Uint8Array(c);else if(i==="complex64"){l=new Float32Array(c);let d=new Float32Array(l.length/2),f=new Float32Array(l.length/2);for(let b=0;b<d.length;b++)d[b]=l[b*2],f[b]=l[b*2+1];let h=vr(d,u,"float32"),g=vr(f,u,"float32");e[a]=Nn(h,g),h.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=p*m}i!=="complex64"&&(e[a]=vr(l,u,i))}return e}function v6(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let t=0,e=[];r.forEach(s=>{if(t+=s.byteLength,e.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(t),o=0;return e.forEach(s=>{n.set(new Uint8Array(s.buffer),o),o+=s.byteLength}),n.buffer}var kv=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function y1(r){return kv?Buffer.byteLength(r):new Blob([r]).size}function x1(r){if(kv)return Buffer.from(r).toString("base64");let t=new Uint8Array(r),e="";for(let n=0,o=t.length;n<o;n++)e+=String.fromCharCode(t[n]);return btoa(e)}function I1(r){if(kv){let n=Buffer.from(r,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let t=atob(r),e=new Uint8Array(t.length);for(let n=0;n<t.length;++n)e.set([t.charCodeAt(n)],n);return e.buffer}function Ym(r){if(r.length===1)return r[0];let t=0;r.forEach(o=>{t+=o.byteLength});let e=new Uint8Array(t),n=0;return r.forEach(o=>{e.set(new Uint8Array(o),n),n+=o.byteLength}),e.buffer}function Sv(r){let t="/";for(r=r.trim();r.endsWith(t);)r=r.slice(0,r.length-1);let e=r.split(t);return e[e.length-1]}function bb(r,t){let e={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:t};return r.signature!=null&&(e.signature=r.signature),r.userDefinedMetadata!=null&&(e.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(e.modelInitializer=r.modelInitializer),r.trainingConfig!=null&&(e.trainingConfig=r.trainingConfig),e}async function Zm(r,t){let e={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(e.trainingConfig=r.trainingConfig),r.weightsManifest!=null){let[n,o]=await t(r.weightsManifest);e.weightSpecs=n,e.weightData=o}return r.signature!=null&&(e.signature=r.signature),r.userDefinedMetadata!=null&&(e.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(e.modelInitializer=r.modelInitializer),e}function ci(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:y1(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:y1(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:r.weightData.byteLength}}function A6(){let r=e=>{let n=e<<13,o=0;for(;(n&8388608)===0;)o-=8388608,n<<=1;return n&=-8388609,o+=947912704,n|o},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=r(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function w6(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let t=1;t<31;t++)r[t]=t<<23;for(let t=33;t<63;t++)r[t]=2147483648+(t-32<<23);return r}function N6(){let r=new Uint32Array(64);for(let t=0;t<64;t++)r[t]=1024;return r[0]=r[32]=0,r}function D6(){let r=A6(),t=w6(),e=N6();return n=>{let o=new ArrayBuffer(4*n.length),s=new Uint32Array(o);for(let a=0;a<n.length;a++){let i=n[a],u=r[e[i>>10]+(i&1023)]+t[i>>10];s[a]=u}return new Float32Array(o)}}var Dt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Dt.instance==null&&(Dt.instance=new Dt),Dt.instance}static registerSaveRouter(t){Dt.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Dt.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Dt.getHandlers(t,"save")}static getLoadHandlers(t,e){return Dt.getHandlers(t,"load",e)}static getHandlers(t,e,n){let o=[];return(e==="load"?Dt.getInstance().loadRouters:Dt.getInstance().saveRouters).forEach(a=>{let i=a(t,n);i!==null&&o.push(i)}),o}},C1=r=>Dt.registerSaveRouter(r),k1=r=>Dt.registerLoadRouter(r),S1=r=>Dt.getSaveHandlers(r),v1=(r,t)=>Dt.getLoadHandlers(r,t);var vv="tensorflowjs",Av=1,Hp="models_store",ep="model_info_store";function A1(){if(!$().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,t=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function wv(r){let t=r.result;t.createObjectStore(Hp,{keyPath:"modelPath"}),t.createObjectStore(ep,{keyPath:"modelPath"})}var di=class{constructor(t){if(this.indexedDB=A1(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((n,o)=>{let s=this.indexedDB.open(vv,Av);s.onupgradeneeded=()=>wv(s),s.onsuccess=()=>{let a=s.result;if(e==null){let i=a.transaction(Hp,"readonly"),p=i.objectStore(Hp).get(this.modelPath);p.onsuccess=()=>{if(p.result==null)return a.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(p.result.modelArtifacts)},p.onerror=l=>(a.close(),o(p.error)),i.oncomplete=()=>a.close()}else{let i=ci(e),u=a.transaction(ep,"readwrite"),p=u.objectStore(ep),l=p.put({modelPath:this.modelPath,modelArtifactsInfo:i}),m;l.onsuccess=()=>{m=a.transaction(Hp,"readwrite");let d=m.objectStore(Hp).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:i});d.onsuccess=()=>n({modelArtifactsInfo:i}),d.onerror=f=>{p=u.objectStore(ep);let h=p.delete(this.modelPath);h.onsuccess=()=>(a.close(),o(d.error)),h.onerror=g=>(a.close(),o(d.error))}},l.onerror=c=>(a.close(),o(l.error)),u.oncomplete=()=>{m==null?a.close():m.oncomplete=()=>a.close()}}},s.onerror=a=>o(s.error)})}};di.URL_SCHEME="indexeddb://";var w1=r=>$().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(di.URL_SCHEME)?R6(r.slice(di.URL_SCHEME.length)):null;Dt.registerSaveRouter(w1);Dt.registerLoadRouter(w1);function R6(r){return new di(r)}function F6(r){return r.startsWith(di.URL_SCHEME)?r.slice(di.URL_SCHEME.length):r}var yb=class{constructor(){this.indexedDB=A1()}async listModels(){return new Promise((t,e)=>{let n=this.indexedDB.open(vv,Av);n.onupgradeneeded=()=>wv(n),n.onsuccess=()=>{let o=n.result,s=o.transaction(ep,"readonly"),i=s.objectStore(ep).getAll();i.onsuccess=()=>{let u={};for(let p of i.result)u[p.modelPath]=p.modelArtifactsInfo;t(u)},i.onerror=u=>(o.close(),e(i.error)),s.oncomplete=()=>o.close()},n.onerror=o=>e(n.error)})}async removeModel(t){return t=F6(t),new Promise((e,n)=>{let o=this.indexedDB.open(vv,Av);o.onupgradeneeded=()=>wv(o),o.onsuccess=()=>{let s=o.result,a=s.transaction(ep,"readwrite"),i=a.objectStore(ep),u=i.get(t),p;u.onsuccess=()=>{if(u.result==null)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{let l=i.delete(t),m=()=>{p=s.transaction(Hp,"readwrite");let d=p.objectStore(Hp).delete(t);d.onsuccess=()=>e(u.result.modelArtifactsInfo),d.onerror=f=>n(u.error)};l.onsuccess=m,l.onerror=c=>(m(),s.close(),n(u.error))}},u.onerror=l=>(s.close(),n(u.error)),a.oncomplete=()=>{p==null?s.close():p.oncomplete=()=>s.close()}},o.onerror=s=>n(o.error)})}};var ou="/",Qm="tensorflowjs_models",N1="info",P6="model_topology",M6="weight_specs",E6="weight_data",L6="model_metadata";function D1(r){return{info:[Qm,r,N1].join(ou),topology:[Qm,r,P6].join(ou),weightSpecs:[Qm,r,M6].join(ou),weightData:[Qm,r,E6].join(ou),modelMetadata:[Qm,r,L6].join(ou)}}function R1(r){for(let t of Object.values(r))window.localStorage.removeItem(t)}function _6(r){let t=r.split(ou);if(t.length<3)throw new Error(`Invalid key format: ${r}`);return t.slice(1,t.length-1).join(ou)}function $6(r){return r.startsWith(fi.URL_SCHEME)?r.slice(fi.URL_SCHEME.length):r}var fi=class{constructor(t){if(!$().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=D1(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),o=ci(t);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,x1(t.weightData));let s={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:o}}catch{throw R1(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){let t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;let o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=o;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let i=JSON.parse(s);e.format=i.format,e.generatedBy=i.generatedBy,e.convertedBy=i.convertedBy,i.signature!=null&&(e.signature=i.signature),i.userDefinedMetadata!=null&&(e.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(e.modelInitializer=i.modelInitializer),i.trainingConfig!=null&&(e.trainingConfig=i.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=I1(a),e}};fi.URL_SCHEME="localstorage://";var F1=r=>$().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(fi.URL_SCHEME)?B6(r.slice(fi.URL_SCHEME.length)):null;Dt.registerSaveRouter(F1);Dt.registerLoadRouter(F1);function B6(r){return new fi(r)}var Tb=class{constructor(){D($().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),D(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let t={},e=Qm+ou,n=ou+N1;for(let o=0;o<this.LS.length;++o){let s=this.LS.key(o);if(s.startsWith(e)&&s.endsWith(n)){let a=_6(s);t[a]=JSON.parse(this.LS.getItem(s))}}return t}async removeModel(t){t=$6(t);let e=D1(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);let n=JSON.parse(this.LS.getItem(e.info));return R1(e),n}};var Jm="://",Mr=class{constructor(){this.managers={}}static getInstance(){return Mr.instance==null&&(Mr.instance=new Mr),Mr.instance}static registerManager(t,e){D(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(Jm)&&(t=t.slice(0,t.indexOf(Jm))),D(t.length>0,()=>"scheme must not be an empty string.");let n=Mr.getInstance();D(n.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){let e=Mr.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(Mr.getInstance().managers)}};function xb(r){if(r.indexOf(Jm)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Mr.getSchemes().join(",")}`);return{scheme:r.split(Jm)[0],path:r.split(Jm)[1]}}async function P1(r,t,e=!1){D(r!==t,()=>`Old path and new path are the same: '${r}'`);let n=Dt.getLoadHandlers(r);D(n.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),D(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${r}.`);let o=n[0],s=Dt.getSaveHandlers(t);D(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),D(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${t}.`);let a=s[0],i=xb(r).scheme,u=xb(r).path,p=i===xb(r).scheme,l=await o.load();e&&p&&await Mr.getManager(i).removeModel(u);let m=await a.save(l);return e&&!p&&await Mr.getManager(i).removeModel(u),m.modelArtifactsInfo}async function M1(){let r=Mr.getSchemes(),t={};for(let e of r){let n=await Mr.getManager(e).listModels();for(let o in n){let s=e+Jm+o;t[s]=n[o]}}return t}async function E1(r){let t=xb(r);return Mr.getManager(t.scheme).removeModel(t.path)}async function L1(r,t){return P1(r,t,!1)}async function _1(r,t){return P1(r,t,!0)}var Nv=class{constructor(){this.messageName="setTimeoutCustom";this.functionRefs=[];this.handledMessageCount=0;this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(!window||!$().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",n=>{if(n.source===window&&n.data.name===this.messageName){n.stopPropagation();let o=this.functionRefs[n.data.index];o(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}};if($().get("IS_BROWSER")){$().setPlatform("browser",new Nv);try{Mr.registerManager(fi.URL_SCHEME,new Tb)}catch{}try{Mr.registerManager(di.URL_SCHEME,new yb)}catch{}}var O6={importFetch:()=>$1()},Dv;var Rv=class{constructor(){this.util=B1(),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return $().global.fetch!=null?$().global.fetch(t,e):(Dv==null&&(Dv=O6.importFetch()),Dv(t,e))}now(){let t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}};$().get("IS_NODE")&&!$().get("IS_BROWSER")&&$().setPlatform("node",new Rv);function Te(r,t="float32",e){return t=t||"float32",Yf(r),new ht(r,t,e)}function z6(r,t){let e=S(r,"x","cast");if(!nv(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:e},o={dtype:t};return N.runKernel(zn,n,o)}var te=A({cast_:z6});function G6(r){let e={x:S(r,"x","clone","string_or_numeric")};return N.runKernel(Un,e)}var dn=A({clone_:G6});function Ib(r,t=!1){console.log(r.toString(t))}Tv();var U6={buffer:Te,cast:te,clone:dn,print:Ib};u1(U6);var Dn={};We(Dn,{browserFiles:()=>z1,browserHTTPRequest:()=>W1,concatenateArrayBuffers:()=>Ym,copyModel:()=>L1,decodeWeights:()=>gb,encodeWeights:()=>T1,fromMemory:()=>K1,fromMemorySync:()=>_v,getLoadHandlers:()=>v1,getModelArtifactsForJSON:()=>Zm,getModelArtifactsInfoForJSON:()=>ci,getSaveHandlers:()=>S1,http:()=>Sb,isHTTPScheme:()=>kb,listModels:()=>M1,loadWeights:()=>G1,moveModel:()=>_1,registerLoadRouter:()=>k1,registerSaveRouter:()=>C1,removeModel:()=>E1,weightsLoaderFactory:()=>Ev,withSaveHandler:()=>V1,withSaveHandlerSync:()=>H1});var W6="model",K6=".json",V6=".weights.bin";function O1(r){return new Promise(t=>setTimeout(t)).then(r)}var Cb=class{constructor(t){if(!$().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Cb.URL_SCHEME)&&(t=t.slice(Cb.URL_SCHEME.length)),(t==null||t.length===0)&&(t=W6),this.modelJsonFileName=t+K6,this.weightDataFileName=t+V6}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],o=bb(t,n),s=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=s,await O1(()=>a.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=e,await O1(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:ci(t)}}}},ec=Cb;ec.URL_SCHEME="downloads://";var Fv=class{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise((t,e)=>{let n=new FileReader;n.onload=o=>{let s=JSON.parse(o.target.result),a=s.modelTopology;if(a==null){e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:a});return}let u=Zm(s,p=>this.loadWeights(p));t(u)},n.onerror=o=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(t){let e=[],n=[];for(let a of t)e.push(...a.weights),n.push(...a.paths);let o=this.checkManifestAndWeightFiles(t),s=n.map(a=>this.loadWeightsFile(a,o[a]));return Promise.all(s).then(a=>[e,Ym(a)])}loadWeightsFile(t,e){return new Promise((n,o)=>{let s=new FileReader;s.onload=a=>{let i=a.target.result;n(i)},s.onerror=a=>o(`Failed to weights data from file of path '${t}'.`),s.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){let e=[],n=this.weightsFiles.map(s=>Sv(s.name)),o={};for(let s of t)s.paths.forEach(a=>{let i=Sv(a);if(e.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(e.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);o[a]=this.weightsFiles[n.indexOf(i)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return o}},H6=r=>$().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(ec.URL_SCHEME)?q6(r.slice(ec.URL_SCHEME.length)):null;Dt.registerSaveRouter(H6);function q6(r="model"){return new ec(r)}function z1(r){return new Fv(r)}function Pv(r,t,e,n){a(r),e=e??0,n=n??1,i(e,n);let o=0,s=u=>(u.then(p=>{let l=e+ ++o/r.length*(n-e);return t(l),p}),u);function a(u){D(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function i(u,p){D(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),D(p>=0&&p<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${p}`),D(p>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${p}`)}return Promise.all(r.map(s))}async function Mv(r,t){t==null&&(t={});let e=t.fetchFunc==null?$().platform.fetch:t.fetchFunc,n=r.map(m=>e(m,t.requestInit,{isBinary:!0})),o=0,s=.5,i=(t.onProgress==null?await Promise.all(n):await Pv(n,t.onProgress,o,s)).map(m=>m.arrayBuffer()),u=.5,p=1;return t.onProgress==null?await Promise.all(i):await Pv(i,t.onProgress,u,p)}async function G1(r,t="",e,n){return Ev(a=>Mv(a,{requestInit:n}))(r,t,e)}function Ev(r){return async(t,e="",n)=>{let o=t.map(()=>!1),s={},a=n!=null?n.map(()=>!1):[],i=[];if(t.forEach((d,f)=>{let h=0;d.weights.forEach(g=>{let b="quantization"in g?g.quantization.dtype:g.dtype,T=lh[b]*et(g.shape),x=()=>{o[f]=!0,s[f]==null&&(s[f]=[]),s[f].push({manifestEntry:g,groupOffset:h,sizeBytes:T})};n!=null?n.forEach((I,k)=>{I===g.name&&(x(),a[k]=!0)}):x(),i.push(g.name),h+=T})}),!a.every(d=>d)){let d=n.filter((f,h)=>!a[h]);throw new Error(`Could not find weights in manifest with names: ${d.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let u=o.reduce((d,f,h)=>(f&&d.push(h),d),[]),p=[];u.forEach(d=>{t[d].paths.forEach(f=>{let h=e+(e.endsWith("/")?"":"/")+f;p.push(h)})});let l=await r(p),m={},c=0;return u.forEach(d=>{let f=t[d].paths.length,h=0;for(let I=0;I<f;I++)h+=l[c+I].byteLength;let g=new ArrayBuffer(h),b=new Uint8Array(g),T=0;for(let I=0;I<f;I++){let k=new Uint8Array(l[c+I]);b.set(k,T),T+=k.byteLength}s[d].forEach(I=>{let k=g.slice(I.groupOffset,I.groupOffset+I.sizeBytes),w=gb(k,[I.manifestEntry]);for(let R in w)m[R]=w[R]}),c+=f}),m}}var j6="application/octet-stream",X6="application/json",mh=class{constructor(t,e){this.DEFAULT_METHOD="POST";if(e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(D(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=$().platform.fetch,D(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&D(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],o=bb(t,n);e.body.append("model.json",new Blob([JSON.stringify(o)],{type:X6}),"model.json"),t.weightData!=null&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:j6}),"model.weights.bin");let s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:ci(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=e.modelTopology,o=e.weightsManifest;if(n==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Zm(e,s=>this.loadWeights(s))}async loadWeights(t){let e=Array.isArray(this.path)?this.path[1]:this.path,[n,o]=Y6(e),s=this.weightPathPrefix||n,a=[];for(let l of t)a.push(...l.weights);let i=[],u=[];for(let l of t)for(let m of l.paths)this.weightUrlConverter!=null?u.push(this.weightUrlConverter(m)):i.push(s+m+o);this.weightUrlConverter&&i.push(...await Promise.all(u));let p=await Mv(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,Ym(p)]}};mh.URL_SCHEME_REGEX=/^https?:\/\//;function Y6(r){let t=r.lastIndexOf("/"),e=r.lastIndexOf("?"),n=r.substring(0,t),o=e>t?r.substring(e):"";return[n+"/",o]}function kb(r){return r.match(mh.URL_SCHEME_REGEX)!=null}var U1=(r,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(r)?e=r.every(n=>kb(n)):e=kb(r),e)return Sb(r,t)}return null};Dt.registerSaveRouter(U1);Dt.registerLoadRouter(U1);function Sb(r,t){return new mh(r,t)}function W1(r,t){return Sb(r,t)}var ch=class{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}},vb=class{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}},Lv=class{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}};function K1(r,t,e,n){let o=arguments;return new Lv(_v(...o))}function _v(r,t,e,n){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new ch(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ch({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ch({modelTopology:r,weightSpecs:t,weightData:e,trainingConfig:n}))}function V1(r){return new vb(r)}function H1(r){return new vb(r)}var X1={};We(X1,{confusionMatrix:()=>j1});function Z6(r,t,e=!1,n=!1){let o=S(r,"a","matMul"),s=S(t,"b","matMul");[o,s]=qe(o,s);let a={a:o,b:s},i={transposeA:e,transposeB:n};return N.runKernel(mo,a,i)}var Ge=A({matMul_:Z6});function Q6(r,t,e=1,n=0,o="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:S(r,"indices","oneHot","int32")},i={dtype:o,depth:t,onValue:e,offValue:n};return N.runKernel(Sa,a,i)}var tp=A({oneHot_:Q6});function ixe(){$().set("PROD",!0)}function uxe(){$().set("DEBUG",!0)}function pxe(){$().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function $v(r){$().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}p1($v);function lxe(){N.disposeVariables()}function Rn(){return N}function dh(){return N.memory()}function mxe(r){return N.profile(r)}function z(r,t){return N.tidy(r,t)}function Ne(r){uh(r).forEach(e=>e.dispose())}function Bt(r){return N.keep(r)}function cxe(r){return N.time(r)}function J6(r){return N.setBackend(r)}function dxe(){return N.ready()}function fxe(){return N.backendName}function hxe(r){N.removeBackend(r)}function gxe(r){return N.findBackend(r)}function bxe(r){return N.findBackendFactory(r)}function rp(r,t,e=1){return N.registerBackend(r,t,e)}function q1(){return N.backend}function yxe(r,t){$().setPlatform(r,t)}function e5(r){let e={input:S(r,"input","imag")};return N.runKernel(zu,e)}var np=A({imag_:e5});function t5(r){let e={x:S(r,"x","neg")};return N.runKernel(hs,e)}var Qe=A({neg_:t5});function r5(r){let e={input:S(r,"input","real")};return N.runKernel(Wu,e)}var su=A({real_:r5});function n5(r,t,e){let n=S(r,"x","transpose");if(t==null&&(t=n.shape.map((a,i)=>i).reverse()),D(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(a=>{D(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let o={x:n},s={perm:t};return n.dtype==="complex64"?z(()=>{let a=su(n),i=np(n);return a=N.runKernel(wn,{x:a},s),i=N.runKernel(wn,{x:i},s),e&&(i=Qe(i)),Nn(a,i)}):N.runKernel(wn,o,s)}var Oe=A({transpose_:n5});function o5(r,t,e){let n=S(r,"labels","confusionMatrix"),o=S(t,"predictions","confusionMatrix");D(e==null||e>0&&Number.isInteger(e),()=>`If provided, numClasses must be a positive integer, but got ${e}`),D(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),D(o.rank===1,()=>`Expected the rank of predictions to be 1, but got ${o.rank}`),D(n.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),D(e>0&&Number.isInteger(e),()=>`numClasses is required to be a positive integer, but got ${e}`);let s=tp(te(n,"int32"),e),a=tp(te(o,"int32"),e),i=Oe(s),u=Ge(i,a);return te(u,"int32")}var j1=A({confusionMatrix_:o5});var Ar={};We(Ar,{assertAndGetBroadcastShape:()=>$e,getBroadcastDims:()=>Y1,getReductionAxes:()=>St});function Y1(r,t){let e=r.length,n=[];for(let o=0;o<e;o++){let s=e-1-o,a=r[s]||1;(t[t.length-1-o]||1)>1&&a===1&&n.unshift(s)}return n}function St(r,t){let e=[];for(let n=0;n<t.length;n++){let o=r[r.length-n-1],s=t.length-n-1,a=t[s];(o==null||o===1&&a>1)&&e.unshift(s)}return e}function $e(r,t){let e=[],n=Math.max(r.length,t.length);for(let o=0;o<n;o++){let s=r[r.length-o-1];s==null&&(s=1);let a=t[t.length-o-1];if(a==null&&(a=1),s===1)e.unshift(a);else if(a===1)e.unshift(s);else if(s!==a){let i=`Operands could not be broadcast together with shapes ${r} and ${t}.`;throw Error(i)}else e.unshift(s)}return e}var wb={};We(wb,{fromPixels:()=>m5,fromPixelsAsync:()=>p5,toPixels:()=>l5});function Ab(r,t,e){if(io(r),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=Gr(r,e);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return cn(r,t,n,e)}var qp;function Z1(r,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,n=!1,o=!1,s=!1,a=!1,i=!1;if(r.data instanceof Uint8Array)e=!0;else if(typeof ImageData<"u"&&r instanceof ImageData)n=!0;else if(typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement)s=!0;else if(r.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&r instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(nh(Gp,N.backendName)!=null){let f={pixels:r},h={numChannels:t};return N.runKernel(Gp,f,h)}let[p,l]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],m;if(a)m=r.getContext("2d").getImageData(0,0,p,l).data;else if(n||e)m=r.data;else if(s||o||i){if(qp==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")qp=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else qp=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});qp.canvas.width=p,qp.canvas.height=l,qp.drawImage(r,0,0,p,l),m=qp.getImageData(0,0,p,l).data}let c;if(t===4)c=new Int32Array(m);else{let f=p*l;c=new Int32Array(f*t);for(let h=0;h<f;h++)for(let g=0;g<t;++g)c[h*t+g]=m[h*4+g]}return Ab(c,[l,p,t],"int32")}function s5(r){return r!=null&&r.data instanceof Uint8Array}function a5(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function i5(r){return r!=null&&r.width!==0&&r.height!==0}function u5(r){return a5()&&!(r instanceof ImageBitmap)&&i5(r)&&!s5(r)}async function p5(r,t=3){let e=null;if($().getBool("WRAP_TO_IMAGEBITMAP")&&u5(r)){let n;try{n=await createImageBitmap(r,{premultiplyAlpha:"none"})}catch{n=null}n!=null&&n.width===r.width&&n.height===r.height?e=n:e=r}else e=r;return Z1(e,t)}async function l5(r,t){let e=S(r,"img","toPixels");if(!(r instanceof ze)){let p=e;e=te(p,"int32"),p.dispose()}if(e.rank!==2&&e.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let[n,o]=e.shape.slice(0,2),s=e.rank===2?1:e.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(e.dtype!=="float32"&&e.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`);let a=await e.data(),i=e.dtype==="float32"?255:1,u=new Uint8ClampedArray(o*n*4);for(let p=0;p<n*o;++p){let l=[0,0,0,255];for(let c=0;c<s;c++){let d=a[p*s+c];if(e.dtype==="float32"){if(d<0||d>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${d}.`)}else if(e.dtype==="int32"&&(d<0||d>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${d}.`);s===1?(l[0]=d*i,l[1]=d*i,l[2]=d*i):l[c]=d*i}let m=p*4;u[m+0]=Math.round(l[0]),u[m+1]=Math.round(l[1]),u[m+2]=Math.round(l[2]),u[m+3]=Math.round(l[3])}if(t!=null){t.width=o,t.height=n;let p=t.getContext("2d"),l=new ImageData(u,o,n);p.putImageData(l,0,0)}return e!==r&&e.dispose(),u}var m5=A({fromPixels_:Z1});var Nb={};We(Nb,{prepareAndValidate:()=>Q1});function Q1(r,t){let e=r.shape.length,n=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[n-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[n-1]} vs. ${e}`);if(et(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let o=t.shape,s=o[o.length-1],a=1;for(let m=0;m<o.length-1;++m)a*=o[m];let i=r.shape,u=o.slice();u.pop();let p=1;for(let m=s;m<e;++m)p*=i[m],u.push(i[m]);let l=[...si(r.shape).map(m=>m/p),1].slice(0,s);return[u,a,p,l]}var fh={};We(fh,{calculateShapes:()=>J1,validateInput:()=>Db,validateUpdateShape:()=>Bv});function Bv(r,t,e){let n=t.rank>1?t.shape[t.rank-1]:1,o=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${r}, sliceDim: ${n}, and batchDim: ${o}.`;if(e.rank<o)throw new Error(s+` update.rank < ${o}. `);if(r.length<n+(e.rank-o))throw new Error(s+` Output shape length < ${n+(e.rank-o)}`);if(e.rank!==o+r.length-n)throw new Error(s+` update.rank != ${o+r.length-n}`);for(let a=0;a<o;++a)if(e.shape[a]!==t.shape[a])throw new Error(s+` updates.shape[${a}] (${e.shape[a]}) != indices.shape[${a}] (${t.shape[a]}).`);for(let a=0;a<e.rank-o;++a)if(e.shape[a+o]!==r[a+n])throw new Error(s+` updates.shape[${a+o}] (${e.shape[a+o]}) != shape[${a+o}] (${r[a+o]})`)}function Db(r,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}Bv(e,t,r)}function J1(r,t,e){let n=t.shape.length,o=n>1?t.shape[n-1]:1,s=e.length,a=1;for(let m=o;m<s;++m)a*=e[m];let i=o<1?1:o,u=et(t.shape)/i,p=[...si(e.slice(0,o)),1],l=et(e);return{sliceRank:o,numUpdates:u,sliceSize:a,strides:p,outputSize:l}}var Tt={};We(Tt,{assertParamsValid:()=>d5,computeFlatOffset:()=>y5,computeOutShape:()=>h5,getNormalizedAxes:()=>g5,isSliceContinous:()=>b5,maskToAxes:()=>f5,parseSliceParams:()=>zv,sliceInfo:()=>T5,startForAxis:()=>i2,startIndicesWithElidedDims:()=>o2,stopForAxis:()=>u2,stopIndicesWithElidedDims:()=>s2,stridesForAxis:()=>a2,stridesWithElidedDims:()=>t2});var Ov=-2,c5=-1;function d5(r,t,e){let n=r.shape.length;D(n===t.length,()=>`Error in slice${n}D: Length of begin ${t} must match the rank of the array (${n}).`),D(n===e.length,()=>`Error in slice${n}D: Length of size ${e} must match the rank of the array (${n}).`);for(let o=0;o<n;++o)D(t[o]+e[o]<=r.shape[o],()=>`Error in slice${n}D: begin[${o}] + size[${o}] (${t[o]+e[o]}) would overflow input.shape[${o}] (${r.shape[o]})`)}function f5(r){let t=[],e=0;for(;r>0;)r&1&&t.push(e),r/=2,e++;return t}function h5(r,t,e){let n=[];for(let o=0;o<r.length;o++)n[o]=Math.ceil((t[o]-r[o])/e[o]);return n}function t2(r,t,e,n){let o=[...r];for(let s=o.length;s<n.length;s++)o.push(1);for(let s=0;s<e;s++)s===0?o[t]=1:(o.splice(t,0,1),o.pop());return o}function r2(r,t,e){return e<=r?e:e-(t-1)}function n2(r,t){let e=[];for(let n=0;n<r;n++)e.push(t+n);return e}function g5(r,t,e,n,o,s,a,i,u){let p=r.length,l=new Array(p),m=new Array(p),c=new Array(p);if(t.length&&e>0){let d=t[0],f=e+1;l=o2(a,d,f,n,r),m=s2(i,d,f,o,r),c=t2(s,d,f,r)}else for(let d=0;d<p;d++)l[d]=i2(a,n,s,r,d,u),m[d]=u2(i,o,s,r,d,u),c[d]=a2(s,d,u);return{begin:l,end:m,strides:c}}function o2(r,t,e,n,o){let s=[...o],a=n2(e,t);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=0;else{let u=r2(t,e,i),p=n[u];r&1<<u&&(p=0),s[i]=p}return s}function s2(r,t,e,n,o){let s=[...o],a=n2(e,t);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{let u=r2(t,e,i),p=n[u];r&1<<u&&(p=Number.MAX_SAFE_INTEGER),s[i]=p}for(let i=0;i<s.length;i++){let u=o[i];s[i]<0&&(s[i]+=u),s[i]=fm(0,s[i],o[i])}return s}function a2(r,t,e){let n=r[t];return(e&1<<t||n==null)&&(n=1),n}function i2(r,t,e,n,o,s){let a=t[o],i=e[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);let u=n[o];return a<0&&(a+=u),a=fm(0,a,u-1),a}function u2(r,t,e,n,o,s){let a=t[o],i=e[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);let u=n[o];return a<0&&(a+=u),i>0?a=fm(0,a,u):a=fm(-1,a,u-1),a}function b5(r,t,e){let n=e.length;for(let o=0;o<e.length;o++)if(e[o]>1){n=o;break}for(let o=n+1;o<e.length;o++)if(t[o]>0||e[o]!==r[o])return!1;return!0}function y5(r,t){let e=r.length>0?r[r.length-1]:1;for(let n=0;n<r.length-1;n++)e+=r[n]*t[n];return e}function zv(r,t,e){let n,o=r.shape.length;typeof t=="number"?n=[t,...new Array(o-1).fill(0)]:t.length<o?n=t.concat(new Array(o-t.length).fill(0)):n=t.slice(),n.forEach(a=>{D(a!==-1,()=>"slice() does not support negative begin indexing.")});let s;return e==null?s=new Array(o).fill(-1):typeof e=="number"?s=[e,...new Array(o-1).fill(-1)]:e.length<o?s=e.concat(new Array(o-e.length).fill(-1)):s=e,s=s.map((a,i)=>a>=0?a:(D(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),r.shape[i]-n[i])),[n,s]}function T5(r,t,e,n,o,s,a,i,u){let p;if(n==null?(p=new Array(t.length),p.fill(1)):p=n,a!=null&&(a&a-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1,m={dims:p.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:p.slice(),beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};for(let x=0;x<m.dims;x++)l&&(1<<x&i)!==0&&m.numAddAxisAfterEllipsis++,1<<x&a&&(l=!0);l||(m.ellipsisMask|=1<<m.dims,m.dims++);let c={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};x5(m,c);let d=!0,f=!0,h=!0,g=[],b=[];for(let x=0;x<r.length;++x){if(c.strides[x]===0)throw Error(`strides[${x}] must be non-zero`);let I=!!(c.shrinkAxisMask&1<<x),k=r[x];if(k===-1){g.push(I?1:-1);continue}let w=[c.beginMask&1<<x,c.endMask&1<<x],R=[c.strides[x]>0?0:-1,c.strides[x]>0?k:k-1];if(I&&c.strides[x]<=0)throw Error("only stride 1 allowed on non-range indexing.");h=h&&c.strides[x]===1;let F=!!(c.beginMask&1<<x&&c.endMask&1<<x);if(c.beginValid&&c.endValid){if(I){let G=c.begin[x]<0?k+c.begin[x]:c.begin[x];if(c.begin[x]=G,c.end[x]=c.begin[x]+1,G<0||G>=k)throw Error(`slice index ${c.begin[x]} of dimension ${x} out of bounds.`)}else c.begin[x]=e2(c.begin[x],0,c.strides[x],k,w,R),c.end[x]=e2(c.end[x],1,c.strides[x],k,w,R);let B=c.strides[x]===1&&c.begin[x]===0&&c.end[x]===k;d=d&&B,f=f&&(x===0&&c.strides[x]===1||B)}else d=d&&c.strides[x]===1&&F,f=f&&(x===0&&c.strides[x]===1||F);let P,E=!1;if(c.beginValid&&c.endValid?(P=c.end[x]-c.begin[x],E=!0):I?(P=1,E=!0):F&&k>=0&&(c.strides[x]<0?P=-k:P=k,E=!0),E){let B;P===0||P<0!=c.strides[x]<0?B=0:B=Math.trunc(P/c.strides[x])+(P%c.strides[x]!==0?1:0),g.push(B)}else g.push(-1)}for(let x=0;x<c.finalShapeGatherIndices.length;++x){let I=c.finalShapeGatherIndices[x];I>=0?b.push(g[I]):I===Ov&&b.push(1)}return{finalShapeSparse:b.filter((x,I)=>c.finalShapeGatherIndices[I]!==Ov),finalShape:b,isIdentity:d,sliceDim0:f,isSimpleSlice:h,begin:c.begin,end:c.end,strides:c.strides}}function x5(r,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=r.begin!=null,t.endValid=r.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let n=0;n<r.dims;n++)if(1<<n&r.ellipsisMask){let o=Math.min(t.dims-(r.dims-n)+1+r.numAddAxisAfterEllipsis,t.dims);for(;e<o;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=n}else if(1<<n&r.newAxisMask)t.finalShapeGatherIndices.push(Ov),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);r.begin!=null&&(t.begin[e]=r.begin[n]),r.end!=null&&(t.end[e]=r.end[n]),t.strides[e]=r.strides[n],r.beginMask&1<<n&&(t.beginMask|=1<<e),r.endMask&1<<n&&(t.endMask|=1<<e),r.shrinkAxisMask&1<<n?(t.finalShapeGatherIndices.push(c5),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(n)),t.inputShapeGatherIndicesSparse[e]=n,e++}}function e2(r,t,e,n,o,s){if(o[t])return e>0?s[t]:s[t+1&1];{let a=r<0?n+r:r;return a<s[0]?s[0]:a>s[1]?s[1]:a}}var Q={};We(Q,{Serializable:()=>hh,SerializationMap:()=>hi,registerClass:()=>Fn});var hh=class{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}},hi=class{constructor(){this.classNameMap={}}static getMap(){return hi.instance==null&&(hi.instance=new hi),hi.instance}static register(t){hi.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function Fn(r){D(r.className!=null,()=>"Class being registered does not have the static className property defined."),D(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),D(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),hi.register(r)}var c2={};We(c2,{TEST_EPSILON_FLOAT16:()=>p2,createVideoElement:()=>w5,encodeStrings:()=>m2,expectArrayBuffersEqual:()=>A5,expectArraysClose:()=>C5,expectArraysEqual:()=>S5,expectNumbersClose:()=>l2,expectPromiseToFail:()=>k5,expectValuesInRange:()=>v5,play:()=>N5,testEpsilon:()=>Rb});var I5=.001,p2=.1;function C5(r,t,e){return e==null&&(e=Rb()),Gv(r,t,(n,o)=>Uv(n,o,e))}function Rb(){return N.backend.floatPrecision()===32?I5:p2}function Gv(r,t,e){let n=!0;if((Cr(r)||Cr(t))&&(n=!1),Cr(r)&&Cr(t)&&(n=!0),n){let a=r.constructor.name,i=t.constructor.name;if(a!==i)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${i}`)}if(Array.isArray(r)&&Array.isArray(t)){let a=Gr(r),i=Gr(t);if(!On(a,i))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${i}]`)}let o=Cr(r)?r:sa(r),s=Cr(t)?t:sa(t);if(o.length!==s.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${s.length}.
Actual:   ${o}.
Expected: ${s}.`);for(let a=0;a<s.length;++a){let i=o[a],u=s[a];if(!e(i,u))throw new Error(`Arrays differ: actual[${a}] = ${i}, expected[${a}] = ${u}.
Actual:   ${o}.
Expected: ${s}.`)}typeof expect<"u"&&expect().nothing()}function k5(r,t){r().then(()=>t.fail(),()=>t()),typeof expect<"u"&&expect().nothing()}function S5(r,t){let e=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return aa(r)||aa(r[0])||aa(t)||aa(t[0])?Gv(r,e,(n,o)=>n==o):Gv(r,t,(n,o)=>Uv(n,o,0))}function l2(r,t,e){if(e==null&&(e=Rb()),!Uv(r,t,e))throw new Error(`Numbers differ: actual === ${r}, expected === ${t}`);typeof expect<"u"&&expect().nothing()}function Uv(r,t,e){return!isFinite(r)&&!isFinite(t)?!0:!(isNaN(r)||isNaN(t)||Math.abs(r-t)>e)}function v5(r,t,e){for(let n=0;n<r.length;n++)if(r[n]<t||r[n]>e)throw new Error(`Value out of range:${r[n]} low: ${t}, high: ${e}`)}function A5(r,t){let e=new Float32Array(r),n=new Float32Array(t);if(e.length!==n.length)throw new Error(`Expected ArrayBuffer to be of length ${n.length}, but it was ${e.length}`);for(let o=0;o<n.length;o++)if(e[o]!==n[o])throw new Error(`Expected ArrayBuffer value at ${o} to be ${n[o]} but got ${e[o]} instead`)}function m2(r){for(let t=0;t<r.length;t++){let e=r[t];Array.isArray(e)?m2(e):r[t]=Qu(e)}return r}function w5(r){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(r),new Promise(e=>{t.addEventListener("loadeddata",n=>e(t)),t.load()})}async function N5(r){await r.play(),"requestVideoFrameCallback"in r&&await new Promise(t=>{r.requestVideoFrameCallback(t)})}var D5="0.0.0";function R5(r,t){let e=S(r,"a","add"),n=S(t,"b","add");[e,n]=qe(e,n);let o={a:e,b:n};return N.runKernel(vn,o)}var Y=A({add_:R5});function F5(r,t){let e=S(r,"a","floorDiv"),n=S(t,"b","floorDiv");[e,n]=qe(e,n);let o={a:e,b:n};return N.runKernel(So,o)}var Fb=A({floorDiv_:F5});function P5(r,t){let e=S(r,"a","div"),n=S(t,"b","div");if([e,n]=qe(e,n),e.dtype==="int32"&&n.dtype==="int32")return Fb(e,n);let o={a:e,b:n},s={};return N.runKernel(xo,o,s)}var me=A({div_:P5});function M5(r,t){let e=S(r,"a","mul"),n=S(t,"b","mul");[e,n]=qe(e,n);let o={a:e,b:n};return N.runKernel(_o,o)}var M=A({mul_:M5});function E5(r){let t=S(r,"x","abs");if(t.dtype==="complex64"){let e={x:t};return N.runKernel(_u,e)}else{let e={x:t};return N.runKernel(ls,e)}}var Ot=A({abs_:E5});function L5(r){let e={x:S(r,"x","acos")};return N.runKernel(Ei,e)}var d2=A({acos_:L5});function _5(r){let e={x:S(r,"x","acosh")};return N.runKernel(Li,e)}var f2=A({acosh_:_5});function $5(r){D(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),D(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let t=r.map((o,s)=>S(o,`tensors${s}`,"addN")),e=t[0];t.forEach(o=>{if(o.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(o=>{if(!On(o.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=t;return N.runKernel(uo,n)}var h2=A({addN_:$5});function B5(r,t=null,e=!1){let o={x:S(r,"x","all","bool")},s={axis:t,keepDims:e};return N.runKernel(_i,o,s)}var Pb=A({all_:B5});function O5(r,t=null,e=!1){let o={x:S(r,"x","any","bool")},s={axis:t,keepDims:e};return N.runKernel($i,o,s)}var gh=A({any_:O5});function z5(r,t=0){let n={x:S(r,"x","argMax")},o={axis:t};return N.runKernel(po,n,o)}var op=A({argMax_:z5});function G5(r,t=0){let n={x:S(r,"x","argMin")},o={axis:t};return N.runKernel(ai,n,o)}var g2=A({argMin_:G5});function U5(r){let e={x:S(r,"x","asin")};return N.runKernel(Bi,e)}var b2=A({asin_:U5});function W5(r){let e={x:S(r,"x","asinh")};return N.runKernel(Oi,e)}var y2=A({asinh_:W5});function K5(r){let e={x:S(r,"x","atan")};return N.runKernel(zi,e)}var T2=A({atan_:K5});function V5(r,t){let e=S(r,"a","atan2"),n=S(t,"b","atan2");[e,n]=qe(e,n);let o={a:e,b:n};return N.runKernel(ia,o)}var x2=A({atan2_:V5});function H5(r){let e={x:S(r,"x","atanh")};return N.runKernel(Gi,e)}var I2=A({atanh_:H5});function q5(r,t,e,n,o="NHWC",s){let a=r[3],i=[...t,a],u=k2(o);return Xp(r,i,e,s,n,null,null,u)}function Kv(r,t,e,n,o,s,a="channelsLast"){let[i,u]=Mb(t),p;if(a==="channelsLast")p=[i,u,r[3],r[3]];else if(a==="channelsFirst")p=[i,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return Xp(r,p,e,n,o,s,!1,a)}function j5(r,t,e,n,o,s,a="NDHWC"){let[i,u,p]=Wv(t),l,m;if(a==="NDHWC")m="channelsLast",l=[i,u,p,r[4],r[4]];else if(a==="NCDHW")m="channelsFirst",l=[i,u,p,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return C2(r,l,e,n,o,!1,m,s)}function Xp(r,t,e,n,o,s,a=!1,i="channelsLast"){let[u,p,l,m]=[-1,-1,-1,-1];if(i==="channelsLast")[u,p,l,m]=r;else if(i==="channelsFirst")[u,m,p,l]=r;else throw new Error(`Unknown dataFormat ${i}`);let[c,d,,f]=t,[h,g]=Mb(e),[b,T]=Mb(n),x=tc(c,b),I=tc(d,T),{padInfo:k,outHeight:w,outWidth:R}=Z5(o,p,l,h,g,x,I,s,i),F=a?f*m:f,P;return i==="channelsFirst"?P=[u,F,w,R]:i==="channelsLast"&&(P=[u,w,R,F]),{batchSize:u,dataFormat:i,inHeight:p,inWidth:l,inChannels:m,outHeight:w,outWidth:R,outChannels:F,padInfo:k,strideHeight:h,strideWidth:g,filterHeight:c,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:I,dilationHeight:b,dilationWidth:T,inShape:r,outShape:P,filterShape:t}}function C2(r,t,e,n,o,s=!1,a="channelsLast",i){let[u,p,l,m,c]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[u,p,l,m,c]=r;else if(a==="channelsFirst")[u,c,p,l,m]=r;else throw new Error(`Unknown dataFormat ${a}`);let[d,f,h,,g]=t,[b,T,x]=Wv(e),[I,k,w]=Wv(n),R=tc(d,I),F=tc(f,k),P=tc(h,w),{padInfo:E,outDepth:B,outHeight:G,outWidth:U}=Q5(o,p,l,m,b,T,x,R,F,P,i),V=s?g*c:g,W;return a==="channelsFirst"?W=[u,V,B,G,U]:a==="channelsLast"&&(W=[u,B,G,U,V]),{batchSize:u,dataFormat:a,inDepth:p,inHeight:l,inWidth:m,inChannels:c,outDepth:B,outHeight:G,outWidth:U,outChannels:V,padInfo:E,strideDepth:b,strideHeight:T,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:h,effectiveFilterDepth:R,effectiveFilterHeight:F,effectiveFilterWidth:P,dilationDepth:I,dilationHeight:k,dilationWidth:w,inShape:r,outShape:W,filterShape:t}}function X5(r,t,e,n,o){n==null&&(n=Vv(r,t,e));let s=r[0],a=r[1],i=jp((s-t+2*n)/e+1,o),u=jp((a-t+2*n)/e+1,o);return[i,u]}function Y5(r,t,e,n,o,s){o==null&&(o=Vv(r,t,n));let a=r[0],i=r[1],u=r[2],p=jp((a-t+2*o)/n+1,s),l=jp((i-t+2*o)/n+1,s),m=jp((u-t+2*o)/n+1,s);return[p,l,m,e]}function Vv(r,t,e,n=1){let o=tc(t,n);return Math.floor((r[0]*(e-1)-e+o)/2)}function Mb(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function Wv(r){return typeof r=="number"?[r,r,r]:r}function tc(r,t){return t<=1?r:r+(r-1)*(t-1)}function Z5(r,t,e,n,o,s,a,i,u){let p,l,m;if(typeof r=="number"){p={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let d=X5([t,e],s,n,r,i);l=d[0],m=d[1]}else if(r==="same"){l=Math.ceil(t/n),m=Math.ceil(e/o);let c=Math.max(0,(l-1)*n+s-t),d=Math.max(0,(m-1)*o+a-e),f=Math.floor(c/2),h=c-f,g=Math.floor(d/2),b=d-g;p={top:f,bottom:h,left:g,right:b,type:"SAME"}}else if(r==="valid")p={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-s+1)/n),m=Math.ceil((e-a+1)/o);else if(typeof r=="object"){let c=u==="channelsLast"?r[1][0]:r[2][0],d=u==="channelsLast"?r[1][1]:r[2][1],f=u==="channelsLast"?r[2][0]:r[3][0],h=u==="channelsLast"?r[2][1]:r[3][1];p={top:c,bottom:d,left:f,right:h,type:c===0&&d===0&&f===0&&h===0?"VALID":"EXPLICIT"},l=jp((t-s+c+d)/n+1,i),m=jp((e-a+f+h)/o+1,i)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:p,outHeight:l,outWidth:m}}function Q5(r,t,e,n,o,s,a,i,u,p,l){let m,c,d,f;if(typeof r=="number"){m={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=Y5([t,e,n,1],i,1,o,r,l);c=g[0],d=g[1],f=g[2]}else if(r==="same"){c=Math.ceil(t/o),d=Math.ceil(e/s),f=Math.ceil(n/a);let h=(c-1)*o+i-t,g=(d-1)*s+u-e,b=(f-1)*a+p-n,T=Math.floor(h/2),x=h-T,I=Math.floor(g/2),k=g-I,w=Math.floor(b/2),R=b-w;m={top:I,bottom:k,left:w,right:R,front:T,back:x,type:"SAME"}}else if(r==="valid")m={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},c=Math.ceil((t-i+1)/o),d=Math.ceil((e-u+1)/s),f=Math.ceil((n-p+1)/a);else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:m,outDepth:c,outHeight:d,outWidth:f}}function jp(r,t){if(!t)return Math.trunc(r);switch(t){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${t}`)}}function es(r){let[t,e,n]=Mb(r);return t===1&&e===1&&n===1}function Er(r,t){return es(r)||es(t)}function k2(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function Rt(r,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")D(Mi(t),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(n=>{n.forEach(o=>{D(Mi(o),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${o}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${t}`)}}function J5(r,t){let n={x:S(r,"x","reshape","string_or_numeric")},o={shape:t};return N.runKernel(ys,n,o)}var L=A({reshape_:J5});function eX(r,t,e,n,o){let s=S(r,"x","avgPool","float32"),a=1;D(Er(e,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`);let i=s,u=!1;s.rank===3&&(u=!0,i=L(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Rt("avgPool",n,o);let p={x:i},l={filterSize:t,strides:e,pad:n,dimRoundingMode:o},m=N.runKernel(lo,p,l);return m=te(m,s.dtype),u?L(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var rc=A({avgPool_:eX});function tX(r,t,e,n,o,s="NDHWC"){let a=S(r,"x","avgPool3d","float32"),i=a,u=!1;a.rank===4&&(u=!0,i=L(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),D(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Rt("avgPool3d",n,o);let p={x:i},l={filterSize:t,strides:e,pad:n,dimRoundingMode:o,dataFormat:s},m=N.runKernel(Eu,p,l);return m=te(m,i.dtype),u?L(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Eb=A({avgPool3d_:tX});function rX(r,t=0){D(r.length>=1,()=>"Pass at least one tensor to concat");let e=nu(r,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),e.length===1)return dn(e[0]);let n=e,o={axis:t};return N.runKernel(cs,n,o)}var lt=A({concat_:rX});function nX(r){let e={x:S(r,"x","sigmoid","float32")};return N.runKernel(qo,e)}var Pn=A({sigmoid_:nX});function oX(r,t,e){let n=S(r,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let o={x:n},s={begin:t,size:e};return N.runKernel(xs,o,s)}var Be=A({slice_:oX});function sX(r){let e={x:S(r,"x","tanh","float32")};return N.runKernel(Jo,e)}var sp=A({tanh_:sX});function aX(r,t,e,n,o,s){let a=S(r,"forgetBias","basicLSTMCell"),i=S(t,"lstmKernel","basicLSTMCell"),u=S(e,"lstmBias","basicLSTMCell"),p=S(n,"data","basicLSTMCell"),l=S(o,"c","basicLSTMCell"),m=S(s,"h","basicLSTMCell"),c=lt([p,m],1),d=Ge(c,i),f=Y(d,u),h=f.shape[0],g=f.shape[1]/4,b=[h,g],T=Be(f,[0,0],b),x=Be(f,[0,g],b),I=Be(f,[0,g*2],b),k=Be(f,[0,g*3],b),w=Y(M(Pn(T),sp(x)),M(l,Pn(Y(a,I)))),R=M(sp(w),Pn(k));return[w,R]}var S2=A({basicLSTMCell_:aX});function iX(r,t,e){let n=S(r,"x","batchToSpaceND"),o=t.reduce((i,u)=>i*u);D(n.rank>=1+t.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${t.length}`),D(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),D(n.shape[0]%o===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${o}`);let s={x:n},a={blockShape:t,crops:e};return N.runKernel(ms,s,a)}var nc=A({batchToSpaceND_:iX});function v2(r){let t;return r.rank===0||r.rank===1?t=L(r,[1,1,1,r.size]):r.rank===2?t=L(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?t=L(r,[1,r.shape[0],r.shape[1],r.shape[2]]):t=r,t}function uX(r,t,e,n,o,s){s==null&&(s=.001);let a=S(r,"x","batchNorm"),i=S(t,"mean","batchNorm"),u=S(e,"variance","batchNorm"),p;o!=null&&(p=S(o,"scale","batchNorm"));let l;n!=null&&(l=S(n,"offset","batchNorm")),D(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(p==null||i.rank===p.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let c={x:v2(a),scale:p,offset:l,mean:i,variance:u},d={varianceEpsilon:s},f=N.runKernel(vo,c,d);return L(f,a.shape)}var ap=A({batchNorm_:uX});function pX(r,t,e,n,o,s){let a=S(r,"x","batchNorm"),i=S(t,"mean","batchNorm"),u=S(e,"variance","batchNorm"),p;o!=null&&(p=S(o,"scale","batchNorm"));let l;return n!=null&&(l=S(n,"offset","batchNorm")),D(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),D(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),D(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),p!=null&&D(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${p.rank}.`),l!=null&&D(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),ap(a,i,u,l,p,s)}var Lb=A({batchNorm2d_:pX});function lX(r,t,e,n,o,s){let a=S(r,"x","batchNorm"),i=S(t,"mean","batchNorm"),u=S(e,"variance","batchNorm"),p;o!=null&&(p=S(o,"scale","batchNorm"));let l;return n!=null&&(l=S(n,"offset","batchNorm")),D(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),D(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),D(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),p!=null&&D(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${p.rank}.`),l!=null&&D(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),ap(a,i,u,l,p,s)}var _b=A({batchNorm3d_:lX});function mX(r,t,e,n,o,s){let a=S(r,"x","batchNorm"),i=S(t,"mean","batchNorm"),u=S(e,"variance","batchNorm"),p;o!=null&&(p=S(o,"scale","batchNorm"));let l;return n!=null&&(l=S(n,"offset","batchNorm")),D(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),D(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),D(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),p!=null&&D(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${p.rank}.`),l!=null&&D(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),ap(a,i,u,l,p,s)}var $b=A({batchNorm4d_:mX});function cX(r,t,e){let n=S(r,"x","bincount"),o=S(t,"weights","bincount");D(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),D(e>=0,()=>`size must be non-negative, but got ${e}.`),D(o.size===n.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${o.shape}.`);let s={x:n,weights:o},a={size:e};return N.runKernel(xm,s,a)}var Bb=A({bincount_:cX});function dX(r,t){let e=S(r,"s0","broadcastArgs","int32"),n=S(t,"s1","broadcastArgs","int32");if(e.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);let o={s0:e,s1:n};return N.runKernel(Im,o)}var A2=A({broadcastArgs_:dX});function fX(r,t){let e=S(r,"broadcastTo","x"),n=e.shape;if(t.some(p=>!(p>0)||p%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){let p=e.shape.slice();for(;p.length<t.length;)p.unshift(1);e=L(e,p)}let o=e.shape,s=Array.from(t);for(let p=t.length-1;p>=0;p--)if(o[p]===t[p])s[p]=1;else if(e.shape[p]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${t}].`);if(s.map((p,l)=>p>1?l:-1).filter(p=>p>=0).length===0)return dn(e);let i={x:e},u={reps:s};return N.runKernel(An,i,u)}var ip=A({broadcastTo_:fX});function hX(r){let e={x:S(r,"x","ceil","float32")};return N.runKernel(co,e)}var w2=A({ceil_:hX});function Ps(r,t,e){let n={shape:r,value:t,dtype:e};return N.runKernel(ii,{},n)}function gX(r,t,e){let n=S(r,"x","clipByValue");if(D(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return Ps(n.shape,t,n.dtype);let o={x:n},s={clipValueMin:t,clipValueMax:e};return N.runKernel(Gn,o,s)}var Ur=A({clipByValue_:gX});function bX(r){return lt(r,0)}var Ob=A({concat1d_:bX});function yX(r,t){return lt(r,t)}var zb=A({concat2d_:yX});function TX(r,t){return lt(r,t)}var Gb=A({concat3d_:TX});function xX(r,t){return lt(r,t)}var Ub=A({concat4d_:xX});function IX(r,t,e,n,o="NHWC",s=[1,1],a){let i=S(r,"x","conv2d","float32"),u=S(t,"filter","conv2d","float32"),p=i,l=!1;i.rank===3&&(l=!0,p=L(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(p.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${p.rank}.`),D(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Rt("conv2d",n,a);let m=o==="NHWC"?p.shape[3]:p.shape[1];D(m===u.shape[2],()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${u.shape[2]}.`),D(Er(e,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`);let c={x:p,filter:u},d={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},f=N.runKernel(fo,c,d);return l?L(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var rs=A({conv2d_:IX});function CX(r,t,e,n,o="NWC",s=1,a){let i=S(r,"x","conv1d"),u=S(t,"filter","conv1d"),p=i,l=!1;i.rank===2&&(l=!0,p=L(i,[1,i.shape[0],i.shape[1]])),D(p.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${p.rank}.`),D(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Rt("conv1d",n,a),D(p.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${p.shape[2]}) must match input depth for filter ${u.shape[1]}.`),D(Er(e,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${s}'`),D(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);let m=L(u,[1,u.shape[0],u.shape[1],u.shape[2]]),c=L(p,[p.shape[0],1,p.shape[1],p.shape[2]]),g=rs(c,m,[1,e],n,"NHWC",[1,s],a);return l?L(g,[g.shape[2],g.shape[3]]):L(g,[g.shape[0],g.shape[2],g.shape[3]])}var Wb=A({conv1d_:CX});function kX(r,t,e,n,o,s="NHWC",a){D(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let i=r,u=t,p=!1;t.rank===3&&(p=!0,u=L(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,r[0],r[1],r[2]]),D(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),D(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),D(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);let l=s==="NHWC"?i[3]:i[1],m=s==="NHWC"?u.shape[3]:u.shape[1];D(l===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[2]}.`),D(m===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${e.shape[3]}.`),Rt("conv2dDerInput",o,a);let c={dy:u,filter:e},d={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,inputShape:i},f=N.runKernel(ho,c,d);return p?L(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var oc=A({conv2DBackpropInput_:kX});function SX(r,t,e,n,o,s){let a=S(r,"x","conv2dTranspose"),i=S(t,"filter","conv2dTranspose");return oc(e,a,i,n,o,"NHWC",s)}var Kb=A({conv2dTranspose_:SX});function vX(r,t,e,n,o="NDHWC",s=[1,1,1]){let a=S(r,"x","conv3d"),i=S(t,"filter","conv3d"),u=a,p=!1;a.rank===4&&(p=!0,u=L(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),D(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),D(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),D(Er(e,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),D(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);let l={x:u,filter:i},m={strides:e,pad:n,dataFormat:o,dilations:s},c=N.runKernel($u,l,m);return p?L(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Vb=A({conv3d_:vX});function AX(r,t,e,n,o){D(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let s=r,a=t,i=!1;t.rank===4&&(i=!0,a=L(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let u=s[4],p=a.shape[4];D(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),D(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),D(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),D(u===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[3]}.`),D(p===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${p}) must match output depth for filter ${e.shape[4]}.`);let l={dy:a,filter:e},m={pad:o,strides:n,inputShape:s},c=N.runKernel(Sm,l,m);return i?L(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Hb=A({conv3DBackpropInput_:AX});function wX(r,t,e,n,o){let s=S(r,"x","conv3dTranspose"),a=S(t,"filter","conv3dTranspose");return Hb(e,s,a,n,o)}var qb=A({conv3dTranspose_:wX});function NX(r){let e={x:S(r,"x","cos","float32")};return N.runKernel(go,e)}var sc=A({cos_:NX});function DX(r){let e={x:S(r,"x","cosh","float32")};return N.runKernel(bo,e)}var jb=A({cosh_:DX});function RX(r,t=0,e=!1,n=!1){let s={x:S(r,"x","cumprod")},a={axis:t,exclusive:e,reverse:n};return N.runKernel(ua,s,a)}var bh=A({cumprod_:RX});function FX(r,t=0,e=!1,n=!1){let s={x:S(r,"x","cumsum")},a={axis:t,exclusive:e,reverse:n};return N.runKernel(yo,s,a)}var Xb=A({cumsum_:FX});function PX(r,t,e,n=!1){let o=S(r,"x","denseBincount"),s=S(t,"weights","denseBincount");D(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),D(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),D(e>=0,()=>`size must be non-negative, but got ${e}.`),D(s.size===o.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${s.shape}.`);let a={x:o,weights:s},i={size:e,binaryOutput:n};return N.runKernel(vm,a,i)}var N2=A({denseBincount_:PX});function MX(r,t,e="NHWC"){let n=S(r,"x","depthToSpace","float32"),o=e==="NHWC"?n.shape[1]:n.shape[2],s=e==="NHWC"?n.shape[2]:n.shape[3],a=e==="NHWC"?n.shape[3]:n.shape[1];D(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),D(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${t}  for depthToSpace with input shape
    ${n.shape}`),D(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${n.shape}`),D(a%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${a} for depthToSpace with input shape ${n.shape}`);let i={x:n},u={blockSize:t,dataFormat:e};return N.runKernel(la,i,u)}var D2=A({depthToSpace_:MX});function EX(r,t,e,n,o="NHWC",s=[1,1],a){let i=S(r,"x","depthwiseConv2d","float32"),u=S(t,"filter","depthwiseConv2d","float32"),p=i,l=!1;i.rank===3&&(l=!0,p=L(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(p.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),D(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);let m=o==="NHWC"?p.shape[3]:p.shape[1];D(m===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${m}) must match the inChannels dimension in filter ${u.shape[2]}.`),Rt("depthwiseConv2d",n,a);let c={x:p,filter:u},d={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},f=N.runKernel(To,c,d);return l?L(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var up=A({depthwiseConv2d_:EX});function LX(r){let e={x:S(r,"x","diag")};return N.runKernel(Nm,e)}var R2=A({diag_:LX});function _X(r,t,e,n,o=[1,1],s="NHWC"){let a=S(r,"x","dilation2d"),i=S(t,"filter","dilation2d");D(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),D(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),D(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let u=a,p=!1;a.rank===3&&(u=L(a,[1,a.shape[0],a.shape[1],a.shape[2]]),p=!0);let l={x:u,filter:i},m={strides:e,pad:n,dilations:o},c=N.runKernel(Bu,l,m);return p?L(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var F2=A({dilation2d_:_X});function $X(r,t){let e=S(r,"a","equal","string_or_numeric"),n=S(t,"b","equal","string_or_numeric");[e,n]=qe(e,n),$e(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(ma,o)}var Qr=A({equal_:$X});function BX(r,t,e){let n=S(t,"a","where"),o=S(e,"b","where"),s=S(r,"condition","where","bool"),a=$e($e(s.shape,n.shape),o.shape),i=ip(s,a),u=ip(n,a),p=ip(o,a),l={condition:i,t:u,e:p};return N.runKernel(Ts,l)}var zt=A({where_:BX});function OX(r){let e={x:S(r,"x","zerosLike")};return N.runKernel(Ss,e)}var Ae=A({zerosLike_:OX});function zX(r,t){let e=S(r,"a","div"),n=S(t,"b","div");[e,n]=qe(e,n);let o=me(e,n),s=Ae(o),a=Qr(n,s);return zt(a,s,o)}var P2=A({divNoNan_:zX});function GX(r,t){let e=S(r,"t1","dot"),n=S(t,"t2","dot");D((e.rank===1||e.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${n.rank}.`);let o=e.rank===1?e.size:e.shape[1],s=n.rank===1?n.size:n.shape[0];if(D(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),e.rank===1&&n.rank===1){let a=L(e,[1,-1]),i=L(n,[-1,1]),u=Ge(a,i);return L(u,[])}else if(e.rank===1&&n.rank===2){let a=L(e,[1,-1]),i=L(n,[n.shape[0],n.shape[1]]),u=Ge(a,i);return L(u,[u.size])}else if(e.rank===2&&n.rank===1){let a=L(n,[-1,1]),i=Ge(e,a);return L(i,[i.size])}else{let a=L(n,[n.shape[0],n.shape[1]]);return Ge(e,a)}}var M2=A({dot_:GX});function UX(r,...t){let e=t.map((o,s)=>S(o,`tensors${s}`,"einsum")),n={equation:r};return N.runKernel(Ou,e,n)}var E2=A({einsum_:UX});function WX(r){let e={x:S(r,"x","elu","float32")};return N.runKernel(Io,e)}var pp=A({elu_:WX});function KX(r){let t=S(r,"x","erf");D(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=te(t,"float32"));let e={x:t};return N.runKernel(Ui,e)}var L2=A({erf_:KX});function Hv(r,t){for(let e=0;e<r.length;++e)if(r[r.length-e-1]!==t-1-e)return!1;return!0}function _2(r,t,e){let n=r.length+t.length,o=[],s=0,a=0;for(let i=0;i<n;i++)e.indexOf(i)===-1?o.push(r[s++]):o.push(t[a++]);return o}function qv(r,t){let e=[],n=r.length;for(let s=0;s<n;s++)t.indexOf(s)===-1&&e.push(r[s]);let o=t.map(s=>r[s]);return[e,o]}function Ms(r,t){let e=t.map(n=>1);return _2(r,e,t)}function VX(r,t,e){D(Hv(t,e),()=>`${r} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function jv(r,t){if(Hv(r,t))return null;let e=[];for(let n=0;n<t;++n)r.indexOf(n)===-1&&e.push(n);return r.forEach(n=>e.push(n)),e}function yh(r){return r.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function HX(r,t){let e=[];for(let n=t-r;n<t;++n)e.push(n);return e}function qX(r,t=null,e=!1){let o={x:S(r,"x","max")},s={reductionIndices:t,keepDims:e};return N.runKernel(Do,o,s)}var fn=A({max_:qX});function jX(r,t=null,e=!1){let o={x:S(r,"x","min")},s={axis:t,keepDims:e};return N.runKernel(Mo,o,s)}var Th=A({min_:jX});function XX(r,t){let e=S(r,"base","pow"),n=S(t,"exp","pow");[e,n]=qe(e,n);let o={a:e,b:n};return N.runKernel(Bo,o)}var Vn=A({pow_:XX});function de(r,t){if((Cr(r)&&t!=="string"||Array.isArray(r))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Cr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return cn(r,[],[],t)}function YX(r){let e={x:S(r,"x","sqrt","float32")};return N.runKernel(jo,e)}var Et=A({sqrt_:YX});function ZX(r){let t=S(r,"x","square"),e={};return N.runKernel("Square",{x:t},e)}var Ke=A({square_:ZX});function QX(r,t=null,e=!1){let n=S(r,"x","sum");n.dtype==="bool"&&(n=te(n,"int32"));let o={x:n},s={axis:t,keepDims:e};return N.runKernel(Xo,o,s)}var fe=A({sum_:QX});function JX(r,t="euclidean",e=null,n=!1){r=S(r,"x","norm");let o=$2(r,t,e),s=o.shape;if(n){let a=fr(e,r.shape);s=Ms(o.shape,a)}return L(o,s)}function $2(r,t,e=null){if(r.rank===0)return Ot(r);if(r.rank!==1&&e===null)return $2(L(r,[-1]),t,e);if(r.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return fe(Ot(r),e);if(t===1/0)return fn(Ot(r),e);if(t===-1/0)return Th(Ot(r),e);if(t==="euclidean"||t===2)return Et(fe(Vn(Ot(r),de(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return fn(fe(Ot(r),e[0]),e[1]-1);if(t===1/0)return fn(fe(Ot(r),e[1]),e[0]);if(t===-1/0)return Th(fe(Ot(r),e[1]),e[0]);if(t==="fro"||t==="euclidean")return Et(fe(Ke(r),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}var Yp=A({norm_:JX});function e8(r,t=null,e=!1){return Yp(r,"euclidean",t,e)}var B2=A({euclideanNorm_:e8});function t8(r){let e={x:S(r,"x","exp")};return N.runKernel(Co,e)}var hr=A({exp_:t8});function r8(r,t=0){let e=S(r,"x","expandDims","string_or_numeric");D(t<=e.rank,()=>"Axis must be <= rank of the tensor");let n={input:e},o={dim:t};return N.runKernel(ds,n,o)}var Lr=A({expandDims_:r8});function n8(r){let e={x:S(r,"x","expm1")};return N.runKernel(ca,e)}var O2=A({expm1_:n8});function o8(r,t){let e=S(r,"x","tile","string_or_numeric");D(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);let n={x:e},o={reps:t};return N.runKernel(An,n,o)}var Jr=A({tile_:o8});function s8(r,t,e,n="float32"){t==null&&(t=r);let o=Te([r,t],n),s=r<=t?r:t;for(let i=0;i<s;++i)o.set(1,i,i);let a=L(o.toTensor(),[r,t]);if(e==null)return a;if(e.length===1)return Jr(Lr(a,0),[e[0],1,1]);if(e.length===2)return Jr(Lr(Lr(a,0),0),[e[0],e[1],1,1]);if(e.length===3)return Jr(Lr(Lr(Lr(a,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}var Zp=A({eye_:s8});function a8(r){let e={x:S(r,"x","floor","float32")};return N.runKernel(ko,e)}var lp=A({floor_:a8});function i8(r,t,e=0,n=0){let o=S(r,"x","gather"),s=S(t,"indices","gather","int32"),a={x:o,indices:s},i={axis:e,batchDims:n};return N.runKernel(fs,a,i)}var mp=A({gather_:i8});function u8(r,t){let e=S(r,"a","greater","string_or_numeric"),n=S(t,"b","greater","string_or_numeric");[e,n]=qe(e,n),$e(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(ha,o)}var ur=A({greater_:u8});function p8(r,t){let e=S(r,"a","greaterEqual","string_or_numeric"),n=S(t,"b","greaterEqual","string_or_numeric");[e,n]=qe(e,n),$e(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(Ao,o)}var Es=A({greaterEqual_:p8});function l8(r){let e={x:S(r,"x","isFinite")};return N.runKernel(Wi,e)}var z2=A({isFinite_:l8});function m8(r){let e={x:S(r,"x","isInf")};return N.runKernel(Ki,e)}var G2=A({isInf_:m8});function c8(r){let e={x:S(r,"x","isNaN")};return N.runKernel(ga,e)}var U2=A({isNaN_:c8});function d8(r,t=.2){let n={x:S(r,"x","leakyRelu")},o={alpha:t};return N.runKernel(wo,n,o)}var ac=A({leakyRelu_:d8});function f8(r,t){let e=S(r,"a","less","string_or_numeric"),n=S(t,"b","less","string_or_numeric");[e,n]=qe(e,n),$e(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(ba,o)}var Yb=A({less_:f8});function h8(r,t){let e=S(r,"a","lessEqual","string_or_numeric"),n=S(t,"b","lessEqual","string_or_numeric");[e,n]=qe(e,n),$e(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(ya,o)}var Ls=A({lessEqual_:h8});function W2(r,t,e){if(e<=0)throw new Error("The number of values should be positive.");let n={start:r,stop:t,num:e};return N.runKernel(Pm,{},n)}function g8(r,t=5,e=1,n=1,o=.5){let s=S(r,"x","localResponseNormalization");D(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),D(Mi(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let a=s,i=!1;s.rank===3&&(i=!0,a=L(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let u={x:a},p={depthRadius:t,bias:e,alpha:n,beta:o},l=N.runKernel(Gu,u,p);return i?L(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var K2=A({localResponseNormalization_:g8});function b8(r){let e={x:S(r,"x","log","float32")};return N.runKernel(No,e)}var Wr=A({log_:b8});function y8(r){let e={x:S(r,"x","log1p")};return N.runKernel(Vi,e)}var ic=A({log1p_:y8});function T8(r){return D(oi(r),()=>"The f passed in grad(f) must be a function"),(t,e)=>{let n=S(t,"x","tf.grad","string_or_numeric"),o=e!=null?S(e,"dy","tf.grad"):null;return N.tidy(()=>{let{value:s,grads:a}=N.gradients(()=>r(n),[n],o);return o!=null&&$t(s.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Qb(a),a[0]})}}function x8(r){return D(oi(r),()=>"The f passed in grads(f) must be a function"),(t,e)=>{D(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=nu(t,"args","tf.grads","string_or_numeric"),o=e!=null?S(e,"dy","tf.grads"):null;return N.tidy(()=>{let{value:s,grads:a}=N.gradients(()=>r(...n),n,o);return o!=null&&$t(s.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Qb(a),a})}}function I8(r){return D(oi(r),()=>"The f passed in valueAndGrad(f) must be a function"),(t,e)=>{D(t instanceof ze,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),D(e==null||e instanceof ze,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:o}=N.gradients(()=>r(t),[t],e);return Qb(n),{grad:n[0],value:o}}}function C8(r){return D(oi(r),()=>"The f passed in valueAndGrads(f) must be a function"),(t,e)=>{D(Array.isArray(t)&&t.every(o=>o instanceof ze),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),D(e==null||e instanceof ze,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=N.gradients(()=>r(...t),t,e);return e!=null&&$t(n.value.shape,e.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Qb(n.grads),n}}function Zb(r,t){D(oi(r),()=>"The f passed in variableGrads(f) must be a function"),D(t==null||Array.isArray(t)&&t.every(p=>p instanceof tu),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let e=t!=null;if(!e){t=[];for(let p in N.registeredVariables)t.push(N.registeredVariables[p])}let n=e?t.filter(p=>!p.trainable):null,o=t.length;t=t.filter(p=>p.trainable),D(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let s=!0,{value:a,grads:i}=N.gradients(r,t,null,s);D(i.some(p=>p!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),D(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);let u={};return t.forEach((p,l)=>{i[l]!=null&&(u[p.name]=i[l])}),n?.forEach(p=>u[p.name]=null),{value:a,grads:u}}function hn(r){return N.customGrad(r)}function Qb(r){if(r.filter(e=>e==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function k8(r){let e={x:S(r,"x","softplus")};return N.runKernel(Zi,e)}var au=A({softplus_:k8});function S8(r){let t=S(r,"x","logSigmoid");return hn(n=>({value:Qe(au(Qe(n))),gradFunc:a=>M(a,Pn(Qe(n)))}))(t)}var V2=A({logSigmoid_:S8});function v8(r,t){let e=S(r,"a","sub"),n=S(t,"b","sub");[e,n]=qe(e,n);let o={a:e,b:n};return N.runKernel(Qo,o)}var le=A({sub_:v8});function A8(r,t=-1){let e=S(r,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return hn((o,s)=>{let i=fn(o,t,!0),u=le(o,i),p=le(te(u,"float32"),Wr(fe(hr(u),t,!0)));return s([p]),{value:p,gradFunc:(m,c)=>{let[d]=c,f=!0,h=hr(d);return le(m,M(fe(m,t,f),h))}}})(e)}var Jb=A({logSoftmax_:A8});function w8(r,t=null,e=!1){let n=S(r,"x","logSumExp"),o=fr(t,n.shape),s=fn(n,o,!0),a=le(n,s),i=hr(a),u=fe(i,o),p=Wr(u),l=Y(L(s,p.shape),p);if(e){let m=Ms(l.shape,o);return L(l,m)}return l}var ey=A({logSumExp_:w8});function N8(r,t){let e=S(r,"a","logicalAnd","bool"),n=S(t,"b","logicalAnd","bool");$e(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(Ta,o)}var en=A({logicalAnd_:N8});function D8(r){let e={x:S(r,"x","logicalNot","bool")};return N.runKernel(xa,e)}var uc=A({logicalNot_:D8});function R8(r,t){let e=S(r,"a","logicalOr","bool"),n=S(t,"b","logicalOr","bool");$e(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(Hi,o)}var ty=A({logicalOr_:R8});function F8(r,t){let e=S(r,"a","logicalXor","bool"),n=S(t,"b","logicalXor","bool");return $e(e.shape,n.shape),en(ty(r,t),uc(en(r,t)))}var H2=A({logicalXor_:F8});var ry=2147483648;function P8(r,t,e="left"){let n=S(r,"sortedSequence","searchSorted"),o=S(t,"values","searchSorted"),s=n.shape[n.shape.length-1],a=o.shape[o.shape.length-1],i=L(n,[-1,s]),u=L(o,[-1,a]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(et(u.shape)>=ry)throw new Error(`values tensor size must less than ${ry}`);if(i.shape[1]>=ry)throw new Error(`trailing dim_size must less than ${ry} for int32 output type, was ${i.shape[1]}`);let p={sortedSequence:i,values:u},l={side:e};return N.runKernel(Um,p,l)}var xh=A({searchSorted_:P8});function q2(r,t){return xh(r,t,"left")}function M8(r,t,e,n,o){let s=S(r,"x","maxPool"),a=1,i=s,u=!1;s.rank===3&&(u=!0,i=L(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),D(Er(e,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),Rt("maxPool",n,o);let p={x:i},l={filterSize:t,strides:e,pad:n,dimRoundingMode:o},m=N.runKernel(Fo,p,l);return u?L(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var pc=A({maxPool_:M8});function E8(r,t=[1,1,1],e,n,o,s="NDHWC"){let a=S(r,"x","maxPool3d"),i=a,u=!1;a.rank===4&&(u=!0,i=L(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),D(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Rt("maxPool3d",n,o);let p={x:i},l={filterSize:t,strides:e,pad:n,dimRoundingMode:o,dataFormat:s},m=N.runKernel(Uu,p,l);return u?L(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var ny=A({maxPool3d_:E8});function L8(r,t,e,n,o=!1){let a={x:S(r,"x","maxPoolWithArgmax")},i={filterSize:t,strides:e,pad:n,includeBatchInIndex:o},u=N.runKernel(_m,a,i);return{result:u[0],indexes:u[1]}}var j2=A({maxPoolWithArgmax_:L8});function _8(r,t){let e=S(r,"a","maximum"),n=S(t,"b","maximum");[e,n]=qe(e,n),e.dtype==="bool"&&(e=te(e,"int32"),n=te(n,"int32")),$e(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(Ro,o)}var ns=A({maximum_:_8});function $8(r,t=null,e=!1){let o={x:S(r,"x","mean")},s={axis:t,keepDims:e};return N.runKernel(Po,o,s)}var Lt=A({mean_:$8});function xt(r,t="float32"){if(t==="complex64"){let n=xt(r,"float32"),o=xt(r,"float32");return Nn(n,o)}let e=bm(et(r),t);return N.makeTensor(e,r,t)}function gr(r,t="float32"){if(t==="complex64"){let n=gr(r,"float32"),o=xt(r,"float32");return Nn(n,o)}let e=Xf(et(r),t);return N.makeTensor(e,r,t)}function X2(r,t,{indexing:e="xy"}={}){if(e!=="xy"&&e!=="ij")throw new TypeError(`${e} is not a valid third argument to meshgrid`);if(r===void 0)return[];let n=S(r,"x","meshgrid",r instanceof ze?r.dtype:"float32");if(t===void 0)return[n];let o=S(t,"y","meshgrid",t instanceof ze?t.dtype:"float32"),s=et(n.shape),a=et(o.shape);return e==="xy"?(n=L(n,[1,-1]),o=L(o,[-1,1]),[Ge(gr([a,1],n.dtype),n),Ge(o,gr([1,s],o.dtype))]):(n=L(n,[-1,1]),o=L(o,[1,-1]),[Ge(n,gr([1,a],n.dtype)),Ge(gr([s,1],o.dtype),o)])}function B8(r,t){let e=S(r,"a","minimum"),n=S(t,"b","minimum");[e,n]=qe(e,n),e.dtype==="bool"&&(e=te(e,"int32"),n=te(n,"int32")),$e(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(Eo,o)}var cp=A({minimum_:B8});function O8(r,t,e){D(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);let n=S(r,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");D(t.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${t.length}.`);let o=e==="reflect"?1:0;for(let i=0;i<n.rank;i++)D(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),D(t[i][0]>=0&&t[i][0]<=n.shape[i]-o&&t[i][1]>=0&&t[i][1]<=n.shape[i]-o,()=>`Padding in dimension ${i} cannot be greater than or equal to ${n.shape[i]-o} or less than 0 for input of shape ${n.shape}`);let s={paddings:t,mode:e},a={x:n};return N.runKernel(Lo,a,s)}var Y2=A({mirrorPad_:O8});function z8(r,t){let e=S(r,"a","mod"),n=S(t,"b","mod");[e,n]=qe(e,n);let o={a:e,b:n};return N.runKernel(qi,o)}var Z2=A({mod_:z8});function G8(r,t=null,e=!1){r=S(r,"x","moments");let n=fr(t,r.shape),o=Lt(r,n,e),s=o.shape;e||(s=Ms(o.shape,n));let a=Ke(le(te(r,"float32"),L(o,s))),i=Lt(a,n,e);return{mean:o,variance:i}}var Qp=A({moments_:G8});function U8(r,t,e,n){let o=S(t,"data","multiRNNCell"),s=nu(e,"c","multiRNNCell"),a=nu(n,"h","multiRNNCell"),i=o,u=[];for(let m=0;m<r.length;m++){let c=r[m](i,s[m],a[m]);u.push(c[0]),u.push(c[1]),i=c[1]}let p=[],l=[];for(let m=0;m<u.length;m+=2)p.push(u[m]),l.push(u[m+1]);return[p,l]}var Q2=A({multiRNNCell_:U8});function W8(r,t,e,n=!1){let o=S(r,"logits","multinomial"),s=o.size,a=o.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);e=e||Math.random();let u={logits:a===1?L(o,[1,-1]):o},p={numSamples:t,seed:e,normalized:n},l=N.runKernel($m,u,p);return a===1?L(l,[l.size]):l}var J2=A({multinomial_:W8});function K8(r,t){let e=S(r,"a","notEqual","string_or_numeric"),n=S(t,"b","notEqual","string_or_numeric");[e,n]=qe(e,n),$e(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(Ia,o)}var iu=A({notEqual_:K8});function V8(r){let e={x:S(r,"x","onesLike")};return N.runKernel(gs,e)}var _r=A({onesLike_:V8});function H8(r,t){let e=S(r,"v1","outerProduct"),n=S(t,"v2","outerProduct");D(e.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${n.rank}.`);let o=L(e,[-1,1]),s=L(n,[1,-1]);return Ge(o,s)}var eR=A({outerProduct_:H8});function q8(r,t,e=0){let n=S(r,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let o={paddings:t,constantValue:e},s={x:n};return N.runKernel($o,s,o)}var Hn=A({pad_:q8});function j8(r,t,e=0){return D(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Hn(r,[t],e)}var tR=A({pad1d_:j8});function X8(r,t,e=0){return D(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Hn(r,t,e)}var rR=A({pad2d_:X8});function Y8(r,t,e=0){return D(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Hn(r,t,e)}var nR=A({pad3d_:Y8});function Z8(r,t,e=0){return D(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Hn(r,t,e)}var oR=A({pad4d_:Z8});function Q8(r,t,e){let n=S(r,"x","spaceToBatchND");D(n.rank>=1+t.length,()=>`input rank ${n.rank} should be > than [blockShape] ${t.length}`),D(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),D(n.shape.reduce((a,i,u)=>u>0&&u<=t.length?a&&(i+e[u-1][0]+e[u-1][1])%t[u-1]===0:a,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);let o={x:n},s={blockShape:t,paddings:e};return N.runKernel(Is,o,s)}var lc=A({spaceToBatchND_:Q8});function J8(r,t,e,n,o,s,a){o==null&&(o=[1,1]),s==null&&(s=1),n===0&&(n="valid");let i=S(r,"x","maxPool"),u=i,p=!1;i.rank===3&&(p=!0,u=L(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(Er(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);let l=Kv(u.shape,t,s,o,n),m=[l.dilationHeight,l.dilationWidth],c;n==="same"?c=tY([l.filterHeight,l.filterWidth],m):c=[[0,0],[0,0]];let d=m[0]===1&&m[1]===1,[f,h]=eY([l.inHeight,l.inWidth],m,c),g=d?n:"valid",b=d?u:lc(u,m,f),x=(e==="avg"?()=>rc(b,t,s,g,a):()=>pc(b,t,s,g,a))(),I=d?x:nc(x,m,h);return p?L(I,[I.shape[1],I.shape[2],I.shape[3]]):I}function eY(r,t,e){let n=e.map(l=>l[0]),o=e.map(l=>l[1]),s=r.concat(n,o),a=t.map((l,m)=>(l-s[m]%l)%l),i=o.map((l,m)=>l+a[m]),u=t.map((l,m)=>[n[m],i[m]]),p=t.map((l,m)=>[0,a[m]]);return[u,p]}function tY(r,t){let n=r.map((a,i)=>a+(a-1)*(t[i]-1)).map(a=>a-1),o=n.map(a=>Math.floor(a/2)),s=n.map((a,i)=>a-o[i]);return n.map((a,i)=>[o[i],s[i]])}var sR=A({pool_:J8});function rY(r,t){let e=S(r,"x","prelu"),n=S(t,"alpha","prelu"),o={x:e,alpha:n};return N.runKernel(Oo,o)}var mc=A({prelu_:rY});function nY(r,t=null,e=!1){let n=S(r,"x","prod");n.dtype==="bool"&&(n=te(n,"int32"));let o={x:n},s={axis:t,keepDims:e};return N.runKernel(zo,o,s)}var aR=A({prod_:nY});function oY(r,t,e,n){let o=r.map((l,m)=>S(l,`tensors${m}`,"raggedGather","int32")),s=S(t,"paramsDenseValues","raggedGather"),a=S(e,"indices","raggedGather","int32"),i={paramsNestedSplits:o,paramsDenseValues:s,indices:a},u={outputRaggedRank:n},p=N.runKernel(Bm,i,u);return{outputNestedSplits:p.slice(0,p.length-1),outputDenseValues:p[p.length-1]}}var iR=A({raggedGather_:oY});function sY(r,t,e,n,o){let s=S(r,"shape","raggedTensorToTensor","int32"),a=S(t,"values","raggedTensorToTensor"),i=S(e,"defaultValue","raggedTensorToTensor",a.dtype),u=n.map((m,c)=>S(m,`tensors${c}`,"raggedTensorToTensor","int32")),p={shape:s,values:a,defaultValue:i,rowPartitionTensors:u},l={rowPartitionTypes:o};return N.runKernel(Om,p,l)}var uR=A({raggedTensorToTensor_:sY});function aY(r,t,e){let n=et(r),o=null;if(e==null||e==="float32")o=new Float32Array(n);else if(e==="int32")o=new Int32Array(n);else if(e==="bool")o=new Uint8Array(n);else throw new Error(`Unknown data type ${e}`);for(let s=0;s<n;s++)o[s]=t();return N.makeTensor(o,r,e)}var pR=A({rand_:aY});var iy=dm(Ih());var el=class{constructor(t,e,n,o,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=s||Math.random();this.random=iy.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let o=this.nextVal;return this.nextVal=NaN,o}let t,e,n=!1;for(;!n;){let o,s,a;do o=2*this.random()-1,s=2*this.random()-1,a=o*o+s*s;while(a>=1||a===0);let i=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*o*i,e=this.mean+this.stdDev*s*i,(!this.truncated||this.isValidTruncated(t))&&(n=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}},sy=class{constructor(t,e,n,o){this.alpha=t,this.beta=1/e,this.dtype=n;let s=o||Math.random();this.randu=iy.alea(s.toString()),this.randn=new el(0,1,n,!1,this.randu()),t<1?this.d=t+2/3:this.d=t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,o,s,a;for(;;){do o=this.randn.nextValue(),a=1+this.c*o;while(a<=0);if(a*=a*a,t=o*o,e=1-.331*t*t,n=.5*t+this.d*(1-a+Math.log(a)),s=this.randu(),s<e||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(t){return this.dtype==="float32"?t:Math.round(t)}},ay=class{constructor(t=0,e=1,n,o){this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32";if(this.min=t,this.range=e-t,this.dtype=n,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=iy.alea(o)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function dY(r,t,e=1,n="float32",o){if(e==null&&(e=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new sy(t,e,n,o),a=Te(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var AR=A({randomGamma_:dY});function fY(r,t=0,e=1,n,o){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new el(t,e,n,!1,o),a=Te(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var tl=A({randomNormal_:fY});function hY(r,t,e){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return tl(r,0,1,t,e)}var wR=A({randomStandardNormal_:hY});function gY(r,t=0,e=1,n="float32",o){let s=Te(r,n),a=new ay(t,e,null,o);for(let i=0;i<s.values.length;i++)s.values[i]=a.nextValue();return s.toTensor()}var gi=A({randomUniform_:gY});function dp(r,t,e=1,n="float32"){if(e===0)throw new Error("Cannot have a step of zero");let o={start:r,stop:t,step:e,dtype:n};return N.runKernel(ui,{},o)}function bY(r){let e={x:S(r,"x","reciprocal")};return N.runKernel(va,e)}var NR=A({reciprocal_:bY});function yY(r){let e={x:S(r,"x","relu")};return N.runKernel(Go,e)}var tn=A({relu_:yY});function TY(r){let e={x:S(r,"x","relu6")};return N.runKernel(Ko,e)}var uy=A({relu6_:TY});function xY(r,t){let n={x:S(r,"x","reverse")},o={dims:t};return N.runKernel(Aa,n,o)}var wr=A({reverse_:xY});function IY(r){let t=S(r,"x","reverse");return D(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),wr(t,0)}var DR=A({reverse1d_:IY});function CY(r,t){let e=S(r,"x","reverse");return D(e.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),wr(e,t)}var RR=A({reverse2d_:CY});function kY(r,t){let e=S(r,"x","reverse");return D(e.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),wr(e,t)}var FR=A({reverse3d_:kY});function SY(r,t){let e=S(r,"x","reverse");return D(e.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),wr(e,t)}var PR=A({reverse4d_:SY});function vY(r){let e={x:S(r,"x","round")};return N.runKernel(wa,e)}var py=A({round_:vY});function AY(r){let e={x:S(r,"x","rsqrt","float32")};return N.runKernel(Vo,e)}var ly=A({rsqrt_:AY});function wY(r){let e={x:S(r,"x","selu")};return N.runKernel(Xi,e)}var my=A({selu_:wY});function NY(r,t,e,n,o,s=[1,1],a="NHWC"){let i=S(r,"x","separableConv2d"),u=S(t,"depthwiseFilter","separableConv2d"),p=S(e,"pointwiseFilter","separableConv2d"),l=i,m=!1;if(i.rank===3&&(m=!0,l=L(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");D(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),D(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),D(p.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),D(p.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${p.shape[0]}.`),D(p.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${p.shape[1]}.`);let c=u.shape[2],d=u.shape[3];D(p.shape[2]===c*d,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${c*d}, but got ${p.shape[2]}.`);let f=up(l,u,n,o,a,s),g=rs(f,p,1,"valid",a);return m?L(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var cy=A({separableConv2d_:NY});async function DY(r,t){let e=S(r,"x","setdiff1d"),n=S(t,"y","setdiff1d");D(e.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${n.dtype}).`),D(e.rank===1,()=>`x should be 1D tensor, but got x (${e.shape}).`),D(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let o=await e.data(),s=await n.data(),a=new Set(s),i=0;for(let l=0;l<o.length;l++)a.has(o[l])||i++;let u=new ht([i],e.dtype),p=new ht([i],"int32");for(let l=0,m=0;l<o.length;l++)a.has(o[l])||(u.values[m]=o[l],p.values[m]=l,m++);return[u.toTensor(),p.toTensor()]}var MR=DY;function RY(r){let e={x:S(r,"x","sign")};return N.runKernel(Yi,e)}var ER=A({sign_:RY});function FY(r){let e={x:S(r,"x","sin","float32")};return N.runKernel(Ho,e)}var dy=A({sin_:FY});function PY(r){let e={x:S(r,"x","sinh")};return N.runKernel(Da,e)}var fy=A({sinh_:PY});function MY(r,t,e){let n=S(r,"x","slice1d");return D(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),Be(n,[t],[e])}var cc=A({slice1d_:MY});function EY(r,t,e){let n=S(r,"x","slice2d");return D(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),Be(n,t,e)}var Ch=A({slice2d_:EY});function LY(r,t,e){let n=S(r,"x","slice3d");return D(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),Be(n,t,e)}var dc=A({slice3d_:LY});function _Y(r,t,e){let n=S(r,"x","slice4d");return D(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),Be(n,t,e)}var rl=A({slice4d_:_Y});function $Y(r,t=-1){let e=S(r,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);let n={logits:e},o={dim:t};return N.runKernel(Yo,n,o)}var fc=A({softmax_:$Y});function BY(r){D(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let t={input:r};return N.runKernel(Rm,t)}var hc=A({fft_:BY});function OY(r){D(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let t={input:r};return N.runKernel(Fm,t)}var nl=A({ifft_:OY});function zY(r){let t=r.shape[r.shape.length-1],e=r.size/t,n;if(t<=2){let o=L(r,[e,t]);n=nl(o)}else{let o=[e,2*(t-1)],s=L(su(r),[e,t]),a=L(np(r),[e,t]),i=wr(Be(s,[0,1],[e,t-2]),1),u=M(wr(Be(a,[0,1],[e,t-2]),1),de(-1)),p=lt([s,i],1),l=lt([a,u],1),m=L(Nn(p,l),[o[0],o[1]]);n=nl(m)}if(n=su(n),r.rank===3&&r.shape[0]!==0){let o=n,s=r.shape[0];n=L(n,[s,n.shape[0]/s,n.shape[1]]),o.dispose()}return n}var hy=A({irfft_:zY});function GY(r,t,e=0){let o={x:S(r,"x","split")},s={numOrSizeSplits:t,axis:e};return N.runKernel(Cs,o,s)}var Nr=A({split_:GY});function UY(r,t){D(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let e=r.shape[r.shape.length-1],n=r.size/e,o;if(t!=null&&t<e){let f=r.shape.map(g=>0),h=r.shape.map(g=>g);h[r.shape.length-1]=t,o=Be(r,f,h),e=t}else if(t!=null&&t>e){let f=r.shape.map(h=>h);f[r.shape.length-1]=t-e,o=lt([r,xt(f)],r.shape.length-1),e=t}else o=r;let s=Ae(o),a=L(Nn(o,s),[n,e]),i=hc(a),u=Math.floor(e/2)+1,p=su(i),l=np(i),m=Nr(p,[u,e-u],p.shape.length-1),c=Nr(l,[u,e-u],l.shape.length-1),d=o.shape.slice();return d[o.shape.length-1]=u,L(Nn(m[0],c[0]),d)}var gc=A({rfft_:UY});function WY(r,t){let e=S(r,"a","squaredDifference"),n=S(t,"b","squaredDifference");[e,n]=qe(e,n),$e(e.shape,n.shape);let o={a:e,b:n},s={};return N.runKernel(Zo,o,s)}var gy=A({squaredDifference_:WY});function KY(r,t){let e=S(r,"x","squeeze","string_or_numeric");return L(e,JS(e.shape,t).newShape)}var _s=A({squeeze_:KY});function VY(r,t=0){let e=nu(r,"tensors","stack","string_or_numeric");D(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&D(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");let n=e,o={axis:t};return N.runKernel(bs,n,o)}var br=A({stack_:VY});function HY(r,t=0){let n={x:S(r,"x","step")},o={alpha:t};return N.runKernel(vs,n,o)}var bi=A({step_:HY});function qY(r,t,e,n,o=0,s=0,a=0,i=0,u=0){let l={x:S(r,"x","stridedSlice","string_or_numeric")},m={begin:t,end:e,strides:n,beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};return N.runKernel(Ra,l,m)}var LR=A({stridedSlice_:qY});function jY(r){let e={x:S(r,"x","tan","float32")};return N.runKernel(Fa,e)}var _R=A({tan_:jY});function Kt(r,t){io(r);let e=Gr(r,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return cn(r,null,e,t)}function Ba(r,t,e){if(io(r),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=Gr(r,e);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return cn(r,t,n,e)}function $R(r,t,e){if(io(r),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=Gr(r,e);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return cn(r,t,n,e)}function BR(r,t,e){if(io(r),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=Gr(r,e);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return cn(r,t,n,e)}function OR(r,t,e){if(io(r),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=Gr(r,e);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||n,cn(r,t,n,e)}function XY(r,t=1,e=!0){let n=S(r,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let o=n.shape[n.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);let s={x:n},a={k:t,sorted:e},[i,u]=N.runKernel(Pa,s,a);return{values:i,indices:u}}var zR=A({topk_:XY});function YY(r,t=0,e=1,n,o){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new el(t,e,n,!0,o),a=Te(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var bc=A({truncatedNormal_:YY});function ZY(r,t=0){let e=S(r,"x","unique","string_or_numeric");D(e.rank>0,()=>"The input tensor must be at least 1D");let n={x:e},o={axis:t},[s,a]=N.runKernel(Wm,n,o);return{values:s,indices:a}}var GR=A({unique_:ZY});function QY(r,t,e){let n=S(r,"x","unsortedSegmentSum"),o=S(t,"segmentIds","unsortedSegmentSum","int32");D(Mi(e),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:o},a={numSegments:e};return N.runKernel(Yu,s,a)}var by=A({unsortedSegmentSum_:QY});function JY(r,t=0){let e=S(r,"x","unstack","string_or_numeric");D(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);let n={value:e},o={axis:t};return N.runKernel(ks,n,o)}var Kr=A({unstack_:JY});function UR(r,t){return xh(r,t,"right")}function yy(r,t=!0,e,n){return N.makeVariable(r,t,e,n)}function Ty(r,t){let e=[];for(let s=0;s<t.length;s++)t[s]&&e.push(s);let n=Te(r,"int32"),o=Te([e.length,r.length],"int32");for(let s=0;s<e.length;s++){let a=n.indexToLoc(e[s]),i=s*r.length;o.values.set(a,i)}return o.toTensor()}async function eZ(r){let t=S(r,"condition","whereAsync","bool"),e=await t.data(),n=Ty(t.shape,e);return r!==t&&t.dispose(),n}var xy=eZ;async function tZ(r,t,e){let n=S(r,"tensor","boolMask"),o=S(t,"mask","boolMask","bool"),s=e??0,a=o.rank,i=n.shape;D(a>0,()=>"mask cannot be scalar"),$t(i.slice(s,s+a),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let h=s;h<s+a;h++)u*=i[h];let p=i.slice(0,s).concat([u],i.slice(s+a)),l=L(n,p),m=L(o,[-1]),c=await xy(m),d=_s(c,[1]),f=mp(l,d,s);return r!==n&&n.dispose(),t!==o&&o.dispose(),d.dispose(),l.dispose(),m.dispose(),c.dispose(),f}var rZ=tZ;function nZ(r,t,e,n,o=!0){let s=S(r,"v","movingAverage"),a=S(t,"x","movingAverage"),i=S(e,"decay","movingAverage");bv(s,a),D(On(s.shape,a.shape),()=>"Shape mismatch in v and x");let u=de(1),p=le(u,i),l=M(le(a,s),p);if(o){D(n!=null,()=>"When using zeroDebias: true, step is required.");let m=S(n,"step","movingAverage");l=me(l,le(u,Vn(i,m)))}return Y(s,l)}var oZ=A({movingAverage_:nZ});function sZ(r,t,e){let n=S(r,"indices","scatterND","int32"),o=S(t,"updates","scatterND");Db(o,n,e);let s={indices:n,updates:o},a={shape:e};return N.runKernel(Na,s,a)}var aZ=A({scatterND_:sZ});function WR(r,t,e,n){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let o=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(e.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${e.length}, should be: ${s}.`);let a=t.size;if(!(t.rank===0||t.rank===1&&a===o))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${o}]`);if(t.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function uZ(r,t,e,n=0){let o=S(r,"sparseIndices","sparseToDense","int32"),s=S(t,"sparseValues","sparseToDense","string_or_numeric"),a=S(n,"defaultValue","sparseToDense",s.dtype);WR(o,s,e,a);let i={sparseIndices:o,sparseValues:s,defaultValue:a},u={outputShape:e};return N.runKernel(qu,i,u)}var pZ=A({sparseToDense_:uZ});function lZ(r,t){let e=S(t,"indices","gatherND","int32"),o={params:S(r,"x","gatherND","string_or_numeric"),indices:e};return N.runKernel(fa,o)}var mZ=A({gatherND_:lZ});function KR(r,t){if(t==null)return r.shape.slice();if(On(r.shape,t))return t;if(r.shape.length===t.length){let e=[];for(let n=0;n<r.shape.length;n++)t[n]==null&&r.shape[n]!=null?e.push(r.shape[n]):e.push(t[n]);return e}return t}function cZ(r,t,e,n){let o=S(r,"x","dropout");if(D(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),D(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return r instanceof ze?o.clone():o;let s=KR(o,e),a=1-t,i=me(lp(Y(gi(s,0,1,"float32",n),a)),a);return M(o,i)}var rA=A({dropout_:cZ});function nA(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function kh(r,t,e){let n=1-r%2,o=new Float32Array(r);for(let s=0;s<r;++s){let a=2*Math.PI*s/(r+n-1);o[s]=t-e*Math.cos(a)}return Kt(o,"float32")}async function dZ(r,t,e=1){let n=S(r,"predictions","inTopK"),o=S(t,"targets","inTopK");D(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),D(n.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${o.rank}`),$t(n.shape.slice(0,n.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];D(e>0&&e<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${e}`);let a=await n.data(),i=await o.data(),[u,p]=[a.length/s,s],l=ev("bool",u);for(let m=0;m<u;m++){let c=m*p,d=a.subarray(c,c+p),f=[];for(let h=0;h<d.length;h++)f.push({value:d[h],index:h});f.sort((h,g)=>g.value-h.value),l[m]=0;for(let h=0;h<e;h++)if(f[h].index===i[m]){l[m]=1;break}}return r!==n&&n.dispose(),t!==o&&o.dispose(),vr(l,o.shape,"bool")}var fZ=dZ;var fp={};We(fp,{conv2d:()=>VR,depthwiseConv2d:()=>HR,matMul:()=>qR});function hZ(r,t,e,n,o,s="NHWC",a){let i=r;r.rank===3&&(i=L(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=t;u.rank===3&&(u=L(t,[1,t.shape[0],t.shape[1],t.shape[2]])),D(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),D(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),D(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);let p=s==="NHWC"?i.shape[3]:i.shape[1],l=s==="NHWC"?u.shape[3]:u.shape[1];D(p===e[2],()=>`Error in conv2dDerFilter: depth of input ${p}) must match input depth in filter (${e[2]}.`),D(l===e[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${e[3]}).`),Rt("conv2dDerFilter",o,a);let m={x:i,dy:u},c={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,filterShape:e};return N.runKernel(Cm,m,c)}var yc=A({conv2DBackpropFilter_:hZ});function ol(r,t,e){if(e==null||e==="linear")return r;if(e==="relu")return M(r,bi(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function sl(r,t){let e=t,n=St(r.shape,t.shape);return n.length>0&&(e=fe(e,n)),L(e,r.shape)}function al(r,t,e,n){if(t==="linear")return r;if(t==="relu")return tn(r);if(t==="elu")return pp(r);if(t==="relu6")return uy(r);if(t==="prelu")return mc(r,e);if(t==="leakyrelu")return ac(r,n);if(t==="sigmoid")return Pn(r);throw new Error(`Unknown fused activation ${t}.`)}var il=(r,t)=>!(r>0)||t==="linear";function gZ({x:r,filter:t,strides:e,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:p,leakyreluAlpha:l}){if(u=u||"linear",il(N.state.gradientDepth,u)===!1){D(o==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${o} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let w=rs(r,t,e,n,o,s,a);return i!=null&&(w=Y(w,i)),al(w,u,p,l)}let m=S(r,"x","conv2d","float32"),c=S(t,"filter","conv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=L(m,[1,m.shape[0],m.shape[1],m.shape[2]])),D(d.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`),D(c.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`),Rt("fused conv2d",n,a);let h=o==="NHWC"?d.shape[3]:d.shape[1];D(c.shape[2]===h,()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${c.shape[2]}.`),D(Er(e,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`);let g=Xp(d.shape,c.shape,e,s,n,a),b;i!=null&&(b=S(i,"bias","fused conv2d"),[b]=qe(b,m),o==="NHWC"?$e(g.outShape,b.shape):(D(b.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`),D(b.shape.length===0||b.shape[0]===g.outChannels||b.shape[0]===1,()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let T;if(p!=null){let w=p.shape;if(D(w.length<=1||w.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${w.length}.`),w.length===1)D(w[0]===1||w[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${w}) is not compatible with the number of output channels (${g.outChannels}).`);else if(w.length===3)try{$e(w,g.outShape)}catch{let F=`Error in fused conv2d: PReLU activation weights (${w}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(F)}T=S(p,"prelu weights","fused conv2d")}let x=(w,R)=>{D(o==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${o} but only NHWC is currently supported.`);let[F,P,E,B]=R,G=ol(w,E,u);D(es(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let U=oc(P.shape,G,F,e,n),V=yc(P,G,F.shape,e,n),W=[U,V];if(B!=null){let H=sl(B,G);W.push(H)}return W},I={x:d,filter:c,bias:b,preluActivationWeights:T},k={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:u,leakyreluAlpha:l};return i==null?hn((R,F,P)=>{let E=N.runKernel(ws,I,k);return P([F,R,E]),f&&(E=L(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:x}})(d,c):hn((R,F,P,E)=>{let B=N.runKernel(ws,I,k);return E([F,R,B,P]),f&&(B=L(B,[B.shape[1],B.shape[2],B.shape[3]])),{value:B,gradFunc:x}})(d,c,b)}var VR=A({fusedConv2d_:gZ});function bZ(r,t,e,n,o,s=[1,1],a){let i=r;r.rank===3&&(i=L(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=t;u.rank===3&&(u=L(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p={x:i,dy:u},l={strides:n,pad:o,dimRoundingMode:a,dilations:s,filterShape:e};return N.runKernel(Am,p,l)}var Iy=A({depthwiseConv2dNativeBackpropFilter_:bZ});function yZ(r,t,e,n,o,s=[1,1],a){let i=t,u=!1;t.rank===3&&(u=!0,i=L(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p={dy:i,filter:e},l={strides:n,pad:o,dimRoundingMode:a,dilations:s,inputShape:r},m=N.runKernel(wm,p,l);return u?L(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Cy=A({depthwiseConv2dNativeBackpropInput_:yZ});function TZ({x:r,filter:t,strides:e,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:p,leakyreluAlpha:l}){if(il(N.state.gradientDepth,u)===!1){let k=up(r,t,e,n,o,s,a);return i!=null&&(k=Y(k,i)),al(k,u,p,l)}let m=S(r,"x","depthwiseConv2d","float32"),c=S(t,"filter","depthwiseConv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=L(m,[1,m.shape[0],m.shape[1],m.shape[2]])),D(d.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),D(c.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`),D(d.shape[3]===c.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),s==null&&(s=[1,1]),D(Er(e,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),Rt("fused depthwiseConv2d",n,a);let h=Xp(d.shape,c.shape,e,s,n,a,!0),g;i!=null&&(g=S(i,"bias","fused conv2d"),[g]=qe(g,m),$e(h.outShape,g.shape));let b;p!=null&&(b=S(p,"prelu weights","fused depthwiseConv2d"));let T=(k,w)=>{D(es(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[R,F,P,E]=w,B=ol(k,P,u),G=Cy(F.shape,B,R,e,n,s,a),U=Iy(F,B,R.shape,e,n,s,a);if(E!=null){let V=sl(g,B);return[G,U,V]}return[G,U]},x={x:d,filter:c,bias:g,preluActivationWeights:b},I={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:u,leakyreluAlpha:l};return i==null?hn((w,R,F)=>{let P=N.runKernel(Ns,x,I);return F([R,w,P]),f&&(P=L(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:T}})(d,c):hn((w,R,F,P)=>{let E=N.runKernel(Ns,x,I);return P([R,w,E,F]),f&&(E=L(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:T}})(d,c,g)}var HR=A({fusedDepthwiseConv2d_:TZ});function xZ({a:r,b:t,transposeA:e=!1,transposeB:n=!1,bias:o,activation:s="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(il(N.state.gradientDepth,s)===!1){let B=Ge(r,t,e,n);return o!=null&&(B=Y(B,o)),al(B,s,a,i)}let u=S(r,"a","fused matMul"),p=S(t,"b","fused matMul");[u,p]=qe(u,p);let l=e?u.shape[u.rank-2]:u.shape[u.rank-1],m=n?p.shape[p.rank-1]:p.shape[p.rank-2],c=e?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?p.shape[p.rank-2]:p.shape[p.rank-1],f=u.shape.slice(0,-2),h=p.shape.slice(0,-2),g=et(f),b=et(h);D(l===m,()=>`Error in fused matMul: inner shapes (${l}) and (${m}) of Tensors with shapes ${u.shape} and ${p.shape} and transposeA=${e} and transposeB=${n} must match.`);let x=$e(u.shape.slice(0,-2),p.shape.slice(0,-2)).concat([c,d]),I=e?L(u,[g,l,c]):L(u,[g,c,l]),k=n?L(p,[b,d,m]):L(p,[b,m,d]),w;o!=null&&(w=S(o,"bias","fused matMul"),[w]=qe(w,u),$e(x,w.shape));let R;a!=null&&(R=S(a,"prelu weights","fused matMul"));let F=(B,G)=>{let[U,V,W,H]=G,j=ol(L(B,W.shape),W,s),X,ee;if(!e&&!n?(X=Ge(j,V,!1,!0),ee=Ge(U,j,!0,!1)):!e&&n?(X=Ge(j,V,!1,!1),ee=Ge(j,U,!0,!1)):e&&!n?(X=Ge(V,j,!1,!0),ee=Ge(U,j,!1,!1)):(X=Ge(V,j,!0,!0),ee=Ge(j,U,!0,!0)),o!=null){let ne=sl(H,j);return[X,ee,ne]}else return[X,ee]},P={a:I,b:k,bias:w,preluActivationWeights:R},E={transposeA:e,transposeB:n,activation:s,leakyreluAlpha:i};return o==null?hn((G,U,V)=>{let W=N.runKernel(As,P,E);return V([G,U,W]),{value:L(W,x),gradFunc:F}})(I,k):hn((G,U,V,W)=>{let H=N.runKernel(As,P,E);return W([G,U,H,V]),{value:L(H,x),gradFunc:F}})(I,k,w)}var qR=A({fusedMatMul_:xZ});function IZ(r){return kh(r,.54,.46)}var jR=A({hammingWindow_:IZ});function CZ(r){return kh(r,.5,.5)}var ky=A({hannWindow_:CZ});function kZ(r,t,e,n=!1,o=0){let s=0,a=[];for(;s+t<=r.size;)a.push(Be(r,s,t)),s+=e;if(n)for(;s<r.size;){let i=s+t-r.size,u=lt([Be(r,s,t-i),Ps([i],o)]);a.push(u),s+=e}return a.length===0?Ba([],[0,t]):L(lt(a),[a.length,t])}var Sy=A({frame_:kZ});function SZ(r,t,e,n,o=ky){n==null&&(n=nA(t));let s=Sy(r,t,e),a=M(s,o(t));return gc(a,n)}var XR=A({stft_:SZ});function vZ(r,t,e,n,o="bilinear",s=0){let a=S(r,"image","cropAndResize"),i=S(t,"boxes","cropAndResize","float32"),u=S(e,"boxInd","cropAndResize","int32"),p=i.shape[0];D(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),D(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${p},4] but had shape ${i.shape}.`),D(u.rank===1&&u.shape[0]===p,()=>`Error in cropAndResize: boxInd must be have size [${p}] but had shape ${i.shape}.`),D(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),D(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),D(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);let l={image:a,boxes:i,boxInd:u},m={method:o,extrapolationValue:s,cropSize:n};return N.runKernel(pa,l,m)}var YR=A({cropAndResize_:vZ});function AZ(r){let t=S(r,"image","flipLeftRight","float32");D(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let e={image:t};return N.runKernel(da,e,{})}var ZR=A({flipLeftRight_:AZ});function wZ(r){let t=S(r,"image","grayscaleToRGB"),e=t.rank-1,n=t.shape[e];D(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),D(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let o=new Array(t.rank);return o.fill(1,0,e),o[e]=3,Jr(t,o)}var QR=A({grayscaleToRGB_:wZ});function NZ(r,t,e=0,n=.5){let o=S(r,"image","rotateWithOffset","float32");D(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);let s={image:o},a={radians:t,fillValue:e,center:n};return N.runKernel(Ea,s,a)}var JR=A({rotateWithOffset_:NZ});function $s(r,t,e,n,o,s){n==null&&(n=.5),o==null&&(o=Number.NEGATIVE_INFINITY),s==null&&(s=0);let a=r.shape[0];return e=Math.min(e,a),D(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),D(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),D(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),D(t.rank===1,()=>"scores must be a 1D tensor"),D(t.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`),D(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:e,iouThreshold:n,scoreThreshold:o,softNmsSigma:s}}function DZ(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY){let s=S(r,"boxes","nonMaxSuppression","float32"),a=S(t,"scores","nonMaxSuppression","float32"),i=$s(s,a,e,n,o);e=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let u={maxOutputSize:e,iouThreshold:n,scoreThreshold:o};return N.runKernel(Ca,{boxes:s,scores:a},u)}var eF=A({nonMaxSuppression_:DZ});function tF(r,t,e){let n=RZ(r,t,e),o=n<0?-(n+1):n;r.splice(o,0,t)}function RZ(r,t,e){return PZ(r,t,e||FZ)}function FZ(r,t){return r>t?1:r<t?-1:0}function PZ(r,t,e){let n=0,o=r.length,s=0,a=!1;for(;n<o;){s=n+(o-n>>>1);let i=e(t,r[s]);i>0?n=s+1:(o=s,a=!i)}return a?n:-n-1}function vy(r,t,e,n,o){return oA(r,t,e,n,o,0)}function Ay(r,t,e,n,o,s){return oA(r,t,e,n,o,0,!1,s,!0)}function wy(r,t,e,n,o,s){return oA(r,t,e,n,o,s,!0)}function oA(r,t,e,n,o,s,a=!1,i=!1,u=!1){let p=[];for(let g=0;g<t.length;g++)t[g]>o&&p.push({score:t[g],boxIndex:g,suppressBeginIndex:0});p.sort(rF);let l=s>0?-.5/s:0,m=[],c=[];for(;m.length<e&&p.length>0;){let g=p.pop(),{score:b,boxIndex:T,suppressBeginIndex:x}=g;if(b<o)break;let I=!1;for(let k=m.length-1;k>=x;--k){let w=MZ(r,T,m[k]);if(w>=n){I=!0;break}if(g.score=g.score*EZ(n,l,w),g.score<=o)break}g.suppressBeginIndex=m.length,I||(g.score===b?(m.push(T),c.push(g.score)):g.score>o&&tF(p,g,rF))}let d=m.length,f=e-d;i&&f>0&&(m.push(...new Array(f).fill(0)),c.push(...new Array(f).fill(0)));let h={selectedIndices:m};return a&&(h.selectedScores=c),u&&(h.validOutputs=d),h}function MZ(r,t,e){let n=r.subarray(t*4,t*4+4),o=r.subarray(e*4,e*4+4),s=Math.min(n[0],n[2]),a=Math.min(n[1],n[3]),i=Math.max(n[0],n[2]),u=Math.max(n[1],n[3]),p=Math.min(o[0],o[2]),l=Math.min(o[1],o[3]),m=Math.max(o[0],o[2]),c=Math.max(o[1],o[3]),d=(i-s)*(u-a),f=(m-p)*(c-l);if(d<=0||f<=0)return 0;let h=Math.max(s,p),g=Math.max(a,l),b=Math.min(i,m),T=Math.min(u,c),x=Math.max(b-h,0)*Math.max(T-g,0);return x/(d+f-x)}function EZ(r,t,e){let n=Math.exp(t*e*e);return e<=r?n:0}function rF(r,t){return r.score-t.score||r.score===t.score&&t.boxIndex-r.boxIndex}async function LZ(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY){let s=S(r,"boxes","nonMaxSuppressionAsync"),a=S(t,"scores","nonMaxSuppressionAsync"),i=$s(s,a,e,n,o);e=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let u=await Promise.all([s.data(),a.data()]),p=u[0],l=u[1],{selectedIndices:m}=vy(p,l,e,n,o);return s!==r&&s.dispose(),a!==t&&a.dispose(),Kt(m,"int32")}var nF=LZ;function _Z(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=S(r,"boxes","nonMaxSuppression"),i=S(t,"scores","nonMaxSuppression"),u=$s(a,i,e,n,o,s);e=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let p={boxes:a,scores:i},l={maxOutputSize:e,iouThreshold:n,scoreThreshold:o,softNmsSigma:s},m=N.runKernel(ka,p,l);return{selectedIndices:m[0],selectedScores:m[1]}}var oF=A({nonMaxSuppressionWithScore_:_Z});async function $Z(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=S(r,"boxes","nonMaxSuppressionAsync"),i=S(t,"scores","nonMaxSuppressionAsync"),u=$s(a,i,e,n,o,s);e=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let p=await Promise.all([a.data(),i.data()]),l=p[0],m=p[1],{selectedIndices:c,selectedScores:d}=wy(l,m,e,n,o,s);return a!==r&&a.dispose(),i!==t&&i.dispose(),{selectedIndices:Kt(c,"int32"),selectedScores:Kt(d)}}var sF=$Z;function BZ(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=S(r,"boxes","nonMaxSuppression"),i=S(t,"scores","nonMaxSuppression"),u=$s(a,i,e,n,o,null),p=u.maxOutputSize,l=u.iouThreshold,m=u.scoreThreshold,c={boxes:a,scores:i},d={maxOutputSize:p,iouThreshold:l,scoreThreshold:m,padToMaxOutputSize:s},f=N.runKernel(ji,c,d);return{selectedIndices:f[0],validOutputs:f[1]}}var aF=A({nonMaxSuppressionPadded_:BZ});async function OZ(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=S(r,"boxes","nonMaxSuppressionAsync"),i=S(t,"scores","nonMaxSuppressionAsync"),u=$s(a,i,e,n,o,null),p=u.maxOutputSize,l=u.iouThreshold,m=u.scoreThreshold,[c,d]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:h}=Ay(c,d,p,l,m,s);return a!==r&&a.dispose(),i!==t&&i.dispose(),{selectedIndices:Kt(f,"int32"),validOutputs:de(h,"int32")}}var iF=OZ;function zZ(r,t,e=!1,n=!1){let o=S(r,"images","resizeBilinear");D(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),D(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),D(n===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=L(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=t,i={images:s},u={alignCorners:e,halfPixelCenters:n,size:t},p=N.runKernel(Wo,i,u);return a?L(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var uF=A({resizeBilinear_:zZ});function GZ(r,t,e=!1,n=!1){let o=S(r,"images","resizeNearestNeighbor");D(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),D(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),D(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),D(n===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=L(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=t,i={images:s},u={alignCorners:e,halfPixelCenters:n,size:t},p=N.runKernel(Uo,i,u);return a?L(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var pF=A({resizeNearestNeighbor_:GZ});function UZ(r,t="binary",e=!1,n=.5){let o=S(r,"image","threshold"),s=.2989,a=.587,i=.114,u=o.shape[0]*o.shape[1],p=M(Kt([n]),255),l,m,c,d;if(D(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),D(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),D(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),D(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),o.shape[2]===3){[l,m,c]=Nr(o,[1,1,1],-1);let g=M(l,s),b=M(m,a),T=M(c,i);d=Y(Y(g,b),T)}else d=r;if(t==="otsu"){let g=Bb(te(py(d),"int32"),vr([]),256);p=WZ(g,u)}let f=e?Ls(d,p):ur(d,p);return te(M(f,255),"int32")}function WZ(r,t){let e=Kt([-1]),n=Kt([0]),o=Kt([0]),s,a,i,u,p,l;for(let m=0;m<r.size-1;m++){s=Be(r,0,m+1),a=Be(r,m+1),p=me(fe(s),t),l=me(fe(a),t);let c=fe(M(s,dp(0,s.size)));i=me(c,fe(s));let d=Ps(a.shape,s.size),f=Y(dp(0,a.size),d),h=M(a,f);u=me(fe(h),fe(a));let g=le(i,u),b=le(i,u),T=M(p,l);o=M(M(T,g),b);let x=ur(o,n);n=zt(x,o,n),e=zt(x,Kt([m]),e)}return e}var lF=A({threshold_:UZ});function KZ(r,t,e="nearest",n="constant",o=0,s){let a=S(r,"image","transform","float32"),i=S(t,"transforms","transform","float32");D(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),D(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),D(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let u={image:a,transforms:i},p={interpolation:e,fillMode:n,fillValue:o,outputShape:s};return N.runKernel(Ma,u,p)}var mF=A({transform_:KZ});function VZ(r,t,e){D(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),D(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`);let n=S(r,"a","bandPart");D(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let o=n.shape,[s,a]=n.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(e<=a))throw new Error(`bandPart(): numUpper (${e}) must not be greater than the number of columns (${a}).`);t<0&&(t=s),e<0&&(e=a);let i=L(dp(0,s,1,"int32"),[-1,1]),u=dp(0,a,1,"int32"),p=le(i,u),l=en(Ls(p,de(+t,"int32")),Es(p,de(-e,"int32"))),m=xt([s,a],n.dtype);return L(br(Kr(L(n,[-1,s,a])).map(c=>zt(l,c,m))),o)}var cF=A({bandPart_:VZ});function HZ(r){let t;if(Array.isArray(r)){t=!1,D(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let o=r[0].shape[0];for(let s=1;s<r.length;++s)D(r[s].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${o})`)}else t=!0,r=Nr(r,r.shape[0],0).map(o=>_s(o,[0]));D(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let e=[],n=r;for(let o=0;o<r.length;++o)e.push(N.tidy(()=>{let s=n[o];if(o>0)for(let a=0;a<o;++a){let i=M(fe(M(e[a],s)),e[a]);s=le(s,i)}return me(s,Yp(s,"euclidean"))}));return t?br(e,0):e}var dF=A({gramSchmidt_:HZ});function qZ(r,t=!1){if(D(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return fF(r,t);{let e=r.shape.slice(0,r.shape.length-2).reduce((u,p)=>u*p),n=Kr(L(r,[e,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),o=[],s=[];n.forEach(u=>{let[p,l]=fF(u,t);o.push(p),s.push(l)});let a=L(br(o,0),r.shape),i=L(br(s,0),r.shape);return[a,i]}}function fF(r,t=!1){return N.tidy(()=>{D(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let e=r.shape[0],n=r.shape[1],o=Zp(e),s=dn(r),a=Ba([[1]],[1,1]),i=dn(a),u=e>=n?n:e;for(let p=0;p<u;++p){let l=s,m=i,c=o;[i,s,o]=N.tidy(()=>{let d=Be(s,[p,p],[e-p,1]),f=Yp(d),h=Be(s,[p,p],[1,1]),g=zt(ur(h,0),Ba([[-1]]),Ba([[1]])),b=le(h,M(g,f)),T=me(d,b);T.shape[0]===1?i=dn(a):i=lt([a,Be(T,[1,0],[T.shape[0]-1,T.shape[1]])],0);let x=Qe(me(Ge(g,b),f)),I=Be(s,[p,0],[e-p,n]),k=M(x,i),w=Oe(i);if(p===0)s=le(I,Ge(k,Ge(w,I)));else{let P=le(I,Ge(k,Ge(w,I)));s=lt([Be(s,[0,0],[p,n]),P],0)}let R=Oe(k),F=Be(o,[0,p],[e,o.shape[1]-p]);if(p===0)o=le(F,Ge(Ge(F,i),R));else{let P=le(F,Ge(Ge(F,i),R));o=lt([Be(o,[0,0],[e,p]),P],1)}return[i,s,o]}),Ne([l,m,c])}return!t&&e>n&&(o=Be(o,[0,0],[e,n]),s=Be(s,[0,0],[n,n])),[o,s]})}var hF=A({qr_:qZ});var Oa=(o=>(o[o.NONE=0]="NONE",o[o.MEAN=1]="MEAN",o[o.SUM=2]="SUM",o[o.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",o))(Oa||{});function jZ(r,t,e=3){let n=S(r,"losses","computeWeightedLoss"),o=null;t!=null&&(o=S(t,"weights","computeWeightedLoss"));let s=o==null?n:M(n,o);if(e===0)return s;if(e===2)return fe(s);if(e===1){if(o==null)return Lt(s);{let a=n.size/o.size,i=me(fe(s),fe(o));return a>1?me(i,de(a)):i}}if(e===3){if(o==null)return me(fe(s),de(n.size));{let a=M(o,gr(n.shape)),i=te(fe(iu(a,de(0))),"float32");return me(fe(s),i)}}throw Error(`Unknown reduction: ${e}`)}var Vr=A({computeWeightedLoss_:jZ});function XZ(r,t,e,n=3){let o=S(r,"labels","absoluteDifference"),s=S(t,"predictions","absoluteDifference"),a=null;e!=null&&(a=S(e,"weights","absoluteDifference")),$t(o.shape,s.shape,"Error in absoluteDifference: ");let i=Ot(le(o,s));return Vr(i,a,n)}var gF=A({absoluteDifference_:XZ});function YZ(r,t,e,n,o=3){let s=S(r,"labels","cosineDistance"),a=S(t,"predictions","cosineDistance"),i=null;n!=null&&(i=S(n,"weights","cosineDistance")),$t(s.shape,a.shape,"Error in cosineDistance: ");let u=de(1),p=le(u,fe(M(s,a),e,!0));return Vr(p,i,o)}var bF=A({cosineDistance_:YZ});function ZZ(r,t,e,n=3){let o=S(r,"labels","hingeLoss"),s=S(t,"predictions","hingeLoss"),a=null;e!=null&&(a=S(e,"weights","hingeLoss")),$t(o.shape,s.shape,"Error in hingeLoss: ");let i=de(1);o=le(M(de(2),o),i);let u=tn(le(i,M(o,s)));return Vr(u,a,n)}var yF=A({hingeLoss_:ZZ});function QZ(r,t,e,n=1,o=3){let s=S(r,"labels","huberLoss"),a=S(t,"predictions","huberLoss"),i=null;e!=null&&(i=S(e,"weights","huberLoss")),$t(s.shape,a.shape,"Error in huberLoss: ");let u=de(n),p=Ot(le(a,s)),l=cp(p,u),m=le(p,l),c=Y(M(de(.5),Ke(l)),M(u,m));return Vr(c,i,o)}var TF=A({huberLoss_:QZ});function JZ(r,t,e,n=1e-7,o=3){let s=S(r,"labels","logLoss"),a=S(t,"predictions","logLoss"),i=null;e!=null&&(i=S(e,"weights","logLoss")),$t(s.shape,a.shape,"Error in logLoss: ");let u=de(1),p=de(n),l=Qe(M(s,Wr(Y(a,p)))),m=M(le(u,s),Wr(Y(le(u,a),p))),c=le(l,m);return Vr(c,i,o)}var xF=A({logLoss_:JZ});function eQ(r,t,e,n=3){let o=S(r,"labels","meanSquaredError"),s=S(t,"predictions","meanSquaredError"),a=null;e!=null&&(a=S(e,"weights","meanSquaredError")),$t(o.shape,s.shape,"Error in meanSquaredError: ");let i=gy(o,s);return Vr(i,a,n)}var IF=A({meanSquaredError_:eQ});function tQ(r,t){let e=S(r,"labels","sigmoidCrossEntropyWithLogits"),n=S(t,"logits","sigmoidCrossEntropyWithLogits");$t(e.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let o=tn(n),s=M(n,e),a=ic(hr(Qe(Ot(n))));return Y(le(o,s),a)}function rQ(r,t,e,n=0,o=3){let s=S(r,"multiClassLabels","sigmoidCrossEntropy"),a=S(t,"logits","sigmoidCrossEntropy"),i=null;if(e!=null&&(i=S(e,"weights","sigmoidCrossEntropy")),$t(s.shape,a.shape,"Error in sigmoidCrossEntropy: "),n>0){let p=de(n),l=de(1),m=de(.5);s=Y(M(s,le(l,p)),M(m,p))}let u=tQ(s,a);return Vr(u,i,o)}var CF=A({sigmoidCrossEntropy_:rQ});function nQ(r,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return hn((o,s,a)=>{let u=ey(s,[e],!0),p=le(te(s,"float32"),u);a([o,p]);let l=Qe(M(p,o));return{value:fe(l,[e]),gradFunc:(d,f)=>{let[h,g]=f,b=Ms(d.shape,[e]);return[M(L(d,b),le(te(h,"float32"),hr(g))),M(L(d,b),le(hr(g),te(h,"float32")))]}}})(r,t)}function oQ(r,t,e,n=0,o=3){let s=S(r,"onehotLabels","softmaxCrossEntropy"),a=S(t,"logits","softmaxCrossEntropy"),i=null;if(e!=null&&(i=S(e,"weights","softmaxCrossEntropy")),$t(s.shape,a.shape,"Error in softmaxCrossEntropy: "),n>0){let p=de(n),l=de(1),m=de(s.shape[1]);s=Y(M(s,le(l,p)),me(p,m))}let u=nQ(s,a);return Vr(u,i,o)}var kF=A({softmaxCrossEntropy_:oQ});function sQ(r,t,e,n){let o=S(r,"indices","sparseFillEmptyRows","int32"),s=S(t,"values","sparseFillEmptyRows"),a=S(e,"denseShape","sparseFillEmptyRows","int32"),i=S(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let u={indices:o,values:s,denseShape:a,defaultValue:i},p=N.runKernel(Ku,u);return{outputIndices:p[0],outputValues:p[1],emptyRowIndicator:p[2],reverseIndexMap:p[3]}}var SF=A({sparseFillEmptyRows_:sQ});function aQ(r,t,e){let n=S(r,"inputIndices","sparseReshape","int32"),o=S(t,"inputShape","sparseReshape","int32"),s=S(e,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let a={inputIndices:n,inputShape:o,newShape:s},i=N.runKernel(Qi,a);return{outputIndices:i[0],outputShape:i[1]}}var vF=A({sparseReshape_:aQ});function iQ(r,t,e){let n=S(r,"data","sparseSegmentMean"),o=S(t,"indices","sparseSegmentMean","int32"),s=S(e,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return N.runKernel(Vu,a)}var AF=A({sparseSegmentMean_:iQ});function uQ(r,t,e){let n=S(r,"data","sparseSegmentSum"),o=S(t,"indices","sparseSegmentSum","int32"),s=S(e,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return N.runKernel(Hu,a)}var wF=A({sparseSegmentSum_:uQ});function pQ(r,t,e,n,o,s,a,i){let u=S(r,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);let p=S(t,"dataSplits","stringNGrams");if(p.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let l={separator:e,nGramWidths:n,leftPad:o,rightPad:s,padWidth:a,preserveShortSequences:i},m={data:u,dataSplits:p},c=N.runKernel(li,m,l);return{nGrams:c[0],nGramsSplits:c[1]}}var NF=A({stringNGrams_:pQ});function lQ(r,t,e=!0){let n=S(r,"input","stringSplit","string"),o=S(t,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);let s={skipEmpty:e},a={input:n,delimiter:o},i=N.runKernel(ju,a,s);return{indices:i[0],values:i[1],shape:i[2]}}var DF=A({stringSplit_:lQ});function mQ(r,t){let e=S(r,"input","stringToHashBucketFast","string"),n={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let o={input:e};return N.runKernel(Xu,o,n)}var RF=A({stringToHashBucketFast_:mQ});var cQ={fft:hc,ifft:nl,rfft:gc,irfft:hy},dQ={hammingWindow:jR,hannWindow:ky,frame:Sy,stft:XR},hp={flipLeftRight:ZR,grayscaleToRGB:QR,resizeNearestNeighbor:pF,resizeBilinear:uF,rotateWithOffset:JR,cropAndResize:YR,nonMaxSuppression:eF,nonMaxSuppressionAsync:nF,nonMaxSuppressionWithScore:oF,nonMaxSuppressionWithScoreAsync:sF,nonMaxSuppressionPadded:aF,nonMaxSuppressionPaddedAsync:iF,threshold:lF,transform:mF},sA={bandPart:cF,gramSchmidt:dF,qr:hF},fQ={absoluteDifference:gF,computeWeightedLoss:Vr,cosineDistance:bF,hingeLoss:yF,huberLoss:TF,logLoss:xF,meanSquaredError:IF,sigmoidCrossEntropy:CF,softmaxCrossEntropy:kF},hQ={sparseFillEmptyRows:SF,sparseReshape:vF,sparseSegmentMean:AF,sparseSegmentSum:wF},gQ={stringNGrams:NF,stringSplit:DF,stringToHashBucketFast:RF};var Hr=class extends hh{minimize(e,n=!1,o){let{value:s,grads:a}=this.computeGradients(e,o);if(o!=null){let i=o.map(u=>({name:u.name,tensor:a[u.name]}));this.applyGradients(i)}else this.applyGradients(a);return Ne(a),n?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,n){return Zb(e,n)}dispose(){this.iterations_!=null&&Ne(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:de(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Hr,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var gp=class extends Hr{constructor(e,n,o=null){super();this.learningRate=e;this.rho=n;this.epsilon=o;this.accumulatedGrads=[];this.accumulatedUpdates=[];o==null&&(this.epsilon=N.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,s)=>{let a=N.registeredVariables[o],i=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${o}/accum_grad`,variable:z(()=>Ae(a).variable(i))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${o}/accum_var`,variable:z(()=>Ae(a).variable(i))});let u=Array.isArray(e)?e[s].tensor:e[o];if(u==null)return;let p=this.accumulatedGrads[s].variable,l=this.accumulatedUpdates[s].variable;z(()=>{let m=Y(M(p,this.rho),M(Ke(u),1-this.rho)),c=M(me(Et(Y(l,this.epsilon)),Et(Y(p,this.epsilon))),u),d=Y(M(l,this.rho),M(Ke(c),1-this.rho));p.assign(m),l.assign(d);let f=Y(M(c,-this.learningRate),a);a.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ne(this.accumulatedGrads.map(e=>e.variable)),Ne(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);let n=e.length/2,o=!1;this.accumulatedGrads=e.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})),this.accumulatedUpdates=e.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(o)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.rho,n.epsilon)}};gp.className="Adadelta";Fn(gp);var bp=class extends Hr{constructor(e,n=.1){super();this.learningRate=e;this.initialAccumulatorValue=n;this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,s)=>{let a=N.registeredVariables[o];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${o}/accumulator`,variable:z(()=>Ps(a.shape,this.initialAccumulatorValue).variable(!1))});let i=Array.isArray(e)?e[s].tensor:e[o];if(i==null)return;let u=this.accumulatedGrads[s].variable;z(()=>{let p=Y(u,Ke(i));u.assign(p);let l=Y(M(me(i,Et(Y(p,N.backend.epsilon()))),-this.learningRate),a);a.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ne(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let n=!1;this.accumulatedGrads=e.map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,n){return new e(n.learningRate,n.initialAccumulatorValue)}};bp.className="Adagrad";Fn(bp);var yp=class extends Hr{constructor(e,n,o,s=null){super();this.learningRate=e;this.beta1=n;this.beta2=o;this.epsilon=s;this.accumulatedFirstMoment=[];this.accumulatedSecondMoment=[];z(()=>{this.accBeta1=de(n).variable(),this.accBeta2=de(o).variable()}),s==null&&(this.epsilon=N.backend.epsilon())}applyGradients(e){let n=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);z(()=>{let o=le(1,this.accBeta1),s=le(1,this.accBeta2);n.forEach((a,i)=>{let u=N.registeredVariables[a],p=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:z(()=>Ae(u).variable(p))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${a}/v`,variable:z(()=>Ae(u).variable(p))});let l=Array.isArray(e)?e[i].tensor:e[a];if(l==null)return;let m=this.accumulatedFirstMoment[i].variable,c=this.accumulatedSecondMoment[i].variable,d=Y(M(m,this.beta1),M(l,1-this.beta1)),f=Y(M(c,this.beta2),M(Ke(l),1-this.beta2)),h=me(d,o),g=me(f,s);m.assign(d),c.assign(f);let b=Y(M(me(h,Y(Et(g),this.epsilon)),-this.learningRate),u);u.assign(b)}),this.accBeta1.assign(M(this.accBeta1,this.beta1)),this.accBeta2.assign(M(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ne(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Ne(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e),z(()=>{this.accBeta1.assign(Vn(this.beta1,this.iterations_+1)),this.accBeta2.assign(Vn(this.beta2,this.iterations_+1))});let n=e.length/2,o=!1;this.accumulatedFirstMoment=e.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})),this.accumulatedSecondMoment=e.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(o)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon)}};yp.className="Adam";Fn(yp);var Tp=class extends Hr{constructor(e,n,o,s=null,a=0){super();this.learningRate=e;this.beta1=n;this.beta2=o;this.epsilon=s;this.decay=a;this.accumulatedFirstMoment=[];this.accumulatedWeightedInfNorm=[];z(()=>{this.iteration=de(0).variable(),this.accBeta1=de(n).variable()}),s==null&&(this.epsilon=N.backend.epsilon())}applyGradients(e){let n=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);z(()=>{let o=le(1,this.accBeta1),s=me(-this.learningRate,Y(M(this.iteration,this.decay),1));n.forEach((a,i)=>{let u=N.registeredVariables[a],p=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:Ae(u).variable(p)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${a}/v`,variable:Ae(u).variable(p)});let l=Array.isArray(e)?e[i].tensor:e[a];if(l==null)return;let m=this.accumulatedFirstMoment[i].variable,c=this.accumulatedWeightedInfNorm[i].variable,d=Y(M(m,this.beta1),M(l,1-this.beta1)),f=M(c,this.beta2),h=Ot(l),g=ns(f,h);m.assign(d),c.assign(g);let b=Y(M(me(s,o),me(d,Y(g,this.epsilon))),u);u.assign(b)}),this.iteration.assign(Y(this.iteration,1)),this.accBeta1.assign(M(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ne(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Ne(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon,n.decay)}};Tp.className="Adamax";Fn(Tp);var yi=class extends Hr{constructor(e){super();this.learningRate=e;this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,s)=>{let a=Array.isArray(e)?e[s].tensor:e[o];if(a==null)return;let i=N.registeredVariables[o];z(()=>{let u=Y(M(this.c,a),i);i.assign(u)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Bt(de(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,n){return new e(n.learningRate)}};yi.className="SGD";Fn(yi);var xp=class extends yi{constructor(e,n,o=!1){super(e);this.learningRate=e;this.momentum=n;this.useNesterov=o;this.accumulations=[];this.m=de(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,s)=>{let a=N.registeredVariables[o];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${o}/momentum`,variable:z(()=>Ae(a).variable(!1))});let i=this.accumulations[s].variable,u=Array.isArray(e)?e[s].tensor:e[o];u!=null&&z(()=>{let p,l=Y(M(this.m,i),u);this.useNesterov?p=Y(M(this.c,Y(u,M(l,this.m))),a):p=Y(M(this.c,l),a),i.assign(l),a.assign(p)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ne(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let n=!1;this.accumulations=e.map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,n){return new e(n.learningRate,n.momentum,n.useNesterov)}};xp.className="Momentum";Fn(xp);var Ip=class extends Hr{constructor(e,n=.9,o=0,s=null,a=!1){super();this.learningRate=e;this.decay=n;this.momentum=o;this.epsilon=s;this.accumulatedMeanSquares=[];this.accumulatedMoments=[];this.accumulatedMeanGrads=[];if(this.centered=a,s==null&&(this.epsilon=N.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,s)=>{let a=N.registeredVariables[o],i=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${o}/rms`,variable:z(()=>Ae(a).variable(i))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${o}/momentum`,variable:z(()=>Ae(a).variable(i))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${o}/mg`,variable:z(()=>Ae(a).variable(i))});let u=Array.isArray(e)?e[s].tensor:e[o];if(u==null)return;let p=this.accumulatedMeanSquares[s].variable,l=this.accumulatedMoments[s].variable;z(()=>{let m=Y(M(p,this.decay),M(Ke(u),1-this.decay));if(this.centered){let c=this.accumulatedMeanGrads[s].variable,d=Y(M(c,this.decay),M(u,1-this.decay)),f=me(M(u,this.learningRate),Et(le(m,Y(Ke(d),this.epsilon)))),h=Y(M(l,this.momentum),f);p.assign(m),c.assign(d),l.assign(h);let g=le(a,h);a.assign(g)}else{let c=Y(M(p,this.decay),M(Ke(u),1-this.decay)),d=Y(M(l,this.momentum),me(M(u,this.learningRate),Et(Y(c,this.epsilon))));p.assign(c),l.assign(d);let f=le(a,d);a.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ne(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ne(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Ne(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);let n=this.centered?e.length/3:e.length/2,o=!1;this.accumulatedMeanSquares=e.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})),this.accumulatedMoments=e.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})),this.centered&&(this.accumulatedMeanGrads=e.slice(n*2,n*3).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,n){return new e(n.learningRate,n.decay,n.momentum,n.epsilon,n.centered)}};Ip.className="RMSProp";Fn(Ip);var za=class{static sgd(t){return new yi(t)}static momentum(t,e,n=!1){return new xp(t,e,n)}static rmsprop(t,e=.9,n=0,o=null,s=!1){return new Ip(t,e,n,o,s)}static adam(t=.001,e=.9,n=.999,o=null){return new yp(t,e,n,o)}static adadelta(t=.001,e=.95,n=null){return new gp(t,e,n)}static adamax(t=.002,e=.9,n=.999,o=null,s=0){return new Tp(t,e,n,o,s)}static adagrad(t,e=.1){return new bp(t,e)}};var ul={sgd:za.sgd,momentum:za.momentum,adadelta:za.adadelta,adagrad:za.adagrad,rmsprop:za.rmsprop,adamax:za.adamax,adam:za.adam};var bQ=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:r=>r())();function Sh(){return new Promise(r=>bQ(()=>r()))}var C={};We(C,{ERF_A1:()=>PQ,ERF_A2:()=>MQ,ERF_A3:()=>EQ,ERF_A4:()=>LQ,ERF_A5:()=>_Q,ERF_P:()=>FQ,PARALLELIZE_THRESHOLD:()=>Ny,RowPartitionType:()=>FF,SELU_SCALE:()=>iA,SELU_SCALEALPHA:()=>aA,applyActivation:()=>al,assertAndGetBroadcastShape:()=>$e,assertAxesAreInnerMostDims:()=>VX,assertParamsConsistent:()=>yQ,assignToTypedArray:()=>UQ,axesAreInnerMostDims:()=>Hv,calculateShapes:()=>J1,checkEinsumDimSizes:()=>jQ,checkPadOnDimRoundingMode:()=>Rt,combineLocations:()=>_2,combineRaggedTensorToTensorShapes:()=>xQ,complexWithEvenIndex:()=>OQ,complexWithOddIndex:()=>zQ,computeConv2DInfo:()=>Xp,computeConv3DInfo:()=>C2,computeDefaultPad:()=>Vv,computeDilation2DInfo:()=>q5,computeOptimalWindowSize:()=>SQ,computeOutAndReduceShapes:()=>qv,computeOutShape:()=>TQ,computePool2DInfo:()=>Kv,computePool3DInfo:()=>j5,convertConv2DDataFormat:()=>k2,decodeEinsumEquation:()=>HQ,eitherStridesOrDilationsAreOne:()=>Er,expandShapeToKeepDim:()=>Ms,exponent:()=>KQ,exponents:()=>WQ,fromStringArrayToUint8:()=>h7,fromUint8ToStringArray:()=>f7,getAxesPermutation:()=>jv,getBroadcastDims:()=>Y1,getComplexWithIndex:()=>GQ,getEinsumComputePath:()=>XQ,getEinsumPermutation:()=>qQ,getFusedBiasGradient:()=>sl,getFusedDyActivation:()=>ol,getImageCenter:()=>vQ,getInnerMostAxes:()=>HX,getPermuted:()=>wQ,getRaggedRank:()=>CQ,getReductionAxes:()=>St,getReshaped:()=>AQ,getReshapedPermuted:()=>NQ,getRowPartitionTypesHelper:()=>IQ,getSliceBeginCoords:()=>DQ,getSliceSize:()=>RQ,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>JQ,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>e7,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>t7,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>o7,getSparseReshapeInputOutputMismatchErrorMessage:()=>a7,getSparseReshapeInputOutputMultipleErrorMessage:()=>s7,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>r7,getSparseReshapeNegativeOutputDimErrorMessage:()=>n7,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>l7,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>i7,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>u7,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>p7,getUndoAxesPermutation:()=>yh,isIdentityPermutation:()=>YQ,log:()=>r6,mergeRealAndImagArrays:()=>$Q,prepareAndValidate:()=>Q1,prepareSplitSize:()=>QQ,segment_util:()=>pA,shouldFuse:()=>il,slice_util:()=>Tt,splitRealAndImagArrays:()=>BQ,tupleValuesAreOne:()=>es,upcastType:()=>Mt,validateDefaultValueShape:()=>kQ,validateInput:()=>Db,validateUpdateShape:()=>Bv,warn:()=>mi});function yQ(r,t){let e=r[0].length;r.forEach((o,s)=>{D(o.length===e,()=>`Error in concat${e}D: rank of tensors[${s}] must be the same as the rank of the rest (${e})`)}),D(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);let n=r[0];r.forEach((o,s)=>{for(let a=0;a<e;a++)D(a===t||o[a]===n[a],()=>`Error in concat${e}D: Shape of tensors[${s}] (${o}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function TQ(r,t){let e=r[0].slice();for(let n=1;n<r.length;n++)e[t]+=r[n][t];return e}var FF=(a=>(a[a.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",a[a.VALUE_ROWIDS=1]="VALUE_ROWIDS",a[a.ROW_LENGTHS=2]="ROW_LENGTHS",a[a.ROW_SPLITS=3]="ROW_SPLITS",a[a.ROW_LIMITS=4]="ROW_LIMITS",a[a.ROW_STARTS=5]="ROW_STARTS",a))(FF||{});function xQ(r,t,e){let n=new Array;if(e==null&&t==null)return n;if(t==null)for(;n.length<r+e.length;)n.push(-1);else n=t.slice();if(e==null)return n;if(r+e.length!==n.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${r+e.length}, but shape.rank = ${n.length}`);for(let o=1;o<e.length;++o){let s=e[o],a=n[n.length-e.length+o],i=n[a];if(s>=0)if(i>=0){if(i!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${o+r}] = ${s} but shape[${o+r}] = ${i}`)}else n[a]=s}return n}function IQ(r){let t={FIRST_DIM_SIZE:0,VALUE_ROWIDS:1,ROW_LENGTHS:2,ROW_SPLITS:3,ROW_LIMITS:4,ROW_STARTS:5},e=[];for(let n of r)if(n in t)e.push(t[n]);else break;return e}function CQ(r){return r.length===0?0:r[0]===0?r.length-1:r.length}function kQ(r,t){if(r==null||t==null)return;let e=r.length,n=t.length;if(e>=n)throw new Error(`defaultValue.shape=${r} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${n})`);for(let o=0;o<Math.min(e,n-1);++o){let s=r[o],a=t[o+1];if(s>=0&&a>=0&&s!==1&&s!==a)throw new Error(`defaultValue.shape=${r}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${o-r.length}] = ${s} but ragged tensor input.flatValues.shape[${o-r.length}] = ${a}`)}}var Ny=30;function SQ(r){return r<=Ny?r:gm(r,Math.floor(Math.sqrt(r)))}function vQ(r,t,e){let n=e*(typeof r=="number"?r:r[0]),o=t*(typeof r=="number"?r:r[1]);return[n,o]}function AQ(r,t,e,n=!0){let o=[];if(n)o=o.concat(t.slice(0)),o.push(r[0]/e),o=o.concat(r.slice(1));else{o=o.concat(r[0]);let s=t.length;for(let a=0;a<s;++a)o=o.concat([r[a+1]/t[a],t[a]]);o=o.concat(r.slice(s+1))}return o}function wQ(r,t,e=!0){let n=[];if(e){n.push(t);for(let o=t+1;o<r;++o)o<=2*t?(n.push(o),n.push(o-(t+1))):n.push(o)}else{let o=[],s=[];for(let a=1;a<r;++a)a>=t*2+1||a%2===1?s.push(a):o.push(a);n.push(...o),n.push(0),n.push(...s)}return n}function NQ(r,t,e,n=!0){let o=[];n?o.push(r[0]/e):o.push(r[0]*e);for(let s=1;s<r.length;++s)s<=t.length?n?o.push(t[s-1]*r[s]):o.push(r[s]/t[s-1]):o.push(r[s]);return o}function DQ(r,t){let e=[0];for(let n=0;n<t;++n)e.push(r[n][0]);return e}function RQ(r,t,e){let n=r.slice(0,1);for(let o=0;o<e;++o)n.push(r[o+1]-t[o][0]-t[o][1]);return n}var aA=1.7580993408473768,iA=1.0507009873554805;var FQ=.3275911,PQ=.254829592,MQ=-.284496736,EQ=1.421413741,LQ=-1.453152027,_Q=1.061405429;function $Q(r,t){if(r.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${t.length}.`);let e=new Float32Array(r.length*2);for(let n=0;n<e.length;n+=2)e[n]=r[n/2],e[n+1]=t[n/2];return e}function BQ(r){let t=new Float32Array(r.length/2),e=new Float32Array(r.length/2);for(let n=0;n<r.length;n+=2)t[n/2]=r[n],e[n/2]=r[n+1];return{real:t,imag:e}}function OQ(r){let t=Math.ceil(r.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let o=0;o<r.length;o+=4)e[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:e,imag:n}}function zQ(r){let t=Math.floor(r.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let o=2;o<r.length;o+=4)e[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:e,imag:n}}function GQ(r,t){let e=r[t*2],n=r[t*2+1];return{real:e,imag:n}}function UQ(r,t,e,n){r[n*2]=t,r[n*2+1]=e}function WQ(r,t){let e=new Float32Array(r/2),n=new Float32Array(r/2);for(let o=0;o<Math.ceil(r/2);o++){let s=(t?2:-2)*Math.PI*(o/r);e[o]=Math.cos(s),n[o]=Math.sin(s)}return{real:e,imag:n}}function KQ(r,t,e){let n=(e?2:-2)*Math.PI*(r/t),o=Math.cos(n),s=Math.sin(n);return{real:o,imag:s}}var uA="->",VQ=/->/g,PF=",",MF="...";function HQ(r,t){r=r.replace(/\s/g,"");let e=(r.length-r.replace(VQ,"").length)/uA.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${uA}").`);let[n,o]=r.split(uA);D(n.indexOf(MF)===-1,()=>`The ellipsis notation ("${MF}") is not supported yet.`);let s=n.split(PF),a=s.length;if(t!==a)throw new Error(`Expected ${a} input tensors, received ${t}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let c=0;c<o.length;++c){let d=o[c];if(!s.some(f=>f.indexOf(d)!==-1))throw new Error(`Output subscripts contain the label ${d} not present in the input subscripts.`);i.indexOf(d)===-1&&i.push(d)}for(let c=0;c<n.length;++c){let d=n[c];i.indexOf(d)===-1&&d!==PF&&i.push(d)}let u=new Array(s.length);for(let c=0;c<a;++c){if(new Set(s[c].split("")).size!==s[c].length)throw new Error(`Found duplicate axes in input component ${s[c]}. Support for duplicate axes in input is not implemented yet.`);u[c]=[];for(let d=0;d<s[c].length;++d)u[c].push(i.indexOf(s[c][d]))}let p=i.length,l=o.length,m=[];for(let c=l;c<p;++c)m.push(c);return{allDims:i,summedDims:m,idDims:u}}function qQ(r,t){let e=new Array(r);e.fill(-1);for(let o=0;o<t.length;++o)e[t[o]]=o;let n=[];for(let o=0;o<r;++o)e[o]===-1&&n.push(o);return e=e.filter(o=>o!==-1),{permutationIndices:e,expandDims:n}}function jQ(r,t,e){let n=new Array(r);for(let o=0;o<e.length;++o){let s=e[o].shape;for(let a=0;a<t[o].length;++a)n[t[o][a]]===void 0?n[t[o][a]]=s[a]:D(n[t[o][a]]===s[a],()=>`Expected dimension ${n[t[o][a]]} at axis ${a} of input shaped ${JSON.stringify(s)}, but got dimension ${s[a]}`)}}function XQ(r,t){let e=r,n=[],o=0;r.length===0&&e.push(-1),o=r.length+1;for(let a=0;a<o;++a)n.push([]);let s=[];for(let a=0;a<e.length;++a){let i=e[a],u=ZQ(t,i);for(let p of u)s.indexOf(p)===-1&&(n[a].push(p),s.push(p))}return{path:e,steps:n}}function YQ(r){return r.every((t,e)=>t===e)}function ZQ(r,t){let e=[];for(let n=0;n<r.length;++n)(r[n].length===0||r[n].indexOf(t)!==-1||t===-1)&&e.push(n);return e}function QQ(r,t,e=0){let n=[];if(typeof t=="number")D(r.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),n=new Array(t).fill(r.shape[e]/t);else{let o=t.reduce((a,i)=>(i===-1&&(a+=1),a),0);D(o<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let a=t.reduce((i,u)=>u>0?i+u:i);t[s]=r.shape[e]-a}D(r.shape[e]===t.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),n=t}return n}function JQ(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function e7(r,t){return`indices(${r}, 0) is invalid: ${t} < 0`}function t7(r,t,e){return`indices(${r}, 0) is invalid: ${t} >= ${e}`}function r7(r,t){return`only one output dimension may be -1, not both ${r} and ${t}`}function n7(r,t){return`size ${r} must be non-negative, not ${t}`}function o7(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function s7(r,t){let e=et(r),n=et(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${r} outputShape= ${t}`}function a7(r,t){let e=et(r),n=et(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${n}. inputShape=${r} outputShape=${t}`}function i7(){return"segment ids must be >= 0"}function u7(){return"segment ids are not increasing"}function p7(r,t){return`Segment id ${r} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function l7(r,t,e){return`Bad: indices[${r}] == ${t} out of range [0, ${e})`}var pA={};We(pA,{collectGatherOpShapeInfo:()=>d7,computeOutShape:()=>c7,segOpComputeOptimalWindowSize:()=>m7});function m7(r,t){let e=!1,n;for(r<=Ny?(n=r,e=!0):n=gm(r,Math.floor(Math.sqrt(r)));!e;)n>t||n===r?e=!0:n=gm(r,n+1);return n}function c7(r,t,e){let n=[],o=r.length;for(let s=0;s<o;s++)s!==t?n.push(r[s]):n.push(e);return n}function d7(r,t,e,n){let o=t.shape.length,s=r.shape.length;if(n!==0&&(n<-o||n>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${n}`);if(n<0&&(n+=o),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(e<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${e}).`);for(let m=0;m<n;++m)if(r.shape[m]!==t.shape[m])throw new Error(`x.shape[${m}]: ${r.shape[m]} should be equal to indices.shape[${m}]: ${t.shape[m]}.`);let a=r.shape[e],i=[],u=1,p=1,l=1;for(let m=0;m<n;++m)i.push(r.shape[m]),u*=r.shape[m];for(let m=n;m<e;m++)i.push(r.shape[m]),p*=r.shape[m];for(let m=n;m<o;m++)i.push(t.shape[m]);for(let m=e+1;m<s;m++)i.push(r.shape[m]),l*=r.shape[m];return{batchSize:u,sliceSize:l,outerSize:p,dimSize:a,outputShape:i}}function f7(r){try{return r.map(t=>jm(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function h7(r){return r.map(t=>Qu(t))}var yr={};We(yr,{nonMaxSuppressionV3Impl:()=>vy,nonMaxSuppressionV4Impl:()=>Ay,nonMaxSuppressionV5Impl:()=>wy,whereImpl:()=>Ty});var Mn=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Mn.prototype)}},qr=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,qr.prototype)}},O=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,O.prototype)}},ve=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ve.prototype)}},Tc=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Tc.prototype)}};var vh=class{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=t}};function Os(r,t){if(Array.isArray(r)){let e=[];for(let n=0;n<t;n++)e=e.concat(r);return e}else{let e=new Array(t);return e.fill(r),e}}function os(r,t){if(!r)throw new Tc(t)}function mA(r,t){let e=0;for(let n of r)n===t&&e++;return e}function Dr(r){return r.length===1?r[0]:r}function vt(r){return Array.isArray(r)?r:[r]}function zs(r){let e=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function uu(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}var Bs={};function xc(r){if(r==null)return null;let t={};return t.className=r.getClassName(),t.config=r.getConfig(),t}function lA(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(t=>lA(t));else{let t=Object.keys(r);for(let e of t){let n=r[e];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?r[e]=n.value:lA(n))}}}function Ti(r,t={},e={},n="object",o=!1){if(typeof r=="string"){let s=r,a;if(s in e)a=e[s];else if(s in Bs)a=Bs[s];else if(a=t[s],a==null)throw new O(`Unknown ${n}: ${r}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{let s=r;if(s.className==null||s.config==null)throw new O(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let a=s.className,i,u;if(a in e?[i,u]=e[a]:a in Bs?[i,u]=Bs.className:a in t&&([i,u]=t[a]),i==null)throw new O(`Unknown ${n}: ${a}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){let p={};for(let d of Object.keys(Bs))p[d]=Bs[d];for(let d of Object.keys(e))p[d]=e[d];let l=s.config;l.customObjects=p;let m={...Bs};for(let d of Object.keys(e))Bs[d]=e[d];lA(s.config);let c=u(i,s.config,e,o);return Bs={...m},c}else{let p={...Bs};for(let m of Object.keys(e))Bs[m]=e[m];let l=new i(s.config);return Bs={...p},l}}}function g7(r,t){return r<t?-1:r>t?1:0}function Ah(r,t){return-1*g7(r,t)}function Gs(r){if(r==null)return r;let t=[];for(let e of r)t.indexOf(e)===-1&&t.push(e);return t}function EF(r){if(r==null)throw new O(`Invalid value in obj: ${JSON.stringify(r)}`);for(let t in r)if(r.hasOwnProperty(t))return!1;return!0}function xi(r,t,e){if(e!=null&&r.indexOf(e)<0)throw new O(`${e} is not a valid ${t}.  Valid values are ${r} or null/undefined.`)}function Dy(r,t,e=0,n=1/0){return os(e>=0),os(n>=e),Array.isArray(r)&&r.length>=e&&r.length<=n&&r.every(o=>typeof o===t)}function nr(r,t){Array.isArray(r)?(y.assert(r.length>0,()=>`${t} is unexpectedly an empty array.`),r.forEach((e,n)=>nr(e,`element ${n+1} of ${t}`))):y.assert(Number.isInteger(r)&&r>0,()=>`Expected ${t} to be a positive integer, but got ${LF(r)}.`)}function LF(r){return r===null?"null":Array.isArray(r)?"["+r.map(t=>LF(t)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function _F(r,t,e){let n=e!=null?e():y.now(),o;return(...a)=>{let i=e!=null?e():y.now();return i-n<t||(n=i,o=r(...a)),o}}function Ry(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}var b7=0;function Py(){return b7++}var Fy={};function Cp(r=""){return r in Fy||(Fy[r]=0),Fy[r]+=1,r+Fy[r].toString()}var $F=["channelsFirst","channelsLast"],BF=["nearest","bilinear"],OF=["valid","same","causal"],zF=["max","avg"],GF=["sum","mul","concat","ave"];var Ic=new Map;function Gt(r){xi($F,"DataFormat",r)}function WF(r){xi(BF,"InterpolationFormat",r)}function gn(r){xi(OF,"PaddingMode",r)}function cA(r){xi(zF,"PoolMode",r)}var wh=[],UF="/";function Ua(r,t){wh.push(r);try{let e=t();return wh.pop(),e}catch(e){throw wh.pop(),e}}function y7(){return wh.length===0?"":wh.join(UF)+UF}function My(r){if(!KF(r))throw new Error("Not a valid tensor name: '"+r+"'");return y7()+r}function Ey(r){if(!KF(r))throw new Error("Not a valid tensor name: '"+r+"'");Ic.has(r)||Ic.set(r,0);let t=Ic.get(r);if(Ic.set(r,Ic.get(r)+1),t>0){let e=`${r}_${t}`;return Ic.set(e,1),e}else return r}var T7=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function KF(r){return!!r.match(T7)}function VF(r){return r===parseInt(r.toString(),10)}function Us(r,t,e){t==null&&(t=0),e==null&&(e=r.length);let n=1;for(let o=t;o<e;++o)n*=r[o];return n}function pl(r){if(r.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<r.length;e++){let n=r[e];n<t&&(t=n)}return t}function Wa(r){if(r.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<r.length;e++){let n=r[e];n>t&&(t=n)}return t}function rn(r,t){if(t<r)throw new O(`end (${t}) < begin (${r}) is forbidden.`);let e=[];for(let n=r;n<t;++n)e.push(n);return e}var dA;function mr(){return dA==null&&(dA=q1().epsilon()),dA}function bn(){return"channelsLast"}function lu(r,t){return te(r,t)}function mu(r,t=-1){let e=r.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),L(r,e)}function HF(r,t){return z(()=>{if(r.shape.length!==2)throw new O(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let e=mu(r,1);return _y(e,[1,t,1])})}function qF(r){let t=[Us(r.shape)];return L(r,t)}function jF(r){if(r.rank<=1)throw new O(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let t=[r.shape[0],Us(r.shape,1)];return L(r,t)}function pu(r,t,e){return z(()=>{switch(r.rank){case 1:return cc(r,t,e);case 2:return Ch(r,[t,0],[e,r.shape[1]]);case 3:return dc(r,[t,0,0],[e,r.shape[1],r.shape[2]]);case 4:return rl(r,[t,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3]]);case 5:return Be(r,[t,0,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return Be(r,[t,0,0,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new O(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function fA(r,t,e){return z(()=>{switch(r.rank){case 1:return cc(r,t,e);case 2:return Ch(r,[0,t],[r.shape[0],e]);case 3:return dc(r,[0,0,t],[r.shape[0],r.shape[1],e]);case 4:return rl(r,[0,0,0,t],[r.shape[0],r.shape[1],r.shape[2],e]);default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Nh(r,t,e,n){return z(()=>{switch(r.rank){case 1:return cc(r,t,e);case 2:switch(n){case 1:return pu(r,t,e);case 2:return fA(r,t,e);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return pu(r,t,e);case 2:return dc(r,[0,t,0],[r.shape[0],e,r.shape[2]]);case 3:return fA(r,t,e);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return pu(r,t,e);case 2:return rl(r,[0,t,0,0],[r.shape[0],e,r.shape[2],r.shape[3]]);case 3:return rl(r,[0,0,t,0],[r.shape[0],r.shape[1],e,r.shape[3]]);case 4:return fA(r,t,e);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Cc(r,t=-1){let e;return t<0&&(e=r[0].rank,e!==0?t=e:t=0),t===r[0].rank&&(t=-1),lt(r,t)}function gA(r,t){switch(r.rank){case 1:return Ob([r,t]);case 2:return zb([r,t],0);case 3:return Gb([r,t],0);case 4:return Ub([r,t],0);default:throw new O(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function _y(r,t){if(Array.isArray(t)||(t=[t]),r.rank!==t.length)throw new O(`The length of input n (${t.length}) does not match the number of dimensions in input x (${r.rank})`);return Jr(r,t)}function kc(r,t=0,e=1,n,o){return tl(r,t,e,n,o)}function Ws(r,t,e,n){if(r.rank<2||t.rank<2)throw new ve(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${t.shape}`);if(t.rank>=3){let o=r.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(o!==s)throw new ve(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${t.shape}`)}if(r.rank===2&&t.rank===2)return fp.matMul({a:r,b:t,transposeA:!1,transposeB:!1,bias:n?hA(r.rank,n,bn()):null,activation:e});{let o=r.shape.slice(),s=o.pop();r=L(r,[-1,s]);let a=t.shape.slice(),i=a.pop(),u=a.pop(),p=[...a,i],l=Array.from({length:t.rank},(f,h)=>h===0?t.rank-2:h<=t.rank-2?h-1:h);t=L(Oe(t,l),[u,-1]);let m=[...o,...p],c=!1,d=!1;return L(fp.matMul({a:r,b:t,transposeA:c,transposeB:d,bias:n?hA(r.rank,n,bn()):null,activation:e}),m)}}function $y(r,t,e){return z(()=>(Array.isArray(t)?t=Kt(t,"int32"):t=te(t,"int32"),mp(r,t,e)))}function ll(r){return M(r,r)}function hA(r,t,e){let n=t.shape;if(t.rank!==1&&t.rank!==r)throw new O(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${r}`);if(r===5){if(e==="channelsFirst")return n.length===1?L(t,[1,n[0],1,1,1]):L(t,[1,n[3],n[0],n[1],n[2]]);if(e==="channelsLast")return n.length===1?L(t,[1,1,1,1,n[0]]):L(t,[1].concat(n))}else if(r===4){if(e==="channelsFirst")return n.length===1?L(t,[1,n[0],1,1]):L(t,[1,n[2],n[0],n[1]]);if(e==="channelsLast")return n.length===1?L(t,[1,1,1,n[0]]):L(t,[1].concat(n))}else if(r===3){if(e==="channelsFirst")return n.length===1?L(t,[1,n[0],1]):L(t,[1,n[1],n[0]]);if(e==="channelsLast")return n.length===1?L(t,[1,1,n[0]]):L(t,[1].concat(n))}else if(r<3)return t;throw new O(`Unsupported input rank by biasAdd: ${t.rank}`)}function yn(r,t,e){return z(()=>(e==null&&(e=bn()),Gt(e),Y(r,hA(r.rank,t,e))))}function XF(r,t=1){if(t!==1)throw new ve(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return pp(r)}function YF(r){return z(()=>me(r,Y(Ot(r),1)))}function By(r,t,e,n){return z(()=>rA(r,t,e,n))}function ZF(r){return z(()=>{let t=Y(.5,M(.2,r));return Ur(t,0,1)})}function kp(r,t,e=!1){return e?r():t()}var QF=["fanIn","fanOut","fanAvg"],JF=["normal","uniform","truncatedNormal"];function x7(r){xi(QF,"FanMode",r)}function I7(r){xi(JF,"Distribution",r)}var Tn=class extends Q.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Sc=class extends Tn{apply(t,e){return xt(t,e)}};Sc.className="Zeros";Q.registerClass(Sc);var Sp=class extends Tn{apply(t,e){return gr(t,e)}};Sp.className="Ones";Q.registerClass(Sp);var vc=class extends Tn{constructor(e){super();if(typeof e!="object")throw new O(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new O(`config must have value set but got ${e}`);this.value=e.value}apply(e,n){return z(()=>M(de(this.value),gr(e,n)))}getConfig(){return{value:this.value}}};vc.className="Constant";Q.registerClass(vc);var Ac=class extends Tn{constructor(e){super();this.DEFAULT_MINVAL=-.05;this.DEFAULT_MAXVAL=.05;this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,n){return gi(e,this.minval,this.maxval,n)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Ac.className="RandomUniform";Q.registerClass(Ac);var wc=class extends Tn{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new ve(`randomNormal does not support dType ${n}.`);return kc(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};wc.className="RandomNormal";Q.registerClass(wc);var Nc=class extends Tn{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new ve(`truncatedNormal does not support dType ${n}.`);return bc(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Nc.className="TruncatedNormal";Q.registerClass(Nc);var Dc=class extends Tn{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,n){return z(()=>{if(e.length!==2||e[0]!==e[1])throw new O("Identity matrix initializer can only be used for 2D square matrices.");return M(this.gain,Zp(e[0]))})}getConfig(){return{gain:this.gain}}};Dc.className="Identity";Q.registerClass(Dc);function C7(r,t="channelsLast"){let e,n;if(Gt(t),r.length===2)e=r[0],n=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(t==="channelsFirst"){let o=Us(r,2);e=r[1]*o,n=r[0]*o}else if(t==="channelsLast"){let o=Us(r,0,r.length-2);e=r[r.length-2]*o,n=r[r.length-1]*o}}else{let o=Us(r);e=Math.sqrt(o),n=Math.sqrt(o)}return[e,n]}var jr=class extends Tn{constructor(e){super();if(e.scale<0)throw new O(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,x7(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,I7(this.distribution),this.seed=e.seed}apply(e,n){let o=C7(e),s=o[0],a=o[1],i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,s):this.mode==="fanOut"?i/=Math.max(1,a):i/=Math.max(1,(s+a)/2),this.distribution==="normal"){let u=Math.sqrt(i);if(n=n||"float32",n!=="float32"&&n!=="int32")throw new ve(`${this.getClassName()} does not support dType ${n}.`);return bc(e,0,u,n,this.seed)}else{let u=Math.sqrt(3*i);return gi(e,-u,u,n)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};jr.className="VarianceScaling";Q.registerClass(jr);var ml=class extends jr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return jr.className}};ml.className="GlorotUniform";Q.registerClass(ml);var cl=class extends jr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return jr.className}};cl.className="GlorotNormal";Q.registerClass(cl);var dl=class extends jr{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return jr.className}};dl.className="HeNormal";Q.registerClass(dl);var fl=class extends jr{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return jr.className}};fl.className="HeUniform";Q.registerClass(fl);var hl=class extends jr{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return jr.className}};hl.className="LeCunNormal";Q.registerClass(hl);var gl=class extends jr{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return jr.className}};gl.className="LeCunNormal";Q.registerClass(gl);var Rc=class extends Tn{constructor(e){super();this.DEFAULT_GAIN=1;if(this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new ve("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,n){return z(()=>{if(e.length<2)throw new ve("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let o=e[0]>e[1]?[e[1],e[0]]:e,s=kc(o,0,1,"float32"),a=sA.gramSchmidt(s);return e[0]>e[1]&&(a=Oe(a)),M(this.gain,a)})}getConfig(){return{gain:this.gain,seed:this.seed}}};Rc.className="Orthogonal";Q.registerClass(Rc);var eP={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function tP(r,t={}){return Ti(r,Q.SerializationMap.getMap().classNameMap,t,"initializer")}function Ft(r){return xc(r)}function It(r){if(typeof r=="string"){let t=r in eP?eP[r]:r;if(t==="GlorotNormal")return new cl;if(t==="GlorotUniform")return new ml;if(t==="HeNormal")return new dl;if(t==="HeUniform")return new fl;if(t==="LeCunNormal")return new hl;if(t==="LeCunUniform")return new gl;{let e={};return e.className=t,e.config={},tP(e)}}else return r instanceof Tn?r:tP(r)}function Oy(r){return Array.isArray(r)&&Array.isArray(r[0])}function Fc(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function Ee(r){let t;if(Array.isArray(r)){if(r.length!==1)throw new O(`Expected Tensor length to be 1; got ${r.length}`);t=r[0]}else t=r;return t}function tt(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new O(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function Pc(r){let t=0;for(let e of r)e.shape.length===0?t+=1:t+=e.shape.reduce((n,o)=>n*o);return t}var nP="Variable",Dh=class{constructor(t,e="float32",n=nP,o=!0,s=null){this.dtype=e??"float32",this.shape=t.shape,this.id=Py(),n=n??nP,this.originalName=My(n),this.name=Ey(this.originalName),this.trainable_=o,this.constraint=s,this.val=yy(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),S7(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}};function S7(r,t){if(r.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(t.shape))}function Rh(r){return r.map(t=>t.read())}function Mc(r){r.forEach(t=>{t[0].write(t[1])})}var At=class{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}},on=class{constructor(t,e,n,o,s,a,i){this.dtype=t;this.shape=e;this.sourceLayer=n;this.inputs=o;this.callArgs=s;this.outputTensorIndex=i;this.id=Py(),a!=null&&(this.originalName=My(a),this.name=Ey(this.originalName)),this.rank=e.length}},v7=0,cu=class{constructor(t,e){this.callArgs=e;this.id=v7++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(let n of t.inboundLayers)n?.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){let t=[];for(let e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},A7=0,_e=class extends Q.Serializable{constructor(e={}){super();this._callHook=null;this._addedWeightNames=[];this._stateful=!1;this.id=A7++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let n=e.name;if(!n){let o=this.getClassName();n=zs(o)+"_"+Cp(o)}if(this.name=n,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let o;if(e.batchInputShape!=null)o=e.batchInputShape;else if(e.inputShape!=null){let a=null;e.batchSize!=null&&(a=e.batchSize),o=[a].concat(e.inputShape)}this.batchInputShape=o;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,n){return e.name+"_ib-"+n.toString()}getNodeAtIndex(e,n){if(this.inboundNodes.length===0)throw new qr(`The layer has never been called and thus has no defined ${n}.`);if(this.inboundNodes.length<=e)throw new O(`Asked to get ${n} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Dr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Dr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Mn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Mn(`Layer ${this.name} is not connected, no input to return.`);return Dr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Mn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Mn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Dr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(n=>n.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=vt(e),this.inputSpec==null||this.inputSpec.length===0)return;let n=vt(this.inputSpec);if(e.length!==n.length)throw new O(`Layer ${this.name} expects ${n.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let o=0;o<e.length;o++){let s=e[o],a=n[o];if(a==null)continue;let i=s.rank;if(a.ndim!=null&&i!==a.ndim)throw new O(`Input ${o} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${i}`);if(a.maxNDim!=null&&i>a.maxNDim)throw new O(`Input ${o} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${i}`);if(a.minNDim!=null&&i<a.minNDim)throw new O(`Input ${o} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${i}.`);if(a.dtype!=null&&s.dtype!==a.dtype)throw new O(`Input ${o} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${s.dtype}.`);if(a.axes){let u=s.shape;for(let p in a.axes){let l=Number(p),m=a.axes[p],c=l>=0?u[l]:u[u.length+l];if(m!=null&&[m,null].indexOf(c)===-1)throw new O(`Input ${o} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${m} but got shape ${u}.`)}}if(a.shape!=null)for(let u=0;u<a.shape.length;++u){let p=a.shape[u],l=s.shape[u];if(p!=null&&l!=null&&p!==l)throw new O(`Input ${o} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${s.shape}.`)}}}call(e,n){return e}invokeCallHook(e,n){this._callHook!=null&&this._callHook(e,n)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,n){n=n||{},this.assertNotDisposed();let o=vt(e),s=!0;for(let i of o)if(!(i instanceof on)){s=!1;break}let a=!0;for(let i of o)if(i instanceof on){a=!1;break}if(s===a)throw new O("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ua(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let i=[];for(let u of vt(e))i.push(u.shape);this.build(Dr(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let i=this.call(e,n),u=vt(i),p=[];for(let l of u)o.indexOf(l)!==-1&&(l=l.clone()),p.push(l);if(i=Dr(p),this.activityRegularizer!=null)throw new ve("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{let i=w7(e),u=this.computeOutputShape(i),p,l=N7(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),u!=null&&u.length>0&&Array.isArray(u[0])?p=u.map((m,c)=>new on(l,m,this,vt(e),n,this.name,c)):p=new on(l,u,this,vt(e),n,this.name),this.addInboundNode(e,p,null,null,i,u,n),this._refCount++,this.activityRegularizer!=null)throw new ve("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return p}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let n=!1;this.batchInputShape.forEach((o,s)=>{o!=null&&e[s]!=null&&e[s]!==o&&(n=!0)}),n&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Mn(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let n of this.inboundNodes){let o=JSON.stringify(n.outputShapes);e.indexOf(o)===-1&&e.push(o)}if(e.length===1){let n=this.inboundNodes[0].outputShapes;return Array.isArray(n)&&Array.isArray(n[0])&&n.length===1?n[0]:n}else throw new Mn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new qr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Pc(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Rh(e?this.trainableWeights:this.weights)}setWeights(e){z(()=>{let n=this.weights;if(n.length!==e.length)throw new O(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${n.length} weights. Provided weights: ${e}...`);if(n.length===0)return;let o=[],s=Rh(n);for(let a=0;a<s.length;++a){let i=s[a],u=n[a],p=e[a];if(!y.arraysEqual(i.shape,p.shape))throw new O(`Layer weight shape ${i.shape} not compatible with provided weight shape ${p.shape}`);o.push([u,p])}Mc(o)})}addWeight(e,n,o,s,a,i,u,p){if(this._addedWeightNames.indexOf(e)!==-1)throw new O(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),o==null&&(o="float32"),this.fastWeightInitDuringBuild&&(s=p!=null?p():It("zeros"));let l=s.apply(n,o),m=new Dh(l,o,e,i,u);return l.dispose(),a!=null&&this.addLoss(()=>a.apply(m.read())),i==null&&(i=!0),i?this._trainableWeights.push(m):this._nonTrainableWeights.push(m),m}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=vt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,n){if(!this.supportsMasking){if(n!=null)if(Array.isArray(n))n.forEach(o=>{if(o!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return n}addInboundNode(e,n,o,s,a,i,u=null){let p=vt(e);n=vt(n),o=vt(o),s=vt(s),a=Fc(a),i=Fc(i);let l=[],m=[],c=[];for(let d of p)l.push(d.sourceLayer),m.push(d.nodeIndex),c.push(d.tensorIndex);new cu({outboundLayer:this,inboundLayers:l,nodeIndices:m,tensorIndices:c,inputTensors:p,outputTensors:n,inputMasks:o,outputMasks:s,inputShapes:a,outputShapes:i},u);for(let d=0;d<n.length;d++)n[d].sourceLayer=this,n[d].nodeIndex=this.inboundNodes.length-1,n[d].tensorIndex=d}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function w7(r){r=vt(r);let t=[];for(let e of r)t.push(e.shape);return Dr(t)}function N7(r){return"float32"}function bA(r,t,e){if((t==null||e!=null&&e>0)&&(t=r.sourceLayer,e=r.nodeIndex),t.inboundNodes.length===0)return[r];{let n=t.inboundNodes[e];if(n.inboundLayers.length===0)return n.inputTensors;{let o=[];for(let s=0;s<n.inboundLayers.length;s++){let a=n.inputTensors[s],i=n.inboundLayers[s],u=n.nodeIndices[s],p=bA(a,i,u);for(let l of p)o.indexOf(l)===-1&&o.push(l)}return o}}}var Ka=class extends _e{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:Cp("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new O("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let n=e.batchInputShape;if(n==null){if(e.inputShape==null)throw new O("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");n=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new O("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let o=e.dtype||"float32";this.batchInputShape=n,this.dtype=o,this.inputSpec=[{shape:n}];let s=new on(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new cu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[n],outputShapes:[n]})}apply(e,n){throw new O(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};Ka.className="InputLayer";Q.registerClass(Ka);function zy(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new O("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=r.batchShape;r.shape!=null&&t==null&&(t=[null].concat(r.shape));let e=r.dtype;return e==null&&(e="float32"),new Ka({batchInputShape:t,name:r.name,dtype:e,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}function D7(r,t){if(r.dtype==null||r.dtype===t.dtype)return t;try{return te(t,r.dtype)}catch{throw new O(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var Ks=class{constructor(t){this.id2Value={};this.id2Mask={};this.name2Id={};if(t instanceof Ks)for(let e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(let e of t)this.add(e.key,e.value)}}add(t,e,n){if(this.id2Value[t.id]==null)this.id2Value[t.id]=D7(t,e),this.name2Id[t.name]=t.id,n!=null&&(this.id2Mask[t.id]=n);else throw new O(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof on){if(this.id2Value[t.id]==null)throw new O(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{let e=this.name2Id[t];if(e==null)throw new O(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof on){if(this.id2Value[t.id]==null)throw new O(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{let e=this.name2Id[t];if(e==null)throw new O(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&Ne(this.id2Mask)}},Gy=new vh,Uy=new vh;function sP(r){Gy?.setMaxEntries(r),Uy?.setMaxEntries(r)}function bl(r,t,e,n){let o=e==null?!1:e.training,s=Array.isArray(r),a=s?r:[r],i=a.map(f=>f.name),u=[],p=t.names();for(let f of i)p.indexOf(f)!==-1?u.push(t.getValue(f)):u.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);let l=i.join(",")+"|"+t.names().sort().join(","),m=Gy.get(l),c;if(m==null){let f=R7(a,t);m=f.sorted,c=f.recipientCounts,Gy.put(l,m),Uy.put(l,c)}c={},o||Object.assign(c,Uy.get(l));let d=new Ks(t);for(let f=0;f<m.length;++f){if(n!=null){let P=dh().numTensors;P>n.maxNumTensors&&(n.maxNumTensors=P),P<n.minNumTensors&&(n.minNumTensors=P)}let h=m[f],g=h.sourceLayer;if(g instanceof Ka)continue;let b=[],T=[],x=[],I=!1;for(let P of h.inputs){let E=d.getValue(P),B=d.getMask(P);b.push(E),T.push(B),B!=null&&(I=!0),o||(c[P.name]--,c[P.name]===0&&!t.hasKey(P)&&i.indexOf(P.name)===-1&&!E.isDisposed&&P.sourceLayer.stateful!==!0&&x.push(E))}I&&(e=e||{},e.mask=T[0]);let k=vt(g.apply(b,e)),w=null;g.supportsMasking&&(w=g.computeMask(b,T));let R=P7(h),F=Array.isArray(R)?R:[R];for(let P=0;P<F.length;++P){d.hasKey(F[P])||d.add(F[P],k[P],Array.isArray(w)?w[0]:w);let E=i.indexOf(F[P].name);E!==-1&&(u[E]=k[P])}o||Ne(x)}return d.disposeMasks(),s?u:u[0]}function R7(r,t){y.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let e=[],n={};if(r.length===1){let o=oP(r[0],t);e=o.sorted,n=o.recipientMap}else{let o=new Set;for(let s of r){let{sorted:a,recipientMap:i}=oP(s,t);for(let u of a)o.has(u.name)||(e.push(u),o.add(u.name));for(let u in i)n[u]==null&&(n[u]=new Set),i[u].forEach(p=>n[u].add(p))}}return{sorted:e,recipientCounts:F7(n)}}function F7(r){let t={};for(let e in r)t[e]=r[e].size;return t}function oP(r,t){let e=new Set,n=[],o={};for(let i of t.names())e.add(i);let s=[],a=[];for(s.push(r);s.length>0;){let i=s[s.length-1];if(e.has(i.name)){s.pop();continue}let u=a[a.length-1]===s.length-1;if(i.inputs.length===0||u)s.pop(),n.push(i),e.add(i.name),u&&a.pop();else{a.push(s.length-1);for(let p of i.inputs)o[p.name]==null&&(o[p.name]=new Set),o[p.name].add(i.name),!e.has(p.name)&&s.push(p)}}return{sorted:n,recipientMap:o}}function P7(r){let t;if(r.sourceLayer.inboundNodes.length===1)t=r.sourceLayer.output;else{let e=null;for(let n=0;n<r.sourceLayer.inboundNodes.length;++n)for(let o of r.sourceLayer.inboundNodes[n].outputTensors)if(o.id===r.id){e=n;break}t=r.sourceLayer.getOutputAt(e)}return t}var M7=$();M7.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,sP);var Wy={kernelName:ls,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>M(r,bi(te(e,"float32"),-1))}}};var aP={kernelName:Ei,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=Ke(te(e,"float32")),o=Et(le(de(1),n));return Qe(me(r,o))}}}};var iP={kernelName:Li,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=Et(le(Ke(te(e,"float32")),1));return me(r,n)}}}};var uP={kernelName:vn,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=$e(e.shape,n.shape);return{a:()=>{let i=r,u=St(e.shape,o);return u.length>0&&(i=fe(i,u)),L(i,e.shape)},b:()=>{let i=r,u=St(n.shape,o);return u.length>0&&(i=fe(i,u)),L(i,n.shape)}}}};var pP={kernelName:uo,saveAllInputs:!0,gradFunc:(r,t)=>{let e={};return t.forEach((n,o)=>{e[o]=()=>r.clone()}),e}};var lP={kernelName:po,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>Ae(e)}}};var mP={kernelName:ai,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>Ae(e)}}};var cP={kernelName:Bi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>me(r,Et(le(de(1),Ke(te(e,"float32")))))}}};var dP={kernelName:Oi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=Et(Y(de(1),Ke(te(e,"float32"))));return me(r,n)}}}};var fP={kernelName:ia,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=$e(e.shape,n.shape);return{a:()=>{let i=Y(Ke(e),Ke(n)),u=M(r,me(n,i)),p=St(e.shape,o);return p.length>0&&(u=fe(u,p)),L(u,e.shape)},b:()=>{let i=Y(Ke(e),Ke(n)),u=Qe(M(r,me(e,i))),p=St(n.shape,o);return p.length>0&&(u=fe(u,p)),L(u,n.shape)}}}};var hP={kernelName:zi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>me(r,Y(Ke(te(e,"float32")),1))}}};var gP={kernelName:Gi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>me(r,le(de(1),Ke(te(e,"float32"))))}}};function E7(r,t,e,n,o,s){let a=S(r,"dy","avgPool3dGrad"),i=S(t,"input","avgPool3dGrad"),u=a,p=i,l=!1;i.rank===4&&(l=!0,u=L(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),p=L(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),D(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),D(p.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),Rt("avgPool3dGrad",o,s);let m={dy:u,input:p},c={filterSize:e,strides:n,pad:o,dimRoundingMode:s},d=N.runKernel(Tm,m,c);return l?L(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var bP=A({avgPool3dGrad_:E7});var yP={kernelName:Eu,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{filterSize:o,strides:s,pad:a,dimRoundingMode:i}=e;return{x:()=>bP(r,n,o,s,a,i)}}};function L7(r,t,e,n,o){let s=S(r,"dy","avgPoolGrad"),a=S(t,"input","avgPoolGrad");D(a.rank===s.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${s.rank})`);let i=a,u=s,p=!1;a.rank===3&&(p=!0,i=L(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=L(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),D(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let l={dy:u,input:i},m={filterSize:e,strides:n,pad:o},c=N.runKernel(ym,l,m);return p?L(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var TP=A({avgPoolGrad_:L7});var xP={kernelName:lo,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{filterSize:o,strides:s,pad:a}=e;return{x:()=>TP(r,n,o,s,a)}}};var IP={kernelName:mo,inputsToSave:["a","b"],gradFunc:(r,t,e)=>{let[n,o]=t,{transposeA:s,transposeB:a}=e;return!s&&!a?{a:()=>Ge(r,o,!1,!0),b:()=>Ge(n,r,!0,!1)}:!s&&a?{a:()=>Ge(r,o,!1,!1),b:()=>Ge(r,n,!0,!1)}:s&&!a?{a:()=>Ge(o,r,!1,!0),b:()=>Ge(n,r,!1,!1)}:{a:()=>Ge(o,r,!0,!0),b:()=>Ge(r,n,!0,!0)}}};var CP={kernelName:ms,gradFunc:(r,t,e)=>{let{blockShape:n,crops:o}=e;return{x:()=>lc(r,n,o)}}};var kP={kernelName:B0,gradFunc:(r,t,e)=>{let n=e,o=n.inputShape,s=n.shape,a=Array.from(s);for(let u=o.length-1;u>=0;u--)if(o[u]===s[u])a[u]=1;else if(o[u]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);let i=[];for(let u=0;u<a.length;u++)a[u]>1&&i.push(u);return{x:()=>fe(r,i,!0)}}};var SP={kernelName:zn,gradFunc:r=>({x:()=>r.clone()})};var vP={kernelName:co,gradFunc:r=>({x:()=>Ae(r)})};var AP={kernelName:Gn,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{clipValueMin:o,clipValueMax:s}=e;return{x:()=>zt(en(Es(n,o),Ls(n,s)),r,Ae(r))}}};var wP={kernelName:_u,inputsToSave:["x"],gradFunc:Wy.gradFunc};var NP={kernelName:cs,saveAllInputs:!0,gradFunc:(r,t,e)=>{let n=t.map(u=>u.shape),{axis:o}=e,s=fr(o,t[0].shape)[0],a=n.map(u=>u[s]);return Nr(r,a,s).map(u=>()=>u)}};var DP={kernelName:fo,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let[n,o]=t,{dilations:s,strides:a,pad:i,dataFormat:u}=e;return D(es(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>oc(n.shape,r,o,a,i,u),filter:()=>yc(n,r,o.shape,a,i,u)}}};var RP={kernelName:ho,inputsToSave:["dy","filter"],gradFunc:(r,t,e)=>{let[n,o]=t,{strides:s,pad:a,dataFormat:i,dimRoundingMode:u}=e;return{dy:()=>rs(r,o,s,a,i,1,u),filter:()=>yc(r,n,o.shape,s,a,i,u)}}};function _7(r,t,e,n,o){let s=r;r.rank===4&&(s=L(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let a=t;a.rank===4&&(a=L(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),D(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),D(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),D(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),D(s.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${e[3]}.`),D(a.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${e[4]}).`);let i={x:s,dy:a},u={strides:n,pad:o,filterShape:e};return N.runKernel(km,i,u)}var FP=A({conv3DBackpropFilter_:_7});var PP={kernelName:$u,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let{dilations:n,strides:o,pad:s}=e;D(es(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[a,i]=t;return{x:()=>Hb(a.shape,r,i,o,s),filter:()=>FP(a,r,i.shape,o,s)}}};var MP={kernelName:go,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>M(Qe(dy(te(e,"float32"))),r)}}};var EP={kernelName:bo,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>M(fy(te(e,"float32")),r)}}};var LP={kernelName:yo,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{axis:o,exclusive:s,reverse:a}=e;return{x:()=>{let i=jv([o],n.rank),u=Xb(r,o,s,!a);return i!=null&&(u=Oe(u,i)),u}}}};var _P={kernelName:To,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let{dilations:n,strides:o,pad:s,dimRoundingMode:a}=e,i=n??[1,1];D(es(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[u,p]=t;return D(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),D(p.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${p.rank}.`),D(u.shape[3]===p.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),D(Er(o,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${i}'.`),Rt("depthwiseConv2d",s,a),{x:()=>Cy(u.shape,r,p,o,s,i,a),filter:()=>Iy(u,r,p.shape,o,s,i,a)}}};var $P={kernelName:Bu,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let[n,o]=t,s={x:n,filter:o,dy:r},a={x:n,filter:o,dy:r};return{x:()=>N.runKernel(eh,s,e),filter:()=>N.runKernel(th,a,e)}}};var BP={kernelName:Io,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t,n={dy:r,y:e};return{x:()=>N.runKernel(Dm,n)}}};var OP={kernelName:Ui,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t,n=M(hr(Qe(Ke(e))),2/Math.sqrt(Math.PI));return{x:()=>M(r,n)}}};var zP={kernelName:Co,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>M(r,e)}}};var GP={kernelName:ds,inputsToSave:["input"],gradFunc:(r,t)=>{let[e]=t;return{input:()=>L(r,e.shape)}}};var UP={kernelName:ca,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>M(r,hr(e))}}};var WP={kernelName:ko,gradFunc:r=>({x:()=>Ae(r)})};var KP={kernelName:So,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=$e(e.shape,n.shape);return{a:()=>{let i=me(r,te(n,"float32")),u=St(e.shape,o);return u.length>0?L(fe(i,u),e.shape):i},b:()=>{let i=M(r,te(e,"float32")),u=St(n.shape,o);u.length>0&&(i=L(fe(i,u),n.shape));let p=Ke(n);return Qe(me(i,te(p,"float32")))}}}};var VP={kernelName:vo,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,t,e)=>{let{varianceEpsilon:n}=e,[o,s,a,i]=t,u=i??de(1),p=St(s.shape,o.shape),l=[];if(s.rank===1){for(let I=0;I<o.shape.length-1;++I)l.push(o.shape[I]);l.push(1)}let m=le(o,s),c=M(r,u),d=ly(Y(a,de(n))),f=M(M(M(d,d),d),de(-.5));return{x:()=>s.rank===1?L(M(M(r,Jr(L(d,[1,1,1,s.shape[0]]),l)),u),o.shape):L(M(M(r,d),u),o.shape),mean:()=>{let I=M(M(d,de(-1)),c);return s.rank===1&&(I=fe(I,p)),L(I,s.shape)},variance:()=>{let I=M(M(f,m),c);return s.rank===1&&(I=fe(I,p)),L(I,s.shape)},scale:()=>{let I=M(m,d),k=M(r,I);return s.rank===1&&(k=fe(k,p)),L(k,s.shape)},offset:()=>{let I=r;return s.rank===1&&(I=fe(I,p)),L(I,s.shape)}}}};var jP={kernelName:fs,inputsToSave:["x","indices"],gradFunc:(r,t,e)=>{let[n,o]=t,{axis:s}=e,a=fr(s,n.shape)[0];return{x:()=>{let u=n.shape,p=o.size,l=u.slice(0,a),m=l.length,c=u.slice(s,u.length).slice(1),d=c.length,f=HP(0,m),h=HP(m+1,m+1+d),g=qP([l,[p],c]),b=L(r,g),T=L(o,[p]),x=qP([[m],f,h]),I=Oe(b,x),k=by(I,T,n.shape[a]),w=yh(x);return k=Oe(k,w),k},indices:()=>o}}};function HP(r,t){let e=[];for(let n=r;n<t;++n)e.push(n);return e}function qP(r){let t=[];for(let e=0;e<r.length;++e)for(let n=0;n<r[e].length;++n)t.push(r[e][n]);return t}var XP={kernelName:Ao,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t;return{a:()=>Ae(e),b:()=>Ae(n)}}};var YP={kernelName:Un,gradFunc:r=>({x:()=>te(r,"float32")})};var ZP={kernelName:Wi,gradFunc:r=>({x:()=>Ae(r)})};var QP={kernelName:Ki,gradFunc:r=>({x:()=>Ae(r)})};var JP={kernelName:ga,gradFunc:r=>({x:()=>Ae(r)})};var eM={kernelName:wo,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{alpha:o}=e,s=ur(n,0);return{x:()=>zt(s,r,M(r,o))}}};var tM={kernelName:Vi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>me(r,Y(e,1))}}};var rM={kernelName:No,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>me(r,te(e,"float32"))}}};var nM={kernelName:z0,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n]=t,{axis:o}=e;return{logits:()=>{let a=hr(n);return le(r,M(fe(r,o,!0),a))}}}};function $7(r,t,e,n=5,o=1,s=1,a=.5){let i={x:r,y:t,dy:e},u={depthRadius:n,bias:o,alpha:s,beta:a};return N.runKernel(Mm,i,u)}var oM=A({localResponseNormalizationBackprop_:$7});var sM={kernelName:Gu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n,o]=t,{depthRadius:s,bias:a,alpha:i,beta:u}=e;return{x:()=>oM(n,o,r,s,a,i,u)}}};function Ky(r,t,e,n){return t.rank<e.rank&&(t=L(t,Ms(t.shape,n))),r.rank<e.rank&&(r=L(r,Ms(r.shape,n))),{x:()=>M(r,te(Qr(e,t),r.dtype))}}var yA={kernelName:Do,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let n=e,{reductionIndices:o}=n,s=t[0],a=t[1],i=fr(o,s.shape),u=Ky(r,a,s,i);return{x:()=>u.x()}}};var aM={kernelName:Ro,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t;return{a:()=>M(r,te(Es(e,n),"float32")),b:()=>M(r,te(Yb(e,n),"float32"))}}};function B7(r,t,e,n,o,s,a){let i=S(r,"dy","maxPool3dGrad"),u=S(t,"input","maxPool3dGrad"),p=S(e,"output","maxPool3dGrad"),l=i,m=u,c=p,d=!1;u.rank===4&&(d=!0,l=L(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),m=L(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),c=L(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),D(l.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),D(m.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${m.rank}.`),D(c.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${c.rank}.`),Rt("maxPool3dGrad",s,a);let f={dy:l,input:m,output:c},h={filterSize:n,strides:o,pad:s,dimRoundingMode:a},g=N.runKernel(Lm,f,h);return d?L(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var iM=A({maxPool3dGrad_:B7});var uM={kernelName:Uu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n,o]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=e;return{x:()=>iM(r,n,o,s,a,i,u)}}};function O7(r,t,e,n,o,s,a){let i=S(r,"dy","maxPoolGrad"),u=S(t,"input","maxPoolGrad"),p=S(e,"output","maxPoolGrad");D(u.rank===i.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${i.rank})`),D(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),D(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),Rt("maxPoolGrad",s,a);let l={dy:i,input:u,output:p},m={filterSize:n,strides:o,pad:s,dimRoundingMode:a};return N.runKernel(Em,l,m)}var pM=A({maxPoolGrad_:O7});var lM={kernelName:Fo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n,o]=t,{filterSize:s,strides:a,pad:i}=e;return{x:()=>pM(r,n,o,s,a,i)}}};var mM={kernelName:Po,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{axis:o}=e,s=fr(o,n.shape),i=qv(n.shape,s)[1],u=et(i);return{x:()=>{let l=n.shape.slice();s.forEach(d=>{l[d]=1});let m=L(r,l);return me(M(m,gr(n.shape,"float32")),u)}}}};var cM={kernelName:Mo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let n=e,{axis:o}=n,[s,a]=t,i=fr(o,s.shape),u=Ky(r,a,s,i);return{x:()=>u.x()}}};var dM={kernelName:Eo,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t;return{a:()=>M(r,te(Ls(e,n),"float32")),b:()=>M(r,te(ur(e,n),"float32"))}}};var fM={kernelName:Lo,inputsToSave:["x"],gradFunc:(r,t,e)=>{let n=t[0],{paddings:o}=e,s=o.map(a=>a[0]);return{x:()=>Be(r,s,n.shape)}}};var hM={kernelName:qi,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=$e(e.shape,n.shape);return{a:()=>{let i=St(e.shape,o);return i.length>0?L(fe(r,i),e.shape):r},b:()=>{let i=M(r,Qe(lp(me(e,n)))),u=St(n.shape,o);return u.length>0?L(fe(i,u),n.shape):i}}}};var gM={kernelName:_o,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=$e(e.shape,n.shape);return{a:()=>{let i=M(r,te(n,"float32")),u=St(e.shape,o);return u.length>0?L(fe(i,u),e.shape):i},b:()=>{let i=M(r,te(e,"float32")),u=St(n.shape,o);return u.length>0?L(fe(i,u),n.shape):i}}}};var bM={kernelName:hs,gradFunc:r=>({x:()=>Qe(r)})};var yM={kernelName:Sa,inputsToSave:["indices"],gradFunc:(r,t)=>{let e=t[0];return{indices:()=>xt(e.shape,"float32")}}};var TM={kernelName:gs,gradFunc:r=>({x:()=>Ae(r)})};var xM={kernelName:bs,saveAllInputs:!0,gradFunc:(r,t,e)=>{let{axis:n}=e;return Kr(r,n).map(s=>()=>s)}};var TA={kernelName:$o,inputsToSave:["x"],gradFunc:(r,t,e)=>{let n=t[0],{paddings:o}=e,s=o.map(a=>a[0]);return{x:()=>Be(r,s,n.shape)}}};var IM={kernelName:Bo,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,t)=>{let[e,n,o]=t,s=e,a=n,i=$e(s.shape,a.shape);return{a:()=>{let l=te(a,"float32"),m=M(r,M(l,Vn(s,le(l,de(1))))),c=St(s.shape,i);return c.length>0&&(m=fe(m,c)),L(m,s.shape)},b:()=>{let l=ur(s,0),m=zt(l,Wr(s),Ae(s)),c=M(r,M(o,m)),d=St(a.shape,i);return d.length>0&&(c=fe(c,d)),L(c,a.shape)}}}};var CM={kernelName:Oo,inputsToSave:["x","alpha"],gradFunc:(r,t)=>{let[e,n]=t,o=ur(e,0);return{x:()=>zt(o,r,M(r,n)),alpha:()=>{let s=zt(o,Ae(r),M(r,e)),a=St(n.shape,r.shape);return a.length>0&&(s=fe(s,a)),L(s,n.shape)}}}};function z7(r,t,e){let n=r.shape.slice();n[e]=1;let o=L(t,n),s=bh(r,e,!0,!1),a=bh(r,e,!0,!0),i=M(s,a);return M(o,i)}function G7(r,t,e){let n=r.shape.length,o=n-e.length,s=C.getAxesPermutation(e,n),a=r;s!=null&&(a=Oe(r,s));let i=a.shape.slice(),p=i.splice(n-e.length,e.length).reduce((c,d)=>c*d,1);i.push(p);let l=a.reshape(i),m=z7(l,t,o);if(m=m.reshape(a.shape),s!=null){let c=C.getUndoAxesPermutation(s);m=Oe(m,c)}return m}var kM={kernelName:zo,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{axis:o}=e,s=[];return o==null?s=n.shape.map((a,i)=>i):typeof o=="number"?s=[o]:s=o,{x:()=>G7(n,r,s)}}};var SM={kernelName:xo,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=$e(e.shape,n.shape);return{a:()=>{let i=me(r,te(n,"float32")),u=St(e.shape,o);return u.length>0?L(fe(i,u),e.shape):i},b:()=>{let i=M(r,te(e,"float32")),u=St(n.shape,o);u.length>0&&(i=L(fe(i,u),n.shape));let p=Ke(n);return Qe(me(i,te(p,"float32")))}}}};var vM={kernelName:va,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>me(r,Qe(Ke(e)))}}};var AM={kernelName:Ko,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t,n=M(Ls(e,6),bi(e));return{x:()=>M(r,te(n,"float32"))}}};var wM={kernelName:Go,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>M(r,te(bi(e),"float32"))}}};var NM={kernelName:ys,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>L(r,e.shape)}}};var DM={kernelName:Wo,inputsToSave:["images"],gradFunc:(r,t,e)=>{let[n]=t,o={dy:r,images:n};return{images:()=>N.runKernel(Gm,o,e)}}};var RM={kernelName:Uo,inputsToSave:["images"],gradFunc:(r,t,e)=>{let[n]=t,o={dy:r,images:n};return{images:()=>N.runKernel(zm,o,e)}}};var FM={kernelName:Aa,gradFunc:(r,t,e)=>{let{dims:n}=e,o=fr(n,r.shape);return{x:()=>wr(r,o)}}};var PM={kernelName:wa,gradFunc:r=>({x:()=>Ae(r)})};var MM={kernelName:Vo,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>Qe(me(r,M(Vn(e,1.5),2)))}}};var EM={kernelName:Ts,inputsToSave:["condition"],gradFunc:(r,t)=>{let[e]=t;return{condition:()=>te(Ae(e),"float32"),t:()=>M(r,te(e,r.dtype)),e:()=>M(r,te(uc(e),r.dtype))}}};var LM={kernelName:Xi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=ur(e,de(0)),o=de(aA),s=de(iA),a=M(r,s),i=M(M(r,o),hr(te(e,"float32")));return zt(n,a,i)}}}};var _M={kernelName:qo,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>M(r,M(e,le(de(1),e)))}}};var $M={kernelName:Yi,gradFunc:r=>({x:()=>Ae(r)})};var BM={kernelName:Ho,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>M(sc(te(e,"float32")),r)}}};var OM={kernelName:Da,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>M(jb(te(e,"float32")),r)}}};var zM={kernelName:xs,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{begin:o,size:s}=e,a=n.shape,[i,u]=zv(n,o,s),p=[];for(let l=0;l<r.rank;l++)p.push([i[l],a[l]-i[l]-u[l]]);return{x:()=>Hn(r,p)}}};var GM={kernelName:Yo,outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n]=t,{dim:o}=e,s=!0,a=M(r,n);return{logits:()=>le(a,M(fe(a,[o],s),n))}}};var UM={kernelName:Zi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>M(r,Pn(e))}}};var xA={kernelName:Is,gradFunc:(r,t,e)=>{let{blockShape:n,paddings:o}=e;return{x:()=>nc(r,n,o)}}};var IA={kernelName:Cs,gradFunc:(r,t,e)=>{let{axis:n}=e;return{x:()=>lt(r,n)}}};var WM={kernelName:jo,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>me(r,M(Et(te(e,"float32")),2))}}};var KM={kernelName:pi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>M(r,M(te(e,"float32"),2))}}};var VM={kernelName:Zo,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=de(2);return{a:()=>M(r,M(o,le(e,n))),b:()=>M(r,M(o,le(n,e)))}}};var HM={kernelName:vs,gradFunc:r=>({x:()=>Ae(r)})};var qM={kernelName:Qo,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=$e(e.shape,n.shape);return{a:()=>{let i=r,u=St(e.shape,o);return u.length>0&&(i=fe(i,u)),L(i,e.shape)},b:()=>{let i=r,u=St(n.shape,o);return u.length>0&&(i=fe(i,u)),L(Qe(i),n.shape)}}}};var jM={kernelName:Xo,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,o=n.shape.slice(),{axis:s}=e;fr(s,n.shape).forEach(p=>{o[p]=1});let i=L(r,o),u=M(i,gr(n.shape,"float32"));return{x:()=>u}}};var XM={kernelName:Fa,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>me(r,Ke(sc(e)))}}};var YM={kernelName:Jo,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>M(le(de(1),Ke(e)),r)}}};var ZM={kernelName:An,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{reps:o}=e;return{x:()=>{let a=Ae(n);if(n.rank===1)for(let i=0;i<o[0];++i)a=Y(a,Be(r,[i*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let i=0;i<o[0];++i)for(let u=0;u<o[1];++u)a=Y(a,Be(r,[i*n.shape[0],u*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let i=0;i<o[0];++i)for(let u=0;u<o[1];++u)for(let p=0;p<o[2];++p)a=Y(a,Be(r,[i*n.shape[0],u*n.shape[1],p*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let i=0;i<o[0];++i)for(let u=0;u<o[1];++u)for(let p=0;p<o[2];++p)for(let l=0;l<o[3];++l)a=Y(a,Be(r,[i*n.shape[0],u*n.shape[1],p*n.shape[2],l*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return a}}}};var QM={kernelName:wn,gradFunc:(r,t,e)=>{let n=e,{perm:o}=n,s=yh(o);return{x:()=>Oe(r,s)}}};var JM={kernelName:ks,gradFunc:(r,t,e)=>{let n=e,{axis:o}=n;return{value:()=>br(r,o)}}};var eE={kernelName:Yu,inputsToSave:["segmentIds"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>U7(r,e)}}};function U7(r,t){let e=ns(t,Ae(t)),n=mp(r,e),o=Es(t,de(0,"int32")),s=n.rank-o.rank;for(let i=0;i<s;++i)o=Lr(o,i+1);o=en(o,gr(n.shape,"bool"));let a=Ae(n);return zt(o,n,a)}var tE={kernelName:Ss,gradFunc:r=>({x:()=>Ae(r)})};var W7=[Wy,aP,iP,uP,pP,lP,mP,cP,dP,fP,hP,gP,yP,xP,IP,CP,kP,SP,vP,AP,wP,NP,RP,DP,PP,MP,EP,LP,_P,$P,SM,BP,OP,zP,GP,UP,KP,WP,VP,jP,XP,YP,ZP,QP,JP,eM,tM,rM,nM,sM,yA,yA,aM,uM,lM,mM,cM,dM,fM,hM,gM,bM,yM,TM,xM,TA,TA,IM,CM,kM,vM,AM,wM,NM,DM,RM,FM,PM,MM,EM,LM,_M,$M,BM,OM,zM,GM,UM,xA,xA,IA,IA,WM,VM,KM,HM,qM,jM,XM,YM,ZM,QM,JM,eE,tE];for(let r of W7)U0(r);var oE={};We(oE,{maxNorm:()=>K7,minMaxNorm:()=>q7,nonNeg:()=>H7,unitNorm:()=>V7});function CA(r,t){return z(()=>Et(fe(M(r,r),t,!0)))}var yl=class extends Q.Serializable{getConfig(){return{}}},Ec=class extends yl{constructor(e){super();this.defaultMaxValue=2;this.defaultAxis=0;this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return z(()=>{let n=CA(e,this.axis),o=Ur(n,0,this.maxValue);return M(e,me(o,Y(mr(),n)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Ec.className="MaxNorm";Q.registerClass(Ec);var Lc=class extends yl{constructor(e){super();this.defaultAxis=0;this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return z(()=>me(e,Y(mr(),CA(e,this.axis))))}getConfig(){return{axis:this.axis}}};Lc.className="UnitNorm";Q.registerClass(Lc);var _c=class extends yl{apply(t){return tn(t)}};_c.className="NonNeg";Q.registerClass(_c);var $c=class extends yl{constructor(e){super();this.defaultMinValue=0;this.defaultMaxValue=1;this.defaultRate=1;this.defaultAxis=0;this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return z(()=>{let n=CA(e,this.axis),o=Y(M(this.rate,Ur(n,this.minValue,this.maxValue)),M(1-this.rate,n));return M(e,me(o,Y(mr(),n)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};$c.className="MinMaxNorm";Q.registerClass($c);var rE={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Vt(r){return xc(r)}function nE(r,t={}){return Ti(r,Q.SerializationMap.getMap().classNameMap,t,"constraint")}function Ht(r){if(r==null)return null;if(typeof r=="string"){let e={className:r in rE?rE[r]:r,config:{}};return nE(e)}else return r instanceof yl?r:nE(r)}function K7(r){return new Ec(r)}function V7(r){return new Lc(r)}function H7(){return new _c}function q7(r){return new $c(r)}var sE={};We(sE,{constant:()=>Y7,glorotNormal:()=>nJ,glorotUniform:()=>rJ,heNormal:()=>oJ,heUniform:()=>sJ,identity:()=>eJ,leCunNormal:()=>aJ,leCunUniform:()=>iJ,ones:()=>X7,orthogonal:()=>uJ,randomNormal:()=>Q7,randomUniform:()=>Z7,truncatedNormal:()=>J7,varianceScaling:()=>tJ,zeros:()=>j7});function j7(){return new Sc}function X7(){return new Sp}function Y7(r){return new vc(r)}function Z7(r){return new Ac(r)}function Q7(r){return new wc(r)}function J7(r){return new Nc(r)}function eJ(r){return new Dc(r)}function tJ(r){return new jr(r)}function rJ(r){return new ml(r)}function nJ(r){return new cl(r)}function oJ(r){return new dl(r)}function sJ(r){return new fl(r)}function aJ(r){return new hl(r)}function iJ(r){return new gl(r)}function uJ(r){return new Rc(r)}var _E={};We(_E,{Layer:()=>_e,RNN:()=>ss,RNNCell:()=>hu,activation:()=>C9,add:()=>F9,alphaDropout:()=>fee,average:()=>P9,averagePooling1d:()=>zA,averagePooling2d:()=>GA,averagePooling3d:()=>UA,avgPool1d:()=>G9,avgPool2d:()=>W9,avgPool3d:()=>V9,avgPooling1d:()=>U9,avgPooling2d:()=>K9,avgPooling3d:()=>H9,batchNormalization:()=>B9,bidirectional:()=>aee,concatenate:()=>M9,conv1d:()=>d9,conv2d:()=>f9,conv2dTranspose:()=>h9,conv3d:()=>g9,conv3dTranspose:()=>b9,convLstm2d:()=>ree,convLstm2dCell:()=>nee,cropping2D:()=>T9,dense:()=>k9,depthwiseConv2d:()=>I9,dot:()=>$9,dropout:()=>S9,elu:()=>i9,embedding:()=>R9,flatten:()=>A9,gaussianDropout:()=>dee,gaussianNoise:()=>cee,globalAveragePooling1d:()=>q9,globalAveragePooling2d:()=>j9,globalMaxPool1d:()=>uee,globalMaxPool2d:()=>pee,globalMaxPooling1d:()=>PE,globalMaxPooling2d:()=>ME,gru:()=>Y9,gruCell:()=>Z9,input:()=>RA,inputLayer:()=>a9,layerNormalization:()=>O9,leakyReLU:()=>p9,lstm:()=>Q9,lstmCell:()=>J9,masking:()=>hee,maxPool1d:()=>lee,maxPool2d:()=>mee,maxPooling1d:()=>EE,maxPooling2d:()=>LE,maxPooling3d:()=>X9,maximum:()=>E9,minimum:()=>L9,multiply:()=>_9,permute:()=>D9,prelu:()=>l9,reLU:()=>u9,repeatVector:()=>w9,rescaling:()=>gee,reshape:()=>N9,rnn:()=>oee,separableConv2d:()=>y9,simpleRNN:()=>eee,simpleRNNCell:()=>tee,softmax:()=>m9,spatialDropout1d:()=>v9,stackedRNNCells:()=>see,thresholdedReLU:()=>c9,timeDistributed:()=>iee,upSampling2d:()=>x9,zeroPadding2d:()=>z9});async function Ii(r){if(r==null)return;let t=[],e=[],n=[];for(let o in r){let s=r[o];if(typeof s!="number"){let a=s;t.push(a.data()),e.push(o),n.push(a)}}if(t.length>0){let o=await Promise.all(t);for(let s=0;s<o.length;++s)r[e[s]]=o[s][0];Ne(n)}}function Vy(r){if(r!=null)for(let t in r){let e=r[t];typeof e!="number"&&e.dispose()}}var pJ=125,du=class{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}},Hy=class{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(let e of this.callbacks)e.setParams(t)}setModel(t){for(let e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(let n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(let n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(let n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(let n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(let e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(let e of this.callbacks)await e.onTrainEnd(t)}},kA=class extends du{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,n){n==null&&(n={});let o=n.size==null?0:n.size;this.seen+=o;for(let s in n){let a=n[s];if(typeof a=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+a*o;else{let i;s in this.totals?i=this.totals[s]:this.totals[s]=0;let u=z(()=>Y(this.totals[s],M(a,o)));this.totals[s]=u,i?.dispose()}}}async onEpochEnd(e,n){if(n!=null)for(let o of this.params.metrics)this.totals[o]!=null&&(typeof this.totals[o]=="number"?n[o]=this.totals[o]/this.seen:z(()=>{let s=M(me(1,this.seen),this.totals[o]);n[o]=s,this.totals[o].dispose(),Bt(n[o])}))}},qy=class extends du{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,n){n==null&&(n={}),this.epoch.push(e);for(let o in n)this.history[o]==null&&(this.history[o]=[]),this.history[o].push(n[o])}async syncData(){let e=[],n=[],o=[];for(let a in this.history){let i=this.history[a];for(let u=0;u<i.length;++u)if(typeof i[u]!="number"){let p=i[u];e.push(p.data()),n.push(a),o.push(u)}}let s=await Promise.all(e);for(let a=0;a<s.length;++a)this.history[n[a]][o[a]].dispose(),this.history[n[a]][o[a]]=s[a][0]}},jy=class extends du{constructor(e,n){super();this.currentEpoch=0;if(this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Sh,this.yieldEvery=n||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=pJ),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");y.isNumber(this.yieldEvery)&&(this.maybeWait=_F(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,n,o){let s=[];this.yield!=null&&(await Ii(o),s.push(this.yield(e,n,o))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,n){this.currentEpoch=e,this.epochBegin!=null&&(await Ii(n),await this.epochBegin(e,n))}async onEpochEnd(e,n){let o=[];this.epochEnd!=null&&(await Ii(n),o.push(this.epochEnd(e,n))),this.yieldEvery==="epoch"&&o.push(this.nextFrameFunc()),await Promise.all(o)}async onBatchBegin(e,n){this.batchBegin!=null&&(await Ii(n),await this.batchBegin(e,n))}async onBatchEnd(e,n){let o=[];this.batchEnd!=null&&(await Ii(n),o.push(this.batchEnd(e,n))),this.yieldEvery==="batch"?o.push(this.nextFrameFunc()):y.isNumber(this.yieldEvery)&&o.push(this.maybeWait(this.currentEpoch,e,n)),await Promise.all(o)}async onTrainBegin(e){this.trainBegin!=null&&(await Ii(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Ii(e),await this.trainEnd(e))}};function Xy(r,t){return r==null&&(r={}),r instanceof du?[r]:Array.isArray(r)&&r[0]instanceof du?r:vt(r).map(n=>new jy(n,t))}var Va=class{constructor(){}static registerCallbackConstructor(t,e){y.assert(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),Va.checkForDuplicate(e),Va.constructors[t]==null&&(Va.constructors[t]=[]),Va.constructors[t].push(e)}static checkForDuplicate(t){for(let e in Va.constructors)Va.constructors[+e].forEach(o=>{if(o===t)throw new O("Duplicate callback constructor.")})}static clear(){Va.constructors={}}static createCallbacks(t){let e=[];for(let n in Va.constructors){let o=+n;t>=o&&e.push(...Va.constructors[o])}return e.map(n=>new n)}},Bc=Va;Bc.constructors={};function Yy(r,t,e,n,o,s,a,i,u){let p=new qy,l=[new kA,...Bc.createCallbacks(t)];r!=null&&l.push(...r),l.push(p);let m=new Hy(l);return m.setParams({epochs:e,initialEpoch:n,samples:o,steps:s,batchSize:a,verbose:t,doValidation:i,metrics:u}),{callbackList:m,history:p}}function xn(r,t={},e=!1){return Ti(r,Q.SerializationMap.getMap().classNameMap,t,"layer",e)}function Fh(r,t){return z(()=>{r.dtype!=="float32"&&(r=te(r,"float32"));let e=fe(ll(r),t,!0),n=Ps(e.shape,mr()),o=Et(ns(e,n));return me(r,o)})}function Ci(r,t){return z(()=>Lt(ll(le(t,r)),-1))}function Oc(r,t){return z(()=>Lt(Ot(le(t,r)),-1))}function vp(r,t){return z(()=>{let e=le(r,t),n=Ur(Ot(r),mr(),Number.MAX_VALUE),o=Ot(me(e,n));return M(100,Lt(o,-1))})}function lJ(r,t){return z(()=>{let e=Ur(t,mr(),Number.MAX_VALUE),n=Wr(Y(1,e)),o=Ur(r,mr(),Number.MAX_VALUE),s=Wr(Y(1,o));return Lt(ll(le(n,s)),-1)})}function mJ(r,t){return z(()=>{let e=ns(0,le(1,M(r,t)));return Lt(ll(e),-1)})}function cJ(r,t){return z(()=>{let e=ns(0,le(1,M(r,t)));return Lt(e,-1)})}function dJ(r,t){return z(()=>{let e=fe(M(r,t),-1),n=fn(M(le(1,r),t),-1);return ns(0,Y(1,le(n,e)))})}function fJ(r,t){return z(()=>{let e=Math.log(2),n=le(t,r),o=le(Y(n,au(M(-2,n))),e);return Lt(o,-1)})}function Tl(r,t,e=!1){return z(()=>{if(e)t=fc(t);else{let n=fe(t,t.shape.length-1,!0);t=me(t,n)}return t=Ur(t,mr(),1-mr()),Qe(fe(M(te(r,"float32"),Wr(t)),t.shape.length-1))})}function zc(r,t,e=!1){return z(()=>{let n=te(lp(qF(r)),"int32");t=Ur(t,mr(),1-mr());let o=t.shape,s=L(tp(n,o[o.length-1]),o);return Tl(s,t,e)})}function hJ(r,t){if(!y.arraysEqual(r.shape,t.shape))throw new O(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(t.shape)}`);return z(()=>{let e=tn(t),n=Qe(Ot(t));return Y(le(e,M(t,r)),ic(hr(n)))})}function Gc(r,t){return z(()=>{let e;return e=Ur(t,mr(),1-mr()),e=Wr(me(e,le(1,e))),Lt(hJ(r,e),-1)})}function gJ(r,t){return z(()=>{let e=Ur(r,mr(),1),n=Ur(t,mr(),1);return fe(M(r,Wr(me(e,n))),-1)})}function bJ(r,t){return z(()=>{let e=Wr(Y(mr(),t));return Lt(le(t,M(r,e)),-1)})}function Mh(r,t){return z(()=>{let e=Fh(r,-1),n=Fh(t,-1),o=M(e,n);return Qe(fe(o,-1))})}var Ph={meanSquaredError:Ci,meanAbsoluteError:Oc,meanAbsolutePercentageError:vp,meanSquaredLogarithmicError:lJ,squaredHinge:mJ,hinge:cJ,categoricalHinge:dJ,logcosh:fJ,categoricalCrossentropy:Tl,sparseCategoricalCrossentropy:zc,binaryCrossentropy:Gc,kullbackLeiblerDivergence:gJ,poisson:bJ,cosineProximity:Mh};function Zy(r){if(typeof r=="string"){if(r in Ph)return Ph[r];let t=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new O(t)}else return r}function Eh(r,t){return z(()=>{let e=M(.5,_r(t)),n=lu(ur(t,e),r.dtype);return Lt(Qr(r,n),-1)})}function Lh(r,t){return z(()=>lu(Qr(op(r,-1),op(t,-1)),"float32"))}function iE(r,t){return z(()=>te(fe(en(Qr(r,1),Qr(t,1))),"float32"))}function yJ(r,t){return z(()=>te(fe(en(Qr(r,1),Qr(t,0))),"float32"))}function TJ(r,t){return z(()=>te(fe(en(Qr(r,0),Qr(t,1))),"float32"))}function SA(r,t){return z(()=>{let e=iE(r,t),n=TJ(r,t),o=Y(e,n);return te(zt(ur(o,0),me(e,o),0),"float32")})}function uE(r,t){return z(()=>{let e=iE(r,t),n=yJ(r,t),o=Y(e,n);return te(zt(ur(o,0),me(e,o),0),"float32")})}function Jy(r,t){return Gc(r,t)}function eT(r,t){return r.rank===t.rank&&(r=_s(r,[r.rank-1])),t=op(t,-1),t.dtype!==r.dtype&&(t=te(t,r.dtype)),te(Qr(r,t),"float32")}var xJ=Ci,IJ=Ci,CJ=Oc,kJ=Oc,SJ=vp,vJ=vp,_h=Tl,AJ=Mh,vA=zc,Qy={binaryAccuracy:Eh,categoricalAccuracy:Lh,precision:SA,categoricalCrossentropy:_h,sparseCategoricalCrossentropy:vA,mse:xJ,MSE:IJ,mae:CJ,MAE:kJ,mape:SJ,MAPE:vJ,cosine:AJ};function pE(r){if(typeof r=="string"&&r in Qy)return Qy[r];if(typeof r!="string"&&r!=null)return r;throw new O(`Unknown metric ${r}`)}function $h(r){if(os(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let t;for(let e of Object.keys(Ph))if(Ph[e]===r){t=e;break}if(t!==void 0)return t;for(let e of Object.keys(Qy))if(Qy[e]===r){t=e;break}return t!==void 0?t:r.name}}function mE(r){let t={Adagrad:()=>ul.adagrad(.01),Adadelta:()=>ul.adadelta(1,.95,mr()),Adam:()=>ul.adam(.001,.9,.999,mr()),Adamax:()=>ul.adamax(.002,.9,.999,mr(),0),RMSProp:()=>ul.rmsprop(.001,.9,0,mr()),SGD:()=>ul.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,r in t)return t[r]();throw new O(`Unknown Optimizer ${r}`)}function wA(r,t,e=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!AA(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){let n=JSON.stringify(r);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${1048576}.`)}}function AA(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let t=Object.keys(r);for(let e of t)if(typeof e!="string"||!AA(r[e]))return!1;return!0}else if(Array.isArray(r)){for(let t of r)if(!AA(t))return!1;return!0}else return!1;else{let t=typeof r;return t==="string"||t==="number"||t==="boolean"}}function cE(r,t,e,n=console.log){let o=DJ(r),s=["Layer (type)","Input Shape","Output shape","Param #"];o?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(l=>Math.floor(t*l)));let a;if(!o){s.push("Receives inputs"),a=[];for(let l in r.nodesByDepth)a.push(...r.nodesByDepth[l])}n("_".repeat(t)),tT(s,e,n),n("=".repeat(t));let i=r.layers;for(let l=0;l<i.length;++l)o?RJ(i[l],e,n):FJ(i[l],e,a,n),n((l===i.length-1?"=":"_").repeat(t));r.checkTrainableWeightsConsistency();let u=NJ(r),p=Pc(r.nonTrainableWeights);n(`Total params: ${u+p}`),n(`Trainable params: ${u}`),n(`Non-trainable params: ${p}`),n("_".repeat(t))}function NJ(r){let t;return r.collectedTrainableWeights!=null?t=Pc(r.collectedTrainableWeights):t=Pc(r.trainableWeights),t}function DJ(r){let t=!0,e=[],n=[];for(let o in r.nodesByDepth)e.push(r.nodesByDepth[o]);for(let o of e){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){t=!1;break}n.push(...o)}if(t)for(let o of r.layers){let s=!1;for(let a of o.inboundNodes)if(n.indexOf(a)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function tT(r,t,e=console.log){let n="";for(let o=0;o<r.length;++o)o>0&&(n=n.slice(0,n.length-1)+" "),n+=r[o],n=n.slice(0,t[o]),n+=" ".repeat(t[o]-n.length);e(n)}function RJ(r,t,e){let n,o;try{o=r.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{o="multiple"}try{n=JSON.stringify(r.outputShape)}catch{n="multiple"}let s=r.name,a=r.getClassName(),i=[`${s} (${a})`,o,n,r.countParams().toString()];tT(i,t,e)}function FJ(r,t,e,n){let o,s;try{s=r.inboundNodes.map(m=>JSON.stringify(m.inputShapes)).join(",")}catch{s="multiple"}try{o=JSON.stringify(r.outputShape)}catch{o="multiple"}let a=[];for(let m of r.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(m)===-1))for(let c=0;c<m.inboundLayers.length;++c){let d=m.inboundLayers[c].name,f=m.nodeIndices[c],h=m.tensorIndices[c];a.push(`${d}[${f}][${h}]`)}let i=r.name,u=r.getClassName(),p=a.length===0?"":a[0],l=[`${i} (${u})`,s,o,r.countParams().toString(),p];tT(l,t,n);for(let m=1;m<a.length;++m)tT(["","","","",a[m]],t,n)}function dE(r,t,e){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&t===0&&typeof e=="string"}function xl(r,t){if(r===null)return null;if(typeof r=="string")return uu(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let e=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];dE(t,o,s)?e.push(s):e.push(xl(s,t))}return e}else{let e={};for(let n of Object.keys(r)){let o=r[n];if(n==="name"&&typeof o=="string")e[n]=o;else{let s=uu(n);e[s]=xl(o,s)}}return e}}function rT(r,t){if(r==null)return null;if(typeof r=="string")return zs(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let e=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];dE(t,o,s)?e.push(s):e.push(rT(s,t))}return e}else{let e={};for(let n of Object.keys(r)){let o=r[n],s=zs(n);(n==="name"||n==="className")&&typeof o=="string"?e[s]=o:e[s]=rT(o,n)}return e}}var Bh="0.0.0";var qn=class extends _e{constructor(e){super({});this.containerNodes=new Set;if(this.name=e.name,this.name==null){let x=this.getClassName().toLowerCase();this.name=Cp(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Gs(this.inputs).length!==this.inputs.length)throw new O(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);Gs(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let x of this.outputs){let I=x.sourceLayer,k=x.nodeIndex,w=x.tensorIndex;this.outputLayers.push(I),this.outputLayersNodeIndices.push(k),this.outputLayersTensorIndices.push(w)}for(let x of this.inputs){let I=x.sourceLayer,k=x.nodeIndex,w=x.tensorIndex;os(k===0,"input layer has >1 nodes"),os(w===0,"input layer has >1 tensors"),this.inputLayers.push(I),this.inputLayersNodeIndices.push(k),this.inputLayersTensorIndices.push(w)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){let I=this.inputLayers[x];if(!(I instanceof Ka))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${x} (0-based) originates from layer type ${I.getClassName()}.`);this.inputNames.push(I.name),this.feedInputShapes.push(I.batchInputShape),this.feedInputNames.push(I.name)}for(let x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);let n={},o={},s={},a={},i={},u=[],p=(x,I,k,w,R,F)=>{(w==null||R==null||F==null)&&(w=x.sourceLayer,R=x.nodeIndex,F=x.tensorIndex);let P=w.inboundNodes[R];if(k.indexOf(P)!==-1)throw new qr(`The tensor ${x.name} at layer "${w.name}" is part of a cycle.`);if(I.indexOf(P)!==-1)return;this.containerNodes.add(qn.nodeKey(w,R)),w.id in i||(i[w.id]=Object.keys(i).length),k.indexOf(P)===-1&&k.push(P);let E=P.inboundLayers.length;for(let B=0;B<E;B++){let G=P.inputTensors[B],U=P.inboundLayers[B],V=P.nodeIndices[B],W=P.tensorIndices[B];p(G,I,k,U,V,W)}for(I.push(P);k.indexOf(P)>=0;)k.splice(k.indexOf(P),1);u.push(P)},l=[],m=[];for(let x of this.outputs)p(x,l,m);let c=u.slice().reverse();for(let x of c){o[x.id]=x,x.id in n||(n[x.id]=0);let I=n[x.id],k=s[x.outboundLayer.id]==null?0:s[x.outboundLayer.id];I=Math.max(I,k),s[x.outboundLayer.id]=I,a[x.outboundLayer.id]=x.outboundLayer,n[x.id]=I;for(let w=0;w<x.inboundLayers.length;w++){let R=x.inboundLayers[w],F=x.nodeIndices[w],P=R.inboundNodes[F],E=n[P.id]==null?0:n[P.id];n[P.id]=Math.max(I+1,E),o[P.id]=P}}let d={};for(let x in n){let I=n[x];I in d||(d[I]=[]),d[I].push(o[x])}let f={};for(let x in s){let I=s[x];I in f||(f[I]=[]),f[I].push(a[x])}let h=Object.keys(f).map(x=>parseInt(x,10)).sort(Ah);this.layers=[];for(let x of h){let I=f[x];I.sort((k,w)=>{let R=i[k.id],F=i[w.id];return R<F?-1:R>F?1:0});for(let k of I)k instanceof qn&&this.internalContainerRefs.push(k),this.layers.push(k)}this.layersByDepth=f,h=Object.keys(d).map(x=>parseInt(x,10)).sort(Ah);let g=this.inputs.slice(),b=[];for(let x of h)for(let I of d[x]){let k=I.outboundLayer;if(k!=null){for(let w of I.inputTensors)if(g.indexOf(w)===-1)throw new qr(`Graph disconnected: cannot obtain value for tensor ${w} at layer "${k.name}". The following previous layers were accessed without issue: ${b}`);for(let w of I.outputTensors)g.push(w);b.push(k.name)}}this.nodesByDepth=d;let T=this.layers.map(x=>x.name);for(let x of T){let I=T.filter(k=>k===x).length;if(I!==1)throw new qr(`The name "${x}" is used ${I} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(T))}this.outboundNodes=[],this.inboundNodes=[],new cu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let n of this.layers)e.numDisposedVariables+=n.dispose().numDisposedVariables;for(let n of this.internalContainerRefs)e.numDisposedVariables+=n.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(n=>{n._trainableWeights.forEach(o=>o.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new O("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let n of this.layers)e=e.concat(n.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let n of this.layers)e.push(...n.nonTrainableWeights);if(!this.trainable){let n=[];for(let o of this.layers)n.push(...o.trainableWeights);return n.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,n=!0){let o={},s=0;for(let i of this.layers)for(let u of i.weights){if(o[u.originalName]!=null)throw new O(`Duplicate weight name: ${u.originalName}`);o[u.originalName]=u,s++}let a=[];for(let i in e){let u=i;if(o[i]==null){let p=i.split("/");u=p.slice(0,-2).concat([p[p.length-1]]).join("/")}if(o[u]!=null)a.push([o[u],e[i]]);else if(n)throw new O(`Provided weight data has no target variable: ${i}`);delete o[u]}if(n){let i=[];for(let u in o)i.push(u);if(i.length>0)throw new O(`${i.length} of ${s} weights are not set: ${i}`)}Mc(a)}updatedConfig(){let e=this.getConfig(),n={};return n.className=this.getClassName(),n.config=e,n.kerasVersion=`tfjs-layers ${Bh}`,n.backend="TensorFlow.js",n}toJSON(e,n=!0){let o=rT(this.updatedConfig());return n?JSON.stringify(o):o}call(e,n){return z(()=>{e=vt(e);let o=new Ks;for(let s=0;s<this.inputs.length;++s)o.add(this.inputs[s],e[s]);return bl(this.outputs,o,n)})}computeMask(e,n){return z(()=>{e=vt(e);let o;return n==null?o=Os(null,e.length):o=vt(n),this.runInternalGraph(e,o)[1]})}computeOutputShape(e){let n=Fc(e);if(n.length!==this.inputLayers.length)throw new O(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let o={};for(let u=0;u<n.length;u++){let p=this.inputLayers[u],l=n[u],m=p.name+"_0_0";o[m]=l}let s=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(Ah);if(s.length>1)for(let u of s){let p=this.nodesByDepth[u];for(let l of p){let m=l.outboundLayer;if(this.inputLayers.map(g=>g.id).indexOf(m.id)!==-1)continue;let c=[];for(let g=0;g<l.inboundLayers.length;g++){let b=l.inboundLayers[g],T=l.nodeIndices[g],x=l.tensorIndices[g],I=`${b.name}_${T}_${x}`,k=o[I];c.push(k)}let d=m.computeOutputShape(Dr(c)),f=Fc(d),h=m.inboundNodes.indexOf(l);for(let g=0;g<f.length;g++){let b=`${m.name}_${h}_${g}`;o[b]=f[g]}}}let a=[],i=[];for(let u=0;u<this.outputLayers.length;u++){let p=this.outputLayers[u],l=this.outputLayersNodeIndices[u],m=this.outputLayersTensorIndices[u],c=`${p.name}_${l}_${m}`;i.push(c)}for(let u=0;u<i.length;u++){let p=i[u];os(p in o),a.push(o[p])}return Dr(a)}runInternalGraph(e,n){n==null&&(n=Os(null,e.length));let o={};for(let p=0;p<this.inputs.length;++p){let l=this.inputs[p],m=e[p],c=n[p];o[l.id]=[m,c]}let s=Object.keys(this.nodesByDepth).map(p=>parseInt(p,10)).sort(Ah);for(let p of s){let l=this.nodesByDepth[p];for(let m of l){let c=m.outboundLayer,d=m.inputTensors,f=m.outputTensors,h=new Array;for(let g of d)g.id in o&&h.push(o[g.id]);if(h.length===d.length){let g={},b,T,x,I;if(m.callArgs!=null&&(g=m.callArgs),h.length===1){let[k,w]=h[0];g.mask==null&&(g.mask=w),x=vt(c.call(k,g)),I=vt(c.computeMask(k,w)),b=[k],T=[w]}else b=h.map(k=>k[0]),T=h.map(k=>k[1]),g.mask==null&&(g.mask=T),x=vt(c.call(b,g)),I=vt(c.computeMask(b,T));if(c.activityRegularizer)throw new ve("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let k=0;k<f.length;++k){let w=f[k],R=x[k],F=I[k];o[w.id]=[R,F]}}}}let a=[],i=[],u=[];for(let p of this.outputs){os(p.id in o,`Could not compute output ${p.name} : ${p.id}`);let[l,m]=o[p.id];u.push(l.shape),a.push(l),i.push(m)}return[a,i,u]}buildNodeConversionMap(e){let n={},o;for(let s of this.layers){o=s instanceof qn?1:0;for(let a=0;a<s.inboundNodes.length;a++){let i=qn.nodeKey(s,a);this.containerNodes.has(i)&&(n[i]=o,o+=1)}}return n}getLayer(e,n){if(n!=null){if(this.layers.length<=n)throw new O(`Was asked to retrieve layer at index ${n}, but model only has ${this.layers.length} layer(s).`);return this.layers[n]}else if(e==null)throw new O("Provide either a layer name or layer index");for(let o of this.layers)if(o.name===e)return o;throw new O(`No such layer: ${e}`)}calculateLosses(){return z(()=>{let e=[];for(let n of this.layers)for(let o=0;o<n.inboundNodes.length;++o){let s=qn.nodeKey(n,o);this.containerNodes.has(s)&&e.push(...n.calculateLosses())}return e})}getConfig(){let e={name:this.name},n=this.buildNodeConversionMap(this.layers),o=[];for(let i of this.layers){let u=i.getClassName(),p=i.getConfig(),l=[];for(let c=0;c<i.inboundNodes.length;c++){let d=i.inboundNodes[c],f=qn.nodeKey(i,c),h={};if(this.containerNodes.has(f)){if(d.callArgs)try{JSON.stringify(d.callArgs),h=d.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(d.inboundLayers.length>0){let g=[];for(let b=0;b<d.inboundLayers.length;b++){let T=d.inboundLayers[b],x=d.nodeIndices[b],I=d.tensorIndices[b],k=qn.nodeKey(T,x),w=n[k];w==null&&(w=0),g.push([T.name,w,I,h])}l.push(g)}}}let m={};m.name=i.name,m.className=u,m.config=p,m.inboundNodes=l,o.push(m)}e.layers=o;let s=[];for(let i=0;i<this.inputLayers.length;i++){let u=this.inputLayers[i],p=this.inputLayersNodeIndices[i],l=qn.nodeKey(u,p);if(!this.containerNodes.has(l))continue;let m=n[l];m==null&&(m=0);let c=this.inputLayersTensorIndices[i];s.push([u.name,m,c])}e.inputLayers=s;let a=[];for(let i=0;i<this.outputLayers.length;i++){let u=this.outputLayers[i],p=this.outputLayersNodeIndices[i],l=qn.nodeKey(u,p);if(!this.containerNodes.has(l))continue;let m=n[l];m==null&&(m=0);let c=this.outputLayersTensorIndices[i];a.push([u.name,m,c])}return e.outputLayers=a,e}static fromConfig(e,n,o={},s=!1){let a={},i={};function u(b,T){b.name in i?i[b.name].push(T):i[b.name]=[T]}function p(b,T){let x=[],I;for(let k of T){let w=k[0],R=k[1],F=k[2];if(I=k[3]==null?{}:k[3],!(w in a)){u(b,T);return}let P=a[w];if(P.inboundNodes.length<=R){u(b,T);return}let E=P.inboundNodes[R];x.push(E.outputTensors[F])}x.length>0&&b.apply(Dr(x),I)}function l(b){let T=b.name,x=xn(b,n.customObjects!=null?n.customObjects:{});x.setFastWeightInitDuringBuild(s),a[T]=x,b.inboundNodes.forEach(k=>{if(!(k instanceof Array))throw new O(`Corrupted configuration, expected array for nodeData: ${k}`);u(x,k)})}let m=n.name,c=n.layers;for(let b of c)l(b);for(;!EF(i);)for(let b of c){let T=a[b.name];if(T.name in i){let x=i[T.name];delete i[T.name];for(let I of x)p(T,I)}}let d=[],f=[],h=n.inputLayers;for(let b of h){let T=b[0],x=b[1],I=b[2];os(T in a);let w=a[T].inboundNodes[x].outputTensors;d.push(w[I])}let g=n.outputLayers;for(let b of g){let T=b[0],x=b[1],I=b[2];os(T in a);let w=a[T].inboundNodes[x].outputTensors;f.push(w[I])}return new e({inputs:d,outputs:f,name:m})}get stateful(){if(this._stateful)throw new O("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){z(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function PJ(r,t,e){let n=t.length;if(r==null||Array.isArray(r)&&r.length===0)return t.map(o=>null);if(n===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&t[0]in r?[r[t[0]]]:[r];if(Array.isArray(r)){if(r.length!==n)throw new Error(`Provided ${e} is an array of ${r.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let o=[];return t.forEach(s=>{s in r?o.push(r[s]):o.push(null)}),o}else throw new Error(`The model has multiple (${n}) outputs, so ${e} must be either an array with ${n} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(r)}`)}function nT(r,t){return PJ(r,t,"classWeight")}async function oT(r,t,e,n){if(t!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(e!=null){let o=z(()=>{if(r.shape.length===1)return dn(r);if(r.shape.length===2){if(r.shape[1]>1)return op(r,1);if(r.shape[1]===1)return L(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await o.data());Ne(o);let a=[];return s.forEach(i=>{if(e[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(e[i])}),Kt(a,"float32")}else return null}function fE(r,t){return M(r,t)}var MJ=32;function bE(r,t){let e,n,o=t;e=o.xs,n=o.ys,y.assert(e!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=hE("input",r.inputNames,e),a=hE("output",r.outputNames,n),i=s[0].shape[0];y.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),y.assert(a.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let u=0;u<s.length;u++)y.assert(s[u].shape[0]===i,()=>`Batch size mismatch: input ${r.inputNames[u]} has ${s[u].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);for(let u=0;u<a.length;u++)y.assert(a[u].shape[0]===i,()=>`Batch size mismatch: output ${r.outputNames[u]} has ${a[u].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);return{xs:s,ys:a}}function hE(r,t,e){if(e instanceof ze)return[e];if(Array.isArray(e))return y.assert(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${r} keys ${t}.`),e;{let n=[];for(let o of t){if(e[o]==null)throw new O(`The feature data generated by the dataset lacks the required ${r} key '${o}'.`);n.push(e[o])}return n}}function EJ(r){if(r.length===3)throw new ve("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}async function yE(r,t,e){let n=e.batchesPerEpoch!=null;if(y.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),y.assert(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),y.assert(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),y.assert(!n||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),y.assert(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let o=e.validationData!=null,s,a;if(o)if(gE(e.validationData))y.assert(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{let g=EJ(e.validationData);s=g.xs,a=g.ys}let i=r.makeTrainFunction(),u=r.getDedupedMetricsNames(),p;o?p=u.slice().concat(u.map(g=>"val_"+g)):p=u.slice();let l=Xy(e.callbacks,e.yieldEvery),m=e.verbose==null?1:e.verbose,{callbackList:c,history:d}=Yy(l,m,e.epochs,null,null,LJ(t,e),null,o,p);c.setModel(r),r.history=d,await c.onTrainBegin(),r.stopTraining_=!1;let f=e.initialEpoch==null?0:e.initialEpoch,h=await t.iterator();for(;f<e.epochs;){let g={};await c.onEpochBegin(f);let b=0,T=0;for(n||(h=await t.iterator());!n||b<e.batchesPerEpoch;){let x=await h.next();if(n&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${b} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:I,ys:k}=bE(r,x.value),w={};w.batch=T,w.size=I[0].shape[0],await c.onBatchBegin(T,w);let R=[];if(e.classWeight!=null){let E=nT(e.classWeight,r.outputNames);for(let B=0;B<E.length;++B)R.push(await oT(k[B],null,E[B]))}let F=I.concat(k).concat(R),P=i(F);Ne(F);for(let E=0;E<u.length;++E){let B=u[E],G=P[E];w[B]=G,Bt(G)}await c.onBatchEnd(T,w),Vy(w),T++,b++}if(n?b>=e.batchesPerEpoch:x.done){if(o){let I;gE(e.validationData)?I=vt(await r.evaluateDataset(e.validationData,{batches:e.validationBatches})):I=vt(r.evaluate(s,a,{batchSize:e.validationBatchSize==null?MJ:e.validationBatchSize,verbose:0}));for(let k=0;k<r.metricsNames.length;++k)g[`val_${r.metricsNames[k]}`]=I[k]}break}if(r.stopTraining_)break}if(await c.onEpochEnd(f,g),f++,r.stopTraining_)break}return await c.onTrainEnd(),await r.history.syncData(),r.history}finally{r.isTraining=!1}}function LJ(r,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(r.size)&&(e=r.size),e}function gE(r){return typeof r.iterator=="function"}function _J(r){return typeof r.next=="function"}async function TE(r,t,e){e=e||{};let n=e.batches!=null,o=r.testFunction,s=[];if(e.verbose>0)throw new ve("Verbose mode is not implemented yet.");y.assert(!n||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);let a=_J(t)?t:await t.iterator(),i=0,u=0;for(;!n||u<e.batches;){let p=await a.next();if(s=z(()=>{if(p.value){let{xs:l,ys:m}=bE(r,p.value),c=l.concat(m),d=z(()=>o(c));if(Ne(c),u===0)for(let h=0;h<d.length;++h)s.push(de(0));let f=c[0].shape[0];for(let h=0;h<d.length;++h){let g=d[h],b=s[h];s[h]=z(()=>Y(s[h],M(f,g))),u>0&&Ne(b)}Ne(d),i+=f,++u}return s}),p.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let p=0;p<s.length;++p){let l=s[p];s[p]=me(s[p],i),Ne(l)}return Dr(s)}function sT(r){y.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function Uc(r,t,e){return r==null?[null]:Array.isArray(r)?r.map(n=>pu(n,t,e-t)):pu(r,t,e-t)}function aT(r,t){return z(()=>r==null?null:Array.isArray(r)?r.map(e=>aT(e,t)):$y(r,t.dtype==="int32"?t:te(t,"int32")))}function iT(r,t){let e=[],n=0,o=null;for(;n<r;)o=n+t,o>=r&&(o=r),e.push([n,o]),n=o;return e}async function $J(r,t,e,n,o,s,a,i,u,p,l,m,c,d,f){o==null&&(o=32),s==null&&(s=1),l==null&&(l=!0),c==null&&(c=0);let h=!1;if(u!=null&&p!=null&&(h=!0),f!=null&&(h=!0,d==null))throw new O("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=r.checkNumSamples(e,o,d,"steps_per_epoch"),b;g!=null&&(b=rn(0,g)),a==null&&(a=1);let{callbackList:T,history:x}=Yy(i,a,s,c,g,d,o,h,m);T.setModel(r),r.history=x,await T.onTrainBegin(),r.stopTraining_=!1;for(let I=c;I<s;++I){await T.onEpochBegin(I);let k={};if(d!=null)throw new ve("stepsPerEpoch mode is not implemented yet.");{if(l==="batch")throw new ve("batch shuffling is not implemneted yet");l&&y.shuffle(b);let w=Kt(b),R=iT(g,o);for(let F=0;F<R.length;++F){let P={};if(await T.onBatchBegin(F,P),z(()=>{let E=R[F][0],B=R[F][1],G=pu(w,E,B-E);P.batch=F,P.size=B-E;let U=aT(e,G),V=t(U);for(let W=0;W<n.length;++W){let H=n[W],j=V[W];P[H]=j,Bt(j)}if(F===R.length-1&&h){let W=r.testLoop(u,p,o);for(let H=0;H<n.length;++H){let j=n[H],X=W[H];Bt(X),k["val_"+j]=X}}}),await T.onBatchEnd(F,P),Vy(P),r.stopTraining_)break}w.dispose()}if(await T.onEpochEnd(I,k),r.stopTraining_)break}return await T.onTrainEnd(),await r.history.syncData(),r.history}async function xE(r,t,e,n={}){if(r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;let o,s,a,i,u,p,l,m,c;try{let d=n.batchSize==null?32:n.batchSize;sT(d);let f=!1,h=await r.standardizeUserData(t,e,n.sampleWeight,n.classWeight,f,d);o=h[0],s=h[1],c=h[2];let g=!1,b;if(n.validationData!=null&&n.validationData.length>0){if(g=!0,n.validationData.length===2)u=n.validationData[0],p=n.validationData[1];else throw n.validationData.length===3?new ve("validationData including sample weights is not supported yet."):new O(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let P=!0,E=await r.standardizeUserData(u,p,null,null,P,d);l=E[0],m=E[1],b=l.concat(m)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){g=!0;let P=Math.floor(o[0].shape[0]*(1-n.validationSplit)),E=o[0].shape[0];l=Uc(o,P,E),a=o,o=Uc(o,0,P),m=Uc(s,P,E),i=s,s=Uc(s,0,P),b=l.concat(m)}else n.validationSteps!=null&&(g=!0);let T=o.concat(s).concat(c);r.checkTrainableWeightsConsistency();let x=r.makeTrainFunction(),I=r.getDedupedMetricsNames(),k,w;g?(r.makeTestFunction(),k=r.testFunction,w=I.slice().concat(I.map(P=>"val_"+P))):(k=null,b=[],w=I.slice());let R=Xy(n.callbacks,n.yieldEvery);return await $J(r,x,T,I,d,n.epochs,n.verbose,R,k,b,n.shuffle,w,n.initialEpoch,null,null)}finally{r.isTraining=!1,Vs(o,t),Vs(s,e),Vs(a,t),Vs(i,e),Vs(l,u),Vs(m,p),c!=null&&Ne(c)}}function NA(r){let t=[];r instanceof ze&&(r=[r]);for(let e=0;e<r.length;++e){let n=r[e];if(n.rank===1)t.push(mu(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(n)}}return t}function Vs(r,t){if(r==null)return;let e=[];if(t instanceof ze)e.push(t.id);else if(Array.isArray(t))t.forEach(o=>e.push(o.id));else if(t!=null)for(let o in t){let s=t[o];e.push(s.id)}let n=[];if(r instanceof ze)e.indexOf(r.id)===-1&&n.push(r);else if(Array.isArray(r))r.forEach(o=>{e.indexOf(o.id)===-1&&n.push(o)});else if(r!=null)for(let o in r){let s=r[o];e.indexOf(s.id)===-1&&n.push(s)}n.forEach(o=>{o.isDisposed||o.dispose()})}function BJ(r){return r instanceof ze}function DA(r){return Array.isArray(r)}function IE(r){return!BJ(r)&&!DA(r)}function CE(r,t,e,n=!0,o=""){if(t==null||t.length===0){if(r!=null){let a=!1;if(DA(r)&&r.length>0)a=!0;else if(IE(r)){for(let i in r)if(r.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new O(`Error when checking model ${o} expected no data, but got ${r}`)}return[]}if(r==null)return t.map(a=>null);let s;if(IE(r)){r=r,s=[];for(let a of t){if(r[a]==null)throw new O(`No data provided for "${a}". Need data for each key in: ${t}`);s.push(r[a])}}else if(DA(r)){if(r=r,r.length!==t.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,t.length>1)throw new O(`The model ${o} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=NA(s),e!=null)for(let a=0;a<t.length;++a){if(e[a]==null)continue;let i=s[a];if(i.shape.length!==e[a].length)throw new O(`Error when checking ${o}: expected ${t[a]} to have ${e[a].length} dimension(s). but got array with shape ${i.shape}`);for(let u=0;u<e[a].length;++u){if(u===0&&!n)continue;let p=i.shape[u],l=e[a][u];if(l!=null&&l>=0&&p!==l)throw new O(`${o} expected a batch of elements where each example has shape [${e[a].slice(1,e[a].length)}] (i.e.,tensor shape [*,${e[a].slice(1,e[a].length)}]) but the ${o} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function OJ(r,t,e){let n=Gs(r.map(s=>s.shape[0]));n.sort();let o=Gs(t.map(s=>s.shape[0]));if(o.sort(),n.length>1)throw new O(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(o.length>1)throw new O(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(n.length>0&&o.length>0&&!y.arraysEqual(n,o))throw new O(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${o[0]} target sample(s).`)}function zJ(r,t,e){let n=[Ci,Gc,Tl];for(let o=0;o<r.length;++o){let s=r[o],a=t[o],i=e[o];if(a!=null){if(a===Tl&&s.shape[s.shape.length-1]===1)throw new O(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(a)!==-1){let u=s.shape.slice(1),p=i.slice(1);for(let l=0;l<u.length;++l){let m=u[l],c=p[l];if(c!=null&&m!==c)throw new O(`A target Tensor with shape ${s.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function kE(r,t,e,n=!0,o=""){let s;if(Array.isArray(r)){if(r.length!==t.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(t.length>1)throw new O(`The model expects ${t.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(e!=null)for(let a=0;a<t.length;++a){if(e[a]==null)continue;let i=s[a];if(i.shape.length!==e[a].length)throw new O(`Error when checking ${o}: expected ${t[a]} to have ${e[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let u=0;u<e[a].length;++u){if(u===0&&!n)continue;let p=i.shape[u],l=e[a][u];if(l!=null&&l!==p)throw new O(`Error when checking ${o}: expected ${t[a]} to have shape ${JSON.stringify(e[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function GJ(r,t){if(r==null||Array.isArray(r)&&r.length===0)return t.map(n=>[]);let e;if(typeof r=="string"||typeof r=="function")e=[r];else if(Array.isArray(r)||typeof r=="object")e=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(e))return t.map(n=>e);{let n=[];for(let o of t){let s=e.hasOwnProperty(o)?e[o]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var UJ="layers-model",jn=class extends qn{constructor(e){super(e);this.isTraining=!1}summary(e,n,o=console.log){if(!this.built)throw new O("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");cE(this,e,n,o)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=mE(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Hr))throw new O("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let n=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let i in e.loss)if(this.outputNames.indexOf(i)===-1)throw new O(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(let i of this.outputNames)e.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),n.push(Zy(e.loss[i]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new O(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);n=e.loss.map(u=>Zy(u))}else{let i=Zy(e.loss);this.outputs.forEach(u=>{n.push(i)})}this.lossFunctions=n,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){let u=this.internalOutputShapes[i],p=this.outputNames[i];this.feedOutputNames.push(p),this.feedOutputShapes.push(u),this.feedLossFns.push(this.lossFunctions[i])}let o=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ua("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(o.indexOf(i)!==-1)continue;let u=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([u,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});let s=GJ(e.metrics,this.outputNames),a=(i,u,p)=>{this.outputNames.length>1&&(u=this.outputNames[i]+"_"+u),this.metricsNames.push(u),this.metricsTensors.push([p,i])};Ua("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(o.indexOf(i)!==-1)continue;let u=s[i];(l=>{let m="",c,d,f;for(let h of l){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let b=this.internalOutputShapes[i];b[b.length-1]===1||this.lossFunctions[i]===Gc?["accuracy","acc"].indexOf(h)!==-1?d=Eh:["crossentropy","ce"].indexOf(h)!==-1&&(d=Jy):this.lossFunctions[i]===zc?["accuracy","acc"].indexOf(h)!==-1?d=eT:["crossentropy","ce"].indexOf(h)!==-1&&(d=vA):["accuracy","acc"].indexOf(h)!==-1?d=Lh:["crossentropy","ce"].indexOf(h)!==-1&&(d=_h);let T;["accuracy","acc"].indexOf(h)!==-1?T="acc":["crossentropy","ce"].indexOf(h)!==-1&&(T="ce"),f=d,c=m+T}else f=pE(h),c=m+$h(h);let g;Ua(c,()=>{g=f}),a(i,c,g)}})(u)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,n,o={}){let s=o.batchSize==null?32:o.batchSize;sT(s);let a=!0,i=this.standardizeUserDataXY(e,n,a,s);try{let u=i[0].concat(i[1]);this.makeTestFunction();let p=this.testFunction,l=this.testLoop(p,u,s,o.verbose,o.steps);return Dr(l)}finally{Vs(i[0],e),Vs(i[1],n)}}async evaluateDataset(e,n){return this.makeTestFunction(),TE(this,e,n)}checkNumSamples(e,n,o,s="steps"){let a;if(o!=null){if(a=null,n!=null)throw new O(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${n}`)}else if(e!=null)Array.isArray(e)?a=e[0].shape[0]:a=e.shape[0];else throw new O(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return a}execute(e,n){if(Array.isArray(n)&&n.length===0)throw new O("`outputs` is an empty Array, which is not allowed.");let o=Array.isArray(n),s=o?n:[n],a=this.retrieveSymbolicTensors(s),i=new Ks;if(e instanceof ze&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new O(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let p=0;p<this.inputs.length;++p)i.add(this.inputs[p],e[p])}else for(let p of this.inputs){let l=e[p.name];if(l==null)throw new O(`No value is provided for the model's input ${p.name}`);i.add(p,l)}let u=bl(a,i);return o?u:u[0]}retrieveSymbolicTensors(e){let n=Os(null,e.length),o=e.length;for(let s of this.layers){let a=Array.isArray(s.output)?s.output:[s.output],i=a.map(u=>u.name);for(let u=0;u<e.length;++u){let p=i.indexOf(e[u]);if(p!==-1&&(n[u]=a[p],o--),o===0)break}if(o===0)break}if(o>0){let s=[];throw n.forEach((a,i)=>{a==null&&s.push(e[i])}),new O(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return n}predictLoop(e,n=32,o=!1){return z(()=>{let s=this.checkNumSamples(e);if(o)throw new ve("Verbose predictLoop() is not implemented yet.");let a=iT(s,n),i=this.outputs.map(u=>[]);for(let u=0;u<a.length;++u)z(()=>{let l=a[u][0],m=a[u][1],c=Uc(e,l,m),d=[];if(Array.isArray(c))for(let h=0;h<c.length;++h)d.push({key:this.inputs[h],value:c[h]});else d.push({key:this.inputs[0],value:c});let f=new Ks(d);return bl(this.outputs,f)}).forEach((l,m)=>i[m].push(l));return Dr(i.map(u=>lt(u,0)))})}predict(e,n={}){let o=NA(e);kE(o,this.inputNames,this.feedInputShapes,!1);try{let s=n.batchSize==null?32:n.batchSize;return sT(s),this.predictLoop(o,s)}finally{Vs(o,e)}}predictOnBatch(e){kE(e,this.inputNames,this.feedInputShapes,!0);let n=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,n)}standardizeUserDataXY(e,n,o=!0,s){if(this.optimizer_==null)throw new qr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let i=0;i<this.feedOutputShapes.length;++i){let u=this.feedOutputShapes[i];this.feedLossFns[i]===zc?a.push(u.slice(0,u.length-1).concat([1])):a.push(u)}if(e=CE(e,this.feedInputNames,this.feedInputShapes,!1,"input"),n=CE(n,this.feedOutputNames,a,!1,"target"),OJ(e,n,null),zJ(n,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!==0)throw new O(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,n]}async standardizeUserData(e,n,o,s,a=!0,i){let[u,p]=this.standardizeUserDataXY(e,n,a,i);if(o!=null)throw new Error("sample weight is not supported yet.");let l=null;if(s!=null){let m=nT(s,this.outputNames);l=[];for(let c=0;c<m.length;++c)l.push(await oT(p[c],null,m[c]))}return[u,p,l]}testLoop(e,n,o,s=0,a){return z(()=>{let i=this.checkNumSamples(n,o,a,"steps"),u=[];if(s>0)throw new ve("Verbose mode is not implemented yet.");if(a!=null)throw new ve("steps mode in testLoop() is not implemented yet");{let p=iT(i,o),l=Kt(rn(0,i));for(let m=0;m<p.length;++m){let c=p[m][0],d=p[m][1],f=pu(l,c,d-c),h=aT(n,f),g=e(h);if(m===0)for(let b=0;b<g.length;++b)u.push(de(0));for(let b=0;b<g.length;++b){let T=g[b];u[b]=Y(u[b],M(d-c,T))}}for(let m=0;m<u.length;++m)u[m]=me(u[m],i)}return u})}getDedupedMetricsNames(){let e=this.metricsNames,n=[];for(let o=0;o<e.length;++o){let s=e[o],a=s;mA(e,s)>1&&(a+=`_${mA(e.slice(0,o),s)}`),n.push(a)}return n}makeTrainFunction(){return e=>{let n=[],o=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],u=()=>{let c=[];for(let g=0;g<this.inputs.length;++g)c.push({key:this.inputs[g],value:o[g]});let d=new Ks(c),f=bl(this.outputs,d,{training:!0}),h;for(let g=0;g<this.lossFunctions.length;++g){let b=this.lossFunctions[g],T=b(s[g],f[g]);a[g]!=null&&(T=fE(T,a[g]));let x=Lt(T);n.push(x),g===0?h=T:h=Y(h,T)}for(let g=0;g<this.metricsTensors.length;++g){let b;if(this.outputs.length>1&&g<this.outputs.length)b=n[g];else{let T=this.metricsTensors[g][0],x=this.metricsTensors[g][1];b=Lt(T(s[x],f[x]))}Bt(b),i.push(b)}return h=Lt(h),this.calculateLosses().forEach(g=>{h=Y(h,g)}),h},p=this.collectedTrainableWeights.map(c=>c.read()),l=!0;return[this.optimizer_.minimize(u,l,p)].concat(i)}}makeTestFunction(){this.testFunction=e=>z(()=>{let n=[],o,s=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let l=0;l<this.inputs.length;++l)i.push({key:this.inputs[l],value:s[l]});let u=new Ks(i),p=bl(this.outputs,u);for(let l=0;l<this.lossFunctions.length;++l){let m=this.lossFunctions[l],c=Lt(m(a[l],p[l]));l===0?o=c:o=Y(o,c),n.push(o)}for(let l=0;l<this.metricsTensors.length;++l){let m=this.metricsTensors[l][0],c=this.metricsTensors[l][1],d=Lt(m(a[c],p[c]));n.push(d)}return n})}async fit(e,n,o={}){return xE(this,e,n,o)}async fitDataset(e,n){return yE(this,e,n)}async trainOnBatch(e,n){let o=await this.standardizeUserData(e,n),s=o[0],a=o[1],u=this.makeTrainFunction()(s.concat(a)),p=[];for(let l of u){let m=await l.data();p.push(m[0])}return Ne(u),Vs(o[0],e),Vs(o[1],n),Dr(p)}getNamedWeights(e){let n=[],o=e!=null&&e.trainableOnly,s=o?this.trainableWeights:this.weights,a=this.getWeights(o);for(let i=0;i<s.length;++i)o&&!s[i].trainable||n.push({name:s[i].originalName,tensor:a[i]});return n}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let n=dh().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=n-dh().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=zs(this.loss);else if(Array.isArray(this.loss)){for(let n of this.loss)if(typeof n!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(n=>zs(n))}else{let n=Object.keys(this.loss);e={};let o=this.loss;for(let s of n)if(typeof o[s]=="string")e[s]=zs(o[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[zs($h(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>zs($h(e)));{let e={};for(let n in this.metrics)e[n]=zs($h(this.metrics[n]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let n=xl(e.optimizer_config),o=xn(n),s;if(typeof e.loss=="string")s=uu(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(i=>uu(i));else if(e.loss!=null){s={};for(let i in e.loss)s[i]=uu(e.loss[i])}let a;if(Array.isArray(e.metrics))a=e.metrics.map(i=>uu(i));else if(e.metrics!=null){a={};for(let i in e.metrics)a[i]=uu(e.metrics[i])}this.compile({loss:s,metrics:a,optimizer:o})}async save(e,n){if(typeof e=="string"){let l=Dn.getSaveHandlers(e);if(l.length===0)throw new O(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new O(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new O("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let o=await Dn.encodeWeights(this.getNamedWeights(n)),s=!1,a=null,u={modelTopology:this.toJSON(a,s),format:UJ,generatedBy:`TensorFlow.js tfjs-layers v${Bh}`,convertedBy:null};if((n==null?!1:n.includeOptimizer)&&this.optimizer!=null){u.trainingConfig=this.getTrainingConfig();let l="optimizer",{data:m,specs:c}=await Dn.encodeWeights(await this.optimizer.getWeights(),l);o.specs.push(...c),o.data=Dn.concatenateArrayBuffers([o.data,m])}return this.userDefinedMetadata!=null&&(wA(this.userDefinedMetadata,this.name,!0),u.userDefinedMetadata=this.userDefinedMetadata),u.weightData=o.data,u.weightSpecs=o.specs,e.save(u)}setUserDefinedMetadata(e){wA(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};jn.className="Model";Q.registerClass(jn);var uT=class extends jn{};uT.className="Functional";Q.registerClass(uT);async function SE(r,t){"modelTopology"in r||(r={modelTopology:r}),r=r;let e=r.modelTopology;e.model_config!=null&&(e=e.model_config);let n=xl(e),o=xn(n,t);if(r.weightsManifest!=null){let s=await Dn.loadWeights(r.weightsManifest,r.pathPrefix,o.weights.map(i=>i.originalName)),a={};for(let i of o.weights)a[i.originalName]=s[i.originalName];o.loadWeights(a),Ne(s)}return o}async function vE(r,t){if(t==null&&(t={}),typeof r=="string"){let e=Dn.getLoadHandlers(r,t);if(e.length===0)e.push(Dn.browserHTTPRequest(r,t));else if(e.length>1)throw new O(`Found more than one (${e.length}) load handlers for URL '${r}'`);r=e[0]}return WJ(r,void 0,t)}async function WJ(r,t,e){if(e==null&&(e={}),r.load==null)throw new O("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let n=await r.load(),o=n.modelTopology;o.model_config!=null&&(o=o.model_config);let s=e.strict==null?!0:e.strict,a=n.weightData!=null&&n.weightSpecs!=null&&s,i=xn(xl(o),t,a),u=n.trainingConfig;if(u!=null&&i.loadTrainingConfig(u),n.userDefinedMetadata!=null&&i.setUserDefinedMetadata(n.userDefinedMetadata),n.weightData!=null){if(n.weightSpecs==null)throw new O("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:p,optimizerWeights:l}=KJ(n.weightData,n.weightSpecs);i.loadWeights(p,s),i.optimizer!=null&&l.length>0&&await i.optimizer.setWeights(l),Ne(p),Ne(l.map(m=>m.tensor))}return i}function KJ(r,t){let e=Dn.decodeWeights(r,t),n={},o=[];return t.forEach(s=>{s.group==="optimizer"?o.push({name:s.name,tensor:e[s.name]}):n[s.name]=e[s.name]}),{modelWeights:n,optimizerWeights:o}}var pT=class extends jn{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Cp("sequential_"),e.layers!=null)for(let n of e.layers)this.add(n)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(o=>o<0))throw new O(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let n=e instanceof pT||e instanceof jn,o;if(n){if(o=e,o.outputs.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(o.inputs.length!==1)throw new O("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new O("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=zy({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(n)this.outputs=o.outputs,this.inputs=o.inputs;else{if(e.inboundNodes.length!==1)throw new O(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=bA(this.outputs[0])}this.inboundNodes=[],new cu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Os(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,n){return this.model==null&&this.build(),this.model.call(e,n)}build(e){if(tt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new jn({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,n,o=console.log){this.built||this.build(),super.summary(e,n,o)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,n,o={}){if(!this.built)throw new qr("The model needs to be compiled before being used.");return this.model.evaluate(e,n,o)}async evaluateDataset(e,n){if(!this.built)throw new qr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,n)}predict(e,n={}){return this.model==null&&this.build(),this.model.predict(e,n)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,n,o={}){if(!this.built)throw new qr("The model needs to be compiled before being used.");return this.model.fit(e,n,o)}async fitDataset(e,n){if(!this.built)throw new qr("The model needs to be compiled before being used.");return this.model.fitDataset(e,n)}async trainOnBatch(e,n){return this.model.trainOnBatch(e,n)}static fromConfig(e,n,o={},s=!1){let a,i={};if(n instanceof Array){if(n[0].className==null||n[0].className==="Merge")throw new O("Legacy serialization format not supported yet.");a=n}else y.assert(n.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=n.layers,delete n.layers,i=n;let u=new e(i);if(!(u instanceof pT))throw new ve(`Sequential.fromConfig called on non-Sequential input: ${u}`);for(let p of a){let m=xn(p,void 0,s);s&&m.setFastWeightInitDuringBuild(!0),u.add(m)}return u}set stopTraining(e){if(this.model==null)throw new O("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new O("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let n of this.layers){let o={};o.className=n.getClassName(),o.config=n.getConfig(),e.push(o)}return{name:this.name,layers:e}}},Il=pT;Il.className="Sequential";Q.registerClass(Il);function VJ(r){return new jn(r)}function HJ(r){return new Il(r)}function qJ(r,t){return t==null&&(t={}),vE(r,t)}function RA(r){return zy(r)}function jJ(r,t){Bc.registerCallbackConstructor(r,t)}var sn=class extends Q.Serializable{getConfig(){return{}}},lT=class extends sn{apply(t,e=1){return XF(t,e)}};lT.className="elu";Q.registerClass(lT);var mT=class extends sn{apply(t){return my(t)}};mT.className="selu";Q.registerClass(mT);var cT=class extends sn{apply(t){return tn(t)}};cT.className="relu";Q.registerClass(cT);var dT=class extends sn{apply(t){return z(()=>cp(6,tn(t)))}};dT.className="relu6";Q.registerClass(dT);var fT=class extends sn{apply(t){return t}};fT.className="linear";Q.registerClass(fT);var hT=class extends sn{apply(t){return Pn(t)}};hT.className="sigmoid";Q.registerClass(hT);var gT=class extends sn{apply(t){return ZF(t)}};gT.className="hardSigmoid";Q.registerClass(gT);var bT=class extends sn{apply(t){return au(t)}};bT.className="softplus";Q.registerClass(bT);var yT=class extends sn{apply(t){return YF(t)}};yT.className="softsign";Q.registerClass(yT);var TT=class extends sn{apply(t){return sp(t)}};TT.className="tanh";Q.registerClass(TT);var Wc=class extends sn{apply(t,e=-1){return fc(t,e)}};Wc.className="softmax";Q.registerClass(Wc);var xT=class extends sn{apply(t,e=-1){return Jb(t,e)}};xT.className="logSoftmax";Q.registerClass(xT);var IT=class extends sn{apply(t,e=1){return z(()=>M(Pn(M(t,e)),t))}};IT.className="swish";Q.registerClass(IT);var CT=class extends sn{apply(t){return z(()=>M(t,sp(au(t))))}};CT.className="mish";Q.registerClass(CT);function Ha(r){return r.getClassName()}function FA(r,t={}){return Ti(r,Q.SerializationMap.getMap().classNameMap,t,"activation")}function qa(r){if(r==null){let t={};return t.className="linear",t.config={},FA(t)}if(typeof r=="string"){let t={};return t.className=r,t.config={},FA(t)}else return r instanceof sn?r:FA(r)}function PA(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var kT=class extends Q.Serializable{},Ap=class extends kT{constructor(e){super();PA(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return z(()=>{let n=xt([1]);return this.hasL1&&(n=Y(n,fe(M(this.l1,Ot(e))))),this.hasL2&&(n=Y(n,fe(M(this.l2,ll(e))))),L(n,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,n){return new e({l1:n.l1,l2:n.l2})}};Ap.className="L1L2";Q.registerClass(Ap);function NE(r){return PA(r),new Ap({l1:r!=null?r.l1:null,l2:0})}function DE(r){return PA(r),new Ap({l2:r!=null?r.l2:null,l1:0})}var AE={l1l2:"L1L2"};function gt(r){return xc(r)}function wE(r,t={}){return Ti(r,Q.SerializationMap.getMap().classNameMap,t,"regularizer")}function wt(r){if(r==null)return null;if(typeof r=="string"){let e={className:r in AE?AE[r]:r,config:{}};return wE(e)}else return r instanceof kT?r:wE(r)}var Kc=class extends _e{constructor(e){super(e??{});this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,n){e=Ee(e);let o=tn(e);return this.maxValue!=null&&(o=Ur(o,0,this.maxValue)),o}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},n=super.getConfig();return Object.assign(e,n),e}};Kc.className="ReLU";Q.registerClass(Kc);var Vc=class extends _e{constructor(e){super(e??{});this.DEFAULT_ALPHA=.3;e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){let o=Ee(e);return ac(o,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}};Vc.className="LeakyReLU";Q.registerClass(Vc);var Hc=class extends _e{constructor(e){super(e??{});this.DEFAULT_ALPHA_INITIALIZER="zeros";if(e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=It(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=wt(e.alphaRegularizer),this.alphaConstraint=Ht(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new O(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=tt(e);let n=e.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)n[s-1]=1;this.alpha=this.addWeight("alpha",n,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let o={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)o[s]=e[s];this.inputSpec=[new At({ndim:e.length,axes:o})],this.built=!0}call(e,n){return e=Ee(e),mc(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Ft(this.alphaInitializer),alphaRegularizer:gt(this.alphaRegularizer),alphaConstraint:Vt(this.alphaConstraint),sharedAxes:this.sharedAxes},n=super.getConfig();return Object.assign(e,n),e}};Hc.className="PReLU";Q.registerClass(Hc);var qc=class extends _e{constructor(e){super(e??{});this.DEFAULT_ALPHA=1;if(e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new ve(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){let o=Ee(e);return pp(o)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}};qc.className="ELU";Q.registerClass(qc);var jc=class extends _e{constructor(e){super(e??{});this.DEFAULT_THETA=1;e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,n){let o=Ee(e);return M(o,te(ur(o,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},n=super.getConfig();return Object.assign(e,n),e}};jc.className="ThresholdedReLU";Q.registerClass(jc);var Xc=class extends _e{constructor(e){super(e??{});this.DEFAULT_AXIS=1;e==null&&(e={}),this.softmax=new Wc().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,n){let o=Ee(e);return this.softmax(o,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}};Xc.className="Softmax";Q.registerClass(Xc);function wp(r,t,e){if(typeof r=="number")return Os(r,t);if(r.length!==t)throw new O(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${r.length} elements.`);for(let n=0;n<t;++n){let o=r[n];if(!VF(o))throw new O(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(r)} including a non-integer number ${o}`)}return r}function En(r,t,e,n,o=1){if(r==null)return r;let s=t+(t-1)*(o-1),a;return e==="same"?a=r:a=r-s+1,Math.floor((a+n-1)/n)}function ja(r,t,e,n){if(r==null)return null;if(n==="valid")r=r*t+Wa([e-t,0]);else if(n==="same")r=r*t;else throw new O(`Unsupport padding mode: ${n}.`);return r}function Oh(r,t){return z(()=>(Gt(t),t==="channelsFirst"?Oe(r,[0,2,3,1]):r))}function MA(r,t){return z(()=>(Gt(t),t==="channelsFirst"?Oe(r,[0,2,3,4,1]):r))}function YJ(r,t,e,n=1,o="valid",s,a=1){return z(()=>{if(s==null&&(s=bn()),Gt(s),r.shape.length!==3)throw new O(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(t.shape.length!==3)throw new O(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new O(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(s==="channelsFirst"&&(r=Oe(r,[0,2,1])),o==="causal")throw new ve("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Wb(r,t,n,o==="same"?"same":"valid","NWC",a);return e!=null&&(i=yn(i,e)),i})}function RE(r,t,e,n=[1,1],o="valid",s,a,i=null){return z(()=>{if(s==null&&(s=bn()),Gt(s),r.rank!==3&&r.rank!==4)throw new O(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(t.rank!==3&&t.rank!==4)throw new O(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let u=Oh(r,s);if(o==="causal")throw new ve("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=fp.conv2d({x:u,filter:t,strides:n,pad:o==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:e,activation:i}),s==="channelsFirst"&&(u=Oe(u,[0,3,1,2])),u})}function ZJ(r,t,e,n=[1,1,1],o="valid",s,a){return z(()=>{if(s==null&&(s=bn()),Gt(s),r.rank!==4&&r.rank!==5)throw new O(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(t.rank!==4&&t.rank!==5)throw new O(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let i=MA(r,s);if(o==="causal")throw new ve("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Vb(i,t,n,o==="same"?"same":"valid","NDHWC",a),e!=null&&(i=yn(i,e)),s==="channelsFirst"&&(i=Oe(i,[0,4,1,2,3])),i})}var Sl=class extends _e{constructor(e,n){super(n);this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(Sl.verifyArgs(n),this.rank=e,nr(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new ve(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=wp(n.kernelSize,e,"kernelSize"),this.strides=wp(n.strides==null?1:n.strides,e,"strides"),this.padding=n.padding==null?"valid":n.padding,gn(this.padding),this.dataFormat=n.dataFormat==null?"channelsLast":n.dataFormat,Gt(this.dataFormat),this.activation=qa(n.activation),this.useBias=n.useBias==null?!0:n.useBias,this.biasInitializer=It(n.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ht(n.biasConstraint),this.biasRegularizer=wt(n.biasRegularizer),this.activityRegularizer=wt(n.activityRegularizer),this.dilationRate=wp(n.dilationRate==null?1:n.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new O(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new O(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new O(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(os("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Dy(e.kernelSize,"number",1,3))throw new O(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ha(this.activation),useBias:this.useBias,biasInitializer:Ft(this.biasInitializer),biasRegularizer:gt(this.biasRegularizer),activityRegularizer:gt(this.activityRegularizer),biasConstraint:Vt(this.biasConstraint)},n=super.getConfig();return Object.assign(e,n),e}},Np=class extends Sl{constructor(e,n){super(e,n);this.kernel=null;Np.verifyArgs(n),this.filters=n.filters,nr(this.filters,"filters"),this.kernelInitializer=It(n.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ht(n.kernelConstraint),this.kernelRegularizer=wt(n.kernelRegularizer)}build(e){e=tt(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[n]}`);let o=e[n],s=this.kernelSize.concat([o,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[n]:o}}],this.built=!0}call(e,n){return z(()=>{e=Ee(e);let o,s=this.bias==null?null:this.bias.read(),a=Ry(this.activation.getClassName());if(a!=null&&this.rank===2)o=RE(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(this.rank===1)o=YJ(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)o=RE(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)o=ZJ(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new ve("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(o=this.activation.apply(o))}return o})}computeOutputShape(e){e=tt(e);let n=[],o=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<o.length;++a){let i=En(o[a],this.kernelSize[a],this.padding,this.strides[a],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[a]);n.push(i)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(n),s.push(this.filters)):(s.push(this.filters),s=s.concat(n)),s}getConfig(){let e={filters:this.filters,kernelInitializer:Ft(this.kernelInitializer),kernelRegularizer:gt(this.kernelRegularizer),kernelConstraint:Vt(this.kernelConstraint)},n=super.getConfig();return Object.assign(e,n),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new O(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},EA=class extends Np{constructor(t){super(2,t),EA.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Dy(t.kernelSize,"number",1,2))throw new O(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}},Cl=EA;Cl.className="Conv2D";Q.registerClass(Cl);var LA=class extends Np{constructor(t){super(3,t),LA.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new O(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}},kl=LA;kl.className="Conv3D";Q.registerClass(kl);var Yc=class extends Cl{constructor(e){super(e);if(this.inputSpec=[new At({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=tt(e),e.length!==4)throw new O("Input should have rank 4; Received input shape: "+JSON.stringify(e));let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let o=e[n],s=this.kernelSize.concat([this.filters,o]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new At({ndim:4,axes:{[n]:o}})],this.built=!0}call(e,n){return z(()=>{let o=Ee(e);if(o.shape.length!==4)throw new O(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${o.shape.length}`);let s=o.shape,a=s[0],i,u;this.dataFormat==="channelsFirst"?(i=2,u=3):(i=1,u=2);let p=s[i],l=s[u],m=this.kernelSize[0],c=this.kernelSize[1],d=this.strides[0],f=this.strides[1],h=ja(p,d,m,this.padding),g=ja(l,f,c,this.padding),b=[a,h,g,this.filters];this.dataFormat!=="channelsLast"&&(o=Oe(o,[0,2,3,1]));let T=Kb(o,this.kernel.read(),b,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(T=Oe(T,[0,3,1,2])),this.bias!=null&&(T=yn(T,this.bias.read(),this.dataFormat)),this.activation!=null&&(T=this.activation.apply(T)),T})}computeOutputShape(e){e=tt(e);let n=e.slice(),o,s,a;this.dataFormat==="channelsFirst"?(o=1,s=2,a=3):(o=3,s=1,a=2);let i=this.kernelSize[0],u=this.kernelSize[1],p=this.strides[0],l=this.strides[1];return n[o]=this.filters,n[s]=ja(n[s],p,i,this.padding),n[a]=ja(n[a],l,u,this.padding),n}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Yc.className="Conv2DTranspose";Q.registerClass(Yc);var Zc=class extends kl{constructor(e){super(e);if(this.inputSpec=[new At({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=tt(e),e.length!==5)throw new O("Input should have rank 5; Received input shape: "+JSON.stringify(e));let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let o=e[n],s=this.kernelSize.concat([this.filters,o]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new At({ndim:5,axes:{[n]:o}})],this.built=!0}call(e,n){return z(()=>{let o=Ee(e);if(o.shape.length!==5)throw new O(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${o.shape.length}`);let s=o.shape,a=s[0],i,u,p;this.dataFormat==="channelsFirst"?(p=2,i=3,u=4):(p=1,i=2,u=3);let l=s[p],m=s[i],c=s[u],d=this.kernelSize[0],f=this.kernelSize[1],h=this.kernelSize[2],g=this.strides[0],b=this.strides[1],T=this.strides[2],x=ja(l,g,d,this.padding),I=ja(m,b,f,this.padding),k=ja(c,T,h,this.padding),w=[a,x,I,k,this.filters];this.dataFormat!=="channelsLast"&&(o=Oe(o,[0,2,3,4,1]));let R=qb(o,this.kernel.read(),w,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(R=Oe(R,[0,4,1,2,3])),this.bias!==null&&(R=yn(R,this.bias.read(),this.dataFormat)),this.activation!==null&&(R=this.activation.apply(R)),R})}computeOutputShape(e){e=tt(e);let n=e.slice(),o,s,a,i;this.dataFormat==="channelsFirst"?(o=1,s=2,a=3,i=4):(o=4,s=1,a=2,i=3);let u=this.kernelSize[0],p=this.kernelSize[1],l=this.kernelSize[2],m=this.strides[0],c=this.strides[1],d=this.strides[2];return n[o]=this.filters,n[s]=ja(n[s],m,u,this.padding),n[a]=ja(n[a],c,p,this.padding),n[i]=ja(n[i],d,l,this.padding),n}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Zc.className="Conv3DTranspose";Q.registerClass(Zc);var ST=class extends Np{constructor(e,n){super(e,n);this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform";this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform";this.depthwiseKernel=null;this.pointwiseKernel=null;if(n.filters==null)throw new O("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(n.kernelInitializer!=null||n.kernelRegularizer!=null||n.kernelConstraint!=null)throw new O("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(n.padding!=null&&n.padding!=="same"&&n.padding!=="valid")throw new O(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(n.padding)}`);this.depthMultiplier=n.depthMultiplier==null?1:n.depthMultiplier,this.depthwiseInitializer=It(n.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=wt(n.depthwiseRegularizer),this.depthwiseConstraint=Ht(n.depthwiseConstraint),this.pointwiseInitializer=It(n.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=wt(n.pointwiseRegularizer),this.pointwiseConstraint=Ht(n.pointwiseConstraint)}build(e){if(e=tt(e),e.length<this.rank+2)throw new O(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null||e[n]<0)throw new O(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[n])}`);let o=e[n],s=this.kernelSize.concat([o,this.depthMultiplier]),a=[];for(let u=0;u<this.rank;++u)a.push(1);a.push(o*this.depthMultiplier,this.filters);let i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new At({ndim:this.rank+2,axes:{[n]:o}})],this.built=!0}call(e,n){return z(()=>{e=Ee(e);let o;if(this.rank===1)throw new ve("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Oe(e,[0,2,3,1])),o=cy(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(o=yn(o,this.bias.read(),this.dataFormat)),this.activation!=null&&(o=this.activation.apply(o)),this.dataFormat==="channelsFirst"&&(o=Oe(o,[0,3,1,2])),o})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ft(this.depthwiseInitializer),e.pointwiseInitializer=Ft(this.pointwiseInitializer),e.depthwiseRegularizer=gt(this.depthwiseRegularizer),e.pointwiseRegularizer=gt(this.pointwiseRegularizer),e.depthwiseConstraint=Vt(this.depthwiseConstraint),e.pointwiseConstraint=Vt(this.pointwiseConstraint),e}};ST.className="SeparableConv";var Qc=class extends ST{constructor(t){super(2,t)}};Qc.className="SeparableConv2D";Q.registerClass(Qc);var _A=class extends Np{constructor(t){super(1,t),_A.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){let t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Dy(t.kernelSize,"number",1,1))throw new O(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}},Jc=_A;Jc.className="Conv1D";Q.registerClass(Jc);var ed=class extends _e{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,n){return z(()=>{if(e=Ee(e),this.dataFormat==="channelsLast"){let o=Nh(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Nh(o,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let o=Nh(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Nh(o,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}};ed.className="Cropping2D";Q.registerClass(ed);var td=class extends _e{constructor(e){super(e);this.DEFAULT_SIZE=[2,2];this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Gt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,WF(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let n=e[2]==null?null:this.size[0]*e[2],o=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],n,o]}else{let n=e[1]==null?null:this.size[0]*e[1],o=e[2]==null?null:this.size[1]*e[2];return[e[0],n,o,e[3]]}}call(e,n){return z(()=>{let o=Ee(e),s=o.shape;if(this.dataFormat==="channelsFirst"){o=Oe(o,[0,2,3,1]);let a=this.size[0]*s[2],i=this.size[1]*s[3],u=this.interpolation==="nearest"?hp.resizeNearestNeighbor(o,[a,i]):hp.resizeBilinear(o,[a,i]);return Oe(u,[0,3,1,2])}else{let a=this.size[0]*s[1],i=this.size[1]*s[2];return this.interpolation==="nearest"?hp.resizeNearestNeighbor(o,[a,i]):hp.resizeBilinear(o,[a,i])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},n=super.getConfig();return Object.assign(e,n),e}};td.className="UpSampling2D";Q.registerClass(td);function QJ(r,t,e=[1,1],n="valid",o,s){return z(()=>{o==null&&(o=bn()),Gt(o);let a=Oh(r,o);if(r.rank!==4)throw new O(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(t.rank!==4)throw new O(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return a=up(a,t,e,n==="same"?"same":"valid","NHWC",s),o==="channelsFirst"&&(a=Oe(a,[0,3,1,2])),a})}var rd=class extends Sl{constructor(e){super(2,e);this.depthwiseKernel=null;this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=It(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ht(e.depthwiseConstraint),this.depthwiseRegularizer=wt(e.depthwiseRegularizer)}build(e){if(e=tt(e),e.length<4)throw new O(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let n=this.dataFormat==="channelsFirst"?1:3;if(e[n]==null||e[n]<0)throw new O(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[n]}).`);let o=e[n],s=[this.kernelSize[0],this.kernelSize[1],o,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[o*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return z(()=>{e=Ee(e);let o=QJ(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(o=yn(o,this.bias.read(),this.dataFormat)),this.activation!=null&&(o=this.activation.apply(o)),o})}computeOutputShape(e){e=tt(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],o=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=En(n,this.kernelSize[0],this.padding,this.strides[0]),i=En(o,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,a,i]:[e[0],a,i,s]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ft(this.depthwiseInitializer),e.depthwiseRegularizer=gt(this.depthwiseRegularizer),e.depthwiseConstraint=Vt(this.depthwiseRegularizer),e}};rd.className="DepthwiseConv2D";Q.registerClass(rd);function $A(r,t,e,n){if(Array.isArray(r)){if(t!=null||e!=null)throw new O("When inputs is an array, neither initialState or constants should be provided");n!=null&&(e=r.slice(r.length-n,r.length),r=r.slice(0,r.length-n)),r.length>1&&(t=r.slice(1,r.length)),r=r[0]}function o(s){return s==null||Array.isArray(s)?s:[s]}return t=o(t),e=o(e),{inputs:r,initialState:t,constants:e}}function BA(r,t,e,n=!1,o,s,a=!1,i=!1){return z(()=>{let u=t.shape.length;if(u<3)throw new O(`Input should be at least 3D, but is ${u}D.`);let p=[1,0].concat(rn(2,u));if(t=Oe(t,p),s!=null)throw new ve("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=te(te(o,"bool"),"float32"),o.rank===u-1&&(o=Lr(o,-1)),o=Oe(o,p)),n&&(t=wr(t,0),o!=null&&(o=wr(o,0)));let l=[],m,c=e,d=t.shape[0],f=Kr(t),h;o!=null&&(h=Kr(o));for(let b=0;b<d;++b){let T=f[b],x=z(()=>r(T,c));if(o==null)m=x[0],c=x[1];else{let I=z(()=>{let k=h[b],w=le(_r(k),k),R=Y(M(x[0],k),M(c[0],w)),F=c.map((P,E)=>Y(M(x[1][E],k),M(P,w)));return{output:R,newStates:F}});m=I.output,c=I.newStates}i&&l.push(m)}let g;return i&&(g=br(l,1)),[m,g,c]})}var OA=class extends _e{constructor(e){super(e);let n;if(e.cell==null)throw new O("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?n=new wl({cells:e.cell}):n=e.cell,n.stateSize==null)throw new O("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=n,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new At({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return rn(0,e).map(n=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Oy(e)&&(e=e[0]),e=e;let n=this.cell.stateSize;Array.isArray(n)||(n=[n]);let o=n[0],s;if(this.returnSequences?s=[e[0],e[1],o]:s=[e[0],o],this.returnState){let a=[];for(let i of n)a.push([e[0],i]);return[s].concat(a)}else return s}computeMask(e,n){return z(()=>{Array.isArray(n)&&(n=n[0]);let o=this.returnSequences?n:null;if(this.returnState){let s=this.states.map(a=>null);return[o].concat(s)}else return o})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,n=[];for(let o=0;o<e;++o)n.push(null);return n}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new ve("Constants support is not implemented in RNN yet.");Oy(e)&&(e=e[0]),e=e;let o=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new At({shape:[o,null,...s]});let a=[e[0]].concat(e.slice(2));this.cell.build(a);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!y.arraysEqual(this.stateSpec.map(u=>u.shape[u.shape.length-1]),i))throw new O(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(u=>new At({shape:[null,u]}));this.stateful&&this.resetStates()}resetStates(e,n=!1){z(()=>{if(!this.stateful)throw new Mn("Cannot call resetStates() on an RNN Layer that is not stateful.");let o=this.inputSpec[0].shape[0];if(o==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>xt([o,s])):this.states_=[xt([o,this.cell.stateSize])];else if(e==null)Ne(this.states_),this.keptStates!=null&&(Ne(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>xt([o,s])):this.states_[0]=xt([o,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);n===!0?this.keptStates.push(this.states_.slice()):Ne(this.states_);for(let s=0;s<this.states_.length;++s){let a=e[s],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,u=[o,i];if(!y.arraysEqual(a.shape,u))throw new O(`State ${s} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${a.shape}`);this.states_[s]=a}}this.states_=this.states_.map(s=>Bt(s.clone()))})}apply(e,n){let o=n==null?null:n.initialState,s=n==null?null:n.constants;n==null&&(n={});let a=$A(e,o,s,this.numConstants);e=a.inputs,o=a.initialState,s=a.constants;let i=[],u=[];if(o!=null){n.initialState=o,i=i.concat(o),this.stateSpec=[];for(let l of o)this.stateSpec.push(new At({shape:l.shape}));u=u.concat(this.stateSpec)}if(s!=null&&(n.constants=s,i=i.concat(s),this.numConstants=s.length),i[0]instanceof on){let l=[e].concat(i),m=this.inputSpec.concat(u),c=this.inputSpec;this.inputSpec=m;let d=super.apply(l,n);return this.inputSpec=c,d}else return super.apply(e,n)}call(e,n){return z(()=>{let o=n==null?null:n.mask,s=n==null?null:n.training,a=n==null?null:n.initialState;e=Ee(e),a==null&&(this.stateful?a=this.states_:a=this.getInitialState(e));let i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==i)throw new O(`RNN Layer has ${i} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let u={training:s},l=BA((h,g)=>{let b=this.cell.call([h].concat(g),u);return[b[0],b.slice(1)]},e,a,this.goBackwards,o,null,this.unroll,this.returnSequences),m=l[0],c=l[1],d=l[2];this.stateful&&this.resetStates(d,s);let f=this.returnSequences?c:m;return this.returnState?[f].concat(d):f})}getInitialState(e){return z(()=>{let n=xt(e.shape);return n=fe(n,[1,2]),n=mu(n),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(o=>o>1?_y(n,[1,o]):n):this.cell.stateSize>1?[_y(n,[1,this.cell.stateSize])]:[n]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),n={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(n.numConstants=this.numConstants);let o=this.cell.getConfig();return this.getClassName()===OA.className&&(n.cell={className:this.cell.getClassName(),config:o}),{...o,...e,...n}}static fromConfig(e,n,o={}){let s=n.cell,a=xn(s,o);return new e(Object.assign(n,{cell:a}))}},ss=OA;ss.className="RNN";Q.registerClass(ss);var hu=class extends _e{},vl=class extends hu{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,nr(this.units,"units"),this.activation=qa(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=It(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=It(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=It(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=wt(e.kernelRegularizer),this.recurrentRegularizer=wt(e.recurrentRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.kernelConstraint=Ht(e.kernelConstraint),this.recurrentConstraint=Ht(e.recurrentConstraint),this.biasConstraint=Ht(e.biasConstraint),this.dropout=pl([1,Wa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=pl([1,Wa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=tt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return z(()=>{if(e=e,e.length!==2)throw new O(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let o=e[1];e=e[0];let s=n.training==null?!1:n.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=gu({ones:()=>_r(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=gu({ones:()=>_r(o),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let a,i=this.dropoutMask,u=this.recurrentDropoutMask;i!=null?a=Ws(M(e,i),this.kernel.read()):a=Ws(e,this.kernel.read()),this.bias!=null&&(a=yn(a,this.bias.read())),u!=null&&(o=M(o,u));let p=Y(a,Ws(o,this.recurrentKernel.read()));return this.activation!=null&&(p=this.activation.apply(p)),[p,p]})}getConfig(){let e=super.getConfig(),n={units:this.units,activation:Ha(this.activation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:gt(this.kernelRegularizer),recurrentRegularizer:gt(this.recurrentRegularizer),biasRegularizer:gt(this.biasRegularizer),activityRegularizer:gt(this.activityRegularizer),kernelConstraint:Vt(this.kernelConstraint),recurrentConstraint:Vt(this.recurrentConstraint),biasConstraint:Vt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...n}}};vl.className="SimpleRNNCell";Q.registerClass(vl);var nd=class extends ss{constructor(t){t.cell=new vl(t),super(t)}call(t,e){return z(()=>{this.cell.dropoutMask!=null&&(Ne(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ne(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:n,training:o,initialState:s})})}static fromConfig(t,e){return new t(e)}};nd.className="SimpleRNN";Q.registerClass(nd);var Al=class extends hu{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.resetAfter)throw new O("GRUCell does not support reset_after parameter set to true.");this.units=e.units,nr(this.units,"units"),this.activation=qa(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=qa(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=It(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=It(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=It(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=wt(e.kernelRegularizer),this.recurrentRegularizer=wt(e.recurrentRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.kernelConstraint=Ht(e.kernelConstraint),this.recurrentConstraint=Ht(e.recurrentConstraint),this.biasConstraint=Ht(e.biasConstraint),this.dropout=pl([1,Wa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=pl([1,Wa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=tt(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return z(()=>{if(e=e,e.length!==2)throw new O(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let o=n.training==null?!1:n.training,s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=gu({ones:()=>_r(e),rate:this.dropout,training:o,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=gu({ones:()=>_r(s),rate:this.recurrentDropout,training:o,count:3,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,i=this.recurrentDropoutMask,u,p,l;0<this.dropout&&this.dropout<1&&(e=M(e,a[0]));let m=Ws(e,this.kernel.read());this.useBias&&(m=yn(m,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=M(s,i[0]));let c=this.recurrentKernel.read(),[d,f]=Nr(c,[2*this.units,this.units],c.rank-1),h=Ws(s,d),[g,b,T]=Nr(m,3,m.rank-1),[x,I]=Nr(h,2,h.rank-1);u=this.recurrentActivation.apply(Y(g,x)),p=this.recurrentActivation.apply(Y(b,I));let k=Ws(M(p,s),f);l=this.activation.apply(Y(T,k));let w=Y(M(u,s),M(Y(1,Qe(u)),l));return[w,w]})}getConfig(){let e=super.getConfig(),n={units:this.units,activation:Ha(this.activation),recurrentActivation:Ha(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:gt(this.kernelRegularizer),recurrentRegularizer:gt(this.recurrentRegularizer),biasRegularizer:gt(this.biasRegularizer),activityRegularizer:gt(this.activityRegularizer),kernelConstraint:Vt(this.kernelConstraint),recurrentConstraint:Vt(this.recurrentConstraint),biasConstraint:Vt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...n}}};Al.className="GRUCell";Q.registerClass(Al);var od=class extends ss{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Al(t),super(t)}call(t,e){return z(()=>{this.cell.dropoutMask!=null&&(Ne(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ne(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:n,training:o,initialState:s})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}};od.className="GRU";Q.registerClass(od);var fu=class extends hu{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,nr(this.units,"units"),this.activation=qa(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=qa(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=It(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=It(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=It(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=wt(e.kernelRegularizer),this.recurrentRegularizer=wt(e.recurrentRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.kernelConstraint=Ht(e.kernelConstraint),this.recurrentConstraint=Ht(e.recurrentConstraint),this.biasConstraint=Ht(e.biasConstraint),this.dropout=pl([1,Wa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=pl([1,Wa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var s;e=tt(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let o;if(this.useBias){if(this.unitForgetBias){let a=this.biasInitializer,i=this.units;o=new(s=class extends Tn{apply(p,l){let m=a.apply([i]),c=new Sp().apply([i]),d=a.apply([i*2]);return gA(gA(m,c),d)}},s.className="CustomInit",s)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,n){return z(()=>{let o=n.training==null?!1:n.training;if(e=e,e.length!==3)throw new O(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=gu({ones:()=>_r(e),rate:this.dropout,training:o,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=gu({ones:()=>_r(s),rate:this.recurrentDropout,training:o,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,u=this.recurrentDropoutMask,p,l,m,c;0<this.dropout&&this.dropout<1&&(e=M(e,i[0]));let d=Ws(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=M(s,u[0])),d=Y(d,Ws(s,this.recurrentKernel.read())),this.useBias&&(d=yn(d,this.bias.read()));let[f,h,g,b]=Nr(d,4,d.rank-1);p=this.recurrentActivation.apply(f),l=this.recurrentActivation.apply(h),m=Y(M(l,a),M(p,this.activation.apply(g))),c=this.recurrentActivation.apply(b);let T=M(c,this.activation.apply(m));return[T,T,m]})}getConfig(){let e=super.getConfig(),n={units:this.units,activation:Ha(this.activation),recurrentActivation:Ha(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:gt(this.kernelRegularizer),recurrentRegularizer:gt(this.recurrentRegularizer),biasRegularizer:gt(this.biasRegularizer),activityRegularizer:gt(this.activityRegularizer),kernelConstraint:Vt(this.kernelConstraint),recurrentConstraint:Vt(this.recurrentConstraint),biasConstraint:Vt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...n}}};fu.className="LSTMCell";Q.registerClass(fu);var sd=class extends ss{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new fu(t),super(t)}call(t,e){return z(()=>{this.cell.dropoutMask!=null&&(Ne(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ne(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:n,training:o,initialState:s})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}};sd.className="LSTM";Q.registerClass(sd);var wl=class extends hu{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let n of this.cells.slice().reverse())Array.isArray(n.stateSize)?e.push(...n.stateSize):e.push(n.stateSize);return e}call(e,n){return z(()=>{e=e;let o=e.slice(1),s=[];for(let u of this.cells.slice().reverse())Array.isArray(u.stateSize)?s.push(o.splice(0,u.stateSize.length)):s.push(o.splice(0,1));s.reverse();let a=[],i;for(let u=0;u<this.cells.length;++u){let p=this.cells[u];o=s[u],u===0?i=[e[0]].concat(o):i=[i[0]].concat(o),i=p.call(i,n),a.push(i.slice(1))}o=[];for(let u of a.slice().reverse())o.push(...u);return[i[0]].concat(o)})}build(e){Oy(e)&&(e=e[0]),e=e;let n;this.cells.forEach((o,s)=>{Ua(`RNNCell_${s}`,()=>{o.build(e),Array.isArray(o.stateSize)?n=o.stateSize[0]:n=o.stateSize,e=[e[0],n]})}),this.built=!0}getConfig(){let e=super.getConfig(),n=a=>({className:a.getClassName(),config:a.getConfig()}),s={cells:this.cells.map(n)};return{...e,...s}}static fromConfig(e,n,o={}){let s=[];for(let a of n.cells)s.push(xn(a,o));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let n of this.cells)e.push(...n.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let n of this.cells)e.push(...n.nonTrainableWeights);if(!this.trainable){let n=[];for(let o of this.cells)n.push(...o.trainableWeights);return n.concat(e)}return e}getWeights(){let e=[];for(let n of this.cells)e.push(...n.weights);return Rh(e)}setWeights(e){let n=[];for(let o of this.cells){let s=o.weights.length,a=e.splice(s);for(let i=0;i<o.weights.length;++i)n.push([o.weights[i],a[i]])}Mc(n)}};wl.className="StackedRNNCells";Q.registerClass(wl);function gu(r){let{ones:t,rate:e,training:n=!1,count:o=1,dropoutFunc:s}=r,a=()=>s!=null?s(t(),e):By(t(),e),i=()=>kp(a,t,n);return!o||o<=1?Bt(i().clone()):Array(o).fill(void 0).map(i).map(p=>Bt(p.clone()))}var vT=class extends ss{constructor(e){if(e.unroll)throw new ve("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ve("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new At({ndim:5})]}call(e,n){return z(()=>{if(this.cell.dropoutMask!=null&&(Ne(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ne(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),n&&n.constants)throw new O("ConvRNN2D cell does not support constants");let o=n==null?null:n.mask,s=n==null?null:n.training,a=n==null?null:n.initialState;return super.call(e,{mask:o,training:s,initialState:a})})}computeOutputShape(e){let n=this.computeSingleOutputShape(e);return this.returnSequences||(n=[n[0],...n.slice(2)]),this.returnState&&(n=[n,...Array(2).fill([e[0],...n.slice(-3)])]),n}getInitialState(e){return z(()=>{let{stateSize:n}=this.cell,o=e.shape,s=this.computeSingleOutputShape(o),a=[s[0],...s.slice(2)],i=xt(a);return Array.isArray(n)?Array(n.length).fill(i):[i]})}resetStates(e,n=!1){z(()=>{if(!this.stateful)throw new Mn("Cannot call resetStates() on an RNN Layer that is not stateful.");let o=this.inputSpec[0].shape,s=this.computeSingleOutputShape(o),a=[s[0],...s.slice(2)];if(o[0]==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>xt(a)):this.states_=[xt(a)];else if(e==null)Ne(this.states_),this.keptStates!=null&&(Ne(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>xt(a)):this.states_[0]=xt(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);n?this.keptStates.push(this.states_.slice()):Ne(this.states_);for(let u=0;u<this.states_.length;++u){let p=e[u],l=a;if(!y.arraysEqual(p.shape,l))throw new O(`State ${u} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${p.shape}`);this.states_[u]=p}}this.states_=this.states_.map(u=>Bt(u.clone()))})}computeSingleOutputShape(e){let{dataFormat:n,filters:o,kernelSize:s,padding:a,strides:i,dilationRate:u}=this.cell,p=n==="channelsFirst",l=e[p?3:2],m=e[p?4:3],c=En(l,s[0],a,i[0],u[0]),d=En(m,s[1],a,i[1],u[1]);return[...e.slice(0,2),...p?[o,c,d]:[c,d,o]]}};vT.className="ConvRNN2D";var Nl=class extends fu{constructor(e){let{filters:n,kernelSize:o,strides:s,padding:a,dataFormat:i,dilationRate:u}=e;super({...e,units:n});this.filters=n,nr(this.filters,"filters"),this.kernelSize=wp(o,2,"kernelSize"),this.kernelSize.forEach(p=>nr(p,"kernelSize")),this.strides=wp(s||1,2,"strides"),this.strides.forEach(p=>nr(p,"strides")),this.padding=a||"valid",gn(this.padding),this.dataFormat=i||"channelsLast",Gt(this.dataFormat),this.dilationRate=wp(u||1,2,"dilationRate"),this.dilationRate.forEach(p=>nr(p,"dilationRate"))}build(e){var u;e=tt(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[n]}`);let o=e[n],s=4,a=this.kernelSize.concat([o,this.filters*s]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*s]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let p;if(this.unitForgetBias){let l=this.biasInitializer,m=this.filters;p=new(u=class extends Tn{apply(d,f){let h=l.apply([m]),g=gr([m]),b=l.apply([m*2]);return Cc([h,g,b])}},u.className="CustomInit",u)}else p=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*s],null,p,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,n){return z(()=>{if(e.length!==3)throw new O(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=n.training||!1,s=e[0],a=e[1],i=e[2],u=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=gu({ones:()=>_r(s),rate:this.dropout,training:o,count:u,dropoutFunc:this.dropoutFunc}));let p=this.dropoutMask,l=(oe,se,re)=>!se||!se[re]?oe:M(se[re],oe),m=l(s,p,0),c=l(s,p,1),d=l(s,p,2),f=l(s,p,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=gu({ones:()=>_r(a),rate:this.recurrentDropout,training:o,count:u,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,g=l(a,h,0),b=l(a,h,1),T=l(a,h,2),x=l(a,h,3),I=3,[k,w,R,F]=Nr(this.kernel.read(),u,I),[P,E,B,G]=this.useBias?Nr(this.bias.read(),u):[null,null,null,null];m=this.inputConv(m,k,P,this.padding),c=this.inputConv(c,w,E,this.padding),d=this.inputConv(d,R,B,this.padding),f=this.inputConv(f,F,G,this.padding);let[U,V,W,H]=Nr(this.recurrentKernel.read(),u,I);g=this.recurrentConv(g,U),b=this.recurrentConv(b,V),T=this.recurrentConv(T,W),x=this.recurrentConv(x,H);let j=this.recurrentActivation.apply(Y(m,g)),X=this.recurrentActivation.apply(Y(c,b)),ee=Y(M(X,i),M(j,this.activation.apply(Y(d,T)))),ne=M(this.recurrentActivation.apply(Y(f,x)),this.activation.apply(ee));return[ne,ne,ee]})}getConfig(){let{units:e,...n}=super.getConfig(),o={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...n,...o}}inputConv(e,n,o,s){let a=rs(e,n,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return o?yn(a,o,this.dataFormat):a}recurrentConv(e,n){return rs(e,n,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Nl.className="ConvLSTM2DCell";Q.registerClass(Nl);var ad=class extends vT{constructor(t){let e=new Nl(t);super({...t,cell:e})}static fromConfig(t,e){return new t(e)}};ad.className="ConvLSTM2D";Q.registerClass(ad);var Dl=class extends _e{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let n=e.shape,o=[];for(let s=0;s<this.noiseShape.length;++s)o.push(this.noiseShape[s]==null?n[s]:this.noiseShape[s]);return o}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=Ee(e);if(0<this.rate&&this.rate<1){let s=n.training==null?!1:n.training,a=this.getNoiseShape(o);return kp(()=>By(o,this.rate,a,this.seed),()=>o,s)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},n=super.getConfig();return Object.assign(e,n),e}dispose(){return super.dispose()}};Dl.className="Dropout";Q.registerClass(Dl);var id=class extends Dl{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){let e=t.shape;return[e[0],1,e[2]]}};id.className="SpatialDropout1D";Q.registerClass(id);var ud=class extends _e{constructor(e){super(e);this.activation=null;this.useBias=!0;this.kernel=null;this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let n=null;e.batchSize!=null&&(n=e.batchSize),this.batchInputShape=[n,e.inputDim]}this.units=e.units,nr(this.units,"units"),this.activation=qa(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=It(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=It(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ht(e.kernelConstraint),this.biasConstraint=Ht(e.biasConstraint),this.kernelRegularizer=wt(e.kernelRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.activityRegularizer=wt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=tt(e);let n=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[n,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:n}}],this.built=!0}computeOutputShape(e){e=tt(e);let n=e.slice();return n[n.length-1]=this.units,n}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=Ee(e),s=Ry(this.activation.getClassName()),a;return s!=null?a=Ws(o,this.kernel.read(),s,this.bias?this.bias.read():null):(a=Ws(o,this.kernel.read()),this.bias!=null&&(a=yn(a,this.bias.read())),this.activation!=null&&(a=this.activation.apply(a))),a})}getConfig(){let e={units:this.units,activation:Ha(this.activation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:gt(this.kernelRegularizer),biasRegularizer:gt(this.biasRegularizer),activityRegularizer:gt(this.activityRegularizer),kernelConstraint:Vt(this.kernelConstraint),biasConstraint:Vt(this.biasConstraint)},n=super.getConfig();return Object.assign(e,n),e}};ud.className="Dense";Q.registerClass(ud);var pd=class extends _e{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=tt(e);for(let n of e.slice(1))if(n==null)throw new O(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Us(e,1)]}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=Ee(e);if(this.dataFormat==="channelsFirst"&&o.rank>1){let s=[0];for(let a=2;a<o.rank;++a)s.push(a);s.push(1),o=Oe(o,s)}return jF(o)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let n=super.getConfig();return Object.assign(e,n),e}};pd.className="Flatten";Q.registerClass(pd);var ld=class extends _e{constructor(e){super(e);this.supportsMasking=!0,this.activation=qa(e.activation)}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=Ee(e);return this.activation.apply(o)})}getConfig(){let e={activation:Ha(this.activation)},n=super.getConfig();return Object.assign(e,n),e}};ld.className="Activation";Q.registerClass(ld);var md=class extends _e{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,n){return z(()=>(e=Ee(e),HF(e,this.n)))}getConfig(){let e={n:this.n},n=super.getConfig();return Object.assign(e,n),e}};md.className="RepeatVector";Q.registerClass(md);var cd=class extends _e{constructor(e){super(e);this.targetShape=e.targetShape;for(let n=0;n<this.targetShape.length;++n)this.isUnknown(this.targetShape[n])&&(this.targetShape[n]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,n){let o="Total size of new array must be unchanged.",s=n.slice(),a=1,i=null;for(let p=0;p<s.length;++p){let l=s[p];if(this.isUnknown(l))if(i===null)i=p;else throw new O("Can only specifiy one unknown dimension.");else a*=l}let u=Us(e);if(i!==null){if(a===0||u%a!==0)throw new O(o);s[i]=u/a}else if(u!==a)throw new O(o);return s}computeOutputShape(e){let n=!1;for(let o=0;o<e.length;++o)if(this.isUnknown(e[o])){n=!0;break}return n?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=Ee(e),s=o.shape,a=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return L(o,a)})}getConfig(){let e={targetShape:this.targetShape},n=super.getConfig();return Object.assign(e,n),e}};cd.className="Reshape";Q.registerClass(cd);var dd=class extends _e{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let n=rn(1,e.dims.length+1);if(!y.arraysEqual(e.dims.slice().sort(),n))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new At({ndim:this.dims.length+1})]}computeOutputShape(e){e=tt(e);let n=e.slice();return this.dims.forEach((o,s)=>{n[s+1]=e[o]}),n}call(e,n){return Oe(Ee(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},n=super.getConfig();return Object.assign(e,n),e}};dd.className="Permute";Q.registerClass(dd);var fd=class extends _e{constructor(e){super(e??{});this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),n={maskValue:this.maskValue};return Object.assign(n,e),n}computeMask(e,n){let o=Ee(e),s=-1;return gh(iu(o,this.maskValue),s)}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=Ee(e),s=-1,a=!0,i=gh(iu(o,this.maskValue),s,a);return M(o,te(i,o.dtype))})}};fd.className="Masking";Q.registerClass(fd);var hd=class extends _e{constructor(e){super(e);this.embeddings=null;this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform";if(e.batchInputShape==null&&e.inputShape==null){let n=null;e.batchSize!=null&&(n=e.batchSize),e.inputLength==null?this.batchInputShape=[n,null]:this.batchInputShape=[n].concat(vt(e.inputLength))}this.inputDim=e.inputDim,nr(this.inputDim,"inputDim"),this.outputDim=e.outputDim,nr(this.outputDim,"outputDim"),this.embeddingsInitializer=It(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=wt(e.embeddingsRegularizer),this.activityRegularizer=wt(e.activityRegularizer),this.embeddingsConstraint=Ht(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,n){return z(()=>this.maskZero?(e=Ee(e),iu(e,Ae(e))):null)}computeOutputShape(e){if(e=tt(e),this.inputLength==null)return[...e,this.outputDim];let n=vt(this.inputLength);if(n.length!==e.length-1)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let o=0;for(let s=0;s<n.length;++s){let a=n[s],i=e[s+1];if(a!=null&&i!=null&&a!==i)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);a==null&&(n[o]=i),o++}}return[e[0],...n,this.outputDim]}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=Ee(e);o.dtype!=="int32"&&(o=lu(o,"int32"));let s=$y(this.embeddings.read(),L(o,[o.size]));return L(s,tt(this.computeOutputShape(o.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ft(this.embeddingsInitializer),embeddingsRegularizer:gt(this.embeddingsRegularizer),activityRegularizer:gt(this.activityRegularizer),embeddingsConstraint:Vt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},n=super.getConfig();return Object.assign(e,n),e}};hd.className="Embedding";Q.registerClass(hd);var bu=class extends _e{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new ve}computeElementwiseOpOutputShape(e,n){if(e==null||n==null)return null;if(e.length<n.length)return this.computeElementwiseOpOutputShape(n,e);if(n.length===0)return e;let o=e.slice(0,e.length-n.length);for(let s=0;s<n.length;++s){let a=e[e.length-n.length+s],i=n[s];if(a==null||i==null||a<0||i<0)o.push(null);else if(a===1)o.push(i);else if(i===1)o.push(a);else{if(a!==i)throw new O("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(n));o.push(a)}}return o}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[tt(e)]),e=e,e.length<2)throw new O(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let n=[];for(let a of e)a!=null&&a[0]!==null&&n.push(a[0]);if(n=Gs(n),n.length>1)throw new O(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let o=e[0]==null?null:e[0].slice(1);for(let a=1;a<e.length;++a){let i=e[a]==null?null:e[a].slice(1);o=this.computeElementwiseOpOutputShape(o,i)}let s=e.map(a=>a.length);e.indexOf(null)===-1&&Gs(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,n){return z(()=>{if(e=e,this.reshapeRequired){let o=[],s=e.map(a=>a.rank);if(s.indexOf(null)===-1){let a=Wa(s);for(let i of e){let u=i.rank;for(let p=0;p<a-u;++p)i=mu(i,1);o.push(i)}return this.mergeFunction(o)}else{let a=!1;for(let p of e){let l=p.rank;if(l==null){let m=p.shape,c=m[0],d=m.slice(1).concat([c]),f=L(p,[c].concat(Us(m.slice(1))));f=Oe(f,[1,0]),f=L(f,d),o.push(f),a=!0}else if(l>1){let m=rn(1,l).concat([0]);o.push(Oe(p,m)),a=!0}else o.push(p)}let i=this.mergeFunction(o),u=i.rank;if(a){if(u==null){let p=i.shape,l=p.length,m=p[l-1],c=[m].concat(p.slice(0,p.length-1));i=L(Oe(L(i,[-1,m]),[1,0]),c)}else if(u>1){let p=[u-1].concat(rn(0,u-1));i=Oe(i,p)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let n;e[0]==null?n=null:n=e[0].slice(1);for(let s=1;s<e.length;++s){let a=e[s]==null?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let o=[];for(let s of e)s!=null&&s[0]!==null&&o.push(s[0]);return o=Gs(o),o.length===1?n=o.concat(n):n=[null].concat(n),n}computeMask(e,n){return z(()=>{if(n==null)return null;if(!Array.isArray(n))throw new O("`mask` should be an Array");if(!Array.isArray(e))throw new O("`inputs` should be an Array");if(n.length!==e.length)throw new O(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${n.length})`);if(n.every(s=>s==null))return null;n=n.map(s=>s==null?s:Lr(s,0));let o=n[0];for(let s=1;s<n.length-1;++s)o=en(o,n[s]);return o})}},gd=class extends bu{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Y(e,t[n]);return e})}};gd.className="Add";Q.registerClass(gd);var bd=class extends bu{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=M(e,t[n]);return e})}};bd.className="Multiply";Q.registerClass(bd);var yd=class extends bu{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Y(e,t[n]);return M(1/t.length,e)})}};yd.className="Average";Q.registerClass(yd);var Td=class extends bu{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=ns(e,t[n]);return e})}};Td.className="Maximum";Q.registerClass(Td);var xd=class extends bu{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=cp(e,t[n]);return e})}};xd.className="Minimum";Q.registerClass(xd);var Id=class extends bu{constructor(e){super(e);this.DEFAULT_AXIS=-1;e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new O("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let n=!0;for(let s of e)if(s!=null){n=!1;break}if(n)return;let o=[];for(let s=0;s<e.length;++s){let a=e[s].slice();a.splice(this.axis,1);let i=!1;for(let u of o)if(y.arraysEqual(u,a)){i=!0;break}i||o.push(a)}if(o.length>1)throw new O("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return z(()=>Cc(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new O("A `Concatenate` layer should be called on a list of inputs.");let n=e,o=n[0].slice(),s=this.axis<0?o.length+this.axis:this.axis;for(let a of n.slice(1)){if(o[s]==null||a[s]==null){o[s]=null;break}o[s]+=a[s]}return o}computeMask(e,n){if(n==null)return null;if(!Array.isArray(n))throw new O("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new O("`inputs` should be an array for Concatenate");if(n.length!==e.length)throw new O(`Mismatch in the length of mask (${n.length}) and the legnth of inputs (${e.length})`);return z(()=>{let o=!0;if(n.forEach(i=>{if(i!=null){o=!1;return}}),o)return null;let s=[];for(let i=0;i<e.length;++i)n[i]==null?s.push(te(_r(e[i]),"bool")):n[i].rank<e[i].rank?s.push(Lr(n[i],-1)):s.push(n[i]);let a=lt(s,this.axis);return Pb(a,-1,!1)})}getConfig(){let e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}};Id.className="Concatenate";Q.registerClass(Id);function zh(r,t){for(;r<0;)r+=t;return r}function JJ(r,t,e){if(r.shape.length>3||t.shape.length>3)throw new ve("batchDot is not implemented for tensors of 4D or higher rank yet");if(y.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),y.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),r.dtype==="complex64"||t.dtype==="complex64")throw new ve("batchDot is not implemented for complex64-type Tensors yet.");let n=r.shape.length,o=t.shape.length;e==null&&(e=[n-1,o-2]);let s=e;return z(()=>{let a;if(n>o){a=n-o;let u=[];for(let p=0;p<a;++p)u.push(1);t=L(t,t.shape.concat(u))}else if(o>n){a=o-n;let u=[];for(let p=0;p<a;++p)u.push(1);r=L(r,r.shape.concat(u))}else a=0;let i;if(r.shape.length===2&&t.shape.length===2)s[0]===s[1]?i=fe(M(r,t),s[0]):i=fe(M(Oe(r,[1,0]),t),s[1]);else{let u=s[0]!==r.shape.length-1,p=s[1]===t.shape.length-1;i=Ge(r,t,u,p)}if(a>0){let u;n>o?u=n+o-3:u=n-1;let p=[];for(let l=u;l<u+a;++l)p.push(l);i=_s(i,p)}return i.shape.length===1&&(i=Lr(i,1)),i})}var Cd=class extends bu{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){y.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let n=e[0],o=e[1];if(n.length>3||o.length>3)throw new ve("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(n,o);if(n[s[0]]!==o[s[1]])throw new O(`Dimension incompatibility: ${n[s[0]]} !== ${o[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new O(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let n=e[0],o=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((a,i)=>zh(a,e[i].shape.length)):s=[zh(this.axes,n.shape.length),zh(this.axes,o.shape.length)],this.normalize&&(n=Fh(n,s[0]),o=Fh(o,s[1])),JJ(n,o,s)}interpretAxes(e,n){let o;return Array.isArray(this.axes)?o=this.axes:o=[zh(this.axes,e.length),zh(this.axes,n.length)],o}computeOutputShape(e){y.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let n=e[0].slice(),o=e[1].slice();if(n.length>3||o.length>3)throw new ve("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(n,o);n.splice(s[0],1),o.splice(s[1],1),o.splice(0,1);let a=n.concat(o);return a.length===1&&a.push(1),a}computeMask(e,n){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},n=super.getConfig();return Object.assign(e,n),e}};Cd.className="Dot";Q.registerClass(Cd);var kd=class extends _e{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),n={stddev:this.stddev};return Object.assign(n,e),n}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=Ee(e);return kp(()=>Y(kc(o.shape,0,this.stddev),o),()=>o,n.training||!1)})}};kd.className="GaussianNoise";Q.registerClass(kd);var Sd=class extends _e{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=Ee(e);return this.rate>0&&this.rate<1?kp(()=>{let a=Math.sqrt(this.rate/(1-this.rate));return M(o,kc(o.shape,1,a))},()=>o,n.training||!1):o})}};Sd.className="GaussianDropout";Q.registerClass(Sd);var vd=class extends _e{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ee(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return z(()=>{if(this.rate<1&&this.rate>0){let o=this._getNoiseShape(e);return kp(()=>{let a=Ee(e),i=1.6732632423543772,u=1.0507009873554805,p=-i*u,l=Es(gi(o),this.rate);l=lu(l,"float32");let m=((1-this.rate)*(1+this.rate*p**2))**-.5,c=-m*p*this.rate,d=Y(M(a,l),M(Y(l,-1),p));return Y(M(d,m),c)},()=>Ee(e),n.training||!1)}return e})}};vd.className="AlphaDropout";Q.registerClass(vd);function Gh(r,t,e,n,o,s=.001){let a;if(r.rank===2)a=Lb(r,t,e,n,o,s);else if(r.rank===3)a=_b(r,t,e,n,o,s);else if(r.rank===4)a=$b(r,t,e,n,o,s);else throw new ve(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return a}function e9(r,t,e,n,o=.001){return z(()=>{let s=Qp(r,n),a=s.mean,i=s.variance;return[Gh(r,a,i,e,t,o),a,i]})}function t9(r,t,e,n,o=.001){return z(()=>{let s=Qp(r,n),a=s.mean,i=s.variance,u=[];for(let f of rn(0,r.rank))n.indexOf(f)!==-1?u.push(1):u.push(r.shape[f]);let p=L(a,u),l=L(i,u),m=t==null?null:L(t,u),c=e==null?null:L(e,u);return[Gh(r,p,l,c,m,o),a,i]})}function r9(r,t,e,n,o=.001){return y.arraysEqual(n.slice().sort(),rn(0,r.rank-1))?e9(r,t,e,n,o):t9(r,t,e,n,o)}var Ad=class extends _e{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=It(e.betaInitializer||"zeros"),this.gammaInitializer=It(e.gammaInitializer||"ones"),this.movingMeanInitializer=It(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=It(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ht(e.betaConstraint),this.gammaConstraint=Ht(e.gammaConstraint),this.betaRegularizer=wt(e.betaRegularizer),this.gammaRegularizer=wt(e.gammaRegularizer)}build(e){e=tt(e);let n=this.axis>=0?this.axis:this.axis+e.length,o=e[n];if(o==null)throw new O(`Axis ${n} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new At({ndim:e.length,axes:{[n]:o}})];let s=[o];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,n){return z(()=>{let o=n.training==null?!1:n.training,s=Ee(e),a=s.shape,i=a.length,u=rn(0,i),p=this.axis>=0?this.axis:this.axis+i;u.splice(p,1);let l=Os(1,i);l[p]=a[p];let m=u.slice();m.sort();let c=!y.arraysEqual(m,rn(0,i).slice(0,i-1)),d=()=>{if(c){let x=L(this.movingMean.read(),l),I=L(this.movingVariance.read(),l),k=this.center?L(this.beta.read(),l):null,w=this.scale?L(this.gamma.read(),l):null;return Gh(s,x,I,k,w,this.epsilon)}else return Gh(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!o)return d();let[f,h,g]=r9(s,this.gamma.read(),this.beta.read(),u,this.epsilon),b=(x,I,k)=>{z(()=>{let w=1-k,R=x.read(),F=M(le(R,I),w);x.write(le(R,F))})};return(()=>{b(this.movingMean,h,this.momentum),b(this.movingVariance,g,this.momentum)})(),f})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ft(this.betaInitializer),gammaInitializer:Ft(this.gammaInitializer),movingMeanInitializer:Ft(this.movingMeanInitializer),movingVarianceInitializer:Ft(this.movingVarianceInitializer),betaRegularizer:gt(this.betaRegularizer),gammaRegularizer:gt(this.gammaRegularizer),betaConstraint:Vt(this.betaConstraint),gammaConstraint:Vt(this.gammaConstraint)},n=super.getConfig();return Object.assign(e,n),e}};Ad.className="BatchNormalization";Q.registerClass(Ad);var wd=class extends _e{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let n of this.axis)if(!Number.isInteger(n))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=It(e.betaInitializer||"zeros"),this.gammaInitializer=It(e.gammaInitializer||"ones"),this.betaRegularizer=wt(e.betaRegularizer),this.gammaRegularizer=wt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=tt(e);let n=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=n);for(let a of this.axis)if(a<0||a>=n)throw new Error(`Invalid axis: ${a}`);if(this.axis.length!==Gs(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let o=this.axis.map(a=>e[a]),s=!0;this.scale?this.gamma=this.addWeight("gamma",o,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",o,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,n){let o=Ee(e),s=o.shape,a=s.length;return z(()=>{let{mean:u,variance:p}=Qp(o,this.axis,!0),l=Os(1,a);for(let g of this.axis)l[g]=s[g];let m=g=>g!=null&&g.shape.length!==a?L(g,l):g,c=this.scale?m(this.gamma.read()):null,d=this.center?m(this.beta.read()):null,f=[],h=[];for(let g=0;g<a;++g)this.axis.indexOf(g)!==-1?(f.push(s[g]),h.push(1)):(f.push(1),h.push(s[g]));return u=Jr(u,f),p=Jr(p,f),c!=null&&(c=Jr(c,h)),d!=null&&(d=Jr(d,h)),Gh(o,u,p,d,c,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ft(this.betaInitializer),gammaInitializer:Ft(this.gammaInitializer),betaRegularizer:gt(this.betaRegularizer),gammaRegularizer:gt(this.gammaRegularizer)},n=super.getConfig();return Object.assign(e,n),e}};wd.className="LayerNormalization";Q.registerClass(wd);function n9(r,t,e){return z(()=>{if(r.rank!==4)throw new O(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new O("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=bn()),e!=="channelsLast"&&e!=="channelsFirst")throw new O(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return e==="channelsFirst"?n=[[0,0],[0,0],t[0],t[1]]:n=[[0,0],t[0],t[1],[0,0]],Hn(r,n)})}var Nd=class extends _e{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?bn():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new O(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let n,o;if(typeof e.padding[0]=="number")n=[e.padding[0],e.padding[0]],o=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new O(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(n=e.padding[0],e.padding[1].length!==2)throw new O(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);o=e.padding[1]}this.padding=[n,o]}this.inputSpec=[new At({ndim:4})]}computeOutputShape(e){e=tt(e);let n,o;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?n=e[2]+this.padding[0][0]+this.padding[0][1]:n=null,e[3]!=null&&e[3]>=0?o=e[3]+this.padding[1][0]+this.padding[1][1]:o=null,[e[0],e[1],n,o]):(e[1]!=null&&e[1]>=0?n=e[1]+this.padding[0][0]+this.padding[0][1]:n=null,e[2]!=null&&e[2]>=0?o=e[2]+this.padding[1][0]+this.padding[1][1]:o=null,[e[0],n,o,e[3]])}call(e,n){return z(()=>n9(Ee(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}};Nd.className="ZeroPadding2D";Q.registerClass(Nd);function FT(r,t,e,n,o,s){return z(()=>{Gt(o),cA(s),gn(n),e==null&&(e=[1,1]),n==null&&(n="valid"),o==null&&(o=bn()),s==null&&(s="max"),r=Oh(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=pc(r,t,e,i):a=rc(r,t,e,i),o==="channelsFirst"&&(a=Oe(a,[0,3,1,2])),a})}function FE(r,t,e,n,o,s){return z(()=>{Gt(o),cA(s),gn(n),e==null&&(e=[1,1,1]),n==null&&(n="valid"),o==null&&(o=bn()),s==null&&(s="max"),r=MA(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=ny(r,t,e,i):a=Eb(r,t,e,i),o==="channelsFirst"&&(a=Oe(a,[0,4,1,2,3])),a})}var AT=class extends _e{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new O(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(nr(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new O(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);nr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,gn(this.padding),this.inputSpec=[new At({ndim:3})]}computeOutputShape(e){e=tt(e);let n=En(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],n,e[2]]}call(e,n){return z(()=>{this.invokeCallHook(e,n),e=mu(Ee(e),2);let o=this.poolingFunction(Ee(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return _s(o,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},n=super.getConfig();return Object.assign(e,n),e}},Dd=class extends AT{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Gt(s),gn(o),FT(t,e,n,o,s,"max")}};Dd.className="MaxPooling1D";Q.registerClass(Dd);var Rd=class extends AT{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Gt(s),gn(o),FT(t,e,n,o,s,"avg")}};Rd.className="AveragePooling1D";Q.registerClass(Rd);var wT=class extends _e{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new O(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];nr(this.poolSize,"poolSize"),nr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Gt(this.dataFormat),gn(this.padding),this.inputSpec=[new At({ndim:4})]}computeOutputShape(e){e=tt(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],o=this.dataFormat==="channelsFirst"?e[3]:e[2];return n=En(n,this.poolSize[0],this.padding,this.strides[0]),o=En(o,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],n,o]:[e[0],n,o,e[3]]}call(e,n){return z(()=>(this.invokeCallHook(e,n),this.poolingFunction(Ee(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}},Fd=class extends wT{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Gt(s),gn(o),FT(t,e,n,o,s,"max")}};Fd.className="MaxPooling2D";Q.registerClass(Fd);var Pd=class extends wT{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Gt(s),gn(o),FT(t,e,n,o,s,"avg")}};Pd.className="AveragePooling2D";Q.registerClass(Pd);var NT=class extends _e{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new O(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];nr(this.poolSize,"poolSize"),nr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Gt(this.dataFormat),gn(this.padding),this.inputSpec=[new At({ndim:5})]}computeOutputShape(e){e=tt(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],o=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return n=En(n,this.poolSize[0],this.padding,this.strides[0]),o=En(o,this.poolSize[1],this.padding,this.strides[1]),s=En(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],n,o,s]:[e[0],n,o,s,e[4]]}call(e,n){return z(()=>(this.invokeCallHook(e,n),this.poolingFunction(Ee(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}},Md=class extends NT{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Gt(s),gn(o),FE(t,e,n,o,s,"max")}};Md.className="MaxPooling3D";Q.registerClass(Md);var Ed=class extends NT{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Gt(s),gn(o),FE(t,e,n,o,s,"avg")}};Ed.className="AveragePooling3D";Q.registerClass(Ed);var DT=class extends _e{constructor(t){super(t),this.inputSpec=[new At({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new ve}},Ld=class extends DT{constructor(t){super(t||{})}call(t,e){return z(()=>{let n=Ee(t);return Lt(n,1)})}};Ld.className="GlobalAveragePooling1D";Q.registerClass(Ld);var _d=class extends DT{constructor(t){super(t||{})}call(t,e){return z(()=>{let n=Ee(t);return fn(n,1)})}};_d.className="GlobalMaxPooling1D";Q.registerClass(_d);var RT=class extends _e{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Gt(this.dataFormat),this.inputSpec=[new At({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,n){throw new ve}getConfig(){let e={dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}},$d=class extends RT{call(t,e){return z(()=>{let n=Ee(t);return this.dataFormat==="channelsLast"?Lt(n,[1,2]):Lt(n,[2,3])})}};$d.className="GlobalAveragePooling2D";Q.registerClass($d);var Bd=class extends RT{call(t,e){return z(()=>{let n=Ee(t);return this.dataFormat==="channelsLast"?fn(n,[1,2]):fn(n,[2,3])})}};Bd.className="GlobalMaxPooling2D";Q.registerClass(Bd);var PT=class extends _e{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},n=super.getConfig();return Object.assign(e,n),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,n,o={}){let s=n.layer,a=xn(s,o);delete n.layer;let i={layer:a};return Object.assign(i,n),new e(i)}},Od=class extends PT{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=tt(t),t.length<3)throw new O(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];let e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=tt(t);let e=[t[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),o=t[1];return[n[0],o].concat(n.slice(1))}call(t,e){return z(()=>(t=Ee(t),BA((a,i)=>[Ee(this.layer.call(a,e)),[]],t,[],!1,null,null,!1,!0)[1]))}};Od.className="TimeDistributed";Q.registerClass(Od);function o9(r){xi(GF,"BidirectionalMergeMode",r)}var s9="concat",zd=class extends PT{constructor(e){super(e);let n=e.layer.getConfig(),o={};o.className=e.layer.getClassName(),o.config=n,this.forwardLayer=xn(o),n.goBackwards=n.goBackwards!==!0;let s={};if(s.className=e.layer.getClassName(),s.config=n,this.backwardLayer=xn(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?s9:e.mergeMode,o9(this.mergeMode),e.weights)throw new ve("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let n=e.length,o=Math.floor(n/2);this.forwardLayer.setWeights(e.slice(0,o)),this.backwardLayer.setWeights(e.slice(o))}computeOutputShape(e){let n=this.forwardLayer.computeOutputShape(e);Array.isArray(n)&&Array.isArray(n[0])||(n=[n]),n=n;let o,s,a;return this.returnState&&(a=n.slice(1)),o=n[0],o=o,this.mergeMode==="concat"?(o[o.length-1]*=2,s=[o]):this.mergeMode==null?s=[o,o.slice()]:s=[o],this.returnState?this.mergeMode==null?s.concat(a).concat(a.slice()):[o].concat(a).concat(a.slice()):Dr(s)}apply(e,n){let o=n==null?null:n.initialState,s=n==null?null:n.constants;n==null&&(n={});let a=$A(e,o,s,this.numConstants);if(e=a.inputs,o=a.initialState,s=a.constants,Array.isArray(e)&&(o=e.slice(1),e=e[0]),(o==null||o.length===0)&&s==null)return super.apply(e,n);let i=[],u=[];if(o!=null){let l=o.length;if(l%2>0)throw new O("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");n.initialState=o,i.push(...o);let m=o.map(c=>new At({shape:c.shape}));this.forwardLayer.stateSpec=m.slice(0,l/2),this.backwardLayer.stateSpec=m.slice(l/2),u.push(...m)}if(s!=null)throw new ve("Support for constants in Bidirectional layers is not implemented yet.");let p=i[0]instanceof on;for(let l of i)if(l instanceof on!==p)throw new O("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(p){let l=[e].concat(i),m=this.inputSpec.concat(u),c=this.inputSpec;this.inputSpec=m;let d=super.apply(l,n);return this.inputSpec=c,d}else return super.apply(e,n)}call(e,n){return z(()=>{let o=n.initialState,s,a;if(o==null)s=this.forwardLayer.call(e,n),a=this.backwardLayer.call(e,n);else{let p=o.slice(0,o.length/2),l=o.slice(o.length/2);s=this.forwardLayer.call(e,Object.assign(n,{initialState:p})),a=this.backwardLayer.call(e,Object.assign(n,{initialState:l}))}let i;this.returnState&&(Array.isArray(s)&&(i=s.slice(1).concat(a.slice(1))),s=s[0],a=a[0]),this.returnSequences&&(a=wr(a,1));let u;return this.mergeMode==="concat"?u=Cc([s,a]):this.mergeMode==="sum"?u=Y(s,a):this.mergeMode==="ave"?u=M(.5,Y(s,a)):this.mergeMode==="mul"?u=M(s,a):this.mergeMode==null&&(u=[s,a]),this.returnState?this.mergeMode==null?u.concat(i):[u].concat(i):u})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ua(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Ua(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,n){Array.isArray(n)&&(n=n[0]);let o;if(this.returnSequences?this.mergeMode==null?o=[n,n]:o=n:this.mergeMode==null?o=[null,null]:o=null,this.returnState){let a=this.forwardLayer.states.map(i=>null);return Array.isArray(o)?o.concat(a).concat(a):[o].concat(a).concat(a)}else return o}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},n=super.getConfig();return Object.assign(e,n),e}static fromConfig(e,n){let o=xn(n.layer);if(delete n.layer,n.numConstants!=null)throw new ve("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=n;return s.layer=o,new e(s)}};zd.className="Bidirectional";Q.registerClass(zd);var Gd=class extends _e{constructor(e){super(e);this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset},n=super.getConfig();return Object.assign(e,n),e}call(e,n){return z(()=>(e=Ee(e),e.dtype!=="float32"&&(e=lu(e,"float32")),Y(M(e,this.scale),this.offset)))}};Gd.className="Rescaling";Q.registerClass(Gd);function a9(r){return new Ka(r)}function i9(r){return new qc(r)}function u9(r){return new Kc(r)}function p9(r){return new Vc(r)}function l9(r){return new Hc(r)}function m9(r){return new Xc(r)}function c9(r){return new jc(r)}function d9(r){return new Jc(r)}function f9(r){return new Cl(r)}function h9(r){return new Yc(r)}function g9(r){return new kl(r)}function b9(r){return new Zc(r)}function y9(r){return new Qc(r)}function T9(r){return new ed(r)}function x9(r){return new td(r)}function I9(r){return new rd(r)}function C9(r){return new ld(r)}function k9(r){return new ud(r)}function S9(r){return new Dl(r)}function v9(r){return new id(r)}function A9(r){return new pd(r)}function w9(r){return new md(r)}function N9(r){return new cd(r)}function D9(r){return new dd(r)}function R9(r){return new hd(r)}function F9(r){return new gd(r)}function P9(r){return new yd(r)}function M9(r){return new Id(r)}function E9(r){return new Td(r)}function L9(r){return new xd(r)}function _9(r){return new bd(r)}function $9(r){return new Cd(r)}function B9(r){return new Ad(r)}function O9(r){return new wd(r)}function z9(r){return new Nd(r)}function zA(r){return new Rd(r)}function G9(r){return zA(r)}function U9(r){return zA(r)}function GA(r){return new Pd(r)}function W9(r){return GA(r)}function K9(r){return GA(r)}function UA(r){return new Ed(r)}function V9(r){return UA(r)}function H9(r){return UA(r)}function q9(r){return new Ld(r)}function j9(r){return new $d(r)}function PE(r){return new _d(r)}function ME(r){return new Bd(r)}function EE(r){return new Dd(r)}function LE(r){return new Fd(r)}function X9(r){return new Md(r)}function Y9(r){return new od(r)}function Z9(r){return new Al(r)}function Q9(r){return new sd(r)}function J9(r){return new fu(r)}function eee(r){return new nd(r)}function tee(r){return new vl(r)}function ree(r){return new ad(r)}function nee(r){return new Nl(r)}function oee(r){return new ss(r)}function see(r){return new wl(r)}function aee(r){return new zd(r)}function iee(r){return new Od(r)}var uee=PE,pee=ME,lee=EE,mee=LE;function cee(r){return new kd(r)}function dee(r){return new Sd(r)}function fee(r){return new vd(r)}function hee(r){return new fd(r)}function gee(r){return new Gd(r)}var $E={};We($E,{MAPE:()=>wee,MSE:()=>Ree,binaryAccuracy:()=>bee,binaryCrossentropy:()=>yee,categoricalAccuracy:()=>xee,categoricalCrossentropy:()=>Iee,cosineProximity:()=>See,mape:()=>Nee,meanAbsoluteError:()=>vee,meanAbsolutePercentageError:()=>Aee,meanSquaredError:()=>Dee,mse:()=>Fee,precision:()=>Cee,recall:()=>kee,sparseCategoricalAccuracy:()=>Tee});function bee(r,t){return Eh(r,t)}function yee(r,t){return Jy(r,t)}function Tee(r,t){return eT(r,t)}function xee(r,t){return Lh(r,t)}function Iee(r,t){return _h(r,t)}function Cee(r,t){return SA(r,t)}function kee(r,t){return uE(r,t)}function See(r,t){return Mh(r,t)}function vee(r,t){return Oc(r,t)}function Aee(r,t){return vp(r,t)}function wee(r,t){return vp(r,t)}function Nee(r,t){return vp(r,t)}function Dee(r,t){return Ci(r,t)}function Ree(r,t){return Ci(r,t)}function Fee(r,t){return Ci(r,t)}var BE={};We(BE,{modelFromJSON:()=>SE});var OE={};We(OE,{l1:()=>Mee,l1l2:()=>Pee,l2:()=>Eee});function Pee(r){return new Ap(r)}function Mee(r){return NE(r)}function Eee(r){return DE(r)}var ET=class extends du{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof jn))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function MT(r,t){return r<t}function zE(r,t){return r>t}var LT=class extends ET{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new ve("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=MT:this.mode==="max"?this.monitorFunc=zE:this.monitor.indexOf("acc")!==-1?this.monitorFunc=zE:this.monitorFunc=MT,this.monitorFunc===MT&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===MT?1/0:-1/0}async onEpochEnd(e,n){await Ii(n);let o=this.getMonitorValue(n);o!=null&&(this.monitorFunc(o-this.minDelta,this.best)?(this.best=o,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let n=e[this.monitor];return n==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),n}};function Lee(r){return new LT(r)}var _ee={earlyStopping:Lee};var $ee=$();$ee.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var WA=(Z=>(Z[Z.DT_INVALID=0]="DT_INVALID",Z[Z.DT_FLOAT=1]="DT_FLOAT",Z[Z.DT_DOUBLE=2]="DT_DOUBLE",Z[Z.DT_INT32=3]="DT_INT32",Z[Z.DT_UINT8=4]="DT_UINT8",Z[Z.DT_INT16=5]="DT_INT16",Z[Z.DT_INT8=6]="DT_INT8",Z[Z.DT_STRING=7]="DT_STRING",Z[Z.DT_COMPLEX64=8]="DT_COMPLEX64",Z[Z.DT_INT64=9]="DT_INT64",Z[Z.DT_BOOL=10]="DT_BOOL",Z[Z.DT_QINT8=11]="DT_QINT8",Z[Z.DT_QUINT8=12]="DT_QUINT8",Z[Z.DT_QINT32=13]="DT_QINT32",Z[Z.DT_BFLOAT16=14]="DT_BFLOAT16",Z[Z.DT_QINT16=15]="DT_QINT16",Z[Z.DT_QUINT16=16]="DT_QUINT16",Z[Z.DT_UINT16=17]="DT_UINT16",Z[Z.DT_COMPLEX128=18]="DT_COMPLEX128",Z[Z.DT_HALF=19]="DT_HALF",Z[Z.DT_RESOURCE=20]="DT_RESOURCE",Z[Z.DT_VARIANT=21]="DT_VARIANT",Z[Z.DT_UINT32=22]="DT_UINT32",Z[Z.DT_UINT64=23]="DT_UINT64",Z[Z.DT_FLOAT_REF=101]="DT_FLOAT_REF",Z[Z.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",Z[Z.DT_INT32_REF=103]="DT_INT32_REF",Z[Z.DT_UINT8_REF=104]="DT_UINT8_REF",Z[Z.DT_INT16_REF=105]="DT_INT16_REF",Z[Z.DT_INT8_REF=106]="DT_INT8_REF",Z[Z.DT_STRING_REF=107]="DT_STRING_REF",Z[Z.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",Z[Z.DT_INT64_REF=109]="DT_INT64_REF",Z[Z.DT_BOOL_REF=110]="DT_BOOL_REF",Z[Z.DT_QINT8_REF=111]="DT_QINT8_REF",Z[Z.DT_QUINT8_REF=112]="DT_QUINT8_REF",Z[Z.DT_QINT32_REF=113]="DT_QINT32_REF",Z[Z.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",Z[Z.DT_QINT16_REF=115]="DT_QINT16_REF",Z[Z.DT_QUINT16_REF=116]="DT_QUINT16_REF",Z[Z.DT_UINT16_REF=117]="DT_UINT16_REF",Z[Z.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",Z[Z.DT_HALF_REF=119]="DT_HALF_REF",Z[Z.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",Z[Z.DT_VARIANT_REF=121]="DT_VARIANT_REF",Z[Z.DT_UINT32_REF=122]="DT_UINT32_REF",Z[Z.DT_UINT64_REF=123]="DT_UINT64_REF",Z))(WA||{}),Bee;(t=>{let r;(s=>(s[s.LEGACY=0]="LEGACY",s[s.V1=1]="V1",s[s.V2=2]="V2"))(r=t.CheckpointFormatVersion||={})})(Bee||={});var KA={};function zee(r,t){let e={tfOpName:r,category:"custom",inputs:[],attrs:[],customExecutor:t};KA[r]=e}function _T(r){return KA[r]}function Gee(r){delete KA[r]}function v(r,t,e,n,o){let s=t.inputParams[r];if(s&&s.inputIndexStart!==void 0){let i=s.inputIndexStart,u=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?i+1:s.inputIndexEnd;if(s.type==="tensor")return kr(t.inputNames[s.inputIndexStart],e,n,o);if(s.type==="tensors")return t.inputNames.slice(i,u).map(c=>kr(c,e,n,o));let p=kr(t.inputNames.slice(i)[0],e,n,o),l=p.dataSync();return s.type==="number"?l[0]:y.toNestedArray(p.shape,l)}let a=t.attrParams[r];return a&&a.value}function kr(r,t,e,n){let[o,s]=In(r);if(n!=null){let i=n.getHashTableHandleByName(o);if(i!=null)return i}let a=e.currentContextIds.find(i=>!!t[$T(o,i)]);return a!==void 0?t[$T(o,a)][s]:void 0}function GE(r,t,e){return t[$T(r,e.currentContextId)]}function Hs(r,t){let[e,n,o]=In(r);return[$T(e,t&&t.currentContextId),n,o]}function $T(r,t){return t?`${r}-${t}`:r}function In(r){let t=r.split(":");if(t.length===1)return[r,0,void 0];let e=t[0],n=t.length===3?t[1]:void 0,o=Number(t[t.length-1]);return[e,o,n]}function Uh(r,t,e){let n=v("pad",r,t,e);if(n==="explicit"){n=v("explicitPaddings",r,t,e);let o=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)o[s][0]=n[s*2],o[s][1]=n[s*2+1];return o}return n}function Xa(r){return r.kept?r:dn(r)}var VA={};We(VA,{json:()=>Uee});var Uee=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var HA={};We(HA,{json:()=>Wee});var Wee=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var qA={};We(qA,{json:()=>Kee});var Kee=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var jA={};We(jA,{json:()=>Vee});var Vee=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var XA={};We(XA,{json:()=>Hee});var Hee=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var YA={};We(YA,{json:()=>qee});var qee=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var ZA={};We(ZA,{json:()=>jee});var jee=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var QA={};We(QA,{json:()=>Xee});var Xee=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var JA={};We(JA,{json:()=>Yee});var Yee=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}];var ew={};We(ew,{json:()=>Zee});var Zee=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var tw={};We(tw,{json:()=>Qee});var Qee=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var rw={};We(rw,{json:()=>Jee});var Jee=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}];var nw={};We(nw,{json:()=>ete});var ete=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var ow={};We(ow,{json:()=>tte});var tte=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var sw={};We(sw,{json:()=>rte});var rte=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var aw={};We(aw,{json:()=>nte});var nte=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var iw={};We(iw,{json:()=>ote});var ote=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var uw={};We(uw,{json:()=>ste});var ste=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var pw={};We(pw,{json:()=>ate});var ate=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var Wh=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let t=[VA,HA,qA,jA,XA,YA,ZA,QA,JA,ew,tw,rw,nw,ow,sw,aw,iw,uw,pw],e=[].concat(...t.map(n=>n.json));this.opMappers=e.reduce((n,o)=>(n[o.tfOpName]=o,n),{})}transformGraph(t,e={}){let n=t.node,o=[],s=[],a=[],i=n.reduce((h,g)=>(h[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?o.push(h[g.name]):g.op==="Const"?s.push(h[g.name]):(g.input==null||g.input.length===0)&&a.push(h[g.name]),h),{}),u=[],p=[],l={},m={};e!=null&&(l=this.mapSignatureEntries(e.inputs),m=this.mapSignatureEntries(e.outputs));let c=Object.keys(i);c.forEach(h=>{let g=i[h];g.inputNames.forEach((b,T)=>{let[x,,I]=Hs(b),k=i[x];if(k.outputs!=null){let w=k.outputs.indexOf(I);if(w!==-1){let R=`${x}:${w}`;g.inputNames[T]=R}}g.inputs.push(k),k.children.push(g)})}),Object.keys(m).length===0?c.forEach(h=>{let g=i[h];g.children.length===0&&p.push(g)}):Object.keys(m).forEach(h=>{let[g]=Hs(h),b=i[g];b!=null&&(b.signatureKey=m[h],p.push(b))}),Object.keys(l).length>0?Object.keys(l).forEach(h=>{let[g]=Hs(h),b=i[g];b&&(b.signatureKey=l[h],u.push(b))}):u=o;let d={};t.library!=null&&t.library.function!=null&&(d=t.library.function.reduce((h,g)=>(h[g.signature.name]=this.mapFunction(g),h),{}));let f={nodes:i,inputs:u,outputs:p,weights:s,placeholders:o,signature:e,functions:d};return a.length>0&&(f.initNodes=a),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){let e=_T(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});let n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(o=>o.startsWith("^")?o.slice(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return e.inputs!=null&&(n.inputParams=e.inputs.reduce((o,s)=>(o[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},o),{})),e.attrs!=null&&(n.attrParams=e.attrs.reduce((o,s)=>{let a=s.type,i;switch(s.type){case"string":i=BT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=BT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":i=VT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=VT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":i=zT(t.attr,s.tfName,s.defaultValue||0),i===void 0&&!!s.tfDeprecatedName&&(i=zT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":i=KT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=KT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":i=OT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=OT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":i=qT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=qT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":i=WT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=WT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":i=HT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=HT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":i=GT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=GT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":i=UT(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=UT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":i=UE(t.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=UE(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${t.op}`)}return o[s.name]={value:i,type:a},o},{})),n}mapFunction(t){let e=t.nodeDef,n=[],o=[],s={};e!=null&&(s=e.reduce((m,c)=>(m[c.name]=this.mapNode(c),c.op==="Const"&&o.push(m[c.name]),m),{}));let a=[],i=[];t.signature.inputArg.forEach(m=>{let[c]=Hs(m.name),d={name:c,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:lw(m.type),type:"dtype"}},children:[]};d.signatureKey=m.name,a.push(d),s[c]=d}),Object.keys(s).forEach(m=>{let c=s[m];c.inputNames.forEach((d,f)=>{let[h,,g]=Hs(d),b=s[h];if(b.outputs!=null){let T=b.outputs.indexOf(g);if(T!==-1){let x=`${h}:${T}`;c.inputNames[f]=x}}c.inputs.push(b),b.children.push(c)})});let p=t.ret;t.signature.outputArg.forEach(m=>{let[c,d]=Hs(p[m.name]),f=s[c];f!=null&&(f.defaultOutput=d,i.push(f))});let l=this.mapArgsToSignature(t);return{nodes:s,inputs:a,outputs:i,weights:o,placeholders:n,signature:l}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n),e),{}),outputs:t.signature.outputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e),{})}}mapArgToTensorInfo(t,e){let n=t.name;return e!=null&&(n=e[n]),{name:n,dtype:t.type}}};function ite(r){let t=$().global;if(typeof t.atob<"u")return t.atob(r);if(typeof Buffer<"u")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function WE(r,t){let e=Array.isArray(r)?String.fromCharCode.apply(null,r):ite(r);return t?e:e.toLowerCase()}function BT(r,t,e,n=!1){let o=r[t];return o!=null?WE(o.s,n):e}function OT(r,t,e){let n=r[t];return n?n.b:e}function zT(r,t,e){let n=r[t]||{},o=n.i!=null?n.i:n.f!=null?n.f:e;return typeof o=="number"?o:parseInt(o,10)}function lw(r){switch(typeof r=="string"&&(r=WA[r]),r){case 1:case 19:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 2:return"float32";case 7:return"string";default:return null}}function UE(r,t,e){let n=r[t];return n&&n.func?n.func.name:e}function GT(r,t,e){let n=r[t];return n&&n.type?lw(n.type):e}function UT(r,t,e){let n=r[t];return n&&n.list&&n.list.type?n.list.type.map(o=>lw(o)):e}function KE(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function WT(r,t,e){let n=r[t];return n&&n.shape?KE(n.shape):e}function KT(r,t,e){let n=r[t];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):e}function VT(r,t,e,n=!1){let o=r[t];return o&&o.list&&o.list.s?o.list.s.map(s=>WE(s,n)):e}function HT(r,t,e){let n=r[t];return n&&n.list&&n.list.shape?n.list.shape.map(o=>KE(o)):e}function qT(r,t,e){let n=r[t];return n&&n.list&&n.list.b?n.list.b:e}var jT=class{constructor(t,e,n){this.node=t;this.tensorMap=e;this.context=n;this.inputs=[];this.attrs={};this.inputs=t.inputNames.map(o=>this.getInput(o)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((o,s)=>(o[s]=this.getAttr(s),o),{}))}getInput(t){return kr(t,this.tensorMap,this.context)}getAttr(t,e){let n=this.node.rawAttrs[t];if(n.tensor!=null)return kr(t,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return zT(this.node.rawAttrs,t,e);if(n.s!=null)return BT(this.node.rawAttrs,t,e);if(n.b!=null)return OT(this.node.rawAttrs,t,e);if(n.shape!=null)return WT(this.node.rawAttrs,t,e);if(n.type!=null)return GT(this.node.rawAttrs,t,e);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return KT(this.node.rawAttrs,t,e);if(n.list.s!=null)return VT(this.node.rawAttrs,t,e);if(n.list.shape!=null)return HT(this.node.rawAttrs,t,e);if(n.list.b!=null)return qT(this.node.rawAttrs,t,e);if(n.list.type!=null)return UT(this.node.rawAttrs,t,e)}return e}};var mt={};We(mt,{OP_SCOPE_SUFFIX:()=>Cv,abs:()=>Ot,acos:()=>d2,acosh:()=>f2,add:()=>Y,addN:()=>h2,all:()=>Pb,any:()=>gh,argMax:()=>op,argMin:()=>g2,asin:()=>b2,asinh:()=>y2,atan:()=>T2,atan2:()=>x2,atanh:()=>I2,avgPool:()=>rc,avgPool3d:()=>Eb,basicLSTMCell:()=>S2,batchNorm:()=>ap,batchNorm2d:()=>Lb,batchNorm3d:()=>_b,batchNorm4d:()=>$b,batchToSpaceND:()=>nc,bincount:()=>Bb,booleanMaskAsync:()=>rZ,broadcastArgs:()=>A2,broadcastTo:()=>ip,buffer:()=>Te,cast:()=>te,ceil:()=>w2,clipByValue:()=>Ur,clone:()=>dn,complex:()=>Nn,concat:()=>lt,concat1d:()=>Ob,concat2d:()=>zb,concat3d:()=>Gb,concat4d:()=>Ub,conv1d:()=>Wb,conv2d:()=>rs,conv2dTranspose:()=>Kb,conv3d:()=>Vb,conv3dTranspose:()=>qb,cos:()=>sc,cosh:()=>jb,cosineWindow:()=>kh,cumprod:()=>bh,cumsum:()=>Xb,denseBincount:()=>N2,depthToSpace:()=>D2,depthwiseConv2d:()=>up,diag:()=>R2,dilation2d:()=>F2,div:()=>me,divNoNan:()=>P2,dot:()=>M2,dropout:()=>rA,einsum:()=>E2,elu:()=>pp,enclosingPowerOfTwo:()=>nA,equal:()=>Qr,erf:()=>L2,euclideanNorm:()=>B2,exp:()=>hr,expandDims:()=>Lr,expm1:()=>O2,eye:()=>Zp,fft:()=>hc,fill:()=>Ps,floor:()=>lp,floorDiv:()=>Fb,fused:()=>fp,gather:()=>mp,gatherND:()=>mZ,greater:()=>ur,greaterEqual:()=>Es,ifft:()=>nl,imag:()=>np,image:()=>hp,inTopKAsync:()=>fZ,irfft:()=>hy,isFinite:()=>z2,isInf:()=>G2,isNaN:()=>U2,leakyRelu:()=>ac,less:()=>Yb,lessEqual:()=>Ls,linalg:()=>sA,linspace:()=>W2,localResponseNormalization:()=>K2,log:()=>Wr,log1p:()=>ic,logSigmoid:()=>V2,logSoftmax:()=>Jb,logSumExp:()=>ey,logicalAnd:()=>en,logicalNot:()=>uc,logicalOr:()=>ty,logicalXor:()=>H2,losses:()=>fQ,lowerBound:()=>q2,matMul:()=>Ge,max:()=>fn,maxPool:()=>pc,maxPool3d:()=>ny,maxPoolWithArgmax:()=>j2,maximum:()=>ns,mean:()=>Lt,meshgrid:()=>X2,min:()=>Th,minimum:()=>cp,mirrorPad:()=>Y2,mod:()=>Z2,moments:()=>Qp,movingAverage:()=>oZ,mul:()=>M,multiRNNCell:()=>Q2,multinomial:()=>J2,neg:()=>Qe,norm:()=>Yp,notEqual:()=>iu,oneHot:()=>tp,ones:()=>gr,onesLike:()=>_r,op:()=>A,outerProduct:()=>eR,pad:()=>Hn,pad1d:()=>tR,pad2d:()=>rR,pad3d:()=>nR,pad4d:()=>oR,pool:()=>sR,pow:()=>Vn,prelu:()=>mc,print:()=>Ib,prod:()=>aR,raggedGather:()=>iR,raggedTensorToTensor:()=>uR,rand:()=>pR,randomGamma:()=>AR,randomNormal:()=>tl,randomStandardNormal:()=>wR,randomUniform:()=>gi,range:()=>dp,real:()=>su,reciprocal:()=>NR,relu:()=>tn,relu6:()=>uy,reshape:()=>L,reverse:()=>wr,reverse1d:()=>DR,reverse2d:()=>RR,reverse3d:()=>FR,reverse4d:()=>PR,rfft:()=>gc,round:()=>py,rsqrt:()=>ly,scalar:()=>de,scatterND:()=>aZ,searchSorted:()=>xh,selu:()=>my,separableConv2d:()=>cy,setdiff1dAsync:()=>MR,sigmoid:()=>Pn,sign:()=>ER,signal:()=>dQ,sin:()=>dy,sinh:()=>fy,slice:()=>Be,slice1d:()=>cc,slice2d:()=>Ch,slice3d:()=>dc,slice4d:()=>rl,softmax:()=>fc,softplus:()=>au,spaceToBatchND:()=>lc,sparse:()=>hQ,sparseToDense:()=>pZ,spectral:()=>cQ,split:()=>Nr,sqrt:()=>Et,square:()=>Ke,squaredDifference:()=>gy,squeeze:()=>_s,stack:()=>br,step:()=>bi,stridedSlice:()=>LR,string:()=>gQ,sub:()=>le,sum:()=>fe,tan:()=>_R,tanh:()=>sp,tensor:()=>vr,tensor1d:()=>Kt,tensor2d:()=>Ba,tensor3d:()=>Ab,tensor4d:()=>$R,tensor5d:()=>BR,tensor6d:()=>OR,tile:()=>Jr,topk:()=>zR,transpose:()=>Oe,truncatedNormal:()=>bc,unique:()=>GR,unsortedSegmentSum:()=>by,unstack:()=>Kr,upperBound:()=>UR,variable:()=>yy,where:()=>zt,whereAsync:()=>xy,zeros:()=>xt,zerosLike:()=>Ae});var VE=(r,t,e,n=mt)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[n.add(v("a",r,t,e),v("b",r,t,e))];case"AddN":return[n.addN(v("tensors",r,t,e))];case"FloorMod":case"Mod":return[n.mod(v("a",r,t,e),v("b",r,t,e))];case"Mul":return[n.mul(v("a",r,t,e),v("b",r,t,e))];case"RealDiv":case"Div":return[n.div(v("a",r,t,e),v("b",r,t,e))];case"DivNoNan":return[n.divNoNan(v("a",r,t,e),v("b",r,t,e))];case"FloorDiv":return[n.floorDiv(v("a",r,t,e),v("b",r,t,e))];case"Sub":return[n.sub(v("a",r,t,e),v("b",r,t,e))];case"Minimum":return[n.minimum(v("a",r,t,e),v("b",r,t,e))];case"Maximum":return[n.maximum(v("a",r,t,e),v("b",r,t,e))];case"Pow":return[n.pow(v("a",r,t,e),v("b",r,t,e))];case"SquaredDifference":return[n.squaredDifference(v("a",r,t,e),v("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var HE=(r,t,e,n=mt)=>{switch(r.op){case"Abs":case"ComplexAbs":return[n.abs(v("x",r,t,e))];case"Acos":return[n.acos(v("x",r,t,e))];case"Acosh":return[n.acosh(v("x",r,t,e))];case"Asin":return[n.asin(v("x",r,t,e))];case"Asinh":return[n.asinh(v("x",r,t,e))];case"Atan":return[n.atan(v("x",r,t,e))];case"Atan2":return[n.atan2(v("x",r,t,e),v("y",r,t,e))];case"Atanh":return[n.atanh(v("x",r,t,e))];case"Ceil":return[n.ceil(v("x",r,t,e))];case"Complex":return[n.complex(v("real",r,t,e),v("imag",r,t,e))];case"Cos":return[n.cos(v("x",r,t,e))];case"Cosh":return[n.cosh(v("x",r,t,e))];case"Elu":return[n.elu(v("x",r,t,e))];case"Erf":return[n.erf(v("x",r,t,e))];case"Exp":return[n.exp(v("x",r,t,e))];case"Expm1":return[n.expm1(v("x",r,t,e))];case"Floor":return[n.floor(v("x",r,t,e))];case"Log":return[n.log(v("x",r,t,e))];case"Log1p":return[n.log1p(v("x",r,t,e))];case"Imag":return[n.imag(v("x",r,t,e))];case"Neg":return[n.neg(v("x",r,t,e))];case"Reciprocal":return[n.reciprocal(v("x",r,t,e))];case"Real":return[n.real(v("x",r,t,e))];case"Relu":return[n.relu(v("x",r,t,e))];case"Round":return[n.round(v("x",r,t,e))];case"Selu":return[n.selu(v("x",r,t,e))];case"Sigmoid":return[n.sigmoid(v("x",r,t,e))];case"Sin":return[n.sin(v("x",r,t,e))];case"Sign":return[n.sign(v("x",r,t,e))];case"Sinh":return[n.sinh(v("x",r,t,e))];case"Softplus":return[n.softplus(v("x",r,t,e))];case"Sqrt":return[n.sqrt(v("x",r,t,e))];case"Square":return[n.square(v("x",r,t,e))];case"Tanh":return[n.tanh(v("x",r,t,e))];case"Tan":return[n.tan(v("x",r,t,e))];case"ClipByValue":return[n.clipByValue(v("x",r,t,e),v("clipValueMin",r,t,e),v("clipValueMax",r,t,e))];case"Relu6":return[n.relu6(v("x",r,t,e))];case"Rsqrt":return[n.rsqrt(kr(r.inputNames[0],t,e))];case"Prod":return[n.prod(v("x",r,t,e),v("axes",r,t,e))];case"LeakyRelu":return[n.leakyRelu(v("x",r,t,e),v("alpha",r,t,e))];case"Prelu":return[n.prelu(v("x",r,t,e),v("alpha",r,t,e))];case"IsNan":return[n.isNaN(kr(r.inputNames[0],t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Xn(r,t,e=""){if(!(typeof r=="number"||typeof t=="number")){y.assert(r.length===t.length,()=>e+` Shapes ${r} and ${t} must match`);for(let n=0;n<r.length;n++){let o=r[n],s=t[n];y.assert(o<0||s<0||o===s,()=>e+` Shapes ${r} and ${t} must match`)}}}function qE(r){return!(typeof r=="number"||r.some(t=>t<0))}function Ud(r,t,e){let n=XT(r,e),o=!qE(n);if(o&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(o&&t.forEach(s=>{n=XT(s.shape,n)}),!qE(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function XT(r,t){if(typeof r=="number")return t;if(typeof t=="number")return r;if(r.length!==t.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${t}`);let e=[];for(let n=0;n<r.length;++n){let o=r[n],s=t[n];if(o>=0&&s>=0&&o!==s)throw new Error(`Incompatible shape during merge: ${r} vs. ${t}`);e[n]=o>=0?o:s}return e}var YT=class{constructor(t,e,n,o,s,a,i){this.name=t;this.dtype=e;this.maxSize=n;this.elementShape=o;this.identicalElementShapes=s;this.dynamicSize=a;this.clearAfterRead=i;this.tensors=[];this.closed_=!1;this.idTensor=de(0),Bt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.tensor.id))&&e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);let e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=e.shape),Xn(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,Bt(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((n,o)=>this.write(n,e[o]))}gather(t,e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let o=0;o<this.size();o++)t.push(o)}if(t.length===0)return vr([],[0].concat(this.elementShape));let n=this.readMany(t);return Xn(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),br(n,0)}concat(t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return vr([],[0].concat(this.elementShape));let e=[];for(let o=0;o<this.size();o++)e.push(o);let n=this.readMany(e);return Xn(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),lt(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,Kr(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0,o=t.map(u=>(n+=u,n));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:e.size/n,a=[];z(()=>{e=L(e,[1,n,s]);for(let u=0;u<t.length;++u){let p=u===0?0:o[u-1],l=[0,p,0],m=[1,t[u],s];a[u]=L(Be(e,l,m),this.elementShape)}return a});let i=[];for(let u=0;u<t.length;u++)i[u]=u;this.writeMany(i,a)}};var yu=class{constructor(t,e,n,o=-1){this.tensors=t;this.elementShape=e;this.elementDtype=n;t?.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);Xn(e,s.shape,"TensorList shape mismatch: "),Bt(s)}),this.idTensor=de(0),this.maxNumElements=o,Bt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new yu([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.id))&&e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Xn(t,this.elementShape,"TensorList shape mismatch: ");let o=Ud(this.elementShape,this.tensors,t);return z(()=>{let s=this.tensors.map(a=>L(a,o));return br(s,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=Ud(this.elementShape,this.tensors,t),o=this.tensors.pop();return o.kept=!1,Xn(o.shape,t,"TensorList shape mismatch: "),L(o,n)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Xn(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Bt(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let e=new yu([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let n=0;n<Math.min(this.tensors.length,t);++n)e.tensors[n]=this.tensors[n];return e}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);Xn(this.tensors[t].shape,e,"TensorList shape mismatch: ");let o=Ud(this.elementShape,this.tensors,e);return L(this.tensors[t],o)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Xn(this.elementShape,e.shape,"TensorList shape mismatch: "),Bt(e),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);Xn(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());let o=Ud(this.elementShape,this.tensors,n);return t.length===0?vr([],[0].concat(o)):z(()=>{let s=t.map(a=>L(this.tensors[a],o));return br(s,0)})}concat(t,e){if(!!t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);Xn(this.elementShape,e,"TensorList shape mismatch: ");let n=Ud(this.elementShape,this.tensors,e);return this.size()===0?vr([],[0].concat(n)):z(()=>{let o=this.tensors.map(s=>L(s,n));return lt(o,0)})}};function jE(r,t,e){let n=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==e)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${e}`);let o=r.shape.slice(1);Xn(o,t,"TensorList shape mismatch: ");let s=Kr(r);return new yu(s,t,n)}function XE(r,t,e,n){return new yu([],r,t,n)}function YE(r,t,e,n){if(t.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${r.shape[0]}`);let o=Math.max(...t);if(n!=null&&n!==-1&&o>=n)throw new Error(`Max index must be < array size (${o}  vs. ${n})`);let s=new yu([],e,r.dtype,n),a=Kr(r,0);return t.forEach((i,u)=>{s.setItem(i,a[u])}),s}function ZE(r,t,e){let n=0,o=t.map(l=>(n+=l,n));if(n!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${r.shape}`);let s=r.shape.slice(1),a=XT(s,e),i=n===0?0:r.size/n,u=z(()=>{let l=[];r=L(r,[1,n,i]);for(let m=0;m<t.length;++m){let c=m===0?0:o[m-1],d=[0,c,0],f=[1,t[m],i];l[m]=L(Be(r,d,f),a)}return r.dispose(),l}),p=new yu([],e,r.dtype,t.length);for(let l=0;l<u.length;l++)p.setItem(l,u[l]);return p}var QE=async(r,t,e)=>{switch(r.op){case"If":case"StatelessIf":{let n=v("thenBranch",r,t,e),o=v("elseBranch",r,t,e),s=v("cond",r,t,e),a=v("args",r,t,e);return(await s.data())[0]?e.functionMap[n].executeFunctionAsync(a,e.tensorArrayMap,e.tensorListMap):e.functionMap[o].executeFunctionAsync(a,e.tensorArrayMap,e.tensorListMap)}case"While":case"StatelessWhile":{let n=v("body",r,t,e),o=v("cond",r,t,e),s=v("args",r,t,e),a=await e.functionMap[o].executeFunctionAsync(s,e.tensorArrayMap,e.tensorListMap),i=s.map(l=>l.id),u=await a[0].data();a.forEach(l=>{!l.kept&&i.indexOf(l.id)===-1&&l.dispose()});let p=s;for(;u[0];){let l=p;p=await e.functionMap[n].executeFunctionAsync(p,e.tensorArrayMap,e.tensorListMap);let m=p.map(d=>d.id);l.forEach(d=>{!d.kept&&i.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()});let c=await e.functionMap[o].executeFunctionAsync(p,e.tensorArrayMap,e.tensorListMap);u=await c[0].data(),c.forEach(d=>{!d.kept&&i.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()})}return p}case"LoopCond":{let n=v("pred",r,t,e);return[Xa(n)]}case"Switch":{let n=v("pred",r,t,e),o=v("data",r,t,e);return o.kept||(o=Xa(o)),(await n.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{let n=r.inputNames.find(o=>kr(o,t,e)!==void 0);if(n){let o=kr(n,t,e);return[Xa(o)]}return}case"Enter":{let n=v("frameName",r,t,e),o=v("tensor",r,t,e);return e.enterFrame(n),[Xa(o)]}case"Exit":{let n=v("tensor",r,t,e);return e.exitFrame(),[Xa(n)]}case"NextIteration":{let n=v("tensor",r,t,e);return e.nextIteration(),[Xa(n)]}case"TensorArrayV3":{let n=v("size",r,t,e),o=v("dtype",r,t,e),s=v("elementShape",r,t,e),a=v("dynamicSize",r,t,e),i=v("clearAfterRead",r,t,e),u=v("identicalElementShapes",r,t,e),p=v("name",r,t,e),l=new YT(p,o,n,s,u,a,i);return e.addTensorArray(l),[l.idTensor,de(1)]}case"TensorArrayWriteV3":{let n=v("tensorArrayId",r,t,e),o=v("index",r,t,e),s=v("tensor",r,t,e),a=e.getTensorArray(n.id);return a.write(o,s),[a.idTensor]}case"TensorArrayReadV3":{let n=v("tensorArrayId",r,t,e),o=v("index",r,t,e);return[e.getTensorArray(n.id).read(o)]}case"TensorArrayGatherV3":{let n=v("tensorArrayId",r,t,e),o=v("indices",r,t,e),s=v("dtype",r,t,e);return[e.getTensorArray(n.id).gather(o,s)]}case"TensorArrayScatterV3":{let n=v("tensorArrayId",r,t,e),o=v("indices",r,t,e),s=v("tensor",r,t,e),a=e.getTensorArray(n.id);return a.scatter(o,s),[a.idTensor]}case"TensorArrayConcatV3":{let n=v("tensorArrayId",r,t,e),o=e.getTensorArray(n.id),s=v("dtype",r,t,e);return[o.concat(s)]}case"TensorArraySplitV3":{let n=v("tensorArrayId",r,t,e),o=v("tensor",r,t,e),s=v("lengths",r,t,e),a=e.getTensorArray(n.id);return a.split(s,o),[a.idTensor]}case"TensorArraySizeV3":{let n=v("tensorArrayId",r,t,e),o=e.getTensorArray(n.id);return[de(o.size(),"int32")]}case"TensorArrayCloseV3":{let n=v("tensorArrayId",r,t,e),o=e.getTensorArray(n.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{let n=v("tensorListId",r,t,e),o=v("index",r,t,e),s=v("tensor",r,t,e),a=e.getTensorList(n.id);return a.setItem(o,s),[a.idTensor]}case"TensorListGetItem":{let n=v("tensorListId",r,t,e),o=v("index",r,t,e),s=v("elementShape",r,t,e),a=v("elementDType",r,t,e);return[e.getTensorList(n.id).getItem(o,s,a)]}case"TensorListScatterV2":case"TensorListScatter":{let n=v("indices",r,t,e),o=v("tensor",r,t,e),s=v("elementShape",r,t,e),a=v("numElements",r,t,e),i=YE(o,n,s,a);return e.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=v("elementShape",r,t,e),o=v("elementDType",r,t,e),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let a=v(s,r,t,e),i=r.op==="TensorListReserve"?-1:a,u=XE(n,o,a,i);return e.addTensorList(u),[u.idTensor]}case"TensorListGather":{let n=v("tensorListId",r,t,e),o=v("indices",r,t,e),s=v("elementShape",r,t,e),a=v("elementDType",r,t,e);return[e.getTensorList(n.id).gather(o,a,s)]}case"TensorListStack":{let n=v("tensorListId",r,t,e),o=v("elementShape",r,t,e),s=v("elementDType",r,t,e),a=v("numElements",r,t,e);return[e.getTensorList(n.id).stack(o,s,a)]}case"TensorListFromTensor":{let n=v("tensor",r,t,e),o=v("elementShape",r,t,e),s=v("elementDType",r,t,e),a=jE(n,o,s);return e.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let n=v("tensorListId",r,t,e),o=e.getTensorList(n.id),s=v("dtype",r,t,e),a=v("elementShape",r,t,e);return[o.concat(s,a)]}case"TensorListPushBack":{let n=v("tensorListId",r,t,e),o=v("tensor",r,t,e),s=e.getTensorList(n.id);return s.pushBack(o),[s.idTensor]}case"TensorListPopBack":{let n=v("tensorListId",r,t,e),o=v("elementShape",r,t,e),s=v("elementDType",r,t,e);return[e.getTensorList(n.id).popBack(o,s)]}case"TensorListSplit":{let n=v("tensor",r,t,e),o=v("elementShape",r,t,e),s=v("lengths",r,t,e),a=ZE(n,s,o);return e.addTensorList(a),[a.idTensor]}case"TensorListLength":{let n=v("tensorListId",r,t,e),o=e.getTensorList(n.id);return[de(o.size(),"int32")]}case"TensorListResize":{let n=v("tensorListId",r,t,e),o=v("size",r,t,e),a=e.getTensorList(n.id).resize(o);return e.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};function JE(r,t,e){let[n,o]=v("fusedOps",r,t,e),s=n==="biasadd",a=!s,i=o==="prelu",u=n==="fusedbatchnorm",p=v("numArgs",r,t,e);if(s){if(i&&p!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&p!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let l=v("strides",r,t,e),m=Uh(r,t,e),c=v("dataFormat",r,t,e).toUpperCase(),d=v("dilations",r,t,e),[f,h]=v("args",r,t,e);a&&(h=f,f=void 0);let g=v("leakyreluAlpha",r,t,e);return{stride:l,pad:m,dataFormat:c,dilations:d,biasArg:f,preluArg:h,activationFunc:o,leakyreluAlpha:g}}var eL=(r,t,e,n=mt)=>{switch(r.op){case"Conv1D":{let o=v("stride",r,t,e),s=v("pad",r,t,e),a=v("dataFormat",r,t,e).toUpperCase(),i=v("dilation",r,t,e);return[n.conv1d(v("x",r,t,e),v("filter",r,t,e),o,s,a,i)]}case"Conv2D":{let o=v("strides",r,t,e),s=Uh(r,t,e),a=v("dataFormat",r,t,e).toUpperCase(),i=v("dilations",r,t,e);return[n.conv2d(v("x",r,t,e),v("filter",r,t,e),[o[1],o[2]],s,a,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:o,pad:s,dataFormat:a,dilations:i,biasArg:u,preluArg:p,activationFunc:l,leakyreluAlpha:m}=JE(r,t,e);return[n.fused.conv2d({x:v("x",r,t,e),filter:v("filter",r,t,e),strides:[o[1],o[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:p,leakyreluAlpha:m})]}case"FusedDepthwiseConv2dNative":{let{stride:o,pad:s,dataFormat:a,dilations:i,biasArg:u,preluArg:p,activationFunc:l,leakyreluAlpha:m}=JE(r,t,e);return[n.fused.depthwiseConv2d({x:v("x",r,t,e),filter:v("filter",r,t,e),strides:[o[1],o[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:p,leakyreluAlpha:m})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let o=v("outputShape",r,t,e),s=v("strides",r,t,e),a=Uh(r,t,e);return[n.conv2dTranspose(v("x",r,t,e),v("filter",r,t,e),o,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let o=v("strides",r,t,e),s=Uh(r,t,e),a=v("dilations",r,t,e),i=v("dataFormat",r,t,e).toUpperCase();return[n.depthwiseConv2d(v("input",r,t,e),v("filter",r,t,e),[o[1],o[2]],s,i,[a[1],a[2]])]}case"Conv3D":{let o=v("strides",r,t,e),s=v("pad",r,t,e),a=v("dataFormat",r,t,e).toUpperCase(),i=v("dilations",r,t,e);return[n.conv3d(v("x",r,t,e),v("filter",r,t,e),[o[1],o[2],o[3]],s,a,[i[1],i[2],i[3]])]}case"AvgPool":{let o=v("strides",r,t,e),s=v("pad",r,t,e),a=v("kernelSize",r,t,e);return[n.avgPool(v("x",r,t,e),[a[1],a[2]],[o[1],o[2]],s)]}case"MaxPool":{let o=v("strides",r,t,e),s=v("pad",r,t,e),a=v("kernelSize",r,t,e);return[n.maxPool(v("x",r,t,e),[a[1],a[2]],[o[1],o[2]],s)]}case"MaxPoolWithArgmax":{let o=v("strides",r,t,e),s=v("pad",r,t,e),a=v("kernelSize",r,t,e),i=v("includeBatchInIndex",r,t,e),{result:u,indexes:p}=n.maxPoolWithArgmax(v("x",r,t,e),[a[1],a[2]],[o[1],o[2]],s,i);return[u,p]}case"AvgPool3D":{let o=v("strides",r,t,e),s=v("pad",r,t,e),a=v("kernelSize",r,t,e);return[n.avgPool3d(v("x",r,t,e),[a[1],a[2],a[3]],[o[1],o[2],o[3]],s)]}case"MaxPool3D":{let o=v("strides",r,t,e),s=v("pad",r,t,e),a=v("kernelSize",r,t,e);return[n.maxPool3d(v("x",r,t,e),[a[1],a[2],a[3]],[o[1],o[2],o[3]],s)]}case"Dilation2D":{let o=v("strides",r,t,e),s=v("pad",r,t,e),a=v("dilations",r,t,e),i=o[1],u=o[2],p=a[1],l=a[2];return[n.dilation2d(v("x",r,t,e),v("filter",r,t,e),[i,u],s,[p,l],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var tL=(r,t,e,n=mt)=>{switch(r.op){case"Fill":{let o=v("shape",r,t,e),s=v("dtype",r,t,e),a=v("value",r,t,e);return[n.fill(o,a,s)]}case"LinSpace":{let o=v("start",r,t,e),s=v("stop",r,t,e),a=v("num",r,t,e);return[n.linspace(o,s,a)]}case"Multinomial":{let o=v("logits",r,t,e),s=v("numSamples",r,t,e),a=v("seed",r,t,e);return[n.multinomial(o,s,a)]}case"OneHot":{let o=v("indices",r,t,e),s=v("depth",r,t,e),a=v("onValue",r,t,e),i=v("offValue",r,t,e),u=v("dtype",r,t,e);return[n.oneHot(o,s,a,i,u)]}case"Ones":return[n.ones(v("shape",r,t,e),v("dtype",r,t,e))];case"OnesLike":return[n.onesLike(v("x",r,t,e))];case"RandomStandardNormal":return[n.randomStandardNormal(v("shape",r,t,e),v("dtype",r,t,e),v("seed",r,t,e))];case"RandomUniform":return[n.randomUniform(v("shape",r,t,e),v("minval",r,t,e),v("maxval",r,t,e),v("dtype",r,t,e))];case"Range":{let o=v("start",r,t,e),s=v("stop",r,t,e),a=v("step",r,t,e);return[n.range(o,s,a,v("dtype",r,t,e))]}case"TruncatedNormal":{let o=v("shape",r,t,e),s=v("mean",r,t,e),a=v("stdDev",r,t,e),i=v("seed",r,t,e);return[n.truncatedNormal(o,s,a,v("dtype",r,t,e),i)]}case"Zeros":return[n.zeros(v("shape",r,t,e),v("dtype",r,t,e))];case"ZerosLike":return[n.zerosLike(v("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function mw(r,t,e){let n=v("boxes",r,t,e),o=v("scores",r,t,e),s=v("maxOutputSize",r,t,e),a=v("iouThreshold",r,t,e),i=v("scoreThreshold",r,t,e),u=v("softNmsSigma",r,t,e);return{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:u}}var rL=async(r,t,e,n,o=mt)=>{switch(r.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:p,softNmsSigma:l}=mw(r,t,e),m=await o.image.nonMaxSuppressionWithScoreAsync(s,a,i,u,p,l);return[m.selectedIndices,m.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:p}=mw(r,t,e),l=v("padToMaxOutputSize",r,t,e),m=await o.image.nonMaxSuppressionPaddedAsync(s,a,i,u,p,l);return[m.selectedIndices,m.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:p}=mw(r,t,e);return[await o.image.nonMaxSuppressionAsync(s,a,i,u,p)]}case"Where":{let s=o.cast(v("condition",r,t,e),"bool"),a=[await o.whereAsync(s)];return s.dispose(),a}case"ListDiff":return o.setdiff1dAsync(v("x",r,t,e),v("y",r,t,e));default:throw TypeError(`Node type ${r.op} is not implemented`)}};var nL=(r,t,e,n=mt)=>{switch(r.op){case"LowerBound":{let o=v("sortedSequence",r,t,e),s=v("values",r,t,e);return[n.lowerBound(o,s)]}case"TopKV2":{let o=v("x",r,t,e),s=v("k",r,t,e),a=v("sorted",r,t,e),i=n.topk(o,s,a);return[i.values,i.indices]}case"UpperBound":{let o=v("sortedSequence",r,t,e),s=v("values",r,t,e);return[n.upperBound(o,s)]}case"Unique":{let o=v("x",r,t,e),s=n.unique(o);return[s.values,s.indices]}case"UniqueV2":{let o=v("x",r,t,e),s=v("axis",r,t,e),a=n.unique(o,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var oL=(r,t,e,n=mt)=>{switch(r.op){case"Const":return t[r.name];case"PlaceholderWithDefault":let o=v("default",r,t,e);return[kr(r.name,t,e)||o];case"Placeholder":return[kr(r.name,t,e)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let l=v("x",r,t,e);return[Xa(l)]}case"IdentityN":return v("x",r,t,e).map(l=>Xa(l));case"Snapshot":let s=v("x",r,t,e);return[Xa(s)];case"Shape":return[n.tensor1d(v("x",r,t,e).shape,"int32")];case"ShapeN":return v("x",r,t,e).map(l=>n.tensor1d(l.shape));case"Size":return[n.scalar(v("x",r,t,e).size,"int32")];case"Rank":return[n.scalar(v("x",r,t,e).rank,"int32")];case"NoOp":return[n.scalar(1)];case"Print":let a=v("x",r,t,e),i=v("data",r,t,e),u=v("message",r,t,e),p=v("summarize",r,t,e);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let l=0;l<i.length;l++)console.log(Array.prototype.slice.call(i[l].dataSync()).slice(0,p));return[a];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var ZT=class{constructor(t,e){this.keyDType=t;this.valueDType=e;this.handle=de(0),this.tensorMap=new Map,Bt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return de(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);let n=await t.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),z(()=>{let o=Kr(e),s=n.length,a=o.length;y.assert(s===a,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${a} elements.`);for(let i=0;i<s;i++){let u=n[i],p=o[i];Bt(p),this.tensorMap.set(u,p)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);let n=await t.data();return z(()=>{let o=[];for(let s=0;s<n.length;s++){let a=n[s],i=this.findWithDefault(a,e);o.push(i)}return br(o)})}findWithDefault(t,e){let n=this.tensorMap.get(t);return n??e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}};var sL=async(r,t,e,n)=>{switch(r.op){case"HashTable":case"HashTableV2":{let o=v("keyDType",r,t,e),s=v("valueDType",r,t,e),a=new ZT(o,s);return n.addHashTable(r.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{let o=v("tableHandle",r,t,e,n),s=v("keys",r,t,e),a=v("values",r,t,e);return[await n.getHashTableById(o.id).import(s,a)]}case"LookupTableFind":case"LookupTableFindV2":{let o=v("tableHandle",r,t,e,n),s=v("keys",r,t,e),a=v("defaultValue",r,t,e);return[await n.getHashTableById(o.id).find(s,a)]}case"LookupTableSize":case"LookupTableSizeV2":{let o=v("tableHandle",r,t,e,n);return[n.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var aL=(r,t,e,n=mt)=>{switch(r.op){case"ResizeBilinear":{let o=v("images",r,t,e),s=v("size",r,t,e),a=v("alignCorners",r,t,e),i=v("halfPixelCenters",r,t,e);return[n.image.resizeBilinear(o,[s[0],s[1]],a,i)]}case"ResizeNearestNeighbor":{let o=v("images",r,t,e),s=v("size",r,t,e),a=v("alignCorners",r,t,e),i=v("halfPixelCenters",r,t,e);return[n.image.resizeNearestNeighbor(o,[s[0],s[1]],a,i)]}case"CropAndResize":{let o=v("image",r,t,e),s=v("boxes",r,t,e),a=v("boxInd",r,t,e),i=v("cropSize",r,t,e),u=v("method",r,t,e),p=v("extrapolationValue",r,t,e);return[n.image.cropAndResize(o,s,a,i,u,p)]}case"ImageProjectiveTransformV3":{let o=v("images",r,t,e),s=v("transforms",r,t,e),a=v("outputShape",r,t,e),i=v("fillValue",r,t,e),u=v("interpolation",r,t,e),p=v("fillMode",r,t,e);return[n.image.transform(o,s,u.toLowerCase(),p.toLowerCase(),i,a)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var iL=(r,t,e,n=mt)=>{switch(r.op){case"Equal":return[n.equal(v("a",r,t,e),v("b",r,t,e))];case"NotEqual":return[n.notEqual(v("a",r,t,e),v("b",r,t,e))];case"Greater":return[n.greater(v("a",r,t,e),v("b",r,t,e))];case"GreaterEqual":return[n.greaterEqual(v("a",r,t,e),v("b",r,t,e))];case"Less":return[n.less(v("a",r,t,e),v("b",r,t,e))];case"LessEqual":return[n.lessEqual(v("a",r,t,e),v("b",r,t,e))];case"LogicalAnd":return[n.logicalAnd(v("a",r,t,e),v("b",r,t,e))];case"LogicalNot":return[n.logicalNot(v("a",r,t,e))];case"LogicalOr":return[n.logicalOr(v("a",r,t,e),v("b",r,t,e))];case"Select":case"SelectV2":return[n.where(v("condition",r,t,e),v("a",r,t,e),v("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var uL=(r,t,e,n=mt)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[n.matMul(v("a",r,t,e),v("b",r,t,e),v("transposeA",r,t,e),v("transposeB",r,t,e))];case"Einsum":return[n.einsum(v("equation",r,t,e),...v("tensors",r,t,e))];case"Transpose":return[n.transpose(v("x",r,t,e),v("perm",r,t,e))];case"_FusedMatMul":let[o,s]=v("fusedOps",r,t,e),a=o==="biasadd",i=s==="prelu",u=v("numArgs",r,t,e),p=v("leakyreluAlpha",r,t,e);if(a){if(i&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[l,m]=v("args",r,t,e);return[n.fused.matMul({a:v("a",r,t,e),b:v("b",r,t,e),transposeA:v("transposeA",r,t,e),transposeB:v("transposeB",r,t,e),bias:l,activation:s,preluActivationWeights:m,leakyreluAlpha:p})];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var pL=(r,t,e,n=mt)=>{switch(r.op){case"EuclideanNorm":return[n.euclideanNorm(v("x",r,t,e),v("axis",r,t,e),v("keepDims",r,t,e))];case"FusedBatchNorm":case"FusedBatchNormV2":return[n.batchNorm(v("x",r,t,e),v("mean",r,t,e),v("variance",r,t,e),v("offset",r,t,e),v("scale",r,t,e),v("epsilon",r,t,e))];case"FusedBatchNormV3":return[n.batchNorm(v("x",r,t,e),v("mean",r,t,e),v("variance",r,t,e),v("offset",r,t,e),v("scale",r,t,e),v("epsilon",r,t,e))];case"LRN":return[n.localResponseNormalization(v("x",r,t,e),v("radius",r,t,e),v("bias",r,t,e),v("alpha",r,t,e),v("beta",r,t,e))];case"Softmax":return[n.softmax(v("x",r,t,e))];case"LogSoftmax":return[n.logSoftmax(v("x",r,t,e))];case"SparseToDense":return[n.sparseToDense(v("sparseIndices",r,t,e),v("outputShape",r,t,e),v("sparseValues",r,t,e),v("defaultValue",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var lL=(r,t,e,n=mt)=>{switch(r.op){case"Max":{let i=v("axis",r,t,e),u=v("keepDims",r,t,e);return[n.max(v("x",r,t,e),i,u)]}case"Mean":{let i=v("axis",r,t,e),u=v("keepDims",r,t,e);return[n.mean(v("x",r,t,e),i,u)]}case"Min":{let i=v("axis",r,t,e),u=v("keepDims",r,t,e);return[n.min(v("x",r,t,e),i,u)]}case"Sum":{let i=v("axis",r,t,e),u=v("keepDims",r,t,e);return[n.sum(v("x",r,t,e),i,u)]}case"All":{let i=v("axis",r,t,e),u=v("keepDims",r,t,e);return[n.all(v("x",r,t,e),i,u)]}case"Any":{let i=v("axis",r,t,e),u=v("keepDims",r,t,e);return[n.any(v("x",r,t,e),i,u)]}case"ArgMax":{let i=v("axis",r,t,e);return[n.argMax(v("x",r,t,e),i)]}case"ArgMin":{let i=v("axis",r,t,e);return[n.argMin(v("x",r,t,e),i)]}case"Prod":{let i=v("axis",r,t,e),u=v("keepDims",r,t,e);return[n.prod(v("x",r,t,e),i,u)]}case"Cumprod":{let i=v("axis",r,t,e),u=v("exclusive",r,t,e),p=v("reverse",r,t,e);return[n.cumprod(v("x",r,t,e),i,u,p)]}case"Cumsum":{let i=v("axis",r,t,e),u=v("exclusive",r,t,e),p=v("reverse",r,t,e);return[n.cumsum(v("x",r,t,e),i,u,p)]}case"Bincount":let o=v("x",r,t,e),s=v("weights",r,t,e),a=v("size",r,t,e);return[n.bincount(o,s,a)];case"DenseBincount":{let i=v("x",r,t,e),u=v("weights",r,t,e),p=v("size",r,t,e),l=v("binaryOutput",r,t,e);return[n.denseBincount(i,u,p,l)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var mL=(r,t,e,n=mt)=>{switch(r.op){case"ConcatV2":case"Concat":{let o=v("n",r,t,e),s=v("axis",r,t,e),a=v("tensors",r,t,e);return a=a.slice(0,o),[n.concat(a,s)]}case"Gather":{let o=v("x",r,t,e),s=v("indices",r,t,e);return[n.gather(o,n.cast(s,"int32"),0)]}case"GatherV2":{let o=v("axis",r,t,e),s=v("batchDims",r,t,e),a=v("x",r,t,e),i=v("indices",r,t,e);return[n.gather(a,n.cast(i,"int32"),o,s)]}case"Reverse":{let o=v("dims",r,t,e),s=[];for(let i=0;i<o.length;i++)o[i]&&s.push(i);let a=v("x",r,t,e);return[n.reverse(a,s)]}case"ReverseV2":{let o=v("axis",r,t,e),s=v("x",r,t,e);return[n.reverse(s,o)]}case"Slice":{let o=v("begin",r,t,e),s=v("size",r,t,e);return[n.slice(v("x",r,t,e),o,s)]}case"StridedSlice":{let o=v("begin",r,t,e),s=v("end",r,t,e),a=v("strides",r,t,e),i=v("beginMask",r,t,e),u=v("endMask",r,t,e),p=v("ellipsisMask",r,t,e),l=v("newAxisMask",r,t,e),m=v("shrinkAxisMask",r,t,e),c=v("x",r,t,e);return[n.stridedSlice(c,o,s,a,i,u,p,l,m)]}case"Pack":return z(()=>{let o=v("axis",r,t,e),s=v("tensors",r,t,e),a=s[0].shape,i=n.squeeze(s[0]).shape,u=s.map(p=>{let l=y.arraysEqual(p.shape,a);if(!l&&!y.arraysEqual(n.squeeze(p).shape,i))throw new Error("the input tensors shape does not match");return l?p:n.reshape(p,a)});return[n.stack(u,o)]});case"Unpack":{let o=v("axis",r,t,e),s=v("tensor",r,t,e);return n.unstack(s,o)}case"Tile":{let o=v("reps",r,t,e);return[n.tile(v("x",r,t,e),o)]}case"Split":case"SplitV":{let o=v("axis",r,t,e),s=v("numOrSizeSplits",r,t,e),a=v("x",r,t,e);return n.split(a,s,o)}case"ScatterNd":{let o=v("indices",r,t,e),s=v("values",r,t,e),a=v("shape",r,t,e);return[n.scatterND(o,s,a)]}case"GatherNd":{let o=v("x",r,t,e),s=v("indices",r,t,e);return[n.gatherND(o,s)]}case"SparseToDense":{let o=v("sparseIndices",r,t,e),s=v("outputShape",r,t,e),a=v("sparseValues",r,t,e),i=v("defaultValue",r,t,e);return[n.sparseToDense(o,a,s,a.dtype===i.dtype?i:n.cast(i,a.dtype))]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var cL=(r,t,e,n=mt)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:o,outputValues:s,emptyRowIndicator:a,reverseIndexMap:i}=n.sparse.sparseFillEmptyRows(v("indices",r,t,e),v("values",r,t,e),v("denseShape",r,t,e),v("defaultValue",r,t,e));return[o,s,a,i]}case"SparseReshape":{let{outputIndices:o,outputShape:s}=n.sparse.sparseReshape(v("inputIndices",r,t,e),v("inputShape",r,t,e),v("newShape",r,t,e));return[o,s]}case"SparseSegmentMean":return[n.sparse.sparseSegmentMean(v("data",r,t,e),v("indices",r,t,e),v("segmentIds",r,t,e))];case"SparseSegmentSum":return[n.sparse.sparseSegmentSum(v("data",r,t,e),v("indices",r,t,e),v("segmentIds",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var dL=(r,t,e,n=mt)=>{switch(r.op){case"FFT":return[n.fft(v("x",r,t,e))];case"IFFT":return[n.ifft(v("x",r,t,e))];case"RFFT":return[n.rfft(v("x",r,t,e))];case"IRFFT":return[n.irfft(v("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var fL=(r,t,e,n=mt)=>{switch(r.op){case"StringNGrams":{let{nGrams:o,nGramsSplits:s}=n.string.stringNGrams(v("data",r,t,e),v("dataSplits",r,t,e),v("separator",r,t,e),v("nGramWidths",r,t,e),v("leftPad",r,t,e),v("rightPad",r,t,e),v("padWidth",r,t,e),v("preserveShortSequences",r,t,e));return[o,s]}case"StringSplit":{let{indices:o,values:s,shape:a}=n.string.stringSplit(v("input",r,t,e),v("delimiter",r,t,e),v("skipEmpty",r,t,e));return[o,s,a]}case"StringToHashBucketFast":return[n.string.stringToHashBucketFast(v("input",r,t,e),v("numBuckets",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var hL=(r,t,e,n=mt)=>{switch(r.op){case"Cast":return[n.cast(v("x",r,t,e),v("dtype",r,t,e))];case"ExpandDims":{let o=v("axis",r,t,e);return[n.expandDims(v("x",r,t,e),o)]}case"Squeeze":{let o=v("axis",r,t,e);return[n.squeeze(v("x",r,t,e),o)]}case"Reshape":return[n.reshape(v("x",r,t,e),v("shape",r,t,e))];case"MirrorPad":return[n.mirrorPad(v("x",r,t,e),v("padding",r,t,e),v("mode",r,t,e))];case"PadV2":case"Pad":return[n.pad(v("x",r,t,e),v("padding",r,t,e),v("constantValue",r,t,e))];case"SpaceToBatchND":{let o=v("blockShape",r,t,e),s=v("paddings",r,t,e);return[n.spaceToBatchND(v("x",r,t,e),o,s)]}case"BatchToSpaceND":{let o=v("blockShape",r,t,e),s=v("crops",r,t,e);return[n.batchToSpaceND(v("x",r,t,e),o,s)]}case"DepthToSpace":{let o=v("blockSize",r,t,e),s=v("dataFormat",r,t,e).toUpperCase();return[n.depthToSpace(v("x",r,t,e),o,s)]}case"BroadcastTo":return[n.broadcastTo(v("x",r,t,e),v("shape",r,t,e))];case"BroadcastArgs":return[n.broadcastArgs(v("s0",r,t,e),v("s1",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function cw(r,t,e,n,o=z){let s=((a,i,u)=>{switch(a.category){case"arithmetic":return o(()=>VE(a,i,u));case"basic_math":return o(()=>HE(a,i,u));case"control":return QE(a,i,u);case"convolution":return o(()=>eL(a,i,u));case"creation":return o(()=>tL(a,i,u));case"dynamic":return rL(a,i,u);case"evaluation":return o(()=>nL(a,i,u));case"image":return o(()=>aL(a,i,u));case"graph":return o(()=>oL(a,i,u));case"logical":return o(()=>iL(a,i,u));case"matrices":return o(()=>uL(a,i,u));case"normalization":return o(()=>pL(a,i,u));case"reduction":return o(()=>lL(a,i,u));case"slice_join":return o(()=>mL(a,i,u));case"sparse":return o(()=>cL(a,i,u));case"spectral":return o(()=>dL(a,i,u));case"string":return o(()=>fL(a,i,u));case"transformation":return o(()=>hL(a,i,u));case"hash_table":return sL(a,i,u,n);case"custom":let p=_T(a.op);if(p&&p.customExecutor)return p.customExecutor(new jT(a,i,u));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,t,e);return y.isPromise(s)?s.then(a=>[].concat(a)):[].concat(s)}var Kh=class{constructor(t={},e={},n={},o={}){this.weightMap=t;this.tensorArrayMap=e;this.tensorListMap=n;this.functionMap=o;this.rootContext={id:0,frameName:"",iterationId:0};this.contexts=[this.rootContext];this.lastId=0;this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let t=[];for(let e=0;e<this.contexts.length-1;e++){let n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>e.id===0&&e.iterationId===0?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(let e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(let e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}};function dw(r,t,e,n){let o=new Set,s=[],a=null,i=null,u=new Set,p=Object.keys(r).map(c=>In(c)[0]),l=[];n!=null&&(l=n.map(c=>In(c.name)[0]));let m=[...t];for(;m.length>0;){let c=m.pop();if((fw(c)||Rte(c)||Fte(c))&&a==null&&(a=c,i=a.children.map(d=>d.name).filter(d=>o.has(d))),o.add(c.name),e[c.name]==null&&p.indexOf(c.name)===-1&&l.indexOf(c.name)===-1){if(c.inputs.length===0){s.push(c.name);continue}c.inputs.forEach(d=>{u.has(d.name)||(u.add(d.name),m.push(d))})}}return{inputs:r,outputs:t,usedNodes:o,missingInputs:s,dynamicNode:a,syncInputs:i}}function gL(r,t,e){let{usedNodes:n,inputs:o}=e,s=[],a=Object.keys(o).map(l=>In(l)[0]).map(l=>r.nodes[l]),i=r.initNodes;a.forEach(l=>{n.has(l.name)&&s.push(l)}),r.weights.forEach(l=>{n.has(l.name)&&s.push(l)}),i?.forEach(l=>{n.has(l.name)&&s.push(l)});let u=new Set,p=[];for(;s.length>0;){let l=s.pop();u.add(l.name),t[l.name]||p.push(l),l.children.forEach(m=>{!u.has(m.name)&&n.has(m.name)&&m.inputs.every(c=>u.has(c.name))&&s.push(m)})}return p}var wte=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Nte=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Dte=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function fw(r){return wte.indexOf(r.op)>=0}function Rte(r){return Nte.indexOf(r.op)>=0}function Fte(r){return Dte.indexOf(r.op)>=0}var Rl=class{constructor(t,e){this.graph=t;this.parent=e;this.compiledMap=new Map;this._weightMap={};this.SEPERATOR=",";this._functions={};this._functionExecutorMap={};this.intermediateTensors={};this.keepTensorForDebug=!1;this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(n=>{this._functionExecutorMap[n]=new Rl(t.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){let e=Object.keys(t).map(n=>t[n].map(o=>o.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{let e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}getCompilationKey(t,e){let n=t.map(s=>s.name).sort(),o=e.map(s=>s.name).sort();return n.join(this.SEPERATOR)+"--"+o.join(this.SEPERATOR)}compile(t,e){let n=dw(t,e,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:s,syncInputs:a}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(o.length>0){let i=e.map(p=>p.name),u=Object.keys(t);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${u}]. Missing the following inputs: [${o}]`)}return gL(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);let n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);let o=n.map(m=>this.graph.nodes[In(m)[0]]),s=e.map(m=>In(m)[0]),a=s.map(m=>this.graph.nodes[m]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);let i=this.getCompilationKey(o,a),u=this.compiledMap.get(i);u==null&&(u=this.compile(t,a),this.compiledMap.set(i,u));let p={},l={};return z(()=>{let m=new Kh(this.weightMap,p,l,this.functionExecutorMap),c={...this.weightMap};Object.keys(t).forEach(h=>{let[g,b]=In(h),T=[];T[b]=t[h],c[g]=T});let d=this.getFrozenTensorIds(c),f={};for(let h=0;h<u.length;h++){let g=u[h];if(!c[g.name]){let b=cw(g,c,m,this._resourceManager);if(y.isPromise(b))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);c[g.name]=b,this.checkTensorForDisposal(g.name,g,c,m,d,s,f)}}return this.parent==null&&m.dispose(d),e.map(h=>kr(h,c,m))})}getFrozenTensorIds(t){let e=[].concat.apply([],Object.keys(t).map(n=>t[n]).map(n=>n.map(o=>o.id)));return new Set(e)}checkTensorForDisposal(t,e,n,o,s,a,i){e.category==="control"||a.indexOf(t)!==-1||(n[t].forEach(u=>{u!=null&&(i[u.id]=(i[u.id]||0)+e.children.length)}),e.inputs.forEach(u=>{if(u.category!=="control"){let p=GE(u.name,n,o);p?.forEach(l=>{if(l&&!l.kept&&!s.has(l.id)){let m=i[l.id];if(m===1){if(!this.keepTensorForDebug)l.dispose();else{let[c,d]=Hs(e.name,o);this.intermediateTensors[c]?this.intermediateTensors[c][d]=l:(this.intermediateTensors[c]=[],this.intermediateTensors[c][d]=l)}delete i[l.id]}else m!=null&&i[l.id]--}})}}))}async executeAsync(t,e){return this._executeAsync(t,e)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(t=>this.intermediateTensors[t].forEach(e=>e.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(t=>{this.tensorsMap[t].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let t in this.intermediateTensors)this.intermediateTensors[t].forEach(e=>e.dispose()),delete this.intermediateTensors[t]}async _executeAsync(t,e,n=!1,o={},s={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepTensorForDebug=$().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(l){console.warn(l.message)}this.resetIntermediateTensors();let a=new Kh(this.weightMap,o,s,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(t,a,e,n);let i=e.map(l=>kr(l,this.tensorsMap,a)),u=i.map(l=>l.id),p=Object.keys(t).map(l=>t[l].id);return this.keepIds=new Set([...u,...p,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),i}async executeFunctionAsync(t,e,n){let o=t.reduce((s,a,i)=>(s[this.inputs[i].name]=a,s),{});return this._executeAsync(o,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,o){let s=Object.keys(t),a=s.map(x=>this.graph.nodes[In(x)[0]]),i=n.map(x=>In(x)[0]),u=i.map(x=>this.graph.nodes[x]);u.length===0&&(u=this._outputs);let{usedNodes:p,missingInputs:l,dynamicNode:m,syncInputs:c}=dw(t,u,this.weightMap,this._initNodes),d=[...a,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:e.currentContext})),f={...this.weightMap};Object.keys(t).forEach(x=>{let[I,k]=In(x),w=[];w[k]=t[x],f[I]=w});let h={},g=this.getFrozenTensorIds(f),b={};for(;d.length>0;){let x=this.processStack(a,d,e,f,b,g,i,h,p);await Promise.all(x)}m==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let T=u.filter(x=>!fw(x)&&!kr(x.name,f,e)).map(x=>x.name);if(T.length>0){let x="";throw m!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${T}] from the provided inputs [${s}]. Consider providing the following inputs: [${l}]. ${x}`)}return f}processStack(t,e,n,o,s,a,i,u,p){let l=[];for(;e.length>0;){let m=e.pop();n.currentContext=m.contexts;let c="";if(m.node.op==="Enter"&&v("isConstant",m.node,o,n)&&([c]=Hs(m.node.name,n)),o[m.node.name]==null){let d=cw(m.node,o,n,this._resourceManager);c||([c]=Hs(m.node.name,n));let f=n.currentContext;y.isPromise(d)?l.push(d.then(h=>(o[c]=h,n.currentContext=f,this.checkTensorForDisposal(c,m.node,o,n,a,i,u),this.processChildNodes(m.node,e,n,o,s,p),h))):(o[c]=d,this.checkTensorForDisposal(c,m.node,o,n,a,i,u),this.processChildNodes(m.node,e,n,o,s,p))}else this.processChildNodes(m.node,e,n,o,s,p)}return l}processChildNodes(t,e,n,o,s,a){t.children.forEach(i=>{let[u]=Hs(i.name,n);s[u]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(p=>!!kr(p,o,n))&&(s[u]=!0,e.push({contexts:n.currentContext,node:i})):i.inputNames.every(p=>!!kr(p,o,n))&&(s[u]=!0,e.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{let n=t[e],[o]=In(e),s=this.graph.nodes[o];if(s.attrParams.shape&&s.attrParams.shape.value){let a=s.attrParams.shape.value,i=a.length===n.shape.length&&n.shape.every((u,p)=>a[p]===-1||a[p]===u);y.assert(i,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&y.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(t){let e={};for(let n in t)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let o=this._signature.inputs[n];e[o.name]=t[n]}else e[n]=t[n];return e}checkInputs(t){let e=Object.keys(t).filter(n=>{let[o]=In(n);return this.graph.nodes[o]==null});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[e]!=null?this._signature.outputs[e].name:e,{})}checkOutputs(t){t.forEach(e=>{let[n]=In(e);if(!this.graph.nodes[n])throw new Error(`The output '${e}' is not found in the graph`)})}};var QT=class{constructor(t={},e={}){this.hashTableNameToHandle=t;this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(let t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(let t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}};var Pte="?tfjs-format=file",Mte="model.json",Vh=class{constructor(t,e={},n=Dn){this.modelUrl=t;this.loadOptions=e;this.version="n/a";this.io=n,e==null&&(this.loadOptions={}),this.resourceManager=new QT}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{let e=this.io.getLoadHandlers(t,this.loadOptions);if(e.length===0)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let t=this.handler.load();return y.isPromise(t)?t.then(e=>this.loadSync(e)):this.loadSync(t)}loadSync(t){this.artifacts=t;let e=this.artifacts.modelTopology,n=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let s=this.artifacts.userDefinedMetadata;s.signature!=null&&(n=s.signature),s.structuredOutputKeys!=null&&(this.structuredOutputKeys=s.structuredOutputKeys)}this.signature=n,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;let o=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Rl(Wh.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null&&t.modelInitializer.node!=null){let s=Wh.Instance.transformGraph(t.modelInitializer);this.initializer=new Rl(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if(typeof t=="string"){let n=this.io.getSaveHandlers(t);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${t}'`);t=n[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){let n=this.execute(t,this.outputNodes);if(this.structuredOutputKeys){let o=n instanceof ze?[n]:n,s={};return o.forEach((a,i)=>s[this.structuredOutputKeys[i]]=a),s}return n}normalizeInputs(t){if(!(t instanceof ze)&&!Array.isArray(t))return t;if(t=Array.isArray(t)?t:[t],t.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce((e,n,o)=>(e[n]=t[o],e),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,n)=>(e[n]=[t[n]],e),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function Ete(r,t={},e=Dn){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof r=="string"&&(r=_te(r));let n=new Vh(r,t,e);return await n.load(),n}function Lte(r){if(r==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide a url or an IOHandler that loads the model");if(!r.load)throw new Error(`modelUrl IO Handler ${r} has no load function`);let t=new Vh(r);return t.load(),t}function _te(r){return r.endsWith("/")||(r=r+"/"),`${r}${Mte}${Pte}`}var $te="0.0.0";var $L={};We($L,{CSVDataset:()=>Vd,Dataset:()=>Ya,FileDataSource:()=>Yd,TextLineDataset:()=>Kd,URLDataSource:()=>Zd,array:()=>AL,csv:()=>FL,func:()=>PL,generator:()=>ML,microphone:()=>LL,version_data:()=>_L,webcam:()=>EL,zip:()=>wL});var vL=dm(Ih());var CL=dm(Ih());function bL(r,t){return JT(r,t)}function JT(r,t,e=new Map,n=new Set){if(r==null)return null;if(typeof Blob=="function"&&r instanceof Blob)return r.slice();if(n.has(r))throw new Error("Circular references are not supported.");if(e.has(r))return e.get(r);let o=t(r);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(Dp(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let a in r){let i=r[a],u=JT(i,t,e,n);s[a]=u}return n.delete(r),r.__proto__&&(s.__proto__=r.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return e.set(r,o.value),o.value}function yL(r,t=gw){return TL(r,t)}function TL(r,t,e=new Set){let n=r[0];if(e.has(n))throw new Error("Circular references are not supported.");let o=t(r);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(Dp(n)){let s=Array.isArray(n)?[]:{};e.add(n);for(let a in n){let i=r.map(p=>p[a]),u=TL(i,t,e);s[a]=u}return e.delete(n),s}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return o.value}function gw(r){return r===null?null:Dp(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}async function ex(r,t){let e=new Map;JT(r,t,e);for(let o of Array.from(e.keys())){let s=e.get(o);if(y.isPromise(s)){let a=await s;e.set(o,a)}}return JT(r,t,e)}function Dp(r){let t=!1;if($().get("IS_BROWSER"))t=r instanceof TextDecoder;else{let{StringDecoder:e}=hw();t=r instanceof e}return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof ze)&&!(r instanceof Promise)&&!t)}function xL(r){return r==null||Bte(r)||Array.isArray(r)||typeof r=="object"&&r instanceof ze||y.isTypedArray(r)}function Bte(r){return r===null||typeof r!="object"&&typeof r!="function"}function IL(r){return bL(r,Ote)}function Ote(r){return r instanceof ze?{value:r.clone(),recurse:!1}:Dp(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var Wd=class{constructor(t){this.capacity=t;this.begin=0;this.end=0;if(t==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(let e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}};var bw=class extends Wd{constructor(){super(bw.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){let t=this.capacity*2,e=new Array(t),n=this.length();for(let o=0;o<n;o++)e[o]=this.get(this.wrap(this.begin+o));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},Hh=bw;Hh.INITIAL_CAPACITY=32;function Rw(r){return new yw(r)}function qh(r){return new Tw(r)}function kL(r,t){return new rx(r,t)}function SL(r,t=Fw.FAIL){return new Nw(r,t)}var or=class{async toArray(){let t=[],e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){let t=this.prefetch(100),e=[],n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new Aw(this,t)}filter(t){return new Sw(this,t)}map(t){return new vw(this,t)}mapAsync(t){return new tx(this,t)}serialMapAsync(t){return new tx(this,t).serial()}flatmap(t){return new ww(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(e=>e===!0)}rowMajorBatch(t,e=!0){return new kw(this,t,e)}columnMajorBatch(t,e=!0,n=gw){return this.rowMajorBatch(t,e).map(s=>yL(s,n))}concatenate(t,e){return new rx(Rw([this,t]),e)}take(t){return t<0||t==null?this:new Cw(this,t)}skip(t){return t<0||t==null?this:new Iw(this,t)}prefetch(t){return new nx(this,t)}shuffle(t,e){return new Dw(this,t,e)}serial(){return new xw(this)}},yw=class extends or{constructor(e){super();this.items=e;this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:IL(e),done:!1}}},Tw=class extends or{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},xw=class extends or{constructor(e){super();this.upstream=e;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},Iw=class extends or{constructor(e,n){super();this.upstream=e;this.maxCount=n;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Ne(e.value)}return this.upstream.next()}},Cw=class extends or{constructor(e,n){super();this.upstream=e;this.maxCount=n;this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},kw=class extends or{constructor(e,n,o=!0){super();this.upstream=e;this.batchSize=n;this.enableSmallLastBatch=o;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let n=await this.upstream.next();if(n.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(n.value)}return{value:e,done:!1}}},Sw=class extends or{constructor(e,n){super();this.upstream=e;this.predicate=n;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Ne(e.value)}}},vw=class extends or{constructor(e,n){super();this.upstream=e;this.transform=n}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let n=Fs.getTensorsInContainer(e.value),o=this.transform(e.value),s=Fs.getTensorsInContainer(o);for(let a of n)Fs.isTensorInList(a,s)||a.dispose();return{value:o,done:!1}}},Aw=class extends or{constructor(e,n){super();this.upstream=e;this.handler=n;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},tx=class extends or{constructor(e,n){super();this.upstream=e;this.transform=n}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let n=Fs.getTensorsInContainer(e.value),o=await this.transform(e.value),s=Fs.getTensorsInContainer(o);for(let a of n)Fs.isTensorInList(a,s)||a.dispose();return{value:o,done:!1}}},Fl=class extends or{constructor(){super();this.outputQueue=new Hh,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},ww=class extends Fl{constructor(e,n){super();this.upstream=e;this.transform=n}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let n=Fs.getTensorsInContainer(e.value),o=this.transform(e.value),s=Fs.getTensorsInContainer(o);this.outputQueue.pushAll(o);for(let a of n)Fs.isTensorInList(a,s)||a.dispose();return!0}},rx=class extends or{constructor(e,n){super();this.baseErrorHandler=n;this.lastRead=null;this.iterator=null;this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let o=await this.moreIterators.next();if(o.done)return{value:null,done:!0};this.iterator=o.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let n=await this.iterator.next();return n.done?(this.iterator=null,this.readFromChain(e)):n}},Fw=(n=>(n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST",n))(Fw||{}),Nw=class extends or{constructor(e,n=0){super();this.iterators=e;this.mismatchMode=n;this.count=0;this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let n=0,o=0;function s(i){return i instanceof or?{value:i.next().then(p=>(n++,p.done&&o++,p.value)),recurse:!1}:{value:null,recurse:!0}}let a=await ex(this.iterators,s);if(n===o)return{value:null,done:!0};if(o>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},nx=class extends or{constructor(e,n){super();this.upstream=e;this.bufferSize=n;this.buffer=new Wd(n)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},Dw=class extends nx{constructor(e,n,o){super(e,n);this.upstream=e;this.windowSize=n;this.upstreamExhausted=!1;this.random=CL.alea(o||y.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),n=await this.buffer.shuffleExcise(e);if(n.done)this.upstreamExhausted=!0;else return this.refill(),n}return{value:null,done:!0}}};var Ya=class{constructor(){this.size=null}batch(t,e=!0){let n=this;y.assert(t>0,()=>`batchSize needs to be positive, but it is
      ${t}`);let o;return this.size===1/0||this.size==null?o=this.size:e?o=Math.ceil(this.size/t):o=Math.floor(this.size/t),Ln(async()=>(await n.iterator()).columnMajorBatch(t,e,zte),o)}concatenate(t){let e=this,n;return this.size===1/0||t.size===1/0?n=1/0:this.size!=null&&t.size!=null?n=this.size+t.size:n=null,Ln(async()=>(await e.iterator()).concatenate(await t.iterator()),n)}filter(t){let e=this,n;return this.size===1/0?n=1/0:n=null,Ln(async()=>(await e.iterator()).filter(o=>z(()=>t(o))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){let e=this;return Ln(async()=>(await e.iterator()).map(n=>z(()=>t(n))),this.size)}mapAsync(t){let e=this;return Ln(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(t==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let e=this;return Ln(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){let e=this,n;return this.size!=null&&t>0?n=this.size*t:t===0?n=0:this.size!=null&&(t===void 0||t<0)?n=1/0:n=null,Ln(async()=>{let o=qh(async()=>({value:await e.iterator(),done:!1}));return kL(o.take(t))},n)}skip(t){let e=this,n;return this.size!=null&&t>=0&&this.size>=t?n=this.size-t:this.size!=null&&(this.size<t||t===void 0||t<0)?n=0:n=null,Ln(async()=>(await e.iterator()).skip(t),n)}shuffle(t,e,n=!0){if(t==null||t<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let o=this,s=vL.alea(e||y.now().toString());return Ln(async()=>{let a=s.int32();return n&&(a+=s.int32()),(await o.iterator()).shuffle(t,a.toString())},this.size)}take(t){let e=this,n;return this.size!=null&&this.size>t?n=t:this.size!=null&&this.size<=t?n=this.size:n=null,Ln(async()=>(await e.iterator()).take(t),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Ya.MAX_BUFFER_SIZE=1e4;function Ln(r,t=null){return new class extends Ya{constructor(){super(...arguments);this.size=t}async iterator(){return r()}}}function AL(r){return Ln(async()=>Rw(r),r.length)}function wL(r){if(!Dp(r))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(r))for(let e=0;e<r.length;e++)t=t==null?r[e].size:Math.min(t,r[e].size);else if(r instanceof Object)for(let e in r)t=t==null?r[e].size:Math.min(t,r[e].size);return Ln(async()=>{let e=await ex(r,n=>{if(n instanceof Ya)return{value:n.iterator(),recurse:!1};if(Dp(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return SL(e,1)},t)}function zte(r){if(r===null)return null;let t=r[0];return xL(t)?{value:Gte(r),recurse:!1}:{value:null,recurse:!0}}function Gte(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof ze?br(r):vr(r)}var Kd=class extends Ya{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(s=>(s.endsWith("\r")&&(s=s.slice(0,-1)),s))}};var ox='"',jh=Symbol("out"),NL=Symbol("field"),sx=Symbol("quote"),Pw=Symbol("quoteafterquote"),DL=Symbol("quoteinquote"),Vd=class extends Ya{constructor(e,n){super();this.input=e;this.hasHeader=!0;this.fullColumnNames=null;this.columnNamesValidated=!1;this.columnConfigs=null;this.configuredColumnsOnly=!1;this.delimiter=",";this.delimWhitespace=!1;this.base=new Kd(e),n||(n={}),this.hasHeader=n.hasHeader!==!1,this.fullColumnNames=n.columnNames,this.columnConfigs=n.columnConfigs,this.configuredColumnsOnly=n.configuredColumnsOnly,n.delimWhitespace?(y.assert(n.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=n.delimiter?n.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&y.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let n=this.fullColumnNames.reduce((s,a)=>(s[a]=s[a]+1||1,s),{}),o=Object.keys(n).filter(s=>n[s]>1);if(y.assert(o.length===0,()=>"Duplicate column names found: "+o.toString()),this.columnConfigs){for(let s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let n=await(await this.base.iterator()).next();if(n.done)throw new Error("No data was found for CSV parsing.");let o=n.value;return this.parseRow(o,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(n=>this.makeDataElement(n))}makeDataElement(e){let n=this.parseRow(e),o={},s={};for(let a=0;a<this.fullColumnNames.length;a++){let i=this.fullColumnNames[a],u=this.columnConfigs?this.columnConfigs[i]:null;if(!(this.configuredColumnsOnly&&!u)){let p=n[a],l=null;if(p==="")if(u&&u.default!==void 0)l=u.default;else{if(u&&(u.required||u.isLabel))throw new Error(`Required column ${i} is empty in this line: ${e}`);l=void 0}else{let m=Number(p);if(isNaN(m))u&&u.dtype==="bool"?l=this.getBoolean(p):l=p;else if(!u||!u.dtype)l=m;else switch(u.dtype){case"float32":l=m;break;case"int32":l=Math.floor(m);break;case"bool":l=this.getBoolean(p);break;default:l=m}}u&&u.isLabel?s[i]=l:o[i]=l}}return Object.keys(s).length===0?o:{xs:o,ys:s}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,n=!0){let o=[],s=0,a=e.length,i=jh;for(let u=0;u<a;u++)switch(i){case jh:switch(e.charAt(u)){case ox:s=u+1,i=sx;break;case this.delimiter:if(s=u+1,this.delimiter===" "&&this.delimWhitespace)break;o.push(""),i=jh;break;default:i=NL,s=u;break}break;case NL:switch(e.charAt(u)){case this.delimiter:o.push(e.substring(s,u)),i=jh,s=u+1;break;default:}break;case sx:switch(e.charAt(u)){case ox:i=Pw;break;default:}break;case Pw:switch(e.charAt(u)){case this.delimiter:o.push(e.substring(s,u-1)),i=jh,s=u+1;break;case ox:i=sx;break;default:i=DL;break}break;case DL:switch(e.charAt(u)){case ox:i=sx;break;default:}break;default:}if(i===Pw?o.push(e.substring(s,a-1)):o.push(e.substring(s)),n&&o.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${o}`);return o}};var Hd=class extends or{constructor(e){super();this.microphoneConfig=e;this.isClosed=!1;this.fftSize=e.fftSize||1024;let n=Math.log2(this.fftSize);if(this.fftSize<0||n<4||n>14||!Number.isInteger(n))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!$().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let n=new Hd(e);return await n.start(),n}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(o){throw new Error(`Error thrown while initializing video stream: ${o.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let n=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,n.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,n,o=await this.getAudioData();if(this.includeSpectrogram){let s=this.flattenQueue(o.freqDataQueue);e=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let s=this.flattenQueue(o.timeDataQueue);n=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:n},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],n=[],o=0;return new Promise(s=>{let a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:n}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),n.push(this.timeData.slice())),++o===this.numFrames&&(clearInterval(a),s({freqDataQueue:e,timeDataQueue:n}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let n=e[0].length,o=new Float32Array(e.length*n);return e.forEach((s,a)=>o.set(s,a*n)),o}getTensorFromAudioDataArray(e,n){let o=new Float32Array(y.sizeFromShape(n));return o.set(e,o.length-e.length),vr(o,n)}};var qd=class extends or{constructor(e,n){super();this.webcamVideoElement=e;this.webcamConfig=n;this.isClosed=!0;this.resize=!1;if(this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Kt([0],"int32"),this.webcamConfig.centerCrop){let o=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,a=(1-o)/2,i=(1-s)/2,u=a+o,p=s+i;this.cropBox=Ba([i,a,p,u],[1,4])}else this.cropBox=Ba([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,n={}){if(!$().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!n.resizeWidth||!n.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=n.resizeWidth,e.height=n.resizeHeight}let o=new qd(e,n);return await o.start(),o}async start(){this.webcamConfig.facingMode&&y.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=wb.fromPixels(this.webcamVideoElement)}catch(n){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(n)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(n){throw new Error(`Error thrown cropping the video: ${n.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return z(()=>{let n=Lr(te(e,"float32"),0),o;o=hp.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let s=o.shape;return L(o,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(n=>n.stop());try{this.webcamVideoElement.srcObject=null}catch(n){console.log(n),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}};var jd=class{};var Xh=class extends or{split(t){return new Mw(this,t)}},Mw=class extends Xh{constructor(e,n){super();this.upstream=e;this.impl=new Ew(e,n)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},Ew=class extends Fl{constructor(e,n){super();this.upstream=e;this.separator=n;this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let n=e.value.split(this.separator);n[0]=this.carryover+n[0];for(let o of n.slice(0,-1))this.outputQueue.push(o);return this.carryover=n[n.length-1],!0}};var ax=class extends or{decodeUTF8(){return new Lw(this)}},Lw=class extends Xh{constructor(e){super();this.upstream=e;this.impl=new _w(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},_w=class extends Fl{constructor(e){super();this.upstream=e;if($().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:n}=hw();this.decoder=new n("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),n;if(e.done)return!1;n=e.value;let o;return $().get("IS_BROWSER")?o=this.decoder.decode(n,{stream:!0}):o=this.decoder.write(Buffer.from(n.buffer)),this.outputQueue.push(o),!0}};var Xd=class extends ax{constructor(e,n={}){super();this.file=e;this.options=n;y.assert(e instanceof Uint8Array||($().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=n.offset||0,this.chunkSize=n.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((n,o)=>{let s=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)n(new Uint8Array(this.file.slice(this.offset,s)));else{let a=new FileReader;a.onload=u=>{let p=a.result;if(p instanceof ArrayBuffer&&(p=new Uint8Array(p)),!(p instanceof Uint8Array))return o(new TypeError("FileReader returned unknown type."));n(p)},a.onabort=u=>o(new Error("Aborted")),a.onerror=u=>o(new Error(u.type));let i=this.file.slice(this.offset,s);a.readAsArrayBuffer(i)}this.offset=s}),done:!1}}};async function RL(r,t={},e){let n,o;typeof r=="string"?n=r:(n=r.url,o=Ute(r));let s=await(e||y.fetch)(n,o);if(s.ok){let a=new Uint8Array(await s.arrayBuffer());return new Xd(a,t)}else throw new Error(s.statusText)}var Ute=r=>({method:r.method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:r.referrer,integrity:r.integrity});function ix(r){return typeof r=="string"&&r.slice(0,7)==="file://"}var Yd=class extends jd{constructor(e,n={}){super();this.input=e;this.options=n}async iterator(){if(ix(this.input)&&$().get("IS_NODE")){let e=Yh();this.input=e.readFileSync(this.input.slice(7))}return new Xd(this.input,this.options)}};var Zd=class extends jd{constructor(e,n={}){super();this.url=e;this.fileOptions=n}async iterator(){return ix(this.url)?new Yd(this.url,this.fileOptions).iterator():RL(this.url,this.fileOptions)}};function FL(r,t={}){return new Vd(new Zd(r),t)}function PL(r){let t=qh(r);return Ln(async()=>t)}function ML(r){return Ln(async()=>{let t=await r();return qh(()=>t.next())})}async function EL(r,t){return qd.create(r,t)}async function LL(r){return Hd.create(r)}var _L="0.0.0";function J(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&y.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var Wte=yr.whereImpl,$w=class extends ao{constructor(){super();this.blockSize=48;this.firstUse=!0;this.data=new oa(this,Rn())}nextDataId(){return $w.nextDataId++}write(e,n,o){this.firstUse&&(this.firstUse=!1,$().get("IS_NODE")&&C.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:o,refCount:1}),s}makeTensorInfo(e,n,o){let s;if(n==="string"&&o!=null&&o.length>0&&y.isString(o[0])){let a=o.map(i=>y.encodeString(i));s=this.write(a,e,n)}else s=this.write(o,e,n);return{dataId:s,shape:e,dtype:n}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let n=this.data.get(e);n.refCount++}decRef(e){if(this.data.has(e)){let n=this.data.get(e);n.refCount--}}move(e,n,o,s,a){this.data.set(e,{values:n,dtype:s,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:n,complexTensorInfos:o}=this.data.get(e);if(n==="complex64"){let s=this.readSync(o.real.dataId),a=this.readSync(o.imag.dataId);return C.mergeRealAndImagArrays(s,a)}return this.data.get(e).values}bufferSync(e){let n=this.readSync(e.dataId);if(e.dtype==="string")try{let o=n.map(s=>y.decodeString(s));return Te(e.shape,e.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Te(e.shape,e.dtype,n)}makeOutput(e,n,o){return Rn().makeTensorFromTensorInfo(this.makeTensorInfo(n,o,e),this)}disposeData(e,n=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!n&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:o}=this.data.get(e);o!=null&&(this.disposeData(o.real.dataId,!0),this.disposeData(o.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let n=y.now();return e(),{kernelMs:y.now()-n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){J([e],"where");let n=this.readSync(e.dataId);return Wte(e.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},Qd=$w;Qd.nextDataId=0;var sf={};We(sf,{addImpl:()=>zw,bincountImpl:()=>tf,bincountReduceImpl:()=>ux,castImpl:()=>Ow,ceilImpl:()=>Gw,concatImpl:()=>Pl,equalImpl:()=>Uw,expImpl:()=>Kw,expm1Impl:()=>Hw,floorImpl:()=>qw,gatherNdImpl:()=>px,gatherV2Impl:()=>lx,greaterEqualImpl:()=>Xw,greaterImpl:()=>jw,lessEqualImpl:()=>Zw,lessImpl:()=>Yw,linSpaceImpl:()=>mx,logImpl:()=>Qw,maxImpl:()=>cx,maximumImpl:()=>Jw,minimumImpl:()=>eN,multiplyImpl:()=>Zh,negImpl:()=>tN,notEqualImpl:()=>rN,prodImpl:()=>nN,raggedGatherImpl:()=>dx,raggedTensorToTensorImpl:()=>fx,rangeImpl:()=>El,rsqrtImpl:()=>oN,scatterImpl:()=>Tu,sigmoidImpl:()=>m_,simpleAbsImpl:()=>Bw,sliceImpl:()=>Ll,sparseFillEmptyRowsImpl:()=>hx,sparseReshapeImpl:()=>gx,sparseSegmentReductionImpl:()=>of,sqrtImpl:()=>f_,squaredDifferenceImpl:()=>aN,stridedSliceImpl:()=>bx,stringNGramsImpl:()=>_l,stringSplitImpl:()=>$l,stringToHashBucketFastImpl:()=>Bl,subImpl:()=>uN,tileImpl:()=>yx,topKImpl:()=>Tx,transposeImpl:()=>rf,uniqueImpl:()=>xx});function Bw(r){let t=new Float32Array(r.length);for(let e=0;e<r.length;++e)t[e]=Math.abs(r[e]);return t}var Kte=r=>{let{x:t}=r.inputs,e=r.backend;J(t,"abs");let n=new Float32Array(y.sizeFromShape(t.shape)),o=e.data.get(t.dataId).values;return n=Bw(o),e.makeOutput(n,t.shape,t.dtype)},BL={kernelName:ls,backendName:"cpu",kernelFunc:Kte};function rt(r){return(t,e,n,o,s)=>{let a=C.assertAndGetBroadcastShape(t,e),i=a.length,u=y.computeStrides(a),p=y.sizeFromShape(a),l=y.getTypedArrayFromDType(s,p),m=t.length,c=e.length,d=y.computeStrides(t),f=y.computeStrides(e),h=C.getBroadcastDims(t,a),g=C.getBroadcastDims(e,a);if(h.length+g.length===0)for(let b=0;b<l.length;++b)l[b]=r(n[b%n.length],o[b%o.length]);else for(let b=0;b<l.length;++b){let T=y.indexToLoc(b,i,u),x=T.slice(-m);h.forEach(R=>x[R]=0);let I=y.locToIndex(x,m,d),k=T.slice(-c);g.forEach(R=>k[R]=0);let w=y.locToIndex(k,c,f);l[b]=r(n[I],o[w])}return[l,a]}}function Sr(r){let{inputs:t,backend:e}=r,{real:n,imag:o}=t,s=e.data.get(n.dataId).values,a=e.data.get(o.dataId).values,i=e.makeTensorInfo(n.shape,"complex64"),u=e.data.get(i.dataId);return u.complexTensorInfos={real:e.makeTensorInfo(n.shape,"float32",s),imag:e.makeTensorInfo(o.shape,"float32",a)},i}var OL={kernelName:Lu,backendName:"cpu",kernelFunc:Sr};function Jd(r,t,e="float32"){if(e==="complex64"){let o=Jd(r,t,"float32"),s=Jd(r,t,"float32");return Sr({inputs:{real:o,imag:s},backend:r})}let n=y.makeZerosTypedArray(y.sizeFromShape(t),e);return r.makeTensorInfo(t,e,n)}function Xr(r){let{inputs:t,backend:e}=r,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var zL={kernelName:Un,backendName:"cpu",kernelFunc:Xr};function qs(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.data.get(n.dataId).complexTensorInfos.real,s=e.data.get(o.dataId).values;return e.makeTensorInfo(o.shape,o.dtype,s)}var GL={kernelName:Wu,backendName:"cpu",kernelFunc:qs};function Ow(r,t,e,n){if(n==="int32"){let o=Int32Array.from(r);return[t,"int32",o]}if(n==="bool"){let o=y.toTypedArray([0],e),[s,a]=rt((i,u)=>i!==u?1:0)(t,[],r,o,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${e} to ${n}`)}function js(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return Xr({inputs:{x:o},backend:e});let l=Jd(e,o.shape,o.dtype),m=js({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),c=Sr({inputs:{real:m,imag:l},backend:e});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(m),c}if(o.dtype==="complex64"){let l=qs({inputs:{input:o},backend:e}),m=js({inputs:{x:l},backend:e,attrs:{dtype:s}});return e.disposeIntermediateTensorInfo(l),m}if(!y.hasEncodingLoss(o.dtype,s)){let l=Xr({inputs:{x:o},backend:e});return{dataId:l.dataId,shape:l.shape,dtype:s}}let a=e.data.get(o.dataId).values,[i,u,p]=Ow(a,o.shape,o.dtype,s);return e.makeTensorInfo(i,u,p)}var UL={kernelName:zn,backendName:"cpu",kernelFunc:js};function it(r,t,e,n){return e==null?({inputs:o,backend:s})=>{let{a,b:i}=o,u=s;J([a,i],r);let p=u.data.get(a.dataId).values,l=u.data.get(i.dataId).values,m=a.dtype==="string"?C.fromUint8ToStringArray(p):p,c=a.dtype==="string"?C.fromUint8ToStringArray(l):l,d=n||a.dtype,[f,h]=t(a.shape,i.shape,m,c,d);return u.makeTensorInfo(h,d,f)}:({inputs:o,backend:s})=>{let{a,b:i}=o,u=s;if(a.dtype==="complex64"||i.dtype==="complex64"){let p=js({inputs:{x:a},backend:u,attrs:{dtype:"complex64"}}),l=u.data.get(p.dataId),m=l.complexTensorInfos.real,c=l.complexTensorInfos.imag,d=u.data.get(m.dataId).values,f=u.data.get(c.dataId).values,h=js({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(h.dataId),b=g.complexTensorInfos.real,T=g.complexTensorInfos.imag,x=u.data.get(b.dataId).values,I=u.data.get(T.dataId).values,[k,w,R]=e(a.shape,i.shape,d,f,x,I),F=u.makeTensorInfo(R,"float32",k),P=u.makeTensorInfo(R,"float32",w),E=Sr({inputs:{real:F,imag:P},backend:u});return u.disposeIntermediateTensorInfo(p),u.disposeIntermediateTensorInfo(h),u.disposeIntermediateTensorInfo(F),u.disposeIntermediateTensorInfo(P),E}else{let p=u.data.get(a.dataId).values,l=u.data.get(i.dataId).values,m=n||a.dtype,[c,d]=t(a.shape,i.shape,p,l,m);return u.makeTensorInfo(d,m,c)}}}function ef(r){return(t,e,n,o,s,a)=>{let i=C.assertAndGetBroadcastShape(t,e),u=y.sizeFromShape(i),p=i.length,l=y.computeStrides(i),m=y.getTypedArrayFromDType("float32",u),c=y.getTypedArrayFromDType("float32",u),d=C.getBroadcastDims(t,i),f=C.getBroadcastDims(e,i),h=C.mergeRealAndImagArrays(n,o),g=C.mergeRealAndImagArrays(s,a),b=t.length,T=y.computeStrides(t),x=e.length,I=y.computeStrides(e);if(d.length+f.length===0)for(let k=0;k<m.length;k++){let w=k%h.length,R=k%g.length,F=r(h[w*2],h[w*2+1],g[R*2],g[R*2+1]);m[k]=F.real,c[k]=F.imag}else for(let k=0;k<m.length;k++){let w=y.indexToLoc(k,p,l),R=w.slice(-b);d.forEach(G=>R[G]=0);let F=y.locToIndex(R,b,T),P=w.slice(-x);f.forEach(G=>P[G]=0);let E=y.locToIndex(P,x,I),B=r(h[F*2],h[F*2+1],g[E*2],g[E*2+1]);m[k]=B.real,c[k]=B.imag}return[m,c,i]}}var zw=rt((r,t)=>r+t),Vte=ef((r,t,e,n)=>({real:r+e,imag:t+n})),ki=it(vn,zw,Vte),WL={kernelName:vn,backendName:"cpu",kernelFunc:ki};function tf(r,t,e,n,o){let s=y.sizeFromShape(n),a=y.makeZerosTypedArray(o,e);for(let i=0;i<r.length;i++){let u=r[i];if(u<0)throw new Error("Input x must be non-negative!");u>=o||(s>0?a[u]+=t[i]:a[u]+=1)}return a}function ux(r,t,e,n=!1){let o=r.shape[0],s=r.shape[1],a=Te([o,e],t.dtype);for(let i=0;i<o;i++)for(let u=0;u<s;u++){let p=r.get(i,u);if(p<0)throw new Error("Input x must be non-negative!");p>=e||(n?a.set(1,i,p):t.size>0?a.set(a.get(i,p)+t.get(i,u),i,p):a.set(a.get(i,p)+1,i,p))}return a}function Cn(r){return(t,e,n)=>{let o=y.getTypedArrayFromDType(e,t.length);for(let s=0;s<t.length;++s)o[s]=r(t[s],n);return o}}function Re(r,t,e){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(J(a,r),a.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,u=i.data.get(a.dataId).values,p=y.sizeFromShape(a.shape),l=e||a.dtype,m=y.getArrayFromDType(l,p);for(let c=0;c<p;++c)m[c]=t(u[c],o);return i.makeTensorInfo(a.shape,l,m)}}function Xs(r,t,e){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(J(a,r),a.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,u=i.data.get(a.dataId).values,p=e||a.dtype,l=t(u,p,o);return i.makeTensorInfo(a.shape,p,l)}}var Gw=Cn(r=>Math.ceil(r)),Hte=Xs(co,Gw),KL={kernelName:co,backendName:"cpu",kernelFunc:Hte};function Pl(r,t,e,n){let o=y.getArrayFromDType(e,y.sizeFromShape(t));if(n&&e!=="string"){let s=0;r.forEach(a=>{let i=y.sizeFromShape(a.shape);o.set(a.vals,s),s+=i})}else{let s=0;r.forEach(a=>{let i=e==="string"?C.fromUint8ToStringArray(a.vals):a.vals,u=0;for(let p=0;p<a.shape[0];++p){let l=p*t[1]+s;for(let m=0;m<a.shape[1];++m)o[l+m]=i[u++]}s+=a.shape[1]})}return o}var Uw=rt((r,t)=>r===t?1:0),Ww=it(ma,Uw,null,"bool"),VL={kernelName:ma,backendName:"cpu",kernelFunc:Ww};var Kw=Cn(r=>Math.exp(r)),Vw=Xs(Co,Kw,"float32"),HL={kernelName:Co,backendName:"cpu",kernelFunc:Vw};var Hw=Cn(r=>Math.expm1(r)),qte=Xs(ca,Hw),qL={kernelName:ca,backendName:"cpu",kernelFunc:qte};var qw=Cn(r=>Math.floor(r)),jte=Xs(ko,qw),jL={kernelName:ko,backendName:"cpu",kernelFunc:jte};function px(r,t,e,n,o,s,a,i,u){let p=Te([n,s],e);for(let l=0;l<n;l++){let m=[],c=0;for(let d=0;d<o;d++){let f=r[l*o+d];c+=f*a[d],m.push(f)}if(c<0||c>=u/s)throw new Error(`Invalid indices: ${m} does not index into ${i}`);for(let d=0;d<s;d++)p.values[l*s+d]=t.get(...t.indexToLoc(c*s+d))}return p}function lx(r,t,e){let n=Te(e,r.dtype);for(let o=0;o<n.size;++o){let a=n.indexToLoc(o).slice(),i=a[0],u=a[2],p=t.locToIndex([i,u]);a[2]=t.values[p];let l=r.locToIndex(a);0<=l&&l<r.values.length&&(n.values[o]=r.values[l])}return n}var jw=rt((r,t)=>r>t?1:0),Xte=it(ha,jw,null,"bool"),XL={kernelName:ha,backendName:"cpu",kernelFunc:Xte};var Xw=rt((r,t)=>r>=t?1:0),Yte=it(Ao,Xw,null,"bool"),YL={kernelName:Ao,backendName:"cpu",kernelFunc:Yte};var Yw=rt((r,t)=>r<t?1:0),Zte=it(ba,Yw,null,"bool"),ZL={kernelName:ba,backendName:"cpu",kernelFunc:Zte};var Zw=rt((r,t)=>r<=t?1:0),Qte=it(ya,Zw,null,"bool"),QL={kernelName:ya,backendName:"cpu",kernelFunc:Qte};function mx(r,t,e){let n=(t-r)/(e-1),o=y.makeZerosTypedArray(e,"float32");o[0]=r;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}var Qw=Cn(r=>Math.log(r)),Jte=Xs(No,Qw),JL={kernelName:No,backendName:"cpu",kernelFunc:Jte};function cx(r,t,e,n){let o=y.getTypedArrayFromDType(n,y.sizeFromShape(e));for(let s=0;s<o.length;++s){let a=s*t,i=r[a];for(let u=0;u<t;++u){let p=r[a+u];(Number.isNaN(p)||p>i)&&(i=p)}o[s]=i}return o}var Jw=rt((r,t)=>Math.max(r,t)),ere=it(Ro,Jw),e_={kernelName:Ro,backendName:"cpu",kernelFunc:ere};var eN=rt((r,t)=>Math.min(r,t)),tre=it(Eo,eN),t_={kernelName:Eo,backendName:"cpu",kernelFunc:tre};var Zh=rt((r,t)=>r*t),rre=ef((r,t,e,n)=>({real:r*e-t*n,imag:r*n+t*e})),Ml=it(_o,Zh,rre),r_={kernelName:_o,backendName:"cpu",kernelFunc:Ml};function tN(r,t,e){let n=y.createScalarValue(-1,e);return Zh([],t,n,r,e)}function nre(r){let{inputs:t,backend:e}=r,{x:n}=t;J(n,"neg");let o=e.data.get(n.dataId).values,[s,a]=tN(o,n.shape,n.dtype);return e.makeTensorInfo(a,n.dtype,s)}var n_={kernelName:hs,backendName:"cpu",kernelFunc:nre};var rN=rt((r,t)=>r!==t?1:0),ore=it(Ia,rN,null,"bool"),o_={kernelName:Ia,backendName:"cpu",kernelFunc:ore};function rf(r,t,e,n,o){let s=t.length,a=y.sizeFromShape(t),i=y.computeStrides(t),u=y.computeStrides(o),p=y.getTypedArrayFromDType(e,y.sizeFromShape(o));for(let l=0;l<a;++l){let m=y.indexToLoc(l,s,i),c=new Array(m.length);for(let f=0;f<c.length;f++)c[f]=m[n[f]];let d=y.locToIndex(c,s,u);p[d]=r[l]}return p}function qt(r){let{inputs:t,attrs:e,backend:n}=r,{x:o}=t,{perm:s}=e;J(o,"transpose");let a=o.shape.length,i=new Array(a);for(let m=0;m<i.length;m++)i[m]=o.shape[s[m]];let u=n.data.get(o.dataId).values,p=rf(u,o.shape,o.dtype,s,i);return{dataId:n.write(p,i,o.dtype),shape:i,dtype:o.dtype}}var s_={kernelName:wn,backendName:"cpu",kernelFunc:qt};function nN(r,t,e,n){let[o,s]=C.computeOutAndReduceShapes(r,n),a=Mt(t,"int32"),i=y.makeZerosTypedArray(y.sizeFromShape(o),a),u=y.sizeFromShape(s);for(let p=0;p<i.length;++p){let l=p*u,m=1;for(let c=0;c<u;++c)m*=e[l+c];i[p]=m}return{outVals:i,outShape:o,outDtype:a}}function sre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;J(o,"prod");let i=o.shape.length,u=y.parseAxisParam(s,o.shape),p=C.getAxesPermutation(u,i),l=u,m=o,c=[];p!=null&&(m=qt({inputs:{x:o},backend:e,attrs:{perm:p}}),c.push(m),l=C.getInnerMostAxes(l.length,i));let d=e.data.get(m.dataId).values,{outVals:f,outShape:h,outDtype:g}=nN(m.shape,m.dtype,d,l),b=h;return a&&(b=C.expandShapeToKeepDim(h,u)),c.forEach(T=>e.disposeIntermediateTensorInfo(T)),e.makeTensorInfo(b,g,f)}var a_={kernelName:zo,backendName:"cpu",kernelFunc:sre};function are(r,t,e){r.forEach((n,o)=>{if(n<0||n>=e){let s=y.indexToLoc(o,t.length,y.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${n} is not in [0, ${e})`)}})}function ire(r,t){for(let e=0;e<r.length;++e){let n=r[e],o=e===r.length-1?t:r[e+1].length;if(n.length===0)throw new Error("Ragged splits may not be empty");if(n[0]<0)throw new Error("Ragged splits must be non-negative");if(n[n.length-1]>o)throw new Error("Ragged splits must not point past values");for(let s=1;s<n.length;++s)if(n[s-1]>n[s])throw new Error("Ragged splits must be sorted in ascending order")}}function ure(r,t,e,n){let o=[],s=0,a=t.length-1+e.length,i=new Array(a).fill(null).map(()=>[0]);ire(e,n);let u=1;for(let p=0;p<t.length-1;++p){u*=t[p];let l=t[p+1];for(let m=1;m<u+1;++m)i[p].push(m*l)}for(let p=0;p<r.length;++p){let l=r[p],m=r[p]+1;for(let c=0;c<e.length;++c){let d=e[c],f=c+t.length-1;if(f>=0){let h=i[f],g=h[h.length-1]-d[l];for(let b=l;b<m;++b)i[f].push(d[b+1]+g)}l=d[l],m=d[m]}m!==l&&(o.push([l,m]),s+=m-l)}return{outSplits:i,valueSlices:o,numValues:s}}function pre(r){let t=[];for(let e=0;e<r.length;++e){let n=r[e].length,o=y.getArrayFromDType("int32",n);t.push(o),r[e].forEach((s,a)=>o[a]=s)}return t}function i_(r,t){let e=r.slice(0,t);for(;e.length<t;)e.push(1);for(let n=t;n<r.length;n++)e[t-1]*=r[n];return e}function lre(r,t,e,n,o,s){let a=i_(t,2)[1],i=i_(s,2)[1],u=0;for(let p of e)for(let l=p[0];l<p[1];++l){for(let m=0;m<n;++m)o[u*i+m]=r[l*a+m];++u}}function mre(r,t,e,n,o){let s=t.slice();s[0]=o;let a=y.getArrayFromDType(e,y.sizeFromShape(s)),i=r.length,u=i===0?0:i/t[0];return lre(r,t,n,u,a,s),[a,s]}function dx(r,t,e,n,o,s,a,i){if(r.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let u=t[0][0]-1;if(are(s,a,u),n.length===0)throw new Error("params.rank must be nonzero");let p=n[0],{outSplits:l,valueSlices:m,numValues:c}=ure(s,a,r,p),d=pre(l),f=mre(e,n,o,m,c);return[d,f[0],f[1]]}var Ys=C.RowPartitionType,nf=class{constructor(t,e,n,o,s,a,i,u,p,l){this.shape=t;this.shapeShape=e;this.values=n;this.valuesShape=o;this.valuesDType=s;this.defaultValue=a;this.defaultValueShape=i;this.rowPartitionValues=u;this.rowPartitionValuesShapes=p;this.rowPartitionTypes=C.getRowPartitionTypesHelper(l),this.raggedRank=C.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Ys.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Ys.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){let e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Ys.VALUE_ROWIDS:return nf.getMaxWidthValueRowID(e);case Ys.ROW_SPLITS:return nf.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${Ys[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){let e=t.length;if(e===0||e===1)return 0;let n=0;for(let o=0;o<e-1;++o){let s=t[o+1]-t[o];s>n&&(n=s)}return n}static getMaxWidthValueRowID(t){let e=t.length;if(e===0)return 0;let n=0,o=t[0],s=0;for(let a=1;a<e;++a){let i=t[a];i!==o&&(o=i,s=Math.max(a-n,s),n=a)}return Math.max(e-n,s)}tensorShapeFromTensor(t,e,n=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return p_(t,n)}calculateOutputSize(t){let e=this.valuesShape,n=this.defaultValueShape;C.validateDefaultValueShape(n,e);let o=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=C.combineRaggedTensorToTensorShapes(this.raggedRank,o,e);a[0]<0&&(a[0]=t);for(let i=1;i<=this.raggedRank;++i)a[i]<0&&(a[i]=this.getMaxWidth(i));return a}calculateFirstParentOutputIndex(t,e,n){let o=Math.min(t,n),s=[],a=0;for(let i=0;i<o;++i,a+=e)s.push(a);for(let i=o;i<t;++i)s.push(-1);return y.assert(s.length===t,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(t,e,n,o){let s=t.length,a=[];for(let i=0;i<s-1;++i){let u=t[i+1]-t[i],p=Math.min(o,u),l=e[i];l===-1&&(p=0);for(let m=0;m<p;++m)a.push(l),l+=n;for(let m=0;m<u-p;++m)a.push(-1)}if(s>0&&a.length!==t[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(t,e,n,o){let s=t.length,a=[];if(s===0)return[];let i=0,u=t[0];if(u>=e.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${e.length}`);let p=e[u];a.push(p);for(let l=1;l<s;++l){let m=t[l];if(m===u)p>=0&&(++i,i<o?p+=n:p=-1);else{if(i=0,u=m,m>=e.length)throw new Error(`Got nextValueRowId=${m} which is not less than ${e.length}`);p=e[m]}a.push(p)}if(a.length!==t.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(t,e,n,o){let s=this.getRowPartitionTensor(t),a=this.getRowPartitionTypeByDimension(t);switch(a){case Ys.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,e,n,o);case Ys.ROW_SPLITS:if(s.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(s,e,n,o);default:throw new Error(`Unsupported partition type: ${Ys[a]}`)}}getFirstDimensionSize(){let t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let e=this.rowPartitionTypes[0];switch(e){case Ys.FIRST_DIM_SIZE:return t[0];case Ys.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Ys.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Ys[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),n=this.calculateOutputSize(e),o=new Array(this.raggedRank+1);o[o.length-1]=1;for(let u=o.length-2;u>=0;--u)o[u]=o[u+1]*n[u+1];let s=p_(n,!1),a=y.getArrayFromDType(this.valuesDType,y.sizeFromShape(s));if(o[0]*n[0]>0){let u=this.calculateFirstParentOutputIndex(e,o[0],n[0]);for(let p=1;p<=this.raggedRank;++p)u=this.calculateOutputIndex(p-1,u,o[p],n[p]);this.setOutput(this.raggedRank,u,a,s)}return[s,a]}setOutput(t,e,n,o){if(n.length===0)return;let s=this.values,a=n,i=o.slice();i=i.slice(t+1);let u=y.sizeFromShape(i),p=e.length,l=this.defaultValue;if(l.length!==u&&l.length!==1){let f=this.defaultValueShape;z(()=>{let h=L(l,f);l=ip(h,i).dataSync()})}let m=0,c=0,d=0;for(let f=0;f<=p;++f){let h=f<p?e[f]:-1;if(h===d){++d;continue}if(c<d){let g=s.subarray(m*u),b=a.subarray(c*u),T=(d-c)*u;u_(b,g,T)}if(f>=p){let g=n.length;h=Math.floor(g/u)}if(h>d)if(this.defaultValue.length===1)a.subarray(d*u,h*u).fill(this.defaultValue[0]),d=h;else for(;h>d;){let g=a.slice(d*u);u_(g,l,u),++d}h<0?(m=f+1,c=d):(m=f,c=d,d=c+1)}}};function u_(r,t,e){for(let n=0;n<e;n++)r[n]=t[n]}function p_(r,t){let e=[];for(let n of r){if(n<0){if(!t)throw new Error(`Dimension ${n} must be >= 0`);if(n<-1)throw new Error(`Dimension ${n} must be >= -1`);n=-1}e.push(n)}return e}function fx(r,t,e,n,o,s,a,i,u,p){return new nf(r,t,e,n,o,s,a,i,u,p).compute()}function El(r,t,e,n){let o=r===t,s=r<t&&e<0,a=t<r&&e>1;if(o||s||a)return y.makeZerosTypedArray(0,n);let i=Math.abs(Math.ceil((t-r)/e)),u=y.makeZerosTypedArray(i,n);t<r&&e===1&&(e=-1),u[0]=r;for(let p=1;p<u.length;p++)u[p]=u[p-1]+e;return u}var oN=Cn(r=>1/Math.sqrt(r)),cre=Xs(Vo,oN),l_={kernelName:Vo,backendName:"cpu",kernelFunc:cre};function Tu(r,t,e,n,o,s,a,i,u,p){let l=[n/o,o],m=r.values,c=t.values;if(n===0)return Te(e,t.dtype);let d=Te(l,t.dtype);typeof u=="string"||typeof u=="number"?d.values.fill(u):typeof u=="boolean"&&d.values.fill(+u);for(let f=0;f<s;f++){let h=[],g=0;for(let b=0;b<a;b++){let T=m[f*a+b];h.push(T),g+=T*i[b]}if(g<0||g>=n/o)throw new Error(`Invalid indices: ${h} does not index into ${e}`);for(let b=0;b<o;b++)p?d.values[g*o+b]+=c[f*o+b]:d.values[g*o+b]=t.rank===0?c[0]:c[f*o+b]}return d}var m_=Cn(r=>1/(1+Math.exp(-r))),sN=Re(qo,r=>1/(1+Math.exp(-r))),c_={kernelName:qo,backendName:"cpu",kernelFunc:sN};function Ll(r,t,e,n,o){let s=Tt.isSliceContinous(n,t,e),a=y.sizeFromShape(e),i=y.computeStrides(n);if(s){let m=Tt.computeFlatOffset(t,i);return o==="string"?r.slice(m,m+a):r.subarray(m,m+a)}let u=o==="string"?C.fromUint8ToStringArray(r):r,p=Te(n,o,u),l=Te(e,o);for(let m=0;m<l.size;++m){let c=l.indexToLoc(m),d=c.map((f,h)=>f+t[h]);l.set(p.get(...d),...c)}return o==="string"?C.fromStringArrayToUint8(l.values):l.values}function Zs(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,size:a}=n;J(o,"slice");let[i,u]=Tt.parseSliceParams(o,s,a);Tt.assertParamsValid(o,i,u);let p=e.data.get(o.dataId).values,l=Ll(p,i,u,o.shape,o.dtype);return e.makeTensorInfo(u,o.dtype,l)}var d_={kernelName:xs,backendName:"cpu",kernelFunc:Zs};function hx(r,t,e,n,o,s,a){let i=t[0],u=s[0],p=new Array(u),l=new Array(i),m=t[1];if(u===0){if(i!==0)throw new Error(C.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));let g=y.getArrayFromDType(e,0),b=y.getArrayFromDType(o,0);return[g,[0,m],b,p,l]}let c=!0,d=0,f=new Array(u).fill(0);for(let g=0;g<i;++g){let b=r[g*m];if(b<0)throw new Error(C.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,b));if(b>=u)throw new Error(C.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,b,u));++f[b],c=c&&b>=d,d=b}let h=!0;for(let g=0;g<u;++g){let b=f[g]===0;p[g]=b,h=h&&!b,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(h&&c){let g=r,b=n;for(let T=0;T<i;++T)l[T]=T;return[g,[i,m],b,p,l]}else{let g=f[u-1],b=y.getArrayFromDType(e,g*m),T=y.getArrayFromDType(o,g),x=new Array(u).fill(0);for(let I=0;I<i;++I){let k=r[I*m],w=x[k],R=(k===0?0:f[k-1])+w;x[k]++;for(let F=0;F<m;++F)b[R*m+F]=r[I*m+F];T[R]=n[I],l[I]=R}for(let I=0;I<u;++I)if(x[I]===0){let w=I===0?0:f[I-1];b[w*m+0]=I;for(let R=1;R<m;++R)b[w*m+R]=0;T[w]=a}return[b,[g,m],T,p,l]}}function gx(r,t,e,n,o){let s=y.sizeFromShape(n),a=t[0],i=o.length,u=[],p=1,l=-1;for(let g=0;g<i;++g){let b=o[g];if(b===-1){if(l!==-1)throw new Error(C.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(l,g));l=g,u.push(1)}else{if(b<0)throw new Error(C.getSparseReshapeNegativeOutputDimErrorMessage(g,b));p*=b,u.push(b)}}if(l!==-1){if(p<=0)throw new Error(C.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(s/p);if(p*g!==s)throw new Error(C.getSparseReshapeInputOutputMultipleErrorMessage(n,u));u[l]=g}if(y.sizeFromShape(u)!==s)throw new Error(C.getSparseReshapeInputOutputMismatchErrorMessage(n,u));let c=n.length,d=[];if(c>0){d[c-1]=1;for(let g=c-2;g>=0;--g)d[g]=d[g+1]*n[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*u[g+1]}let h=y.getArrayFromDType(e,a*i);for(let g=0;g<a;++g){let b=0;for(let T=0;T<c;++T)b+=r[g*c+T]*d[T];for(let T=0;T<i;++T)h[g*i+T]=Math.trunc(b/f[T]),b%=f[T]}return[h,[a,i],u]}function of(r,t,e,n,o,s=!1,a=0){let i=n.length,u=[t[0],r.length/t[0]],p=u[1],m=i>0?o[i-1]+1:0;if(m<0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let c=t.slice();c[0]=m;let d=c.reduce((x,I)=>x*I,1),f=y.getArrayFromDType(e,d);if(i===0)return m>0&&f.fill(a),[f,c];if(m<=0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=0,g=1,b=0,T=o[h];for(;;){let x=0;if(g<i){if(x=o[g],T===x){++g;continue}if(T>=x)throw new Error(C.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(T<0||T>=m)throw new Error(C.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(T,m));T>b&&f.fill(a,b*p,T*p);for(let I=h;I<g;++I){let k=n[I];if(k<0||k>=u[0])throw new Error(C.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(I,n[I],u[0]));for(let w=0;w<p;w++)f[T*p+w]+=r[k*p+w]}if(s)for(let I=0;I<p;I++)f[T*p+I]/=g-h;if(h=g,++g,b=T+1,T=x,g>i)break}return b<m&&f.fill(a,b*p,m*p),[f,c]}var f_=Cn(r=>Math.sqrt(r)),dre=Re(jo,r=>Math.sqrt(r)),h_={kernelName:jo,backendName:"cpu",kernelFunc:dre};var aN=rt((r,t)=>{let e=r-t;return e*e}),fre=it(Zo,aN),g_={kernelName:Zo,backendName:"cpu",kernelFunc:fre};function bx(r,t,e,n){let o=Te(r,t.dtype);for(let s=0;s<o.size;s++){let a=o.indexToLoc(s),i=new Array(a.length);for(let u=0;u<i.length;u++)i[u]=a[u]*e[u]+n[u];o.set(t.get(...i),...a)}return o}var iN=class{constructor(t,e,n,o,s,a){this.separator=y.encodeString(t),this.nGramWidths=e,this.leftPad=y.encodeString(n),this.rightPad=y.encodeString(o),this.padWidth=s,this.preserveShort=a}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){let n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,o,s,a){for(let i=0;i<s;++i){let u=this.getPadWidth(a),p=Math.max(0,u-i),l=Math.max(0,u-(s-(i+1))),m=a-(p+l),c=e+(p>0?0:i-u),d=0;d+=p*this.leftPad.length;for(let T=0;T<m;++T)d+=t[c+T].length;d+=l*this.rightPad.length,d+=(p+l+m-1)*this.separator.length,n[o+i]=new Uint8Array(d);let h=n[o+i],g=0,b=T=>T.forEach(x=>h[g++]=x);for(let T=0;T<p;++T)b(this.leftPad),b(this.separator);for(let T=0;T<m-1;++T)b(t[c+T]),b(this.separator);if(m>0){b(t[c+m-1]);for(let T=0;T<l;++T)b(this.separator),b(this.rightPad)}else{for(let T=0;T<l-1;++T)b(this.rightPad),b(this.separator);b(this.rightPad)}}}compute(t,e){let n=t.length,o=e.length;if(o>0){let u=e[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let p=1;p<o;++p){let l=e[p]>=u;if(l=l&&e[p]<=n,!l)throw new Error(`Invalid split value ${e[p]}, must be in [${u}, ${n}]`);u=e[p]}if(u!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${u}`)}let s=o-1,a=y.getArrayFromDType("int32",o);if(n===0||o===0){let u=new Array(n);for(let p=0;p<=s;++p)a[p]=0;return[u,a]}a[0]=0;for(let u=1;u<=s;++u){let p=e[u]-e[u-1],l=0;this.nGramWidths.forEach(m=>{l+=this.getNumNGrams(p,m)}),this.preserveShort&&p>0&&l===0&&(l=1),a[u]=a[u-1]+l}let i=new Array(a[s]);for(let u=0;u<s;++u){let p=e[u],l=a[u];if(this.nGramWidths.forEach(m=>{let c=e[u+1]-e[u],d=this.getNumNGrams(c,m);this.createNGrams(t,p,i,l,d,m),l+=d}),this.preserveShort&&l===a[u]){let m=e[u+1]-e[u];if(m===0)continue;let c=m+2*this.padWidth,d=1;this.createNGrams(t,p,i,l,d,c)}}return[i,a]}};function _l(r,t,e,n,o,s,a,i){return new iN(e,n,o,s,a,i).compute(r,t)}function hre(r,t,e,n){if(!r.length)return;if(t.length===0){for(let s=0;s<r.length;++s)n.push(r.subarray(s,s+1));return}if(t.length===1){let s=t[0],a=r.indexOf(s);for(;a!==-1;){let i=r.subarray(0,a);(!e||i.length!==0)&&n.push(i),r=r.subarray(a+1),a=r.indexOf(s)}(!e||r.length!==0)&&n.push(r);return}let o=0;for(let s=0;s<r.length+1;s++)if(s===r.length||t.indexOf(r[s])!==-1){let a=r.subarray(o,s);(!e||a.length!==0)&&n.push(a),o=s+1}}function $l(r,t,e){let n=r.length,o=[],s=0,a=0,i=new Array(n);for(let c=0;c<n;++c){let d=o.length;hre(r[c],t,e,o);let f=o.length-d;i[c]=f,s+=f,a=Math.max(a,f)}let u=y.getArrayFromDType("int32",s*2),p=new Array(s),l=[n,a],m=0;for(let c=0;c<n;++c)for(let d=0;d<i[c];++d)u[m*2]=c,u[m*2+1]=d,p[m]=o[m],++m;return[u,p,l]}function Bl(r,t){let e=y.getArrayFromDType("int32",r.length);for(let n=0;n<r.length;++n)e[n]=y.fingerPrint64(r[n]).modulo(t).getLowBitsUnsigned();return e}var uN=rt((r,t)=>r-t),gre=ef((r,t,e,n)=>({real:r-e,imag:t-n})),Qh=it(Qo,uN,gre),b_={kernelName:Qo,backendName:"cpu",kernelFunc:Qh};function yx(r,t){let e=new Array(r.rank);for(let o=0;o<e.length;o++)e[o]=r.shape[o]*t[o];let n=Te(e,r.dtype);for(let o=0;o<n.values.length;++o){let s=n.indexToLoc(o),a=new Array(r.rank);for(let u=0;u<a.length;u++)a[u]=s[u]%r.shape[u];let i=r.locToIndex(a);n.values[o]=r.values[i]}return n}var Jh=(r,t)=>{let e=t.value-r.value;return e===0?r.index-t.index:e};function y_(r,t,e=0,n=r.length-1){for(;n>e;){if(n-e>600){let i=n-e+1,u=t-e+1,p=Math.log(i),l=.5*Math.exp(2*p/3),m=.5*Math.sqrt(p*l*(i-l)/i)*Math.sign(u-i/2),c=Math.max(e,Math.floor(t-u*l/i+m)),d=Math.min(n,Math.floor(t+(i-u)*l/i+m));y_(r,t,c,d)}let o=r[t],s=e,a=n;for(y.swap(r,e,t),Jh(r[n],o)>0&&y.swap(r,e,n);s<a;){for(y.swap(r,s,a),s++,a--;Jh(r[s],o)<0;)s=s+1;for(;Jh(r[a],o)>0;)a=a-1}Jh(r[e],o)===0?y.swap(r,e,a):(a=a+1,y.swap(r,a,n)),a<=t&&(e=a+1),t<=a&&(n=a-1)}}function Tx(r,t,e,n,o){let s=t[t.length-1],[a,i]=[r.length/s,s],u=y.getTypedArrayFromDType(e,a*n),p=y.getTypedArrayFromDType("int32",a*n);for(let m=0;m<a;m++){let c=m*i,d=r.subarray(c,c+i),f=new Array(d.length);d.forEach((T,x)=>f[x]={value:T,index:x}),n<f.length&&(y_(f,n),f=f.slice(0,n)),o&&f.sort(Jh);let h=m*n,g=u.subarray(h,h+n),b=p.subarray(h,h+n);for(let T=0;T<n;T++)g[T]=f[T].value,b[T]=f[T].index}let l=t.slice();return l[l.length-1]=n,[Te(l,e,u),Te(l,"int32",p)]}function xx(r,t,e,n){let o=y.parseAxisParam(t,e)[0],s=[1,e[0],1];for(let f=0;f<o;f++)s[0]*=e[f];s[1]=e[o];for(let f=o+1;f<e.length;f++)s[2]*=e[f];let a={},i=new Int32Array(e[o]),u=new ht(s,n,r),p=[],l=s[0]===1&&s[2]===1;for(let f=0;f<e[o];f++){let h;if(l)h=r[f].toString();else{let g=[];for(let b=0;b<s[0];b++)for(let T=0;T<s[2];T++)g.push(u.get(b,f,T));h=g.join(",")}if(a[h]!==void 0)i[f]=a[h];else{let g=Object.keys(a).length;a[h]=g,i[f]=g,p.push(f)}}let m=s.slice();m[1]=Object.keys(a).length;let c=new ht(m,n);p.forEach((f,h)=>{for(let g=0;g<s[0];g++)for(let b=0;b<s[2];b++)c.set(u.get(g,f,b),g,h,b)});let d=e.slice();return d[o]=m[1],{outputValues:c.values,outputShape:d,indices:i}}var bre="0.0.0";rp("cpu",()=>new Qd,1);var pN=Re(Io,r=>r>=0?r:Math.exp(r)-1),T_={kernelName:Io,backendName:"cpu",kernelFunc:pN};function lN(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{alpha:s}=n;J([o],"leakyRelu");let a=y.sizeFromShape(o.shape),i=e.data.get(o.dataId).values,u=y.getTypedArrayFromDType("float32",a);for(let p=0;p<i.length;p++)u[p]=i[p]<0?s*i[p]:i[p];return e.makeTensorInfo(o.shape,"float32",u)}var x_={kernelName:wo,backendName:"cpu",kernelFunc:lN};var yre=rt((r,t)=>r<0?t*r:r);function mN(r){let{inputs:t,backend:e}=r,{x:n,alpha:o}=t;J([n,o],"prelu");let s=e.data.get(n.dataId).values,a=e.data.get(o.dataId).values,[i,u]=yre(n.shape,o.shape,s,a,"float32");return e.makeTensorInfo(u,"float32",i)}var I_={kernelName:Oo,backendName:"cpu",kernelFunc:mN};var cN=Re(Go,r=>Math.max(0,r)),C_={kernelName:Go,backendName:"cpu",kernelFunc:cN};var dN=Re(Ko,r=>Math.min(Math.max(0,r),6)),k_={kernelName:Ko,backendName:"cpu",kernelFunc:dN};function Ol(r,t,e,n,o){if(e==="linear")return Xr({inputs:{x:t},backend:r});if(e==="relu")return cN({inputs:{x:t},backend:r});if(e==="elu")return pN({inputs:{x:t},backend:r});if(e==="relu6")return dN({inputs:{x:t},backend:r});if(e==="prelu")return mN({inputs:{x:t,alpha:n},backend:r});if(e==="leakyrelu")return lN({inputs:{x:t},backend:r,attrs:{alpha:o}});if(e==="sigmoid")return sN({inputs:{x:t},backend:r});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}function Je(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{shape:s}=n,a=y.sizeFromShape(o.shape),i=y.inferFromImplicitShape(s,a),u=y.sizeFromShape(i);y.assert(a===u,()=>`The new shape (${i}) has ${u} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.incRef(o.dataId);let p=e.data.get(o.dataId);if(p.complexTensorInfos!=null){let l=p.complexTensorInfos.real,m=p.complexTensorInfos.imag;l.shape=i,m.shape=i}return{dataId:o.dataId,shape:i,dtype:o.dtype}}var S_={kernelName:ys,backendName:"cpu",kernelFunc:Je};function fN(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s}=t,{transposeA:a,transposeB:i}=n;J([o,s],"matMul");let u=o.shape.length,p=s.shape.length,l=a?o.shape[u-2]:o.shape[u-1],m=i?s.shape[p-1]:s.shape[p-2],c=a?o.shape[u-1]:o.shape[u-2],d=i?s.shape[p-2]:s.shape[p-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=y.sizeFromShape(f),b=y.sizeFromShape(h),x=Ar.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);y.assert(l===m,()=>`Error in matMul: inner shapes (${l}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let I=a?[g,l,c]:[g,c,l],k=i?[b,d,m]:[b,m,d],w=Je({inputs:{x:o},backend:e,attrs:{shape:I}}),R=Je({inputs:{x:s},backend:e,attrs:{shape:k}}),F=a?w.shape[1]:w.shape[2],P=a?w.shape[2]:w.shape[1],E=i?R.shape[1]:R.shape[2],B=Math.max(g,b),G=e.data.get(w.dataId).values,U=e.data.get(R.dataId).values,V=y.computeStrides(w.shape),W=y.computeStrides(R.shape),[H,j,X]=a?[V[0],1,V[1]]:[V[0],V[1],1],[ee,ne,oe]=i?[1,W[1],W[0]]:[W[1],1,W[0]],se=P*E,re=Te([B,P,E],w.dtype),ae=re.values,ce=e.blockSize;for(let ye=0;ye<B;ye++)for(let ke=0;ke<P;ke+=ce)for(let Fe=0;Fe<E;Fe+=ce)for(let Me=0;Me<F;Me+=ce){let Ve=Math.min(ke+ce,P),Z=Math.min(Fe+ce,E),ft=Math.min(Me+ce,F);for(let Ct=ke;Ct<Ve;Ct++)for(let Ye=Fe;Ye<Z;Ye++){let Pt=0;for(let bt=Me;bt<ft;bt++){let _t=Math.min(ye,g-1)*H,Yt=Math.min(ye,b-1)*oe,$n=G[_t+Ct*j+bt*X],lr=U[bt*ee+Ye*ne+Yt];Pt+=$n*lr}ae[ye*se+(Ct*E+Ye)]+=Pt}}return e.disposeIntermediateTensorInfo(w),e.disposeIntermediateTensorInfo(R),e.makeTensorInfo(x,re.dtype,re.values)}var v_={kernelName:mo,backendName:"cpu",kernelFunc:fN};function Tre(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=t,{transposeA:u,transposeB:p,activation:l,leakyreluAlpha:m}=n,c,d,f,h=[];c=fN({inputs:{a:o,b:s},attrs:{transposeA:u,transposeB:p},backend:e}),a&&(d=ki({inputs:{a:c,b:a},backend:e}),h.push(c),c=d),l&&(f=Ol(e,c,l,i,m),h.push(c),c=f);for(let b of h)e.disposeIntermediateTensorInfo(b);return c}var A_={kernelName:As,backendName:"cpu",kernelFunc:Tre};var xre=Re(Ei,r=>Math.acos(r)),w_={kernelName:Ei,backendName:"cpu",kernelFunc:xre};var Ire=Re(Li,r=>Math.acosh(r)),N_={kernelName:Li,backendName:"cpu",kernelFunc:Ire};function Cre(r){let{inputs:t,backend:e}=r,n=t;J(t,"addN");let o=n.map(i=>e.data.get(i.dataId).values),s=Te(n[0].shape,n[0].dtype),a=s.values;for(let i=0;i<n.length;i++){let u=o[i];for(let p=0;p<a.length;p++)a[p]+=u[p]}return e.makeTensorInfo(s.shape,s.dtype,s.values)}var D_={kernelName:uo,backendName:"cpu",kernelFunc:Cre};function kre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;J(o,"all");let i=y.parseAxisParam(s,o.shape),u=i,p=C.getAxesPermutation(u,o.shape.length),l=o;p!=null&&(l=qt({inputs:{x:o},backend:e,attrs:{perm:p}}),u=C.getInnerMostAxes(u.length,o.shape.length)),C.assertAxesAreInnerMostDims("all",u,l.shape.length);let[m,c]=C.computeOutAndReduceShapes(l.shape,u),d=y.sizeFromShape(c),f=y.makeZerosTypedArray(y.sizeFromShape(m),l.dtype),h=e.data.get(l.dataId).values;for(let b=0;b<f.length;++b){let T=b*d,x=h[T];for(let I=0;I<d;++I){let k=h[T+I];x=x&&k}f[b]=x}p!=null&&e.disposeIntermediateTensorInfo(l);let g=e.makeTensorInfo(m,l.dtype,f);if(a){let b=C.expandShapeToKeepDim(m,i),T=Je({inputs:{x:g},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(g),T}return g}var R_={kernelName:_i,backendName:"cpu",kernelFunc:kre};function Sre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;J(o,"any");let i=y.parseAxisParam(s,o.shape),u=i,p=C.getAxesPermutation(u,o.shape.length),l=o;p!=null&&(l=qt({inputs:{x:o},backend:e,attrs:{perm:p}}),u=C.getInnerMostAxes(u.length,o.shape.length)),C.assertAxesAreInnerMostDims("any",u,l.shape.length);let[m,c]=C.computeOutAndReduceShapes(l.shape,u),d=y.sizeFromShape(c),f=y.makeZerosTypedArray(y.sizeFromShape(m),l.dtype),h=e.data.get(l.dataId).values;for(let b=0;b<f.length;++b){let T=b*d,x=h[T];for(let I=0;I<d;++I){let k=h[T+I];x=x||k}f[b]=x}p!=null&&e.disposeIntermediateTensorInfo(l);let g=e.makeTensorInfo(m,l.dtype,f);if(a){let b=C.expandShapeToKeepDim(m,i),T=Je({inputs:{x:g},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(g),T}return g}var F_={kernelName:$i,backendName:"cpu",kernelFunc:Sre};function vre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n;J(o,"argMax");let a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,p=[];i!=null&&(u=qt({inputs:{x:o},backend:e,attrs:{perm:i}}),p.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),a=[a[0]],C.assertAxesAreInnerMostDims("argMax",a,u.shape.length);let[l,m]=C.computeOutAndReduceShapes(u.shape,a),c=y.sizeFromShape(l),d=y.makeZerosTypedArray(c,"int32"),f=y.sizeFromShape(m),h=e.data.get(u.dataId).values;for(let g=0;g<d.length;++g){let b=g*f,T=h[b],x=0;for(let I=0;I<f;++I){let k=h[b+I];k>T&&(T=k,x=I)}d[g]=x}return p.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(l,"int32",d)}var P_={kernelName:po,backendName:"cpu",kernelFunc:vre};function Are(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n;J(o,"argMin");let a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,p=[];i!=null&&(u=qt({inputs:{x:o},backend:e,attrs:{perm:i}}),p.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),a=[a[0]],C.assertAxesAreInnerMostDims("argMin",a,u.shape.length);let[l,m]=C.computeOutAndReduceShapes(u.shape,a),c=y.sizeFromShape(l),d=y.makeZerosTypedArray(c,"int32"),f=y.sizeFromShape(m),h=e.data.get(u.dataId).values;for(let g=0;g<d.length;++g){let b=g*f,T=h[b],x=0;for(let I=0;I<f;++I){let k=h[b+I];k<T&&(T=k,x=I)}d[g]=x}return p.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(l,"int32",d)}var M_={kernelName:ai,backendName:"cpu",kernelFunc:Are};var wre=Re(Bi,r=>Math.asin(r)),E_={kernelName:Bi,backendName:"cpu",kernelFunc:wre};var Nre=Re(Oi,r=>Math.asinh(r)),L_={kernelName:Oi,backendName:"cpu",kernelFunc:Nre};var Dre=Re(zi,r=>Math.atan(r)),__={kernelName:zi,backendName:"cpu",kernelFunc:Dre};var Rre=rt((r,t)=>Math.atan2(r,t)),Fre=it(ia,Rre),$_={kernelName:ia,backendName:"cpu",kernelFunc:Fre};var Pre=Re(Gi,r=>Math.atanh(r)),B_={kernelName:Gi,backendName:"cpu",kernelFunc:Pre};function af(r,t,e,n,o,s){let a=o.strideHeight,i=o.strideWidth,u=o.dilationHeight,p=o.dilationWidth,l=o.effectiveFilterHeight,m=o.effectiveFilterWidth,c=o.padInfo.top,d=o.padInfo.left,f=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=Te(o.outShape,e),g=h.values,b=o.outShape[1]*o.outShape[2]*o.outShape[3],T=o.outShape[2]*o.outShape[3],x=o.outShape[3];for(let I=0;I<o.batchSize;++I){let k=I*b,w=I*n[0];for(let R=0;R<o.inChannels;++R)for(let F=0;F<o.outHeight;++F){let P=F*a-c,E=Math.max(0,P),B=Math.min(o.inHeight,l+P),G=k+F*T;for(let U=0;U<o.outWidth;++U){let V=U*i-d,W=Math.max(0,V),H=Math.min(o.inWidth,m+V),j=f,X=0,ee=0;for(let oe=E;oe<B;oe+=u){let se=w+oe*n[1];for(let re=W;re<H;re+=p){let ae=se+re*n[2],ce=r[ae+R];s==="max"&&ce>j?j=ce:s==="avg"&&(X+=ce,ee++)}if(isNaN(j))break}let ne=G+U*x+R;g[ne]=s==="avg"?X/ee:j}}}return h}function Ix(r,t,e,n,o=!1,s=!1){let a=Te(n.outShape,"int32"),i=n.strideHeight,u=n.strideWidth,p=n.dilationHeight,l=n.dilationWidth,m=n.effectiveFilterHeight,c=n.effectiveFilterWidth,d=n.padInfo.top,f=n.padInfo.left,h=Te(t,e,r);for(let g=0;g<n.batchSize;++g)for(let b=0;b<n.inChannels;++b)for(let T=0;T<n.outHeight;++T){let x=T*i-d,I=x;for(;I<0;)I+=p;let k=Math.min(n.inHeight,m+x);for(let w=0;w<n.outWidth;++w){let R=w*u-f,F=R;for(;F<0;)F+=l;let P=Math.min(n.inWidth,c+R),E=Number.NEGATIVE_INFINITY,B=-1;for(let G=I;G<k;G+=p){let U=G-x;for(let V=F;V<P;V+=l){let W=V-R,H=h.get(g,G,V,b);H>E&&(E=H,o?B=s?((g*n.inHeight+G)*n.inWidth+V)*n.inChannels+b:(G*n.inWidth+V)*n.inChannels+b:B=U*c+W)}}a.set(B,g,T,w,b)}}return a}function Cx(r,t,e,n,o,s){let a=o.strideDepth,i=o.strideHeight,u=o.strideWidth,p=o.dilationDepth,l=o.dilationHeight,m=o.dilationWidth,c=o.effectiveFilterDepth,d=o.effectiveFilterHeight,f=o.effectiveFilterWidth,h=o.padInfo.front,g=o.padInfo.top,b=o.padInfo.left,T=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Te(o.outShape,e),I=x.values,k=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],w=o.outShape[2]*o.outShape[3]*o.outShape[4],R=o.outShape[3]*o.outShape[4],F=o.outShape[4];for(let P=0;P<o.batchSize;++P){let E=P*k,B=P*n[0];for(let G=0;G<o.inChannels;++G)for(let U=0;U<o.outDepth;++U){let V=U*a-h,W=V;for(;W<0;)W+=p;let H=Math.min(o.inDepth,c+V),j=E+U*w;for(let X=0;X<o.outHeight;++X){let ee=X*i-g,ne=ee;for(;ne<0;)ne+=l;let oe=Math.min(o.inHeight,d+ee),se=j+X*R;for(let re=0;re<o.outWidth;++re){let ae=re*u-b,ce=ae;for(;ce<0;)ce+=m;let ye=Math.min(o.inWidth,f+ae),ke=se+re*F,Fe=T,Me=0,Ve=0;for(let ft=W;ft<H;ft+=p){let Ct=B+ft*n[1];for(let Ye=ne;Ye<oe;Ye+=l){let Pt=Ct+Ye*n[2];for(let bt=ce;bt<ye;bt+=m){let _t=Pt+bt*n[3],Yt=r[_t+G];if(s==="max"&&Yt>Fe?Fe=Yt:s==="avg"&&(Me+=Yt,Ve++),isNaN(Fe))break}if(isNaN(Fe))break}if(isNaN(Fe))break}let Z=ke+G;I[Z]=s==="avg"?Me/Ve:Fe}}}}return x}function O_(r,t){let e=Te(t.outShape,"int32"),n=t.strideDepth,o=t.strideHeight,s=t.strideWidth,a=t.dilationDepth,i=t.dilationHeight,u=t.dilationWidth,p=t.effectiveFilterDepth,l=t.effectiveFilterHeight,m=t.effectiveFilterWidth,c=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let h=0;h<t.batchSize;++h)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){let T=b*n-c,x=T;for(;x<0;)x+=a;let I=Math.min(t.inDepth,p+T);for(let k=0;k<t.outHeight;++k){let w=k*o-d,R=w;for(;R<0;)R+=i;let F=Math.min(t.inHeight,l+w);for(let P=0;P<t.outWidth;++P){let E=P*s-f,B=E;for(;B<0;)B+=u;let G=Math.min(t.inWidth,m+E),U=Number.NEGATIVE_INFINITY,V=-1;for(let W=x;W<I;W+=a){let H=W-T;for(let j=R;j<F;j+=i){let X=j-w;for(let ee=B;ee<G;ee+=u){let ne=ee-E,oe=r.get(h,W,j,ee,g);oe>=U&&(U=oe,V=H*l*m+X*l+ne)}}}e.set(V,h,b,k,P,g)}}}return e}function Mre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;J(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,p=1;y.assert(C.eitherStridesOrDilationsAreOne(a,p),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${p}'`);let l=C.computePool2DInfo(o.shape,s,a,p,i,u),m;if(l.filterWidth===1&&l.filterHeight===1&&y.arraysEqual(l.inShape,l.outShape))m=Xr({inputs:{x:o},backend:e});else{let c=e.data.get(o.dataId).values,d=y.computeStrides(o.shape),f=af(c,o.shape,o.dtype,d,l,"avg");m=e.makeTensorInfo(l.outShape,o.dtype,f.values)}return m}var z_={kernelName:lo,backendName:"cpu",kernelFunc:Mre};function Ere(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:u,dataFormat:p}=n;J(o,"avgPool3d");let l=C.computePool3DInfo(o.shape,s,a,1,i,u,p),m=e.data.get(o.dataId).values,c=Cx(m,o.shape,o.dtype,y.computeStrides(o.shape),l,"avg");return e.makeTensorInfo(c.shape,"float32",c.values)}var G_={kernelName:Eu,backendName:"cpu",kernelFunc:Ere};function Lre(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,{filterSize:a,strides:i,pad:u,dimRoundingMode:p}=n;J([o,s],"avgPool3DGrad");let l=C.computePool3DInfo(s.shape,a,i,1,u,p),m=l.strideDepth,c=l.strideHeight,d=l.strideWidth,f=l.filterDepth,h=l.filterHeight,g=l.filterWidth,b=l.dilationDepth,T=l.dilationHeight,x=l.dilationWidth,I=l.effectiveFilterDepth,k=l.effectiveFilterHeight,w=l.effectiveFilterWidth,R=I-1-l.padInfo.front,F=w-1-l.padInfo.left,P=k-1-l.padInfo.top,E=Te(s.shape,"float32"),B=1/(f*h*g),G=e.bufferSync(o);for(let U=0;U<l.batchSize;++U)for(let V=0;V<l.inChannels;++V)for(let W=0;W<l.inDepth;++W)for(let H=0;H<l.inHeight;++H)for(let j=0;j<l.inWidth;++j){let X=W-R,ee=H-P,ne=j-F,oe=0;for(let se=0;se<I;se+=b){let re=(X+se)/m;if(!(re<0||re>=l.outDepth||Math.floor(re)!==re))for(let ae=0;ae<k;ae+=T){let ce=(ee+ae)/c;if(!(ce<0||ce>=l.outHeight||Math.floor(ce)!==ce))for(let ye=0;ye<w;ye+=x){let ke=(ne+ye)/d;if(ke<0||ke>=l.outWidth||Math.floor(ke)!==ke)continue;oe+=G.get(U,re,ce,ke,V)}}}E.set(oe*B,U,W,H,j,V)}return e.makeTensorInfo(E.shape,E.dtype,E.values)}var U_={kernelName:Tm,backendName:"cpu",kernelFunc:Lre};function _re(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,a=s;J([o,s],"avgPoolGrad");let{filterSize:i,strides:u,pad:p}=n,l=C.computePool2DInfo(a.shape,i,u,1,p),m=l.strideHeight,c=l.strideWidth,d=l.filterHeight,f=l.filterWidth,h=l.dilationHeight,g=l.dilationWidth,b=l.effectiveFilterHeight,T=l.effectiveFilterWidth,x=T-1-l.padInfo.left,I=b-1-l.padInfo.top,k=Te(a.shape,"float32"),w=1/(d*f),R=e.data.get(o.dataId).values,F=Te(o.shape,"float32",R);for(let P=0;P<l.batchSize;++P)for(let E=0;E<l.inChannels;++E)for(let B=0;B<l.inHeight;++B)for(let G=0;G<l.inWidth;++G){let U=B-I,V=G-x,W=0;for(let H=0;H<b;H+=h){let j=(U+H)/m;if(!(j<0||j>=l.outHeight||Math.floor(j)!==j))for(let X=0;X<T;X+=g){let ee=(V+X)/c;if(ee<0||ee>=l.outWidth||Math.floor(ee)!==ee)continue;W+=F.get(P,j,ee,E)}}k.set(W*w,P,B,G,E)}return e.makeTensorInfo(k.shape,k.dtype,k.values)}var W_={kernelName:ym,backendName:"cpu",kernelFunc:_re};function $re(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,scale:s,offset:a,mean:i,variance:u}=t;y.assert(i.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(s==null||i.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),J([o,i,u,s,a],"batchNorm");let{varianceEpsilon:p}=n;p==null&&(p=.001);let l=e.data.get(o.dataId).values,m=e.data.get(i.dataId).values,c=e.data.get(u.dataId).values,d=s?e.data.get(s.dataId).values:new Float32Array([1]),f=a?e.data.get(a.dataId).values:new Float32Array([0]),h=new Float32Array(l.length),g=f.length,b=d.length,T=c.length,x=m.length,I=0,k=0,w=0,R=0;for(let F=0;F<l.length;++F)h[F]=f[I++]+(l[F]-m[k++])*d[w++]/Math.sqrt(c[R++]+p),I>=g&&(I=0),k>=x&&(k=0),w>=b&&(w=0),R>=T&&(R=0);return e.makeTensorInfo(o.shape,o.dtype,h)}var K_={kernelName:vo,backendName:"cpu",kernelFunc:$re};function Bre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,crops:a}=n;J([o],"batchToSpaceND");let i=s.reduce((b,T)=>b*T),u=C.getReshaped(o.shape,s,i),p=C.getPermuted(u.length,s.length),l=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(l,a,s.length),d=Je({inputs:{x:o},backend:e,attrs:{shape:u}}),f=qt({inputs:{x:d},backend:e,attrs:{perm:p}}),h=Je({inputs:{x:f},backend:e,attrs:{shape:l}}),g=Zs({inputs:{x:h},backend:e,attrs:{begin:m,size:c}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),g}var V_={kernelName:ms,backendName:"cpu",kernelFunc:Bre};function Ore(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:a}=n,i=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,p=tf(i,u,s.dtype,s.shape,a);return e.makeTensorInfo([a],s.dtype,p)}var H_={kernelName:xm,backendName:"cpu",kernelFunc:Ore};function zre(r){let{inputs:t,backend:e}=r,{s0:n,s1:o}=t,s=e.data.get(n.dataId).values,a=e.data.get(o.dataId).values,i=C.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return e.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var q_={kernelName:Im,backendName:"cpu",kernelFunc:zre};var Gre=Re(Gn,(r,t)=>{let e=t;return r>e.clipValueMax?e.clipValueMax:r<e.clipValueMin?e.clipValueMin:r}),j_={kernelName:Gn,backendName:"cpu",kernelFunc:Gre};var Ure=r=>{let{x:t}=r.inputs,e=r.backend,n=new Float32Array(y.sizeFromShape(t.shape)),o=e.data.get(t.dataId),s=o.complexTensorInfos.real,a=o.complexTensorInfos.imag,i=e.data.get(s.dataId).values,u=e.data.get(a.dataId).values;for(let p=0;p<i.length;p++){let l=i[p],m=u[p];n[p]=Math.hypot(l,m)}return e.makeOutput(n,t.shape,"float32")},X_={kernelName:_u,backendName:"cpu",kernelFunc:Ure};function Si(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.data.get(n.dataId).complexTensorInfos.imag,s=e.data.get(o.dataId).values;return e.makeTensorInfo(o.shape,o.dtype,s)}var Y_={kernelName:zu,backendName:"cpu",kernelFunc:Si};function Rp(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,t[0].shape)[0],a=t.map(h=>h.shape);C.assertParamsConsistent(a,s);let i=C.computeOutShape(t.map(h=>h.shape),s);if(y.sizeFromShape(i)===0)return e.makeTensorInfo(i,t[0].dtype,[]);let u=t.filter(h=>y.sizeFromShape(h.shape)>0);if(u.length===1)return Xr({inputs:{x:u[0]},backend:e});if(u[0].dtype==="complex64"){let h=u.map(I=>qs({inputs:{input:I},backend:e})),g=u.map(I=>Si({inputs:{input:I},backend:e})),b=Rp({inputs:h,backend:e,attrs:{axis:s}}),T=Rp({inputs:g,backend:e,attrs:{axis:s}}),x=Sr({inputs:{real:b,imag:T},backend:e});return h.forEach(I=>e.disposeIntermediateTensorInfo(I)),g.forEach(I=>e.disposeIntermediateTensorInfo(I)),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(T),x}let p=u.map(h=>{let g=y.sizeFromShape(h.shape.slice(s));return Je({inputs:{x:h},backend:e,attrs:{shape:[-1,g]}})}),l=p.map(h=>({vals:e.data.get(h.dataId).values,shape:h.shape}));i=C.computeOutShape(p.map(h=>h.shape),1);let m=p[0].shape[0]===1,c=Pl(l,i,t[0].dtype,m),d=C.computeOutShape(u.map(h=>h.shape),s),f=e.makeTensorInfo(d,t[0].dtype,c);return p.forEach(h=>e.disposeIntermediateTensorInfo(h)),f}var Z_={kernelName:cs,backendName:"cpu",kernelFunc:Rp};function hN(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dataFormat:u,dilations:p,dimRoundingMode:l}=n;J([o,s],"conv2d");let m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,s.shape,a,p,i,l,!1,m),d=c.filterHeight,f=c.filterWidth,h=c.dilationHeight,g=c.dilationWidth,b=c.padInfo.left,T=c.padInfo.top,x=c.dataFormat==="channelsLast",I=new ht(c.outShape,o.dtype),k=y.computeStrides(o.shape),w=y.computeStrides(s.shape),R=k[0],F=x?k[1]:k[2],P=x?k[2]:1,E=x?1:k[1],B=I.strides[0],G=x?I.strides[1]:I.strides[2],U=x?I.strides[2]:1,V=x?1:I.strides[1],W=e.data.get(o.dataId).values,H=e.data.get(s.dataId).values,j=I.values;for(let X=0;X<c.batchSize;++X){let ee=X*R,ne=X*B;for(let oe=0;oe<c.outHeight;++oe){let se=ne+oe*G,re=oe*c.strideHeight-T;for(let ae=0;ae<d;++ae){let ce=re+ae*h;if(ce<0||ce>=c.inHeight)continue;let ye=ae*w[0],ke=ee+ce*F;for(let Fe=0;Fe<c.outWidth;++Fe){let Me=se+Fe*U,Ve=Fe*c.strideWidth-b;for(let Z=0;Z<f;++Z){let ft=Ve+Z*g;if(ft<0||ft>=c.inWidth)continue;let Ct=ye+Z*w[1],Ye=ke+ft*P,Pt=Ct;for(let bt=0;bt<c.inChannels;++bt){let _t=W[Ye+bt*E];for(let Yt=0;Yt<c.outChannels;++Yt)j[Me+Yt*V]+=_t*H[Pt+Yt];Pt+=c.outChannels}}}}}}return e.makeTensorInfo(I.shape,I.dtype,j)}var Q_={kernelName:fo,backendName:"cpu",kernelFunc:hN};function Wre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,pad:i,dataFormat:u,dimRoundingMode:p,filterShape:l}=n;J([o,s],"conv2dBackpropFilter");let m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,l,a,1,i,p,!1,m),{strideHeight:d,strideWidth:f,filterHeight:h,filterWidth:g}=c,b=c.dataFormat==="channelsLast",T=new ht(c.filterShape,"float32"),x=c.padInfo.left,I=c.padInfo.top,k=e.data.get(o.dataId).values,w=e.data.get(s.dataId).values,R=new ht(o.shape,o.dtype,k),F=new ht(s.shape,s.dtype,w);for(let P=0;P<h;++P){let E=Math.max(0,Math.ceil((I-P)/d)),B=Math.min(c.outHeight,(c.inHeight+I-P)/d);for(let G=0;G<g;++G){let U=Math.max(0,Math.ceil((x-G)/f)),V=Math.min(c.outWidth,(c.inWidth+x-G)/f);for(let W=0;W<c.inChannels;++W)for(let H=0;H<c.outChannels;++H){let j=0;for(let X=0;X<c.batchSize;++X)for(let ee=E;ee<B;++ee){let ne=P+ee*d-I;for(let oe=U;oe<V;++oe){let se=G+oe*f-x;b?j+=R.get(X,ne,se,W)*F.get(X,ee,oe,H):j+=R.get(X,W,ne,se)*F.get(X,H,ee,oe)}}T.set(j,P,G,W,H)}}}return e.makeTensorInfo(T.shape,T.dtype,T.values)}var J_={kernelName:Cm,backendName:"cpu",kernelFunc:Wre};function Kre(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{inputShape:a,strides:i,pad:u,dataFormat:p,dimRoundingMode:l}=n;J([o,s],"conv2dBackpropInput");let m=y.computeStrides(s.shape),c=y.computeStrides(o.shape),d=C.convertConv2DDataFormat(p),f=C.computeConv2DInfo(a,s.shape,i,1,u,l,!1,d),h=new ht(f.inShape,"float32"),g=h.values,b=e.data.get(o.dataId).values,T=e.data.get(s.dataId).values,[x,I,k]=m,{batchSize:w,filterHeight:R,filterWidth:F,inChannels:P,inHeight:E,inWidth:B,outChannels:G,outHeight:U,outWidth:V,strideHeight:W,strideWidth:H}=f;d=f.dataFormat;let j=R-1-f.padInfo.top,X=F-1-f.padInfo.left,ee=d==="channelsLast",ne=h.strides[0],oe=ee?h.strides[1]:h.strides[2],se=ee?h.strides[2]:1,re=ee?1:h.strides[1],ae=c[0],ce=ee?c[1]:c[2],ye=ee?c[2]:1,ke=ee?1:c[1];for(let Fe=0;Fe<w;++Fe)for(let Me=0;Me<P;++Me)for(let Ve=0;Ve<E;++Ve){let Z=Ve-j,ft=Math.max(0,Math.ceil(Z/W)),Ct=Math.min(U,(R+Z)/W);for(let Ye=0;Ye<B;++Ye){let Pt=Ye-X,bt=Math.max(0,Math.ceil(Pt/H)),_t=Math.min(V,(F+Pt)/H),Yt=0;for(let lr=ft;lr<Ct;++lr){let eo=lr*W-Z;for(let Br=bt;Br<_t;++Br){let er=Br*H-Pt,Or=ae*Fe+ce*lr+ye*Br,zr=x*(R-1-eo)+I*(F-1-er)+k*Me;for(let to=0;to<G;++to){let ro=b[Or+ke*to],Zr=T[zr+to];Yt+=ro*Zr}}}let $n=ne*Fe+oe*Ve+se*Ye+re*Me;g[$n]=Yt}}return e.makeTensorInfo(h.shape,h.dtype,h.values)}var e$={kernelName:ho,backendName:"cpu",kernelFunc:Kre};function Vre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:u}=n;J([o,s],"conv3d");let p=C.computeConv3DInfo(o.shape,s.shape,a,u,i),{filterDepth:l,filterHeight:m,filterWidth:c,dilationDepth:d,dilationHeight:f,dilationWidth:h,padInfo:g}=p,b=g.front,T=g.left,x=g.top,I=new ht(p.outShape,o.dtype),k=e.data.get(o.dataId).values,w=e.data.get(s.dataId).values,R=I.values,F=y.computeStrides(o.shape),P=y.computeStrides(s.shape);for(let E=0;E<p.batchSize;++E){let B=E*F[0],G=E*I.strides[0];for(let U=0;U<p.outDepth;++U){let V=G+U*I.strides[1],W=U*p.strideDepth-b;for(let H=0;H<l;++H){let j=W+H*d;if(j<0||j>=p.inDepth)continue;let X=H*P[0],ee=B+j*F[1];for(let ne=0;ne<p.outHeight;++ne){let oe=V+ne*I.strides[2],se=ne*p.strideHeight-x;for(let re=0;re<m;++re){let ae=se+re*f;if(ae<0||ae>=p.inHeight)continue;let ce=X+re*P[1],ye=ee+ae*F[2];for(let ke=0;ke<p.outWidth;++ke){let Fe=oe+ke*p.outChannels,Me=ke*p.strideWidth-T;for(let Ve=0;Ve<c;++Ve){let Z=Me+Ve*h;if(Z<0||Z>=p.inWidth)continue;let ft=ce+Ve*P[2],Ct=ye+Z*p.inChannels,Ye=ft;for(let Pt=0;Pt<p.inChannels;++Pt){let bt=k[Ct+Pt];for(let _t=0;_t<p.outChannels;++_t)R[Fe+_t]+=bt*w[Ye+_t];Ye+=p.outChannels}}}}}}}}return e.makeTensorInfo(I.shape,I.dtype,I.values)}var t$={kernelName:$u,backendName:"cpu",kernelFunc:Vre};function Hre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,pad:i,filterShape:u}=n;J([o,s],"conv3dBackpropFilterV2");let p=y.computeStrides(o.shape),l=y.computeStrides(s.shape),m=C.computeConv3DInfo(o.shape,u,a,1,i),c=m.strideDepth,d=m.strideHeight,f=m.strideWidth,h=m.filterDepth,g=m.filterHeight,b=m.filterWidth,T=new ht(m.filterShape,"float32"),x=T.values,[I,k,w,R]=T.strides,F=e.data.get(s.dataId).values,[P,E,B,G]=l,U=e.data.get(o.dataId).values,[V,W,H,j]=p,X=m.padInfo.front,ee=m.padInfo.left,ne=m.padInfo.top;for(let oe=0;oe<h;++oe){let se=Math.max(0,Math.ceil((X-oe)/c)),re=Math.min(m.outDepth,(m.inDepth+X-oe)/c),ae=oe*I;for(let ce=0;ce<g;++ce){let ye=Math.max(0,Math.ceil((ne-ce)/d)),ke=Math.min(m.outHeight,(m.inHeight+ne-ce)/d),Fe=ce*k+ae;for(let Me=0;Me<b;++Me){let Ve=Math.max(0,Math.ceil((ee-Me)/f)),Z=Math.min(m.outWidth,(m.inWidth+ee-Me)/f),ft=Me*w+Fe;for(let Ct=0;Ct<m.inChannels;++Ct){let Ye=Ct*R+ft;for(let Pt=0;Pt<m.outChannels;++Pt){let bt=0;for(let _t=0;_t<m.batchSize;++_t){let Yt=_t*V,$n=_t*P;for(let lr=se;lr<re;++lr){let Br=(oe+lr*c-X)*W+Yt,er=lr*E+$n;for(let Or=ye;Or<ke;++Or){let to=(ce+Or*d-ne)*H+Br,ro=Or*B+er;for(let Zr=Ve;Zr<Z;++Zr){let na=(Me+Zr*f-ee)*j+to,Ru=Zr*G+ro;bt+=U[na+Ct]*F[Ru+Pt]}}}}x[Ye+Pt]=bt}}}}}return e.makeTensorInfo(T.shape,T.dtype,T.values)}var r$={kernelName:km,backendName:"cpu",kernelFunc:Hre};function qre(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{pad:a,strides:i,inputShape:u}=n;J([o],"conv3dBackpropInputV2");let p=y.computeStrides(o.shape),l=y.computeStrides(s.shape),m=C.computeConv3DInfo(u,s.shape,i,1,a),c=new ht(m.inShape,"float32"),d=c.values,[f,h,g,b]=c.strides,T=e.data.get(o.dataId).values,[x,I,k,w]=p,R=e.data.get(s.dataId).values,[F,P,E,B]=l,{batchSize:G,filterDepth:U,filterHeight:V,filterWidth:W,inChannels:H,inDepth:j,inHeight:X,inWidth:ee,outChannels:ne,outDepth:oe,outHeight:se,outWidth:re,strideDepth:ae,strideHeight:ce,strideWidth:ye}=m,ke=U-1-m.padInfo.front,Fe=V-1-m.padInfo.top,Me=W-1-m.padInfo.left;for(let Ve=0;Ve<G;++Ve)for(let Z=0;Z<H;++Z)for(let ft=0;ft<j;++ft){let Ct=ft-ke,Ye=Math.max(0,Math.ceil(Ct/ae)),Pt=Math.min(oe,(U+Ct)/ae);for(let bt=0;bt<X;++bt){let _t=bt-Fe,Yt=Math.max(0,Math.ceil(_t/ce)),$n=Math.min(se,(V+_t)/ce);for(let lr=0;lr<ee;++lr){let eo=lr-Me,Br=Math.max(0,Math.ceil(eo/ye)),er=Math.min(re,(W+eo)/ye),Or=0;for(let zr=Ye;zr<Pt;++zr){let to=zr*ae-Ct;for(let ro=Yt;ro<$n;++ro){let Zr=ro*ce-_t;for(let Ni=Br;Ni<er;++Ni){let na=Ni*ye-eo,Ru=x*Ve+I*zr+k*ro+w*Ni,Rr=F*(U-1-to)+P*(V-1-Zr)+E*(W-1-na)+B*Z;for(let Di=0;Di<ne;++Di){let Gf=T[Ru+Di],Uf=R[Rr+Di];Or+=Gf*Uf}}}}d[f*Ve+h*ft+g*bt+b*lr+Z]=Or}}}return e.makeTensorInfo(c.shape,c.dtype,c.values)}var n$={kernelName:Sm,backendName:"cpu",kernelFunc:qre};var jre=Re(go,r=>Math.cos(r)),o$={kernelName:go,backendName:"cpu",kernelFunc:jre};var Xre=Re(bo,r=>Math.cosh(r)),s$={kernelName:bo,backendName:"cpu",kernelFunc:Xre};function Yre(r){let{inputs:t,backend:e,attrs:n}=r,{image:o,boxes:s,boxInd:a}=t,{cropSize:i,method:u,extrapolationValue:p}=n,[l,m,c,d]=o.shape,f=s.shape[0],[h,g]=i,b=Te([f,h,g,d],"float32"),T=e.data.get(s.dataId).values,x=e.data.get(a.dataId).values,I=e.data.get(o.dataId).values,k=y.computeStrides(o.shape),w=y.computeStrides(b.shape);for(let R=0;R<f;R++){let F=R*4,P=T[F],E=T[F+1],B=T[F+2],G=T[F+3],U=x[R];if(U>=l)continue;let V=h>1?(B-P)*(m-1)/(h-1):0,W=g>1?(G-E)*(c-1)/(g-1):0;for(let H=0;H<h;H++){let j=h>1?P*(m-1)+H*V:.5*(P+B)*(m-1);if(j<0||j>m-1){for(let X=0;X<g;X++)for(let ee=0;ee<d;ee++){let ne=ee+X*w[2]+H*w[1]+R*w[0];b.values[ne]=p}continue}if(u==="bilinear"){let X=Math.floor(j),ee=Math.ceil(j),ne=j-X;for(let oe=0;oe<g;oe++){let se=g>1?E*(c-1)+oe*W:.5*(E+G)*(c-1);if(se<0||se>c-1){for(let ye=0;ye<d;ye++){let ke=ye+oe*w[2]+H*w[1]+R*w[0];b.values[ke]=p}continue}let re=Math.floor(se),ae=Math.ceil(se),ce=se-re;for(let ye=0;ye<d;ye++){let ke=ye+re*k[2]+X*k[1]+U*k[0],Fe=I[ke];ke=ye+ae*k[2]+X*k[1]+U*k[0];let Me=I[ke];ke=ye+re*k[2]+ee*k[1]+U*k[0];let Ve=I[ke];ke=ye+ae*k[2]+ee*k[1]+U*k[0];let Z=I[ke],ft=Fe+(Me-Fe)*ce,Ct=Ve+(Z-Ve)*ce;ke=ye+oe*w[2]+H*w[1]+R*w[0],b.values[ke]=ft+(Ct-ft)*ne}}}else for(let X=0;X<g;++X){let ee=g>1?E*(c-1)+X*W:.5*(E+G)*(c-1);if(ee<0||ee>c-1){for(let se=0;se<d;se++){let re=se+X*w[2]+H*w[1]+R*w[0];b.values[re]=p}continue}let ne=Math.round(ee),oe=Math.round(j);for(let se=0;se<d;se++){let re=se+ne*k[2]+oe*k[1]+U*k[0],ae=se+X*w[2]+H*w[1]+R*w[0];b.values[ae]=I[re]}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}var a$={kernelName:pa,backendName:"cpu",kernelFunc:Yre};function Zre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;J(o,"cumprod");let u=C.getAxesPermutation([s],o.shape.length),p=o;u!=null&&(p=qt({inputs:{x:o},backend:e,attrs:{perm:u}}));let l=C.getInnerMostAxes(1,o.shape.length)[0];if(l!==p.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${p.shape.length-1} but got axis=${l}`);let m=Mt(p.dtype,"int32"),c=y.makeOnesTypedArray(y.sizeFromShape(p.shape),m),d=e.data.get(p.dataId).values,f=p.shape[p.shape.length-1],h=i?(b,T)=>b+f-T-1:(b,T)=>b+T;for(let b=0;b<d.length;b+=f)for(let T=0;T<f;T++){let x=h(b,T);if(T===0)c[x]=a?1:d[x];else{let I=h(b,T-1);c[x]=a?d[I]*c[I]:d[x]*c[I]}}let g=e.makeTensorInfo(p.shape,m,c);if(u!=null){let b=C.getUndoAxesPermutation(u),T=qt({inputs:{x:g},backend:e,attrs:{perm:b}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(p),T}return g}var i$={kernelName:ua,backendName:"cpu",kernelFunc:Zre};function Qre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;J(o,"cumsum");let u=C.getAxesPermutation([s],o.shape.length),p=o;u!=null&&(p=qt({inputs:{x:o},backend:e,attrs:{perm:u}}));let l=C.getInnerMostAxes(1,o.shape.length)[0];if(l!==p.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${p.shape.length-1} but got axis=${l}`);let m=Mt(p.dtype,"int32"),c=y.makeZerosTypedArray(y.sizeFromShape(p.shape),m),d=e.data.get(p.dataId).values,f=p.shape[p.shape.length-1],h=i?(b,T)=>b+f-T-1:(b,T)=>b+T;for(let b=0;b<d.length;b+=f)for(let T=0;T<f;T++){let x=h(b,T);if(T===0)c[x]=a?0:d[x];else{let I=h(b,T-1);c[x]=a?d[I]+c[I]:d[x]+c[I]}}let g=e.makeTensorInfo(p.shape,m,c);if(u!=null){let b=C.getUndoAxesPermutation(u),T=qt({inputs:{x:g},backend:e,attrs:{perm:b}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(p),T}return g}var u$={kernelName:yo,backendName:"cpu",kernelFunc:Qre};function Jre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let u=e.data.get(o.dataId).values,p=e.data.get(s.dataId).values,l=tf(u,p,s.dtype,s.shape,a);return e.makeTensorInfo([a],s.dtype,l)}else if(o.shape.length===2){let u=e.bufferSync(o),p=e.bufferSync(s),l=ux(u,p,a,i);return e.makeTensorInfo(l.shape,s.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var p$={kernelName:vm,backendName:"cpu",kernelFunc:Jre};function ene(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n;y.assert(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);let i=o.shape[0],u=o.shape[1],p=o.shape[2],l=o.shape[3],m=u*s,c=p*s,d=l/(s*s),f=e.data.get(o.dataId).values,h=new Float32Array(i*m*c*d),g=0;for(let b=0;b<i;++b)for(let T=0;T<m;++T){let x=Math.floor(T/s),I=T%s;for(let k=0;k<c;++k){let w=Math.floor(k/s),R=k%s,F=(I*s+R)*d;for(let P=0;P<d;++P){let B=P+F+l*(w+p*(x+u*b));h[g++]=f[B]}}}return e.makeTensorInfo([i,m,c,d],o.dtype,h)}var l$={kernelName:la,backendName:"cpu",kernelFunc:ene};function gN(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:u,dimRoundingMode:p}=n;J([o,s],"depthwiseConv2DNative");let l=y.computeStrides(o.shape),m=y.computeStrides(s.shape),c=u;c==null&&(c=[1,1]),y.assert(C.eitherStridesOrDilationsAreOne(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let d=C.computeConv2DInfo(o.shape,s.shape,a,c,i,p,!0),{filterHeight:f,filterWidth:h,dilationHeight:g,dilationWidth:b,padInfo:T}=d,x=T.left,I=T.top,k=d.outChannels/d.inChannels,w=new ht(d.outShape,o.dtype),R=e.data.get(o.dataId).values,F=e.data.get(s.dataId).values,P=w.values;for(let E=0;E<d.batchSize;++E){let B=E*l[0],G=E*w.strides[0];for(let U=0;U<d.outHeight;++U){let V=G+U*w.strides[1],W=U*d.strideHeight-I;for(let H=0;H<f;++H){let j=W+H*g;if(j<0||j>=d.inHeight)continue;let X=H*m[0],ee=B+j*l[1];for(let ne=0;ne<d.outWidth;++ne){let oe=V+ne*w.strides[2],se=ne*d.strideWidth-x;for(let re=0;re<h;++re){let ae=se+re*b;if(ae<0||ae>=d.inWidth)continue;let ce=X+re*m[1],ye=ee+ae*d.inChannels,ke=oe,Fe=ce;for(let Me=0;Me<d.inChannels;++Me){let Ve=R[ye+Me];for(let Z=0;Z<k;++Z)P[ke+Z]+=Ve*F[Fe+Z];ke+=k,Fe+=k}}}}}}return e.makeTensorInfo(w.shape,w.dtype,w.values)}var m$={kernelName:To,backendName:"cpu",kernelFunc:gN};function tne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,dilations:i,pad:u,dimRoundingMode:p,filterShape:l}=n;J([o,s],"depthwiseConv2dNativeBackpropFilter");let m=C.computeConv2DInfo(o.shape,l,a,i,u,p,!0),{strideHeight:c,strideWidth:d,filterHeight:f,filterWidth:h}=m,g=new ht(m.filterShape,"float32"),b=m.padInfo.left,T=m.padInfo.top,x=m.outChannels/m.inChannels,I=e.data.get(o.dataId).values,k=new ht(o.shape,o.dtype,I),w=e.data.get(s.dataId).values,R=new ht(s.shape,s.dtype,w);for(let F=0;F<f;++F){let P=Math.max(0,Math.ceil((T-F)/c)),E=Math.min(m.outHeight,(m.inHeight+T-F)/c);for(let B=0;B<h;++B){let G=Math.max(0,Math.ceil((b-B)/d)),U=Math.min(m.outWidth,(m.inWidth+b-B)/d);for(let V=0;V<m.outChannels;++V){let W=Math.trunc(V/x),H=V%x,j=0;for(let X=0;X<m.batchSize;++X)for(let ee=P;ee<E;++ee){let ne=F+ee*c-T;for(let oe=G;oe<U;++oe){let se=B+oe*d-b;j+=k.get(X,ne,se,W)*R.get(X,ee,oe,V)}}g.set(j,F,B,W,H)}}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}var c$={kernelName:Am,backendName:"cpu",kernelFunc:tne};function rne(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{strides:a,dilations:i,pad:u,dimRoundingMode:p,inputShape:l}=n;J([o,s],"depthwiseConv2DNativeBackpropInput");let m=y.computeStrides(o.shape),c=y.computeStrides(s.shape),d=C.computeConv2DInfo(l,s.shape,a,i,u,p,!0),f=new ht(d.inShape,"float32"),h=f.values,[g,b,T]=f.strides,x=e.data.get(o.dataId).values,[I,k,w]=m,R=e.data.get(s.dataId).values,[F,P,E]=c,{batchSize:B,filterHeight:G,filterWidth:U,inChannels:V,inHeight:W,inWidth:H,outChannels:j,outHeight:X,outWidth:ee,strideHeight:ne,strideWidth:oe}=d,se=G-1-d.padInfo.top,re=U-1-d.padInfo.left,ae=j/V;for(let ce=0;ce<B;++ce)for(let ye=0;ye<V;++ye)for(let ke=0;ke<W;++ke){let Fe=ke-se,Me=Math.max(0,Math.ceil(Fe/ne)),Ve=Math.min(X,(G+Fe)/ne);for(let Z=0;Z<H;++Z){let ft=Z-re,Ct=Math.max(0,Math.ceil(ft/oe)),Ye=Math.min(ee,(U+ft)/oe),Pt=0;for(let bt=Me;bt<Ve;++bt){let _t=bt*ne-Fe;for(let Yt=Ct;Yt<Ye;++Yt){let $n=Yt*oe-ft,lr=I*ce+k*bt+w*Yt,eo=F*(G-1-_t)+P*(U-1-$n)+E*ye;for(let Br=0;Br<ae;++Br){let er=ye*ae+Br,Or=x[lr+er],zr=R[eo+Br];Pt+=Or*zr}}}h[g*ce+b*ke+T*Z+ye]=Pt}}return e.makeTensorInfo(f.shape,f.dtype,f.values)}var d$={kernelName:wm,backendName:"cpu",kernelFunc:rne};function nne(r){let{inputs:t,backend:e}=r,{x:n}=t,o=y.sizeFromShape(n.shape),s=e.data.get(n.dataId).values,a=Te([o,o],n.dtype),i=a.values;for(let p=0;p<s.length;p++)i[p*o+p]=s[p];let u=[...n.shape,...n.shape];return e.makeTensorInfo(u,a.dtype,a.values)}var f$={kernelName:Nm,backendName:"cpu",kernelFunc:nne};var h$={kernelName:Bu,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:n,filter:o}=r,{strides:s,pad:a,dilations:i}=e,u=t,p=u.data.get(n.dataId).values,l=n.shape.length,m=u.data.get(o.dataId).values,c=o.shape.length,{batchSize:d,inHeight:f,inWidth:h,inChannels:g,outHeight:b,outWidth:T,padInfo:x,strideHeight:I,strideWidth:k,filterHeight:w,filterWidth:R,dilationHeight:F,dilationWidth:P,outShape:E}=C.computeDilation2DInfo(n.shape,o.shape,s,a,"NHWC",i),B=y.sizeFromShape(E),G=E.length,U=y.getArrayFromDType(n.dtype,B);for(let W=0;W<d;++W)for(let H=0;H<b;++H){let j=H*I-x.top;for(let X=0;X<T;++X){let ee=X*k-x.left;for(let ne=0;ne<g;++ne){let oe=Number.MIN_SAFE_INTEGER;for(let re=0;re<w;++re){let ae=j+re*F;if(ae>=0&&ae<f)for(let ce=0;ce<R;++ce){let ye=ee+ce*P;if(ye>=0&&ye<h){let ke=y.locToIndex([W,ae,ye,ne],l,y.computeStrides(n.shape)),Fe=y.locToIndex([re,ce,ne],c,y.computeStrides(o.shape)),Me=p[ke]+m[Fe];Me>oe&&(oe=Me)}}}let se=y.locToIndex([W,H,X,ne],G,y.computeStrides(E));U[se]=oe}}}return{dataId:u.write(y.toTypedArray(U,n.dtype),E,n.dtype),shape:E,dtype:n.dtype}}};var g$={kernelName:th,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:u}=e,p=t,l=y.toNestedArray(n.shape,p.data.get(n.dataId).values),m=y.toNestedArray(o.shape,p.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:b,padInfo:T,strideHeight:x,strideWidth:I,filterHeight:k,filterWidth:w,dilationHeight:R,dilationWidth:F,outShape:P}=C.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",u);y.assert(s.rank===P.length,()=>`Error in ${th}, dy must have the same rank as output ${P.length}, but got ${s.rank}`);let E=y.toNestedArray(P,p.data.get(s.dataId).values),B=y.makeZerosNestedTypedArray(o.shape,o.dtype);for(let U=0;U<c;++U)for(let V=0;V<g;++V){let W=V*x-T.top;for(let H=0;H<b;++H){let j=H*I-T.left;for(let X=0;X<h;++X){let ee=Number.MIN_SAFE_INTEGER,ne=0,oe=0;for(let se=0;se<k;++se){let re=W+se*R;if(re>=0&&re<d)for(let ae=0;ae<w;++ae){let ce=j+ae*F;if(ce>=0&&ce<f){let ye=l[U][re][ce][X]+m[se][ae][X];ye>ee&&(ee=ye,ne=se,oe=ae)}}}B[ne][oe][X]+=E[U][V][H][X]}}}return{dataId:p.write(y.toTypedArray(B,n.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var b$={kernelName:eh,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:u}=e,p=t,l=y.toNestedArray(n.shape,p.data.get(n.dataId).values),m=y.toNestedArray(o.shape,p.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:b,padInfo:T,strideHeight:x,strideWidth:I,filterHeight:k,filterWidth:w,dilationHeight:R,dilationWidth:F,outShape:P}=C.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",u);y.assert(s.rank===P.length,()=>`Error in ${eh}, dy must have the same rank as output ${P.length}, but got ${s.rank}`);let E=y.toNestedArray(P,p.data.get(s.dataId).values),B=y.makeZerosNestedTypedArray(n.shape,n.dtype);for(let U=0;U<c;++U)for(let V=0;V<g;++V){let W=V*x-T.top;for(let H=0;H<b;++H){let j=H*I-T.left;for(let X=0;X<h;++X){let ee=Number.MIN_SAFE_INTEGER,ne=W<0?0:W,oe=j<0?0:j;for(let se=0;se<k;++se){let re=W+se*R;if(re>=0&&re<d)for(let ae=0;ae<w;++ae){let ce=j+ae*F;if(ce>=0&&ce<f){let ye=l[U][re][ce][X]+m[se][ae][X];ye>ee&&(ee=ye,ne=re,oe=ce)}}}B[U][ne][oe][X]+=E[U][V][H][X]}}}return{dataId:p.write(y.toTypedArray(B,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function xu(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;J(o,"sum");let i;o.dtype==="bool"?i=js({inputs:{x:o},backend:e,attrs:{dtype:"int32"}}):i=Xr({inputs:{x:o},backend:e});let u=i.shape.length,p=y.parseAxisParam(s,i.shape),l=C.getAxesPermutation(p,u),m=p,c=i;l!=null&&(c=qt({inputs:{x:i},backend:e,attrs:{perm:l}}),m=C.getInnerMostAxes(m.length,u)),C.assertAxesAreInnerMostDims("sum",m,c.shape.length);let[d,f]=C.computeOutAndReduceShapes(c.shape,m),h=C.upcastType(c.dtype,"int32"),g=Jd(e,d,h),b=y.sizeFromShape(f),T=e.data.get(g.dataId).values,x=e.data.get(c.dataId).values;for(let I=0;I<T.length;++I){let k=I*b,w=0;for(let R=0;R<b;++R)w+=x[k+R];T[I]=w}if(a){let I=C.expandShapeToKeepDim(g.shape,p),k=g;g=Je({inputs:{x:g},backend:e,attrs:{shape:I}}),e.disposeIntermediateTensorInfo(k)}return e.disposeIntermediateTensorInfo(i),l!=null&&e.disposeIntermediateTensorInfo(c),g}var y$={kernelName:Xo,backendName:"cpu",kernelFunc:xu};function one(r){let{inputs:t,backend:e,attrs:n}=r,{equation:o}=n,s=t,{allDims:a,summedDims:i,idDims:u}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(a.length,u,s);let{path:p,steps:l}=C.getEinsumComputePath(i,u),m=l.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of l[h]){let{permutationIndices:b,expandDims:T}=C.getEinsumPermutation(d,u[g]),x;C.isIdentityPermutation(b)?x=s[g]:(x=qt({inputs:{x:s[g]},backend:e,attrs:{perm:b}}),f.push(x));let I=x.shape.slice();for(let k=0;k<T.length;++k)I.splice(T[k],0,1);y.arraysEqual(x.shape,I)||(x=Je({inputs:{x},backend:e,attrs:{shape:I}}),f.push(x)),c===null?c=x:(c=Ml({inputs:{a:x,b:c},backend:e}),f.push(c))}h<m-1&&(p[h]>=0&&(c=xu({inputs:{x:c},backend:e,attrs:{axis:p[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&e.disposeIntermediateTensorInfo(h);return c}var T$={kernelName:Ou,backendName:"cpu",kernelFunc:one};function sne(r){let{inputs:t,backend:e}=r,{dy:n,y:o}=t;J([n,o],"eluGrad");let s=new Float32Array(y.sizeFromShape(o.shape)),a=e.data.get(o.dataId).values,i=e.data.get(n.dataId).values;for(let u=0;u<a.length;++u){let p=a[u];p>=1?s[u]=i[u]:s[u]=i[u]*(p+1)}return e.makeTensorInfo(o.shape,"float32",s)}var x$={kernelName:Dm,backendName:"cpu",kernelFunc:sne};var ane=C.ERF_P,ine=C.ERF_A1,une=C.ERF_A2,pne=C.ERF_A3,lne=C.ERF_A4,mne=C.ERF_A5,cne=Re(Ui,r=>{let t=Math.sign(r),e=Math.abs(r),n=1/(1+ane*e);return t*(1-((((mne*n+lne)*n+pne)*n+une)*n+ine)*n*Math.exp(-e*e))}),I$={kernelName:Ui,backendName:"cpu",kernelFunc:cne};function uf(r){let{inputs:t,backend:e,attrs:n}=r,{input:o}=t,{dim:s}=n,a=o.shape.length,i=o.shape.slice(),u=s;return s<0&&(y.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),Je({inputs:{x:o},backend:e,attrs:{shape:i}})}var C$={kernelName:ds,backendName:"cpu",kernelFunc:uf};var dne=rt((r,t)=>r/t),eg=it(xo,dne),tg={kernelName:xo,backendName:"cpu",kernelFunc:eg};function kx(r,t,e){let n=r.shape,o=n[0],s=n[1],a=e.data.get(r.dataId),i=a.complexTensorInfos.real,u=a.complexTensorInfos.imag,p=[o,s],l=y.sizeFromShape(p),m=y.getTypedArrayFromDType("float32",l),c=y.getTypedArrayFromDType("float32",l);for(let g=0;g<o;g++){let b=Zs({inputs:{x:i},backend:e,attrs:{begin:[g,0],size:[1,s]}}),T=Zs({inputs:{x:u},backend:e,attrs:{begin:[g,0],size:[1,s]}}),x=Sr({inputs:{real:b,imag:T},backend:e}),{real:I,imag:k}=fne(x,t,e),w=C.mergeRealAndImagArrays(I,k);for(let R=0;R<s;R++){let F=C.getComplexWithIndex(w,R);m[g*s+R]=F.real,c[g*s+R]=F.imag}e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(T),e.disposeIntermediateTensorInfo(x)}let d=e.makeTensorInfo(p,"float32",m),f=e.makeTensorInfo(p,"float32",c),h=Sr({inputs:{real:d,imag:f},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),h}function fne(r,t,e){let n=y.sizeFromShape(r.shape),o=e.data.get(r.dataId),s=e.data.get(o.complexTensorInfos.real.dataId).values,a=e.data.get(o.complexTensorInfos.imag.dataId).values;if(hne(n)){let i=bN(s,a,n,t,e),u=[r.shape[0],r.shape[1]];if(t){let p=e.makeTensorInfo(u,"float32",i.real),l=e.makeTensorInfo(u,"float32",i.imag),m=e.makeTensorInfo([],"float32",y.createScalarValue(n,"float32")),c=Xr({inputs:{x:m},backend:e}),d=tg.kernelFunc({inputs:{a:p,b:m},backend:e}),f=tg.kernelFunc({inputs:{a:l,b:c},backend:e}),h=e.data.get(d.dataId).values,g=e.data.get(f.dataId).values;return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),{real:h,imag:g}}return i}else{let i=C.mergeRealAndImagArrays(s,a),u=gne(i,n,t);return C.splitRealAndImagArrays(u)}}function hne(r){return(r&r-1)===0}function bN(r,t,e,n,o){if(e===1)return{real:r,imag:t};let s=C.mergeRealAndImagArrays(r,t),a=e/2,i=C.complexWithEvenIndex(s),u=i.real,p=i.imag,l=[u.length],m=o.makeTensorInfo(l,"float32",u),c=o.makeTensorInfo(l,"float32",p),d=Sr({inputs:{real:m,imag:c},backend:o}),f=C.complexWithOddIndex(s),h=f.real,g=f.imag,b=[h.length],T=o.makeTensorInfo(b,"float32",h),x=o.makeTensorInfo(b,"float32",g),I=Sr({inputs:{real:T,imag:x},backend:o}),k=bN(u,p,a,n,o),w=k.real,R=k.imag,F=[w.length],P=o.makeTensorInfo(F,"float32",w),E=o.makeTensorInfo(F,"float32",R),B=Sr({inputs:{real:P,imag:E},backend:o}),G=bN(h,g,a,n,o),U=G.real,V=G.imag,W=[U.length],H=o.makeTensorInfo(W,"float32",U),j=o.makeTensorInfo(W,"float32",V),X=Sr({inputs:{real:H,imag:j},backend:o}),ee=C.exponents(e,n),ne=[ee.real.length],oe=o.makeTensorInfo(ne,"float32",ee.real),se=o.makeTensorInfo(ne,"float32",ee.imag),re=Sr({inputs:{real:oe,imag:se},backend:o}),ae=Ml({inputs:{a:re,b:X},backend:o}),ce=ki({inputs:{a:B,b:ae},backend:o}),ye=Qh({inputs:{a:B,b:ae},backend:o}),ke=qs({inputs:{input:ce},backend:o}),Fe=qs({inputs:{input:ye},backend:o}),Me=Si({inputs:{input:ce},backend:o}),Ve=Si({inputs:{input:ye},backend:o}),Z=Rp({inputs:[ke,Fe],backend:o,attrs:{axis:0}}),ft=Rp({inputs:[Me,Ve],backend:o,attrs:{axis:0}}),Ct=o.data.get(Z.dataId).values,Ye=o.data.get(ft.dataId).values;return o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(I),o.disposeIntermediateTensorInfo(P),o.disposeIntermediateTensorInfo(E),o.disposeIntermediateTensorInfo(B),o.disposeIntermediateTensorInfo(H),o.disposeIntermediateTensorInfo(j),o.disposeIntermediateTensorInfo(X),o.disposeIntermediateTensorInfo(oe),o.disposeIntermediateTensorInfo(se),o.disposeIntermediateTensorInfo(re),o.disposeIntermediateTensorInfo(ae),o.disposeIntermediateTensorInfo(ce),o.disposeIntermediateTensorInfo(ye),o.disposeIntermediateTensorInfo(ke),o.disposeIntermediateTensorInfo(Me),o.disposeIntermediateTensorInfo(Fe),o.disposeIntermediateTensorInfo(Ve),o.disposeIntermediateTensorInfo(Z),o.disposeIntermediateTensorInfo(ft),{real:Ct,imag:Ye}}function gne(r,t,e){let n=new Float32Array(t*2);for(let o=0;o<t;o++){let s=0,a=0;for(let i=0;i<t;i++){let u=C.exponent(o*i,t,e),p=C.getComplexWithIndex(r,i);s+=p.real*u.real-p.imag*u.imag,a+=p.real*u.imag+p.imag*u.real}e&&(s/=t,a/=t),C.assignToTypedArray(n,s,a,o)}return n}function bne(r){let{inputs:t,backend:e}=r,{input:n}=t,o=y.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=Je({inputs:{x:n},backend:e,attrs:{shape:[a,s]}}),u=kx(i,!1,e),p=Je({inputs:{x:u},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(u),p}var k$={kernelName:Rm,backendName:"cpu",kernelFunc:bne};function rg(r){let{backend:t,attrs:e}=r,{shape:n,value:o,dtype:s}=e,a=s||y.inferDtype(o),i=y.getArrayFromDType(a,y.sizeFromShape(n));return yne(i,o,a),t.makeTensorInfo(n,a,i)}var S$={kernelName:ii,backendName:"cpu",kernelFunc:rg};function yne(r,t,e){r.fill(t)}var v$={kernelName:da,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,o=e,s=y.getTypedArrayFromDType(n.dtype,y.sizeFromShape(n.shape)),[a,i,u,p]=n.shape,l=o.data.get(n.dataId).values;for(let c=0;c<a;c++){let d=c*u*i*p;for(let f=0;f<i;f++){let h=f*(u*p);for(let g=0;g<u;g++){let b=g*p;for(let T=0;T<p;T++){let x=Math.round(u-g-1),I=d+h+b+T,k=l[I];if(x>=0&&x<u){let w=x*p,R=d+h+w+T;k=l[R]}s[I]=k}}}}return{dataId:o.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var Tne=rt((r,t)=>Math.floor(r/t)),xne=it(So,Tne,null,"int32"),A$={kernelName:So,backendName:"cpu",kernelFunc:xne};function Ine(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:p,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=hN({inputs:{x:o,filter:s},backend:e,attrs:{strides:u,pad:p,dataFormat:l,dilations:m,dimRoundingMode:c}});if(a){let g=h;if(l==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){let b=Je({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});h=ki({inputs:{a:h,b},backend:e}),e.disposeIntermediateTensorInfo(b)}else h=ki({inputs:{a:h,b:a},backend:e});e.disposeIntermediateTensorInfo(g)}if(d){let g=h;if(l==="NCHW"&&d==="prelu"&&i.shape.length===1&&i.shape[0]!==1){let b=Je({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});h=Ol(e,h,d,b,f),e.disposeIntermediateTensorInfo(b)}else h=Ol(e,h,d,i,f);e.disposeIntermediateTensorInfo(g)}return h}var w$={kernelName:ws,backendName:"cpu",kernelFunc:Ine};function Cne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:p,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=gN({inputs:{x:o,filter:s},backend:e,attrs:{strides:u,pad:p,dataFormat:l,dilations:m,dimRoundingMode:c}});if(a){let g=h;h=ki({inputs:{a:h,b:a},backend:e}),e.disposeIntermediateTensorInfo(g)}if(d){let g=h;h=Ol(e,h,d,i,f),e.disposeIntermediateTensorInfo(g)}return h}var N$={kernelName:Ns,backendName:"cpu",kernelFunc:Cne};function kne(r){let{inputs:t,backend:e}=r,{params:n,indices:o}=t,s=y.sizeFromShape(n.shape),a=o.shape,i=a[a.length-1],[u,p,l,m]=C.prepareAndValidate(n,o);if(p===0)return e.makeTensorInfo(u,n.dtype,[]);let c=e.data.get(o.dataId).values,d=e.bufferSync(n),f=px(c,d,n.dtype,p,i,l,m,n.shape,s);return e.makeTensorInfo(u,n.dtype,f.values)}var D$={kernelName:fa,backendName:"cpu",kernelFunc:kne};function Sne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n;J([o,s],"gatherV2");let u=y.parseAxisParam(a,o.shape)[0],p=e.data.get(s.dataId).values,l=o.shape[u];for(let I=0;I<p.length;++I){let k=p[I];y.assert(k<=l-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${l-1}]`)}let m=i;i==null&&(m=0);let c=y.sizeFromShape(s.shape),d=C.segment_util.collectGatherOpShapeInfo(o,s,u,m),f=Je({inputs:{x:o},backend:e,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),h=Je({inputs:{x:s},backend:e,attrs:{shape:[d.batchSize,c/d.batchSize]}}),g=[d.batchSize,d.outerSize,c/d.batchSize,d.sliceSize],b=e.bufferSync(h),T=e.bufferSync(f),x=lx(T,b,g);return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),e.makeTensorInfo(d.outputShape,x.dtype,x.values)}var R$={kernelName:fs,backendName:"cpu",kernelFunc:Sne};function vne(r){let{inputs:t,backend:e}=r,{input:n}=t,o=y.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=Je({inputs:{x:n},backend:e,attrs:{shape:[a,s]}}),u=kx(i,!0,e),p=Je({inputs:{x:u},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(u),p}var F$={kernelName:Fm,backendName:"cpu",kernelFunc:vne};var Ane=Re(Wi,r=>Number.isFinite(r)?1:0,"bool"),P$={kernelName:Wi,backendName:"cpu",kernelFunc:Ane};var wne=Re(Ki,r=>Math.abs(r)===1/0?1:0,"bool"),M$={kernelName:Ki,backendName:"cpu",kernelFunc:wne};var Nne=Re(ga,r=>Number.isNaN(r)?1:0,"bool"),E$={kernelName:ga,backendName:"cpu",kernelFunc:Nne};function Dne(r){let{backend:t,attrs:e}=r,{start:n,stop:o,num:s}=e,a=mx(n,o,s);return t.makeTensorInfo([a.length],"float32",a)}var L$={kernelName:Pm,backendName:"cpu",kernelFunc:Dne};var Rne=Re(Vi,r=>Math.log1p(r)),_$={kernelName:Vi,backendName:"cpu",kernelFunc:Rne};var Fne=rt((r,t)=>r&&t),Pne=it(Ta,Fne,null,"bool"),$$={kernelName:Ta,backendName:"cpu",kernelFunc:Pne};var Mne=Re(xa,r=>r?0:1,"bool"),B$={kernelName:xa,backendName:"cpu",kernelFunc:Mne};var Ene=rt((r,t)=>r||t),Lne=it(Hi,Ene,null,"bool"),O$={kernelName:Hi,backendName:"cpu",kernelFunc:Lne};function _ne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{depthRadius:s,bias:a,alpha:i,beta:u}=n;J(o,"LRN");let p=o.shape[3],l=p-1,m=e.data.get(o.dataId).values,c=y.sizeFromShape(o.shape),d=new Float32Array(c);function f(h){let g=h%p,b=h-g+Math.max(0,g-s),T=h-g+Math.min(g+s,l),x=0;for(;b<=T;b++){let I=m[b];x+=I*I}return x}for(let h=0;h<c;h++){let g=f(h),b=m[h]*Math.pow(a+i*g,-u);d[h]=b}return e.makeTensorInfo(o.shape,o.dtype,d)}var z$={kernelName:Gu,backendName:"cpu",kernelFunc:_ne};function $ne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,y:s,dy:a}=t,{depthRadius:i,bias:u,alpha:p,beta:l}=n;J(a,"LRNGrad");let m=y.sizeFromShape(a.shape),c=a.shape[3],d=e.data.get(a.dataId).values,f=e.data.get(o.dataId).values,h=e.data.get(s.dataId).values,g=new Float32Array(m),b=m;for(let T=0;T<b;T++){let x=T%c,I=T-x+Math.max(0,x-i),k=T-x+Math.min(c,x+i+1),w=0;for(let R=I;R<k;R++)w+=Math.pow(f[R],2);w=p*w+u;for(let R=I;R<k;R++){let F=-2*p*l*f[R]*h[T]/w;T===R&&(F+=Math.pow(w,-l)),F*=d[T],g[R]+=F}}return e.makeTensorInfo(a.shape,o.dtype,g)}var G$={kernelName:Mm,backendName:"cpu",kernelFunc:$ne};function yN(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reductionIndices:s,keepDims:a}=n,i=e,u=o.shape,p=u.length,l=y.parseAxisParam(s,u),m=l,c=C.getAxesPermutation(m,p),d=i.data.get(o.dataId).values;if(c!=null){let I=new Array(p);for(let k=0;k<I.length;k++)I[k]=u[c[k]];d=rf(d,u,o.dtype,c,I),m=C.getInnerMostAxes(m.length,p),u=I}J(o,"max"),C.assertAxesAreInnerMostDims("max",m,p);let[f,h]=C.computeOutAndReduceShapes(u,m),g=y.sizeFromShape(h),b=cx(d,g,f,o.dtype),T=i.write(b,f,o.dtype),x=f;return a&&(x=C.expandShapeToKeepDim(f,l)),{dataId:T,shape:x,dtype:o.dtype}}var U$={kernelName:Do,backendName:"cpu",kernelFunc:yN};function Bne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;J(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,p=1;y.assert(C.eitherStridesOrDilationsAreOne(a,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${p}'`);let l=C.computePool2DInfo(o.shape,s,a,p,i,u),m;if(l.filterWidth===1&&l.filterHeight===1&&y.arraysEqual(l.inShape,l.outShape))m=Xr({inputs:{x:o},backend:e});else{let c=e.data.get(o.dataId).values,d=y.computeStrides(o.shape),f=af(c,o.shape,o.dtype,d,l,"max");m=e.makeTensorInfo(l.outShape,o.dtype,f.values)}return m}var W$={kernelName:Fo,backendName:"cpu",kernelFunc:Bne};function One(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:u,dataFormat:p}=n;J(o,"maxPool3d");let l=C.computePool3DInfo(o.shape,s,a,1,i,u,p),m=e.data.get(o.dataId).values,c=Cx(m,o.shape,o.dtype,y.computeStrides(o.shape),l,"max");return e.makeTensorInfo(c.shape,"float32",c.values)}var K$={kernelName:Uu,backendName:"cpu",kernelFunc:One};function zne(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,{filterSize:a,strides:i,pad:u,dimRoundingMode:p}=n;J([o,s],"maxPool3DGrad");let l=C.computePool3DInfo(s.shape,a,i,1,u,p),m=e.bufferSync(s),c=O_(m,l),d=l.strideDepth,f=l.strideHeight,h=l.strideWidth,g=l.dilationDepth,b=l.dilationHeight,T=l.dilationWidth,x=l.effectiveFilterDepth,I=l.effectiveFilterHeight,k=l.effectiveFilterWidth,w=x-1-l.padInfo.front,R=k-1-l.padInfo.left,F=I-1-l.padInfo.top,P=Te(s.shape,"float32"),E=e.bufferSync(o);for(let B=0;B<l.batchSize;++B)for(let G=0;G<l.inChannels;++G)for(let U=0;U<l.inDepth;++U)for(let V=0;V<l.inHeight;++V)for(let W=0;W<l.inWidth;++W){let H=U-w,j=V-F,X=W-R,ee=0;for(let ne=0;ne<x;ne+=g){let oe=(H+ne)/d;if(!(oe<0||oe>=l.outDepth||Math.floor(oe)!==oe))for(let se=0;se<I;se+=b){let re=(j+se)/f;if(!(re<0||re>=l.outHeight||Math.floor(re)!==re))for(let ae=0;ae<k;ae+=T){let ce=(X+ae)/h;if(ce<0||ce>=l.outWidth||Math.floor(ce)!==ce)continue;let ye=x*I*k-1-c.get(B,oe,re,ce,G),ke=ne*I*k+se*k+ae,Fe=ye===ke?1:0;if(Fe===0)continue;ee+=E.get(B,oe,re,ce,G)*Fe}}}P.set(ee,B,U,V,W,G)}return e.makeTensorInfo(P.shape,P.dtype,P.values)}var V$={kernelName:Lm,backendName:"cpu",kernelFunc:zne};function Gne(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s,output:a}=t,i=s;J([s,a],"maxPoolGrad");let{filterSize:u,strides:p,pad:l,dimRoundingMode:m}=n,c=C.computePool2DInfo(i.shape,u,p,1,l,m),d=e.data.get(i.dataId).values,f=Te(c.outShape,i.dtype,Ix(d,i.shape,i.dtype,c).values),h=c.strideHeight,g=c.strideWidth,b=c.dilationHeight,T=c.dilationWidth,x=c.effectiveFilterHeight,I=c.effectiveFilterWidth,k=I-1-c.padInfo.left,w=x-1-c.padInfo.top,R=Te(i.shape,"float32"),F=e.data.get(o.dataId).values,P=Te(o.shape,"float32",F);for(let E=0;E<c.batchSize;++E)for(let B=0;B<c.inChannels;++B)for(let G=0;G<c.inHeight;++G)for(let U=0;U<c.inWidth;++U){let V=G-w,W=U-k,H=0;for(let j=0;j<x;j+=b){let X=(V+j)/h;if(!(X<0||X>=c.outHeight||Math.floor(X)!==X))for(let ee=0;ee<I;ee+=T){let ne=(W+ee)/g;if(ne<0||ne>=c.outWidth||Math.floor(ne)!==ne)continue;let oe=x*I-1-f.get(E,X,ne,B),se=j*I+ee,re=oe===se?1:0;if(re===0)continue;H+=P.get(E,X,ne,B)*re}}R.set(H,E,G,U,B)}return e.makeTensorInfo(R.shape,R.dtype,R.values)}var H$={kernelName:Em,backendName:"cpu",kernelFunc:Gne};function q$(r,t,e,n,o){let s=y.computeStrides(t),a=af(r,t,e,s,o,"max"),i=Ix(r,t,e,o,!0,n);return[a.values,i.values]}var j$={kernelName:_m,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=t,u=e;J(n,"MaxPoolWithArgmax");let p=u.data.get(n.dataId).values,l=C.computePool2DInfo(n.shape,o,s,[1,1],a),[m,c]=q$(p,n.shape,n.dtype,i,l),d=u.write(m,l.outShape,n.dtype),f=u.write(c,l.outShape,n.dtype);return[{dataId:d,shape:l.outShape,dtype:n.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}};function Une(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n,i=y.parseAxisParam(s,o.shape),p=C.computeOutAndReduceShapes(o.shape,i)[1],l=y.sizeFromShape(p),m=[],c=e.makeTensorInfo([],"float32",new Float32Array([l]));m.push(c);let d=js({inputs:{x:o},backend:e,attrs:{dtype:"float32"}});m.push(d);let f=eg({inputs:{a:d,b:c},backend:e});m.push(f);let h=xu({inputs:{x:f},backend:e,attrs:{axis:s,keepDims:a}});return m.forEach(g=>e.disposeIntermediateTensorInfo(g)),h}var X$={kernelName:Po,backendName:"cpu",kernelFunc:Une};function Wne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;J(o,"min");let i=y.parseAxisParam(s,o.shape),u=i,p=C.getAxesPermutation(u,o.shape.length),l=o;p!=null&&(l=qt({inputs:{x:o},backend:e,attrs:{perm:p}}),u=C.getInnerMostAxes(u.length,o.shape.length)),C.assertAxesAreInnerMostDims("min",u,l.shape.length);let[m,c]=C.computeOutAndReduceShapes(l.shape,u),d=y.sizeFromShape(c),f=y.makeZerosTypedArray(y.sizeFromShape(m),l.dtype),h=e.data.get(l.dataId).values;for(let b=0;b<f.length;++b){let T=b*d,x=h[T];for(let I=0;I<d;++I){let k=h[T+I];(Number.isNaN(k)||k<x)&&(x=k)}f[b]=x}p!=null&&e.disposeIntermediateTensorInfo(l);let g=e.makeTensorInfo(m,l.dtype,f);if(a){let b=C.expandShapeToKeepDim(m,i),T=Je({inputs:{x:g},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(g),T}return g}var Y$={kernelName:Mo,backendName:"cpu",kernelFunc:Wne};function Kne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,mode:a}=n;J(o,"mirrorPad");let i=s.map((x,I)=>x[0]+o.shape[I]+x[1]),u=s.map(x=>x[0]),p=s.map((x,I)=>x[0]+o.shape[I]),l=a==="reflect"?0:1,m=e.data.get(o.dataId).values,c=o.shape.length,d=y.computeStrides(o.shape),f=y.sizeFromShape(i),h=i.length,g=y.computeStrides(i),b=y.getTypedArrayFromDType(o.dtype,f);for(let x=0;x<f;x++){let I=y.indexToLoc(x,h,g);for(let w=0;w<h;w++)I[w]<u[w]?I[w]=u[w]*2-I[w]-l:I[w]>=p[w]&&(I[w]=(p[w]-1)*2-I[w]+l);I=I.map((w,R)=>w-u[R]);let k=y.locToIndex(I,c,d);b[x]=m[k]}return{dataId:e.write(b,i,o.dtype),shape:i,dtype:o.dtype}}var Z$={kernelName:Lo,backendName:"cpu",kernelFunc:Kne};var Vne=rt((r,t)=>{let e=r%t;return r<0&&t<0||r>=0&&t>=0?e:(e+t)%t}),Hne=it(qi,Vne),Q$={kernelName:qi,backendName:"cpu",kernelFunc:Hne};var eB=dm(Ih());function TN(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{dim:s}=n,a=o.shape.length,i=s;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);let u=y.parseAxisParam([i],o.shape),p=yN({inputs:{x:o},backend:e,attrs:{reductionIndices:u,keepDims:!1}}),l=C.expandShapeToKeepDim(p.shape,u),m=Je({inputs:{x:p},backend:e,attrs:{shape:l}}),c=Qh({inputs:{a:o,b:m},backend:e}),d=Vw({inputs:{x:c},backend:e}),f=xu({inputs:{x:d},backend:e,attrs:{axis:u,keepDims:!1}}),h=Je({inputs:{x:f},backend:e,attrs:{shape:l}}),g=eg({inputs:{a:d,b:h},backend:e});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),g}var J$={kernelName:Yo,backendName:"cpu",kernelFunc:TN};function qne(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{numSamples:s,seed:a,normalized:i}=n;J(o,"multinomial");let u=i?o:TN({inputs:{logits:o},backend:e,attrs:{dim:-1}}),p=u.shape[0],l=u.shape[1],m=e.data.get(u.dataId).values,c=[p,s],d=y.makeZerosTypedArray(y.sizeFromShape(c),"int32");for(let f=0;f<p;++f){let h=f*l,g=new Float32Array(l-1);g[0]=m[h];for(let x=1;x<g.length;++x)g[x]=g[x-1]+m[h+x];let b=eB.alea(a.toString()),T=f*s;for(let x=0;x<s;++x){let I=b();d[T+x]=g.length;for(let k=0;k<g.length;k++)if(I<g[k]){d[T+x]=k;break}}}return i||e.disposeIntermediateTensorInfo(u),e.makeTensorInfo(c,"int32",d)}var tB={kernelName:$m,backendName:"cpu",kernelFunc:qne};var jne=yr.nonMaxSuppressionV3Impl;function Xne(r){let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=n;J(o,"NonMaxSuppression");let p=e.data.get(o.dataId).values,l=e.data.get(s.dataId).values,{selectedIndices:m}=jne(p,l,a,i,u);return e.makeTensorInfo([m.length],"int32",new Int32Array(m))}var rB={kernelName:Ca,backendName:"cpu",kernelFunc:Xne};var Yne=yr.nonMaxSuppressionV4Impl;function Zne(r){let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:p}=n;J(o,"NonMaxSuppressionPadded");let l=e.data.get(o.dataId).values,m=e.data.get(s.dataId).values,{selectedIndices:c,validOutputs:d}=Yne(l,m,a,i,u,p);return[e.makeTensorInfo([c.length],"int32",new Int32Array(c)),e.makeTensorInfo([],"int32",new Int32Array([d]))]}var nB={kernelName:ji,backendName:"cpu",kernelFunc:Zne};var Qne=yr.nonMaxSuppressionV5Impl;function Jne(r){let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:p}=n;J(o,"NonMaxSuppressionWithScore");let l=e.data.get(o.dataId).values,m=e.data.get(s.dataId).values,c=a,d=i,f=u,h=p,{selectedIndices:g,selectedScores:b}=Qne(l,m,c,d,f,h);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var oB={kernelName:ka,backendName:"cpu",kernelFunc:Jne};function eoe(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o}=t,{dtype:s,depth:a,onValue:i,offValue:u}=n;J(o,"oneHot");let p=y.sizeFromShape(o.shape),l=new Float32Array(p*a);l.fill(u);let m=e.data.get(o.dataId).values;for(let c=0;c<p;++c)m[c]>=0&&m[c]<a&&(l[c*a+m[c]]=i);return e.makeTensorInfo([...o.shape,a],s,l)}var sB={kernelName:Sa,backendName:"cpu",kernelFunc:eoe};function ng(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let o=qs({inputs:{input:n},backend:e}),s=ng({inputs:{x:o},backend:e}),a=Si({inputs:{input:n},backend:e}),i=ng({inputs:{x:a},backend:e}),u=Sr({inputs:{real:s,imag:i},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),u}else return rg({backend:e,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var aB={kernelName:Ss,backendName:"cpu",kernelFunc:ng};function iB(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let o=qs({inputs:{input:n},backend:e}),s=iB({inputs:{x:o},backend:e}),a=Si({inputs:{input:n},backend:e}),i=ng({inputs:{x:a},backend:e}),u=Sr({inputs:{real:s,imag:i},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),u}else return rg({backend:e,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var uB={kernelName:gs,backendName:"cpu",kernelFunc:iB};function xN(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n;if(t.length===1)return uf({inputs:{input:t[0]},backend:e,attrs:{dim:o}});let s=t[0].shape,a=t[0].dtype;t.forEach(l=>{y.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=t.map(l=>{let m=uf({inputs:{input:l},backend:e,attrs:{dim:o}});return i.push(m),m}),p=Rp({inputs:u,backend:e,attrs:{axis:o}});return i.forEach(l=>e.disposeIntermediateTensorInfo(l)),p}var pB={kernelName:bs,backendName:"cpu",kernelFunc:xN};function toe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,constantValue:a}=n;J(o,"pad");let i=s.map((T,x)=>T[0]+o.shape[x]+T[1]),u=s.map(T=>T[0]),p=e.data.get(o.dataId).values,l=y.sizeFromShape(o.shape),m=o.shape.length,c=y.computeStrides(o.shape),d=y.sizeFromShape(i),f=i.length,h=y.computeStrides(i),g=y.getTypedArrayFromDType(o.dtype,d);a!==0&&g.fill(a);for(let T=0;T<l;T++){let I=y.indexToLoc(T,m,c).map((w,R)=>w+u[R]),k=y.locToIndex(I,f,h);g[k]=p[T]}return{dataId:e.write(g,i,o.dtype),shape:i,dtype:o.dtype}}var Sx={kernelName:$o,backendName:"cpu",kernelFunc:toe};var roe=rt((r,t)=>Math.pow(r,t)),noe=it(Bo,roe),lB={kernelName:Bo,backendName:"cpu",kernelFunc:noe};function ooe(r){let{inputs:t,backend:e,attrs:n}=r,{paramsNestedSplits:o,paramsDenseValues:s,indices:a}=t,{outputRaggedRank:i}=n,u=o.map(b=>e.data.get(b.dataId).values),p=o.map(b=>b.shape),l=e.data.get(s.dataId).values,m=e.data.get(a.dataId).values,[c,d,f]=dx(u,p,l,s.shape,s.dtype,m,a.shape,i),h=c.map(b=>e.makeTensorInfo([b.length],"int32",b)),g=e.makeTensorInfo(f,s.dtype,d);return h.concat([g])}var mB={kernelName:Bm,backendName:"cpu",kernelFunc:ooe};function soe(r){let{inputs:t,backend:e,attrs:n}=r,{shape:o,values:s,defaultValue:a,rowPartitionTensors:i}=t,{rowPartitionTypes:u}=n,p=e.data.get(o.dataId).values,l=e.data.get(s.dataId).values,m=e.data.get(a.dataId).values,c=i.map(g=>e.data.get(g.dataId).values),d=i.map(g=>g.shape),[f,h]=fx(p,o.shape,l,s.shape,s.dtype,m,a.shape,c,d,u);return e.makeTensorInfo(f,s.dtype,h)}var cB={kernelName:Om,backendName:"cpu",kernelFunc:soe};function aoe(r){let{backend:t,attrs:e}=r,{start:n,stop:o,dtype:s,step:a}=e,i=El(n,o,a,s);return t.makeTensorInfo([i.length],s,i)}var dB={kernelName:ui,backendName:"cpu",kernelFunc:aoe};var ioe=Re(va,r=>1/r),fB={kernelName:va,backendName:"cpu",kernelFunc:ioe};function uoe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n;J(o,"resizeBilinear");let u=y.computeStrides(o.shape),[p,l]=i,[m,c,d,f]=o.shape,h=e.data.get(o.dataId).values,g=new Float32Array(y.sizeFromShape([m,p,l,f])),b=[s&&p>1?c-1:c,s&&l>1?d-1:d],T=[s&&p>1?p-1:p,s&&l>1?l-1:l],x=0,I=b[0]/T[0],k=b[1]/T[1];for(let w=0;w<m;w++)for(let R=0;R<p;R++){let F;a?F=I*(R+.5)-.5:F=I*R;let P=Math.max(0,Math.floor(F)),E=F-P,B=Math.min(c-1,Math.ceil(F)),G=w*u[0]+P*u[1],U=w*u[0]+B*u[1];for(let V=0;V<l;V++){let W;a?W=k*(V+.5)-.5:W=k*V;let H=Math.max(0,Math.floor(W)),j=W-H,X=Math.min(d-1,Math.ceil(W)),ee=G+H*u[2],ne=U+H*u[2],oe=G+X*u[2],se=U+X*u[2];for(let re=0;re<f;re++){let ae=h[ee+re],ce=h[ne+re],ye=h[oe+re],ke=h[se+re],Fe=ae+(ye-ae)*j,Me=ce+(ke-ce)*j,Ve=Fe+(Me-Fe)*E;g[x++]=Ve}}}return e.makeTensorInfo([m,p,l,f],"float32",g)}var hB={kernelName:Wo,backendName:"cpu",kernelFunc:uoe};function poe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:a}=n;J([s,o],"resizeBilinearGrad");let i=y.computeStrides(o.shape),[u,p,l,m]=o.shape,[,c,d]=s.shape,f=new Float32Array(u*p*l*m),h=[a&&c>1?p-1:p,a&&d>1?l-1:l],g=[a&&c>1?c-1:c,a&&d>1?d-1:d],b=h[0]/g[0],T=h[1]/g[1],x=e.data.get(s.dataId).values,I=0;for(let k=0;k<u;k++){let w=k*i[0];for(let R=0;R<c;R++){let F=R*b,P=Math.floor(F),E=Math.min(Math.ceil(F),p-1),B=w+P*i[1],G=w+E*i[1],U=F-P,V=1-U;for(let W=0;W<d;W++){let H=W*T,j=Math.floor(H),X=Math.min(Math.ceil(H),l-1),ee=H-j,ne=1-ee,oe=B+j*i[2],se=B+X*i[2],re=G+j*i[2],ae=G+X*i[2],ce=V*ne,ye=V*ee,ke=U*ne,Fe=U*ee;for(let Me=0;Me<m;Me++){let Ve=x[I++];f[oe+Me]+=Ve*ce,f[se+Me]+=Ve*ye,f[re+Me]+=Ve*ke,f[ae+Me]+=Ve*Fe}}}}return e.makeTensorInfo([u,l,p,m],"float32",f)}var gB={kernelName:Gm,backendName:"cpu",kernelFunc:poe};function loe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n;J(o,"resizeNearestNeighbor");let u=y.computeStrides(o.shape),[p,l]=i,[m,c,d,f]=o.shape,h=e.data.get(o.dataId).values,g=new Float32Array(m*p*l*f),b=[s&&p>1?c-1:c,s&&l>1?d-1:d],T=[s&&p>1?p-1:p,s&&l>1?l-1:l],x=b[0]/T[0],I=b[1]/T[1],k=0;for(let w=0;w<m;w++){let R=w*u[0];for(let F=0;F<p;F++){let P=a?x*(F+.5):x*F,E=Math.min(c-1,s?Math.round(P):Math.floor(P));a&&(E=Math.max(0,E));let B=R+E*u[1];for(let G=0;G<l;G++){let U=a?I*(G+.5):I*G,V=Math.min(d-1,s?Math.round(U):Math.floor(U));a&&(V=Math.max(0,V));let W=B+V*u[2];for(let H=0;H<f;H++){let j=h[W+H];g[k++]=j}}}}return e.makeTensorInfo([m,p,l,f],o.dtype,g)}var bB={kernelName:Uo,backendName:"cpu",kernelFunc:loe};function moe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:a}=n;J([s,o],"resizeNearestNeighborGrad");let i=y.computeStrides(o.shape),u=y.computeStrides(s.shape),[p,l,m,c]=o.shape,[,d,f]=s.shape,h=new Float32Array(p*l*m*c),g=e.data.get(s.dataId).values,b=[a&&d>1?l-1:l,a&&f>1?m-1:m],T=[a&&d>1?d-1:d,a&&f>1?f-1:f],x=b[0]/T[0],I=b[1]/T[1],k=1/x,w=1/I,R=Math.ceil(k)*2+2,F=Math.ceil(w)*2+2;for(let P=0;P<p;P++){let E=P*i[0];for(let B=0;B<l;B++){let G=E+B*i[1],U=Math.floor(B*k),V=Math.floor(U-R/2);for(let W=0;W<m;W++){let H=G+W*i[2],j=Math.floor(W*w),X=Math.floor(j-F/2);for(let ee=0;ee<c;ee++){let ne=0;for(let oe=0;oe<R;oe++){let se=oe+V;if(se<0||se>=d)continue;let re=E+se*u[1],ae=se*x,ce=Math.min(l-1,a?Math.round(ae):Math.floor(ae));if(B===ce)for(let ye=0;ye<F;ye++){let ke=ye+X;if(ke<0||ke>=f)continue;let Fe=re+ke*u[2],Me=ke*I,Ve=Math.min(m-1,a?Math.round(Me):Math.floor(Me));W===Ve&&(ne+=g[Fe+ee])}}h[H+ee]=ne}}}}return e.makeTensorInfo(o.shape,o.dtype,h)}var yB={kernelName:zm,backendName:"cpu",kernelFunc:moe};function coe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dims:s}=n;J(o,"reverse");let a=o.shape.length,i=y.parseAxisParam(s,o.shape);if(a===0)return Xr({inputs:{x:o},backend:e});let u=new ht(o.shape,o.dtype),p=e.bufferSync(o);for(let l=0;l<u.size;l++){let m=u.indexToLoc(l),c=m.slice();i.forEach(d=>c[d]=o.shape[d]-1-c[d]),u.set(p.get(...c),...m)}return e.makeTensorInfo(u.shape,u.dtype,u.values)}var TB={kernelName:Aa,backendName:"cpu",kernelFunc:coe};var xB={kernelName:Ea,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=t,i=e,u=y.getTypedArrayFromDType(n.dtype,y.sizeFromShape(n.shape)),[p,l,m,c]=n.shape,[d,f]=C.getImageCenter(a,l,m),h=255,g=Math.sin(o),b=Math.cos(o),T=i.data.get(n.dataId).values;for(let I=0;I<p;I++){let k=I*m*l*c;for(let w=0;w<l;w++){let R=w*(m*c);for(let F=0;F<m;F++){let P=F*c;for(let E=0;E<c;E++){let B=[p,w,F,E],G=B[2],U=B[1],V=(G-d)*b-(U-f)*g,W=(G-d)*g+(U-f)*b;V=Math.round(V+d),W=Math.round(W+f);let H=s;if(typeof s!="number"&&(E===3?H=h:H=s[E]),V>=0&&V<m&&W>=0&&W<l){let X=W*(m*c),ee=V*c,ne=k+X+ee+E;H=T[ne]}let j=k+R+P+E;u[j]=H}}}}return{dataId:i.write(u,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var doe=Re(wa,r=>{let t=Math.floor(r);return r-t<.5?Math.floor(r):r-t>.5?Math.ceil(r):t%2===0?t:t+1}),IB={kernelName:wa,backendName:"cpu",kernelFunc:doe};function foe(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,{sliceRank:i,numUpdates:u,sliceSize:p,strides:l,outputSize:m}=C.calculateShapes(s,o,a),c=!0,d=e.bufferSync(o),f=e.bufferSync(s),h=Tu(d,f,a,m,p,u,i,l,0,c);return e.makeTensorInfo(a,h.dtype,h.values)}var CB={kernelName:Na,backendName:"cpu",kernelFunc:foe};function hoe(r,t){let e=0,n=r.length,o=0;for(;e<n;)o=Math.floor((e+n)/2),r[o]<t?e=o+1:n=o;return n}function goe(r,t){let e=0,n=r.length,o=0;for(;e<n;)o=Math.floor((e+n)/2),r[o]<=t?e=o+1:n=o;return n}function kB(r,t,e,n,o,s){let a=y.getArrayFromDType("int32",e*o);for(let i=0;i<e;++i){let u=r.slice(i*n,(i+1)*n),p=i*o;for(let l=0;l<o;++l)a[p+l]=s==="left"?hoe(u,t[l+p]):goe(u,t[l+p])}return a}function boe(r){let{inputs:t,backend:e,attrs:n}=r,{sortedSequence:o,values:s}=t,{side:a}=n,i=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,p=kB(i,u,o.shape[0],o.shape[1],s.shape[1],a);return e.makeTensorInfo(s.shape,"int32",p)}var SB={kernelName:Um,backendName:"cpu",kernelFunc:boe};function yoe(r){let{inputs:t,backend:e}=r,{condition:n,t:o,e:s}=t;J([n,o,s],"select");let a=n.shape.length,i=e.data.get(n.dataId).values,u=e.data.get(o.dataId).values,p=e.data.get(s.dataId).values,l=Mt(o.dtype,s.dtype),m=y.makeZerosTypedArray(y.sizeFromShape(o.shape),l),c=0,d=a===0||a>1||o.shape.length===1?1:y.sizeFromShape(o.shape.slice(1));for(let f=0;f<i.length;f++)for(let h=0;h<d;h++)i[f]===1?m[c++]=u[f]:m[c++]=p[f];return e.makeTensorInfo(o.shape,l,m)}var vB={kernelName:Ts,backendName:"cpu",kernelFunc:yoe};var Toe=C.SELU_SCALEALPHA,xoe=C.SELU_SCALE,Ioe=Re(Xi,r=>r>=0?xoe*r:Toe*(Math.exp(r)-1)),AB={kernelName:Xi,backendName:"cpu",kernelFunc:Ioe};var Coe=Re(Yi,r=>r<0?-1:r>0?1:0),wB={kernelName:Yi,backendName:"cpu",kernelFunc:Coe};var koe=Re(Ho,r=>Math.sin(r)),NB={kernelName:Ho,backendName:"cpu",kernelFunc:koe};var Soe=Re(Da,r=>Math.sinh(r)),DB={kernelName:Da,backendName:"cpu",kernelFunc:Soe};var voe=11920928955078125e-23,RB=Math.log(voe)+2,Aoe=Re(Zi,r=>{let t=r>-RB,e=r<RB,n=Math.exp(r),o;return e?o=n:t?o=r:o=Math.log(1+n),o}),FB={kernelName:Zi,backendName:"cpu",kernelFunc:Aoe};function woe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,paddings:a}=n;J([o],"spaceToBatchND");let i=y.sizeFromShape(s),u=[[0,0]];u.push(...a);for(let w=1+s.length;w<o.shape.length;++w)u.push([0,0]);let p=Sx.kernelFunc({inputs:{x:o},backend:e,attrs:{paddings:u,constantValue:0}}),l=C.getReshaped(p.shape,s,i,!1),m=C.getPermuted(l.length,s.length,!1),c=C.getReshapedPermuted(p.shape,s,i,!1),h=Je({inputs:{x:p},backend:e,attrs:{shape:l}}),T=qt({inputs:{x:h},backend:e,attrs:{perm:m}}),k=Je({inputs:{x:T},backend:e,attrs:{shape:c}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(T),k}var PB={kernelName:Is,backendName:"cpu",kernelFunc:woe};function Noe(r){let{inputs:t,backend:e}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=e.data.get(n.dataId).values,u=e.data.get(o.dataId).values,p=e.data.get(s.dataId).values,l=e.data.get(a.dataId).values[0],[m,c,d,f,h]=hx(i,n.shape,n.dtype,u,o.dtype,p,l);return[e.makeTensorInfo(c,n.dtype,m),e.makeTensorInfo([c[0]],o.dtype,d),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),e.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var MB={kernelName:Ku,backendName:"cpu",kernelFunc:Noe};function Doe(r){let{inputs:t,backend:e}=r,{inputIndices:n,inputShape:o,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(e.data.get(o.dataId).values),i=e.data.get(n.dataId).values,u=Array.from(e.data.get(s.dataId).values),[p,l,m]=gx(i,n.shape,n.dtype,a,u);return[e.makeTensorInfo(l,n.dtype,p),e.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var EB={kernelName:Qi,backendName:"cpu",kernelFunc:Doe};function Roe(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let a=e.data.get(n.dataId).values,i=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,[p,l]=of(a,n.shape,n.dtype,i,u,!0);return e.makeTensorInfo(l,n.dtype,p)}var LB={kernelName:Vu,backendName:"cpu",kernelFunc:Roe};function Foe(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let a=e.data.get(n.dataId).values,i=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,[p,l]=of(a,n.shape,n.dtype,i,u);return e.makeTensorInfo(l,n.dtype,p)}var _B={kernelName:Hu,backendName:"cpu",kernelFunc:Foe};function Poe(r){let{inputs:t,backend:e,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=t,{outputShape:i}=n,{sliceRank:u,numUpdates:p,sliceSize:l,strides:m,outputSize:c}=C.calculateShapes(s,o,i),d=!1,f=e.bufferSync(o),h;switch(s.dtype){case"bool":{let g=e.bufferSync(s),b=Boolean(e.data.get(a.dataId).values[0]);h=Tu(f,g,i,c,l,p,u,m,b,d);break}case"float32":{let g=e.bufferSync(s),b=e.data.get(a.dataId).values[0];h=Tu(f,g,i,c,l,p,u,m,b,d);break}case"int32":{let g=e.bufferSync(s),b=e.data.get(a.dataId).values[0];h=Tu(f,g,i,c,l,p,u,m,b,d);break}case"string":{let g=e.bufferSync(s),b=y.decodeString(e.data.get(a.dataId).values[0]);h=Tu(f,g,i,c,l,p,u,m,b,d);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return e.makeTensorInfo(i,h.dtype,h.values)}var $B={kernelName:qu,backendName:"cpu",kernelFunc:Poe};function Moe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],u=C.prepareSplitSize(o,s,i),p=new Array(o.shape.length).fill(0),l=o.shape.slice();return u.map(m=>{let c=[...l];c[i]=m;let d=Zs({inputs:{x:o},backend:e,attrs:{begin:p,size:c}});return p[i]+=m,d})}var BB={kernelName:Cs,backendName:"cpu",kernelFunc:Moe};var OB={kernelName:pi,backendName:"cpu",kernelFunc:({inputs:r,backend:t})=>{let{x:e}=r,n=t;J(e,"square");let o=n.data.get(e.dataId).values,s=new Float32Array(o.length);for(let i=0;i<o.length;++i){let u=o[i];s[i]=u*u}return{dataId:n.write(s,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};var Eoe=Re(vs,(r,t)=>{let e=t;return isNaN(r)?NaN:r>0?1:e.alpha}),zB={kernelName:vs,backendName:"cpu",kernelFunc:Eoe};function Loe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i,beginMask:u,endMask:p,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n;J(o,"stridedSlice");let{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:T,end:x,strides:I}=Tt.sliceInfo(o.shape,s,a,i,u,p,l,m,c),k;if(h)k=Je({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let w=Tt.computeOutShape(T,x,I),R=Zs({inputs:{x:o},backend:e,attrs:{begin:T,size:w}});k=Je({inputs:{x:R},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(R)}else{let w=e.bufferSync(o),R=bx(d,w,I,T);k=e.makeTensorInfo(f,R.dtype,R.values)}return k}var GB={kernelName:Ra,backendName:"cpu",kernelFunc:Loe};function _oe(r){let{inputs:t,backend:e,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:p}=n,{data:l,dataSplits:m}=t,c=e.data.get(l.dataId).values,d=e.data.get(m.dataId).values,[f,h]=_l(c,d,o,s,a,i,u,p);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(m.shape,"int32",h)]}var UB={kernelName:li,backendName:"cpu",kernelFunc:_oe};function $oe(r){let{inputs:t,backend:e,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=e.data.get(s.dataId).values,u=e.data.get(a.dataId).values[0],[p,l,m]=$l(i,u,o),c=l.length;return[e.makeTensorInfo([c,2],"int32",p),e.makeTensorInfo([c],"string",l),e.makeTensorInfo([2],"int32",new Int32Array(m))]}var WB={kernelName:ju,backendName:"cpu",kernelFunc:$oe};function Boe(r){let{inputs:t,backend:e,attrs:n}=r,{numBuckets:o}=n,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=e.data.get(s.dataId).values,i=Bl(a,o);return e.makeTensorInfo(s.shape,"int32",i)}var KB={kernelName:Xu,backendName:"cpu",kernelFunc:Boe};var Ooe=Re(Fa,r=>Math.tan(r)),VB={kernelName:Fa,backendName:"cpu",kernelFunc:Ooe};var zoe=Re(Jo,r=>Math.tanh(r)),HB={kernelName:Jo,backendName:"cpu",kernelFunc:zoe};function Goe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reps:s}=n;J(o,"tile");let a=yx(e.bufferSync(o),s);return e.makeTensorInfo(a.shape,a.dtype,a.values)}var qB={kernelName:An,backendName:"cpu",kernelFunc:Goe};function Uoe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{k:s,sorted:a}=n;J(o,"topk");let i=e.data.get(o.dataId).values,[u,p]=Tx(i,o.shape,o.dtype,s,a);return[e.makeTensorInfo(u.shape,u.dtype,u.values),e.makeTensorInfo(p.shape,p.dtype,p.values)]}var jB={kernelName:Pa,backendName:"cpu",kernelFunc:Uoe};function Woe(r){let{inputs:t,attrs:e,backend:n}=r,{image:o,transforms:s}=t,{interpolation:a,fillMode:i,fillValue:u,outputShape:p}=e,[l,m,c,d]=o.shape,[f,h]=p??[m,c],g=[l,f,h,d],b=y.computeStrides(o.shape),T=b[0],x=b[1],I=b[2],k=y.computeStrides(g),w=k[0],R=k[1],F=k[2],P=y.getTypedArrayFromDType(o.dtype,y.sizeFromShape(g));P.fill(u);let E=n.data.get(o.dataId).values,B=n.data.get(s.dataId).values;for(let U=0;U<l;++U){let V=s.shape[0]===1?B:B.subarray(U*8,U*8+8);for(let W=0;W<f;++W)for(let H=0;H<h;++H)for(let j=0;j<d;++j){let X,ee=V[6]*H+V[7]*W+1;if(ee===0)continue;let ne=(V[0]*H+V[1]*W+V[2])/ee,oe=(V[3]*H+V[4]*W+V[5])/ee,se=XB(ne,c,i),re=XB(oe,m,i);switch(a){case"nearest":X=joe(E,m,c,T,x,I,U,re,se,j,u);break;case"bilinear":X=Xoe(E,m,c,T,x,I,U,re,se,j,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}let ae=U*w+W*R+H*F+j;P[ae]=X}return n.makeTensorInfo(g,o.dtype,P)}return{dataId:n.write(P,g,o.dtype),shape:o.shape,dtype:o.dtype}}var YB={kernelName:Ma,backendName:"cpu",kernelFunc:Woe};function XB(r,t,e){switch(e){case"reflect":return Koe(r,t);case"wrap":return Voe(r,t);case"nearest":return qoe(r,t);case"constant":default:return Hoe(r,t)}}function Koe(r,t){let e=r;if(e<0)if(t<=1)e=0;else{let n=2*t;e<n&&(e=n*Math.trunc(-e/n)+e),e=e<-t?e+n:-e-1}else if(e>t-1)if(t<=1)e=0;else{let n=2*t;e-=n*Math.trunc(e/n),e>=t&&(e=n-e-1)}return y.clamp(0,e,t-1)}function Voe(r,t){let e=r;if(e<0)if(t<=1)e=0;else{let n=t-1;e+=t*(Math.trunc(-e/n)+1)}else if(e>t-1)if(t<=1)e=0;else{let n=t-1;e-=t*Math.trunc(e/n)}return y.clamp(0,e,t-1)}function Hoe(r,t){return r}function qoe(r,t){return y.clamp(0,r,t-1)}function og(r,t,e,n,o,s,a,i,u,p,l){let m=a*n+i*o+u*s+p;return 0<=i&&i<t&&0<=u&&u<e?r[m]:l}function joe(r,t,e,n,o,s,a,i,u,p,l){let m=Math.round(i),c=Math.round(u);return og(r,t,e,n,o,s,a,m,c,p,l)}function Xoe(r,t,e,n,o,s,a,i,u,p,l){let m=Math.floor(i),c=Math.floor(u),d=m+1,f=c+1,h=(f-u)*og(r,t,e,n,o,s,a,m,c,p,l)+(u-c)*og(r,t,e,n,o,s,a,m,f,p,l),g=(f-u)*og(r,t,e,n,o,s,a,d,c,p,l)+(u-c)*og(r,t,e,n,o,s,a,d,f,p,l);return(d-i)*h+(i-m)*g}function Yoe(r){let{inputs:t,attrs:e,backend:n}=r,{axis:o}=e,{x:s}=t;J(s,"unique");let a=n.data.get(s.dataId).values,{outputValues:i,outputShape:u,indices:p}=xx(a,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,i),n.makeTensorInfo([p.length],"int32",p)]}var ZB={kernelName:Wm,backendName:"cpu",kernelFunc:Yoe};function Zoe(r){let{inputs:t,backend:e,attrs:n}=r,{value:o}=t,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape.length,i=o.shape[s],u=new Array(a-1),p=0;for(let d=0;d<a;d++)d!==s&&(u[p++]=o.shape[d]);let l=new Array(a).fill(0),m=o.shape.slice();m[s]=1;let c=new Array(i);for(let d=0;d<c.length;d++){l[s]=d;let f=Zs({inputs:{x:o},backend:e,attrs:{begin:l,size:m}});c[d]=Je({inputs:{x:f},backend:e,attrs:{shape:u}}),e.disposeIntermediateTensorInfo(f)}return c}var QB={kernelName:ks,backendName:"cpu",kernelFunc:Zoe};function Qoe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,segmentIds:s}=t,{numSegments:a}=n;J(o,"unsortedSegmentSum");let i=o.shape.length,u=s.shape.length,p=[],l=[],m=i-u,c=s;for(let f=0;f<m;++f){let h=uf({inputs:{input:c},backend:e,attrs:{dim:f+1}});c=h,l.push(h)}for(let f=0;f<a;++f){let h=y.createScalarValue(f,"int32"),g=e.makeTensorInfo([],"int32",h),b=Ww({inputs:{a:g,b:c},backend:e}),T=js({inputs:{x:b},backend:e,attrs:{dtype:"float32"}}),x=Ml({inputs:{a:T,b:o},backend:e}),I=xu({inputs:{x},backend:e,attrs:{axis:0,keepDims:!1}});p.push(I),l.push(g),l.push(b),l.push(T),l.push(x),l.push(I)}let d=xN({inputs:p,backend:e,attrs:{axis:0}});return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),d}var JB={kernelName:Yu,backendName:"cpu",kernelFunc:Qoe};var Joe=[A_,BL,w_,N_,WL,D_,R_,F_,P_,M_,E_,L_,__,$_,B_,z_,G_,U_,W_,v_,K_,V_,H_,q_,UL,KL,j_,OL,X_,Z_,Q_,J_,e$,t$,r$,n$,o$,s$,a$,i$,u$,p$,l$,m$,c$,d$,f$,h$,g$,b$,T$,T_,x$,VL,I$,HL,C$,qL,k$,S$,v$,jL,A$,w$,N$,D$,R$,XL,YL,zL,F$,Y_,P$,M$,E$,x_,ZL,QL,L$,JL,_$,$$,B$,O$,z$,G$,U$,e_,W$,K$,V$,H$,j$,X$,Y$,t_,Z$,Q$,tB,r_,n_,rB,nB,oB,o_,sB,uB,pB,Sx,lB,I_,a_,mB,cB,dB,GL,tg,fB,C_,k_,S_,hB,gB,bB,yB,TB,xB,IB,l_,CB,SB,vB,AB,c_,wB,NB,DB,d_,J$,FB,PB,MB,EB,LB,_B,$B,BB,h_,OB,g_,zB,GB,UB,WB,KB,b_,y$,VB,HB,qB,jB,YB,s_,ZB,QB,JB,aB];for(let r of Joe)Ji(r);var mf={};We(mf,{assertNotComplex:()=>Za,bindCanvasToFramebuffer:()=>use,bindColorTextureToFramebuffer:()=>ug,bindTextureToProgramUniformSampler:()=>_N,bindTextureUnit:()=>nO,bindVertexBufferToProgramAttribute:()=>Rx,callAndCheck:()=>Ie,canBeRepresented:()=>SN,createFragmentShader:()=>AN,createFramebuffer:()=>MN,createProgram:()=>wN,createStaticIndexBuffer:()=>RN,createStaticVertexBuffer:()=>DN,createTexture:()=>FN,createVertexShader:()=>vN,getBatchDim:()=>Cu,getExtensionOrThrow:()=>pf,getFramebufferErrorMessage:()=>oO,getMaxTexturesInShader:()=>ON,getNumChannels:()=>ase,getProgramUniformLocation:()=>LN,getProgramUniformLocationOrThrow:()=>EN,getRowsCols:()=>ku,getShapeAs3D:()=>pg,getTextureShapeFromLogicalShape:()=>$N,getWebGLDisjointQueryTimerVersion:()=>zN,getWebGLErrorMessage:()=>rO,getWebGLMaxTextureSize:()=>BN,hasExtension:()=>Zn,isCapableOfRenderingToFloatTexture:()=>GN,isDownloadFloatTextureEnabled:()=>UN,isReshapeFree:()=>Fp,isWebGLFenceEnabled:()=>WN,isWebGLVersionEnabled:()=>Px,linkProgram:()=>NN,logShaderSourceAndInfoLog:()=>Dx,resetMaxTextureSize:()=>pse,resetMaxTexturesInShader:()=>lse,unbindColorTextureFromFramebuffer:()=>Fx,unbindTextureUnit:()=>ise,validateFramebuffer:()=>lf,validateProgram:()=>ig,validateTextureSize:()=>PN});var zl={},vx={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function IN(r,t){zl[r]=t}function Yn(r,t){if(!(r in zl)||t!=null){let n=tse(r,t);if(n!==null)zl[r]=n;else return console.log("Could not get context for WebGL version",r),null}let e=zl[r];return e==null||e.isContextLost()?(delete zl[r],Yn(r)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),zl[r])}function ese(r){if(typeof OffscreenCanvas<"u"&&r===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function tse(r,t){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let e=t??ese(r);return e.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete zl[r]},!1),$().getBool("SOFTWARE_WEBGL_ENABLED")&&(vx.failIfMajorPerformanceCaveat=!1),r===1?e.getContext("webgl",vx)||e.getContext("experimental-webgl",vx):e.getContext("webgl2",vx)}function Gl(r,t){return[t,r]}function eO(r,t){return r*t}function sg(r){let t=y.sizeFromShape(r),e=Math.ceil(t/4);return y.sizeToSquarishShape(e)}function vi(r,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(r/2))]}function tO(r,t){let[e,n]=vi(r,t);return e*n*4}function ag(r,t){let e=r,n,o,s,a,i,u,p,l,m,c;return $().getNumber("WEBGL_VERSION")===2?(n=e.R32F,o=e.R16F,s=e.RGBA16F,a=e.RGBA32F,i=e.RED,p=4,l=1,m=e.HALF_FLOAT,c=e.FLOAT,u=e.RGBA8):(n=r.RGBA,o=r.RGBA,s=r.RGBA,a=e.RGBA,i=r.RGBA,p=4,l=4,m=t!=null?t.HALF_FLOAT_OES:null,c=r.FLOAT,u=r.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:p,defaultNumChannels:l,textureTypeHalfFloat:m,textureTypeFloat:c}}function Ie(r,t){let e=t();return $().getBool("DEBUG")&&rse(r),e}function rse(r){let t=r.getError();if(t!==r.NO_ERROR)throw new Error("WebGL Error: "+rO(r,t))}var nse=596e-10,ose=65504;function SN(r){return!!($().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||nse<Math.abs(r)&&Math.abs(r)<ose)}function rO(r,t){switch(t){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function pf(r,t){return Iu(r,()=>r.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function vN(r,t){let e=Iu(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ie(r,()=>r.shaderSource(e,t)),Ie(r,()=>r.compileShader(e)),r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function AN(r,t){let e=Iu(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ie(r,()=>r.shaderSource(e,t)),Ie(r,()=>r.compileShader(e)),$().get("ENGINE_COMPILE_ONLY"))return e;if(r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw Dx(t,r.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}var sse=/ERROR: [0-9]+:([0-9]+):/g;function Dx(r,t){let e=sse.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(r);return}let n=+e[1],o=r.split(`
`),s=o.length.toString().length+2,a=o.map((m,c)=>y.rightPad((c+1).toString(),s)+m),i=0;for(let m=0;m<a.length;m++)i=Math.max(a[m].length,i);let u=a.slice(0,n-1),p=a.slice(n-1,n),l=a.slice(n);console.log(u.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${y.rightPad(p[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function wN(r){return Iu(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function NN(r,t){if(Ie(r,()=>r.linkProgram(t)),!$().get("ENGINE_COMPILE_ONLY")&&r.getProgramParameter(t,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function ig(r,t){if(Ie(r,()=>r.validateProgram(t)),r.getProgramParameter(t,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function DN(r,t){let e=Iu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return Ie(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),Ie(r,()=>r.bufferData(r.ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function RN(r,t){let e=Iu(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return Ie(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e)),Ie(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function ase(){return $().getNumber("WEBGL_VERSION")===2?1:4}function FN(r){return Iu(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function PN(r,t){let e=$().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||t<=0){let n=`[${r}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(r>e||t>e){let n=`[${r}x${t}]`,o=`[${e}x${e}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+o+".")}}function MN(r){return Iu(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Rx(r,t,e,n,o,s,a){let i=r.getAttribLocation(t,e);return i===-1?!1:(Ie(r,()=>r.bindBuffer(r.ARRAY_BUFFER,n)),Ie(r,()=>r.vertexAttribPointer(i,o,r.FLOAT,!1,s,a)),Ie(r,()=>r.enableVertexAttribArray(i)),!0)}function nO(r,t,e){sO(r,e),Ie(r,()=>r.activeTexture(r.TEXTURE0+e)),Ie(r,()=>r.bindTexture(r.TEXTURE_2D,t))}function ise(r,t){sO(r,t),Ie(r,()=>r.activeTexture(r.TEXTURE0+t)),Ie(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function EN(r,t,e){return Iu(r,()=>r.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function LN(r,t,e){return r.getUniformLocation(t,e)}function _N(r,t,e,n){Ie(r,()=>nO(r,t,n)),Ie(r,()=>r.uniform1i(e,n))}function use(r){Ie(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,null)),Ie(r,()=>r.viewport(0,0,r.canvas.width,r.canvas.height)),Ie(r,()=>r.scissor(0,0,r.canvas.width,r.canvas.height))}function ug(r,t,e){Ie(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),Ie(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0))}function Fx(r,t){Ie(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),Ie(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function lf(r){let t=r.checkFramebufferStatus(r.FRAMEBUFFER);if(t!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+oO(r,t))}function oO(r,t){switch(t){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Iu(r,t,e){let n=Ie(r,()=>t());if(n==null)throw new Error(e);return n}function sO(r,t){let e=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=t+r.TEXTURE0;if(n<r.TEXTURE0||n>e){let o=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${o}.`)}}function Cu(r,t=2){return y.sizeFromShape(r.slice(0,r.length-t))}function ku(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function pg(r){let t=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(t=[Cu(r),...ku(r)]),t}function $N(r,t=!1){let e=$().getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=$().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&$().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=e/2),t&&(e=e*2,n=n*2,r=r.map((i,u)=>u>=r.length-2?y.nearestLargerEven(r[u]):r[u]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=y.squeezeShape(r).newShape);let o=y.sizeFromShape(r),s=null;r.length<=1&&o<=e?s=[1,o]:r.length===2&&r[0]<=e&&r[1]<=e?s=r:r.length===3&&r[0]*r[1]<=e&&r[2]<=e?s=[r[0]*r[1],r[2]]:r.length===3&&r[0]<=e&&r[1]*r[2]<=e?s=[r[0],r[1]*r[2]]:r.length===4&&r[0]*r[1]*r[2]<=e&&r[3]<=e?s=[r[0]*r[1]*r[2],r[3]]:r.length===4&&r[0]<=e&&r[1]*r[2]*r[3]<=e&&(s=[r[0],r[1]*r[2]*r[3]]);let a=s!=null&&Math.max(...s)>n&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(s==null||a)if(t){let i=Cu(r),u=2,p=2;r.length&&([u,p]=ku(r)),o=i*(u/2)*(p/2),s=y.sizeToSquarishShape(o).map(l=>l*2)}else s=y.sizeToSquarishShape(o);return s}function Ax(r){return r%2===0}function Fp(r,t){if(r=r.slice(-2),t=t.slice(-2),y.arraysEqual(r,t)||!r.length||!t.length||r[0]===0||r[1]===0||t[0]===0||t[1]===0)return!0;if(r.length!==t.length){let e=r.slice(-1)[0],n=t.slice(-1)[0];if(e===n||Ax(e)&&Ax(n)&&(r[0]===1||t[0]===1))return!0}return r[1]===t[1]&&Ax(r[0])&&Ax(t[0])}var wx,Nx;function BN(r){if(wx==null){let t=Yn(r);wx=t.getParameter(t.MAX_TEXTURE_SIZE)}return wx}function pse(){wx=null}function lse(){Nx=null}function ON(r){if(Nx==null){let t=Yn(r);Nx=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Nx)}function zN(r){if(r===0)return 0;let t,e=Yn(r);return Zn(e,"EXT_disjoint_timer_query_webgl2")&&r===2?t=2:Zn(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function Zn(r,t){return r.getExtension(t)!=null}function Px(r){try{if(Yn(r)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function GN(r){if(r===0)return!1;let t=Yn(r);if(r===1){if(!Zn(t,"OES_texture_float"))return!1}else if(!Zn(t,"EXT_color_buffer_float"))return!1;return kN(t)}function UN(r){if(r===0)return!1;let t=Yn(r);if(r===1){if(!Zn(t,"OES_texture_float")||!Zn(t,"WEBGL_color_buffer_float"))return!1}else{if(Zn(t,"EXT_color_buffer_float"))return kN(t);let n="EXT_color_buffer_half_float";if(Zn(t,n)){let o=t.getExtension(n);return mse(t,o)}return!1}return kN(t)}function kN(r){let t=ag(r),e=r.createTexture();r.bindTexture(r.TEXTURE_2D,e);let n=1,o=1;r.texImage2D(r.TEXTURE_2D,0,t.internalFormatFloat,n,o,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(e),r.deleteFramebuffer(s),a}function mse(r,t){let e=ag(r,t),n=r.createTexture();r.bindTexture(r.TEXTURE_2D,n);let o=1,s=1;r.texImage2D(r.TEXTURE_2D,0,e.internalFormatHalfFloat,o,s,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);let a=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,a),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,n,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(n),r.deleteFramebuffer(a),i}function WN(r){return r!==2?!1:Yn(r).fenceSync!=null}function Za(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&y.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var De=$();De.registerFlag("HAS_WEBGL",()=>De.getNumber("WEBGL_VERSION")>0);De.registerFlag("WEBGL_VERSION",()=>Px(2)?2:Px(1)?1:0);De.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);De.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>De.get("WEBGL_VERSION")===2);De.registerFlag("WEBGL_CPU_FORWARD",()=>!0);De.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);De.registerFlag("WEBGL_PACK",()=>De.getBool("HAS_WEBGL"));De.registerFlag("WEBGL_PACK_NORMALIZATION",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_CLIP",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_REDUCE",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_LAZILY_UNPACK",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_CONV_IM2COL",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>BN(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>ON(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=De.getNumber("WEBGL_VERSION");return r===0?0:zN(r)});De.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>De.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ju.isMobile());De.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>GN(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>De.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:De.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));De.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>UN(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_FENCE_API_ENABLED",()=>WN(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>De.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);De.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});De.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Ju.isMobile()?1:-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});De.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);De.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);De.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);De.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);De.registerFlag("WEBGL_EXP_CONV",()=>!1);De.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>De.getBool("IS_TEST"));De.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);De.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);De.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);function jt(){let r,t,e,n,o,s,a,i,u,p;return $().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",t="in",e="out",n="in",o="texture",s="outputColor",a="out vec4 outputColor;",i=$().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",p=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",t="attribute",e="varying",n="varying",o="texture2D",s="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,p=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:t,varyingVs:e,varyingFs:n,texture2D:o,output:s,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:u,defineRound:p}}function Qa(r,t,e="index"){let n=y.computeStrides(t);return n.map((o,s)=>{let a=`int ${r[s]} = ${e} / ${o}`,i=s===n.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * ${o}`:`index -= ${r[s]} * ${o}`;return`${a}; ${i};`}).join("")}function Ul(r,t,e="index"){let n=y.computeStrides(t);return n.map((o,s)=>{let a=`int ${r[s]} = ${e} / outShapeStrides[${s}]`,i=s===n.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * outShapeStrides[${s}]`:`index -= ${r[s]} * outShapeStrides[${s}]`;return`${a}; ${i};`}).join("")}function cse(r,t){let e=r.length,n=r.map(s=>`${t}[${s}]`),o=new Array(e-1);o[e-2]=n[e-1];for(let s=e-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function aO(r,t,e="index"){let n=r.map((s,a)=>a),o=cse(n,t);return o.map((s,a)=>{let i=`int ${r[a]} = ${e} / ${o[a]}`,u=a===o.length-1?`int ${r[a+1]} = ${e} - ${r[a]} * ${o[a]}`:`index -= ${r[a]} * ${o[a]}`;return`${i}; ${u};`}).join("")}function cf(r){let t=y.computeStrides(r).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function df(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var Mx=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:iO}=C;function uO(r,t,e){let n=[];if(r.forEach(d=>{let f=y.sizeFromShape(d.shapeInfo.logicalShape);if(d.shapeInfo.isUniform?n.push(`uniform float ${d.name}${f>1?`[${f}]`:""};`):(n.push(`uniform sampler2D ${d.name};`),n.push(`uniform int offset${d.name};`)),e.enableShapeUniforms){let{uniformShape:h}=Ex(e.packedInputs,d.shapeInfo.logicalShape,d.shapeInfo.texShape);switch(h.length){case 1:n.push(`uniform int ${d.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${d.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${d.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${d.name}Shape;`);break;default:break}n.push(`uniform ivec2 ${d.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break;default:break}n.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(d=>{n.push(`uniform ${d.type} ${d.name}${d.arrayIndex?`[${d.arrayIndex}]`:""};`)});let o=n.join(`
`),s=r.map(d=>dse(d,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),a=t.texShape,i=jt(),u=gse(i),p,l,m=Tse(i);return t.isPacked?(p=fse(t.logicalShape,a,e.enableShapeUniforms),l=yse(i)):(p=hse(t.logicalShape,a,e.enableShapeUniforms),l=bse(i)),e.packedInputs&&(m+=kse),[m,u,l,o,p,s,e.userCode].join(`
`)}function hf(r,t=!1){let e=r.shapeInfo.logicalShape;switch(e.length){case 0:return Lse(r,t);case 1:return $se(r,t);case 2:return Ose(r,t);case 3:return Gse(r,t);case 4:return Wse(r,t);case 5:return Kse(r);case 6:return Vse(r);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function pO(r,t){switch(r.shapeInfo.logicalShape.length){case 0:return Ese(r);case 1:return _se(r,t);case 2:return Bse(r,t);case 3:return zse(r,t);default:return Use(r,t)}}function dse(r,t,e=!1,n){let o="";e?o+=pO(r,n):o+=hf(r,n);let s=r.shapeInfo.logicalShape,a=t.logicalShape;return s.length<=a.length&&(e?o+=Hse(r,t):o+=qse(r,t)),o}function fse(r,t,e){switch(r.length){case 0:return lO();case 1:return Sse(r,t,e);case 2:return Pse(r,t,e);case 3:return Ase(r,t,e);default:return Nse(r,t,e)}}function hse(r,t,e){switch(r.length){case 0:return lO();case 1:return vse(r,t,e);case 2:return Mse(r,t,e);case 3:return wse(r,t,e);case 4:return Dse(r,t,e);case 5:return Rse(r,t);case 6:return Fse(r,t);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function gse(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function bse(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function yse(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function Tse(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${xse}
    ${Ise}
    ${Cse}
  `}var xse=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Ise=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Cse=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,kse=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function lO(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function Sse(r,t,e){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return n[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function vse(r,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function Ase(r,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(r[2]/2),s=o*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function wse(r,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Ul(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let n=Qa(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function Nse(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(r[r.length-1]/2),s=o*Math.ceil(r[r.length-2]/2),a=s,i="",u="b, r, c";for(let p=2;p<r.length-1;p++)a*=r[r.length-p-1],i=`
      int b${p} = index / ${a};
      index -= b${p} * ${a};
    `+i,u=`b${p}, `+u;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${i}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${r.length}(${u});
    }
  `}function Dse(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Ul(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let n=Qa(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function Rse(r,t){let e=Qa(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Fse(r,t){let e=Qa(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Pse(r,t,e){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(y.arraysEqual(r,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let o=Math.ceil(r[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function Mse(r,t,e){return y.arraysEqual(r,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:r[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function Wl(r){return`offset${r}`}function Ese(r){let t=r.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),n=jt();return`
    vec4 ${e}() {
      return ${n.texture2D}(${t}, halfCR);
    }
  `}function Lse(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;let[o,s]=r.shapeInfo.texShape;if(o===1&&s===1)return`
      float ${n}() {
        return sampleTexture(${e}, halfCR);
      }
    `;let a=Wl(e);if(t)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${a});
      return sampleTexture(${e}, uv);
    }
  `;let[i,u]=r.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${i}, ${u}, ${a});
      return sampleTexture(${e}, uv);
    }
  `}function _se(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),o=r.shapeInfo.texShape,s=jt();if(t)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${e}, uv);
    }
  `;let a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${s.texture2D}(${e}, uv);
    }
  `}function $se(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${gf(r)}
      }
    `;let o=r.shapeInfo.texShape,s=o[0],a=o[1];if(a===1&&s===1)return`
      float ${n}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;let i=Wl(e);return a===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);
        return sampleTexture(${e}, uv);
      }
    `:s===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${i});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});
      return sampleTexture(${e}, uv);
    }
  `}function Bse(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=s[0],i=s[1],u=jt();if(s!=null&&y.arraysEqual(e,s))return t?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${u.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${u.texture2D}(${n}, uv);
      }
    `;if(t)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `;let p=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],l=Math.ceil(e[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${p[0]}, ${p[1]}, row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `}function Ose(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape;if(s!=null&&y.arraysEqual(e,s)){if(t)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;let c=s[0],d=s[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${d}.0, ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:a,keptDims:i}=y.squeezeShape(e),u=a;if(u.length<e.length){let c=bf(r,u),d=["row","col"];return`
      ${hf(c,t)}
      float ${o}(int row, int col) {
        return ${o}(${yf(d,i)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${gf(r)}
      }
    `;let p=s[0],l=s[1],m=Wl(n);return l===1?t?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${p}.0);
      return sampleTexture(${n}, uv);
    }
  `:p===1?t?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:t?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${m};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${m};
    vec2 uv = uvFromFlat(${p}, ${l}, index);
    return sampleTexture(${n}, uv);
  }
`}function zse(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(e[0]===1){let c=e.slice(1),d=[1,2],f=bf(r,c),h=["b","row","col"];return`
        ${pO(f,t)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${yf(h,d)});
        }
      `}let i=jt();if(t)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `;let u=a[0],p=a[1],l=Math.ceil(e[2]/2),m=l*Math.ceil(e[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${p}, ${m}, ${l}, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `}function Gse(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[1]*e[2],a=e[2],{newShape:i,keptDims:u}=y.squeezeShape(e),p=i;if(p.length<e.length){let h=bf(r,p),g=["row","col","depth"];return`
        ${hf(h,t)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${yf(g,u)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${a}, 1)));
        ${gf(r)}
      }
    `;let l=r.shapeInfo.texShape,m=l[0],c=l[1],d=r.shapeInfo.flatOffset;if(c===s&&d==null)return t?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${c}.0, ${m}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(c===a&&d==null)return t?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${m}.0);
      return sampleTexture(${n}, uv);
    }
  `;let f=Wl(n);return t?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${a} + depth + ${f};
        vec2 uv = uvFromFlat(${m}, ${c}, index);
        return sampleTexture(${n}, uv);
      }
  `}function Use(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),o=jt();if(t)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${e}, uv);
    }
  `;let s=r.shapeInfo.logicalShape,a=s.length,i=r.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],p=u[0],l=u[1],m=Math.ceil(s[a-1]/2),c=m*Math.ceil(s[a-2]/2),d="int b, int row, int col",f=`b * ${c} + (row / 2) * ${m} + (col / 2)`;for(let h=2;h<a-1;h++)d=`int b${h}, `+d,c*=s[a-h-1],f=`b${h} * ${c} + `+f;return`
    vec4 ${n}(${d}) {
      int index = ${f};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${p});
      return ${o.texture2D}(${e}, uv);
    }
  `}function Wse(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[3],a=e[2]*s,i=e[1]*a,{newShape:u,keptDims:p}=y.squeezeShape(e);if(u.length<e.length){let T=bf(r,u),x=["row","col","depth","depth2"];return`
      ${hf(T,t)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${yf(x,p)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${s}, 1)));
        ${gf(r)}
      }
    `;let l=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1],f=`int stride2 = ${n}Shape[3];`,h=`int stride1 = ${n}Shape[2] * stride2;`,g=`int stride0 = ${n}Shape[1] * stride1;`;if(d===i&&l==null)return t?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${f}
        ${h}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(d===s&&l==null)return t?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;let b=Wl(n);return t?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${h}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${b});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${c}, ${d}, index + ${b});
      return sampleTexture(${n}, uv);
    }
  `}function Kse(r){let t=r.shapeInfo.logicalShape,e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),o=t[4],s=t[3]*o,a=t[2]*s,i=t[1]*a,{newShape:u,keptDims:p}=y.squeezeShape(t);if(u.length<t.length){let h=bf(r,u),g=["row","col","depth","depth2","depth3"];return`
      ${hf(h)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${yf(g,p)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${s}, ${o})) +
          depth3;
        ${gf(r)}
      }
    `;let l=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1];if(d===i&&l==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(d===o&&l==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${e}, uv);
      }
    `;let f=Wl(e);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${s} +
          depth2 * ${o} + depth3 + ${f};
      vec2 uv = uvFromFlat(${c}, ${d}, index);
      return sampleTexture(${e}, uv);
    }
  `}function Vse(r){let t=r.shapeInfo.logicalShape,e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:o,keptDims:s}=y.squeezeShape(t);if(o.length<t.length){let g=bf(r,o),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${hf(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${yf(b,s)});
      }
    `}let a=t[5],i=t[4]*a,u=t[3]*i,p=t[2]*u,l=t[1]*p;if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${p}, ${u}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${gf(r)}
      }
    `;let m=r.shapeInfo.flatOffset,c=r.shapeInfo.texShape,d=c[0],f=c[1];if(f===l&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${p}, ${u}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===a&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;let h=Wl(e);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${p} + depth * ${u} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${h};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function gf(r){let t=r.name,e=y.sizeFromShape(r.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function Hse(r,t){let e=r.name,n=e.charAt(0).toUpperCase()+e.slice(1),o="get"+n+"AtOutCoords",s=r.shapeInfo.logicalShape.length,a=t.logicalShape.length,i=iO(r.shapeInfo.logicalShape,t.logicalShape),u=Ue(a),p=a-s,l,m=["x","y","z","w","u","v"];s===0?l="":a<2&&i.length>=1?l="coords = 0;":l=i.map(T=>`coords.${m[T+p]} = 0;`).join(`
`);let c="";a<2&&s>0?c="coords":c=r.shapeInfo.logicalShape.map((T,x)=>`coords.${m[x+p]}`).join(", ");let d="return outputValue;",h=y.sizeFromShape(r.shapeInfo.logicalShape)===1,b=y.sizeFromShape(t.logicalShape)===1;if(s===1&&!h&&!b)d=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(h&&!b)a===1?d=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:d=`
        return vec4(outputValue.x);
      `;else if(i.length){let T=s-2,x=s-1;i.indexOf(T)>-1&&i.indexOf(x)>-1?d="return vec4(outputValue.x);":i.indexOf(T)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(x)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${u} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${n}(${c});
      ${d}
    }
  `}function qse(r,t){let e=r.name,n=e.charAt(0).toUpperCase()+e.slice(1),o="get"+n+"AtOutCoords",s=t.texShape,a=r.shapeInfo.texShape,i=r.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!r.shapeInfo.isUniform&&i===u&&r.shapeInfo.flatOffset==null&&y.arraysEqual(a,s))return`
      float ${o}() {
        return sampleTexture(${e}, resultUV);
      }
    `;let p=Ue(u),l=iO(r.shapeInfo.logicalShape,t.logicalShape),m=u-i,c,d=["x","y","z","w","u","v"];i===0?c="":u<2&&l.length>=1?c="coords = 0;":c=l.map(h=>`coords.${d[h+m]} = 0;`).join(`
`);let f="";return u<2&&i>0?f="coords":f=r.shapeInfo.logicalShape.map((h,g)=>`coords.${d[g+m]}`).join(", "),`
    float ${o}() {
      ${p} coords = getOutputCoords();
      ${c}
      return get${n}(${f});
    }
  `}function Ue(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function Ex(r,t,e){let{newShape:n,keptDims:o}=y.squeezeShape(t),s=t.length,a=r&&s===3&&t[0]===1,i=a?t.slice(1):n,u=!r&&s>1&&!y.arraysEqual(t,e)&&n.length<s||a;return{useSqueezeShape:u,uniformShape:u?i:t,keptDims:o}}function bf(r,t){let e=JSON.parse(JSON.stringify(r));return e.shapeInfo.logicalShape=t,e}function yf(r,t){return t.map(e=>r[e]).join(", ")}function cO(r,t,e,n){let o=e.map((l,m)=>{let c={logicalShape:l.shape,texShape:l.isUniform?null:l.texData.texShape,isUniform:l.isUniform,isPacked:l.isUniform?!1:l.texData.isPacked,flatOffset:null};return l.texData!=null&&l.texData.slice!=null&&l.texData.slice.flatOffset>0&&(c.flatOffset=l.texData.slice.flatOffset),{name:t.variableNames[m],shapeInfo:c}}),s=o.map(l=>l.shapeInfo),a={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},i=uO(o,a,t),u=AN(r.gl,i),p=r.createProgram(u);return $().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:i,webGLProgram:p,inShapeInfos:s,outShapeInfo:a,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:{program:t,fragmentShader:u,source:i,webGLProgram:p,inShapeInfos:s,outShapeInfo:a,...KN(r,t,p)}}function KN(r,t,e){let n={},o={},s={},a=[],i,u,p,l=null,m=null;m=r.getUniformLocation(e,"NAN",!1),$().getNumber("WEBGL_VERSION")===1&&(l=r.getUniformLocation(e,"INFINITY",!1));let c=!1;for(let d=0;d<t.variableNames.length;d++){let f=t.variableNames[d];n[f]=r.getUniformLocation(e,f,c),n[`offset${f}`]=r.getUniformLocation(e,`offset${f}`,c),t.enableShapeUniforms&&(o[`${f}Shape`]=r.getUniformLocation(e,`${f}Shape`,c),s[`${f}TexShape`]=r.getUniformLocation(e,`${f}TexShape`,c))}return t.enableShapeUniforms&&(i=r.getUniformLocation(e,"outShape",c),p=r.getUniformLocation(e,"outShapeStrides",c),u=r.getUniformLocation(e,"outTexShape",c)),t.customUniforms&&t.customUniforms.forEach((d,f)=>{a[f]=r.getUniformLocation(e,d.name,c)}),{uniformLocations:n,customUniformLocations:a,infLoc:l,nanLoc:m,inShapesLocations:o,inTexShapesLocations:s,outShapeLocation:i,outShapeStridesLocation:p,outTexShapeLocation:u}}function mO(r,t){if(r.length!==t.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${t.length} inputs`);r.forEach((e,n)=>{let o=e.logicalShape,s=t[n],a=s.shape;if(!y.arraysEqual(o,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${a} must match`);if(e.isUniform&&s.isUniform)return;let i=e.texShape,u=s.isUniform?null:s.texData.texShape;if(!y.arraysEqual(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)})}function dO(r,t,e,n,o){t.program.enableShapeUniforms||(mO(t.inShapeInfos,e),mO([t.outShapeInfo],[n]));let s=n.texData.texture,a=n.texData.texShape;n.texData.isPacked?r.setOutputPackedMatrixTexture(s.texture,a[0],a[1]):r.setOutputMatrixTexture(s.texture,a[0],a[1]),r.setProgram(t.webGLProgram),$().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&r.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&r.gl.uniform1f(t.nanLoc,NaN),e.forEach((u,p)=>{let l=t.program.variableNames[p],m=t.uniformLocations[l],c=t.uniformLocations[`offset${l}`],d=t.inShapesLocations[`${l}Shape`],f=t.inTexShapesLocations[`${l}TexShape`];if(d){let{uniformShape:h}=Ex(t.program.packedInputs,u.shape,u.texData.texShape);switch(h.length){case 1:r.gl.uniform1iv(d,new Int32Array(h));break;case 2:r.gl.uniform2iv(d,new Int32Array(h));break;case 3:r.gl.uniform3iv(d,new Int32Array(h));break;case 4:r.gl.uniform4iv(d,new Int32Array(h));break;default:break}}if(f&&r.gl.uniform2i(f,u.texData.texShape[0],u.texData.texShape[1]),m!=null){if(u.isUniform){if(y.sizeFromShape(u.shape)<2)r.gl.uniform1f(m,u.uniformValues[0]);else{let h=u.uniformValues;h instanceof Float32Array||(h=new Float32Array(h)),r.gl.uniform1fv(m,h)}return}u.texData.slice!=null&&c!=null&&r.gl.uniform1i(c,u.texData.slice.flatOffset),r.setInputMatrixTexture(u.texData.texture.texture,m,p)}});let i=t.outShapeLocation;if(i)switch(n.shape.length){case 1:r.gl.uniform1iv(i,new Int32Array(n.shape));break;case 2:r.gl.uniform2iv(i,new Int32Array(n.shape));break;case 3:r.gl.uniform3iv(i,new Int32Array(n.shape));break;case 4:r.gl.uniform4iv(i,new Int32Array(n.shape));break;default:break}if(t.outShapeStridesLocation){let u=y.computeStrides(n.shape);switch(n.shape.length){case 2:r.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(u));break;case 3:r.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(u));break;case 4:r.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(u));break;default:break}}t.outTexShapeLocation&&r.gl.uniform2i(t.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),t.program.customUniforms&&o&&t.program.customUniforms.forEach((u,p)=>{let l=t.customUniformLocations[p],m=o[p];if(u.type==="float")r.gl.uniform1fv(l,m);else if(u.type==="vec2")r.gl.uniform2fv(l,m);else if(u.type==="vec3")r.gl.uniform3fv(l,m);else if(u.type==="vec4")r.gl.uniform4fv(l,m);else if(u.type==="int")r.gl.uniform1iv(l,m);else if(u.type==="ivec2")r.gl.uniform2iv(l,m);else if(u.type==="ivec3")r.gl.uniform3iv(l,m);else if(u.type==="ivec4")r.gl.uniform4iv(l,m);else throw Error(`uniform type ${u.type} is not supported yet.`)}),r.executeProgram()}function fO(r,t,e){let n="";t.concat(e).forEach(a=>{let i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!a.isUniform){let u=a.texData.texShape,{useSqueezeShape:p,uniformShape:l,keptDims:m}=Ex(r.packedInputs,a.shape,u),c="",d="",f="";if(l.length===1&&r.packedInputs){let k=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];c=`${k[0]>1}_${k[1]>1}`}else if(l.length===2&&!r.packedInputs)d=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!r.packedInputs){let k=y.computeStrides(l);f=`${k[0]===u[1]}_${k[k.length-1]===u[1]}`}let h=a.shape.length,g=l.length===2&&y.arraysEqual(a.shape,u),b=y.sizeFromShape(a.shape)===1,T=C.getBroadcastDims(a.shape,e.shape),x=!r.packedInputs&&h===e.shape.length&&y.arraysEqual(u,e.texData.texShape),I=r.packedInputs||l.length>2?"":`${u[0]>1}_${u[1]>1}`;n+=`${h}_${x}_${p?m:""}_${l.length}_${b}_${T}_${g}_${c}_${d}_${f}_${I}_${i}`}else{let u=a.isUniform?"uniform":a.texData.texShape;n+=`${a.shape}_${u}_${i}`}});let o=r.userCode,s=r.constructor.name;return s+="_"+n+"_"+o+`${$().getNumber("WEBGL_VERSION")}`,s}function Nt(r){return $().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var Lx=class{constructor(t){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.outPackingScheme=0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=jt();this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Ul(["r","c","d"],t):Qa(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}};var _x=class{constructor(t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outPackingScheme=0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=jt();this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Ul(["r","c","d"],t):Qa(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}};var $x=class{constructor(t){this.variableNames=["A"];this.outTexUsage=3;let e=jt();this.outputShape=t,this.userCode=`
      ${Mx}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}};var Ox=class{constructor(t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outTexUsage=3;let e=jt();this.outputShape=t,this.userCode=`
      ${Mx}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}};var zx=class{constructor(t,e=!1){this.variableNames=["A"];this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=jt();this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length);let o="result";e&&(o="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?df():cf(t)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${o}, 0., 0., 0.);
      }
    `}};var Gx=class{constructor(t,e=!1){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=jt();this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length);let o="",s="result";e&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){let u=a*2+i;o+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?df():cf(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${n.output} = ${s};
        }
    `}};var iD={};We(iD,{bindVertexProgramAttributeStreams:()=>JN,createBufferFromOutputTexture:()=>rD,createFloat16MatrixTexture:()=>XN,createFloat16PackedMatrixTexture:()=>QN,createFloat32MatrixTexture:()=>jN,createIndexBuffer:()=>qN,createPackedMatrixTexture:()=>ZN,createUnsignedBytesMatrixTexture:()=>YN,createVertexBuffer:()=>HN,createVertexShader:()=>VN,downloadByteEncodedFloatMatrixFromOutputTexture:()=>oD,downloadFloat32MatrixFromBuffer:()=>nD,downloadMatrixFromPackedOutputTexture:()=>aD,downloadPackedMatrixFromBuffer:()=>sD,getInternalFormatForFloat16MatrixTexture:()=>Wx,getInternalFormatForFloat16PackedMatrixTexture:()=>Hx,getInternalFormatForFloat32MatrixTexture:()=>Ux,getInternalFormatForPackedMatrixTexture:()=>Vx,getInternalFormatForUnsignedBytesMatrixTexture:()=>Kx,uploadDenseMatrixToTexture:()=>eD,uploadPixelDataToTexture:()=>tD});function VN(r){let t=jt(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return vN(r,e)}function HN(r){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return DN(r,t)}function qN(r){let t=new Uint16Array([0,1,2,2,1,3]);return RN(r,t)}function lg(r,t,e,n,o,s){PN(t,e);let a=FN(r),i=r.TEXTURE_2D;return Ie(r,()=>r.bindTexture(i,a)),Ie(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),Ie(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),Ie(r,()=>r.texParameteri(i,r.TEXTURE_MIN_FILTER,r.NEAREST)),Ie(r,()=>r.texParameteri(i,r.TEXTURE_MAG_FILTER,r.NEAREST)),$().getNumber("WEBGL_VERSION")===1?Ie(r,()=>r.texImage2D(i,0,n,t,e,0,o,s,null)):Ie(r,()=>r.texStorage2D(i,1,n,t,e)),Ie(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:a,texShape:[e,t]}}function Ux(r){return r.internalFormatFloat}function jN(r,t,e,n){let[o,s]=Gl(t,e);return lg(r,o,s,Ux(n),n.textureFormatFloat,r.FLOAT)}function Wx(r){return r.internalFormatHalfFloat}function XN(r,t,e,n){let[o,s]=Gl(t,e);return lg(r,o,s,Wx(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function Kx(r){return r.downloadTextureFormat}function YN(r,t,e,n){let[o,s]=Gl(t,e);return lg(r,o,s,Kx(n),r.RGBA,r.UNSIGNED_BYTE)}function Vx(r){return r.internalFormatPackedFloat}function ZN(r,t,e,n){let[o,s]=vi(t,e);return lg(r,o,s,Vx(n),r.RGBA,r.FLOAT)}function Hx(r){return r.internalFormatPackedHalfFloat}function QN(r,t,e,n){let[o,s]=vi(t,e);return lg(r,o,s,Hx(n),r.RGBA,n.textureTypeHalfFloat)}function JN(r,t,e){return Ie(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),Rx(r,t,"clipSpacePos",e,3,20,0)&&Rx(r,t,"uv",e,2,20,12)}function eD(r,t,e,n,o,s){Ie(r,()=>r.bindTexture(r.TEXTURE_2D,t));let a,i,u;o instanceof Uint8Array?(a=new Uint8Array(e*n*4),i=r.UNSIGNED_BYTE,u=r.RGBA):(a=new Float32Array(e*n*4),i=r.FLOAT,u=s.internalFormatPackedFloat),a.set(o),$().getNumber("WEBGL_VERSION")===2?Ie(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e,n,r.RGBA,i,a)):Ie(r,()=>r.texImage2D(r.TEXTURE_2D,0,u,e,n,0,r.RGBA,i,a)),Ie(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function tD(r,t,e){Ie(r,()=>r.bindTexture(r.TEXTURE_2D,t)),e.data instanceof Uint8Array?$().getNumber("WEBGL_VERSION")===2?Ie(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e.width,e.height,r.RGBA,r.UNSIGNED_BYTE,e.data)):Ie(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,e.width,e.height,0,r.RGBA,r.UNSIGNED_BYTE,e.data)):$().getNumber("WEBGL_VERSION")===2?Ie(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,e)):Ie(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,e)),Ie(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function rD(r,t,e,n){let o=r.createBuffer();Ie(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,o));let i=4*4*t*e;return Ie(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,i,r.STREAM_READ)),Ie(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,0)),Ie(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),o}function nD(r,t,e){let n=r,o=new Float32Array(e);return n.bindBuffer(n.PIXEL_PACK_BUFFER,t),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,o),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),o}function oD(r,t,e,n){let[o,s]=Gl(t,e),a=4,i=new Uint8Array(eO(t*e,a));return Ie(r,()=>r.readPixels(0,0,o,s,n.downloadTextureFormat,r.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function sD(r,t,e,n,o,s,a,i){let u=r,p=new Float32Array(tO(s,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,p),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),p}function aD(r,t,e){let n=new Float32Array(t*e*4);return Ie(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,n)),n}var Kl=class{constructor(t){this.outputTexture=null;this.program=null;this.disposed=!1;this.vertexAttrsAreBound=!1;this.itemsToPoll=[];let e=$().getNumber("WEBGL_VERSION");t!=null?(this.gl=t,IN(e,t)):this.gl=Yn(e);let n="WEBGL_color_buffer_float",o="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),$().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=pf(this.gl,s),Zn(this.gl,a))this.textureHalfFloatExtension=pf(this.gl,a);else if($().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Zn(this.gl,o))this.colorBufferHalfFloatExtension=pf(this.gl,o);else if($().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Zn(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Zn(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=HN(this.gl),this.indexBuffer=qN(this.gl),this.framebuffer=MN(this.gl),this.textureConfig=ag(this.gl,this.textureHalfFloatExtension)}get debug(){return $().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let t=this.gl;Ie(t,()=>t.finish()),Ie(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Ie(t,()=>t.deleteFramebuffer(this.framebuffer)),Ie(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Ie(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Ie(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),jN(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),XN(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),YN(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),tD(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,o){this.throwIfDisposed(),eD(this.gl,t,e,n,o,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),QN(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),ZN(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Fx(this.gl,this.framebuffer),this.outputTexture=null),Ie(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>oD(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,o,s,a){return sD(this.gl,t,e,n,o,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return nD(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);let o=rD(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){let t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if($().getBool("WEBGL_FENCE_API_ENABLED")){let o=t,s=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{let a=o.clientWaitSync(s,0,0);return a===o.ALREADY_SIGNALED||a===o.CONDITION_SATISFIED},e=s}else $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>aD(this.gl,e,n))}createProgram(t){this.throwIfDisposed();let e=this.gl;this.vertexShader==null&&(this.vertexShader=VN(e));let n=wN(e);return Ie(e,()=>e.attachShader(n,this.vertexShader)),Ie(e,()=>e.attachShader(n,t)),NN(e,n),this.debug&&ig(e,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=JN(e,this.program,this.vertexBuffer)),n}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&Ie(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&ig(this.gl,this.program),Ie(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?EN(this.gl,t,e):LN(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Ie(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),_N(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();let[o,s]=vi(e,n);this.setOutputMatrixTextureDriver(t,o,s)}setOutputMatrixWriteRegion(t,e,n,o){this.setOutputMatrixWriteRegionDriver(n,t,o,e)}setOutputPackedMatrixWriteRegion(t,e,n,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&ig(this.gl,this.program),lf(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let t=this.gl;this.debug&&this.debugValidate(),Ie(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ie(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=pf(this.gl,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,s),s}let t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let e=this.gl,n=this.getQueryTimerExtensionWebGL2();e.endQuery(n.TIME_ELAPSED_EXT);return}let t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await y.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,$().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){let n=this.gl;return n.getQueryParameter(t,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(t,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(t,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),o=n.getQueryObjectEXT(t,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){let t=Yse(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){let{resolveFn:n}=this.itemsToPoll[e];n()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in $().platform&&(n=$().platform.setTimeoutCustom.bind($().platform)),y.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,n)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),ug(this.gl,t,this.framebuffer),this.debug&&lf(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(ug(this.gl,this.outputTexture,this.framebuffer),this.debug&&lf(this.gl)):Fx(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);let n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();let o=this.gl;ug(o,t,this.framebuffer),this.debug&&lf(o),this.outputTexture=t,Ie(o,()=>o.viewport(0,0,e,n)),Ie(o,()=>o.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,o){this.throwIfDisposed(),Ie(this.gl,()=>this.gl.scissor(t,e,n,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function Yse(r){let t=0;for(;t<r.length&&r[t]();++t);return t-1}var{addImpl:gO,bincountImpl:qx,bincountReduceImpl:bO,castImpl:yO,ceilImpl:TO,concatImpl:xO,equalImpl:IO,expImpl:CO,expm1Impl:kO,floorImpl:SO,gatherNdImpl:vO,gatherV2Impl:AO,greaterImpl:wO,greaterEqualImpl:NO,lessImpl:DO,lessEqualImpl:RO,linSpaceImpl:FO,logImpl:PO,maxImpl:MO,maximumImpl:EO,minimumImpl:LO,multiplyImpl:_O,negImpl:$O,notEqualImpl:BO,prodImpl:OO,raggedGatherImpl:zO,raggedTensorToTensorImpl:GO,rangeImpl:UO,rsqrtImpl:WO,scatterImpl:KO,sigmoidImpl:VO,simpleAbsImpl:jx,sliceImpl:HO,sparseFillEmptyRowsImpl:qO,sparseReshapeImpl:jO,sparseSegmentReductionImpl:Xx,sqrtImpl:XO,stridedSliceImpl:YO,stringNGramsImpl:ZO,stringSplitImpl:QO,stringToHashBucketFastImpl:JO,subImpl:ez,tileImpl:tz,topKImpl:rz,transposeImpl:Vl,uniqueImpl:nz}=sf;function uD(r,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${r}.${e}`)}function sr(r,t){return t===1?[r]:uD(r,t)}function oz(r,t){if(r===1)return"rc";let e="";for(let n=0;n<r;n++)e+=t[n],n<r-1&&(e+=",");return e}var Yx=class{constructor(t){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;if(this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=Nt(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=sr("rc",this.rank),n=Ue(this.rank),o=this.getOutOfBoundsCondition(e),s=this.getSetup(e),a=this.getOutput(e);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(t){let e=[];for(let n=0;n<=1;n++)for(let o=0;o<=1;o++){let s=`${n===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)s=`${t[t.length-1-a]},`+s;e.push(s)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let n=this.rank-2;n<this.rank;n++)e+=`${t[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";let e=t.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${o};
    `}getOutput(t){let e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}};var Tf=class{constructor(t,e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec3"}];this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length);let n="";for(let o=0;o<4;o++){let s="thisRC = rc;";o%2===1&&(s+="thisRC.z += 1;"),o>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${Zse(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?df():cf(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${n}

        setOutput(result);
      }
    `}};function Zse(r,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?aO(["r","c","d"],"inputShape"):Qa(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var Zx=class{constructor(t){this.gpgpu=t;this.numUsedTextures=0;this.numFreeTextures=0;this._numBytesAllocated=0;this._numBytesFree=0;this.freeTextures={};this.logEnabled=!1;this.usedTextures={}}acquireTexture(t,e,n){let o=az(e,n),s=iz(t,o,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let a=sz(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let u=this.freeTextures[s].shift();return this.usedTextures[s].push(u),u}let i;return o===3?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):o===4?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):o===1?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):o===0?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):o===2&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(t,e,n,o){if(this.freeTextures==null)return;let s=az(n,o),a=iz(e,s,o);a in this.freeTextures||(this.freeTextures[a]=[]);let i=sz(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,o),u=$().get("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let p=this.usedTextures[a],l=p.indexOf(t);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");p.splice(l,1),this.log()}log(){if(!this.logEnabled)return;let t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);let e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function Qse(r,t){let e=r;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===r.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function sz(r,t,e,n,o){let s=Jse(t,n),a;if(o){let[u,p]=vi(r[0],r[1]);a=u*p}else{let[u,p]=Gl(r[0],r[1]);a=u*p}let i=Qse(e,s);return a*i}function Jse(r,t){switch(r){case 3:return Vx(t);case 4:return Hx(t);case 1:return Ux(t);case 0:return Wx(t);case 2:return Kx(t);default:throw new Error(`Unknown physical texture type ${r}`)}}function eae(r){return $().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?3:1:r?4:0}function az(r,t){if(r===1)return 3;if(r===0||r==null)return eae(t);if(r===3||r===2)return 2;throw new Error(`Unknown logical texture type ${r}`)}function iz(r,t,e){return`${r[0]}_${r[1]}_${t}_${e}`}var an=class{constructor(t,e){this.variableNames=["A"];this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Tr="if (isnan(x)) return x;",uz="return x;",pD="return abs(x);";var pz="return (x >= 0.0) ? x : (exp(x) - 1.0);",lz=Tr+`
  return (x < 0.0) ? 0.0 : x;
`,mz=Tr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Hl="return x;",cz="return 1.0 / (1.0 + exp(-1.0 * x));";var fz="return x;",hz=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,gz=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,bz=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,yz="return 1.0 / (1.0 + exp(-1.0 * x));",as=class{constructor(t,e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var Qx=class{constructor(t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length);let e=t.length,n=sr("rc",e),o=Ue(e),s=oz(e,n),a=n.slice(-2),i=e<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}};var rae=yr.whereImpl,nae=1e-7,oae=1e-4,Jx={};function sae(r){return r in Jx||(Jx[r]={}),Jx[r]}var aae=$().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),iae=600;function uae(){return $().global.screen==null?1024:$().global.screen.height*$().global.screen.width*window.devicePixelRatio*iae/1024/1024}var lD=class extends ao{constructor(e){super();this.pendingRead=new WeakMap;this.pendingDisposal=new WeakSet;this.dataRefCount=new WeakMap;this.numBytesInGPU=0;this.uploadWaitMs=0;this.downloadWaitMs=0;this.lastGlFlushTime=0;this.warnedAboutMemory=!1;this.pendingDeletes=0;this.disposed=!1;if(!$().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let n;if(e!=null){if(e instanceof Kl)n=e;else{let o=Yn($().getNumber("WEBGL_VERSION"),e);n=new Kl(o)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let o=Yn($().getNumber("WEBGL_VERSION"));n=new Kl(o),this.binaryCache=sae($().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=n,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Zx(this.gpgpu),this.numMBBeforeWarning=uae(),this.texData=new oa(this,Rn())}nextDataId(){return lD.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,n,o){if(($().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||$().getBool("DEBUG"))&&this.checkNumericalProblems(e),o==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:n,dtype:o,values:e,usage:1,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let n=this.texData.get(e);n.refCount++}decRef(e){if(this.texData.has(e)){let n=this.texData.get(e);n.refCount--}}move(e,n,o,s,a){if($().getBool("DEBUG")&&this.checkNumericalProblems(n),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:o,dtype:s,values:n,usage:1,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let n=this.texData.get(e),{values:o,dtype:s,complexTensorInfos:a,slice:i,shape:u,isPacked:p}=n;if(i!=null){let d;p?d=new as(u,Hl):d=new an(u,Hl);let f=this.runWebGLProgram(d,[{dataId:e,shape:u,dtype:s}],s),h=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),h}if(o!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return o;let l=this.activeTimers!=null,m;l&&(m=y.now());let c;if(s==="complex64"){let d=this.readSync(a.real.dataId),f=this.readSync(a.imag.dataId);c=C.mergeRealAndImagArrays(d,f)}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=y.now()-m),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(g=>h.push(g))}let n=this.texData.get(e),{values:o,shape:s,slice:a,dtype:i,complexTensorInfos:u,isPacked:p}=n;if(a!=null){let h;p?h=new as(s,Hl):h=new an(s,Hl);let g=this.runWebGLProgram(h,[{dataId:e,shape:s,dtype:i}],i),b=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),b}if(o!=null)return this.convertAndCacheOnCPU(e);if($().getBool("DEBUG")&&!$().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&$().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,m;if(i!=="complex64"&&$().get("WEBGL_BUFFER_SUPPORTED")){m=this.decode(e);let h=this.texData.get(m.dataId);l=this.gpgpu.createBufferFromTexture(h.texture.texture,...sg(s))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let c;if(i==="complex64"){let h=await Promise.all([this.read(u.real.dataId),this.read(u.imag.dataId)]),g=h[0],b=h[1];c=C.mergeRealAndImagArrays(g,b)}else if(l==null)c=this.getValuesFromTexture(e);else{let h=y.sizeFromShape(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(l,h)}if(m!=null&&this.disposeIntermediateTensorInfo(m),l!=null){let h=this.gpgpu.gl;Ie(h,()=>h.deleteBuffer(l))}let d=this.convertAndCacheOnCPU(e,c),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(h=>h(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Rn().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,n={}){let o=this.texData.get(e),{values:s,shape:a,slice:i,dtype:u,isPacked:p,texture:l}=o;if(u==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let f;p?f=new as(a,Hl):f=new an(a,Hl);let h=this.runWebGLProgram(f,[{dataId:e,shape:a,dtype:u}],u),g=this.readToGPU(h,n);return this.disposeIntermediateTensorInfo(h),g}if(l==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let m=this.decode(e,n.customTexShape),c=Rn().makeTensorFromTensorInfo(m),d=this.texData.get(m.dataId);return{tensorRef:c,...d.texture}}bufferSync(e){let n=this.readSync(e.dataId);if(e.dtype==="string")try{let o=n.map(s=>y.decodeString(s));return Te(e.shape,e.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Te(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let n=0;n<e.length;n++){let o=e[n];if(!SN(o))throw $().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${o} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${o} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:n,dtype:o,isPacked:s}=this.texData.get(e),a=y.sizeFromShape(n);if($().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let d=this.decode(e),f=this.texData.get(d.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...sg(n)).subarray(0,a);return this.disposeIntermediateTensorInfo(d),h}let i=$().getBool("WEBGL_PACK")&&s===!0,u=i?pg(n):n,p=i?new Ox(u):new $x(u),l=this.runWebGLProgram(p,[{shape:u,dtype:o,dataId:e}],"float32"),m=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(m.texture.texture,m.texShape[0],m.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let n=this.activeTimers,o=[],s=!1;this.programTimersStack==null?(this.programTimersStack=o,s=!0):this.activeTimers.push(o),this.activeTimers=o,e();let a=y.flatten(this.activeTimers.map(p=>p.query)).filter(p=>p!=null),i=y.flatten(this.activeTimers.map(p=>p.name)).filter(p=>p!=null);this.activeTimers=n,s&&(this.programTimersStack=null);let u={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let p=await Promise.all(a);u.kernelMs=y.sum(p),u.getExtraProfileInfo=()=>p.map((l,m)=>({name:i[m],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else u.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,u})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:y.now(),endMs:null}}endTimer(e){return $().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=y.now(),e)}async getQueryTime(e){if($().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let n=e;return n.endMs-n.startMs}disposeData(e,n=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(n?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!n&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:o}=this.texData.get(e);return o!=null&&(this.disposeData(o.real.dataId,n),this.disposeData(o.imag.dataId,n)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:n,dtype:o,texShape:s,usage:a,isPacked:i,slice:u}=this.texData.get(e),p=u&&u.origDataId||e,l=this.dataRefCount.get(p);l>1?this.dataRefCount.set(p,l-1):(this.dataRefCount.delete(p),n!=null&&(this.numBytesInGPU-=this.computeBytes(s,o),this.textureManager.releaseTexture(n,s,a,i)));let m=this.texData.get(e);m.texture=null,m.texShape=null,m.isPacked=!1,m.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,n=aae){return $().getBool("WEBGL_CPU_FORWARD")&&e.every(o=>this.texData.get(o.dataId).texture==null&&y.sizeFromShape(o.shape)<n)}getGPGPUContext(){return this.gpgpu}where(e){C.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let n=e.dataSync();return rae(e.shape,n)}packedUnaryOp(e,n,o){let s=new as(e.shape,n),a=this.compileAndRun(s,[e],o);return Rn().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let s=jx(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if($().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,pD,e.dtype);let n=new an(e.shape,pD),o=this.compileAndRun(n,[e]);return Rn().makeTensorFromTensorInfo(o)}makeTensorInfo(e,n,o){let s;if(n==="string"&&o!=null&&o.length>0&&y.isString(o[0])){let a=o.map(i=>y.encodeString(i));s=this.write(a,e,n)}else s=this.write(o,e,n);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:n}}makeOutput(e,n,o){return Rn().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,o),this)}unpackTensor(e){let n=new Qx(e.shape);return this.runWebGLProgram(n,[e],e.dtype)}packTensor(e){let n=new Yx(e.shape),o=!0;return this.runWebGLProgram(n,[e],e.dtype,null,o)}packedReshape(e,n){let o=[Cu(e.shape),...ku(e.shape)],s={dtype:e.dtype,shape:o,dataId:e.dataId},a=[Cu(n),...ku(n)],i=new Tf(a,o),u=!0,p=[o],l=this.runWebGLProgram(i,[s],e.dtype,p,u);return{dataId:l.dataId,shape:n,dtype:l.dtype}}decode(e,n){let o=this.texData.get(e),{isPacked:s,shape:a,dtype:i}=o;if(n!=null){let d=y.sizeFromShape(a),f=n[0]*n[1]*4;y.assert(d<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let u=pg(a),p;s?p=new _x(u):p=new Lx(u);let l=!0,m=[n??sg(u)],c=this.runWebGLProgram(p,[{shape:u,dtype:i,dataId:e}],i,m,l,n);return{dtype:i,shape:a,dataId:c.dataId}}runWebGLProgram(e,n,o,s,a=!1,i){let u=this.makeTensorInfo(e.outputShape,o),p=this.texData.get(u.dataId);if(e.packedOutput&&(p.isPacked=!0),e.outPackingScheme===0){let T=i??sg(e.outputShape);p.texShape=T.map(x=>x*2)}if(e.outTexUsage!=null&&(p.usage=e.outTexUsage),y.sizeFromShape(u.shape)===0)return p.values=y.getTypedArrayFromDType(u.dtype,0),u;let l=[],m=n.map(T=>{if(T.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(T.dataId);if(x.texture==null){if(!e.packedInputs&&y.sizeFromShape(T.shape)<=$().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:T.shape,texData:null,isUniform:!0,uniformValues:x.values};e.packedInputs&&(x.isPacked=!0,x.shape=T.shape)}if(this.uploadToGPU(T.dataId),!!x.isPacked!=!!e.packedInputs)T=x.isPacked?this.unpackTensor(T):this.packTensor(T),l.push(T),x=this.texData.get(T.dataId);else if(x.isPacked&&!Fp(x.shape,T.shape)){let I=T,k=T.shape;T.shape=x.shape,T=this.packedReshape(T,k),l.push(T),x=this.texData.get(T.dataId),I.shape=k}return{shape:T.shape,texData:x,isUniform:!1}});this.uploadToGPU(u.dataId);let c={shape:u.shape,texData:p,isUniform:!1},d=fO(e,m,c),f=this.getAndSaveBinary(d,()=>cO(this.gpgpu,e,m,c)),h=this.activeTimers!=null,g;h&&(g=this.startTimer()),$().get("ENGINE_COMPILE_ONLY")||dO(this.gpgpu,f,m,c,s),l.forEach(T=>this.disposeIntermediateTensorInfo(T)),h&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));let b=$().get("WEBGL_FLUSH_THRESHOLD");if(b>0){let T=y.now();T-this.lastGlFlushTime>b&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=T)}if(!$().getBool("WEBGL_LAZILY_UNPACK")&&p.isPacked&&a===!1){let T=this.unpackTensor(u);return this.disposeIntermediateTensorInfo(u),T}return u}compileAndRun(e,n,o,s,a=!1){return o=o||n[0].dtype,this.runWebGLProgram(e,n,o,s,a)}getAndSaveBinary(e,n){return e in this.binaryCache||(this.binaryCache[e]=n()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||($().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(n=>{this.gpgpu.deleteProgram(this.binaryCache[n].webGLProgram),delete this.binaryCache[n]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=z(()=>{if(!$().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=$().getBool("DEBUG");$().set("DEBUG",!1);let n=this.abs(de(1e-8)).dataSync()[0];if($().set("DEBUG",e),n>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?nae:oae}uploadToGPU(e){let n=this.texData.get(e),{shape:o,dtype:s,values:a,texture:i,usage:u,isPacked:p}=n;if(i!=null)return;let l=this.activeTimers!=null,m;l&&(m=y.now());let c=n.texShape;if(c==null&&(c=$N(o,p),n.texShape=c),a!=null){let d=pg(o),f,h=c[1],g=c[0],b=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(p||!b)&&([h,g]=vi(c[0],c[1])),p?f=new Gx(d,b):f=new zx(d,b);let T=b?[g,h]:c,x=this.makeTensorInfo(T,s),I=this.texData.get(x.dataId);b?I.usage=2:I.usage=1,I.texShape=T,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),h,g,a);let k=[[g,h]],w=!0,R=this.runWebGLProgram(f,[x],s,k,w),F=this.texData.get(R.dataId);n.texShape=F.texShape,n.isPacked=F.isPacked,n.usage=F.usage,$().get("ENGINE_COMPILE_ONLY")?this.disposeData(R.dataId):(n.texture=F.texture,n.values=null,this.texData.delete(R.dataId)),this.disposeIntermediateTensorInfo(x),l&&(this.uploadWaitMs+=y.now()-m)}else{let d=this.acquireTexture(c,u,s,p);n.texture=d}}convertAndCacheOnCPU(e,n){let o=this.texData.get(e),{dtype:s}=o;return this.releaseGPUData(e),n!=null&&(o.values=pae(n,s)),o.values}acquireTexture(e,n,o,s){if(this.numBytesInGPU+=this.computeBytes(e,o),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${a} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,n,s)}computeBytes(e,n){return e[0]*e[1]*y.bytesPerElement(n)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,n]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(n));return Promise.all(e)}else{for(let[,n]of Object.entries(this.binaryCache)){let o=new Promise(s=>{try{this.checkCompletion_(n),s(!0)}catch(a){throw a}});e.push(o)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Sh(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Dx(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:n,customUniformLocations:o,infLoc:s,nanLoc:a,inShapesLocations:i,inTexShapesLocations:u,outShapeLocation:p,outShapeStridesLocation:l,outTexShapeLocation:m}=KN(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=n,e.customUniformLocations=o,e.infLoc=s,e.nanLoc=a,e.inShapesLocations=i,e.inTexShapesLocations=u,e.outShapeLocation=p,e.outShapeStridesLocation=l,e.outTexShapeLocation=m}}},xf=lD;xf.nextDataId=0;function pae(r,t){if(t==="float32"||t==="complex64")return r;if(t==="int32"||t==="bool"){let e=t==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let n=0;n<e.length;++n)e[n]=Math.round(r[n]);return e}else throw new Error(`Unknown dtype ${t}`)}var lae="0.0.0";function Tz(){$().set("WEBGL_FORCE_F16_TEXTURES",!0)}Ju.isBrowser()&&rp("webgl",()=>new xf,2);var i8t={forceHalfFloat:Tz};var If=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var is=class{constructor(t,e,n){this.variableNames=["A","B"];this.outputShape=C.assertAndGetBroadcastShape(e,n),this.enableShapeUniforms=Nt(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var Ai=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;var Qs=class{constructor(t,e,n,o=!1){this.variableNames=["A","B"];this.supportsBroadcasting=!0;this.packedInputs=!0;this.packedOutput=!0;this.outputShape=C.assertAndGetBroadcastShape(e,n);let s=this.outputShape.length;this.enableShapeUniforms=Nt(s);let a="";if(o)if(s===0||y.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Ue(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let u=sr("coords",s);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function ar(r){let{inputs:t,backend:e}=r,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var xz={kernelName:Un,backendName:"webgl",kernelFunc:ar};function _n(r){let{inputs:t,backend:e}=r,{real:n,imag:o}=t,s=e.makeTensorInfo(n.shape,"complex64"),a=e.texData.get(s.dataId),i=ar({inputs:{x:n},backend:e}),u=ar({inputs:{x:o},backend:e});return a.complexTensorInfos={real:i,imag:u},s}var Iz={kernelName:Lu,backendName:"webgl",kernelFunc:_n};var mD="return (a < 0.) ? b * a : a;",cD=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function mae(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{alpha:s}=n,a=e.makeTensorInfo([],"float32",y.createScalarValue(s,"float32")),i=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Qs(cD,o.shape,a.shape):new is(mD,o.shape,a.shape),u=e.runWebGLProgram(i,[o,a],"float32");return e.disposeIntermediateTensorInfo(a),u}var Cz={kernelName:wo,backendName:"webgl",kernelFunc:mae};var dD="return (a < 0.) ? b * a : a;",fD=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function cae(r){let{inputs:t,backend:e}=r,{x:n,alpha:o}=t,s=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Qs(fD,n.shape,o.shape):new is(dD,n.shape,o.shape);return e.runWebGLProgram(s,[n,o],"float32")}var kz={kernelName:Oo,backendName:"webgl",kernelFunc:cae};var Js="if (isnan(x)) return x;";function Se({opSnippet:r,packedOpSnippet:t,cpuKernelImpl:e,dtype:n}){return({inputs:o,backend:s})=>{let{x:a}=o,i=s,u=n||a.dtype;if(i.shouldExecuteOnCPU([a])&&e!=null){let m=i.texData.get(a.dataId),c=e(m.values,u);return i.makeTensorInfo(a.shape,u,c)}let p=$().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,l;return p?l=new as(a.shape,t):l=new an(a.shape,r),i.runWebGLProgram(l,[a],u)}}function ct({opSnippet:r,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:n=!1,cpuKernelImpl:o,dtype:s}){return({inputs:a,backend:i})=>{let{a:u,b:p}=a,l=i;if(n&&u.dtype==="complex64"){let f=l.texData.get(u.dataId),h=l.texData.get(p.dataId),[g,b]=[[f.complexTensorInfos.real,h.complexTensorInfos.real],[f.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(x=>{let[I,k]=x,w={dataId:I.dataId,dtype:I.dtype,shape:u.shape},R={dataId:k.dataId,dtype:k.dtype,shape:p.shape},F=new is(r,u.shape,p.shape);return l.runWebGLProgram(F,[w,R],Mt(I.dtype,k.dtype))}),T=_n({inputs:{real:g,imag:b},backend:l});return l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(b),T}let m=s||Mt(u.dtype,p.dtype);if((u.dtype==="string"||p.dtype==="string"||l.shouldExecuteOnCPU([u,p]))&&o!=null){let f=l.texData.get(u.dataId).values,h=l.texData.get(p.dataId).values,g=u.dtype==="string"?C.fromUint8ToStringArray(f):f,b=u.dtype==="string"?C.fromUint8ToStringArray(h):h,[T,x]=o(u.shape,p.shape,g,b,m),I=l.makeTensorInfo(x,m),k=l.texData.get(I.dataId);return k.values=T,I}let c=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,d;return c?d=new Qs(t,u.shape,p.shape,e):d=new is(r,u.shape,p.shape),l.runWebGLProgram(d,[u,p],m)}}function Su(r,t=!1){if(r==="linear")return t?fz:uz;if(r==="relu")return t?gz:lz;if(r==="elu")return t?hz:pz;if(r==="relu6")return t?bz:mz;if(r==="prelu")return t?fD:dD;if(r==="leakyrelu")return t?cD:mD;if(r==="sigmoid")return t?yz:cz;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var Cf=class{constructor(t,e,n,o=!1,s=!1,a=!1,i=null,u=!1,p=!1){this.variableNames=["matrixA","matrixB"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=n,this.enableShapeUniforms=Nt(this.outputShape.length);let l=o?t[1]:t[2],m=Math.ceil(l/2),c=o?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",f=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",b="";i&&(u?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:p?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,b="result = activation(result);");let T=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),p&&this.variableNames.push("leakyreluAlpha");let x="rc.x",I="rc.x";t[0]<e[0]?x=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(I=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${m}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${m}; i++) {
          int batchA = ${x};
          int batchB = ${I};
          vec4 a = getMatrixA(batchA, ${c});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${h[0]});
          result += (${f[1]} * ${h[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${T}

        ${b}

        setOutput(result);
      }
    `}};var hD={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},mg=class{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.outputShape=C.assertAndGetBroadcastShape(e,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var Sz="return a * b;";function cg(r){let{inputs:t,backend:e}=r,{a:n,b:o}=t,s=C.upcastType(n.dtype,o.dtype);if(n.dtype==="complex64"){let i=e.texData.get(n.dataId),u=e.texData.get(o.dataId),p=new mg(hD.REAL,n.shape,o.shape),l=new mg(hD.IMAG,n.shape,o.shape),m=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:n.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:o.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:o.shape}],c=e.runWebGLProgram(p,m,"float32"),d=e.runWebGLProgram(l,m,"float32"),f=_n({inputs:{real:c,imag:d},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),f}if(e.shouldExecuteOnCPU([n,o])){let i=e.texData.get(n.dataId),u=e.texData.get(o.dataId),[p,l]=_O(n.shape,o.shape,i.values,u.values,s),m=e.makeTensorInfo(l,s),c=e.texData.get(m.dataId);return c.values=p,m}let a;return $().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new Qs(Sz,n.shape,o.shape):a=new is(Sz,n.shape,o.shape),e.runWebGLProgram(a,[n,o],s)}var vz={kernelName:_o,backendName:"webgl",kernelFunc:cg};function Az(r,t,e){let n=[Cu(r.shape),...ku(r.shape)],o={dtype:r.dtype,shape:n,dataId:r.dataId},s=[Cu(t),...ku(t)],a=new Tf(s,n),i=!0,u=[n],p=e.runWebGLProgram(a,[o],r.dtype,u,i);return{dataId:p.dataId,shape:t,dtype:p.dtype}}function ie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{shape:s}=n,a=e,i=y.sizeFromShape(o.shape),u=y.inferFromImplicitShape(s,i),p=y.sizeFromShape(u);y.assert(i===p,()=>`The new shape (${u}) has ${p} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let l=a.texData.get(o.dataId);return l.isPacked&&!Fp(o.shape,u)&&!(l.texture!==null&&Fp(l.shape,u))?Az(o,u,a):(a.incRef(o.dataId),{dataId:o.dataId,shape:u,dtype:o.dtype})}var wz={kernelName:ys,backendName:"webgl",kernelFunc:ie};var dg=class{constructor(t,e){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=t;this.outputShape=[o,a];let i=Math.floor(n/4)*4,u=n%4,p="sumValue += dot(values, ones);";if(e!=null){let m=1/e;p=`sumValue += dot(values * ${y.isInt(m)?m.toPrecision(2):m}, ones);`}let l="";s%n>0&&(l=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${i};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${p}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${p}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${p}
        }
        setOutput(sumValue);
      }
    `}};var eI=class{constructor(t,e){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=t;this.outputShape=[o,a];let i="0.0",u="";e==="prod"?i="1.0":e==="min"?(i="1.0 / 1e-20",u="min"):e==="max"&&(i="-1.0 / 1e-20",u="max");let p=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?p="sumValue":e==="prod"?p="prodValue":e==="all"?p="allValue":e==="any"&&(p="anyValue");let l=Math.floor(n/4)*4,m=n%4,c=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";e==="all"?(i="1.0",c=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):e==="any"&&(i="0.0",c=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${l};
        if (${m===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${c}
        }
        setOutput(${p});
      }
    `}};function fae(r){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let e=t.length?t[t.length-1].outSize:r[1],n=C.computeOptimalWindowSize(e);t.push({inSize:e,windowSize:n,outSize:Math.ceil(e/n)})}return t}function Qn(r,t,e,n){let o=fae(r.shape),s=r;for(let a=0;a<o.length;a++){let{inSize:i,windowSize:u,outSize:p}=o[a],l,m;e==="mean"?l=a===0?new dg({windowSize:u,inSize:i,batchSize:r.shape[0],outSize:p},i):new dg({windowSize:u,inSize:i,batchSize:r.shape[0],outSize:p}):l=new eI({windowSize:u,inSize:i,batchSize:r.shape[0],outSize:p},e),m=s,s=n.runWebGLProgram(l,[s],t),m.dataId!==r.dataId&&n.disposeIntermediateTensorInfo(m)}return s}var tI=class{constructor(t,e){this.variableNames=["A"];let n=new Array(t.length);for(let a=0;a<n.length;a++)n[a]=t[e[a]];this.outputShape=n,this.rank=n.length;let o=Ue(this.rank),s=hae(e);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function hae(r){let t=r.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(t);for(let o=0;o<r.length;o++)n[r[o]]=e[o];return n.join()}var rI=class{constructor(t,e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;let n=new Array(t.length);for(let l=0;l<n.length;l++)n[l]=t[e[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let o=Ue(this.rank),s=uD("rc",this.rank),a=new Array(this.rank);for(let l=0;l<e.length;l++)a[e[l]]=s[l];let i=`vec2(${a.slice(-2).join()})`,u=`++${s[this.rank-1]} < ${n[this.rank-1]}`,p=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${p};
      if(${u}) {
        result[1] = ${p};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${p};
        if(${u}) {
          result[3] = ${p};
        }
      }
      setOutput(result);
    }
    `}};function Pp(r,t,e){let n=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rI(r.shape,t):new tI(r.shape,t);return e.runWebGLProgram(n,[r],r.dtype)}function Nz(r,t,e,n){let o=t,s=r.shape.length,a=y.parseAxisParam(o,r.shape),i=a,u=C.getAxesPermutation(i,s),p=u!=null,l=r;p&&(l=Pp(r,u,n),i=C.getInnerMostAxes(i.length,s)),C.assertAxesAreInnerMostDims("sum",i,s);let[m,c]=C.computeOutAndReduceShapes(l.shape,i),d=m;e&&(d=C.expandShapeToKeepDim(m,a));let f=y.sizeFromShape(c),g=y.sizeFromShape(r.shape)/f,b=ie({inputs:{x:l},attrs:{shape:[g,f]},backend:n}),T=ru(r.dtype),x=Qn(b,T,"sum",n),I=ie({inputs:{x},attrs:{shape:d},backend:n});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x),p&&n.disposeIntermediateTensorInfo(l),I}function ql(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;return Nz(o,s,a,e)}var Dz={kernelName:Xo,backendName:"webgl",kernelFunc:ql};function Ut(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{perm:s}=n,a=e,i=o.shape.length,u=new Array(i);for(let l=0;l<u.length;l++)u[l]=o.shape[s[l]];let p;if(a.shouldExecuteOnCPU([o])){let m=a.texData.get(o.dataId).values,c=Vl(m,o.shape,o.dtype,s,u);p=a.makeTensorInfo(u,o.dtype);let d=a.texData.get(p.dataId);d.values=c}else p=Pp(o,s,a);return p}var Rz={kernelName:wn,backendName:"webgl",kernelFunc:Ut};var gD=1e3;function jl({a:r,b:t,transposeA:e,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){let p=r.shape.length,l=t.shape.length,m=e?r.shape[p-2]:r.shape[p-1],c=n?t.shape[l-1]:t.shape[l-2],d=e?r.shape[p-1]:r.shape[p-2],f=n?t.shape[l-2]:t.shape[l-1],h=r.shape.slice(0,-2),g=t.shape.slice(0,-2),b=y.sizeFromShape(h),T=y.sizeFromShape(g),I=Ar.assertAndGetBroadcastShape(r.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);y.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${t.shape} and transposeA=${e} and transposeB=${n} must match.`);let k=e?[b,m,d]:[b,d,m],w=n?[T,f,c]:[T,c,f],R=ie({inputs:{x:r},backend:o,attrs:{shape:k}}),F=ie({inputs:{x:t},backend:o,attrs:{shape:w}}),P=[R,F],E=Math.max(b,T),B=e?R.shape[1]:R.shape[2],G=s!=null,U=a!=null,V=u==="leakyrelu",W=u!=null?Su(u,!0):null,H=G||U||V||W!=null,j;if((d===1||f===1)&&B>gD&&H===!1){let ee=R,ne=F;e&&(ee=Ut({inputs:{x:R},backend:o,attrs:{perm:[0,2,1]}}),P.push(ee)),n&&(ne=Ut({inputs:{x:F},backend:o,attrs:{perm:[0,2,1]}}),P.push(ne));let oe=f!==1,se=f===1,re=ee;oe&&(re=ie({inputs:{x:ee},backend:o,attrs:{shape:[E,B,1]}}),P.push(re));let ae=f===1?2:1,ce=ne;se&&(ce=ie({inputs:{x:ne},backend:o,attrs:{shape:[E,1,B]}}),P.push(ce));let ye=cg({inputs:{a:re,b:ce},backend:o});j=ql({inputs:{x:ye},backend:o,attrs:{axis:ae,keepDims:!0}}),P.push(ye)}else{let ee=Mt(r.dtype,t.dtype),ne=new Cf(k,w,[E,d,f],e,n,G,W,U,V),oe=[R,F];if(s!=null&&oe.push(s),U&&oe.push(a),V){let se=o.makeTensorInfo([],"float32",y.createScalarValue(i,"float32"));oe.push(se),P.push(se)}j=o.runWebGLProgram(ne,oe,ee)}let X=ie({inputs:{x:j},backend:o,attrs:{shape:I}});P.push(j);for(let ee of P)o.disposeIntermediateTensorInfo(ee);return X}function gae(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=t,{transposeA:u,transposeB:p,activation:l,leakyreluAlpha:m}=n;return jl({a:o,b:s,transposeA:u,transposeB:p,backend:e,bias:a,preluActivationWeights:i,leakyreluAlpha:m,activation:l})}var Fz={kernelName:As,backendName:"webgl",kernelFunc:gae};var Pz="return abs(x);";function bae(r){let{inputs:t,backend:e}=r,{x:n}=t;if(e.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=e.texData.get(n.dataId),a=jx(s.values);return e.makeTensorInfo(n.shape,n.dtype,a)}let o;return $().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new as(n.shape,Pz):o=new an(n.shape,Pz),e.runWebGLProgram(o,[n],n.dtype)}var Mz={kernelName:ls,backendName:"webgl",kernelFunc:bae};var yae=Tr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,Tae=Se({opSnippet:yae}),Ez={kernelName:Ei,backendName:"webgl",kernelFunc:Tae};var xae=Tr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Iae=Se({opSnippet:xae}),Lz={kernelName:Li,backendName:"webgl",kernelFunc:Iae};var _z="return a + b;",Cae=ct({opSnippet:_z,packedOpSnippet:_z,supportsComplex:!0,cpuKernelImpl:gO}),$z={kernelName:vn,backendName:"webgl",kernelFunc:Cae};var nI=class{constructor(t,e){this.outputShape=[];this.outputShape=t,this.variableNames=e.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}};var oI=class{constructor(t,e){this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=t,this.variableNames=e.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}};function sI(r){let{inputs:t,backend:e}=r,n=t;if(n.length===1)return ar({inputs:{x:n[0]},backend:e});if(n.length>$().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(n.length/2),p=sI({inputs:n.slice(0,u),backend:e}),l=sI({inputs:n.slice(u),backend:e});return sI({inputs:[p,l],backend:e})}let o=n.map(u=>u.dtype).reduce((u,p)=>Mt(u,p)),s=n.map(u=>u.shape),i=$().getBool("WEBGL_PACK")?new oI(n[0].shape,s):new nI(n[0].shape,s);return e.runWebGLProgram(i,n,o)}var Bz={kernelName:uo,backendName:"webgl",kernelFunc:sI};function kae(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n,i=o.shape.length,u=y.parseAxisParam(s,o.shape),p=u,l=C.getAxesPermutation(p,i),m=o;l!=null&&(m=Ut({inputs:{x:o},backend:e,attrs:{perm:l}}),p=C.getInnerMostAxes(p.length,i)),C.assertAxesAreInnerMostDims("all",p,i);let[c,d]=C.computeOutAndReduceShapes(m.shape,p),f=y.sizeFromShape(d),h=ie({inputs:{x:m},backend:e,attrs:{shape:[-1,f]}}),g=Qn(h,h.dtype,"all",e),b;if(a){let T=C.expandShapeToKeepDim(c,u);b=ie({inputs:{x:g},backend:e,attrs:{shape:T}})}else b=ie({inputs:{x:g},backend:e,attrs:{shape:c}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(g),l!=null&&e.disposeIntermediateTensorInfo(m),b}var Oz={kernelName:_i,backendName:"webgl",kernelFunc:kae};function Sae(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n,i=o.shape.length,u=y.parseAxisParam(s,o.shape),p=u,l=C.getAxesPermutation(p,i),m=o;l!=null&&(m=Ut({inputs:{x:o},backend:e,attrs:{perm:l}}),p=C.getInnerMostAxes(p.length,i)),C.assertAxesAreInnerMostDims("any",p,i);let[c,d]=C.computeOutAndReduceShapes(m.shape,p),f=y.sizeFromShape(d),h=ie({inputs:{x:m},backend:e,attrs:{shape:[-1,f]}}),g=Qn(h,h.dtype,"any",e),b;if(a){let T=C.expandShapeToKeepDim(c,u);b=ie({inputs:{x:g},backend:e,attrs:{shape:T}})}else b=ie({inputs:{x:g},backend:e,attrs:{shape:c}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(g),l!=null&&e.disposeIntermediateTensorInfo(m),b}var zz={kernelName:$i,backendName:"webgl",kernelFunc:Sae};var aI=class{constructor(t,e,n){this.variableNames=["A"];let{windowSize:o,batchSize:s,outSize:a}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];let i=e==="max"?">":"<",u=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var iI=class{constructor(t,e,n,o){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;y.assert(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=t[t.length-1],a=Math.ceil(s/e);this.outputShape=t.slice(0,-1),a>1&&this.outputShape.push(a),o||this.variableNames.push("bestIndicesA");let i=this.outputShape,u=i.length,p=Ue(u),l=sr("coords",u),m,c;if(a===1){c=u+1;let F=Ue(c);m=`
        ${F} sourceLocR = ${F}(${l.join()}, 0);
        ++${l[u-1]};
        ${F} sourceLocG = ${F}(${l.join()}, 0);
        ++${l[u-2]};
        ${F} sourceLocA = ${F}(${l.join()}, 0);
        --${l[u-1]};
        ${F} sourceLocB = ${F}(${l.join()}, 0);
        --${l[u-2]};`}else c=u,m=`
        ${p} sourceLocR = coords;
        ++${l[u-1]};
        ${p} sourceLocG = coords;
        ++${l[u-2]};
        ${p} sourceLocA = coords;
        --${l[u-1]};
        ${p} sourceLocB = coords;
        --${l[u-2]};`;let d=["x","y","z","w","u","v"].slice(0,c),f="."+d[c-1],h=d.map(F=>"int "+F),g=sr("sourceLocR",c-1).concat("inIdx.r"),b=sr("sourceLocG",c-1).concat("inIdx.g"),T=sr("sourceLocB",c-1).concat("inIdx.b"),x=sr("sourceLocA",c-1).concat("inIdx.a"),I=n==="max"?"greaterThan":"lessThan",k=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${T.join()}),
                             getBestIndicesAChannel(${x.join()})));`,w=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${b.join()}) : 0.,
            hasNextRow ? getAChannel(${T.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,R=o?"":`
      float getBestIndicesAChannel(${h.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${h.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${R}
      void main() {
        ${p} coords = getOutputCoords();
        bool hasNextCol = ${l[u-1]} < ${i[u-1]-1};
        bool hasNextRow = ${l[u-2]} < ${i[u-2]-1};
        ${m}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${w};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${k}
          vec4 candidate = ${w};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${I}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function Gz(r,t,e,n=null){let o=t.shape[0],s=t.shape[1];n!=null&&(o=n.shape[0],s=n.shape[1]);let a=C.computeOptimalWindowSize(s),i={windowSize:a,inSize:s,batchSize:o,outSize:Math.ceil(s/a)},u=new aI(i,e,n==null),p=[t];n!=null&&p.push(n);let l=r.runWebGLProgram(u,p,"int32");if(l.shape[1]===1)return l;let m=Gz(r,t,e,l);return r.disposeIntermediateTensorInfo(l),m}function Uz(r,t,e,n=null){let o=n!=null?n.shape:t.shape,s=o[o.length-1],a=C.computeOptimalWindowSize(s),i=new iI(o,a,e,n==null),u=n==null?[t]:[t,n],p=r.runWebGLProgram(i,u,"int32");if(p.shape.length===t.shape.length){let l=Uz(r,t,e,p);return r.disposeIntermediateTensorInfo(p),l}return p}function uI(r,t,e,n){let o=[e];if(C.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,t.shape.length),!$().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],a=r.texData.get(t.dataId),i=a!==null&&a.isPacked,u=t;i&&(u=r.unpackTensor(t),s.push(u));let[p,l]=C.computeOutAndReduceShapes(u.shape,o),m=y.sizeFromShape(l),c=ie({inputs:{x:u},backend:r,attrs:{shape:[-1,m]}});s.push(c);let d=Gz(r,c,n);s.push(d);let f=ie({inputs:{x:d},backend:r,attrs:{shape:p}});return s.forEach(h=>r.disposeIntermediateTensorInfo(h)),f}return Uz(r,t,n)}function vae(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,p=[];i!=null&&(u=Ut({inputs:{x:o},backend:e,attrs:{perm:i}}),p.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMax",[a[0]],u.shape.length);let l=uI(e,u,a[0],"max");return p.forEach(m=>e.disposeIntermediateTensorInfo(m)),l}var Wz={kernelName:po,backendName:"webgl",kernelFunc:vae};function Aae(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,p=[];i!=null&&(u=Ut({inputs:{x:o},backend:e,attrs:{perm:i}}),p.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMin",[a[0]],u.shape.length);let l=uI(e,u,a[0],"min");return p.forEach(m=>e.disposeIntermediateTensorInfo(m)),l}var Kz={kernelName:ai,backendName:"webgl",kernelFunc:Aae};var wae=Tr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Nae=Se({opSnippet:wae}),Vz={kernelName:Bi,backendName:"webgl",kernelFunc:Nae};var Dae=Tr+"return log(x + sqrt(x * x + 1.0));",Rae=Se({opSnippet:Dae}),Hz={kernelName:Oi,backendName:"webgl",kernelFunc:Rae};var Fae=Tr+`
  return atan(x);
`,Pae=Se({opSnippet:Fae}),qz={kernelName:zi,backendName:"webgl",kernelFunc:Pae};var Mae=If+`
  return atan(a, b);
`,Eae=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ai+`
  return result;
`,Lae=ct({opSnippet:Mae,packedOpSnippet:Eae}),jz={kernelName:ia,backendName:"webgl",kernelFunc:Lae};var _ae=Tr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,$ae=Se({opSnippet:_ae}),Xz={kernelName:Gi,backendName:"webgl",kernelFunc:$ae};var Ja=class{constructor(t,e,n,o=!1,s=!1){this.variableNames=["x"];if(e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=t.filterWidth,i=t.strideHeight,u=t.strideWidth,p=t.dilationHeight,l=t.dilationWidth,m=t.effectiveFilterHeight,c=t.effectiveFilterWidth,d=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;let h=e==="avg",g=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,b=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`,T="0.0";if(h||(T="-1.0 / 1e-20"),n){let F=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${u});
        const ivec2 pads = ivec2(${d}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${m};
              wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${c};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${F} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?s?g:b:`wR * ${c} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",I=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(I="avgValue / count");let k=Math.floor(a/4)*4,w=a%4,R=`
      if (${h}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${u});
      const ivec2 pads = ivec2(${d}, ${f});
      const float initializationValue = ${T};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${T});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${m};
            wR += ${p}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${k}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${R}
          }

          int xC = xCCorner + ${k};
          if (${w===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${R}
          } else if (${w===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${R}
          } else if (${w===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${R}
          }
        }
        setOutput(${I});
      }
    `}},Mp=class{constructor(t,e,n,o=!1,s=!1){this.variableNames=["x"];if(e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=t.filterWidth,i=t.strideDepth,u=t.strideHeight,p=t.strideWidth,l=t.dilationDepth,m=t.dilationHeight,c=t.dilationWidth,d=t.effectiveFilterDepth,f=t.effectiveFilterHeight,h=t.effectiveFilterWidth,g=t.padInfo.front,b=t.padInfo.top,T=t.padInfo.left;this.outputShape=t.outShape;let x=e==="avg",I="0.0";if(x||(I="-1.0 / 1e-20"),n){let E=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${u}, ${p});
        const ivec3 pads = ivec3(${g}, ${b}, ${T});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${m}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${h};
                  wC += ${c}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${E} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${h} +
                      wR * ${h} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let k="max",w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(w="avgValue / count");let R=Math.floor(a/4)*4,F=a%4,P=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${k}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${u}, ${p});
      const ivec3 pads = ivec3(${g}, ${b}, ${T});
      const float initializationValue = ${I};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${I});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${m}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${R}; wC += 4) {
              int xC = xCCorner + wC * ${c};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                getValue(batch, xD, xR, xC + 3 * ${c}, ch)
              );

              ${P}
            }

            int xC = xCCorner + ${R};
            if (${F===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${P}
            } else if (${F===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                initializationValue,
                initializationValue
              );

              ${P}
            } else if (${F===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                initializationValue
              );

              ${P}
            }
          }
          setOutput(${w});
        }
      }
    `}};function Bae(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;Za(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,p=1;y.assert(C.eitherStridesOrDilationsAreOne(a,p),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${p}'`);let l=C.computePool2DInfo(o.shape,s,a,p,i,u);if(l.filterWidth===1&&l.filterHeight===1&&y.arraysEqual(l.inShape,l.outShape))return ar({inputs:{x:o},backend:e});let m=new Ja(l,"avg",!1);return e.runWebGLProgram(m,[o],"float32")}var Yz={kernelName:lo,backendName:"webgl",kernelFunc:Bae};function Oae(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:u,dataFormat:p}=n,l=[1,1,1],m=C.computePool3DInfo(o.shape,s,a,l,i,u,p),c=new Mp(m,"avg",!1);return e.runWebGLProgram(c,[o],"float32")}var Zz={kernelName:Eu,backendName:"webgl",kernelFunc:Oae};var pI=class{constructor(t){this.variableNames=["dy"];this.outputShape=t.inShape;let e=t.filterHeight,n=t.filterWidth,o=t.strideHeight,s=t.strideWidth,a=t.dilationHeight,i=t.dilationWidth,u=t.effectiveFilterHeight,p=t.effectiveFilterWidth,l=u-1-t.padInfo.top,m=p-1-t.padInfo.left,c=1/(e*n);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${m});
      const float avgMultiplier = float(${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${p};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},lI=class{constructor(t){this.variableNames=["dy"];this.outputShape=t.inShape;let e=t.filterDepth,n=t.filterHeight,o=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,u=t.dilationDepth,p=t.dilationHeight,l=t.dilationWidth,m=t.effectiveFilterDepth,c=t.effectiveFilterHeight,d=t.effectiveFilterWidth,f=m-1-t.padInfo.front,h=c-1-t.padInfo.top,g=d-1-t.padInfo.left,b=1/(e*n*o);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${h}, ${g});
      const float avgMultiplier = float(${b});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${m};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${p}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function zae(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,a=s,{filterSize:i,strides:u,pad:p,dimRoundingMode:l}=n,m=[1,1,1],c=C.computePool3DInfo(a.shape,i,u,m,p,l),d=new lI(c);return e.runWebGLProgram(d,[o],a.dtype)}var Qz={kernelName:Tm,backendName:"webgl",kernelFunc:zae};function Gae(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,a=s;Za([o,s],"avgPoolGrad");let{filterSize:i,strides:u,pad:p}=n,l=C.computePool2DInfo(a.shape,i,u,1,p),m=new pI(l);return e.runWebGLProgram(m,[o],a.dtype)}var Jz={kernelName:ym,backendName:"webgl",kernelFunc:Gae};function Uae(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s}=t,{transposeA:a,transposeB:i}=n;return jl({a:o,b:s,transposeA:a,transposeB:i,backend:e})}var eG={kernelName:mo,backendName:"webgl",kernelFunc:Uae};var mI=class{constructor(t,e,n,o,s,a){this.outputShape=[];this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(t,e),C.assertAndGetBroadcastShape(t,n);let i="0.0";o!=null&&(C.assertAndGetBroadcastShape(t,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";s!=null&&(C.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var cI=class{constructor(t,e,n,o,s,a){this.packedInputs=!0;this.packedOutput=!0;this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(t,e),C.assertAndGetBroadcastShape(t,n);let i="vec4(0.0)";o!=null&&(C.assertAndGetBroadcastShape(t,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";s!=null&&(C.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var Wae=({inputs:r,backend:t,attrs:e})=>{let{x:n,mean:o,variance:s,offset:a,scale:i}=r;y.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=e;u==null&&(u=.001);let p=[n,o,s],l=null;a!=null&&(l=a.shape,p.push(a));let m=null;i!=null&&(m=i.shape,p.push(i));let c=$().getBool("WEBGL_PACK_NORMALIZATION")?new cI(n.shape,o.shape,s.shape,l,m,u):new mI(n.shape,o.shape,s.shape,l,m,u);return t.runWebGLProgram(c,p,p[0].dtype)},tG={kernelName:vo,backendName:"webgl",kernelFunc:Wae};var dI=class{constructor(t){this.variableNames=["source"];this.outputShape=t,this.rank=t.length;let e=Ue(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=Kae(this.rank),o,s=t.map((a,i)=>`sourceLoc.${bD[i]} = start[${i}] + coords.${bD[i]};`);o=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${n}));
      }
    `}},bD=["x","y","z","w","u","v"];function Kae(r){if(r===1)return"sourceLoc";if(r<=6)return bD.slice(0,r).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var fI=class{constructor(t){this.variableNames=["source"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let e=Ue(this.rank),n=sr("coords",this.rank),o=sr("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,a=`getChannel(getSource(${o.join()}), ${s})`,i=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${a};
        --${o[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${a};
        }
      }
    `,p=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((l,m)=>`start[${m}]`).join()});`:t.map((l,m)=>`${o[m]} = ${n[m]} + start[${m}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${p}
        vec4 result = vec4(0.);
        ${i}
        ${u}
        setOutput(result);
      }
    `}};function Vae(r,t,e,n){let o=n.texData.get(r.dataId),s=n.makeTensorInfo(e,r.dtype),a=n.texData.get(s.dataId);Object.assign(a,o),a.refCount=1,a.shape=e,a.dtype=r.dtype;let i=Tt.computeFlatOffset(t,y.computeStrides(r.shape));o.slice&&(i+=o.slice.flatOffset),a.slice={flatOffset:i,origDataId:o.slice&&o.slice.origDataId||r.dataId};let u=n.dataRefCount.get(a.slice.origDataId)||1;return n.dataRefCount.set(a.slice.origDataId,u+1),s}function ei(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,size:a}=n,[i,u]=Tt.parseSliceParams(o,s,a);if(Tt.assertParamsValid(o,i,u),y.sizeFromShape(u)===0)return e.makeTensorInfo(u,o.dtype,[]);if(e.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=e.texData.get(o.dataId),c=HO(m.values,i,u,o.shape,o.dtype);return e.makeTensorInfo(u,o.dtype,c)}let{isPacked:p}=e.texData.get(o.dataId),l=Tt.isSliceContinous(o.shape,i,u);if(p||!l){let m=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fI(u):new dI(u),c=[i];return e.runWebGLProgram(m,[o],o.dtype,c)}return e.uploadToGPU(o.dataId),Vae(o,i,u,e)}var rG={kernelName:xs,backendName:"webgl",kernelFunc:ei};var Hae=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,crops:a}=n;y.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((T,x)=>T*x),u=C.getReshaped(o.shape,s,i),p=C.getPermuted(u.length,s.length),l=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(l,a,s.length),d=[],f=ie({inputs:{x:o},backend:e,attrs:{shape:u}}),h=Ut({inputs:{x:f},backend:e,attrs:{perm:p}}),g=ie({inputs:{x:h},backend:e,attrs:{shape:l}}),b=ei({inputs:{x:g},backend:e,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(T=>e.disposeIntermediateTensorInfo(T)),b},nG={kernelName:ms,backendName:"webgl",kernelFunc:Hae};function qae(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:a}=n,i=e.readSync(o.dataId),u=e.readSync(s.dataId),p=qx(i,u,s.dtype,s.shape,a);return e.makeTensorInfo([a],s.dtype,p)}var oG={kernelName:xm,backendName:"webgl",kernelFunc:qae};function jae(r){let{inputs:t,backend:e}=r,{s0:n,s1:o}=t,s=e.readSync(n.dataId),a=e.readSync(o.dataId),i=C.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return e.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var sG={kernelName:Im,backendName:"webgl",kernelFunc:jae};var Xae="return float(a != b);",yD=ct({opSnippet:Xae,cpuKernelImpl:BO,dtype:"bool"}),aG={kernelName:Ia,backendName:"webgl",kernelFunc:yD};function vu(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.texData.get(n.dataId);return ar({inputs:{x:o.complexTensorInfos.real},backend:e})}var iG={kernelName:Wu,backendName:"webgl",kernelFunc:vu};var Yae="return float(int(x));";function uG(r,t){let e=new an(r.shape,Yae),n=t.runWebGLProgram(e,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function TD(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return ar({inputs:{x:o},backend:e});let a=xt(o.shape),i=TD({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),u=_n({inputs:{real:i,imag:a},backend:e});return a.dispose(),e.disposeIntermediateTensorInfo(i),u}if(o.dtype==="complex64"){let a=vu({inputs:{input:o},backend:e}),i=TD({inputs:{x:a},backend:e,attrs:{dtype:s}});return e.disposeIntermediateTensorInfo(a),i}if(!y.hasEncodingLoss(o.dtype,s)){let a=ar({inputs:{x:o},backend:e});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(e.shouldExecuteOnCPU([o])){let a=e.texData.get(o.dataId).values,[i,u,p]=yO(a,o.shape,o.dtype,s);return e.makeTensorInfo(i,u,p)}if(s==="int32")return uG(o,e);if(s==="bool"){let a=e.makeTensorInfo([],"bool",y.getTypedArrayFromDType("bool",1)),u=yD({inputs:{a:o,b:a},backend:e});return e.disposeIntermediateTensorInfo(a),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var pG={kernelName:zn,backendName:"webgl",kernelFunc:TD};var lG="return ceil(x);",Zae=Se({opSnippet:lG,packedOpSnippet:lG,cpuKernelImpl:TO}),mG={kernelName:co,backendName:"webgl",kernelFunc:Zae};var hI=class{constructor(t){this.variableNames=["A"];this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var gI=class{constructor(t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function Qae(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{clipValueMin:s,clipValueMax:a}=n,i;$().getBool("WEBGL_PACK_CLIP")?i=new gI(o.shape):i=new hI(o.shape);let u=[[s],[a]];return e.runWebGLProgram(i,[o],o.dtype,u)}var cG={kernelName:Gn,backendName:"webgl",kernelFunc:Qae};var bI=class{constructor(t){this.variableNames=["real","imag"];this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function dG(r,t){return{dataId:t.dataId,dtype:t.dtype,shape:r.shape}}function Jae(r){let{inputs:t,backend:e}=r,{x:n}=t,o=e.texData.get(n.dataId),s=new bI(n.shape),a=[dG(n,o.complexTensorInfos.real),dG(n,o.complexTensorInfos.imag)];return e.runWebGLProgram(s,a,a[0].dtype)}var fG={kernelName:_u,backendName:"webgl",kernelFunc:Jae};var yI=class{constructor(t){this.outputShape=[];this.outputShape=C.computeOutShape(t,1),this.variableNames=t.map((a,i)=>`T${i}`);let e=new Array(t.length-1);e[0]=t[0][1];for(let a=1;a<e.length;a++)e[a]=e[a-1]+t[a][1];let n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<e.length;a++){let i=e[a-1];n.push(`else if (yC < ${e[a]}) setOutput(getT${a}(yR, yC-${i}));`)}let o=e.length,s=e[e.length-1];n.push(`else setOutput(getT${o}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}};var xI=class{constructor(t,e){this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];this.outputShape=C.computeOutShape(t,e);let n=this.outputShape,o=n.length,s=Ue(o),a=sr("coords",o),i=["x","y","z","w","u","v"].slice(0,o);this.variableNames=t.map((h,g)=>`T${g}`);let u=new Array(t.length-1);u[0]=t[0][e];for(let h=1;h<u.length;h++)u[h]=u[h-1]+t[h][e];let p=i[e],l=i.slice(-2),m=i.join(),c=`if (${p} < ${u[0]}) {
        return getChannel(
            getT0(${m}), vec2(${l.join()}));
        }`;for(let h=1;h<u.length;h++){let g=u[h-1];c+=`
        if (${p} < ${u[h]}  && ${p} >= ${u[h-1]}) {
          return getChannel(
            getT${h}(${TI(i,p,g)}),
            vec2(${TI(l,p,g)}));
        }`}let d=u.length,f=u[u.length-1];c+=`
        return getChannel(
          getT${d}(${TI(i,p,f)}),
          vec2(${TI(l,p,f)}));`,this.userCode=`
      float getValue(${i.map(h=>"int "+h)}) {
        ${c}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[o-1]} = ${a[o-1]} + 1;
        if (${a[o-1]} < ${n[o-1]}) {
          result.g = getValue(${a});
        }

        ${a[o-2]} = ${a[o-2]} + 1;
        if (${a[o-2]} < ${n[o-2]}) {
          result.a = getValue(${a});
        }

        ${a[o-1]} = ${a[o-1]} - 1;
        if (${a[o-2]} < ${n[o-2]} &&
            ${a[o-1]} < ${n[o-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function TI(r,t,e){let n=r.indexOf(t);return r.map((s,a)=>a===n?`${s} - ${e}`:s).join()}function Xl(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.texData.get(n.dataId);return ar({inputs:{x:o.complexTensorInfos.imag},backend:e})}var hG={kernelName:zu,backendName:"webgl",kernelFunc:Xl};function kf(r,t,e){let n=r[0].dtype;if(n==="complex64"){let m=r.map(g=>vu({inputs:{input:g},backend:e})),c=r.map(g=>Xl({inputs:{input:g},backend:e})),d=kf(m,t,e),f=kf(c,t,e),h=_n({inputs:{real:d,imag:f},backend:e});return m.forEach(g=>e.disposeIntermediateTensorInfo(g)),c.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),h}let o=e.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let m=r.map(T=>{let x=y.sizeFromShape(T.shape.slice(t));return ie({inputs:{x:T},backend:e,attrs:{shape:[-1,x]}})}),c=m.map(T=>({vals:e.readSync(T.dataId),shape:T.shape})),d=C.computeOutShape(m.map(T=>T.shape),1),f=m[0].shape[0]===1,h=xO(c,d,n,f),g=C.computeOutShape(r.map(T=>T.shape),t),b=e.makeTensorInfo(g,n,h);return m.forEach(T=>e.disposeIntermediateTensorInfo(T)),b}let s=$().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>s){let m=[];for(let d=0;d<r.length;d+=s){let f=r.slice(d,d+s);m.push(kf(f,t,e))}let c=kf(m,t,e);for(let d of m)e.disposeIntermediateTensorInfo(d);return c}if($().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1){let m=new xI(r.map(c=>c.shape),t);return e.runWebGLProgram(m,r,n)}let{tensors2D:a,outShape:i}=eie(r,t,e),u=new yI(a.map(m=>m.shape)),p=e.runWebGLProgram(u,a,n);a.forEach(m=>e.disposeIntermediateTensorInfo(m));let l=ie({inputs:{x:p},attrs:{shape:i},backend:e});return e.disposeIntermediateTensorInfo(p),l}function eie(r,t,e){let n=C.computeOutShape(r.map(s=>s.shape),t);return{tensors2D:r.map(s=>ie({inputs:{x:s},attrs:{shape:[-1,y.sizeFromShape(s.shape.slice(t))]},backend:e})),outShape:n}}function xD(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,t[0].shape)[0],a=t.map(p=>p.shape);C.assertParamsConsistent(a,s);let i=C.computeOutShape(t.map(p=>p.shape),s);if(y.sizeFromShape(i)===0)return e.makeTensorInfo(i,t[0].dtype,[]);let u=t.filter(p=>y.sizeFromShape(p.shape)>0);return u.length===1?ar({inputs:{x:u[0]},backend:e}):kf(u,s,e)}var gG={kernelName:cs,backendName:"webgl",kernelFunc:xD};var Sf=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.outputShape=t.outShape;let a=t.padInfo.top,i=t.padInfo.left,u=t.strideHeight,p=t.strideWidth,l=t.dilationHeight,m=t.dilationWidth,c=t.filterHeight,d=t.filterWidth,f=Math.floor(t.inChannels/4)*4,h=t.inChannels%4,g=t.dataFormat==="channelsLast",b=g?1:2,T=g?2:3,x=g?3:1,I="",k="";n&&(o?I=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?I=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:I=`
          float activation(float x) {
            ${n}
          }
        `,k="result = activation(result);");let w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${I}

      const ivec2 strides = ivec2(${u}, ${p});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${b}], coords[${T}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${m};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${h===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${h===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${h===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${w}
        ${k}
        setOutput(result);
      }
    `}},II=class{constructor(t){this.variableNames=["x","W"];this.outputShape=t.outShape;let e=t.padInfo.front,n=t.padInfo.top,o=t.padInfo.left,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,u=t.dilationDepth,p=t.dilationHeight,l=t.dilationWidth,m=t.filterDepth,c=t.filterHeight,d=t.filterWidth,f=Math.floor(t.inChannels/4)*4,h=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${a}, ${i});
      const ivec3 pads = ivec3(${e}, ${n}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${m}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c}; wR++) {
            int xR = xRCorner + wR * ${p};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${h===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${h===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${h===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var vf=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=t.outShape,this.enableShapeUniforms=Nt(this.outputShape.length);let a=t.padInfo.left,i=t.strideWidth,u=t.dilationWidth,p=t.filterHeight,l=t.filterWidth,m=l,c=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<l;g++)c+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;c+=`
     for (int r = 0; r < ${p}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let g=0;g<l;g++)c+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;c+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(m+1)/2;g++){let b=g*2;if(c+=`
           xC = xCCorner + ${b*u};
           `,i===1){if(b<l&&(a%2===1?(c+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }
               `,u===1&&b>0?c+=`
                 xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                 `:c+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                   } else {
                     xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                   }
                   `):c+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xC${b} = xTexelC${b};
                 `,b+1<l)){let T=a%2===0?y.nearestLargerEven(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(c+=`
                   xCOffset = xC + imod(pads[1], 2) + ${T};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                     xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${b+1}.zw = vec2(0.0);
                     }
                     xTexelC${b+1}Ready = 1;
                   }
                   `,u>1?c+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                     } else {
                      xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                     }
                     `:c+=`
                     xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                     `):T===1?c+=`
                     xC${b+1} = xTexelC${b};
                     `:c+=`
                     xCOffset = xC + ${T};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                       xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${b+1}.zw = vec2(0.0);
                       }
                       xTexelC${b+1}Ready = 1;
                     }

                     xC${b+1} = xTexelC${b+1};
                     `}}else b<l&&(a%2===1?(c+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.0);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
               `,b+1<l&&(c+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                 `)):(c+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(
                   xTexelC${b}.xy, xTexelC${b+1}.xy);
               `,b+1<l&&(c+=`
                   xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                 `)));b<l&&(c+=`
             wTexel = getW(r, ${b}, d1, d2);
             dotProd += xC${b}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${b}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,b+1<l&&(c+=`
               wTexel = getW(r, ${b+1}, d1, d2);
               dotProd += xC${b+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${b+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}c+=`
     }
   `,c+=`
     }
   `,c+=`
     }
   `;let d="",f="";n&&(o?d=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:s?d=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:d=`vec4 activation(vec4 x) {
           ${n}
         }`,f="result = activation(result);");let h=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${d}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${c}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${h}
         ${f}
         setOutput(result);
       }
     `}};var CI=class{constructor(t,e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}];this.outputShape=t,this.enableShapeUniforms=Nt(this.outputShape.length);let{dataFormat:n}=e,o=jt(),s=n==="channelsLast",a=s?1:2,i=s?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`,p="";for(let l=0;l<=1;l++)for(let m=0;m<=1;m++)p+=`
          blockIndex = rc.z + ${m};
          pos = rc.y + ${l};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+m}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+m}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${p}

        ${o.output} = result;
      }
    `}};function kI(r,t){let e=r.length;return e>=3?t?[...r.slice(0,-3),r[e-3]*r[e-2],r[e-1]]:[...r.slice(0,-3),r[e-3],r[e-2]*r[e-1]]:!t&&e===1&&r[0]>1?[r[0],1]:null}function SI({x:r,filter:t,convInfo:e,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let u=r.shape,p=n.texData.get(r.dataId),l=e.inChannels,m=u[0]*u[1]*u[2],c=e.outChannels,d=e.dataFormat==="channelsLast",f=!1,h=!1,g,b=[];if(s!=null){let I=kI(s.shape,d);I!=null&&(s=ie({inputs:{x:s},backend:n,attrs:{shape:I}}),b.push(s))}if(o!=null){let I=kI(o.shape,d);I!=null&&(o=ie({inputs:{x:o},backend:n,attrs:{shape:I}}),b.push(o))}if(!((m===1||c===1)&&l>gD)&&p.isPacked&&d&&p.texture!=null&&u[2]%2!==0&&y.arraysEqual(p.shape.slice(-3),u.slice(-3))){let I=u[0]*u[1]*(u[2]+1),k={dataId:r.dataId,shape:[1,I,e.inChannels],dtype:r.dtype},w=p.shape;p.shape=p.shape.slice(),p.shape[p.shape.length-2]++,y.assert(Fp(p.shape,k.shape),()=>`packed reshape ${p.shape} to ${k.shape} isn't free`);let R=ie({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}});b.push(R);let F=jl({a:k,b:R,backend:n,transposeA:f,transposeB:h,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),P=n.texData.get(F.dataId);y.assert(P.isPacked,()=>"batchMatMul result is expected to be packed"),p.shape=w,P.shape=e.outShape,g=ar({inputs:{x:F},backend:n}),g.shape=e.outShape,b.push(F)}else{let I=e.outHeight*e.outWidth,k=ie({inputs:{x:r},backend:n,attrs:{shape:d?[e.batchSize,I,e.inChannels]:[e.batchSize,e.inChannels,I]}}),w=ie({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}}),R=jl({a:d?k:w,b:d?w:k,transposeA:!d,transposeB:h,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});g=ie({inputs:{x:R},backend:n,attrs:{shape:e.outShape}}),b.push(k),b.push(w),b.push(R)}for(let I of b)n.disposeIntermediateTensorInfo(I);return g}function vI({x:r,filter:t,convInfo:e,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let{filterWidth:u,filterHeight:p,inChannels:l,outWidth:m,outHeight:c,dataFormat:d}=e,f=d==="channelsLast",h=u*p*l,g=c*m,b=[e.batchSize,h,g],T=!0,x=!1,I=[];if(s!=null){let X=kI(s.shape,f);X!=null&&(s=ie({inputs:{x:s},backend:n,attrs:{shape:X}}),I.push(s))}if(o!=null){let X=kI(o.shape,f);X!=null&&(o=ie({inputs:{x:o},backend:n,attrs:{shape:X}}),I.push(o))}let k=ie({inputs:{x:t},backend:n,attrs:{shape:[1,h,y.sizeFromShape(t.shape)/h]}});I.push(k);let w=new CI(b,e),R=[r.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],F=n.runWebGLProgram(w,[r],"float32",R),P=ie({inputs:{x:F},backend:n,attrs:{shape:b}});I.push(F),I.push(P);let E=o!=null,B=s!=null,G=i==="leakyrelu",U=i?Su(i,!0):null,V=new Cf(f?P.shape:k.shape,f?k.shape:P.shape,f?[e.batchSize,g,e.outChannels]:[e.batchSize,e.outChannels,g],T,x,E,U,B,G),W=f?[P,k]:[k,P];if(o&&W.push(o),B&&W.push(s),G){let X=n.makeTensorInfo([],"float32",y.createScalarValue(a,"float32"));W.push(X),I.push(X)}let H=n.runWebGLProgram(V,W,"float32"),j=ie({inputs:{x:H},backend:n,attrs:{shape:e.outShape}});I.push(H);for(let X of I)n.disposeIntermediateTensorInfo(X);return j}function tie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dataFormat:u,dilations:p,dimRoundingMode:l}=n,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,s.shape,a,p,i,l,!1,m),d;if(c.filterHeight===1&&c.filterWidth===1&&c.dilationHeight===1&&c.dilationWidth===1&&c.strideHeight===1&&c.strideWidth===1&&(c.padInfo.type==="SAME"||c.padInfo.type==="VALID"))d=SI({x:o,filter:s,convInfo:c,backend:e});else if(c.strideWidth<=2&&m==="channelsLast"&&$().getBool("WEBGL_EXP_CONV")){let h=new vf(c),g=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];d=e.runWebGLProgram(h,[o,s],"float32",g)}else if($().getBool("WEBGL_CONV_IM2COL"))d=vI({x:o,filter:s,convInfo:c,backend:e});else{let h=new Sf(c);d=e.runWebGLProgram(h,[o,s],"float32")}let f=ie({inputs:{x:d},backend:e,attrs:{shape:c.outShape}});return e.disposeIntermediateTensorInfo(d),f}var bG={kernelName:fo,backendName:"webgl",kernelFunc:tie};var AI=class{constructor(t){this.variableNames=["x","dy"];this.outputShape=t.filterShape;let e=t.strideHeight,n=t.strideWidth,o=t.padInfo.top,s=t.padInfo.left,a=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},wI=class{constructor(t){this.variableNames=["dy","W"];this.outputShape=t.inShape;let e=t.filterHeight,n=t.filterWidth,o=t.strideHeight,s=t.strideWidth,a=t.dataFormat==="channelsLast",i=e-1-t.padInfo.top,u=n-1-t.padInfo.left,p=a?1:2,l=a?2:3,m=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${m}];

        ivec2 dyCorner = ivec2(coords[${p}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},NI=class{constructor(t){this.variableNames=["x","dy"];this.outputShape=t.filterShape;let e=t.strideDepth,n=t.strideHeight,o=t.strideWidth,s=t.padInfo.front,a=t.padInfo.top,i=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${s};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${i};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},DI=class{constructor(t){this.variableNames=["dy","W"];this.outputShape=t.inShape;let e=t.filterDepth,n=t.filterHeight,o=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,u=e-1-t.padInfo.front,p=n-1-t.padInfo.top,l=o-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${p}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function rie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,pad:i,dataFormat:u,dimRoundingMode:p,filterShape:l}=n,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,l,a,1,i,p,!1,m),d=new AI(c);return e.runWebGLProgram(d,[o,s],"float32")}var yG={kernelName:Cm,backendName:"webgl",kernelFunc:rie};function nie(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{inputShape:a,strides:i,pad:u,dataFormat:p,dimRoundingMode:l}=n,m=C.convertConv2DDataFormat(p),c=C.computeConv2DInfo(a,s.shape,i,1,u,l,!1,m),d=new wI(c);return e.runWebGLProgram(d,[o,s],"float32")}var TG={kernelName:ho,backendName:"webgl",kernelFunc:nie};function oie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:u}=n,p=C.computeConv3DInfo(o.shape,s.shape,a,u,i),l=new II(p);return e.runWebGLProgram(l,[o,s],"float32")}var xG={kernelName:$u,backendName:"webgl",kernelFunc:oie};function sie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,pad:i,filterShape:u}=n,p=C.computeConv3DInfo(o.shape,u,a,1,i),l=new NI(p);return e.runWebGLProgram(l,[o,s],"float32")}var IG={kernelName:km,backendName:"webgl",kernelFunc:sie};function aie(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{pad:a,strides:i,inputShape:u}=n,p=C.computeConv3DInfo(u,s.shape,i,1,a),l=new DI(p);return e.runWebGLProgram(l,[o,s],"float32")}var CG={kernelName:Sm,backendName:"webgl",kernelFunc:aie};var iie=Js+`
  return cos(x);
`,uie=Se({opSnippet:iie}),kG={kernelName:go,backendName:"webgl",kernelFunc:uie};var pie=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,lie=Se({opSnippet:pie}),SG={kernelName:bo,backendName:"webgl",kernelFunc:lie};var RI=class{constructor(t,e,n,o,s){this.variableNames=["Image","Boxes","BoxInd"];this.outputShape=[];let[a,i,u,p]=t,[l]=e,[m,c]=n;this.outputShape=[l,m,c,p];let d=o==="bilinear"?1:0,[f,h]=[`${i-1}.0`,`${u-1}.0`],[g,b,T]=m>1?[`${(i-1)/(m-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[x,I,k]=c>1?[`${(u-1)/(c-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${b};
        float width_scale = ${I};

        float in_y = ${T};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${k};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var mie=r=>{let{inputs:t,backend:e,attrs:n}=r,{image:o,boxes:s,boxInd:a}=t,{cropSize:i,method:u,extrapolationValue:p}=n,l=new RI(o.shape,s.shape,i,u,p);return e.runWebGLProgram(l,[o,s,a],"float32")},vG={kernelName:pa,backendName:"webgl",kernelFunc:mie};var fg=class{constructor(t,e,n,o){this.op=t;this.outputShape=e;this.variableNames=["x"];this.customUniforms=[{name:"index",type:"float"}];let s=this.outputShape.length,a=this.op==="*"?"1.0":"0.0",i=n?a:`getX(${AG(s,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1],p="",l="";n?(p=o?`end != ${u-1}`:"end != 0",l=o?"end + 1":"end - 1"):(p=o?`end + pow2 < ${u}`:"end >= pow2",l=o?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Ue(s)} coords = getOutputCoords();
        int end = ${wG(s,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${p}) {
          int idx = ${l};
          ${wG(s,"coords",this.op)} = idx;
          val ${this.op}= getX(${AG(s,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function AG(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.x, ${t}.y`;if(r===3)return`${t}.x, ${t}.y, ${t}.z`;if(r===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function wG(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.y`;if(r===3)return`${t}.z`;if(r===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function FI(r,t,e,n,o,s){let a=t.shape.length,i=C.getAxesPermutation([n],a),u=t;i!=null&&(u=Ut({inputs:{x:t},backend:e,attrs:{perm:i}}));let p=C.getInnerMostAxes(1,a)[0];if(p!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let l=u.shape[p],m=ar({inputs:{x:u},backend:e});for(let c=0;c<=Math.ceil(Math.log2(l))-1;c++){let d=new fg(r,u.shape,!1,s),f=[[c]],h=m;m=e.runWebGLProgram(d,[m],m.dtype,f),e.disposeIntermediateTensorInfo(h)}if(o){let c=new fg(r,u.shape,o,s),d=m;m=e.runWebGLProgram(c,[m],m.dtype),e.disposeIntermediateTensorInfo(d)}if(i!=null){let c=C.getUndoAxesPermutation(i),d=Ut({inputs:{x:m},backend:e,attrs:{perm:c}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(u),d}return m}function die(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;return FI("*",o,e,s,a,i)}var NG={kernelName:ua,backendName:"webgl",kernelFunc:die};function fie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;return FI("+",o,e,s,a,i)}var DG={kernelName:yo,backendName:"webgl",kernelFunc:fie};function hie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let u=e.readSync(o.dataId),p=e.readSync(s.dataId),l=qx(u,p,s.dtype,s.shape,a);return e.makeTensorInfo([a],s.dtype,l)}else if(o.shape.length===2){let u=e.bufferSync(o),p=e.bufferSync(s),l=bO(u,p,a,i);return e.makeTensorInfo(l.shape,s.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var RG={kernelName:vm,backendName:"webgl",kernelFunc:hie};var PI=class{constructor(t,e,n){this.variableNames=["x"];this.outputShape=[];this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function gie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n,i=o.shape[0],u=a==="NHWC"?o.shape[1]:o.shape[2],p=a==="NHWC"?o.shape[2]:o.shape[3],l=a==="NHWC"?o.shape[3]:o.shape[1],m=u*s,c=p*s,d=l/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=new PI(f,s,a);return e.runWebGLProgram(h,[o],o.dtype)}var FG={kernelName:la,backendName:"webgl",kernelFunc:gie};var Af=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=t.outShape,this.enableShapeUniforms=Nt(this.outputShape.length);let a=t.filterHeight,i=t.filterWidth,u=t.outChannels/t.inChannels,p="",l="";n&&(o?p=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?p=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:p=`
          float activation(float x) {
            ${n}
          }
        `,l="result = activation(result);");let m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${p}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${m}
        ${l}
        setOutput(result);
      }
    `}};var wf=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=t.outShape,this.enableShapeUniforms=Nt(this.outputShape.length);let a=t.outChannels/t.inChannels,i=t.padInfo.left,u=t.strideWidth,p=t.dilationWidth,l=t.filterHeight,m=t.filterWidth,c=m,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let b=0;b<m;b++)d+=`
          vec4 xTexelC${b*2};
          int xTexelC${b*2}Ready;
          vec4 xTexelC${b*2+1};
          int xTexelC${b*2+1}Ready;
          vec4 xC${b};`;d+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let b=0;b<m;b++)d+=`
          xTexelC${b*2} = vec4(0.0);
          xTexelC${b*2}Ready = 0;
          xTexelC${b*2+1} = vec4(0.0);
          xTexelC${b*2+1}Ready = 0;
          xC${b} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let b=0;b<(c+1)/2;b++){let T=b*2;if(d+=`
          xC = xCCorner + ${T*p};
          `,u===1){if(T<m&&(i%2===1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }
              `,p===1&&T>0?d+=`
                xC${T} = vec4(xTexelC${T-2}.zw, xTexelC${T}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${T} = vec4(previous.zw, xTexelC${T}.xy);
                  } else {
                    xC${T} = vec4(0.0, 0.0, xTexelC${T}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                xC${T} = xTexelC${T};
                `,T+1<m)){let x=i%2===0?y.nearestLargerEven(p):p;p%2===0&&i%2===1||p%2!==0&&i%2!==1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                    xTexelC${T+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${T+1}.zw = vec2(0.0);
                    }
                    xTexelC${T+1}Ready = 1;
                  }
                  `,p>1?d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${T+1} = vec4(previous.zw, xTexelC${T+1}.xy);
                    } else {
                     xC${T+1} = vec4(0.0, 0.0, xTexelC${T+1}.xy);
                    }
                    `:d+=`
                    xC${T+1} = vec4(xTexelC${T}.zw, xTexelC${T+1}.xy);
                    `):x===1?d+=`
                    xC${T+1} = xTexelC${T};
                    `:d+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                      xTexelC${T+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${T+1}.zw = vec2(0.0);
                      }
                      xTexelC${T+1}Ready = 1;
                    }

                    xC${T+1} = xTexelC${T+1};
                    `}}else T<m&&(i%2===1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${T+1}Ready == 0) {
                  xTexelC${T+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${T+1}.zw = vec2(0.0);
                  }
                  xTexelC${T+1}Ready = 1;
                }

                xC${T} = vec4(xTexelC${T}.zw, xTexelC${T+1}.zw);
              `,T+1<m&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${T+1} = vec4(xTexelC${T+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                  xTexelC${T+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T+1}.zw = vec2(0.);
                  }
                  xTexelC${T+1}Ready = 1;
                }

                xC${T} = vec4(
                  xTexelC${T}.xy, xTexelC${T+1}.xy);
              `,T+1<m&&(d+=`
                  xC${T+1} = vec4(xTexelC${T}.zw, xTexelC${T+1}.zw);
                `)));T<m&&(d+=`
            wTexel = getW(r, ${T}, d1, q);
            dotProd += xC${T} * vec4(wTexel.xz, wTexel.xz);
          `,T+1<m&&(d+=`
              wTexel = getW(r, ${T+1}, d1, q);
              dotProd += xC${T+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let f="",h="";n&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:f=`vec4 activation(vec4 x) {
          ${n}
        }`,h="result = activation(result);");let g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${h}
        setOutput(result);
      }
    `}};function bie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:u,dimRoundingMode:p}=n,l=u;l==null&&(l=[1,1]),y.assert(C.eitherStridesOrDilationsAreOne(a,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let m=C.computeConv2DInfo(o.shape,s.shape,a,l,i,p,!0),c;$().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1?c=new wf(m):c=new Af(m);let d=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];return e.runWebGLProgram(c,[o,s],"float32",d)}var PG={kernelName:To,backendName:"webgl",kernelFunc:bie};var MI=class{constructor(t){this.variableNames=["x","dy"];this.outputShape=t.filterShape;let e=t.strideHeight,n=t.strideWidth,o=t.padInfo.top,s=t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},EI=class{constructor(t){this.variableNames=["dy","W"];this.outputShape=t.inShape;let e=t.filterHeight,n=t.filterWidth,o=t.strideHeight,s=t.strideWidth,a=e-1-t.padInfo.top,i=n-1-t.padInfo.left,u=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function yie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,dilations:i,pad:u,dimRoundingMode:p,filterShape:l}=n,m=C.computeConv2DInfo(o.shape,l,a,i,u,p,!0),c=new MI(m);return e.runWebGLProgram(c,[o,s],"float32")}var MG={kernelName:Am,backendName:"webgl",kernelFunc:yie};function Tie(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{strides:a,dilations:i,pad:u,dimRoundingMode:p,inputShape:l}=n,m=C.computeConv2DInfo(l,s.shape,a,i,u,p,!0),c=new EI(m);return e.runWebGLProgram(c,[o,s],"float32")}var EG={kernelName:wm,backendName:"webgl",kernelFunc:Tie};var LI=class{constructor(t){this.variableNames=["X"];this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function xie(r){let{inputs:t,backend:e}=r,{x:n}=t,o=[...n.shape,...n.shape],s=y.sizeFromShape(n.shape),a=ie({inputs:{x:n},backend:e,attrs:{shape:[s]}}),i=new LI(s),u=e.runWebGLProgram(i,[a],a.dtype),p=ie({inputs:{x:u},backend:e,attrs:{shape:o}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(u),p}var LG={kernelName:Nm,backendName:"webgl",kernelFunc:xie};var _I=class{constructor(t){this.variableNames=["x","W"];this.outputShape=t.outShape;let{inHeight:e,inWidth:n,padInfo:o,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:u,dilationHeight:p,dilationWidth:l}=t,{top:m,left:c}=o;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${a});
      const ivec2 pads = ivec2(${m}, ${c});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${p};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function Iie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:u}=n,p=C.computeDilation2DInfo(o.shape,s.shape,a,i,"NHWC",u),l,m=new _I(p);l=e.runWebGLProgram(m,[o,s],"float32");let c=ie({inputs:{x:l},backend:e,attrs:{shape:p.outShape}});return e.disposeIntermediateTensorInfo(l),c}var _G={kernelName:Bu,backendName:"webgl",kernelFunc:Iie};function Cie(r){let{inputs:t,backend:e,attrs:n}=r,{equation:o}=n,s=t,{allDims:a,summedDims:i,idDims:u}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(a.length,u,s);let{path:p,steps:l}=C.getEinsumComputePath(i,u),m=l.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of l[h]){let{permutationIndices:b,expandDims:T}=C.getEinsumPermutation(d,u[g]),x;C.isIdentityPermutation(b)?x=s[g]:(x=Ut({inputs:{x:s[g]},backend:e,attrs:{perm:b}}),f.push(x));let I=x.shape.slice();for(let k=0;k<T.length;++k)I.splice(T[k],0,1);y.arraysEqual(x.shape,I)||(x=ie({inputs:{x},backend:e,attrs:{shape:I}}),f.push(x)),c===null?c=x:(c=cg({inputs:{a:x,b:c},backend:e}),f.push(c))}h<m-1&&(p[h]>=0&&(c=ql({inputs:{x:c},backend:e,attrs:{axis:p[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&e.disposeIntermediateTensorInfo(h);return c}var $G={kernelName:Ou,backendName:"webgl",kernelFunc:Cie};var kie="return (x >= 0.0) ? x : (exp(x) - 1.0);",Sie=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,vie=Se({opSnippet:kie,packedOpSnippet:Sie}),BG={kernelName:Io,backendName:"webgl",kernelFunc:vie};var Aie="return (b >= 1.0) ? a : a * (b + 1.0);",wie=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Nie=r=>{let{inputs:t,backend:e}=r,{dy:n,y:o}=t,s=$().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Qs(wie,n.shape,o.shape):new is(Aie,n.shape,o.shape);return e.runWebGLProgram(s,[n,o],n.dtype)},OG={kernelName:Dm,backendName:"webgl",kernelFunc:Nie};var Die=`
  return vec4(equal(a, b));
`,Rie="return float(a == b);",Fie=ct({opSnippet:Rie,packedOpSnippet:Die,dtype:"bool",cpuKernelImpl:IO}),zG={kernelName:ma,backendName:"webgl",kernelFunc:Fie};var Pie=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${C.ERF_P};
  float a1 = ${C.ERF_A1};
  float a2 = ${C.ERF_A2};
  float a3 = ${C.ERF_A3};
  float a4 = ${C.ERF_A4};
  float a5 = ${C.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Mie=Se({opSnippet:Pie}),GG={kernelName:Ui,backendName:"webgl",kernelFunc:Mie};var Eie=Js+`
  return exp(x);
`,Lie=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ID=Se({opSnippet:Eie,packedOpSnippet:Lie,cpuKernelImpl:CO,dtype:"float32"}),UG={kernelName:Co,backendName:"webgl",kernelFunc:ID};function $I(r){let{inputs:t,attrs:e,backend:n}=r,{dim:o}=e,{input:s}=t,a=s.shape.length,i=s.shape.slice(),u=o;return o<0&&(y.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+o+1),i.splice(u,0,1),ie({inputs:{x:s},backend:n,attrs:{shape:i}})}var WG={kernelName:ds,backendName:"webgl",kernelFunc:$I};var KG="return exp(x) - 1.0;",_ie=Se({opSnippet:KG,packedOpSnippet:KG,cpuKernelImpl:kO}),VG={kernelName:ca,backendName:"webgl",kernelFunc:_ie};var hg=class{constructor(t,e,n){this.variableNames=["real","imag"];let o=e[1];this.outputShape=e;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${o}.0`:"1.0",i;if(t==="real")i="return real * expR - imag * expI;";else if(t==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function BI(r,t,e){let n=e.texData.get(r.dataId),o=y.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],a=o/s,i=ie({inputs:{x:r},backend:e,attrs:{shape:[a,s]}}),u=i.shape,p=new hg("real",u,t),l=new hg("imag",u,t),m=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:u},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:u}],c=e.runWebGLProgram(p,m,"float32"),d=e.runWebGLProgram(l,m,"float32"),f=_n({inputs:{real:c,imag:d},backend:e});e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d);let h=ie({inputs:{x:f},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(f),h}function $ie(r){let{inputs:t,backend:e}=r,{input:n}=t;return BI(n,!1,e)}var HG={kernelName:Rm,backendName:"webgl",kernelFunc:$ie};var OI=class{constructor(t,e){this.outputShape=[];this.customUniforms=[{name:"value",type:"float"}];this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Au(r){let{backend:t,attrs:e}=r,{shape:n,value:o}=e,{dtype:s}=e;if(s=s||y.inferDtype(o),s==="string"){let a=y.getArrayFromDType(s,y.sizeFromShape(n));return a.fill(o),t.makeTensorInfo(n,s,a)}else{let a=new OI(n,o),i=[[o]];return t.runWebGLProgram(a,[],s,i)}}var qG={kernelName:ii,backendName:"webgl",kernelFunc:Au};var zI=class{constructor(t){this.variableNames=["Image"];this.outputShape=[];let e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var jG={kernelName:da,backendName:"webgl",kernelFunc:({inputs:r,backend:t})=>{let{image:e}=r,n=t,o=new zI(e.shape);return n.runWebGLProgram(o,[e],e.dtype)}};var XG="return floor(x);",Bie=Se({opSnippet:XG,packedOpSnippet:XG,cpuKernelImpl:SO}),YG={kernelName:ko,backendName:"webgl",kernelFunc:Bie};var Oie=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,zie=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Gie=ct({opSnippet:Oie,packedOpSnippet:zie,dtype:"int32"}),ZG={kernelName:So,backendName:"webgl",kernelFunc:Gie};var GI=class{constructor(t){this.variableNames=["A"];let e=jt(),[n,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${n}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var UI=class{constructor(t){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;let e=jt(),[n,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${n}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}};var QG={kernelName:Gp,backendName:"webgl",kernelFunc:Uie},Nf,CD=$().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Uie(r){let{inputs:t,backend:e,attrs:n}=r,{pixels:o}=t,{numChannels:s}=n,a=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,[u,p]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],l=[p,u],m=[p,u,s];if(i||a){let h=$().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Nf==null||h!==CD)&&(CD=h,Nf=document.createElement("canvas").getContext("2d",{willReadFrequently:CD})),Nf.canvas.width=u,Nf.canvas.height=p,Nf.drawImage(o,0,0,u,p),o=Nf.canvas}let c=e.makeTensorInfo(l,"int32");e.texData.get(c.dataId).usage=2,e.gpgpu.uploadPixelDataToTexture(e.getTexture(c.dataId),o);let d=$().getBool("WEBGL_PACK")?new UI(m):new GI(m),f=e.runWebGLProgram(d,[c],"int32");return e.disposeData(c.dataId),f}function Wie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:p,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=C.convertConv2DDataFormat(l),g=C.computeConv2DInfo(o.shape,s.shape,u,m,p,c,!1,h),b,T=[],x=a!=null,I=i!=null,k=d==="leakyrelu",w=()=>{let F=[o,s],P=(E,B)=>{if(B==="NCHW"&&E.shape.length===1&&E.shape[0]!==1){let G=ie({inputs:{x:E},backend:e,attrs:{shape:[E.shape[0],1,1]}});return T.push(G),G}return E};if(x&&F.push(P(a,l)),I&&F.push(P(i,l)),k){let E=e.makeTensorInfo([],"float32",y.createScalarValue(f,"float32"));F.push(E),T.push(E)}return F};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))b=SI({x:o,filter:s,convInfo:g,backend:e,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else if(g.strideWidth<=2&&h==="channelsLast"&&$().getBool("WEBGL_EXP_CONV")){let F=d?Su(d,!0):null,P=new vf(g,x,F,I,k),E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],B=w();b=e.runWebGLProgram(P,B,"float32",E)}else if($().getBool("WEBGL_CONV_IM2COL"))b=vI({x:o,filter:s,convInfo:g,backend:e,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else{let F=d?Su(d,!1):null,P=new Sf(g,x,F,I,k),E=w();b=e.runWebGLProgram(P,E,"float32")}let R=ie({inputs:{x:b},backend:e,attrs:{shape:g.outShape}});return T.push(b),T.forEach(F=>e.disposeIntermediateTensorInfo(F)),R}var JG={kernelName:ws,backendName:"webgl",kernelFunc:Wie};function Kie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:p,dilations:l,dimRoundingMode:m,activation:c,leakyreluAlpha:d}=n,f=[],h=l;h==null&&(h=[1,1]),y.assert(C.eitherStridesOrDilationsAreOne(u,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${h}'`);let g=C.computeConv2DInfo(o.shape,s.shape,u,h,p,m,!0),b=$().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,T=c?Su(c,b):null,x=[o,s],I=a!=null,k=i!=null,w=c==="leakyrelu";if(I&&x.push(a),k&&x.push(i),w){let E=e.makeTensorInfo([],"float32",y.createScalarValue(d,"float32"));x.push(E),f.push(E)}let R;b?R=new wf(g,I,T,k,w):R=new Af(g,I,T,k,w);let F=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],P=e.runWebGLProgram(R,x,"float32",F);return f.forEach(E=>e.disposeIntermediateTensorInfo(E)),P}var e3={kernelName:Ns,backendName:"webgl",kernelFunc:Kie};var WI=class{constructor(t,e,n,o){this.sliceDim=t;this.strides=e;this.paramsShape=o;this.variableNames=["x","indices"];this.outputShape=n;let s=Ue(n.length),a=`
    int index;`;for(let i=0;i<this.sliceDim;i++)a+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function Vie(r){let{inputs:t,backend:e}=r,{params:n,indices:o}=t,s=o.shape,a=s[s.length-1],i=y.sizeFromShape(n.shape),[u,p,l,m]=C.prepareAndValidate(n,o),c=ie({inputs:{x:o},backend:e,attrs:{shape:[p,a]}}),d=ie({inputs:{x:n},backend:e,attrs:{shape:[y.sizeFromShape(n.shape)/l,l]}});if(e.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let b=e.readSync(o.dataId),T=e.bufferSync(n),x=vO(b,T,n.dtype,p,a,l,m,n.shape,i);return e.makeTensorInfo(u,n.dtype,x.values)}let f=new WI(a,m,[p,l],n.shape),h=e.runWebGLProgram(f,[d,c],d.dtype),g=ie({inputs:{x:h},backend:e,attrs:{shape:u}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(h),g}var t3={kernelName:fa,backendName:"webgl",kernelFunc:Vie};var KI=class{constructor(t,e){this.variableNames=["A","indices"];this.outputShape=e,this.rank=e.length;let n=Ue(this.rank),o=Hie(t,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}};function Hie(r,t){let e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push("index"):n.push(`${e[o]}`);return n.join()}function kD(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n,u=y.parseAxisParam(a,o.shape)[0];if($().get("DEBUG")){let T=e.readSync(s.dataId),x=o.shape[u];for(let I=0;I<T.length;++I){let k=T[I];y.assert(k<=x-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${x-1}]`)}}let p=C.segment_util.collectGatherOpShapeInfo(o,s,u,i),l=y.sizeFromShape(s.shape),m=[],c=ie({inputs:{x:o},backend:e,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),d=ie({inputs:{x:s},backend:e,attrs:{shape:[p.batchSize,l/p.batchSize]}});m.push(c),m.push(d);let f=[p.batchSize,p.outerSize,l/p.batchSize,p.sliceSize];if(e.shouldExecuteOnCPU([o,s])||o.dtype==="string"){let T=e.bufferSync(d),x=e.bufferSync(c),I=AO(x,T,f);return m.forEach(k=>e.disposeIntermediateTensorInfo(k)),e.makeTensorInfo(p.outputShape,I.dtype,I.values)}let h=new KI(c.shape,f),g=e.runWebGLProgram(h,[c,d],c.dtype);m.push(g);let b=ie({inputs:{x:g},backend:e,attrs:{shape:p.outputShape}});return m.forEach(T=>e.disposeIntermediateTensorInfo(T)),b}var r3={kernelName:fs,backendName:"webgl",kernelFunc:kD};var qie="return float(a > b);",jie=`
  return vec4(greaterThan(a, b));
`,Xie=ct({opSnippet:qie,packedOpSnippet:jie,cpuKernelImpl:wO,dtype:"bool"}),n3={kernelName:ha,backendName:"webgl",kernelFunc:Xie};var Yie="return float(a >= b);",Zie=`
  return vec4(greaterThanEqual(a, b));
`,Qie=ct({opSnippet:Yie,packedOpSnippet:Zie,dtype:"bool",cpuKernelImpl:NO}),o3={kernelName:Ao,backendName:"webgl",kernelFunc:Qie};function Jie(r){let{inputs:t,backend:e}=r,{input:n}=t;return BI(n,!0,e)}var s3={kernelName:Fm,backendName:"webgl",kernelFunc:Jie};var eue="return float(!isnan(x) && !isinf(x));",tue=Se({opSnippet:eue,dtype:"bool"}),a3={kernelName:Wi,backendName:"webgl",kernelFunc:tue};var rue="return float(isinf(x));",nue=Se({opSnippet:rue,dtype:"bool"}),i3={kernelName:Ki,backendName:"webgl",kernelFunc:nue};var oue="return float(isnan(x));",sue=Se({opSnippet:oue,dtype:"bool"}),u3={kernelName:ga,backendName:"webgl",kernelFunc:sue};var aue="return float(a < b);",iue=`
  return vec4(lessThan(a, b));
`,uue=ct({opSnippet:aue,packedOpSnippet:iue,cpuKernelImpl:DO,dtype:"bool"}),p3={kernelName:ba,backendName:"webgl",kernelFunc:uue};var pue="return float(a <= b);",lue=`
  return vec4(lessThanEqual(a, b));
`,mue=ct({opSnippet:pue,packedOpSnippet:lue,cpuKernelImpl:RO,dtype:"bool"}),l3={kernelName:ya,backendName:"webgl",kernelFunc:mue};function cue(r){let{backend:t,attrs:e}=r,{start:n,stop:o,num:s}=e,a=FO(n,o,s);return t.makeTensorInfo([a.length],"float32",a)}var m3={kernelName:Pm,backendName:"webgl",kernelFunc:cue};var due=Js+`
  return x < 0.0 ? 0./0. : log(x);
`,fue=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,hue=Se({opSnippet:due,packedOpSnippet:fue,cpuKernelImpl:PO}),c3={kernelName:No,backendName:"webgl",kernelFunc:hue};var gue=Js+`
  return log(1.0 + x);
`,bue=Se({opSnippet:gue}),d3={kernelName:Vi,backendName:"webgl",kernelFunc:bue};var yue="return float(a >= 1.0 && b >= 1.0);",Tue=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,xue=ct({opSnippet:yue,packedOpSnippet:Tue,dtype:"bool"}),f3={kernelName:Ta,backendName:"webgl",kernelFunc:xue};var Iue="return float(!(x >= 1.0));",Cue=Se({opSnippet:Iue}),h3={kernelName:xa,backendName:"webgl",kernelFunc:Cue};var kue="return float(a >= 1.0 || b >= 1.0);",Sue=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,vue=ct({opSnippet:kue,packedOpSnippet:Sue,dtype:"bool"}),g3={kernelName:Hi,backendName:"webgl",kernelFunc:vue};var VI=class{constructor(t,e,n,o,s){this.variableNames=["x"];this.outputShape=[];let a=e,i=t[3]-1;this.outputShape=t;let u,p=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${p})`:s===1?u=`1.0/(${p})`:u=`exp(log(${p}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}};var HI=class{constructor(t,e,n,o,s){this.variableNames=["x"];this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;let a=e,i=t[3]-1;this.outputShape=t;let u,p=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${p})`:s===1?u=`1.0/(${p})`:u=`exp(log(${p}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}};var Aue=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{depthRadius:s,bias:a,alpha:i,beta:u}=n,p=$().getBool("WEBGL_PACK_NORMALIZATION")?new HI(o.shape,s,a,i,u):new VI(o.shape,s,a,i,u);return e.runWebGLProgram(p,[o],o.dtype)},b3={kernelName:Gu,backendName:"webgl",kernelFunc:Aue};var qI=class{constructor(t,e,n,o,s){this.variableNames=["inputImage","outputImage","dy"];this.outputShape=[];this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=o,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${s})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var wue=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o,y:s,dy:a}=t,{depthRadius:i,bias:u,alpha:p,beta:l}=n,m=new qI(o.shape,i,u,p,l);return e.runWebGLProgram(m,[o,s,a],o.dtype)},y3={kernelName:Mm,backendName:"webgl",kernelFunc:wue};function T3(r,t,e,n){let o=y.sizeFromShape(t),a=y.sizeFromShape(r.shape)/o,i=ie({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),u=Qn(i,r.dtype,"max",n),p=ie({inputs:{x:u},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),p}function SD(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reductionIndices:s,keepDims:a}=n,i=o.shape.length,u=y.parseAxisParam(s,o.shape),p=u,l=C.getAxesPermutation(p,i),m=l!=null,c=e.shouldExecuteOnCPU([o]),d=o;if(m){if(c){let x=e.texData.get(d.dataId).values,I=new Array(i);for(let R=0;R<I.length;R++)I[R]=o.shape[l[R]];let k=Vl(x,o.shape,o.dtype,l,I);d=e.makeTensorInfo(I,o.dtype);let w=e.texData.get(d.dataId);w.values=k}else d=Pp(o,l,e);p=C.getInnerMostAxes(p.length,i)}C.assertAxesAreInnerMostDims("max",p,i);let[f,h]=C.computeOutAndReduceShapes(d.shape,p),g=f;a&&(g=C.expandShapeToKeepDim(f,u));let b;if(c){let x=e.texData.get(d.dataId).values,I=MO(x,y.sizeFromShape(h),g,o.dtype);b=e.makeTensorInfo(g,o.dtype);let k=e.texData.get(b.dataId);k.values=I}else b=T3(d,h,g,e);return m&&e.disposeIntermediateTensorInfo(d),b}var x3={kernelName:Do,backendName:"webgl",kernelFunc:SD};var Nue=If+`
  return max(a, b);
`,Due=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ai+`
  return result;
`,Rue=ct({opSnippet:Nue,packedOpSnippet:Due,cpuKernelImpl:EO}),I3={kernelName:Ro,backendName:"webgl",kernelFunc:Rue};function Fue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;Za(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,p=1;y.assert(C.eitherStridesOrDilationsAreOne(a,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${p}'`);let l=C.computePool2DInfo(o.shape,s,a,p,i,u);if(l.filterWidth===1&&l.filterHeight===1&&y.arraysEqual(l.inShape,l.outShape))return ar({inputs:{x:o},backend:e});let m=new Ja(l,"max",!1);return e.runWebGLProgram(m,[o],o.dtype)}var C3={kernelName:Fo,backendName:"webgl",kernelFunc:Fue};function Pue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dataFormat:u,dimRoundingMode:p}=n,l=[1,1,1],m=C.computePool3DInfo(o.shape,s,a,l,i,p,u),c=new Mp(m,"max",!1);return e.runWebGLProgram(c,[o],o.dtype)}var k3={kernelName:Uu,backendName:"webgl",kernelFunc:Pue};var jI=class{constructor(t){this.variableNames=["dy","maxPos"];this.outputShape=t.inShape;let e=t.strideHeight,n=t.strideWidth,o=t.dilationHeight,s=t.effectiveFilterHeight,a=t.effectiveFilterWidth,i=s-1-t.padInfo.top,u=a-1-t.padInfo.left,p=s*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${p} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},XI=class{constructor(t){this.variableNames=["dy","maxPos"];this.outputShape=t.inShape;let e=t.strideDepth,n=t.strideHeight,o=t.strideWidth,s=t.dilationDepth,a=t.dilationHeight,i=t.dilationWidth,u=t.effectiveFilterDepth,p=t.effectiveFilterHeight,l=t.effectiveFilterWidth,m=u-1-t.padInfo.front,c=p-1-t.padInfo.top,d=l-1-t.padInfo.left,f=u*p*l-1;this.userCode=`
      const ivec3 pads = ivec3(${m}, ${c}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${p} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Mue(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,a=s,{filterSize:i,strides:u,pad:p,dimRoundingMode:l}=n,m=[1,1,1],c=C.computePool3DInfo(a.shape,i,u,m,p,l),d=new Mp(c,"max",!0),f=e.runWebGLProgram(d,[a],a.dtype),h=new XI(c),g=e.runWebGLProgram(h,[o,f],a.dtype);return e.disposeIntermediateTensorInfo(f),g}var S3={kernelName:Lm,backendName:"webgl",kernelFunc:Mue};function Eue(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s,output:a}=t,i=s;Za([s,a],"maxPoolGrad");let{filterSize:u,strides:p,pad:l,dimRoundingMode:m}=n,c=C.computePool2DInfo(i.shape,u,p,1,l,m),d=!0,f=new Ja(c,"max",d),h=e.runWebGLProgram(f,[i],i.dtype),g=new jI(c),b=e.runWebGLProgram(g,[o,h],i.dtype);return e.disposeIntermediateTensorInfo(h),b}var v3={kernelName:Em,backendName:"webgl",kernelFunc:Eue};function A3(r,t,e,n){let o=new Ja(e,"max",!1),s=n.runWebGLProgram(o,[r],"float32");o=new Ja(e,"max",!0,!0,t);let a=n.runWebGLProgram(o,[r],"float32");return[s,a]}var w3={kernelName:_m,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=t,u=e;y.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let p=[1,1];y.assert(C.eitherStridesOrDilationsAreOne(s,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${p}'`);let l=C.computePool2DInfo(n.shape,o,s,p,a),[m,c]=A3(n,i,l,u);return[m,c]}};function N3(r,t,e,n){let o=y.sizeFromShape(t),a=y.sizeFromShape(r.shape)/o,i=ie({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),u=Qn(i,"float32","mean",n),p=ie({inputs:{x:u},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),p}var D3={kernelName:Po,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{keepDims:o,axis:s}=t,a=e,i=n.shape.length,u=y.parseAxisParam(s,n.shape),p=u,l=C.getAxesPermutation(p,i),m=l!=null,c=a.shouldExecuteOnCPU([n]),d=[],f=n;if(m){if(c){let I=a.texData.get(f.dataId).values,k=new Array(i);for(let F=0;F<k.length;F++)k[F]=n.shape[l[F]];let w=Vl(I,n.shape,n.dtype,l,k);f=a.makeTensorInfo(k,n.dtype);let R=a.texData.get(f.dataId);R.values=w}else f=Pp(n,l,a);d.push(f),p=C.getInnerMostAxes(p.length,i)}C.assertAxesAreInnerMostDims("sum",p,i);let[h,g]=C.computeOutAndReduceShapes(f.shape,p),b=h;o&&(b=C.expandShapeToKeepDim(h,u));let T=N3(f,g,b,a);for(let x of d)a.disposeIntermediateTensorInfo(x);return T}};function Lue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n,i=o.shape.length,u=y.parseAxisParam(s,o.shape),p=u,l=C.getAxesPermutation(p,i),m=o;l!=null&&(m=Ut({inputs:{x:o},backend:e,attrs:{perm:l}}),p=C.getInnerMostAxes(p.length,o.shape.length)),C.assertAxesAreInnerMostDims("min",p,i);let[c,d]=C.computeOutAndReduceShapes(m.shape,p),f=y.sizeFromShape(d),h=ie({inputs:{x:m},backend:e,attrs:{shape:[-1,f]}}),g=Qn(h,h.dtype,"min",e),b;if(a){let T=C.expandShapeToKeepDim(c,u);b=ie({inputs:{x:g},backend:e,attrs:{shape:T}})}else b=ie({inputs:{x:g},backend:e,attrs:{shape:c}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(g),l!=null&&e.disposeIntermediateTensorInfo(m),b}var R3={kernelName:Mo,backendName:"webgl",kernelFunc:Lue};var _ue=If+`
  return min(a, b);
`,$ue=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ai+`
  return result;
`,Bue=ct({opSnippet:_ue,packedOpSnippet:$ue,cpuKernelImpl:LO}),F3={kernelName:Eo,backendName:"webgl",kernelFunc:Bue};var YI=class{constructor(t,e,n){this.variableNames=["x"];this.outputShape=e.map((l,m)=>l[0]+t[m]+l[1]);let o=t.length,s=Ue(o),a=e.map(l=>l[0]).join(","),i=e.map((l,m)=>l[0]+t[m]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),p=n==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${p};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${p};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${p};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${p};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}};var ZI=class{constructor(t,e,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e.map((f,h)=>f[0]+t[h]+f[1]);let o=t.length,s=Ue(o),a=e.map(f=>f[0]).join(","),i=e.map((f,h)=>f[0]+t[h]).join(","),u=sr("rc",o),p=sr("source",o),l=`${u[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${p.slice(-2).join()})`,c=n==="reflect"?0:1,d="";if(o===1){let f=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${c};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${c};
        }
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${p.join()}), ${m});
        ${u[o-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${p.join()}), ${m});
        }
      `}else{let f=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${c}) +
                gte * ((end - 1) * 2 - source + ${c});
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${p.join()}), ${m});
        ${u[o-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${p.join()}), ${m});
        }
        rc = outputLoc;
        ${u[o-2]} += 1;
        if(${u[o-2]} < ${this.outputShape[o-2]}) {
          ${f}
          result[2] = getChannel(getX(${p.join()}), ${m});
          ${u[o-1]} += 1;
          if(${l}) {
            ${f}
            result[3] = getChannel(getX(${p.join()}), ${m});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}};var Oue=({inputs:r,backend:t,attrs:e})=>{let{x:n}=r,{paddings:o,mode:s}=e,a=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ZI(n.shape,o,s):new YI(n.shape,o,s);return t.runWebGLProgram(a,[n],n.dtype)},P3={kernelName:Lo,backendName:"webgl",kernelFunc:Oue};var zue=`if (b == 0.0) return NAN;
  return mod(a, b);`,Gue=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Ai+`
  return result;
`,Uue=ct({opSnippet:zue,packedOpSnippet:Gue}),M3={kernelName:qi,backendName:"webgl",kernelFunc:Uue};var QI=class{constructor(t,e,n){this.variableNames=["probs"];this.customUniforms=[{name:"seed",type:"float"}];this.outputShape=[t,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}};var Wue=`
if (a == b) {
  return 1.0;
};
return a / b;`,Kue=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,vD=ct({opSnippet:Wue,packedOpSnippet:Kue,checkOutOfBounds:!0}),E3={kernelName:xo,backendName:"webgl",kernelFunc:vD};var L3="return a - b;",AD=ct({opSnippet:L3,packedOpSnippet:L3,supportsComplex:!0,cpuKernelImpl:ez}),_3={kernelName:Qo,backendName:"webgl",kernelFunc:AD};function wD(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{dim:s}=n,a=y.parseAxisParam([s],o.shape),i=SD({inputs:{x:o},backend:e,attrs:{reductionIndices:a,keepDims:!1}}),u=C.expandShapeToKeepDim(i.shape,a),p=ie({inputs:{x:i},backend:e,attrs:{shape:u}}),l=AD({inputs:{a:o,b:p},backend:e}),m=ID({inputs:{x:l},backend:e}),c=ql({inputs:{x:m},backend:e,attrs:{axis:a,keepDims:!1}}),d=ie({inputs:{x:c},backend:e,attrs:{shape:u}}),f=vD({inputs:{a:m,b:d},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),f}var $3={kernelName:Yo,backendName:"webgl",kernelFunc:wD};function Vue(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{numSamples:s,seed:a,normalized:i}=n,u=i?o:wD({inputs:{logits:o},backend:e,attrs:{dim:o.shape.length-1}}),p=u.shape[0],l=u.shape[1],m=new QI(p,l,s),c=[[a]],d=e.runWebGLProgram(m,[u],"int32",c);return i||e.disposeIntermediateTensorInfo(u),d}var B3={kernelName:$m,backendName:"webgl",kernelFunc:Vue};var Hue=Tr+`
  return -x;
`,que=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function jue(r){let{inputs:t,backend:e}=r,{x:n}=t;if(e.shouldExecuteOnCPU([n])){let s=e.texData.get(n.dataId),[a,i]=$O(s.values,n.shape,n.dtype);return e.makeTensorInfo(i,n.dtype,a)}let o;return $().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new as(n.shape,que):o=new an(n.shape,Hue),e.runWebGLProgram(o,[n],n.dtype)}var O3={kernelName:hs,backendName:"webgl",kernelFunc:jue};var Xue=yr.nonMaxSuppressionV3Impl;function Yue(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=n,p=e.readSync(o.dataId),l=e.readSync(s.dataId),{selectedIndices:m}=Xue(p,l,a,i,u);return e.makeTensorInfo([m.length],"int32",new Int32Array(m))}var z3={kernelName:Ca,backendName:"webgl",kernelFunc:Yue};var Zue=yr.nonMaxSuppressionV4Impl;function Que(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:p}=n,l=e.readSync(o.dataId),m=e.readSync(s.dataId),{selectedIndices:c,validOutputs:d}=Zue(l,m,a,i,u,p);return[e.makeTensorInfo([c.length],"int32",new Int32Array(c)),e.makeTensorInfo([],"int32",new Int32Array([d]))]}var G3={kernelName:ji,backendName:"webgl",kernelFunc:Que};var Jue=yr.nonMaxSuppressionV5Impl;function epe(r){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:p}=n,l=e.readSync(o.dataId),m=e.readSync(s.dataId),c=a,d=i,f=u,h=p,{selectedIndices:g,selectedScores:b}=Jue(l,m,c,d,f,h);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var U3={kernelName:ka,backendName:"webgl",kernelFunc:epe};var JI=class{constructor(t,e,n,o){this.variableNames=["indices"];this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${n}),
                      float(index == coords.y)));
      }
    `}};var tpe=r=>{let{inputs:t,backend:e,attrs:n}=r,{indices:o}=t,{dtype:s,depth:a,onValue:i,offValue:u}=n,p=y.sizeFromShape(o.shape),l=new JI(p,a,i,u),m=ie({inputs:{x:o},backend:e,attrs:{shape:[p]}}),c=e.runWebGLProgram(l,[m],s);e.disposeIntermediateTensorInfo(m);let d=[...o.shape,a],f=ie({inputs:{x:c},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(c),f},W3={kernelName:Sa,backendName:"webgl",kernelFunc:tpe};function gg(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="complex64"){let o=vu({inputs:{input:n},backend:e}),s=gg({inputs:{x:o},backend:e}),a=Xl({inputs:{input:n},backend:e}),i=gg({inputs:{x:a},backend:e}),u=_n({inputs:{real:s,imag:i},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),u}else return Au({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:e})}var K3={kernelName:Ss,backendName:"webgl",kernelFunc:gg};function V3(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=vu({inputs:{input:n},backend:e}),s=V3({inputs:{x:o},backend:e}),a=Xl({inputs:{input:n},backend:e}),i=gg({inputs:{x:a},backend:e}),u=_n({inputs:{real:s,imag:i},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),u}else return Au({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:e})}var H3={kernelName:gs,backendName:"webgl",kernelFunc:V3};function rpe(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n;if(t.length===1)return $I({inputs:{input:t[0]},backend:e,attrs:{dim:o}});let s=t[0].shape,a=t[0].dtype;t.forEach(l=>{y.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=t.map(l=>{let m=$I({inputs:{input:l},backend:e,attrs:{dim:o}});return i.push(m),m}),p=xD({inputs:u,backend:e,attrs:{axis:o}});return i.forEach(l=>e.disposeIntermediateTensorInfo(l)),p}var q3={kernelName:bs,backendName:"webgl",kernelFunc:rpe};var eC=class{constructor(t,e,n){this.variableNames=["x"];this.customUniforms=[{name:"value",type:"float"}];this.outputShape=e.map((p,l)=>p[0]+t[l]+p[1]);let o=t.length,s=Ue(o),a=e.map(p=>p[0]).join(","),i=e.map((p,l)=>p[0]+t[l]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}};var tC=class{constructor(t,e,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"value",type:"float"}];this.outputShape=e.map((h,g)=>h[0]+t[g]+h[1]);let o=t.length,s=Ue(o),a=e.map(h=>h[0]).join(","),i=e.map((h,g)=>h[0]+t[g]).join(","),u=sr("rc",o),p=sr("source",o),l=`${u[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${p.slice(-2).join()})`,c=[`${s} rc = outputLoc;`,`${u[o-1]} += 1;
       if(${l}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${u[o-2]} += 1;
       if(${u[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${u[o-1]} += 1;
         if(${l}) {`],d=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",f="";for(let h=0,g=o===1?2:4;h<g;h++)f+=`
        ${c[h]}
        if (${d}) {
          result[${h}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${h}] = getChannel(getX(${p.join()}), ${m});
        }
      `;f+=o===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var ND=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,constantValue:a}=n;if(y.sizeFromShape(o.shape)===0){let p=s.map((l,m)=>l[0]+o.shape[m]+l[1]);return Au({backend:e,attrs:{shape:p,value:a,dtype:o.dtype}})}let i=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tC(o.shape,s,a):new eC(o.shape,s,a),u=[[a]];return e.runWebGLProgram(i,[o],o.dtype,u)},j3={kernelName:$o,backendName:"webgl",kernelFunc:ND};var npe=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,ope=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Ai+`
  return result;
`,spe=ct({opSnippet:npe,packedOpSnippet:ope}),X3={kernelName:Bo,backendName:"webgl",kernelFunc:spe};function ape(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n,i=o.shape.length,u=[],p=y.parseAxisParam(s,o.shape),l=p,m=C.getAxesPermutation(l,i),c=o;m!=null&&(c=Ut({inputs:{x:o},backend:e,attrs:{perm:m}}),l=C.getInnerMostAxes(l.length,i),u.push(c)),C.assertAxesAreInnerMostDims("prod",l,i);let d;if(e.shouldExecuteOnCPU([c])){let f=e.texData.get(c.dataId).values,{outVals:h,outShape:g,outDtype:b}=OO(c.shape,c.dtype,f,l);d=e.makeTensorInfo(g,b,h)}else{let[f,h]=C.computeOutAndReduceShapes(c.shape,l),g=y.sizeFromShape(h),b=ie({inputs:{x:c},backend:e,attrs:{shape:[-1,g]}}),T=ru(o.dtype),x=Qn(b,T,"prod",e);d=ie({inputs:{x},backend:e,attrs:{shape:f}}),u.push(b),u.push(x)}if(a){u.push(d);let f=C.expandShapeToKeepDim(d.shape,p);d=ie({inputs:{x:d},backend:e,attrs:{shape:f}})}return u.forEach(f=>e.disposeIntermediateTensorInfo(f)),d}var Y3={kernelName:zo,backendName:"webgl",kernelFunc:ape};function ipe(r){let{inputs:t,backend:e,attrs:n}=r,{paramsNestedSplits:o,paramsDenseValues:s,indices:a}=t,{outputRaggedRank:i}=n,u=o.map(b=>e.readSync(b.dataId)),p=o.map(b=>b.shape),l=e.readSync(s.dataId),m=e.readSync(a.dataId),[c,d,f]=zO(u,p,l,s.shape,s.dtype,m,a.shape,i),h=c.map(b=>e.makeTensorInfo([b.length],"int32",b)),g=e.makeTensorInfo(f,s.dtype,d);return h.concat([g])}var Z3={kernelName:Bm,backendName:"webgl",kernelFunc:ipe};function upe(r){let{inputs:t,backend:e,attrs:n}=r,{shape:o,values:s,defaultValue:a,rowPartitionTensors:i}=t,{rowPartitionTypes:u}=n,p=e.readSync(o.dataId),l=e.readSync(s.dataId),m=e.readSync(a.dataId),c=i.map(g=>e.readSync(g.dataId)),d=i.map(g=>g.shape),[f,h]=GO(p,o.shape,l,s.shape,s.dtype,m,a.shape,c,d,u);return e.makeTensorInfo(f,s.dtype,h)}var Q3={kernelName:Om,backendName:"webgl",kernelFunc:upe};var DD=r=>{let{backend:t,attrs:e}=r,{start:n,stop:o,step:s,dtype:a}=e,i=UO(n,o,s,a);return t.makeTensorInfo([i.length],a,i)},J3={kernelName:ui,backendName:"webgl",kernelFunc:DD};var ppe="return 1.0 / x;",lpe=Se({opSnippet:ppe}),eU={kernelName:va,backendName:"webgl",kernelFunc:lpe};var mpe=Tr+`
  return (x < 0.0) ? 0.0 : x;
`,cpe=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,dpe=Se({opSnippet:mpe,packedOpSnippet:cpe}),tU={kernelName:Go,backendName:"webgl",kernelFunc:dpe};var fpe=Tr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,hpe=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,gpe=Se({opSnippet:fpe,packedOpSnippet:hpe}),rU={kernelName:Ko,backendName:"webgl",kernelFunc:gpe};var rC=class{constructor(t,e,n,o,s){this.variableNames=["A"];this.outputShape=[];let[a,i,u,p]=t;this.outputShape=[a,e,n,p];let l=[o&&e>1?i-1:i,o&&n>1?u-1:u],m=[o&&e>1?e-1:e,o&&n>1?n-1:n],c;s?c="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":c="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/m[0]},
          ${l[1]/m[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var nC=class{constructor(t,e,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[a,i,u,p]=t;this.outputShape=[a,e,n,p];let l=[o&&e>1?i-1:i,o&&n>1?u-1:u],m=[o&&e>1?e-1:e,o&&n>1?n-1:n],c;s?c="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":c="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/m[0]},
          ${l[1]/m[1]},
          ${l[1]/m[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${p-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function bpe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,p]=i,l=$().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new nC(o.shape,u,p,s,a):new rC(o.shape,u,p,s,a);return e.runWebGLProgram(l,[o],"float32")}var nU={kernelName:Wo,backendName:"webgl",kernelFunc:bpe};var oC=class{constructor(t,e,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=e;let[,o,s]=e,[,a,i]=t,u=[n&&a>1?o-1:o,n&&i>1?s-1:s],p=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=u[0]/p[0],m=u[1]/p[1],c=1/l,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function ype(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:a}=n,i=new oC(s.shape,o.shape,a);return e.runWebGLProgram(i,[s],s.dtype)}var oU={kernelName:Gm,backendName:"webgl",kernelFunc:ype};var sC=class{constructor(t,e,n,o,s){this.variableNames=["A"];this.outputShape=[];let[a,i,u,p]=t;this.outputShape=[a,e,n,p];let l=[o&&e>1?i-1:i,o&&n>1?u-1:u],m=[o&&e>1?e-1:e,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/m[0]},
          ${l[1]/m[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var aC=class{constructor(t,e,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[a,i,u,p]=t;this.outputShape=[a,e,n,p];let l=[o&&e>1?i-1:i,o&&n>1?u-1:u],m=[o&&e>1?e-1:e,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/m[0]},
          ${l[1]/m[1]},
          ${l[1]/m[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${p-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function Tpe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,p]=i,l=$().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new aC(o.shape,u,p,s,a):new sC(o.shape,u,p,s,a);return e.runWebGLProgram(l,[o],o.dtype)}var sU={kernelName:Uo,backendName:"webgl",kernelFunc:Tpe};var iC=class{constructor(t,e,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=e;let[,o,s]=e,[,a,i]=t,u=[n&&a>1?o-1:o,n&&i>1?s-1:s],p=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=u[0]/p[0],m=u[1]/p[1],c=1/l,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${p[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${p[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function xpe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:a}=n,i=new iC(s.shape,o.shape,a);return e.runWebGLProgram(i,[s],s.dtype)}var aU={kernelName:zm,backendName:"webgl",kernelFunc:xpe};var uC=class{constructor(t,e){this.variableNames=["x"];let n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}let o=i=>e.indexOf(i)!==-1&&t[i]!==1?`${t[i]} - coords[${i}] - 1`:`coords[${i}]`,s=t.map((i,u)=>o(u)).join(","),a=Ue(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var pC=class{constructor(t,e){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;let n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;let o=sr("rc",n),s=`${o[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${o[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Ue(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(o.slice())};
          if(${s}){
            result.g = ${p(o.slice())};
          }
          if(${a}) {
            result.b = ${l(o.slice())};
            if(${s}) {
              result.a = ${m(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(f){return c(f)}function p(f){return f[n-1]="("+f[n-1]+" + 1)",c(f)}function l(f){return f[n-2]="("+f[n-2]+" + 1)",c(f)}function m(f){return f[n-1]="("+f[n-1]+" + 1)",f[n-2]="("+f[n-2]+" + 1)",c(f)}function c(f){let h=t.map((T,x)=>d(x,f)),g=h.join(","),b=h.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${b}))`}function d(f,h){return e.indexOf(f)!==-1&&t[f]!==1?`${t[f]} - ${h[f]} - 1`:`${h[f]}`}}};function Ipe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dims:s}=n,a=o.shape.length,i=y.parseAxisParam(s,o.shape);if(a===0)return ar({inputs:{x:o},backend:e});let u=$().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new pC(o.shape,i):new uC(o.shape,i);return e.runWebGLProgram(u,[o],o.dtype)}var iU={kernelName:Aa,backendName:"webgl",kernelFunc:Ipe};var lC=class{constructor(t,e){this.variableNames=["Image"];this.outputShape=[];this.customUniforms=[{name:"params",type:"vec4"}];let n=t[1],o=t[2];this.outputShape=t;let s="";typeof e=="number"?s=`float outputValue = ${e.toFixed(2)};`:s=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var uU={kernelName:Ea,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=t,i=e,u=new lC(n.shape,s),[p,l]=C.getImageCenter(a,n.shape[1],n.shape[2]),m=[[p,l,Math.sin(o),Math.cos(o)]];return i.runWebGLProgram(u,[n],n.dtype,m)}};var Cpe=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,kpe=Se({opSnippet:Cpe}),pU={kernelName:wa,backendName:"webgl",kernelFunc:kpe};var Spe="return inversesqrt(x);",vpe=Se({opSnippet:Spe,cpuKernelImpl:WO}),lU={kernelName:Vo,backendName:"webgl",kernelFunc:vpe};var Df=class{constructor(t,e,n,o,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"];this.outputShape=a;let u=Ue(s.length),p=Ue(a.length),l="";n===1?l="i":n===2&&(l="i, j");let m=`getIndices(${l})`,c="";o===1?c="i":o===2&&(c="i, coords[1]");let d=`getUpdates(${c})`,f=e>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${s});

        void main() {
          ${p} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${m});
              flattenedIndex += index * ${f};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function Ape(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,{sliceRank:i,numUpdates:u,sliceSize:p,strides:l,outputSize:m}=C.calculateShapes(s,o,a),c=[m/p,p];if(m===0)return e.makeTensorInfo(a,o.dtype);let d=ie({inputs:{x:o},backend:e,attrs:{shape:[u,i]}}),f=ie({inputs:{x:s},backend:e,attrs:{shape:[u,p]}}),h=e.makeTensorInfo([],"float32",new Float32Array([0])),g=new Df(u,i,d.shape.length,f.shape.length,l,c),b=e.runWebGLProgram(g,[f,d,h],f.dtype),T=ie({inputs:{x:b},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(h),T}var mU={kernelName:Na,backendName:"webgl",kernelFunc:Ape};var mC=class{constructor(t,e,n,o){this.variableNames=["sortedSequence","values"];this.customUniforms=[{name:"numInputs",type:"int"}];this.outputShape=[t,n];let s="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,i=$().getNumber("WEBGL_VERSION")===2?s:a,u=o==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function wpe(r){let{inputs:t,backend:e,attrs:n}=r,{sortedSequence:o,values:s}=t,{side:a}=n,i=new mC(o.shape[0],o.shape[1],s.shape[1],a),u=[[o.shape[1]]];return e.runWebGLProgram(i,[o,s],"int32",u)}var cU={kernelName:Um,backendName:"webgl",kernelFunc:wpe};var cC=class{constructor(t,e,n){this.variableNames=["c","a","b"];this.outputShape=e;let o,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",o="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],p=[];for(let l=0;l<e.length;l++)p.push(`${i[l]}`),l<t&&u.push(`${i[l]}`);o=u.join(),s=p.join()}let a=Ue(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function Npe(r){let{inputs:t,backend:e}=r,{condition:n,t:o,e:s}=t,a=new cC(n.shape.length,o.shape,o.shape.length);return e.runWebGLProgram(a,[n,o,s],Mt(o.dtype,s.dtype))}var dU={kernelName:Ts,backendName:"webgl",kernelFunc:Npe};var Dpe=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${C.SELU_SCALEALPHA};
  float scale = ${C.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Rpe=Se({opSnippet:Dpe}),fU={kernelName:Xi,backendName:"webgl",kernelFunc:Rpe};var Fpe=Js+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Ppe=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Mpe=Se({opSnippet:Fpe,packedOpSnippet:Ppe,cpuKernelImpl:VO}),hU={kernelName:qo,backendName:"webgl",kernelFunc:Mpe};var Epe=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Lpe=Se({opSnippet:Epe}),gU={kernelName:Yi,backendName:"webgl",kernelFunc:Lpe};var _pe=Js+`
  return sin(x);
`,$pe=Se({opSnippet:_pe}),bU={kernelName:Ho,backendName:"webgl",kernelFunc:$pe};var Bpe=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Ope=Se({opSnippet:Bpe}),yU={kernelName:Da,backendName:"webgl",kernelFunc:Ope};var zpe=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Gpe=Se({opSnippet:zpe}),TU={kernelName:Zi,backendName:"webgl",kernelFunc:Gpe};var Upe=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,paddings:a}=n;y.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((b,T)=>b*T),u=[[0,0]];u.push(...a);for(let b=1+s.length;b<o.shape.length;++b)u.push([0,0]);let p=[],l=ND({inputs:{x:o},backend:e,attrs:{paddings:u,constantValue:0}}),m=C.getReshaped(l.shape,s,i,!1),c=C.getPermuted(m.length,s.length,!1),d=C.getReshapedPermuted(l.shape,s,i,!1),f=ie({inputs:{x:l},backend:e,attrs:{shape:m}}),h=Ut({inputs:{x:f},backend:e,attrs:{perm:c}}),g=ie({inputs:{x:h},backend:e,attrs:{shape:d}});return p.push(l),p.push(f),p.push(h),p.forEach(b=>e.disposeIntermediateTensorInfo(b)),g},xU={kernelName:Is,backendName:"webgl",kernelFunc:Upe};function Wpe(r){let{inputs:t,backend:e}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=e.readSync(n.dataId),u=e.readSync(o.dataId),p=e.readSync(s.dataId),l=e.readSync(a.dataId)[0],[m,c,d,f,h]=qO(i,n.shape,n.dtype,u,o.dtype,p,l);return[e.makeTensorInfo(c,n.dtype,m),e.makeTensorInfo([c[0]],o.dtype,d),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),e.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var IU={kernelName:Ku,backendName:"webgl",kernelFunc:Wpe};function Kpe(r){let{inputs:t,backend:e}=r,{inputIndices:n,inputShape:o,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(e.readSync(o.dataId)),i=e.readSync(n.dataId),u=Array.from(e.readSync(s.dataId)),[p,l,m]=jO(i,n.shape,n.dtype,a,u);return[e.makeTensorInfo(l,n.dtype,p),e.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var CU={kernelName:Qi,backendName:"webgl",kernelFunc:Kpe};function Vpe(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let a=e.readSync(n.dataId),i=e.readSync(o.dataId),u=e.readSync(s.dataId),[p,l]=Xx(a,n.shape,n.dtype,i,u,!0);return e.makeTensorInfo(l,n.dtype,p)}var kU={kernelName:Vu,backendName:"webgl",kernelFunc:Vpe};function Hpe(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let a=e.readSync(n.dataId),i=e.readSync(o.dataId),u=e.readSync(s.dataId),[p,l]=Xx(a,n.shape,n.dtype,i,u);return e.makeTensorInfo(l,n.dtype,p)}var SU={kernelName:Hu,backendName:"webgl",kernelFunc:Hpe};function qpe(r){let{inputs:t,backend:e,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=t,{outputShape:i}=n,{sliceRank:u,numUpdates:p,sliceSize:l,strides:m,outputSize:c}=C.calculateShapes(s,o,i),d=!1;if(s.dtype==="string"){let b=e.bufferSync(o),T=e.bufferSync(s),x=y.decodeString(e.readSync(a.dataId)[0]),I=KO(b,T,i,c,l,p,u,m,x,d);return e.makeTensorInfo(i,I.dtype,I.values)}let f=new Df(p,u,o.shape.length,s.shape.length,m,[c,1],d),h=e.runWebGLProgram(f,[s,o,a],s.dtype),g=ie({inputs:{x:h},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(h),g}var vU={kernelName:qu,backendName:"webgl",kernelFunc:qpe};function jpe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],u=C.prepareSplitSize(o,s,i),p=o.shape.length,l=new Array(p).fill(0),m=o.shape.slice();return u.map(c=>{let d=[...m];d[i]=c;let f=ei({inputs:{x:o},backend:e,attrs:{begin:l,size:d}});return l[i]+=c,f})}var AU={kernelName:Cs,backendName:"webgl",kernelFunc:jpe};var wU="return sqrt(x);",Xpe=Se({opSnippet:wU,packedOpSnippet:wU,cpuKernelImpl:XO}),NU={kernelName:jo,backendName:"webgl",kernelFunc:Xpe};var Ype="return x * x;",Zpe=Se({opSnippet:Ype}),DU={kernelName:pi,backendName:"webgl",kernelFunc:Zpe};var RU="return (a - b) * (a - b);",Qpe=ct({opSnippet:RU,packedOpSnippet:RU}),FU={kernelName:Zo,backendName:"webgl",kernelFunc:Qpe};function Jpe({inputs:r,attrs:t,backend:e}){let{x:n}=r,o=Tr+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new an(n.shape,o);return e.runWebGLProgram(s,[n],n.dtype)}var PU={kernelName:vs,backendName:"webgl",kernelFunc:Jpe};var dC=class{constructor(t,e,n){this.variableNames=["x"];this.outputShape=n;let o=n.length,s=Ue(n.length),a=Ue(n.length),i="";if(o===1)i="coords * strides + begin";else{let u=0;i=n.map((p,l)=>(u++,n.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${u-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${t});
      ${s} strides = ${s}(${e});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function ele(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i,beginMask:u,endMask:p,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:T,end:x,strides:I}=Tt.sliceInfo(o.shape,s,a,i,u,p,l,m,c),k;if(h)k=ie({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let R=Tt.computeOutShape(T,x,I),F=ei({inputs:{x:o},backend:e,attrs:{begin:T,size:R}});k=ie({inputs:{x:F},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(F)}else if(e.shouldExecuteOnCPU([o])){let F=e.readSync(o.dataId),P=Te(o.shape,o.dtype,F),E=YO(d,P,I,T);k=e.makeTensorInfo(f,o.dtype,E.values)}else{let F=new dC(T,I,d);k=e.runWebGLProgram(F,[o],o.dtype)}let w=ie({inputs:{x:k},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(k),w}var MU={kernelName:Ra,backendName:"webgl",kernelFunc:ele};function tle(r){let{inputs:t,backend:e,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:p}=n,{data:l,dataSplits:m}=t,c=e.readSync(l.dataId),d=e.readSync(m.dataId),[f,h]=ZO(c,d,o,s,a,i,u,p);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(m.shape,"int32",h)]}var EU={kernelName:li,backendName:"webgl",kernelFunc:tle};function rle(r){let{inputs:t,backend:e,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=e.readSync(s.dataId),u=e.readSync(a.dataId)[0],[p,l,m]=QO(i,u,o),c=l.length;return[e.makeTensorInfo([c,2],"int32",p),e.makeTensorInfo([c],"string",l),e.makeTensorInfo([2],"int32",new Int32Array(m))]}var LU={kernelName:ju,backendName:"webgl",kernelFunc:rle};function nle(r){let{inputs:t,backend:e,attrs:n}=r,{numBuckets:o}=n,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=e.readSync(s.dataId),i=JO(a,o);return e.makeTensorInfo(s.shape,"int32",i)}var _U={kernelName:Xu,backendName:"webgl",kernelFunc:nle};var ole="return tan(x);",sle=Se({opSnippet:ole}),$U={kernelName:Fa,backendName:"webgl",kernelFunc:sle};var ale=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,ile=Se({opSnippet:ale}),BU={kernelName:Jo,backendName:"webgl",kernelFunc:ile};var fC=class{constructor(t,e){this.variableNames=["A"];let n=new Array(t.length);for(let a=0;a<n.length;a++)n[a]=t[a]*e[a];this.outputShape=n,this.rank=n.length;let o=Ue(this.rank),s=ule(t);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function ule(r){let t=r.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${r[0]})`;let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let o=0;o<r.length;o++)n.push(`imod(${e[o]}, ${r[o]})`);return n.join()}function RD(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reps:s}=n;if(o.dtype==="string"||o.shape.length>5){let u=e.readSync(o.dataId),p=o.dtype==="string"?u.map(c=>y.decodeString(c)):u,l=Te(o.shape,o.dtype,p),m=tz(l,s);return e.makeTensorInfo(m.shape,m.dtype,m.values)}let a=new fC(o.shape,s);return e.runWebGLProgram(a,[o],o.dtype)}var OU={kernelName:An,backendName:"webgl",kernelFunc:RD};var hC=class{constructor(t){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}];this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},gC=class{constructor(t){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}];this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Yl(r,t){t!==null&&r.disposeIntermediateTensorInfo(t)}function zU(r){let t=1;for(;t<r;)t*=2;return t}function ple(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{k:s,sorted:a}=n,i=$().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=$().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),p=o.shape,l=p[p.length-1];if(e.shouldExecuteOnCPU([o])||l<i||s>u){let E=e.readSync(o.dataId),[B,G]=rz(E,p,o.dtype,s,a);return[e.makeTensorInfo(B.shape,B.dtype,B.values),e.makeTensorInfo(G.shape,G.dtype,G.values)]}if(s===0)return p[p.length-1]=0,[e.makeTensorInfo(p,o.dtype,[]),e.makeTensorInfo(p,"int32",[])];if(l===1)return[o,Au({attrs:{shape:p,dtype:"int32",value:0},backend:e})];let m=e.texData.get(o.dataId),c=m!==null&&m.isPacked,d=c?e.unpackTensor(o):o,h=y.sizeFromShape(p)/l,g=ie({inputs:{x:d},attrs:{shape:[h,l]},backend:e});c&&Yl(e,d);let b=zU(s),T=zU(l),x=null,I=()=>x===null?[g,g]:[g,x],k=(E,B,G)=>{let U=I(),V=new hC(G),H=[[l],[x===null?1:0],[Number.NEGATIVE_INFINITY],[E],[B]],j=x;x=e.runWebGLProgram(V,U,"int32",H),Yl(e,j)};for(let E=1;E<b;E*=2){let B=E*2;for(let G=E;G>=1;G/=2)k(B,G,[h,T])}for(let E=T;E>b;E/=2){let B=I(),G=new gC([h,E/2]),V=[[l],[x===null?1:0],[b]],W=x;x=e.runWebGLProgram(G,B,"int32",V),Yl(e,W);let H=b/2,j=H*2;for(let X=H;X>=1;X/=2)k(j,X,x.shape)}let w=x;x=ei({inputs:{x},backend:e,attrs:{begin:0,size:[h,s]}}),Yl(e,w);let R=kD({inputs:{x:g,indices:x},backend:e,attrs:{axis:1,batchDims:1}});Yl(e,g);let F=p.slice(0,-1);F.push(s),w=x,x=ie({inputs:{x},attrs:{shape:F},backend:e}),Yl(e,w);let P=R;return R=ie({inputs:{x:R},attrs:{shape:F},backend:e}),Yl(e,P),[R,x]}var GU={kernelName:Pa,backendName:"webgl",kernelFunc:ple};var bC=class{constructor(t,e,n,o,s,a){this.variableNames=["Image","Transforms"];this.outputShape=a;let i=n==="nearest"?1:2,u;switch(o){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function lle(r){let{inputs:t,backend:e,attrs:n}=r,{image:o,transforms:s}=t,{interpolation:a,fillMode:i,fillValue:u,outputShape:p}=n,[l,m,c,d]=o.shape,[f,h]=p??[m,c],g=[l,f,h,d],b=new bC(m,c,a,i,u,g);return e.runWebGLProgram(b,[o,s],"float32")}var UU={kernelName:Ma,backendName:"webgl",kernelFunc:lle};function mle(r){let{inputs:t,attrs:e,backend:n}=r,{axis:o}=e,{x:s}=t;Za(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let a=n.readSync(s.dataId),{outputValues:i,outputShape:u,indices:p}=nz(a,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,i),n.makeTensorInfo([p.length],"int32",p)]}var WU={kernelName:Wm,backendName:"webgl",kernelFunc:mle};function cle(r){let{inputs:t,backend:e,attrs:n}=r,{value:o}=t,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,u=o.shape[s],p=new Array(i-1),l=0;for(let h=0;h<i;h++)h!==s&&(p[l++]=a.shape[h]);let m=[],c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let f=new Array(u);for(let h=0;h<f.length;h++){c[s]=h;let g=ei({inputs:{x:a},backend:e,attrs:{begin:c,size:d}}),b=ie({inputs:{x:g},backend:e,attrs:{shape:p}});f[h]=b,m.push(g)}return m.forEach(h=>e.disposeIntermediateTensorInfo(h)),f}var KU={kernelName:ks,backendName:"webgl",kernelFunc:cle};var yC=class{constructor(t,e){this.variableNames=["x","segmentIds"];let n=t.windowSize,o=t.batchSize,s=t.inSize,a=t.numSegments,i=a*Math.ceil(s/n);this.outputShape=[o,i];let u="0.0",p="sumValue",l=Math.floor(n/4)*4,m=n%4,c=`
        sumValue += dot(values, segFilter);
    `,d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${c}
        }

        int inIdx = inOffset + ${l};
        if (${m===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${c}
        } else if (${m===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${c}
        } else if (${m===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${c}
        }
        setOutput(${p});
      }
    `}};function dle(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,segmentIds:s}=t,{numSegments:a}=n,i=o.shape.length,u=[],p=0,l=C.getAxesPermutation([p],i),m=o;l!=null&&(m=Ut({inputs:{x:o},backend:e,attrs:{perm:l}}),u.push(m),p=C.getInnerMostAxes(1,i)[0]);let c=C.segment_util.computeOutShape(m.shape,p,a),d=y.sizeFromShape([m.shape[p]]),f=ie({inputs:{x:m},backend:e,attrs:{shape:[-1,d]}});u.push(f);let h=ru(o.dtype),g=(I,k,w,R,F)=>{let P=I.shape[0],E=I.shape[1],B=C.segment_util.segOpComputeOptimalWindowSize(E,F),G={windowSize:B,inSize:E,batchSize:P,numSegments:F},U=new yC(G,k),V=e.compileAndRun(U,[I,w],R);if(u.push(V),V.shape[1]===F)return V;let W=DD({backend:e,attrs:{start:0,stop:F,step:1,dtype:"float32"}}),H=RD({inputs:{x:W},backend:e,attrs:{reps:[E/B]}});return u.push(W),u.push(H),g(V,k,H,R,F)},b=g(f,"unsortedSegmentSum",s,h,a),T=ie({inputs:{x:b},backend:e,attrs:{shape:c}}),x=T;if(l!=null){u.push(T);let I=C.getUndoAxesPermutation(l);x=Ut({inputs:{x},backend:e,attrs:{perm:I}})}return u.forEach(I=>e.disposeIntermediateTensorInfo(I)),x}var VU={kernelName:Yu,backendName:"webgl",kernelFunc:dle};var fle=[Fz,Mz,Ez,Lz,$z,Bz,Oz,zz,Wz,Kz,Vz,Hz,qz,jz,Xz,Yz,Zz,Qz,Jz,eG,tG,nG,oG,sG,pG,mG,cG,Iz,fG,gG,bG,yG,TG,xG,IG,CG,kG,SG,vG,NG,DG,RG,FG,PG,MG,EG,LG,_G,$G,BG,OG,zG,GG,UG,WG,VG,HG,qG,jG,YG,ZG,QG,JG,e3,t3,r3,n3,o3,xz,s3,hG,a3,i3,u3,Cz,p3,l3,m3,c3,d3,f3,h3,g3,b3,y3,x3,I3,C3,k3,S3,v3,w3,D3,R3,F3,P3,M3,B3,vz,O3,z3,G3,U3,aG,W3,H3,q3,j3,X3,kz,Y3,Z3,Q3,J3,iG,E3,eU,tU,rU,wz,nU,oU,sU,aU,iU,uU,pU,lU,mU,cU,dU,fU,hU,gU,bU,yU,rG,$3,TU,xU,IU,CU,kU,SU,vU,AU,NU,DU,FU,PU,MU,EU,LU,_U,_3,Dz,$U,BU,OU,GU,UU,Rz,WU,KU,VU,K3];for(let r of fle)Ji(r);var wu=$();wu.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);wu.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);wu.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);wu.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);wu.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);wu.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);wu.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);wu.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);wu.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);var TC=class{constructor(t){this.device=t;this.numUsedBuffers=0;this.numFreeBuffers=0;this.freeBuffers=new Map;this.usedBuffers=new Map;this.numBytesUsed=0;this.numBytesAllocated=0}acquireUploadBuffer(t,e){return this.acquireBuffer(t,e,!0)}acquireBuffer(t,e,n=!1){let o=HU(t,e);if(this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.usedBuffers.has(o)||this.usedBuffers.set(o,[]),this.numBytesUsed+=t,this.numUsedBuffers++,this.freeBuffers.get(o).length>0){this.numFreeBuffers--;let a=this.freeBuffers.get(o).shift();return this.usedBuffers.get(o).push(a),a}this.numBytesAllocated+=t;let s=this.device.createBuffer({size:t,usage:e,mappedAtCreation:n});return this.usedBuffers.get(o).push(s),s}releaseBuffer(t,e,n){if(this.freeBuffers.size===0)return;let o=HU(e,n);this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.freeBuffers.get(o).push(t),this.numFreeBuffers++,this.numUsedBuffers--;let s=this.usedBuffers.get(o),a=s.indexOf(t);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");s.splice(a,1),this.numBytesUsed-=e}releaseUploadBuffer(t,e,n){t.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(t,e,n)},o=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((t,e)=>{t.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((t,e)=>{t.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function HU(r,t){return`${r}_${t}`}var xC=class{constructor(t){this.device=t;this.numUsedTextures=0;this.numFreeTextures=0;this.freeTextures=new Map;this.usedTextures=new Map;this.numBytesUsed=0;this.numBytesAllocated=0}acquireTexture(t,e,n,o){let s=jU(n),a=t*e*s,i=qU(t,e,n,o);if(this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.usedTextures.has(i)||this.usedTextures.set(i,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(i).length>0){this.numFreeTextures--;let p=this.freeTextures.get(i).shift();return this.usedTextures.get(i).push(p),p}this.numBytesAllocated+=a;let u=this.device.createTexture({size:[t,e],format:n,usage:o});return this.usedTextures.get(i).push(u),u}releaseTexture(t,e,n,o,s){if(this.freeTextures.size===0)return;let a=qU(e,n,o,s);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(t),this.numFreeTextures++,this.numUsedTextures--;let i=this.usedTextures.get(a),u=i.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(u,1);let p=jU(o),l=e*n*p;this.numBytesUsed-=l}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((t,e)=>{t.forEach(n=>{n.destroy()})}),this.usedTextures.forEach((t,e)=>{t.forEach(n=>{n.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function qU(r,t,e,n){return`${r}_${t}_${e}_${n}`}function jU(r){if(r==="rgba8unorm")return 16;throw new Error(`${r} is not supported!`)}function XU(r,t){if(Math.max(...r)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let e=r.length,n=r.map(s=>`${t}[${s}]`),o=new Array(e-1);o[e-2]=n[e-1];for(let s=e-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}var QU=(r,t,e,n)=>{let o={dtype:n.dtype,shape:n.shape},s=hle(e,o,t),a=r.createShaderModule({code:s,label:t.constructor.name});return r.createComputePipeline({compute:{module:a,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})};function ir(r){if(r<=1)return"i32";if(r===2)return"vec2<i32>";if(r===3)return"vec3<i32>";if(r===4)return"vec4<i32>";if(r===5)return"vec5";if(r===6)return"vec6";throw Error(`GPU for rank ${r} is not yet supported`)}function ea(r){if(r===0)return"x";if(r===1)return"y";if(r===2)return"z";if(r===3)return"w";if(r===4)return"u";if(r===5)return"v";throw Error(`Index ${r} is not yet supported`)}function be(...r){let t;switch(r.length){case 0:t=`
        ${Ep()}
        fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                  @builtin(global_invocation_id) GlobalId : vec3<u32>,
                  @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
          localId = LocalId;
          globalId = GlobalId;
          numWorkgroups = NumWorkgroups;
          main();
        }

        fn main()
      `;break;case 1:t=`
        ${Ep()}
        fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                  @builtin(global_invocation_id) GlobalId : vec3<u32>,
                  @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
          localId = LocalId;
          globalId = GlobalId;
          numWorkgroups = NumWorkgroups;
          main(getGlobalIndex());
        }

        fn main(${r[0]} : i32)
      `;break;default:throw Error("Unreachable")}return t}function Ep(){return`
  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function hle(r,t,e){let n=[];if(n.push(`
      const workGroupSizeX = ${e.workGroupSize[0]}u;
      const workGroupSizeY = ${e.workGroupSize[1]}u;
      const workGroupSizeZ = ${e.workGroupSize[2]}u;

      var<private> localId: vec3<u32>;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${eW(e)?"  return i32(globalId.x);":`  let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
                   localId.y * workGroupSizeX + localId.x;
               let workGroupID = (globalId - localId)/vec3<u32>(
                   workGroupSizeX, workGroupSizeY, workGroupSizeZ);

               return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
                   workGroupID.y * numWorkgroups.x + workGroupID.x) *
                   (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
                   localInvocationIndex);
        `}
      }
    `),e.isFromPixels)return n.push(`
        struct Uniform {
          size            : i32,
          numChannels     : i32,
          outShapeStrides : vec2<i32>,
        };

        @group(0) @binding(0) var<storage, read_write> result: array<${Rf(t.dtype,e.isVec4)}>;
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `),[YU,n.join(`
`),ZU(t.shape),e.getUserCode()].join(`
`);let o="struct Uniforms { NAN : f32, ";e.variableNames.forEach((c,d)=>{let f=ir(r[d].shape.length);o+=`${c.charAt(0).toLowerCase()+c.slice(1)}Shape : ${f}, `}),o+=`outShape : ${ir(t.shape.length)}, `;let a=t.shape.length-1;o+=`
         outShapeStrides: ${ir(a)}, `,e.size&&(o+="size : i32, "),e.uniforms&&(o+=e.uniforms),o+="};",o=Cle(o),n.push(o),e.atomic?n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${Rf(t.dtype,e.isVec4)}>;
    `),e.variableNames.forEach((c,d)=>{n.push(`
      @group(0) @binding(${1+d}) var<storage, read> ${c}: array<${e.variableTypes?e.variableTypes[d]:Rf(r[d].dtype,e.isVec4)}>;
        `)}),o!==""&&n.push(`
      @group(0) @binding(${1+e.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);let u=Tle(t.shape,e.dispatchLayout),p=[YU,n.join(`
`),ZU(t.shape),u,xle(t.shape.length)];e.atomic||p.push(Ile(t.shape,t.dtype,e.isVec4));let l=r.map((c,d)=>yle(c,t.shape,e.variableTypes?e.variableTypes[d]==="vec4<f32>":e.isVec4,e.dispatchLayout.x.length===t.shape.length)).join(`
`);return p.push(l),p.push(e.getUserCode()),p.join(`
`)}function JU(r,t,e,n){let o=r.shaderKey;if(r.isFromPixels)return o;let s=e.map(l=>l.dtype).concat(n.dtype),a=e.map(l=>C.getBroadcastDims(l.shape,n.shape)),i=e.map(l=>y.arraysEqual(l.shape,n.shape)).join("_"),u=a.map(l=>l.join("_")).join(";"),p=eW(r)?"flatDispatch":"";return o+="_"+(r.workGroupSize?r.workGroupSize.join(","):"")+t.map(l=>l.length).join(",")+s.join(",")+r.variableNames.join(",")+u+i+p,o}var YU=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let modulo: i32 = a % b;
    if (sign < 0. && modulo != 0) {
      res = res - 1;
    }
    return res;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));
  }
`;function ZU(r){let t=r.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let e=y.computeStrides(r),n=ir(t),o=[];for(let a=0;a<t;a++)o.push(`d${a}`);if(e.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let s;return s="var index2 = index;"+e.map((a,i)=>{let u=`let ${o[i]} = index2 / uniforms.outShapeStrides.${ea(i)}`,p=i===e.length-1?`let ${o[i+1]} = index2 - ${o[i]} * uniforms.outShapeStrides.${ea(i)}`:`index2 = index2 - ${o[i]} * uniforms.outShapeStrides.${ea(i)}`;return`${u}; ${p};`}).join(""),`
    fn getCoordsFromIndex(index : i32) -> ${n} {
      ${s}
      return ${n}(${o.join(",")});
    }
  `}function gle(r,t){let e=r.name,n=r.shape.length,o=ir(n),s="get"+e.charAt(0).toUpperCase()+e.slice(1),a=["d0","d1","d2","d3","d4","d5"].slice(0,n),i=a.map(l=>`${l} : i32`).join(", ");if(n<1)return t?`
        fn ${s}() -> vec4<f32> {
          return vec4<f32>(${e}[0]);
        }
      `:`
      fn ${s}() ->f32 {
        return f32(${e}[0]);
      }
    `;let u=`uniforms.${e.charAt(0).toLowerCase()+e.slice(1)}Shape`,p=`${n}D`;return n===0&&(p="1D"),t?`
      fn ${s}(${i}) -> vec4<f32> {
        return vec4<f32>(${e}[getIndexFromCoords${p}(${o}(${a.join(",")}),
          ${u}) / 4]);
      }
      `:`
    fn ${s}(${i}) -> f32 {
      return f32(${e}[getIndexFromCoords${p}(${o}(${a.join(",")}),
        ${u})]);
    }
   `}function ble(r,t,e,n){let o=r.name,s=o.charAt(0).toUpperCase()+o.slice(1),a="get"+s+"ByOutput",i=r.shape.length,u=t.length,p=ir(u);if(y.arraysEqual(r.shape,t)&&n)return e?`
      fn ${a}Index(globalIndex : i32) -> vec4<f32> {
        return vec4<f32>(${o}[globalIndex]);
      }

      fn ${a}Coords(coords : ${p}) -> vec4<f32> {
        return vec4<f32>(${o}[${u>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
      }
      `:`
    fn ${a}Index(globalIndex : i32) -> f32 {
      return f32(${o}[globalIndex]);
    }

    fn ${a}Coords(coords : ${p}) -> f32 {
      return f32(${o}[${u>1?"getOutputIndexFromCoords(coords)":"coords"}]);
    }
    `;let l=C.getBroadcastDims(r.shape,t),m=u-i,c="";if(i===0)return e?`
    fn ${a}Index(globalIndex : i32) -> vec4<f32> {
      return get${s}();
    }

    fn ${a}Coords(coords : ${p}) -> vec4<f32> {
      return get${s}();
    }
  `:`
    fn ${a}Index(globalIndex : i32) -> f32{
      return get${s}();
    }

    fn ${a}Coords(coords : ${p}) -> f32{
      return get${s}();
    }
  `;u<2&&l.length>=1?c="coords = 0;":c=l.map(g=>`coords.${ea(g+m)} = 0;`).join(`
`);let d="";if(u<2&&i>0)d="coords";else if(u>1){let g=ir(i),b=r.shape.map((T,x)=>`coords.${ea(x+m)}`).join(", ");d=`${g}(${b})`}else d="coords";let f=`uniforms.${o.charAt(0).toLowerCase()+o.slice(1)}Shape`,h=`${i}D`;return e?`
    fn ${a}Index(globalIndex : i32) -> vec4<f32> {
      var coords = getCoordsFromIndex(globalIndex);
      ${c}
      return ${o}[getIndexFromCoords${h}(${d}, ${f}) / 4];
    }

    fn ${a}Coords(coordsIn : ${p}) -> vec4<f32> {
      var coords = coordsIn;
      ${c}
      return ${o}[getIndexFromCoords${h}(${d}, ${f}) / 4];
    }
  `:`
  fn ${a}Index(globalIndex : i32) -> f32 {
    var coords = getCoordsFromIndex(globalIndex);
    ${c}
    return f32(${o}[getIndexFromCoords${h}(${d}, ${f})]);
  }

  fn ${a}Coords(coordsIn : ${p}) -> f32 {
    var coords = coordsIn;
    ${c}
    return f32(${o}[getIndexFromCoords${h}(${d}, ${f})]);
  }
`}function yle(r,t,e,n){let o=gle(r,e);return r.shape.length<=t.length&&(o+=ble(r,t,e,n)),o}function Tle(r,t){let{x:e,y:n=[],z:o=[]}=t,s=r.length,a=e.length+n.length+o.length;if(a!==s)return"";if(e.length===s)return`fn getOutputCoords() -> ${ir(s)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let i="",u=[e,n,o];for(let c=0;c<u.length;c++){let d=u[c];if(d.length!==0)if(d.length===1)i+=`let d${d[0]} = i32(globalId[${c}]);`;else{let f=XU(d,"uniforms.outShape");i+=`var index${c} = i32(globalId[${c}]);`;for(let h=0;h<f.length;h++)i+=`let d${d[h]} = index${c} / ${f[h]};`,h===f.length-1?i+=`let d${d[h+1]} = index${c} - d${d[h]} * ${f[h]};`:i+=`index${c} = index${c} - d${d[h]} * ${f[h]};`}}let p=[];for(let c=0;c<a;c++)p.push(`d${c}`);let l=ir(a),m=`fn getOutputCoords() -> ${l} {
  ${i}
`;return p.length===0?m+=`return ${l}(0); }`:m+=`return ${l}(${p.join(",")}); }`,m}function xle(r){let t="";switch(r){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:t+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:t+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:y.assert(!1,()=>`Unsupported ${r}D shape`);break}return t}function eW(r){return r.dispatch[1]===1&&r.dispatch[2]===1}function Rf(r,t){return r==="float32"?t?"vec4<f32>":"f32":r==="int32"||r==="bool"?t?"vec4<i32>":"i32":r}function Ile(r,t,e){let n=r.length,o=Rf(t,e),s;if(e?s=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result[flatIndex] = ${o}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result[flatIndex] = ${o}(value);
    }`:s=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result[flatIndex] = ${o}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result[flatIndex] = ${o}(value);
    }`,n>=2){let a=["d0","d1","d2","d3","d4","d5"].slice(0,n),i=ir(n);e?s+=`
      fn setOutputAtCoords(${a.map(u=>`${u} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${a.map(u=>`${u} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:s+=`
      fn setOutputAtCoords(${a.map(u=>`${u} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${a.map(u=>`${u} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return s}function Cle(r){let t=/(\w+)\s*:\s*vec(5|6)/g;r=r.replace(t,n=>"@align(16) "+n);let e=/vec(5|6)\s*,\s*(\w+)/g;return r=r.replace(e,(n,o,s)=>`vec${o}, @align(16) ${s}`),r}var LD={};We(LD,{ArrayBufferToTypedArray:()=>MD,GPUBytesPerElement:()=>PD,MatMulProgramType:()=>ED,computeDispatch:()=>ge,computeWorkGroupInfoForMatMul:()=>FD,computeWorkGroupSizeForConv2d:()=>bg,computeWorkPerThreadForConv2d:()=>yg,flatDispatchLayout:()=>Ce,isWebGPUSupported:()=>Tg,tilesFitEvenlyIntoShape:()=>Sle});var Zl=r=>{let t=1;for(let e=0;e<r.length;e++)t*=r[e];return t};function Sle(r,t){if(r.length!==t.length)throw new Error(`Cannot compute whether rank ${r.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((e,n)=>e%r[n]===0)}function ge(r,t,e=[1,1,1],n=[1,1,1]){let[o,s,a]=[Math.ceil(Zl(r.x.map(i=>t[i]))/(e[0]*n[0])),r.y?Math.ceil(Zl(r.y.map(i=>t[i]))/(e[1]*n[1])):1,r.z?Math.ceil(Zl(r.z.map(i=>t[i]))/(e[2]*n[2])):1];return[o,s,a]}function FD(r,t,e,n=!1){let o=[8,8,1],s=[4,4,1];return n||(r<=8&&(s[1]=1),t<=16&&e<=16&&(o[0]=4)),{workGroupSize:o,elementsPerThread:s}}function bg(r,t,e=!1){if(e)return[8,8,1];let n=Zl(r.x.map(s=>t[s])),o=Zl(r.y.map(s=>t[s]));return n<=4?[4,16,1]:o<=4?[16,4,1]:[16,16,1]}function yg(r,t,e=!1){if(e)return[4,4,1];let n=Zl(r.x.map(s=>t[s])),o=Zl(r.y.map(s=>t[s]));return n<=4?[1,2,1]:o<=4?[2,1,1]:[2,2,1]}function Ce(r){return{x:r.map((t,e)=>e)}}function PD(r){if(r==="float32"||r==="int32"||r==="bool"||r==="string")return 4;if(r==="complex64")return 8;throw new Error(`Unknown dtype ${r}`)}function MD(r,t){if(t==="float32")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${t}`)}function Tg(){return(typeof window<"u"||typeof WorkerGlobalScope<"u")&&!!navigator.gpu}var ED=(s=>(s[s.MatMulReduceProgram=0]="MatMulReduceProgram",s[s.MatMulSplitKProgram=1]="MatMulSplitKProgram",s[s.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",s[s.MatMulPackedProgram=3]="MatMulPackedProgram",s[s.MatMulMax=4]="MatMulMax",s))(ED||{});var vle=$().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),Ale=(r,t)=>{let e=r.limits.maxComputeWorkgroupsPerDimension,n=t.dispatchLayout,o=t.dispatch;if(o.every(a=>a<=e))return o;y.assert(o[0]>e&&n.y===void 0&&n.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let s=Math.ceil(Math.sqrt(o[0]));return s>e?(s=Math.ceil(Math.cbrt(o[0])),y.assert(s<=e,()=>"Total dispatch size exceeds WebGPU maximum."),[s,s,s]):[s,s,1]},_D=class extends ao{constructor(e){super();this.commandQueueOwnedIds=new WeakSet;this.dispatchNumberInEncoder=0;this.disposed=!1;this.downloadWaitMs=0;this.tensorDataPendingDisposal=[];this.stagingPendingDisposal=[];this.uniformPendingDisposal=[];this.uploadWaitMs=0;if(!Tg())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=e.features.has("timestamp-query"),this.bufferManager=new TC(this.device),this.textureManager=new xC(this.device),this.tensorMap=new oa(this,Rn()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),$().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return _D.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}disposeData(e,n=!1){if(this.tensorDataPendingDisposal.indexOf(e)>=0)return!1;if(!this.tensorMap.has(e))return!0;let o=this.tensorMap.get(e);if(this.decRef(e),!n&&o.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDataPendingDisposal.push(e),!1;let{complexTensorInfos:s}=this.tensorMap.get(e);return s!=null&&(this.disposeData(s.real.dataId,n),this.disposeData(s.imag.dataId,n)),this.releaseResource(e),this.tensorMap.delete(e),!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let n=this.tensorMap.get(e);if(!(!n||!n.resourceInfo)){if("texture"in n.resourceInfo){let o=n.resourceInfo;o.texture instanceof GPUTexture&&this.textureManager.releaseTexture(o.texture,o.width,o.height,o.format,o.usage),o.texture=null}else{let o=n.resourceInfo;this.bufferManager.releaseBuffer(o.buffer,o.size,o.usage),o.buffer=null}n.resourceInfo=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let n=this.tensorMap.get(e);n.refCount++}decRef(e){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);n.refCount--}}write(e,n,o){if(o==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.tensorMap.set(s,{dtype:o,shape:n,values:e,refCount:1}),s}move(e,n,o,s,a){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:s,shape:o,values:n,refCount:a})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.size,e.usage)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.size,e.usage)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.end(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e,n){let o=this.bufferManager.acquireBuffer(n,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,o,0,n),this.submitQueue(),await o.mapAsync(GPUMapMode.READ);let s=o.getMappedRange().slice(0);return o.unmap(),o!=null&&this.bufferManager.releaseBuffer(o,n,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),$().getBool("WEBGPU_USE_PROFILE_TOOL")&&(y.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),s}convertAndCacheOnCPU(e,n){let o=this.tensorMap.get(e);return this.releaseResource(e),o.values=n,o.values}readSync(e){let n=this.tensorMap.get(e),{values:o}=n;if(o==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return o}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let n=this.tensorMap.get(e),{values:o}=n;if(o!=null)return this.convertAndCacheOnCPU(e,o);let s;if(n.dtype==="complex64"){let a=await Promise.all([this.read(n.complexTensorInfos.real.dataId),this.read(n.complexTensorInfos.imag.dataId)]),i=a[0],u=a[1];s=C.mergeRealAndImagArrays(i,u)}else{let a=n.resourceInfo,i=await this.getBufferData(a.buffer,a.size);s=MD(i,n.dtype)}return this.convertAndCacheOnCPU(e,s),s}readToGPU(e){let n=this.tensorMap.get(e),{values:o,dtype:s,shape:a,resourceInfo:i}=n;if(s==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(i==null)throw o!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=i.size,p=this.bufferManager.acquireBuffer(u,i.usage);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(i.buffer,0,p,0,u),this.submitQueue();let l=this.makeTensorInfo(a,s),m=Rn().makeTensorFromTensorInfo(l),c=this.tensorMap.get(l.dataId);return c.resourceInfo={size:u,usage:this.defaultGpuBufferUsage(),buffer:p},{tensorRef:m,buffer:p,bufSize:u}}bufferSync(e){let n=this.readSync(e.dataId);if(e.dtype==="string")try{let o=n.map(s=>y.decodeString(s));return Te(e.shape,e.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Te(e.shape,e.dtype,n)}async time(e){this.supportTimeQuery||console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled. Using performance.now is not workable for webgpu since it doesn't support synchronous data read from GPU.");let n=this.activeTimers,o=[],s=!1;this.programTimersStack==null?(this.programTimersStack=o,s=!0):this.activeTimers.push(o),this.activeTimers=o,e();let a=y.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=y.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=n,s&&(this.programTimersStack=null);let u={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},p=await Promise.all(a);return u.kernelMs=y.sum(p),u.getExtraProfileInfo=()=>p.map((l,m)=>({name:i[m],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,u}makeTensorInfo(e,n,o){return n==="string"&&o!=null&&o.length>0&&y.isString(o[0])&&(o=o.map(a=>y.encodeString(a))),{dataId:this.write(o,e,n),shape:e,dtype:n}}tensorToBinding(e){if(!e)return null;let n=this.tensorMap.get(e.dataId);if("texture"in n.resourceInfo){let s=n.resourceInfo;return s.texture instanceof GPUExternalTexture?s.texture:s.texture.createView()}let o=n.resourceInfo;return{offset:0,size:o.size,buffer:o.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let n=this.tensorMap.get(e);if(n.resourceInfo)return;let o=PD(n.dtype)*y.sizeFromShape(n.shape),s=this.bufferManager.acquireBuffer(o,this.defaultGpuBufferUsage());if(n.resourceInfo={size:o,usage:this.defaultGpuBufferUsage(),buffer:s},n.values){let a=this.bufferManager.acquireUploadBuffer(o,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),i=a.getMappedRange();n.dtype==="int32"||n.dtype==="bool"?new Int32Array(i).set(n.values):new Float32Array(i).set(n.values),a.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(a,0,s,0,o);let u={size:o,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:a};this.stagingPendingDisposal.push(u)}}makeUniforms(e){let n=0,o=0,s=[];e.forEach(p=>{p.data.length===0&&(p.data=[1]);let l;switch(p.data.length){case 1:l=4;break;case 2:l=8;break;case 3:l=16;break;case 4:l=16;break;case 5:l=16;break;case 6:l=16;break;default:y.assert(!1,()=>`Unsupported ${p.data.length}D shape`)}(o===5||o===6)&&(l=16),n=Math.ceil(n/l)*l,o=p.data.length,s.push(n),n+=p.data.length*4});let a=new ArrayBuffer(n);e.forEach((p,l)=>{let m=s[l];p.type==="int32"?new Int32Array(a,m,p.data.length).set(p.data):p.type==="uint32"?new Uint32Array(a,m,p.data.length).set(p.data):new Float32Array(a,m,p.data.length).set(p.data)});let i=this.bufferManager.acquireBuffer(n,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.queue.writeBuffer(i,0,a,0,n);let u={size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:i};return this.uniformPendingDisposal.push(u),{offset:0,size:n,buffer:i}}runWebGPUProgram(e,n,o,s,a){if(a||(a=this.makeTensorInfo(e.outputShape,o)),y.sizeFromShape(a.shape)===0)return this.tensorMap.get(a.dataId).values=y.getTypedArrayFromDType(a.dtype,0),a;this.uploadToGPU(a.dataId),e.dispatch=Ale(this.device,e);let i=[],u=[];if(!e.isFromPixels){i.push({type:"float32",data:[NaN]}),u=n.concat(a).map(T=>T.shape);let g="int32";u.map(T=>{i.push({type:g,data:T})});let b=y.computeStrides(a.shape);if(i.push({type:g,data:b}),e.size){let T=y.sizeFromShape(e.outputShape);i.push({type:g,data:[e.isVec4?T/4:T]})}}let p=n.map((g,b)=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(g.dataId),{dtype:this.tensorMap.get(g.dataId).dtype,shape:g.shape,name:e.variableNames[b]}}),l=JU(e,u,p,a),m;l in this.pipelineCache?m=this.pipelineCache[l]:(m=QU(this.device,e,p,a),this.pipelineCache[l]=m),s&&(i=[...i,...s]);let c=[this.tensorToBinding(a),...n.map(g=>this.tensorToBinding(g)),this.makeUniforms(i)],d=this.device.createBindGroup({layout:m.getBindGroupLayout(0),entries:c.map((g,b)=>({binding:b,resource:g}))});this.ensureCommandEncoderReady();let f=this.getComputePass(),h=this.activeTimers!=null;return h&&this.supportTimeQuery&&f.writeTimestamp(this.querySet,0),f.setPipeline(m),f.setBindGroup(0,d),f.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),h&&this.supportTimeQuery&&f.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,n.forEach(g=>{this.commandQueueOwnedIds.add(g.dataId)}),this.commandQueueOwnedIds.add(a.dataId),$().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),h&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),a}async getTimeFromQuerySet(e){let n=this.bufferManager.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),o=this.bufferManager.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,n,0),this.currentCommandEncoder.copyBufferToBuffer(n,0,o,0,16),this.submitQueue(),await o.mapAsync(GPUMapMode.READ);let s=new BigUint64Array(o.getMappedRange()),a=Number(s[1]-s[0]);return o.unmap(),this.bufferManager.releaseBuffer(o,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),a/1e6}shouldExecuteOnCPU(e,n=vle){return $().getBool("WEBGPU_CPU_FORWARD")&&e.every(o=>this.tensorMap.get(o.dataId).resourceInfo==null&&y.sizeFromShape(o.shape)<n)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}},Ff=_D;Ff.nextDataId=0;Tg()&&rp("webgpu",async()=>{$().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let r={powerPreference:$().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(r),e=t.limits,n={},o=t.features.has("timestamp-query");n.requiredLimits={maxComputeWorkgroupStorageSize:e.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:e.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:e.maxStorageBufferBindingSize},o&&(n.requiredFeatures=["timestamp-query"]);let s=await t.requestDevice(n);return new Ff(s)},3);var wle=`
  if (isnan(a)) { return a; }
  if (isnan(b)) { return b; }
  `,tW=`
  if (isNaN.r) {
    resultTemp.r = valueForNaN;
  }
  if (isNaN.g) {
    resultTemp.g = valueForNaN;
  }
  if (isNaN.b) {
    resultTemp.b = valueForNaN;
  }
  if (isNaN.a) {
    resultTemp.a = valueForNaN;
  }
  `,rW=`
  let isNaN = isnanVec4(a) | isnanVec4(b);
  ${tW}
  `,Nle="return a + b;",Dle="return areal * breal - aimag * bimag;",Rle="return areal * bimag + aimag * breal;",Fle="return a / b;",Ple="return a * b;",Mle="return (a - b) * (a - b);",Ele="return a - b;",Lle="return f32(a == b);",_le="return vec4<f32>(a == b);",$le="return f32(a > b);",Ble="return vec4<f32>(a > b);",Ole="return f32(a >= b);",zle="return vec4<f32>(a >= b);",Gle="return f32(a < b);",Ule="return vec4<f32>(a < b);",Wle="return f32(a <= b);",Kle="return vec4<f32>(a <= b);",Vle="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",Hle=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,qle=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,jle=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,Xle=`
  if (isnan(a) || isnan(b)) {
    return 1.0;
  }
  return f32(a != b);
`,Yle=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
  ${rW}

  return resultTemp;
`,Zle=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,Qle=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
  let valueForNaN = uniforms.NAN;
  ${tW}
  return resultTemp;
  `,Jle="if (a < 0.0) { return b * a; }  return a;",eme=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function $D(r,t,e="uniforms.NAN"){let n=t?rW:wle;return t?`
    let valueForNaN = ${e};
    var resultTemp = vec4<f32>(${r}(a, b));
    `+n+`
    return resultTemp;
  `:n+`
    return ${r}(a, b);
  `}function Pf(r,t){switch(r){case 0:return Ple;case 1:return Nle;case 2:return $D("atan2",t);case 3:return Ele;case 4:return Fle;case 5:return t?_le:Lle;case 6:return t?Ble:$le;case 7:return t?zle:Ole;case 8:return t?Ule:Gle;case 9:return t?Kle:Wle;case 10:return t?Hle:Vle;case 11:return t?Yle:Xle;case 12:return Mle;case 13:return t?jle:qle;case 15:return t?eme:Jle;case 16:return $D("max",t);case 17:return $D("min",t);case 14:return t?Qle:Zle;case 18:return Dle;case 19:return Rle;default:throw new Error(`BinaryType ${r} is not implemented!`)}}var tme="return abs(a);",rme="return ceil(a);",nme="return cos(a);",ome=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,sme="return exp(a) - 1.0;",ame="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",ime=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,ume="return exp(a);",pme="return floor(a);",lme="return f32(isnan(a));",mme="return a;",cme=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,dme="return f32(!(a >= 1.0));",fme="return -a;",hme="if (a < 0.0) { return uniforms.alpha * a; } return a;",gme=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,bme="return 1.0 / a;",yme="return select(a, 0.0, a < 0.0);",Tme="return clamp(a, 0.0, 6.0);",xme="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Ime=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,Cme="return 1.0/sqrt(a);",kme="return 1.0 / (1.0 + exp(-1.0 * a));",Sme="return sin(a);",vme=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Ame="return sqrt(a);",wme="return a * a;",Nme=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,Dme="return f32(i32((a)));";function Nu(r,t){switch(r){case 0:return tme;case 2:return nme;case 3:return ome;case 1:return rme;case 4:return t?ime:ame;case 5:return ume;case 6:return sme;case 7:return pme;case 8:return lme;case 9:return mme;case 10:return cme;case 11:return dme;case 12:return fme;case 15:return t?gme:hme;case 16:return bme;case 13:return t?Ime:yme;case 14:return t?xme:Tme;case 17:return Cme;case 20:return kme;case 18:return Sme;case 19:return vme;case 21:return Ame;case 22:return wme;case 23:return Nme;case 24:return Dme;default:throw new Error(`BinaryType ${r} is not implemented!`)}}var Jt=r=>{switch(r){case 1:return"f32";case 2:return"vec2<f32>";case 3:return"vec3<f32>";case 4:return"vec4<f32>";default:throw new Error(`${r}-component is not supported.`)}};function Yr(r,t=!1,e=!1,n=3){if(r===null)return"";let o="";if(r==="linear")o=Nu(9);else if(r==="relu")o=Nu(13,e);else if(r==="elu")o=Nu(4,e);else if(r==="relu6")o=Nu(14,e);else if(r==="prelu")o=Pf(15,e);else if(r==="sigmoid")o=Nu(20,e);else if(r==="leakyrelu")o=Nu(15,e);else throw new Error(`Activation ${r} has not been implemented for the WebGPU backend.`);let a=Jt(e?4:1),i="";return t?i=`
      fn activation(a : ${a}, coords : vec${n}<i32>) -> ${a} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${o}
      }`:i=`
      fn activation(a : ${a}, coords : vec${n}<i32>) -> ${a} {
        ${o}
      }`,i}function Jn(r,t){return`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      ${t?"value = activation(value, coords);":""}
      `}function BD(r,t,e,n,o=!1,s=!1,a=!1,i=1){y.assert(e&&i===1||!e,()=>`transposeA ${e} is not compatible with component size ${i}`);let u=`
      let batch = ${r?"0":"batchIn"};
      ${e?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,p=n?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batchIn: i32, row: i32, colIn: i32) -> ${Jt(i)} {
    var value = ${Jt(i)}(0.0);
    let col = colIn * ${i};
    ${o&&a?u:`
    ${e?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${u}
    }
    `}
    return value;
  }

  fn mm_readB(batchIn: i32, row: i32, colIn: i32) -> ${Jt(i)} {
    let col = colIn * ${i};
    let batch = ${t?"0":"batchIn"};
    var value = ${Jt(i)}(0.0);
    ${p}
    return value;
  }
  `}function xg(r,t,e,n,o,s,a=!1,i=!1,u=!1,p=1){return`
  ${BD(e,n,o,s,a,i,u,p)}
  fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Jt(p)}) {
    let col = colIn * ${p};
    ${a&&i?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${Jn(r,t)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}var Rme=r=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / InnerElementSize + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / InnerElementSize + inputCol);
        `,Fme=(r,t)=>r?`
        let ACached0 = mm_Asub[k * InnerElementSize][localRow];
        let ACached1 = mm_Asub[k * InnerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * InnerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * InnerElementSize + 3][localRow];"}
        for (var i = 0; i < RowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < RowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`;function Ql(r,t,e=!1,n=32,o=!1,s=32,a=!1){let i=t[1]*r[1],u=t[0]*r[0],p=e?i:n,l=e?n:i,m=p/t[0],c=n/t[1];return y.assert((e&&m===4&&r[1]===4||!e&&(m===3||m===4))&&p%t[0]===0&&n%t[1]===0&&r[0]===4,()=>`If transposeA ${e} is true, innerElementSize ${m} and workPerThread[1] ${r[1]} must be 4.
          Otherwise, innerElementSize ${m} must be 3 or 4.
      tileAWidth ${p} must be divisible by workGroupSize[0]${t[0]}. tileInner ${n} must be divisible by workGroupSize[1] ${t[1]}. ColPerThread ${r[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${m}<f32>, ${p/m}>, ${l}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${u/r[0]}>, ${n}>;

  const RowPerThread = ${r[1]};
  const ColPerThread = ${r[0]};
  const InnerElementSize = ${m};
  const TileInner = ${n};

  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
  fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
            @builtin(global_invocation_id) GlobalId : vec3<u32>,
            @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
            @builtin(workgroup_id) workgroupId: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;

    let localRow = i32(localId.y);
    let tileRow = ${a?"0":"localRow * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${a?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let batch = ${o?"0":"i32(globalId.z)"};
    let globalRowStart = i32(workgroupId.y) * ${i};

    let numTiles = ${o?`${Math.ceil(s/n)}`:"(uniforms.dimInner - 1) / TileInner + 1"};
    var kStart = ${o?`i32(globalId.z) * ${s}`:"0"};

    var acc: array<vec4<f32>, RowPerThread>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${c};
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${Rme(e)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${c}; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol);
        }
        kStart = kStart + TileInner;
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / InnerElementSize; k = k + 1) {
            let BCached0 = mm_Bsub[k * InnerElementSize][tileCol];
            let BCached1 = mm_Bsub[k * InnerElementSize + 1][tileCol];
            let BCached2 = mm_Bsub[k * InnerElementSize + 2][tileCol];
            ${m===3?"":"let BCached3 = mm_Bsub[k * InnerElementSize + 3][tileCol];"}

            ${Fme(e,m)}
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}var Pme=r=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,Mme=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function Jl(r,t,e=!1,n=32,o=!1,s=32){let a=r[1]*t[1],i=r[0]*t[0],u=e?a:n,p=e?n:a;y.assert(p%t[1]===0&&u%t[0]===0&&n%t[1]===0,()=>`tileAHight ${p} must be divisible by workGroupSize[1]${t[1]}, tileAWidth ${u} must be divisible by workGroupSize[0]${t[0]}, tileInner ${n} must be divisible by workGroupSize[1]${t[1]}`);let l=p/t[1],m=u/t[0],c=n/t[1];return`
    var<workgroup> mm_Asub : array<array<f32, ${u}>, ${p}>;
    var<workgroup> mm_Bsub : array<array<f32, ${i}>, ${n}>;
    const RowPerThread = ${r[1]};
    const ColPerThread = ${r[0]};
    const TileInner = ${n};

    @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
    fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
              @builtin(global_invocation_id) GlobalId : vec3<u32>,
              @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
              @builtin(workgroup_id) workgroupId: vec3<u32>) {
      localId = LocalId;
      globalId = GlobalId;
      numWorkgroups = NumWorkgroups;

      let tileRow = i32(localId.y) * RowPerThread;
      let tileCol = i32(localId.x) * ColPerThread;

      let globalRow = i32(globalId.y) * RowPerThread;
      let globalCol = i32(globalId.x) * ColPerThread;
      let batch = ${o?"0":"i32(globalId.z)"};
      let globalRowStart = i32(workgroupId.y) * ${a};

      let numTiles = ${o?`${Math.ceil(s/n)}`:"(uniforms.dimInner - 1) / TileInner + 1"};
      var kStart = ${o?`i32(globalId.z) * ${s}`:"0"};

      var acc : array<array<f32, ColPerThread>, RowPerThread>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let tileRowA = i32(localId.y) * ${l};
      let tileColA = i32(localId.x) * ${m};
      let tileRowB = i32(localId.y) * ${c};
      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${l}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${m}; innerCol = innerCol + 1) {
            let inputRow = tileRowA + innerRow;
            let inputCol = tileColA + innerCol;
            ${Pme(e)}
          }
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${c}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batch,
              kStart + inputRow,
              globalCol + innerCol);
          }
        }
        kStart = kStart + TileInner;
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ColPerThread>;
        for (var k = 0; k < TileInner; k = k + 1) {
          for (var inner = 0; inner < ColPerThread; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            ${Mme(e)}
            for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          mm_write(batch, globalRow + innerRow, globalCol + innerCol,
              acc[innerRow][innerCol]);
        }
      }
    }
  `}var Eme=r=>r?`
      mm_readA(batch, colA, globalRow),
      mm_readA(batch, colA + 1, globalRow),
      mm_readA(batch, colA + 2, globalRow),
      mm_readA(batch, colA + 3, globalRow)
  `:`
      mm_readA(batch, globalRow, colA),
      mm_readA(batch, globalRow, colA + 1),
      mm_readA(batch, globalRow, colA + 2),
      mm_readA(batch, globalRow, colA + 3)
  `;function Lme(r,t=!1){return y.assert(r[1]===1&&r[2]===1,()=>`A linear work group size is required. But got ${r}.`),`
    const TileSize = ${r[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;

    ${be()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;
      let batch = i32(globalId.z);
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${Eme(t)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(batch, rowB, globalCol),
                              mm_readB(batch, rowB + 1, globalCol),
                              mm_readB(batch, rowB + 2, globalCol),
                              mm_readB(batch, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}var IC=class{constructor(t,e,n,o,s=!1,a=!1,i=null,u=null,p=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0]};let l=s?t[1]:t[2];if(this.isVec4=(l%4===0&&!s||e[1]%4===0&&s)&&e[2]%4===0&&!a,this.isVectorA=e[1]===1&&!s,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workGroupSize=[32,1,1];else{let d=FD(e[1],l,e[2],s);this.workGroupSize=d.workGroupSize,this.elementsPerThread=d.elementsPerThread}this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let m=i!=null,c=p!=null;m&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),this.transposeA=s,this.transposeB=a,this.addBias=m,this.activation=u,this.hasPreluActivationWeights=c,this.batchAEqualOne=n,this.batchBEqualOne=o,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(e[1],e[2],l),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${s}_${a}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getShapeFit(t,e,n){let o=this.workGroupSize[1]*this.elementsPerThread[1],s=this.workGroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workGroupSize[0]*4:this.tileInner=s;let a=t%o===0,i=e%s===0,u=n%this.tileInner===0;return[a,i,u]}getUserCode(){return`
      ${Yr(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${xg(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?Ql(this.elementsPerThread,this.workGroupSize,this.transposeA,this.tileInner,!1,null,this.isVectorA):this.isVectorA?Lme(this.workGroupSize,this.transposeA):Jl(this.elementsPerThread,this.workGroupSize,this.transposeA,this.tileInner)}
    `}};function _me(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${be()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var CC=class{constructor(t,e,n,o=!1,s=!1,a=null,i=null,u=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[256,1,1];this.outputShape=t,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize);let p=a!=null,l=u!=null;p&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.transposeA=o,this.transposeB=s,this.addBias=p,this.activation=i,this.hasPreluActivationWeights=l,this.batchAEqualOne=e,this.batchBEqualOne=n,this.shaderKey=`matMulReduce_${this.activation}_${o}_${s}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){return`
      ${Yr(this.activation,this.hasPreluActivationWeights)}
      ${xg(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      ${_me()}
    `}};function $me(r){let t=r[1],e=r[0],n=t>e?t:e;return`
  var<workgroup> mm_Asub : array<array<f32, ${n}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<f32, ${e}>, ${n}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${be()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batch, globalRow, globalColA);
    var regB0 = mm_readB(batch, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batch, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${n};
    globalRowB = globalRowB + ${n};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batch, globalRow, globalColA);
      regB0 = mm_readB(batch, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batch, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${n};
      globalRowB = globalRowB + ${n};

      for (var k = 0; k < ${n}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}var kC=class{constructor(t,e,n,o=!1,s=!1,a=null,i=null,u=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[16,8,1];this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]/this.workGroupSize[1]),n[0]];let p=a!=null;p&&this.variableNames.push("bias");let l=u!=null;l&&this.variableNames.push("preluActivationWeights"),this.transposeA=o,this.transposeB=s,this.addBias=p,this.activation=i,this.hasPreluActivationWeights=l,this.batchAEqualOne=t[0]===1,this.batchBEqualOne=e[0]===1,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${o}_${s}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){return`
      ${Yr(this.activation,this.hasPreluActivationWeights)}
      ${xg(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      ${$me(this.workGroupSize)}
    `}};var SC=class{constructor(t,e,n,o,s=!1,a=!1){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workGroupSize=[8,8,1];this.atomic=!0;this.isVec4=!1;this.splitedDimInner=128;y.assert(t[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0,3]},this.isVec4=(s&&this.outputShape[1]%4===0||!s&&e%4===0)&&this.outputShape[2]%4===0,this.elementsPerThread=[4,4,this.splitedDimInner],this.isVec4||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=ge(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],e],this.workGroupSize,this.elementsPerThread),this.transposeA=s,this.transposeB=a,this.batchAEqualOne=n,this.batchBEqualOne=o,this.shaderKey=`matMulSplitK_${s}_${a}_${n}_${o}_${this.elementsPerThread}_${this.isVec4}`}getUserCode(){let t=o=>`
      for (var i = 0; i < ${o}; i = i + 1)
      {
        var oldValue = atomicLoad(&(result[flatIndex + i]));
        var exchanged = false;
        for (; !exchanged;) {
          let newValueF32 = bitcast<f32>(oldValue) + ${o>1?"value[i]":"value"};
          let newValue = bitcast<i32>(newValueF32);
          let res = atomicCompareExchangeWeak(&(result[flatIndex + i]), oldValue, newValue);
          oldValue = res.old_value;
          exchanged = res.exchanged;
        }
      }
      `,e=this.isVec4?4:1;return`
      ${BD(this.batchAEqualOne,this.batchBEqualOne,!1,this.transposeB,!1,!1,!1,e)}
      fn mm_write(batch: i32, row : i32, colIn : i32, value : ${Jt(e)}) {
        let col = colIn * ${e};
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          ${t(e)}
        }
      }
      ${this.isVec4?Ql(this.elementsPerThread,this.workGroupSize,this.transposeA,32,!0,this.splitedDimInner):Jl(this.elementsPerThread,this.workGroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}},vC=class{constructor(t,e=null,n=null,o=null){this.uniforms="";this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.addBias=e!=null,this.hasPreluActivationWeights=o!=null,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${n}`}getUserCode(){return`
    ${Yr(this.activation,this.hasPreluActivationWeights)}
    ${be("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${Jn(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}};var AC=class{constructor(t){this.variableNames=[];this.outputShape=[];this.uniforms="value : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${be("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function us(r){let{backend:t,attrs:e}=r,{shape:n,value:o}=e,{dtype:s}=e;if(s=s||y.inferDtype(o),s==="string"){let a=y.getArrayFromDType(s,y.sizeFromShape(n));return a.fill(o),t.makeTensorInfo(n,s,a)}else{let a=new AC(n),i=[{type:"float32",data:[o]}];return t.runWebGPUProgram(a,[],s,i)}}var nW={kernelName:ii,backendName:"webgpu",kernelFunc:us};function we(r){let{inputs:t,attrs:e}=r,{x:n}=t,{shape:o}=e,s=y.sizeFromShape(n.shape),a=y.inferFromImplicitShape(o,s),i=y.sizeFromShape(a);return y.assert(s===i,()=>`The new shape (${a}) has ${i} elements and the old shape (${n.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var oW={kernelName:ys,backendName:"webgpu",kernelFunc:we};function Mf({a:r,b:t,transposeA:e,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){let p=r.shape.length,l=t.shape.length,m=e?r.shape[p-2]:r.shape[p-1],c=n?t.shape[l-1]:t.shape[l-2],d=e?r.shape[p-1]:r.shape[p-2],f=n?t.shape[l-2]:t.shape[l-1],h=r.shape.slice(0,-2),g=t.shape.slice(0,-2),b=y.sizeFromShape(h),T=y.sizeFromShape(g),I=Ar.assertAndGetBroadcastShape(r.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);y.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${t.shape} and transposeA=${e} and transposeB=${n} must match.`);let k=e?[b,m,d]:[b,d,m],w=n?[T,f,c]:[T,c,f],R=we({inputs:{x:r},backend:o,attrs:{shape:k}}),F=we({inputs:{x:t},backend:o,attrs:{shape:w}}),P=[R,F],E=Math.max(b,T),B=b===1,G=T===1,U=[R,F],V=[{type:"int32",data:[d]},{type:"int32",data:[f]},{type:"int32",data:[m]}],W,H,j=[E,d,f],X=$().get("WEBGPU_MATMUL_PROGRAM_TYPE");switch(X<0&&(d*f<=128?X=0:E===1&&d<=128&&f<=48&&c>=2e3?X=1:d<=16&&(f<=512||c>=2*f)||f<=16&&(d<=512||m>=2*d)?X=2:X=3),X){case 0:W=new CC(j,B,G,e,n,s,u,a);break;case 1:{if(H=us({backend:o,attrs:{shape:j,value:0,dtype:r.dtype}}),W=new SC(j,c,B,G,e,n),s||u){H=o.runWebGPUProgram(W,U,r.dtype,V,H);let ne=new vC(H.shape,s,u,a),oe=null,se=[H];s&&se.push(s),a&&se.push(a),u==="leakyrelu"&&(oe=[{type:"float32",data:[i]}],ne.uniforms+=" alpha : f32,");let re=o.runWebGPUProgram(ne,se,H.dtype,oe);P.push(H);let ae=we({inputs:{x:re},backend:o,attrs:{shape:I}});P.push(re);for(let ce of P)o.disposeData(ce.dataId);return ae}break}case 2:W=new kC(k,w,j,e,n,s,u,a);break;case 3:W=new IC(k,j,B,G,e,n,s,u,a);break;default:throw new Error(`Unsupported MatMulProgramType ${X}.`)}s&&U.push(s),a&&U.push(a),u==="leakyrelu"&&(V.push({type:"float32",data:[i]}),W.uniforms+=" alpha : f32,"),H=o.runWebGPUProgram(W,U,r.dtype,V,H);let ee=we({inputs:{x:H},backend:o,attrs:{shape:I}});P.push(H);for(let ne of P)o.disposeData(ne.dataId);return ee}function Bme(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=t,{transposeA:u,transposeB:p,activation:l,leakyreluAlpha:m}=n;return Mf({a:o,b:s,transposeA:u,transposeB:p,backend:e,bias:a,preluActivationWeights:i,leakyreluAlpha:m,activation:l})}var sW={kernelName:As,backendName:"webgpu",kernelFunc:Bme};var Ig=class{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.workGroupSize=[128,1,1];this.size=!0;this.outputShape=C.assertAndGetBroadcastShape(e,n),this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${t}`,this.op=t}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Pf(this.op,!1)}
      }

      ${be("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};var em=class{constructor(t,e,n){this.size=!0;this.variableNames=["A","B"];this.outputShape=C.assertAndGetBroadcastShape(e,n),this.dispatchLayout=Ce(this.outputShape),this.op=t,this.useSharedMemoryWithA=e.length<=1&&n.length>1&&e[0]<128,this.useSharedMemoryWithB=n.length<=1&&e.length>1&&n[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB?(this.isVec4=!1,this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:e[0],this.shaderKey=`binary_${this.type}_${t}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`,this.type="shared",this.workGroupSize=[256,1,1],this.workPerThread=1):(y.arraysEqual(e,n)&&y.sizeFromShape(e)%4===0?(this.isVec4=!0,this.type="vec4",this.workPerThread=4):(this.isVec4=!1,this.type="plain",this.workPerThread=1),this.shaderKey=`binary_${this.type}_${t}`,this.workGroupSize=[128,1,1]),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1])}getUserCode(){let t,e=this.isVec4?"vec4<f32>":"f32",n=`
    fn binaryOperation(a : ${e}, b : ${e}) -> ${e} {
      ${Pf(this.op,this.isVec4)}
    };
    `;if(this.type==="shared"){let o=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",s=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${o}];`:`let a = sharedBuf[${o}];
          let b = getBByOutputIndex(index);`;t=`
        ${n}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${be("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${s}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else t=`
       ${n}
       ${be("index")} {
         if (index < uniforms.size) {
           let a = getAByOutputIndex(index);
           let b = getBByOutputIndex(index);
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return t}};function cr(r){let{inputs:t}=r,{x:e}=t;return r.backend.incRef(e.dataId),{dataId:e.dataId,shape:e.shape,dtype:e.dtype}}var aW={kernelName:Un,backendName:"webgpu",kernelFunc:cr};function ti(r){let{inputs:t,backend:e}=r,{real:n,imag:o}=t,s=e.makeTensorInfo(n.shape,"complex64"),a=e.tensorMap.get(s.dataId),i=cr({inputs:{x:n},backend:e}),u=cr({inputs:{x:o},backend:e});return a.complexTensorInfos={real:i,imag:u},s}var iW={kernelName:Lu,backendName:"webgpu",kernelFunc:ti};var ta=class{constructor(t,e){this.variableNames=["A"];this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=e,this.shaderKey=`unary_${e}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Nu(this.op,!1)}
      }
      ${be("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function ot({opType:r,cpuKernelImpl:t,dtype:e}){return({inputs:n,backend:o})=>{let{x:s}=n,a=o,i=e||s.dtype;if(a.shouldExecuteOnCPU([s])&&t!=null){let p=a.tensorMap.get(s.dataId),l=t(p.values,i);return a.makeTensorInfo(s.shape,i,l)}let u=new ta(s.shape,r);return a.runWebGPUProgram(u,[s],i)}}function yt({opType:r,cpuKernelImpl:t,supportsComplex:e=!1,dtype:n}){return({inputs:o,backend:s})=>{let{a,b:i}=o,u=s;if(e&&a.dtype==="complex64"){let m=u.tensorMap.get(a.dataId),c=u.tensorMap.get(i.dataId),d,f;if(r!==0)[d,f]=[[m.complexTensorInfos.real,c.complexTensorInfos.real],[m.complexTensorInfos.imag,c.complexTensorInfos.imag]].map(g=>{let[b,T]=g,x={dataId:b.dataId,dtype:b.dtype,shape:a.shape},I={dataId:T.dataId,dtype:T.dtype,shape:i.shape},k=new em(r,a.shape,i.shape);return u.runWebGPUProgram(k,[x,I],Mt(b.dtype,T.dtype))});else{let g=new Ig(18,a.shape,i.shape),b=new Ig(19,a.shape,i.shape),T=[{dataId:m.complexTensorInfos.real.dataId,dtype:m.complexTensorInfos.real.dtype,shape:a.shape},{dataId:m.complexTensorInfos.imag.dataId,dtype:m.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:i.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:i.shape}];d=u.runWebGPUProgram(g,T,"float32"),f=u.runWebGPUProgram(b,T,"float32")}let h=ti({inputs:{real:d,imag:f},backend:u});return u.disposeData(d.dataId),u.disposeData(f.dataId),h}let p=n||Mt(a.dtype,i.dtype);if((a.dtype==="string"||i.dtype==="string"||u.shouldExecuteOnCPU([a,i]))&&t!=null){let m=u.tensorMap.get(a.dataId).values,c=u.tensorMap.get(i.dataId).values,d=a.dtype==="string"?C.fromUint8ToStringArray(m):m,f=a.dtype==="string"?C.fromUint8ToStringArray(c):c,[h,g]=t(a.shape,i.shape,d,f,p);return u.makeTensorInfo(g,p,h)}let l=new em(r,a.shape,i.shape);return u.runWebGPUProgram(l,[a,i],p)}}var{addImpl:uW,castImpl:pW,ceilImpl:lW,concatImpl:mW,equalImpl:cW,expImpl:dW,expm1Impl:fW,floorImpl:hW,gatherNdImpl:gW,gatherV2Impl:bW,greaterEqualImpl:yW,greaterImpl:TW,lessEqualImpl:xW,lessImpl:IW,logImpl:CW,maxImpl:kW,maximumImpl:SW,minimumImpl:vW,multiplyImpl:AW,negImpl:wW,notEqualImpl:NW,prodImpl:DW,rangeImpl:RW,rsqrtImpl:FW,scatterImpl:PW,simpleAbsImpl:MW,sliceImpl:EW,stridedSliceImpl:LW,stringNGramsImpl:_W,subImpl:$W,tileImpl:BW,topKImpl:OW,transposeImpl:zW,uniqueImpl:YAr}=sf;var Ome=ot({opType:0,cpuKernelImpl:MW}),GW={kernelName:ls,backendName:"webgpu",kernelFunc:Ome};var zme=yt({opType:1,cpuKernelImpl:uW,supportsComplex:!0}),UW={kernelName:vn,backendName:"webgpu",kernelFunc:zme};var wC=class{constructor(t){this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t[0],this.variableNames=t.map((e,n)=>`T${n}`),this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let t=[];this.variableNames.forEach(o=>{t.push(`let v${o} = get${o}ByOutputCoords(coords);`)});let e=this.variableNames.map(o=>`v${o}`).join(" + ");return`
      ${be("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${t.join(`
        `)}
            setOutputAtIndex(flatIndex, ${e});
          }
        }
      }
    `}};function Gme(r){let{inputs:t,backend:e}=r,n=t;if(n.length===1)return cr({inputs:{x:n[0]},backend:e});let o=n.map(i=>i.dtype).reduce((i,u)=>Mt(i,u)),s=n.map(i=>i.shape),a=new wC(s);return e.runWebGPUProgram(a,n,o)}var WW={kernelName:uo,backendName:"webgpu",kernelFunc:Gme};var Ef=class{constructor(t,e,n){this.workGroupSize=[64,1,1];this.variableNames=["x"];this.uniforms="infinityValue : f32,";this.size=!0;let o=[e];this.op=n==="min"?"<":">";let[s,a]=C.computeOutAndReduceShapes(t,o);this.outputShape=s.length===0?[1]:s,this.dispatchLayout=Ce(this.outputShape),y.sizeFromShape(a)<32||y.sizeFromShape(s)>1e3?(this.type="plain",this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize)):(this.type="shared",this.dispatch=ge(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=t,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){let t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${ea(this.inputShape.length-1)}`,e=()=>{let n="";if(this.outputShape.length===1)this.inputShape.length!==1&&(n+="outputCoords,");else for(let o=0;o<this.outputShape.length;o++)n+=`outputCoords.${ea(o)},`;return n};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `}

      ${be("index")} {
        let outputIndex = index / i32(workGroupSizeX);
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = getX(${e()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${be("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${e()} 0);
          let reduceLength = ${t()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${e()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}};var NC=class{constructor(t,e){this.variableNames=["A"];this.workGroupSize=[16,16,1];let n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[e[o]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      const TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${Ep()}
      fn _start(@builtin(local_invocation_id) localId : vec3<u32>,
                @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = A[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}};var DC=class{constructor(t,e){this.variableNames=["A"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;let n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[e[o]];this.outputShape=n,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=e,this.shaderKey=`transpose_${e}`}getUserCode(){let t=ir(this.outputShape.length),e=Ume(this.newDim);return`
      ${be("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${t}(${e}), uniforms.aShape)]);
          }
        }
      }
    `}};function Ume(r){let t=r.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=new Array(t);for(let n=0;n<r.length;n++)e[r[n]]=`resRC.${ea(n)}`;return e.join()}function kn(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{perm:s}=n,a=e,i=o.shape.length,u=new Array(i);for(let l=0;l<u.length;l++)u[l]=o.shape[s[l]];if(e.shouldExecuteOnCPU([o])){let m=a.tensorMap.get(o.dataId).values,c=zW(m,o.shape,o.dtype,s,u);return e.makeTensorInfo(u,o.dtype,c)}if(o.shape.length===2&&y.arraysEqual(s,[1,0])){let l=new NC(o.shape,s);return a.runWebGPUProgram(l,[o],o.dtype)}let p=new DC(o.shape,s);return a.runWebGPUProgram(p,[o],o.dtype)}var KW={kernelName:wn,backendName:"webgpu",kernelFunc:kn};function Wme(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,p=[];i!=null&&(u=kn({inputs:{x:o},backend:e,attrs:{perm:i}}),p.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMax",[a[0]],u.shape.length);let l=new Ef(u.shape,a[0],"max"),m=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],c=e.runWebGPUProgram(l,[u],"int32",m);return p.forEach(d=>e.disposeData(d.dataId)),c}var VW={kernelName:po,backendName:"webgpu",kernelFunc:Wme};function Kme(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=C.getAxesPermutation(a,o.shape.length),u=o,p=[];i!=null&&(u=kn({inputs:{x:o},backend:e,attrs:{perm:i}}),p.push(u),a=C.getInnerMostAxes(a.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMin",[a[0]],u.shape.length);let l=new Ef(u.shape,a[0],"min"),m=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],c=e.runWebGPUProgram(l,[u],"int32",m);return p.forEach(d=>e.disposeData(d.dataId)),c}var HW={kernelName:ai,backendName:"webgpu",kernelFunc:Kme};var Vme=yt({opType:2}),qW={kernelName:ia,backendName:"webgpu",kernelFunc:Vme};var Cg=class{constructor(t,e){this.variableNames=["x"];this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,";this.workGroupSize=[128,1,1];this.size=!0;this.outputShape=t.outShape,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${e}`,this.poolType=e}getUserCode(){let t="resultValue = max(value, resultValue);";this.poolType==="avg"&&(t="resultValue = resultValue + value; count = count + 1.0;");let e="resultValue";return this.poolType==="avg"&&(e="resultValue / count"),`
      ${be("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${t}
            }
          }

          setOutputAtIndex(index, ${e});
        }
      }
    `}};var RC=class{constructor(t){this.variableNames=["x"];this.uniforms="stride : vec2<i32>,";this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=t.outShape,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${be("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};var FC=class{constructor(t,e){this.workGroupSize=[64,1,1];this.variableNames=["x"];this.uniforms="reduceSize : i32,";this.size=!0;this.inputShape=[t.batchSize,t.inSize];let[n]=C.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=e,this.shaderKey=`reduce_${e}`}getUserCode(){let t="",e="0.0";this.reduceType==="min"||this.reduceType==="max"?(t=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,e="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?t=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(t=" bestValue = bestValue * candidate; ",e="1.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${be("index")} {
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${e};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x[offset + k]);
           ${t}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${t}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function wi(r,t,e,n,o){let s=r.shape.length,a=[],i=y.parseAxisParam(t,r.shape),u=i,p=C.getAxesPermutation(u,s),l=r;p!=null&&(l=kn({inputs:{x:r},attrs:{perm:p},backend:o}),u=C.getInnerMostAxes(u.length,s),a.push(l)),C.assertAxesAreInnerMostDims(n,u,s);let[m,c]=C.computeOutAndReduceShapes(l.shape,u),d=m;e&&(d=C.expandShapeToKeepDim(m,i));let f;if((n==="max"||n==="prod")&&o.shouldExecuteOnCPU([l])){let h=o.tensorMap.get(l.dataId).values;switch(n){case"max":let g=kW(h,y.sizeFromShape(c),d,r.dtype);f=o.makeTensorInfo(d,r.dtype,g);break;case"prod":let{outVals:b,outShape:T,outDtype:x}=DW(l.shape,l.dtype,h,u);f=o.makeTensorInfo(T,x,b);break;default:throw new Error(`${n} CPU implementation is not yet supported.`)}}else{let h=y.sizeFromShape(c),b=y.sizeFromShape(l.shape)/h,T={windowSize:h,inSize:h,batchSize:b,outSize:1},x=n==="mean"?"float32":ru(r.dtype),I=[{type:"int32",data:[h]}],k=new FC(T,n),w=o.runWebGPUProgram(k,[l],x,I);a.push(w),f=we({inputs:{x:w},attrs:{shape:d},backend:o})}return a.forEach(h=>o.disposeData(h.dataId)),f}function kg(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reductionIndices:s,keepDims:a}=n;return wi(o,s,a,"max",e)}var jW={kernelName:Do,backendName:"webgpu",kernelFunc:kg};function OD(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{keepDims:s,axis:a}=n;return wi(o,a,s,"mean",e)}var XW={kernelName:Po,backendName:"webgpu",kernelFunc:OD};function PC(r,t,e,n){if(t.filterWidth===1&&t.filterHeight===1&&y.arraysEqual(t.inShape,t.outShape))return cr({inputs:{x:r},backend:n});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&t.batchSize===1&&t.padInfo.type==="VALID"){let a=r.shape.length,i=we({inputs:{x:r},backend:n,attrs:{shape:[r.shape[a-3]*r.shape[a-2],r.shape[a-1]]}}),u;e==="avg"?u=OD({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}}):(y.assert(e==="max",()=>`Invalid pool type ${e}`),u=kg({inputs:{x:i},backend:n,attrs:{reductionIndices:0,keepDims:!1}}));let p=we({inputs:{x:u},backend:n,attrs:{shape:t.outShape}});return n.disposeData(i.dataId),n.disposeData(u.dataId),p}let o,s=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return t.filterHeight===1&&t.filterWidth===1?o=new RC(t):(e==="avg"?o=new Cg(t,"avg"):(y.assert(e==="max",()=>`Invalid pool type ${e}`),o=new Cg(t,"max")),s.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),n.runWebGPUProgram(o,[r],r.dtype,s)}function Hme(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,p=1,l=C.computePool2DInfo(o.shape,s,a,p,i,u);return PC(o,l,"avg",e)}var YW={kernelName:lo,backendName:"webgpu",kernelFunc:Hme};function qme(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s}=t,{transposeA:a,transposeB:i}=n;return Mf({a:o,b:s,transposeA:a,transposeB:i,backend:e})}var ZW={kernelName:mo,backendName:"webgpu",kernelFunc:qme};var MC=class{constructor(t,e){this.variableNames=["source"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.rank=e.length,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=t,this.uniforms=`start : ${ir(t.length)}, `,this.shaderKey="slice"}getUserCode(){let t=ir(this.rank),e=jme(this.rank),n;return this.start.length===1?n=this.outputShape.map((s,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((s,a)=>`sourceLoc.${zD[a]} = uniforms.start.${ea(a)} + coords.${zD[a]};`),`
      ${be("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${t};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${e}));
        }
      }
    `}},zD=["x","y","z","w","u","v"];function jme(r){if(r===1)return"sourceLoc";if(r<=6)return zD.slice(0,r).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}function ri(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,size:a}=n,[i,u]=Tt.parseSliceParams(o,s,a);if(Tt.assertParamsValid(o,i,u),e.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=e.tensorMap.get(o.dataId),c=EW(m.values,i,u,o.shape,o.dtype);return e.makeTensorInfo(u,o.dtype,c)}if(y.sizeFromShape(u)===0)return e.makeTensorInfo(u,o.dtype,[]);let p=new MC(i,u),l=[{type:"int32",data:i}];return e.runWebGPUProgram(p,[o],o.dtype,l)}var QW={kernelName:xs,backendName:"webgpu",kernelFunc:ri};var Xme=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,crops:a}=n;y.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((T,x)=>T*x),u=C.getReshaped(o.shape,s,i),p=C.getPermuted(u.length,s.length),l=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(l,a,s.length),d=[],f=we({inputs:{x:o},backend:e,attrs:{shape:u}}),h=kn({inputs:{x:f},backend:e,attrs:{perm:p}}),g=we({inputs:{x:h},backend:e,attrs:{shape:l}}),b=ri({inputs:{x:g},backend:e,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(T=>e.disposeData(T.dataId)),b},JW={kernelName:ms,backendName:"webgpu",kernelFunc:Xme};var GD=yt({opType:11,dtype:"bool",cpuKernelImpl:NW}),eK={kernelName:Ia,backendName:"webgpu",kernelFunc:GD};function Du(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.tensorMap.get(n.dataId);return cr({inputs:{x:o.complexTensorInfos.real},backend:e})}var tK={kernelName:Wu,backendName:"webgpu",kernelFunc:Du};function rK(r,t){let e=new ta(r.shape,24),n=t.runWebGPUProgram(e,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function UD(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return cr({inputs:{x:o},backend:e});let a=xt(o.shape),i=UD({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),u=ti({inputs:{real:i,imag:a},backend:e});return a.dispose(),e.disposeData(i.dataId),u}if(o.dtype==="complex64"){let a=Du({inputs:{input:o},backend:e}),i=UD({inputs:{x:a},backend:e,attrs:{dtype:s}});return e.disposeData(a.dataId),i}if(!y.hasEncodingLoss(o.dtype,s)){let a=cr({inputs:{x:o},backend:e});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(e.shouldExecuteOnCPU([o])){let a=e.tensorMap.get(o.dataId).values,[i,u,p]=pW(a,o.shape,o.dtype,s);return e.makeTensorInfo(i,u,p)}if(s==="int32")return rK(o,e);if(s==="bool"){let a=e.makeTensorInfo([],"bool",y.getTypedArrayFromDType("bool",1)),u=GD({inputs:{a:o,b:a},backend:e});return e.disposeData(a.dataId),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var nK={kernelName:zn,backendName:"webgpu",kernelFunc:UD};var Yme=ot({opType:1,cpuKernelImpl:lW}),oK={kernelName:co,backendName:"webgpu",kernelFunc:Yme};var EC=class{constructor(t){this.variableNames=["A"];this.uniforms="minVal : f32, maxVal : f32,";this.workPerThread=4;this.workGroupSize=[64,1,1];this.isVec4=!0;this.size=!0;this.outputShape=t,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${be("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isnan(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}};var LC=class{constructor(t){this.variableNames=["A"];this.uniforms="minVal : f32, maxVal : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${be("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function Zme(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{clipValueMin:s,clipValueMax:a}=n,i,u=[{type:"float32",data:[s]},{type:"float32",data:[a]}];return y.sizeFromShape(o.shape)%4===0?i=new EC(o.shape):i=new LC(o.shape),e.runWebGPUProgram(i,[o],o.dtype,u)}var sK={kernelName:Gn,backendName:"webgpu",kernelFunc:Zme};var _C=class{constructor(t){this.uniforms="";this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=C.computeOutShape(t,1),this.variableNames=t.map((e,n)=>`T${n}`),this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=t.length-1;for(let e=0;e<this.offsetLength;e++)this.uniforms+=`offset${e} : i32,`;this.shaderKey="concat"}getUserCode(){let t=[];if(this.offsetLength>0){t.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let s=1;s<this.offsetLength;s++)t.push(`else if (yC < uniforms.offset${[s]}){ setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${s-1})); }`);let n=this.offsetLength,o=this.offsetLength-1;t.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${o})); }`)}else t.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${be("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${t.join(`
        `)}
          }
        }
      }
    `}};function tm(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.tensorMap.get(n.dataId);return cr({inputs:{x:o.complexTensorInfos.imag},backend:e})}var aK={kernelName:zu,backendName:"webgpu",kernelFunc:tm};function Lf(r,t,e){let n=r[0].dtype;if(n==="complex64"){let f=r.map(x=>Du({inputs:{input:x},backend:e})),h=r.map(x=>tm({inputs:{input:x},backend:e})),g=Lf(f,t,e),b=Lf(h,t,e),T=ti({inputs:{real:g,imag:b},backend:e});return f.forEach(x=>e.disposeData(x.dataId)),h.forEach(x=>e.disposeData(x.dataId)),e.disposeData(g.dataId),e.disposeData(b.dataId),T}let o=e.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let f=r.map(k=>{let w=y.sizeFromShape(k.shape.slice(t));return we({inputs:{x:k},backend:e,attrs:{shape:[-1,w]}})}),h=f.map(k=>({vals:e.readSync(k.dataId),shape:k.shape})),g=C.computeOutShape(f.map(k=>k.shape),1),b=f[0].shape[0]===1,T=mW(h,g,n,b),x=C.computeOutShape(r.map(k=>k.shape),t),I=e.makeTensorInfo(x,n,T);return f.forEach(k=>e.disposeData(k.dataId)),I}let s=e.device.limits.maxStorageBuffersPerShaderStage-1;if(r.length>s){let f=[];for(let g=0;g<r.length;g+=s){let b=r.slice(g,g+s);f.push(Lf(b,t,e))}let h=Lf(f,t,e);for(let g of f)e.disposeData(g.dataId);return h}let{tensors2D:a,outShape:i}=Qme(r,t,e),u=a.map(f=>f.shape),p=new _C(u),l=[],m=new Array(u.length-1);if(m.length>0){m[0]=u[0][1],l.push({type:"int32",data:[m[0]]});for(let f=1;f<m.length;f++)m[f]=m[f-1]+u[f][1],l.push({type:"int32",data:[m[f]]})}let c=e.runWebGPUProgram(p,a,a[0].dtype,l);a.forEach(f=>e.disposeData(f.dataId));let d=we({inputs:{x:c},backend:e,attrs:{shape:i}});return e.disposeData(c.dataId),d}function Qme(r,t,e){let n=C.computeOutShape(r.map(s=>s.shape),t);return{tensors2D:r.map(s=>we({inputs:{x:s},backend:e,attrs:{shape:[y.sizeFromShape(s.shape.slice(0,t)),y.sizeFromShape(s.shape.slice(t))]}})),outShape:n}}function WD(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,t[0].shape)[0],a=t.map(p=>p.shape);C.assertParamsConsistent(a,s);let i=C.computeOutShape(t.map(p=>p.shape),s);if(y.sizeFromShape(i)===0)return e.makeTensorInfo(i,t[0].dtype,[]);let u=t.filter(p=>y.sizeFromShape(p.shape)>0);return u.length===1?cr({inputs:{x:u[0]},backend:e}):Lf(u,s,e)}var iK={kernelName:cs,backendName:"webgpu",kernelFunc:WD};function Jme(r,t,e,n,o=!1,s=null,a=!1,i=4,u=4,p=4){let l=P=>{switch(P){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${P} is not supported.`)}},m=P=>{switch(P){case 1:return"return W[row * uniforms.wShape[3] + colIn];";case 4:return"return W[row * uniforms.wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${P} is not supported.`)}},c=r?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,d=r?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=r?"uniforms.xShape[1]":"uniforms.xShape[2]",h=r?"uniforms.xShape[2]":"uniforms.xShape[3]",g=r?"row":"col",b=r?"col":"row",T=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${g} / outWidth;
      let outCol = ${g} % outWidth;

      let WRow = ${b} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${b} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
      let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
      let xCh = ${b} % inChannels;
      var resData = ${Jt(i)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${h}) {
        ${c}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${l(i)}
      }
      return resData;`,x=r?t&&n?`
      let col = colIn * ${i};
      ${T}`:`
      let col = colIn * ${i};
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${T}
      }
      return ${Jt(i)}(0.0);`:n&&e?`
      let col = colIn * ${i};
      ${T}`:`
      let col = colIn * ${i};
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${T}
      }
      return ${Jt(i)}(0.0);`,I=`${m(u)}`,k=Jt(p),w=r?Jt(i):Jt(u),R=r?Jt(u):Jt(i);return`
      ${Yr(s,a,p===4,4)}
      fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${w} {
        ${r?x:I}
      }

      fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${R} {
        ${r?I:x}
      }

      fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${k}) {
        let col = colIn * ${p};
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${d}
        ${Jn(o,s)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}var $C=class{constructor(t,e,n,o,s=!1,a=null,i=!1){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.outputShape=t.outShape,this.isChannelsLast=t.dataFormat==="channelsLast",this.isVec4=((t.inChannels%4===0||t.inChannels%3===0)&&this.isChannelsLast||t.outWidth%4===0&&!this.isChannelsLast)&&t.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workGroupSize=bg(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=yg(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4?(this.isChannelsLast&&t.inChannels%4!==0?(this.innerElementSize=3,this.variableTypes=["f32","vec4<f32>"]):(this.innerElementSize=4,this.variableTypes=["vec4<f32>","vec4<f32>"]),s&&(this.variableNames.push("bias"),this.variableTypes.push("vec4<f32>")),i&&(this.variableNames.push("preluActivationWeights"),this.variableTypes.push("vec4<f32>"))):(this.innerElementSize=this.elementsPerThread[0],s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights")),this.addBias=s,this.activation=a,this.hasPreluActivationWeights=i,this.tileAOuter=this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workGroupSize[0]*this.innerElementSize,this.workGroupSize[1]),this.fitAOuter=e%this.tileAOuter===0,this.fitBOuter=n%this.tileBOuter===0,this.fitInner=o%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}`}getUserCode(){let t=this.isVec4?Ql(this.elementsPerThread,this.workGroupSize,!this.isChannelsLast,this.tileInner):Jl(this.elementsPerThread,this.workGroupSize,!this.isChannelsLast,this.tileInner),e=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${Jme(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,e[0],e[1],e[2])}
    ${t}
  `}};var BC=class{constructor(t,e=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="filterDims: vec2<i32>, pad: vec2<i32>, stride: vec2<i32>, dilation: vec2<i32>,";this.workGroupSize=[4,4,8];this.outputShape=t.outShape,this.isChannelsLast=t.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.addBias=e,this.activation=n,this.hasPreluActivationWeights=o,e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${Yr(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${Jn(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${be("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
             let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}};function uK(r,t){let e=r.length;return e>=3?t?[...r.slice(0,-3),r[e-3]*r[e-2],r[e-1]]:[...r.slice(0,-3),r[e-3],r[e-2]*r[e-1]]:!t&&e===1&&r[0]>1?[r[0],1]:null}function ece({x:r,filter:t,convInfo:e,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let u=e.dataFormat==="channelsLast",p=!u,l=!1,m=u&&e.filterHeight===e.inHeight&&e.filterWidth===e.inWidth&&e.padInfo.type==="VALID",c=[],d,f;if(m){let b=e.inHeight*e.inWidth*e.inChannels;d=we({inputs:{x:r},backend:n,attrs:{shape:[1,e.batchSize,b]}}),f=we({inputs:{x:t},backend:n,attrs:{shape:[1,b,e.outChannels]}})}else d=we({inputs:{x:r},backend:n,attrs:{shape:u?[e.batchSize,e.inHeight*e.inWidth,e.inChannels]:[e.batchSize,e.inChannels,e.inHeight*e.inWidth]}}),f=we({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}});if(c.push(d),c.push(f),s!=null){let b=uK(s.shape,u);b!=null&&(s=we({inputs:{x:s},backend:n,attrs:{shape:b}}),c.push(s))}if(o!=null){let b=uK(o.shape,u);b!=null&&(o=we({inputs:{x:o},backend:n,attrs:{shape:b}}),c.push(o))}let h=Mf({a:u?d:f,b:u?f:d,transposeA:p,transposeB:l,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),g=we({inputs:{x:h},backend:n,attrs:{shape:e.outShape}});c.push(h);for(let b of c)n.disposeData(b.dataId);return g}function OC({x:r,filter:t,convInfo:e,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let u=o!=null,p=s!=null,l=e.dataFormat==="channelsLast",m=l&&e.filterHeight===e.inHeight&&e.filterWidth===e.inWidth&&e.padInfo.type==="VALID",c=$().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!c&&(m||e.filterHeight===1&&e.filterWidth===1&&e.dilationHeight===1&&e.dilationWidth===1&&e.strideHeight===1&&e.strideWidth===1&&(e.padInfo.type==="SAME"||e.padInfo.type==="VALID")))return ece({x:r,filter:t,convInfo:e,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});let d,f=[e.padInfo.top,e.padInfo.left],h=[{type:"int32",data:[e.filterHeight,e.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[e.strideHeight,e.strideWidth]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]}];if(c)d=new BC(e,u,i,p);else{let x=l?e.outHeight*e.outWidth:e.outChannels,I=l?e.outChannels:e.outHeight*e.outWidth,k=e.filterHeight*e.filterWidth*e.inChannels;h.push({type:"int32",data:[x]},{type:"int32",data:[I]},{type:"int32",data:[k]}),d=new $C(e,x,I,k,u,i,p)}let g=[],b=[r,t];u&&(!l&&o.shape.length===1&&(o=we({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}}),g.push(o)),b.push(o)),p&&(!l&&s.shape.length===1&&(s=we({inputs:{x:s},backend:n,attrs:{shape:[s.shape[0],1,1]}}),g.push(s)),b.push(s)),i==="leakyrelu"&&(h.push({type:"float32",data:[a]}),d.uniforms+=" alpha : f32,");let T=n.runWebGPUProgram(d,b,r.dtype,h);for(let x of g)n.disposeData(x.dataId);return T}function tce(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dataFormat:u,dilations:p,dimRoundingMode:l}=e,m=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(o.shape,s.shape,a,p,i,l,!1,m);return OC({x:o,filter:s,convInfo:c,backend:n})}var pK={kernelName:fo,backendName:"webgpu",kernelFunc:tce};function rce(r=4){let t=s=>{switch(s){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${s} is not supported.`)}},n=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${Jt(r)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${Jt(r)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${r}];`}
      }
      return ${Jt(r)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${Jt(r)} {
    let col = colIn * ${r};
    ${n}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${Jt(r)} {
    let col = colIn * ${r};
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${t(r)}
    }
    return ${Jt(r)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${Jt(r)}) {
    let col = colIn * ${r};
    if (row < uniforms.dimAOuter && (col + ${r-1}) < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${r}] = value;
    }
  }`}var zC=class{constructor(t){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.outputShape=t.inShape,y.assert(t.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=t.inChannels%4===0&&t.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=bg(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=yg(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4&&(this.variableTypes=["vec4<f32>","f32"]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){let t=this.isVec4?Ql(this.elementsPerThread,this.workGroupSize):Jl(this.elementsPerThread,this.workGroupSize);return`
    ${rce(this.isVec4?4:1)}
    ${t}
    `}};var GC=class{constructor(t){this.variableNames=["dy","W"];this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t.inShape,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=t.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let t=this.isChannelsLast?1:2,e=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${be("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${t}], coords[${e}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function nce(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{inputShape:a,strides:i,pad:u,dataFormat:p,dimRoundingMode:l}=n,m=C.convertConv2DDataFormat(p),c=C.computeConv2DInfo(a,s.shape,i,1,u,l,!1,m),d=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.filterHeight-1-c.padInfo.top,c.filterWidth-1-c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize,c.outHeight,c.outWidth,c.outChannels]}],f;if($().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||c.filterHeight<=2&&c.filterWidth<=2&&c.outChannels<=16&&c.inChannels===1)f=new GC(c);else{f=new zC(c);let h=c.inHeight*c.inWidth,g=c.inChannels,b=c.filterHeight*c.filterWidth*c.outChannels;d.push({type:"uint32",data:[h]},{type:"uint32",data:[g]},{type:"uint32",data:[b]})}return e.runWebGPUProgram(f,[o,s],"float32",d)}var lK={kernelName:ho,backendName:"webgpu",kernelFunc:nce};var oce=ot({opType:2}),mK={kernelName:go,backendName:"webgpu",kernelFunc:oce};var sce=ot({opType:3}),cK={kernelName:bo,backendName:"webgpu",kernelFunc:sce};var UC=class{constructor(t,e,n,o){this.variableNames=["Image","Boxes","BoxInd"];this.uniforms="extrapolationValue : f32,";this.workGroupSize=[64,1,1];this.size=!0;let[s]=e;this.outputShape=[s,n[0],n[1],t],this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=o==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[t,e]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,o,s]=this.cropHeightBiggerThan1?[`(${t} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${t} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${t}`],[a,i,u]=this.cropWidthBiggerThan1?[`(${e} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${e} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${e}`];return`
    ${be("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${o};
        let width_scale = ${i};
        let in_y = ${s};
        if( in_y < 0.0 || in_y > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${u};
        if( in_x < 0.0 || in_x > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}};var ace=r=>{let{inputs:t,backend:e,attrs:n}=r,{image:o,boxes:s,boxInd:a}=t,{cropSize:i,method:u,extrapolationValue:p}=n,l=new UC(o.shape[3],s.shape,i,u),m=[{type:"float32",data:[p]}];return e.runWebGPUProgram(l,[o,s,a],"float32",m)},dK={kernelName:pa,backendName:"webgpu",kernelFunc:ace};var Sg=class{constructor(t,e,n,o){this.variableNames=["x"];this.uniforms="index : f32,";this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.exclusive=n,this.reverse=o,this.op=t,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let t=this.outputShape.length,e=this.op==="*"?"1.0":"0.0",n=this.exclusive?e:`getX(${fK(t,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],s="",a="";return this.exclusive?(s=this.reverse?`end != ${o-1}`:"end != 0",a=this.reverse?"end + 1":"end - 1"):(s=this.reverse?`end + pow2 < ${o}`:"end >= pow2",a=this.reverse?"end + pow2":"end - pow2"),`
      ${be("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${hK(t,"coords",this.op)};
         var val = ${n};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${s}) {
           let idx = ${a};
           ${hK(t,"coords",this.op)} = idx;
           val ${this.op}= getX(${fK(t,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function fK(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.x, ${t}.y`;if(r===3)return`${t}.x, ${t}.y, ${t}.z`;if(r===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function hK(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.y`;if(r===3)return`${t}.z`;if(r===4)return`${t}.w`;throw Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function WC(r,t,e,n,o,s){let a=t.shape.length,i=C.getAxesPermutation([n],a),u=t;i!=null&&(u=kn({inputs:{x:t},backend:e,attrs:{perm:i}}));let p=C.getInnerMostAxes(1,a)[0];if(p!==a-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let l=u.shape[p],m=cr({inputs:{x:u},backend:e});for(let c=0;c<=Math.ceil(Math.log2(l))-1;c++){let d=new Sg(r,u.shape,!1,s),f=m,h=[{type:"float32",data:[c]}];m=e.runWebGPUProgram(d,[m],m.dtype,h),e.disposeData(f.dataId)}if(o){let c=new Sg(r,u.shape,o,s),d=m,f=[{type:"float32",data:[0]}];m=e.runWebGPUProgram(c,[m],m.dtype,f),e.disposeData(d.dataId)}if(i!=null){let c=C.getUndoAxesPermutation(i),d=kn({inputs:{x:m},backend:e,attrs:{perm:c}});return e.disposeData(m.dataId),e.disposeData(u.dataId),d}return m}function uce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;return WC("*",o,e,s,a,i)}var gK={kernelName:ua,backendName:"webgpu",kernelFunc:uce};function pce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;return WC("+",o,e,s,a,i)}var bK={kernelName:yo,backendName:"webgpu",kernelFunc:pce};var KC=class{constructor(t,e){this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.uniforms="blockSize : i32,";this.outputShape=t,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${e}`,this.dataFormat=e}getUserCode(){return`
      ${be("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function lce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n,i=o.shape[0],u=a==="NHWC"?o.shape[1]:o.shape[2],p=a==="NHWC"?o.shape[2]:o.shape[3],l=a==="NHWC"?o.shape[3]:o.shape[1],m=u*s,c=p*s,d=l/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=[{type:"int32",data:[s]}],g=new KC(f,a);return e.runWebGPUProgram(g,[o],o.dtype,h)}var yK={kernelName:la,backendName:"webgpu",kernelFunc:lce};var VC=class{constructor(t,e,n,o=!1,s=null,a=!1){this.variableNames=["x","W"];this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,";this.workGroupSize=[16,16,1];this.outputShape=t,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),o&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.addBias=o,this.activation=s,this.hasPreluActivation=a,this.filterHeight=e,this.filterWidth=n,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let t=this.filterWidth*this.filterHeight,e=this.workGroupSize[0]*this.workGroupSize[1]*this.workGroupSize[2],n=this.workGroupSize[1]+this.filterHeight-1,o=this.workGroupSize[0]+this.filterWidth-1;return`
      ${Yr(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${o}>, ${n}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${Ep()}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
        localId = LocalId;
        globalId = GlobalId;
        let localIndex = i32(LocalIndex);
        numWorkgroups = NumWorkgroups;
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pad;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${this.workGroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${o}; inputCol = inputCol + ${this.workGroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = localIndex;
        ${t<e?`if (wIndex < ${t})`:`for(; wIndex < ${t}; wIndex = wIndex + ${e})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${Jn(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};var _f=class{constructor(t,e=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,";this.workGroupSize=[4,4,4];this.workPerThread=4;this.isVec4=!0;this.outputShape=t.outShape,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize,[4,this.workPerThread,1]),y.assert(t.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=t,this.addBias=e,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwiseVec4_${n}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){let t=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth;return`
      ${Yr(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      const strideHeight = ${this.convInfo.strideHeight};
      const strideWidth = ${this.convInfo.strideWidth};
      ${Ep()}
      fn _start(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = i32(globalId.z) / uniforms.outShape[1];
        let r = i32(globalId.z) % uniforms.outShape[1];
        let c = i32(globalId.y) * ${this.workPerThread};
        let d1 = i32(globalId.x) * 4;
        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(strideHeight, strideWidth) - uniforms.pad;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${t}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${t}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * strideWidth + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${Jn(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}};var $f=class{constructor(t,e=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms=`pad : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, stride : vec2<i32>, dilation : vec2<i32>,`;this.workGroupSize=[256,1,1];this.outputShape=t.outShape,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=t.dataFormat==="channelsLast",e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=t,this.addBias=e,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let t=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${Yr(this.activation,this.hasPreluActivation,!1,4)}

      ${be()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.stride - uniforms.pad;
        let d2 = coords[${this.isChannelsLast?3:1}];
        let channelMul = uniforms.wShape[3];
        let d1 = d2 / channelMul;
        let q = d2 % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
        // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
        // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
        // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
        var value = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = ${t};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = ${t};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          }
          ${Jn(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};function mce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dataFormat:u,dilations:p,dimRoundingMode:l}=n,m=C.convertConv2DDataFormat(u),c=p;c==null&&(c=[1,1]);let d=C.computeConv2DInfo(o.shape,s.shape,a,c,i,l,!0,m),f=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inHeight,d.inWidth]}],h=d.dataFormat==="channelsLast",g;return!h&&d.inHeight>16&&d.inWidth>16&&d.strideHeight===1&&d.strideWidth===1&&d.dilationWidth===1&&d.dilationHeight===1&&d.inChannels===d.outChannels?g=new VC(d.outShape,d.filterHeight,d.filterWidth):h&&d.inHeight>4&&d.inWidth>4&&d.strideWidth<=2&&d.inChannels===d.outChannels&&d.dilationHeight===1&&d.dilationWidth===1&&d.inChannels%4===0?g=new _f(d):(g=new $f(d),f.push({type:"int32",data:[d.filterHeight]},{type:"int32",data:[d.filterWidth]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]})),e.runWebGPUProgram(g,[o,s],o.dtype,f)}var TK={kernelName:To,backendName:"webgpu",kernelFunc:mce};var KD=yt({opType:0,cpuKernelImpl:AW,supportsComplex:!0}),xK={kernelName:_o,backendName:"webgpu",kernelFunc:KD};function vg(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;return wi(o,s,a,"sum",e)}var IK={kernelName:Xo,backendName:"webgpu",kernelFunc:vg};function cce(r){let{inputs:t,backend:e,attrs:n}=r,{equation:o}=n,s=t,{allDims:a,summedDims:i,idDims:u}=C.decodeEinsumEquation(o,s.length);C.checkEinsumDimSizes(a.length,u,s);let{path:p,steps:l}=C.getEinsumComputePath(i,u),m=l.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of l[h]){let{permutationIndices:b,expandDims:T}=C.getEinsumPermutation(d,u[g]),x;C.isIdentityPermutation(b)?x=s[g]:(x=kn({inputs:{x:s[g]},backend:e,attrs:{perm:b}}),f.push(x));let I=x.shape.slice();for(let k=0;k<T.length;++k)I.splice(T[k],0,1);y.arraysEqual(x.shape,I)||(x=we({inputs:{x},backend:e,attrs:{shape:I}}),f.push(x)),c===null?c=x:(c=KD({inputs:{a:x,b:c},backend:e}),f.push(c))}h<m-1&&(p[h]>=0&&(c=vg({inputs:{x:c},backend:e,attrs:{axis:p[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&e.disposeData(h.dataId);return c}var CK={kernelName:Ou,backendName:"webgpu",kernelFunc:cce};var dce=ot({opType:4}),kK={kernelName:Io,backendName:"webgpu",kernelFunc:dce};var fce=yt({opType:5,dtype:"bool",cpuKernelImpl:cW}),SK={kernelName:ma,backendName:"webgpu",kernelFunc:fce};var VD=ot({opType:5,cpuKernelImpl:dW,dtype:"float32"}),vK={kernelName:Co,backendName:"webgpu",kernelFunc:VD};function HC(r){let{inputs:t,attrs:e,backend:n}=r,{dim:o}=e,{input:s}=t,a=s.shape.length,i=s.shape.slice(),u=o;return o<0&&(y.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+o+1),i.splice(u,0,1),we({inputs:{x:s},backend:n,attrs:{shape:i}})}var AK={kernelName:ds,backendName:"webgpu",kernelFunc:HC};var hce=ot({opType:6,cpuKernelImpl:fW}),wK={kernelName:ca,backendName:"webgpu",kernelFunc:hce};var qC=class{constructor(t){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${be("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}};var NK={kernelName:da,backendName:"webgpu",kernelFunc:({inputs:r,backend:t})=>{let{image:e}=r,n=t,o=new qC(e.shape);return n.runWebGPUProgram(o,[e],e.dtype)}};var gce=ot({opType:7,cpuKernelImpl:hW}),DK={kernelName:ko,backendName:"webgpu",kernelFunc:gce};var bce=yt({opType:13,dtype:"int32"}),RK={kernelName:So,backendName:"webgpu",kernelFunc:bce};var jC=class{constructor(t,e,n=!1){this.isFromPixels=!0;this.outputShape=[0];this.variableNames=[];this.workGroupSize=[256,1,1];this.outputShape=t,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize,[e,1,1]),this.importVideo=n,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let t=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${be("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${t};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}};var FK={kernelName:Gp,backendName:"webgpu",kernelFunc:yce},Bf,HD=$().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU"),XC=new Map;function yce(r){let{inputs:t,backend:e,attrs:n}=r,{pixels:o}=t,{numChannels:s}=n;if(o==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let a=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,u=typeof HTMLCanvasElement<"u"&&o instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&o instanceof OffscreenCanvas,p=typeof ImageBitmap<"u"&&o instanceof ImageBitmap,[l,m]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],c=[m,l,s],d=!1,f=a||i;if(p||u||f){let T;if(d){let E=o;if(!XC.has(E)||XC.get(E).expired){let B={source:E};XC.set(E,e.device.importExternalTexture(B))}T={width:l,height:m,format:null,usage:null,texture:XC.get(E)}}else{if(f){let U=$().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Bf==null||U!==HD)&&(HD=U,Bf=document.createElement("canvas").getContext("2d",{willReadFrequently:HD})),Bf.canvas.width=l,Bf.canvas.height=m,Bf.drawImage(o,0,0,l,m),o=Bf.canvas}let E=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,B="rgba8unorm",G=e.textureManager.acquireTexture(c[1],c[0],B,E);e.queue.copyExternalImageToTexture({source:o},{texture:G},[c[1],c[0]]),T={width:l,height:m,format:B,usage:E,texture:G}}let x=y.sizeFromShape(c),I=y.computeStrides(c),k=new jC(c,s,d),w=[{type:"uint32",data:[x]},{type:"uint32",data:[s]},{type:"uint32",data:[...I]}],R=e.makeTensorInfo([m,l],"int32"),F=e.tensorMap.get(R.dataId);F.resourceInfo=T;let P=e.runWebGPUProgram(k,[R],"int32",w);return e.disposeData(R.dataId),P}let h=o.data,g=h;if(s!=null&&s!==4){g=new Uint8Array(o.width*o.height*s);let T=h.length,x=0;for(let I=0;I<T;I++)I%4<s&&(g[x++]=h[I])}let b=e.makeTensorInfo(c,"int32",new Int32Array(g));return e.uploadToGPU(b.dataId),b}var YC=class{constructor(t,e,n,o,s){this.uniforms="varianceEpsilon : f32,";this.workGroupSize=[128,1,1];this.size=!0;this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(t,e),C.assertAndGetBroadcastShape(t,n),this.outputShape=t,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),o!=null&&(C.assertAndGetBroadcastShape(t,o),this.variableNames.push("offset")),s!=null&&(C.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale")),this.offsetShape=o,this.scaleShape=s,this.shaderKey="batchNorm"}getUserCode(){let t="0.0";this.offsetShape!=null&&(t="getOffsetByOutputIndex(index)");let e="1.0";return this.scaleShape!=null&&(e="getScaleByOutputIndex(index)"),`
      ${be("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${t};
          let scaleValue = ${e};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}};var PK={kernelName:vo,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n,scale:o,offset:s,mean:a,variance:i}=r,{varianceEpsilon:u}=t,p=e,l=[n,a,i],m=null;s!=null&&(m=s.shape,l.push(s));let c=null;o!=null&&(c=o.shape,l.push(o));let d=new YC(n.shape,a.shape,i.shape,m,c),f=[{type:"float32",data:[u]}];return p.runWebGPUProgram(d,l,n.dtype,f)}};function Tce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:p,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=C.convertConv2DDataFormat(l),g=C.computeConv2DInfo(o.shape,s.shape,u,m,p,c,!1,h);return OC({x:o,filter:s,convInfo:g,backend:e,bias:a,preluActivationWeights:i,leakyreluAlpha:f,activation:d})}var MK={kernelName:ws,backendName:"webgpu",kernelFunc:Tce};function xce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:p,dilations:l,dimRoundingMode:m,activation:c,leakyreluAlpha:d}=n,f=l;f==null&&(f=[1,1]),y.assert(C.eitherStridesOrDilationsAreOne(u,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`);let h=C.computeConv2DInfo(o.shape,s.shape,u,f,p,m,!0),g=[o,s],b=a!=null,T=i!=null;b&&g.push(a),T&&g.push(i);let x=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inHeight,h.inWidth]}],I;return h.inHeight>4&&h.inWidth>4&&h.strideWidth<=2&&h.inChannels===h.outChannels&&h.dilationHeight===1&&h.dilationWidth===1&&h.inChannels%4===0?I=new _f(h,b,c,T):(I=new $f(h,b,c,T),x.push({type:"int32",data:[h.filterHeight]},{type:"int32",data:[h.filterWidth]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]})),c==="leakyrelu"&&(x.push({type:"float32",data:[d]}),I.uniforms+=" alpha : f32,"),e.runWebGPUProgram(I,g,"float32",x)}var EK={kernelName:Ns,backendName:"webgpu",kernelFunc:xce};var ZC=class{constructor(t,e){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${t}`,this.sliceDim=t,this.uniforms=`sliceDim : i32, strides : ${ir(t)},`}getUserCode(){let t;return this.sliceDim>1?t="uniforms.strides[j]":t="uniforms.strides",`
      ${be("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${t};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function Ice(r){let{inputs:t,backend:e}=r,{params:n,indices:o}=t,s=o.shape,a=s[s.length-1],i=y.sizeFromShape(n.shape),[u,p,l,m]=C.prepareAndValidate(n,o),c=we({inputs:{x:o},backend:e,attrs:{shape:[p,a]}}),d=we({inputs:{x:n},backend:e,attrs:{shape:[y.sizeFromShape(n.shape)/l,l]}});if(e.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let T=e.readSync(o.dataId),x=e.bufferSync(n),I=gW(T,x,n.dtype,p,a,l,m,n.shape,i);return e.makeTensorInfo(u,n.dtype,I.values)}let f=new ZC(a,[p,l]),h=[{type:"int32",data:[a]},{type:"int32",data:m}],g=e.runWebGPUProgram(f,[d,c],d.dtype,h),b=we({inputs:{x:g},backend:e,attrs:{shape:u}});return e.disposeData(c.dataId),e.disposeData(d.dataId),e.disposeData(g.dataId),b}var LK={kernelName:fa,backendName:"webgpu",kernelFunc:Ice};var QC=class{constructor(t,e){this.variableNames=["A","indices"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t.slice(),this.aShape=t,this.outputShape=e,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let t=Cce(this.aShape);return`
      ${be("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${t}));
        }
      }
    `}};function Cce(r){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],e=[];for(let n=0;n<r.length;n++)n===2?e.push("indexZ"):e.push(`${t[n]}`);return e.join()}function qD(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n,u=y.parseAxisParam(a,o.shape)[0],p=C.segment_util.collectGatherOpShapeInfo(o,s,u,i),l=y.sizeFromShape(s.shape),m=[],c=we({inputs:{x:o},backend:e,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),d=we({inputs:{x:s},backend:e,attrs:{shape:[p.batchSize,l/p.batchSize]}});m.push(c),m.push(d);let f=[p.batchSize,p.outerSize,l/p.batchSize,p.sliceSize];if(e.shouldExecuteOnCPU([o,s])){let x=e.tensorMap.get(d.dataId).values,I=Te(d.shape,d.dtype,x),w=e.tensorMap.get(c.dataId).values,R=Te(c.shape,c.dtype,w),F=bW(R,I,f);return m.forEach(P=>e.disposeData(P.dataId)),e.makeTensorInfo(p.outputShape,F.dtype,F.values)}let h=new QC(c.shape,f),g=e.runWebGPUProgram(h,[c,d],c.dtype);m.push(g);let b=we({inputs:{x:g},backend:e,attrs:{shape:p.outputShape}});return m.forEach(T=>e.disposeData(T.dataId)),b}var _K={kernelName:fs,backendName:"webgpu",kernelFunc:qD};var kce=yt({opType:6,cpuKernelImpl:TW,dtype:"bool"}),$K={kernelName:ha,backendName:"webgpu",kernelFunc:kce};var Sce=yt({opType:7,dtype:"bool",cpuKernelImpl:yW}),BK={kernelName:Ao,backendName:"webgpu",kernelFunc:Sce};var vce=ot({opType:8,dtype:"bool"}),OK={kernelName:ga,backendName:"webgpu",kernelFunc:vce};function Ace(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{alpha:s}=n,a=[{type:"float32",data:[s]}],i=new ta(o.shape,15);return i.uniforms="alpha : f32,",e.runWebGPUProgram(i,[o],"float32",a)}var zK={kernelName:wo,backendName:"webgpu",kernelFunc:Ace};var wce=yt({opType:8,dtype:"bool",cpuKernelImpl:IW}),GK={kernelName:ba,backendName:"webgpu",kernelFunc:wce};var Nce=yt({opType:9,dtype:"bool",cpuKernelImpl:xW}),UK={kernelName:ya,backendName:"webgpu",kernelFunc:Nce};var Dce=ot({opType:10,cpuKernelImpl:CW}),WK={kernelName:No,backendName:"webgpu",kernelFunc:Dce};var Rce=yt({opType:10,dtype:"bool"}),KK={kernelName:Ta,backendName:"webgpu",kernelFunc:Rce};var Fce=ot({opType:11}),VK={kernelName:xa,backendName:"webgpu",kernelFunc:Fce};var Pce=yt({opType:16,cpuKernelImpl:SW}),HK={kernelName:Ro,backendName:"webgpu",kernelFunc:Pce};function Mce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:u}=n,p=1,l=C.computePool2DInfo(o.shape,s,a,p,i,u);return PC(o,l,"max",e)}var qK={kernelName:Fo,backendName:"webgpu",kernelFunc:Mce};function Ece(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;return wi(o,s,a,"min",e)}var jK={kernelName:Mo,backendName:"webgpu",kernelFunc:Ece};var Lce=yt({opType:17,cpuKernelImpl:vW}),XK={kernelName:Eo,backendName:"webgpu",kernelFunc:Lce};var JC=class{constructor(t,e,n){this.uniforms="";this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e.map((o,s)=>o[0]+t[s]+o[1]),this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=t,e.map((o,s)=>{this.uniforms+=` pad${s} : vec2<i32>,`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let t=this.xShape.length,e=this.xShape.map((p,l)=>`uniforms.pad${l}[0]`).join(","),n=this.xShape.map((p,l)=>`uniforms.pad${l}[0] + uniforms.xShape${t>1?`[${l}]`:""}`).join(","),o=t===1?"start":"start[i]",s=t===1?"end":"end[i]",a=t===1?"outC":"outC[i]",i=ir(t),u=t>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,t):"coords";return`
      ${be("index")} {
        if (index < uniforms.size) {
          let start = ${i}(${e});
          let end = ${i}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${t}; i = i + 1) {
            if (${a} < ${o}) {
              ${a} = ${o} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${s}) {
              ${a} = (${s} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${u}));
        }
      }
    `}};var YK={kernelName:Lo,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{paddings:o,mode:s}=t,a=e,i=o.map(l=>({type:"int32",data:[l[0],l[1]]})),u=new JC(n.shape,o,s);return a.runWebGPUProgram(u,[n],n.dtype,i)}};function _ce(r){let{inputs:t,backend:e}=r,{x:n}=t;if(e.shouldExecuteOnCPU([n])){let s=e.tensorMap.get(n.dataId),[a,i]=wW(s.values,n.shape,n.dtype);return e.makeTensorInfo(i,n.dtype,a)}let o=new ta(n.shape,12);return e.runWebGPUProgram(o,[n],n.dtype)}var ZK={kernelName:hs,backendName:"webgpu",kernelFunc:_ce};function $ce(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=n,p=e.readSync(o.dataId),l=e.readSync(s.dataId),{selectedIndices:m}=yr.nonMaxSuppressionV3Impl(p,l,a,i,u);return e.makeTensorInfo([m.length],"int32",new Int32Array(m))}var QK={kernelName:Ca,backendName:"webgpu",kernelFunc:$ce};function Bce(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:p}=n,l=e.readSync(o.dataId),m=e.readSync(s.dataId),c=a,d=i,f=u,h=p,{selectedIndices:g,selectedScores:b}=yr.nonMaxSuppressionV5Impl(l,m,c,d,f,h);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var JK={kernelName:ka,backendName:"webgpu",kernelFunc:Bce};function Ag(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="complex64"){let o=Du({inputs:{input:n},backend:e}),s=Ag({inputs:{x:o},backend:e}),a=tm({inputs:{input:n},backend:e}),i=Ag({inputs:{x:a},backend:e}),u=ti({inputs:{real:s,imag:i},backend:e});return e.disposeData(o.dataId),e.disposeData(s.dataId),e.disposeData(a.dataId),e.disposeData(i.dataId),u}else return us({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:e})}var eV={kernelName:Ss,backendName:"webgpu",kernelFunc:Ag};function tV(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=Du({inputs:{input:n},backend:e}),s=tV({inputs:{x:o},backend:e}),a=tm({inputs:{input:n},backend:e}),i=Ag({inputs:{x:a},backend:e}),u=ti({inputs:{real:s,imag:i},backend:e});return e.disposeData(o.dataId),e.disposeData(s.dataId),e.disposeData(a.dataId),e.disposeData(i.dataId),u}else return us({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:e})}var rV={kernelName:gs,backendName:"webgpu",kernelFunc:tV};function Oce(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n;if(t.length===1)return HC({inputs:{input:t[0]},backend:e,attrs:{dim:o}});let s=t[0].shape,a=t[0].dtype;t.forEach(l=>{y.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=t.map(l=>{let m=HC({inputs:{input:l},backend:e,attrs:{dim:o}});return i.push(m),m}),p=WD({inputs:u,backend:e,attrs:{axis:o}});return i.forEach(l=>e.disposeData(l.dataId)),p}var nV={kernelName:bs,backendName:"webgpu",kernelFunc:Oce};var ek=class{constructor(t,e){this.variableNames=["x"];this.uniforms="constantValue : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e.map((n,o)=>n[0]+t[o]+n[1]),this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),e.map((n,o)=>{this.uniforms+=` pad${o} : vec2<i32>,`}),this.xShape=t,this.shaderKey="pad"}getUserCode(){let t=this.xShape.length,e=ir(t),n=this.xShape.map((m,c)=>`uniforms.pad${c}[0]`).join(","),o=this.xShape.map((m,c)=>`uniforms.pad${c}[0] + uniforms.xShape${t>1?`[${c}]`:""}`).join(","),s=t>1?`${e}(${n})`:`${n}`,a=t>1?`${e}(${o})`:`${o}`,i=t>1?"any(outC < start)":"outC < start",u=t>1?"any(outC >= end)":"outC >= end",p=t>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,t):"coords";return`
      ${be("index")} {
        if (index < uniforms.size) {
          let start = ${s};
          let end = ${a};
          let outC = getCoordsFromIndex(index);

          if (${i} || ${u}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${p}));
          }
        }
      }
    `}};var jD=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,constantValue:a}=n;if(s.every(p=>y.arraysEqual(p,[0,0])))return cr({inputs:{x:o},backend:e});if(y.sizeFromShape(o.shape)===0){let p=s.map((l,m)=>l[0]+o.shape[m]+l[1]);return us({backend:e,attrs:{shape:p,value:a,dtype:o.dtype}})}let i=[{type:"float32",data:[a]}];s.map(p=>i.push({type:"int32",data:[p[0],p[1]]}));let u=new ek(o.shape,s);return e.runWebGPUProgram(u,[o],o.dtype,i)},oV={kernelName:$o,backendName:"webgpu",kernelFunc:jD};var zce=yt({opType:14}),sV={kernelName:Bo,backendName:"webgpu",kernelFunc:zce};function Gce(r){let{inputs:t,backend:e}=r,{x:n,alpha:o}=t,s=new em(15,n.shape,o.shape);return e.runWebGPUProgram(s,[n,o],"float32")}var aV={kernelName:Oo,backendName:"webgpu",kernelFunc:Gce};function Uce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;return wi(o,s,a,"prod",e)}var iV={kernelName:zo,backendName:"webgpu",kernelFunc:Uce};var Wce=r=>{let{backend:t,attrs:e}=r,{start:n,stop:o,step:s,dtype:a}=e,i=RW(n,o,s,a);return t.makeTensorInfo([i.length],a,i)},uV={kernelName:ui,backendName:"webgpu",kernelFunc:Wce};var XD=yt({opType:4}),pV={kernelName:xo,backendName:"webgpu",kernelFunc:XD};var Kce=ot({opType:16}),lV={kernelName:va,backendName:"webgpu",kernelFunc:Kce};var Vce=ot({opType:13}),mV={kernelName:Go,backendName:"webgpu",kernelFunc:Vce};var Hce=ot({opType:14}),cV={kernelName:Ko,backendName:"webgpu",kernelFunc:Hce};var tk=class{constructor(t,e,n){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=[t[0],e,n,t[3]],this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${be("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function qce(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,size:a,halfPixelCenters:i}=n,[u,p]=a,l=s&&u>1?1:0,m=s&&p>1?1:0,d=[{type:"float32",data:[l,m]},{type:"float32",data:[i?.5:0]}],f=new tk(o.shape,u,p);return e.runWebGPUProgram(f,[o],"float32",d)}var dV={kernelName:Wo,backendName:"webgpu",kernelFunc:qce};var rk=class{constructor(t,e,n,o){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=[t[0],e,n,t[3]],this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=o,this.shaderKey=`resizeNearest_${o}`}getUserCode(){let t;return this.halfPixelCenters?t="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":t="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${be("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${t};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function jce(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,p]=i,l=s&&u>1?1:0,m=s&&p>1?1:0,d=[{type:"float32",data:[l,m]},{type:"float32",data:[s?.5:0]}],f=new rk(o.shape,u,p,a);return e.runWebGPUProgram(f,[o],o.dtype,d)}var fV={kernelName:Uo,backendName:"webgpu",kernelFunc:jce};var nk=class{constructor(t,e){this.outputShape=[];this.variableNames=["x"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=t,typeof e=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${be("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}};var hV={kernelName:Ea,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=t,i=e,u=new nk(n.shape,s),[p,l]=C.getImageCenter(a,n.shape[1],n.shape[2]),m=[{type:"float32",data:[p]},{type:"float32",data:[l]},{type:"float32",data:[Math.sin(o)]},{type:"float32",data:[Math.cos(o)]}];return typeof s=="number"?m.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):m.push({type:"float32",data:s}),i.runWebGPUProgram(u,[n],n.dtype,m)}};var Xce=ot({opType:17,cpuKernelImpl:FW}),gV={kernelName:Vo,backendName:"webgpu",kernelFunc:Xce};var Lp=class{constructor(t,e,n,o,s,a,i,u=!0){this.variableNames=["updates","indices"];this.workGroupSize=[64,1,1];this.atomic=!0;this.outputShape=a,this.type=i,this.sumDupeIndices=u,this.dispatchLayout=Ce(t),this.dispatch=ge(this.dispatchLayout,t,this.workGroupSize),this.sliceDimGreaterThanOne=e>1,this.shaderKey=`scatter_${n}_${o}_${this.sliceDimGreaterThanOne}_${i}_${u}`;let p=ir(s.length);this.uniforms=`sliceDim : i32, strides: ${p}, size: i32,`,this.updatesRank=o,this.indicesRank=n}getUserCode(){let t="";this.indicesRank===1?t="coords[0]":this.indicesRank===2&&(t="coords[0], j");let e=`getIndices(${t})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",o="",s="";this.dispatchLayout.x.length===1?(o="flattenedIndex",s=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(o="vec2<i32>(flattenedIndex, coords[1])",s=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);let i=`getUpdates(${Array.from({length:this.updatesRank},(l,m)=>`coords[${m}]`).join(", ")})`,u=(l,m)=>{let c=`atomicAdd(${l}, bitcast<i32>(${m}))`;this.type==="float32"&&(c=`
          {
            var oldBits = 0;
            var newBits = bitcast<i32>(${m});
            loop {
              let info = atomicCompareExchangeWeak(${l}, oldBits, newBits);
              if (info.exchanged) {
                break;
              }
              oldBits = info.old_value;
              let oldValue = bitcast<f32>(oldBits);
              let newValue = oldValue + (${m});
              newBits = bitcast<i32>(newValue);
            }
          }
        `);let d=`atomicStore(${l}, bitcast<i32>(${m}));`;return this.sumDupeIndices?c:d};return`
    ${s}

      ${be("index")} {
        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${e}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue =
              ${Rf(this.type,!1)}(${i});
          let flatIndex = getOutputIndexFromCoords(${o});

          ${u("&result[flatIndex]","updateValue")};
        }
      }`}};function Yce(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,{sliceRank:i,numUpdates:u,sliceSize:p,strides:l,outputSize:m}=C.calculateShapes(s,o,a),c=[m/p,p];if(m===0)return e.makeTensorInfo(a,o.dtype);let d=we({inputs:{x:o},backend:e,attrs:{shape:[u,i]}}),f=we({inputs:{x:s},backend:e,attrs:{shape:[u,p]}}),h=f.dtype,g=us({backend:e,attrs:{shape:c,value:0,dtype:h}}),b=y.sizeFromShape(f.shape),T=[{type:"int32",data:[i]},{type:"int32",data:l},{type:"int32",data:[b]}],x=new Lp(f.shape,i,d.shape.length,f.shape.length,l,c,h),I=e.runWebGPUProgram(x,[f,d],h,T,g),k=we({inputs:{x:I},backend:e,attrs:{shape:a}});return e.disposeData(d.dataId),e.disposeData(f.dataId),e.disposeData(I.dataId),k}var bV={kernelName:Na,backendName:"webgpu",kernelFunc:Yce};var ok=class{constructor(t,e,n){this.variableNames=["c","a","b"];this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=t,this.rank=n,this.shaderKey="select"}getUserCode(){let t,e;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)e="resRC",t="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],a=[];for(let i=0;i<this.outputShape.length;i++)a.push(`${o[i]}`),i<this.cRank&&s.push(`${o[i]}`);t=s.join(),e=a.join()}return`
      ${be("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${t});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${e}));
          } else {
            setOutputAtIndex(index, getB(${e}));
          }
        }
      }
    `}};function Zce(r){let{inputs:t,backend:e}=r,{condition:n,t:o,e:s}=t,a=new ok(n.shape.length,o.shape,o.shape.length);return e.runWebGPUProgram(a,[n,o,s],Mt(o.dtype,s.dtype))}var yV={kernelName:Ts,backendName:"webgpu",kernelFunc:Zce};var Qce=ot({opType:20}),TV={kernelName:qo,backendName:"webgpu",kernelFunc:Qce};var Jce=ot({opType:18}),xV={kernelName:Ho,backendName:"webgpu",kernelFunc:Jce};var ede=ot({opType:19}),IV={kernelName:Da,backendName:"webgpu",kernelFunc:ede};var YD=yt({opType:3,cpuKernelImpl:$W,supportsComplex:!0}),CV={kernelName:Qo,backendName:"webgpu",kernelFunc:YD};function tde(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{dim:s}=n,a=y.parseAxisParam([s],o.shape),i=kg({inputs:{x:o},backend:e,attrs:{reductionIndices:a,keepDims:!1}}),u=C.expandShapeToKeepDim(i.shape,a),p=we({inputs:{x:i},backend:e,attrs:{shape:u}}),l=YD({inputs:{a:o,b:p},backend:e}),m=VD({inputs:{x:l},backend:e}),c=vg({inputs:{x:m},backend:e,attrs:{axis:a,keepDims:!1}}),d=we({inputs:{x:c},backend:e,attrs:{shape:u}}),f=XD({inputs:{a:m,b:d},backend:e});return e.disposeData(i.dataId),e.disposeData(p.dataId),e.disposeData(l.dataId),e.disposeData(m.dataId),e.disposeData(c.dataId),e.disposeData(d.dataId),f}var kV={kernelName:Yo,backendName:"webgpu",kernelFunc:tde};var rde=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,paddings:a}=n;y.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((b,T)=>b*T),u=[[0,0]];u.push(...a);for(let b=1+s.length;b<o.shape.length;++b)u.push([0,0]);let p=[],l=jD({inputs:{x:o},backend:e,attrs:{paddings:u,constantValue:0}}),m=C.getReshaped(l.shape,s,i,!1),c=C.getPermuted(m.length,s.length,!1),d=C.getReshapedPermuted(l.shape,s,i,!1),f=we({inputs:{x:l},backend:e,attrs:{shape:m}}),h=kn({inputs:{x:f},backend:e,attrs:{perm:c}}),g=we({inputs:{x:h},backend:e,attrs:{shape:d}});return p.push(l),p.push(f),p.push(h),p.forEach(b=>e.disposeData(b.dataId)),g},SV={kernelName:Is,backendName:"webgpu",kernelFunc:rde};var sk=class{constructor(t,e){this.variableNames=["A"];this.workGroupSize=[64,1,1];this.size=!0;let n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[o]*e[o];this.outputShape=n,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let t=nde(this.rank,"uniforms.");return`
      ${be("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${t}));
        }
      }
    `}};function nde(r,t=""){if(r>=5)throw Error(`Tile for rank ${r} is not yet supported`);if(r===1)return`(resRC % ${t}aShape)`;let e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r;o++)n.push(`(${e[o]} % ${t}aShape[${o}])`);return n.join()}function ZD(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reps:s}=n;if(e.shouldExecuteOnCPU([o])||o.dtype==="string"||o.shape.length>=5){let u=e.readSync(o.dataId),p=o.dtype==="string"?u.map(c=>y.decodeString(c)):u,l=Te(o.shape,o.dtype,p),m=BW(l,s);return e.makeTensorInfo(m.shape,m.dtype,m.values)}let a=new sk(o.shape,s);return e.runWebGPUProgram(a,[o],o.dtype)}var vV={kernelName:An,backendName:"webgpu",kernelFunc:ZD};function ode(r){let{inputs:t,backend:e,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=t,{outputShape:i}=n,{sliceRank:u,numUpdates:p,sliceSize:l,strides:m,outputSize:c}=C.calculateShapes(s,o,i),d=!1;if(s.dtype==="string"){let F=e.bufferSync(o),P=e.bufferSync(s),E=y.decodeString(e.readSync(a.dataId)[0]),B=PW(F,P,i,c,l,p,u,m,E,d);return e.makeTensorInfo(i,B.dtype,B.values)}let f=[c/l,l],h=we({inputs:{x:o},backend:e,attrs:{shape:[p,u]}}),g=s.shape.length?we({inputs:{x:s},backend:e,attrs:{shape:[p,l]}}):cr({inputs:{x:s},backend:e}),b=g.dtype,T=e.makeTensorInfo([],b,y.makeZerosTypedArray(1,b)),x=we({inputs:{x:a},backend:e,attrs:{shape:Array(f.length).fill(1)}}),I=ZD({inputs:{x},backend:e,attrs:{reps:f}}),k=y.sizeFromShape([p,l]),w=[{type:"int32",data:[u]},{type:"int32",data:m},{type:"int32",data:[k]}];switch(p){case 0:break;case 1:{let F=new Lp([p,l],u,h.shape.length,g.shape.length,m,f,b,d);e.runWebGPUProgram(F,[g,h],b,w,I)}break;default:{let F=new Lp([p,l],u,h.shape.length,T.shape.length,m,f,b,d);e.runWebGPUProgram(F,[T,h],b,w,I)}{let F=new Lp([p,l],u,h.shape.length,g.shape.length,m,f,b);e.runWebGPUProgram(F,[g,h],b,w,I)}}let R=we({inputs:{x:I},backend:e,attrs:{shape:i}});return e.disposeData(h.dataId),e.disposeData(g.dataId),e.disposeData(x.dataId),e.disposeData(T.dataId),e.disposeData(I.dataId),R}var AV={kernelName:qu,backendName:"webgpu",kernelFunc:ode};function sde(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],u=C.prepareSplitSize(o,s,i),p=o.shape.length,l=new Array(p).fill(0),m=o.shape.slice();return u.map(c=>{let d=[...m];d[i]=c;let f=ri({inputs:{x:o},backend:e,attrs:{begin:l,size:d}});return l[i]+=c,f})}var wV={kernelName:Cs,backendName:"webgpu",kernelFunc:sde};var ade=ot({opType:21}),NV={kernelName:jo,backendName:"webgpu",kernelFunc:ade};var DV={kernelName:pi,backendName:"webgpu",kernelFunc:({inputs:r,backend:t})=>{let{x:e}=r,n=t,o=new ta(e.shape,22);return n.runWebGPUProgram(o,[e],e.dtype)}};var ide=yt({opType:12}),RV={kernelName:Zo,backendName:"webgpu",kernelFunc:ide};var ak=class{constructor(t){this.variableNames=["x"];this.workPerThread=1;this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let e=ir(this.outputShape.length);this.uniforms=`begin : ${e},  strides : ${e}, `,this.shaderKey="stridedSlice"}getUserCode(){let t=this.outputShape.length,e="";if(t===1)e="coords * uniforms.strides + uniforms.begin";else{let o=0;e=this.outputShape.map((s,a)=>(o++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${o-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${be("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${e}));
         }
       }
     `}};function ude(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i,beginMask:u,endMask:p,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:T,end:x,strides:I}=Tt.sliceInfo(o.shape,s,a,i,u,p,l,m,c),k;if(h)k=we({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let w=Tt.computeOutShape(T,x,I),R=ri({inputs:{x:o},backend:e,attrs:{begin:T,size:w}});k=we({inputs:{x:R},backend:e,attrs:{shape:f}}),e.disposeData(R.dataId)}else if(e.shouldExecuteOnCPU([o])){let R=e.readSync(o.dataId),F=Te(o.shape,o.dtype,R),P=LW(d,F,I,T);k=e.makeTensorInfo(f,o.dtype,P.values)}else{let R=new ak(d),F=[{type:"int32",data:T},{type:"int32",data:I}],P=e.runWebGPUProgram(R,[o],o.dtype,F);k=we({inputs:{x:P},backend:e,attrs:{shape:f}}),e.disposeData(P.dataId)}return k}var FV={kernelName:Ra,backendName:"webgpu",kernelFunc:ude};function pde(r){let{inputs:t,backend:e,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:p}=n,{data:l,dataSplits:m}=t,c=e.readSync(l.dataId),d=e.readSync(m.dataId),[f,h]=_W(c,d,o,s,a,i,u,p);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(m.shape,"int32",h)]}var PV={kernelName:li,backendName:"webgpu",kernelFunc:pde};var lde=ot({opType:23}),MV={kernelName:Jo,backendName:"webgpu",kernelFunc:lde};var ik=class{constructor(t){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${be("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},uk=class{constructor(t){this.variableNames=["x","indices"];this.workGroupSize=[256,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${be("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function Of(r,t){t!==null&&r.disposeData(t.dataId)}function EV(r){let t=1;for(;t<r;)t*=2;return t}function mde(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{k:s,sorted:a}=n,i=o.shape,u=i[i.length-1];if(e.shouldExecuteOnCPU([o])){let k=e.readSync(o.dataId),[w,R]=OW(k,i,o.dtype,s,a);return[e.makeTensorInfo(w.shape,w.dtype,w.values),e.makeTensorInfo(R.shape,R.dtype,R.values)]}if(s===0)return i[i.length-1]=0,[e.makeTensorInfo(i,o.dtype,[]),e.makeTensorInfo(i,"int32",[])];if(u===1)return[o,us({attrs:{shape:i,dtype:"int32",value:0},backend:e})];let l=y.sizeFromShape(i)/u,m=we({inputs:{x:o},attrs:{shape:[l,u]},backend:e}),c=EV(s),d=EV(u),f=null,h=()=>f===null?[m,m]:[m,f],g=(k,w,R)=>{let F=h(),P=new ik(R),B=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[k]},{type:"int32",data:[w]}],G=f;f=e.runWebGPUProgram(P,F,"int32",B),Of(e,G)};for(let k=1;k<c;k*=2){let w=k*2;for(let R=k;R>=1;R/=2)g(w,R,[l,d])}for(let k=d;k>c;k/=2){let w=h(),R=new uk([l,k/2]),P=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[c]}],E=f;f=e.runWebGPUProgram(R,w,"int32",P),Of(e,E);let B=c/2,G=B*2;for(let U=B;U>=1;U/=2)g(G,U,f.shape)}let b=f;f=ri({inputs:{x:f},backend:e,attrs:{begin:0,size:[l,s]}}),Of(e,b);let T=qD({inputs:{x:m,indices:f},backend:e,attrs:{axis:1,batchDims:1}});Of(e,m);let x=i.slice(0,-1);x.push(s),b=f,f=we({inputs:{x:f},attrs:{shape:x},backend:e}),Of(e,b);let I=T;return T=we({inputs:{x:T},attrs:{shape:x},backend:e}),Of(e,I),[T,f]}var LV={kernelName:Pa,backendName:"webgpu",kernelFunc:mde};var pk=class{constructor(t){this.variableNames=["Image","Transforms"];this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,";this.workGroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=Ce(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${be("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function cde(r){let{inputs:t,backend:e,attrs:n}=r,{image:o,transforms:s}=t,{interpolation:a,fillMode:i,fillValue:u,outputShape:p}=n,[l,m,c,d]=o.shape,[f,h]=p??[m,c],g=[l,f,h,d],b=new pk(g),T=a==="nearest"?1:2,x;switch(i){case"constant":x=1;break;case"reflect":x=2;break;case"wrap":x=3;break;case"nearest":x=4;break;default:x=1;break}let I=[{type:"int32",data:[T]},{type:"int32",data:[x]},{type:"float32",data:[u]}];return e.runWebGPUProgram(b,[o,s],"float32",I)}var _V={kernelName:Ma,backendName:"webgpu",kernelFunc:cde};function dde(r){let{inputs:t,backend:e,attrs:n}=r,{value:o}=t,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,u=o.shape[s],p=new Array(i-1),l=0;for(let h=0;h<i;h++)h!==s&&(p[l++]=a.shape[h]);let m=[],c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let f=new Array(u);for(let h=0;h<f.length;h++){c[s]=h;let g=ri({inputs:{x:a},backend:e,attrs:{begin:c,size:d}}),b=we({inputs:{x:g},backend:e,attrs:{shape:p}});f[h]=b,m.push(g)}return m.forEach(h=>e.disposeData(h.dataId)),f}var $V={kernelName:ks,backendName:"webgpu",kernelFunc:dde};var fde=[sW,GW,UW,WW,VW,HW,qW,YW,ZW,JW,nK,oK,sK,iW,iK,pK,lK,mK,cK,dK,gK,bK,yK,TK,CK,kK,SK,vK,AK,wK,nW,NK,FK,DK,RK,PK,MK,EK,LK,_K,$K,BK,aW,aK,OK,zK,GK,UK,WK,KK,VK,jW,HK,qK,XW,jK,XK,YK,xK,ZK,QK,JK,eK,rV,nV,oV,sV,aV,iV,uV,tK,pV,lV,mV,cV,oW,dV,fV,hV,gV,bV,yV,TV,xV,IV,QW,FV,PV,kV,SV,AV,wV,NV,DV,RV,CV,IK,MV,vV,LV,_V,KW,$V,eV];for(let r of fde)Ji(r);var Xe=(s=>(s[s.float32=0]="float32",s[s.int32=1]="int32",s[s.bool=2]="bool",s[s.string=3]="string",s[s.complex64=4]="complex64",s))(Xe||{}),rm=(i=>(i[i.linear=0]="linear",i[i.relu=1]="relu",i[i.relu6=2]="relu6",i[i.prelu=3]="prelu",i[i.leakyrelu=4]="leakyrelu",i[i.sigmoid=5]="sigmoid",i[i.elu=6]="elu",i))(rm||{});var BV;function hde(r){BV=r.wasm.cwrap(As,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function gde(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=t;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:u,transposeB:p,activation:l,leakyreluAlpha:m}=n,c=e.dataIdMap.get(o.dataId).id,d=e.dataIdMap.get(s.dataId).id,f=0;if(a!=null){let F=e.dataIdMap.get(a.dataId);if(F.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${F.shape.length}.`);f=F.id}let h=i==null?0:e.dataIdMap.get(i.dataId).id,g=rm[l];if(g==null)throw new Error(`${l} activation not yet supported for FusedConv2D in the wasm backend.`);let b=u?o.shape[2]:o.shape[1],T=p?s.shape[1]:s.shape[2],x=Ar.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)),I=e.makeOutput([...x,b,T],o.dtype),k=e.dataIdMap.get(I.dataId).id,w=new Uint8Array(new Int32Array(o.shape).buffer),R=new Uint8Array(new Int32Array(s.shape).buffer);return BV(c,w,o.shape.length,d,R,s.shape.length,u,p,g,f,h,m||0,k),I}var OV={kernelName:As,backendName:"wasm",setupFunc:hde,kernelFunc:gde};function ut(r,t){let e;function n(s){e=s.wasm.cwrap(r,null,["number","number","number"])}function o(s){let{backend:a,inputs:{x:i}}=s,u=a.dataIdMap.get(i.dataId).id,p=a.makeOutput(i.shape,t||i.dtype),l=a.dataIdMap.get(p.dataId).id;return y.sizeFromShape(p.shape)===0||e(u,Xe[i.dtype],l),p}return{kernelName:r,backendName:"wasm",setupFunc:n,kernelFunc:o}}var zV=ut(ls);function dt(r,t,e){let n;function o(a){n=a.wasm.cwrap(r,null,["number","array","number","number","array","number","number","number"])}function s(a){let{backend:i,inputs:u}=a,{a:p,b:l}=u,m=i.dataIdMap.get(p.dataId).id,c=i.dataIdMap.get(l.dataId).id,d=e??p.dtype,f=C.assertAndGetBroadcastShape(p.shape,l.shape),h=i.makeOutput(f,d);if(y.sizeFromShape(f)===0)return h;let g=new Uint8Array(new Int32Array(p.shape).buffer),b=new Uint8Array(new Int32Array(l.shape).buffer),T=i.dataIdMap.get(h.dataId).id;return(()=>n(m,g,p.shape.length,c,b,l.shape.length,Xe[p.dtype],T))(),h}return{kernelName:r,backendName:"wasm",setupFunc:o,kernelFunc:s}}var bde=!0,GV=dt(vn,bde);var UV;function yde(r){UV=r.wasm.cwrap(uo,null,["array","number","number","number"])}function Tde(r){let{inputs:t,backend:e}=r,n=e.makeOutput(t[0].shape,t[0].dtype);if(y.sizeFromShape(n.shape)===0)return n;let o=t.map(i=>e.dataIdMap.get(i.dataId).id),s=new Uint8Array(new Int32Array(o).buffer),a=e.dataIdMap.get(n.dataId).id;return UV(s,o.length,Xe[n.dtype],a),n}var WV={kernelName:uo,backendName:"wasm",setupFunc:yde,kernelFunc:Tde};function nm(r){let{inputs:{x:t},backend:e}=r,n=e.makeOutput(t.shape,t.dtype),o=e.typedArrayFromHeap(t);return e.typedArrayFromHeap(n).set(o),n}var KV={kernelName:Un,backendName:"wasm",kernelFunc:nm};var VV;function xde(r){VV=r.wasm.cwrap(wn,null,["number","array","number","number","number","array","number"])}function ps(r){let{inputs:t,backend:e,attrs:n}=r,[o,s]=Cde(t.x.shape,n.perm),a=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(a=!1);let i=Ide(t.x.shape,n.perm),u={dataId:t.x.dataId,shape:o,dtype:t.x.dtype};if(a){let f=nm({inputs:t,backend:e});return f.shape=i,f}let p=e.makeOutput(i,u.dtype),l=e.dataIdMap.get(u.dataId).id,m=e.dataIdMap.get(p.dataId).id,c=new Uint8Array(new Int32Array(s).buffer),d=new Uint8Array(new Int32Array(u.shape).buffer);return VV(l,d,u.shape.length,Xe[u.dtype],m,c,s.length),p}function Ide(r,t){let e=new Array(r.length);for(let n=0;n<e.length;n++)e[n]=r[t[n]];return e}function Cde(r,t){let e=[],n=[];for(let o=0;o<r.length;++o)r[o]!==1&&e.push(r[o]),r[t[o]]!==1&&n.push(t[o]);for(let o=0;o<n.length;++o){let s=-1;for(let a=0;a<n.length;++a)n[a]>=o&&(s===-1||n[s]>n[a])&&(s=a);n[s]=o}return[e,n]}var HV={kernelName:wn,backendName:"wasm",kernelFunc:ps,setupFunc:xde};function Sn(r,t,e){let n=r.shape,o=r.shape.length,s=y.parseAxisParam(t,n),a=s,i=C.getAxesPermutation(a,o),u=null,p=!1;if(i!=null){let l=new Array(o);for(let d=0;d<l.length;d++)l[d]=n[i[d]];a=C.getInnerMostAxes(a.length,o),u=ps({inputs:{x:r},attrs:{perm:i},backend:e});let m=e.dataIdMap.get(r.dataId).id;e.dataIdMap.get(u.dataId).id!==m&&(p=!0)}return{transposed:u,originalAxes:s,axes:a,inputWasTransposed:p}}var qV;function kde(r){qV=r.wasm.cwrap(_i,null,["number, number, number"])}function Sde(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,u=t.dataIdMap.get(a.dataId).id,p=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=Sn(a,o,t);if(d){let x=t.dataIdMap.get(l.dataId).id;p=l,u=x}let f=p.shape.length;C.assertAxesAreInnerMostDims("all",m,f);let[h,g]=C.computeOutAndReduceShapes(p.shape,m),b=y.sizeFromShape(g),T=t.makeOutput(h,a.dtype);if(y.sizeFromShape(p.shape)!==0){let x=t.dataIdMap.get(T.dataId).id;qV(u,b,x)}if(d&&t.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var jV={kernelName:_i,backendName:"wasm",setupFunc:kde,kernelFunc:Sde};var XV;function vde(r){XV=r.wasm.cwrap($i,null,["number, number, number"])}function Ade(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,u=t.dataIdMap.get(a.dataId).id,p=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=Sn(a,o,t);if(d){let x=t.dataIdMap.get(l.dataId).id;p=l,u=x}let f=p.shape.length;C.assertAxesAreInnerMostDims("any",m,f);let[h,g]=C.computeOutAndReduceShapes(p.shape,m),b=y.sizeFromShape(g),T=t.makeOutput(h,a.dtype);if(y.sizeFromShape(p.shape)!==0){let x=t.dataIdMap.get(T.dataId).id;XV(u,b,x)}if(d&&t.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var YV={kernelName:$i,backendName:"wasm",setupFunc:vde,kernelFunc:Ade};var ZV;function wde(r){ZV=r.wasm.cwrap(po,null,["number","number","number","number","number"])}function Nde(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o}=n,{x:s}=e,a=t.dataIdMap.get(s.dataId).id,i=a,u=s,{transposed:p,axes:l,inputWasTransposed:m}=Sn(s,o,t);if(m){let b=t.dataIdMap.get(p.dataId).id;b!==a&&(u=p,i=b)}let c=u.shape.slice(0,-1),d=t.makeOutput(c,"int32"),f=t.dataIdMap.get(d.dataId).id,h=y.sizeFromShape(d.shape),g=u.shape[l[0]];return ZV(i,Xe[u.dtype],h,g,f),m&&t.disposeData(p.dataId),d}var QV={kernelName:po,backendName:"wasm",kernelFunc:Nde,setupFunc:wde};var JV;function Dde(r){JV=r.wasm.cwrap(lo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Rde(r){let{inputs:t,attrs:e,backend:n}=r,o=t.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:a,strides:i,pad:u,dimRoundingMode:p}=e,l=C.computePool2DInfo(o.shape,a,i,1,u,p),m=l.filterHeight,c=l.filterWidth,d=l.padInfo.top,f=l.padInfo.right,h=l.padInfo.bottom,g=l.padInfo.left,b=l.strideHeight,T=l.strideWidth,x=l.inChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);if(l.dilationWidth!==1||l.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${l.dilationHeight}, ${l.dilationWidth}].`);let I=n.makeOutput(l.outShape,"float32"),k=n.dataIdMap.get(I.dataId).id;return JV(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,b,T,x,k),I}var e4={kernelName:lo,backendName:"wasm",setupFunc:Dde,kernelFunc:Rde};function dr(r){let{inputs:t,attrs:e}=r,{x:n}=t,{shape:o}=e,s=y.sizeFromShape(n.shape),a=y.inferFromImplicitShape(o,s);return y.assert(s===y.sizeFromShape(a),()=>`new shape: ${a}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var t4={kernelName:ys,backendName:"wasm",kernelFunc:dr};var r4;function Fde(r){r4=r.wasm.cwrap(mo,null,["number","array","number","number","array","number","number","number","number"])}function Pde(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s}=t,{transposeA:a,transposeB:i}=n;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let u=o.shape.length,p=s.shape.length,l=a?o.shape[u-2]:o.shape[u-1],m=i?s.shape[p-1]:s.shape[p-2],c=a?o.shape[u-1]:o.shape[u-2],d=i?s.shape[p-2]:s.shape[p-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=y.sizeFromShape(f),b=y.sizeFromShape(h),x=Ar.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);y.assert(l===m,()=>`Error in matMul: inner shapes (${l}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let I=a?[g,l,c]:[g,c,l],k=i?[b,d,m]:[b,m,d],w=dr({inputs:{x:o},backend:e,attrs:{shape:I}}),R=dr({inputs:{x:s},backend:e,attrs:{shape:k}}),F=e.dataIdMap.get(w.dataId).id,P=e.dataIdMap.get(R.dataId).id,E=a?w.shape[2]:w.shape[1],B=i?R.shape[1]:R.shape[2],G=Math.max(g,b),U=e.makeOutput([G,E,B],w.dtype),V=e.dataIdMap.get(U.dataId).id,W=new Uint8Array(new Int32Array(w.shape).buffer),H=new Uint8Array(new Int32Array(R.shape).buffer);return r4(F,W,w.shape.length,P,H,R.shape.length,a,i,V),e.disposeData(w.dataId),e.disposeData(R.dataId),U.shape=x,U}var n4={kernelName:mo,backendName:"wasm",setupFunc:Fde,kernelFunc:Pde};function ra(r){let{inputs:{x:t},attrs:{begin:e,size:n},backend:o}=r,[s,a]=Tt.parseSliceParams(t,e,n),i=Tt.isSliceContinous(t.shape,s,a),u=o.readSync(t.dataId),p=o.makeOutput(a,t.dtype),l=y.computeStrides(t.shape),m=o.dataIdMap.get(p.dataId);if(i){let f=Tt.computeFlatOffset(s,l);return t.dtype==="string"?m.stringBytes=u.slice(f,f+y.sizeFromShape(a)):o.typedArrayFromHeap(p).set(u.subarray(f,f+y.sizeFromShape(a))),p}if(t.dtype==="string"){let f=Ll(u,s,a,t.shape,t.dtype);return m.stringBytes=f,p}let c=o.typedArrayFromHeap(p),d=t.shape.length;if(d===2)Mde(u,l[0],c,s,a);else if(d===3)Ede(u,l[0],l[1],c,s,a);else if(d===4)Lde(u,l[0],l[1],l[2],c,s,a);else{let f=Ll(u,s,a,t.shape,t.dtype);c.set(f)}return p}function Mde(r,t,e,n,o){let s=0,a=n[0],i=n[1],u=a+o[0];for(let p=a;p<u;p++){let l=p*t+i;e.set(r.subarray(l,l+o[1]),s),s+=o[1]}}function Ede(r,t,e,n,o,s){let a=0,i=o[0],u=o[1],p=o[2],l=i+s[0],m=u+s[1];for(let c=i;c<l;c++)for(let d=u;d<m;d++){let f=c*t+d*e+p;n.set(r.subarray(f,f+s[2]),a),a+=s[2]}}function Lde(r,t,e,n,o,s,a){let i=0,u=s[0],p=s[1],l=s[2],m=u+a[0],c=p+a[1],d=l+a[2],f=s[3];for(let h=u;h<m;h++)for(let g=p;g<c;g++)for(let b=l;b<d;b++){let T=h*t+g*e+b*n+f;o.set(r.subarray(T,T+a[3]),i),i+=a[3]}}var o4={kernelName:xs,backendName:"wasm",kernelFunc:ra};function _de(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,crops:a}=n,i=s.reduce((b,T)=>b*T),u=C.getReshaped(o.shape,s,i),p=C.getPermuted(u.length,s.length),l=C.getReshapedPermuted(o.shape,s,i),m=C.getSliceBeginCoords(a,s.length),c=C.getSliceSize(l,a,s.length),d=dr({inputs:{x:o},backend:e,attrs:{shape:u}}),f=ps({inputs:{x:d},backend:e,attrs:{perm:p}}),h=dr({inputs:{x:f},backend:e,attrs:{shape:l}}),g=ra({inputs:{x:h},backend:e,attrs:{begin:m,size:c}});return e.disposeData(d.dataId),e.disposeData(f.dataId),e.disposeData(d.dataId),g}var s4={kernelName:ms,backendName:"wasm",kernelFunc:_de};function ni(r){let{inputs:{x:t},attrs:{dtype:e},backend:n}=r,o=n.makeOutput(t.shape,e),s=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(o).set(s),o}var a4={kernelName:zn,backendName:"wasm",kernelFunc:ni};var i4=ut(co);var u4;function $de(r){u4=r.wasm.cwrap(Gn,null,["number","number","number","number"])}function Bde(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{clipValueMin:s,clipValueMax:a}=n,i=e.dataIdMap.get(o.dataId).id,u=e.makeOutput(o.shape,o.dtype),p=e.dataIdMap.get(u.dataId).id;return u4(i,s,a,p),u}var p4={kernelName:Gn,backendName:"wasm",setupFunc:$de,kernelFunc:Bde};function QD(r){let{inputs:t,backend:e}=r,n=y.parseAxisParam(r.attrs.axis,t[0].shape)[0],o=t.map(d=>d.shape);C.assertParamsConsistent(o,n);let s=C.computeOutShape(t.map(d=>d.shape),n),a=t.filter(d=>y.sizeFromShape(d.shape)>0);if(a.length===1)return nm({inputs:{x:a[0]},backend:e});let i=e.makeOutput(s,t[0].dtype);if(y.sizeFromShape(s)===0)return i;if(a[0].dtype==="string"){let d=a.map(x=>{let I=y.sizeFromShape(x.shape.slice(n));return dr({inputs:{x},backend:e,attrs:{shape:[-1,I]}})}),f=d.map(x=>({vals:e.readSync(x.dataId),shape:x.shape}));s=C.computeOutShape(d.map(x=>x.shape),1);let h=d[0].shape[0]===1,g=Pl(f,s,t[0].dtype,h),b=C.computeOutShape(a.map(x=>x.shape),n);i.shape=b;let T=e.dataIdMap.get(i.dataId);return T.stringBytes=C.fromStringArrayToUint8(g),d.forEach(x=>e.disposeData(x.dataId)),i}let u=y.sizeFromShape(a[0].shape.slice(0,n)),p=0,l=a.map(d=>{let f=y.sizeFromShape(d.shape.slice(n));return p+=f,f}),m=a.map(d=>e.typedArrayFromHeap(d)),c=e.typedArrayFromHeap(i);for(let d=0;d<u;d++){let f=d*p;for(let h=0;h<m.length;h++){let g=l[h],b=d*g,T=m[h].subarray(b,b+g);c.set(T,f),f+=g}}return i}var l4={kernelName:cs,backendName:"wasm",kernelFunc:QD};var m4;function Ode(r){m4=r.wasm.cwrap(fo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function zde(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s}=t,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:p,pad:l,dimRoundingMode:m,dataFormat:c}=e,d=C.convertConv2DDataFormat(c),f=C.computeConv2DInfo(o.shape,s.shape,u,p,l,m,!1,d),h=f.filterHeight,g=f.filterWidth,b=f.padInfo.top,T=f.padInfo.right,x=f.padInfo.bottom,I=f.padInfo.left,k=f.dilationHeight,w=f.dilationWidth,R=f.strideHeight,F=f.strideWidth,P=f.inChannels,E=f.outChannels,B=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let G=n.makeOutput(f.outShape,"float32"),U=n.dataIdMap.get(G.dataId).id;return m4(a,o.shape[0],o.shape[1],o.shape[2],i,h,g,b,T,x,I,B,k,w,R,F,P,E,U),G}var c4={kernelName:fo,backendName:"wasm",setupFunc:Ode,kernelFunc:zde};var d4;function Gde(r){d4=r.wasm.cwrap(ho,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ude(r){let{backend:t,inputs:e,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:p,inputShape:l}=n,m=1,c=C.convertConv2DDataFormat(u),d=C.computeConv2DInfo(l,s.shape,a,m,i,p,!1,c),{batchSize:f,filterHeight:h,filterWidth:g,inChannels:b,inHeight:T,inWidth:x,outChannels:I,outHeight:k,outWidth:w,strideHeight:R,strideWidth:F}=d,P=h-1-d.padInfo.top,E=g-1-d.padInfo.left,B=d.dataFormat==="channelsLast",G=y.computeStrides(d.inShape),U=y.computeStrides(o.shape),[V,W,H]=y.computeStrides(s.shape),j=G[0],X=B?G[1]:G[2],ee=B?G[2]:1,ne=B?1:G[1],oe=U[0],se=B?U[1]:U[2],re=B?U[2]:1,ae=B?1:U[1],ce=t.makeOutput(d.inShape,"float32"),ye=t.dataIdMap.get(ce.dataId).id,ke=t.dataIdMap.get(o.dataId).id,Fe=t.dataIdMap.get(s.dataId).id;return d4(ke,Fe,f,h,g,T,x,b,k,w,I,R,F,P,E,V,W,H,j,X,ee,ne,oe,se,re,ae,ye),ce}var f4={kernelName:ho,backendName:"wasm",setupFunc:Gde,kernelFunc:Ude};var h4=ut(go);var g4=ut(bo);var b4=(e=>(e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest",e))(b4||{}),y4;function Wde(r){y4=r.wasm.cwrap(pa,null,["number","number","number","number","array","number","number","number","number","number"])}function Kde(r){let{backend:t,inputs:e,attrs:n}=r,{method:o,extrapolationValue:s,cropSize:a}=n,{image:i,boxes:u,boxInd:p}=e,l=u.shape[0],[m,c]=a,d=[l,m,c,i.shape[3]],f=t.dataIdMap.get(i.dataId),h;i.dtype!=="float32"&&(h=ni({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(h.dataId));let g=f.id,b=t.dataIdMap.get(u.dataId).id,T=t.dataIdMap.get(p.dataId).id,x=t.makeOutput(d,"float32"),I=t.dataIdMap.get(x.dataId).id,k=new Uint8Array(new Int32Array(i.shape).buffer);return y4(g,b,T,l,k,m,c,b4[o],s,I),h!=null&&t.disposeData(h.dataId),x}var T4={kernelName:pa,backendName:"wasm",setupFunc:Wde,kernelFunc:Kde};var x4;function Vde(r){x4=r.wasm.cwrap(ua,null,["number","number","number","number","number","number"])}function Hde(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n,u=o.shape.length;y.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumprod does not support ${o.dtype} tensors in the WASM backend`);let p=C.getAxesPermutation([s],u),l=o;p!==null&&(l=ps({inputs:{x:o},attrs:{perm:p},backend:e}));let m=C.getInnerMostAxes(1,u)[0];C.assertAxesAreInnerMostDims("cumprod",[m],u);let c=e.makeOutput(l.shape,l.dtype),d=l.shape[m],f=e.dataIdMap.get(l.dataId).id,h=e.dataIdMap.get(c.dataId).id;x4(f,a?1:0,i?1:0,d,h,Xe[o.dtype]);let g=c;if(p!==null){let b=C.getUndoAxesPermutation(p);g=ps({inputs:{x:c},attrs:{perm:b},backend:e}),e.disposeData(l.dataId),e.disposeData(c.dataId)}return g}var I4={kernelName:ua,backendName:"wasm",setupFunc:Vde,kernelFunc:Hde};var C4;function qde(r){C4=r.wasm.cwrap(yo,null,["number","number","number","number","number","number"])}function jde(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n,u=o.shape.length;y.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumsum does not support ${o.dtype} tensors in the WASM backend`);let p=C.getAxesPermutation([s],u),l=o;p!==null&&(l=ps({inputs:{x:o},attrs:{perm:p},backend:e}));let m=C.getInnerMostAxes(1,u)[0];C.assertAxesAreInnerMostDims("cumsum",[m],u);let c=e.makeOutput(l.shape,l.dtype),d=l.shape[m],f=e.dataIdMap.get(l.dataId).id,h=e.dataIdMap.get(c.dataId).id;C4(f,a?1:0,i?1:0,d,h,Xe[o.dtype]);let g=c;if(p!==null){let b=C.getUndoAxesPermutation(p);g=ps({inputs:{x:c},attrs:{perm:b},backend:e}),e.disposeData(l.dataId),e.disposeData(c.dataId)}return g}var k4={kernelName:yo,backendName:"wasm",setupFunc:qde,kernelFunc:jde};var S4;function Xde(r){S4=r.wasm.cwrap(la,null,["number","number","number","array","number","array","array","number","number"])}function Yde(r){let{backend:t,inputs:e,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n,i=o.shape[0],u=a==="NHWC"?o.shape[1]:o.shape[2],p=a==="NHWC"?o.shape[2]:o.shape[3],l=a==="NHWC"?o.shape[3]:o.shape[1],m=u*s,c=p*s,d=l/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=t.makeOutput(f,"float32"),b=t.dataIdMap.get(o.dataId).id,T=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),x=new Uint8Array(new Int32Array(f).buffer),I=new Uint8Array(new Int32Array(y.computeStrides(f)).buffer),k=t.dataIdMap.get(h.dataId).id;return S4(b,s,a==="NHWC"?1:0,T,o.shape.length-1,x,I,f.length,k),h}var v4={kernelName:la,backendName:"wasm",setupFunc:Xde,kernelFunc:Yde};var A4;function Zde(r){A4=r.wasm.cwrap(To,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Qde(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s}=t,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:p,pad:l,dimRoundingMode:m}=e,c=p??[1,1],d=C.computeConv2DInfo(o.shape,s.shape,u,c,l,m,!0),f=d.filterHeight,h=d.filterWidth,g=d.padInfo.top,b=d.padInfo.right,T=d.padInfo.bottom,x=d.padInfo.left,I=d.dilationHeight,k=d.dilationWidth,w=d.strideHeight,R=d.strideWidth,F=d.inChannels,P=d.outChannels,E=d.padInfo.type==="SAME"?1:0;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let B=n.makeOutput(d.outShape,"float32"),G=n.dataIdMap.get(B.dataId).id;return A4(a,o.shape[0],o.shape[1],o.shape[2],i,f,h,g,b,T,x,E,I,k,w,R,F,P,G),B}var w4={kernelName:To,backendName:"wasm",setupFunc:Zde,kernelFunc:Qde};var N4=ut(Io);var Jde=!1,D4=dt(ma,Jde,"bool");var R4=ut(Co,"float32");function lk(r){let{inputs:t,attrs:e,backend:n}=r,{input:o}=t,{dim:s}=e,a=o.shape.length,i=o.shape.slice(),u=s;return s<0&&(y.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),dr({inputs:{x:o},backend:n,attrs:{shape:i}})}var F4={kernelName:ds,backendName:"wasm",kernelFunc:lk};function JD(r){let{attrs:{shape:t,value:e,dtype:n},backend:o}=r,s=o.makeOutput(t,n);return o.typedArrayFromHeap(s).fill(e),s}var P4={kernelName:ii,backendName:"wasm",kernelFunc:JD};var M4;function efe(r){M4=r.wasm.cwrap(da,null,["number","number","number","number","number","number"])}function tfe(r){let{inputs:t,backend:e}=r,{image:n}=t,o=e.makeOutput(n.shape,n.dtype),s=e.dataIdMap.get(n.dataId).id,a=e.dataIdMap.get(o.dataId).id,[i,u,p,l]=n.shape;return M4(s,i,u,p,l,a),o}var E4={kernelName:da,backendName:"wasm",kernelFunc:tfe,setupFunc:efe};var L4=ut(ko);var rfe=!1,_4=dt(So,rfe);var $4;function nfe(r){$4=r.wasm.cwrap(vo,null,["number","number","number","number","number","number","number"])}function ofe(r){let{backend:t,inputs:e,attrs:n}=r,{varianceEpsilon:o}=n,{x:s,mean:a,variance:i,offset:u,scale:p}=e,l=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(i.dataId).id,d=u!=null?t.dataIdMap.get(u.dataId).id:0,f=p!=null?t.dataIdMap.get(p.dataId).id:0,h=t.makeOutput(s.shape,s.dtype);if(y.sizeFromShape(s.shape)===0)return h;let g=t.dataIdMap.get(h.dataId).id;return $4(l,m,c,d,f,o,g),h}var B4={kernelName:vo,backendName:"wasm",setupFunc:nfe,kernelFunc:ofe};var O4;function sfe(r){O4=r.wasm.cwrap(ws,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function afe(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:p,dilations:l,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=e,h=C.computeConv2DInfo(o.shape,s.shape,u,l,p,c),g=rm[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let b=n.dataIdMap.get(o.dataId).id,T=n.dataIdMap.get(s.dataId).id,x=h.outChannels,I=0;if(a!=null){let re=n.dataIdMap.get(a.dataId);if(re.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${re.shape.length}.`);if(re.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${re.shape}) does not match the number of output channels (${x})`);I=re.id}let k=h.filterHeight,w=h.filterWidth,R=h.padInfo.top,F=h.padInfo.right,P=h.padInfo.bottom,E=h.padInfo.left,B=h.dilationHeight,G=h.dilationWidth,U=h.strideHeight,V=h.strideWidth,W=h.inChannels,H=h.padInfo.type==="SAME"?1:0,j=h.batchSize,X=h.inHeight,ee=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let ne=n.makeOutput(h.outShape,"float32"),oe=n.dataIdMap.get(ne.dataId).id,se=i==null?0:n.dataIdMap.get(i.dataId).id;return O4(b,j,X,ee,T,k,w,I,R,F,P,E,H,B,G,U,V,W,x,g,se,f||0,oe),ne}var z4={kernelName:ws,backendName:"wasm",setupFunc:sfe,kernelFunc:afe};var G4;function ife(r){G4=r.wasm.cwrap(Ns,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ufe(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:u,pad:p,dilations:l,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=e,h=C.computeConv2DInfo(o.shape,s.shape,u,l,p,c,!0),g=rm[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let b=n.dataIdMap.get(o.dataId).id,T=n.dataIdMap.get(s.dataId).id,x=h.outChannels,I=0;if(a!=null){let re=n.dataIdMap.get(a.dataId);if(re.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${re.shape.length}.`);if(re.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${re.shape}) does not match the number of output channels (${x})`);I=re.id}let k=h.filterHeight,w=h.filterWidth,R=h.padInfo.top,F=h.padInfo.right,P=h.padInfo.bottom,E=h.padInfo.left,B=h.dilationHeight,G=h.dilationWidth,U=h.strideHeight,V=h.strideWidth,W=h.inChannels,H=h.padInfo.type==="SAME"?1:0,j=h.batchSize,X=h.inHeight,ee=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let ne=n.makeOutput(h.outShape,"float32"),oe=n.dataIdMap.get(ne.dataId).id,se=i==null?0:n.dataIdMap.get(i.dataId).id;return G4(b,j,X,ee,T,k,w,I,R,F,P,E,H,B,G,U,V,W,x,g,se,f||0,oe),ne}var U4={kernelName:Ns,backendName:"wasm",setupFunc:ife,kernelFunc:ufe};var W4;function pfe(r){W4=r.wasm.cwrap(fa,null,["number","number","number","number","number","number","array","number"])}function lfe(r){let{backend:t,inputs:e}=r,{params:n,indices:o}=e,[s,a,i,u]=Nb.prepareAndValidate(n,o),p=t.makeOutput(s,n.dtype);if(a===0)return p;let l=o.shape,m=l[l.length-1],d=t.dataIdMap.get(n.dataId).id,h=t.dataIdMap.get(o.dataId).id,g=new Uint8Array(new Int32Array(u).buffer),b=t.dataIdMap.get(p.dataId).id;return W4(d,Xe[n.dtype],h,a,m,i,g,b),p}var K4={kernelName:fa,backendName:"wasm",setupFunc:pfe,kernelFunc:lfe};var V4;function mfe(r){V4=r.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function cfe(r){let{backend:t,inputs:e,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n,u=y.parseAxisParam(a,o.shape)[0],p=t.readSync(s.dataId),l=o.shape[u];for(let P=0;P<p.length;++P){let E=p[P];y.assert(E<=l-1&&E>=0,()=>`GatherV2: the index value ${E} is not in [0, ${l-1}]`)}let m=C.segment_util.collectGatherOpShapeInfo(o,s,u,i),c=dr({inputs:{x:o},attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]},backend:t}),d=y.sizeFromShape(s.shape),f=dr({inputs:{x:s},attrs:{shape:[m.batchSize,d/m.batchSize]},backend:t}),h=[m.batchSize,m.outerSize,d/m.batchSize,m.sliceSize],g=t.makeOutput(h,o.dtype);if(y.sizeFromShape(o.shape)===0)return g;let b=c.shape.length-1,x=t.dataIdMap.get(c.dataId).id,k=t.dataIdMap.get(f.dataId).id,w=t.dataIdMap.get(g.dataId).id,R=new Uint8Array(new Int32Array(y.computeStrides(c.shape)).buffer),F=new Uint8Array(new Int32Array(y.computeStrides(h)).buffer);return V4(x,Xe[o.dtype],R,b,k,m.batchSize,F,w),t.disposeData(c.dataId),t.disposeData(f.dataId),g.shape=m.outputShape,g}var H4={kernelName:fs,backendName:"wasm",setupFunc:mfe,kernelFunc:cfe};var dfe=!1,q4=dt(ha,dfe,"bool");var ffe=!1,j4=dt(Ao,ffe,"bool");var X4;function hfe(r){X4=r.wasm.cwrap(wo,null,["number","number","number","number"])}function gfe(r){let{inputs:{x:t},attrs:{alpha:e},backend:n}=r,o=n.dataIdMap.get(t.dataId).id,s=n.makeOutput(t.shape,"float32");if(y.sizeFromShape(t.shape)!==0){let a=n.dataIdMap.get(s.dataId).id;X4(o,Xe[t.dtype],e,a)}return s}var Y4={kernelName:wo,backendName:"wasm",setupFunc:hfe,kernelFunc:gfe};var bfe=!1,Z4=dt(ba,bfe,"bool");var yfe=!1,Q4=dt(ya,yfe,"bool");var J4=ut(No);var Tfe=!1,eH=dt(Ta,Tfe,"bool");var tH=ut(xa);var xfe=!1,rH=dt(Hi,xfe,"bool");var Ife=!1,nH=dt(O0,Ife,"bool");var oH;function Cfe(r){oH=r.wasm.cwrap(Do,null,["number","number","number","number"])}function kfe(r){let{backend:t,inputs:e,attrs:n}=r,{reductionIndices:o,keepDims:s}=n,{x:a}=e,u=t.dataIdMap.get(a.dataId).id,p=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=Sn(a,o,t);if(d){let x=t.dataIdMap.get(l.dataId).id;p=l,u=x}let f=p.shape.length;C.assertAxesAreInnerMostDims("max",m,f);let[h,g]=C.computeOutAndReduceShapes(p.shape,m),b=y.sizeFromShape(g),T=t.makeOutput(h,a.dtype);if(y.sizeFromShape(p.shape)!==0){let x=t.dataIdMap.get(T.dataId).id;oH(u,Xe[a.dtype],b,x)}if(d&&t.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var sH={kernelName:Do,backendName:"wasm",setupFunc:Cfe,kernelFunc:kfe};var Sfe=!1,aH=dt(Ro,Sfe);var iH;function vfe(r){iH=r.wasm.cwrap(Fo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Afe(r){let{inputs:t,attrs:e,backend:n}=r,o=t.x,s=n.dataIdMap.get(o.dataId).id;y.assert(o.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${o.dtype}.`);let{filterSize:a,strides:i,pad:u,dimRoundingMode:p}=e,l=C.computePool2DInfo(o.shape,a,i,1,u,p),m=l.filterHeight,c=l.filterWidth,d=l.padInfo.top,f=l.padInfo.right,h=l.padInfo.bottom,g=l.padInfo.left,b=l.dilationHeight,T=l.dilationWidth,x=l.strideHeight,I=l.strideWidth,k=l.inChannels,w=l.outChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);let R=n.makeOutput(l.outShape,"float32"),F=n.dataIdMap.get(R.dataId).id;return iH(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,b,T,x,I,k,w,F),R}var uH={kernelName:Fo,backendName:"wasm",setupFunc:vfe,kernelFunc:Afe};var pH;function wfe(r){pH=r.wasm.cwrap(Po,null,["number, number, number"])}function Nfe(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,i=t.dataIdMap.get(a.dataId).id,u=i,p=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=Sn(a,o,t),f=m;if(d){let I=t.dataIdMap.get(l.dataId).id;I!==i&&(p=l,u=I,f=C.getInnerMostAxes(f.length,p.shape.length))}C.assertAxesAreInnerMostDims("mean",f,p.shape.length);let[h,g]=C.computeOutAndReduceShapes(p.shape,f),b=y.sizeFromShape(g),T=p;p.dtype!=="float32"&&(T=ni({backend:t,inputs:{x:p},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(T.dataId).id);let x=t.makeOutput(h,"float32");if(y.sizeFromShape(p.shape)!==0){let I=t.dataIdMap.get(x.dataId).id;pH(u,b,I)}if(d&&t.disposeData(l.dataId),s){let I=C.expandShapeToKeepDim(x.shape,c);x.shape=I}return p.dtype!=="float32"&&t.disposeData(T.dataId),x}var lH={kernelName:Po,backendName:"wasm",setupFunc:wfe,kernelFunc:Nfe};var mH;function Dfe(r){mH=r.wasm.cwrap(Mo,null,["number","number","number","number"])}function Rfe(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,i=t.dataIdMap.get(a.dataId).id,u=i,p=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=Sn(a,o,t);if(d){let x=t.dataIdMap.get(l.dataId).id;x!==i&&(p=l,u=x)}let f=p.shape.length;C.assertAxesAreInnerMostDims("min",m,f);let[h,g]=C.computeOutAndReduceShapes(p.shape,m),b=y.sizeFromShape(g),T=t.makeOutput(h,p.dtype);if(y.sizeFromShape(p.shape)!==0){let x=t.dataIdMap.get(T.dataId).id;mH(u,Xe[a.dtype],b,x)}if(d&&t.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var cH={kernelName:Mo,backendName:"wasm",setupFunc:Dfe,kernelFunc:Rfe};var Ffe=!1,dH=dt(Eo,Ffe);var fH=(e=>(e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric",e))(fH||{}),hH;function Pfe(r){hH=r.wasm.cwrap(Lo,null,["number","array","number","number","array","array","number","number"])}function Mfe(r){let{inputs:{x:t},backend:e,attrs:{paddings:n,mode:o}}=r,s=n.map((f,h)=>f[0]+t.shape[h]+f[1]),a=e.dataIdMap.get(t.dataId).id,i=e.makeOutput(s,t.dtype),u=e.dataIdMap.get(i.dataId).id,p=new Uint8Array(new Int32Array(t.shape).buffer),l=n.map(f=>f[0]),m=n.map(f=>f[1]),c=new Uint8Array(new Int32Array(l).buffer),d=new Uint8Array(new Int32Array(m).buffer);return hH(a,p,t.shape.length,Xe[t.dtype],c,d,fH[o],u),i}var gH={kernelName:Lo,backendName:"wasm",kernelFunc:Mfe,setupFunc:Pfe};var Efe=!0,bH=dt(_o,Efe);var yH=ut(hs);function zf(r,t){let e=new Int32Array(r.wasm.HEAPU8.buffer,t,4),n=e[0],o=e[1],s=e[2],a=e[3];return r.wasm._free(t),{pSelectedIndices:n,selectedSize:o,pSelectedScores:s,pValidOutputs:a}}var TH;function Lfe(r){TH=r.wasm.cwrap(Ca,"number",["number","number","number","number","number"])}function _fe(r){let{backend:t,inputs:e,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a}=n,{boxes:i,scores:u}=e,p=t.dataIdMap.get(i.dataId).id,l=t.dataIdMap.get(u.dataId).id,m=TH(p,l,s,o,a),{pSelectedIndices:c,selectedSize:d,pSelectedScores:f,pValidOutputs:h}=zf(t,m);return t.wasm._free(f),t.wasm._free(h),t.makeOutput([d],"int32",c)}var xH={kernelName:Ca,backendName:"wasm",setupFunc:Lfe,kernelFunc:_fe};var IH;function $fe(r){IH=r.wasm.cwrap(ji,"number",["number","number","number","number","number","bool"])}function Bfe(r){let{backend:t,inputs:e,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,padToMaxOutputSize:i}=n,{boxes:u,scores:p}=e,l=t.dataIdMap.get(u.dataId).id,m=t.dataIdMap.get(p.dataId).id,c=IH(l,m,s,o,a,i),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=zf(t,c);t.wasm._free(h);let b=t.makeOutput([f],"int32",d),T=t.makeOutput([],"int32",g);return[b,T]}var CH={kernelName:ji,backendName:"wasm",setupFunc:$fe,kernelFunc:Bfe};var kH;function Ofe(r){kH=r.wasm.cwrap(ka,"number",["number","number","number","number","number","number"])}function zfe(r){let{backend:t,inputs:e,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,softNmsSigma:i}=n,{boxes:u,scores:p}=e,l=t.dataIdMap.get(u.dataId).id,m=t.dataIdMap.get(p.dataId).id,c=kH(l,m,s,o,a,i),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=zf(t,c);t.wasm._free(g);let b=t.makeOutput([f],"int32",d),T=t.makeOutput([f],"float32",h);return[b,T]}var SH={kernelName:ka,backendName:"wasm",setupFunc:Ofe,kernelFunc:zfe};var Gfe=!1,vH=dt(Ia,Gfe,"bool");var AH;function Ufe(r){AH=r.wasm.cwrap(Sa,null,["number","number","number","number","number"])}function Wfe(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o}=t,{dtype:s,depth:a,onValue:i,offValue:u}=n,p=e.makeOutput([...o.shape,a],s),l=e.dataIdMap.get(p.dataId).id,c=e.dataIdMap.get(o.dataId).id;return AH(c,a,i,u,l),p}var wH={kernelName:Sa,backendName:"wasm",setupFunc:Ufe,kernelFunc:Wfe};function Kfe(r){let{inputs:{x:t},backend:e}=r,n=e.makeOutput(t.shape,t.dtype);return e.typedArrayFromHeap(n).fill(1),n}var NH={kernelName:gs,backendName:"wasm",kernelFunc:Kfe};function Vfe(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n;if(t.length===1)return lk({inputs:{input:t[0]},backend:e,attrs:{dim:o}});let s=t[0].shape,a=t[0].dtype;t.forEach(l=>{y.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=t.map(l=>{let m=lk({inputs:{input:l},backend:e,attrs:{dim:o}});return i.push(m),m}),p=QD({inputs:u,backend:e,attrs:{axis:o}});return i.forEach(l=>e.disposeData(l.dataId)),p}var DH={kernelName:bs,backendName:"wasm",kernelFunc:Vfe};var RH;function Hfe(r){RH=r.wasm.cwrap($o,null,["number","array","number","number","array","array","number","number"])}function qfe(r){let{inputs:{x:t},backend:e,attrs:{paddings:n,constantValue:o}}=r,s=n.map((h,g)=>h[0]+t.shape[g]+h[1]);if(y.sizeFromShape(t.shape)===0)return JD({backend:e,attrs:{shape:s,value:o,dtype:t.dtype}});let a=e.dataIdMap.get(t.dataId).id,i=e.makeOutput(s,t.dtype),p=e.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),m=n.map(h=>h[0]),c=n.map(h=>h[1]),d=new Uint8Array(new Int32Array(m).buffer),f=new Uint8Array(new Int32Array(c).buffer);return RH(a,l,t.shape.length,Xe[t.dtype],d,f,o,p),i}var mk={kernelName:$o,backendName:"wasm",kernelFunc:qfe,setupFunc:Hfe};var jfe=!1,FH=dt(Bo,jfe);var PH;function Xfe(r){PH=r.wasm.cwrap(Oo,null,["number","number","number"])}function Yfe(r){let{inputs:t,backend:e}=r,{x:n,alpha:o}=t,s=e.dataIdMap.get(n.dataId).id,a=e.dataIdMap.get(o.dataId).id,i=s,u=n,p=u;u.dtype!=="float32"&&(p=ni({backend:e,inputs:{x:n},attrs:{dtype:"float32"}}),i=e.dataIdMap.get(p.dataId).id);let l=e.makeOutput(n.shape,"float32"),m=e.dataIdMap.get(l.dataId).id;return PH(i,a,m),u.dtype!=="float32"&&e.disposeData(p.dataId),l}var MH={kernelName:Oo,backendName:"wasm",setupFunc:Xfe,kernelFunc:Yfe};var EH;function Zfe(r){EH=r.wasm.cwrap(zo,null,["number","number","number","number"])}function Qfe(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,i=t.dataIdMap.get(a.dataId).id,u=i,p=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=Sn(a,o,t),f=m;if(d){let x=t.dataIdMap.get(l.dataId).id;x!==i&&(p=l,u=x,f=C.getInnerMostAxes(f.length,p.shape.length))}C.assertAxesAreInnerMostDims("prod",f,p.shape.length);let[h,g]=C.computeOutAndReduceShapes(p.shape,f),b=y.sizeFromShape(g),T=t.makeOutput(h,p.dtype);if(y.sizeFromShape(p.shape)!==0){let x=t.dataIdMap.get(T.dataId).id;EH(u,b,Xe[T.dtype],x)}if(d&&t.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var LH={kernelName:zo,backendName:"wasm",setupFunc:Zfe,kernelFunc:Qfe};var Jfe=r=>{let{backend:t,attrs:e}=r,{start:n,stop:o,step:s,dtype:a}=e,i=El(n,o,s,a),u=t.makeOutput([i.length],a);return t.typedArrayFromHeap(u).set(i),u},_H={kernelName:ui,backendName:"wasm",kernelFunc:Jfe};var ehe=!0,$H=dt(xo,ehe);var BH=ut(Go);var OH=ut(Ko);var zH;function the(r){zH=r.wasm.cwrap(Wo,null,["number","number","number","number","number","number","number","number","number","number"])}function rhe(r){let{backend:t,inputs:e,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,p]=i,[l,m,c,d]=o.shape,f=[l,u,p,d],h=t.dataIdMap.get(o.dataId),g;h.dtype!=="float32"&&(g=ni({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),h=t.dataIdMap.get(g.dataId));let b=h.id,T=t.makeOutput(f,"float32");if(y.sizeFromShape(o.shape)===0)return T;let x=t.dataIdMap.get(T.dataId).id;return zH(b,l,m,c,d,u,p,s?1:0,a?1:0,x),g!=null&&t.disposeData(g.dataId),T}var GH={kernelName:Wo,backendName:"wasm",setupFunc:the,kernelFunc:rhe};var UH;function nhe(r){UH=r.wasm.cwrap(Uo,null,["number","number","number","number","number","number","number","number","number","number"])}function ohe(r){let{backend:t,inputs:e,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[u,p]=i,[l,m,c,d]=o.shape,f=[l,u,p,d],h=t.makeOutput(f,"float32");if(y.sizeFromShape(o.shape)===0)return h;let g=t.dataIdMap.get(o.dataId),b;g.dtype!=="float32"&&(b=ni({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(b.dataId));let T=g.id,x=t.dataIdMap.get(h.dataId).id;return UH(T,l,m,c,d,u,p,s?1:0,a?1:0,x),b!=null&&t.disposeData(b.dataId),h}var WH={kernelName:Uo,backendName:"wasm",setupFunc:nhe,kernelFunc:ohe};var KH;function she(r){KH=r.wasm.cwrap(Aa,null,["number","array","number","array","number","number"])}function ahe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dims:s}=n,a=y.parseAxisParam(s,o.shape);if(o.shape.length===0)return nm({inputs:{x:o},backend:e});let i=e.makeOutput(o.shape,o.dtype),u=e.dataIdMap.get(o.dataId).id,p=e.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(a).buffer),m=new Uint8Array(new Int32Array(o.shape).buffer);KH(u,l,a.length,m,o.shape.length,p);let c=dr({inputs:{x:i},attrs:{shape:o.shape},backend:e});return e.disposeData(i.dataId),c}var VH={kernelName:Aa,backendName:"wasm",kernelFunc:ahe,setupFunc:she};var HH;function ihe(r){HH=r.wasm.cwrap(Ea,null,["number","number","number","number","number","number","number","number","array","number","number"])}function uhe(r){let{inputs:t,backend:e,attrs:n}=r,{image:o}=t,{radians:s,fillValue:a,center:i}=n,u=e.makeOutput(o.shape,o.dtype),p=e.dataIdMap.get(o.dataId).id,l=e.dataIdMap.get(u.dataId).id,[m,c,d,f]=o.shape,[h,g]=C.getImageCenter(i,c,d),b=a===0,T=255,x=typeof a=="number"?[a,a,a,b?0:T]:[...a,T],I=new Uint8Array(new Int32Array(x).buffer);return HH(p,m,c,d,f,s,h,g,I,x.length,l),u}var qH={kernelName:Ea,backendName:"wasm",kernelFunc:uhe,setupFunc:ihe};var jH=ut(wa);var XH=ut(Vo);var YH;function phe(r){YH=r.wasm.cwrap(Na,null,["number","number","number","number","number","number","array","number","number"])}function lhe(r){let{backend:t,inputs:e,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,i=t.makeOutput(a,s.dtype);if(y.sizeFromShape(a)===0)return i;let{sliceRank:u,numUpdates:p,sliceSize:l,strides:m,outputSize:c}=fh.calculateShapes(s,o,a),f=t.dataIdMap.get(o.dataId).id,g=t.dataIdMap.get(s.dataId).id,b=new Uint8Array(new Int32Array(m).buffer),T=t.dataIdMap.get(i.dataId).id;return YH(f,g,Xe[s.dtype],u,p,l,b,c,T),i}var ZH={kernelName:Na,backendName:"wasm",setupFunc:phe,kernelFunc:lhe};var QH;function mhe(r){QH=r.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function che(r){let{inputs:t,backend:e}=r,{condition:n,t:o,e:s}=t,a=e.dataIdMap.get(n.dataId).id,i=e.dataIdMap.get(o.dataId).id,u=e.dataIdMap.get(s.dataId).id,p=e.makeOutput(o.shape,o.dtype),l=e.dataIdMap.get(p.dataId).id,m=n.shape.length,c=o.shape.length,d=m===0||m>1||c===1?1:y.sizeFromShape(o.shape.slice(1));return QH(a,i,u,d,l),p}var JH={kernelName:Ts,backendName:"wasm",kernelFunc:che,setupFunc:mhe};var eq;function dhe(r){eq=r.wasm.cwrap(qo,null,["number","number"])}function fhe(r){let{backend:t,inputs:{x:e}}=r,n=t.dataIdMap.get(e.dataId).id,o=t.makeOutput(e.shape,e.dtype),s=t.dataIdMap.get(o.dataId).id;return y.sizeFromShape(o.shape)===0||eq(n,s),o}var tq={kernelName:"Sigmoid",backendName:"wasm",setupFunc:dhe,kernelFunc:fhe};var rq=ut(Ho);var nq;function hhe(r){nq=r.wasm.cwrap(Yo,null,["number","number","number","number"])}function ghe(r){let{backend:t,inputs:{logits:e},attrs:{dim:n}}=r,o=t.dataIdMap.get(e.dataId).id,s=t.makeOutput(e.shape,e.dtype),a=t.dataIdMap.get(s.dataId).id,i=e.shape[n],u=y.sizeFromShape(e.shape)/i;return y.sizeFromShape(s.shape)===0||nq(o,a,i,u),s}var oq={kernelName:Yo,backendName:"wasm",setupFunc:hhe,kernelFunc:ghe};function bhe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,paddings:a}=n,i=y.sizeFromShape(s),u=[[0,0]];u.push(...a);for(let w=1+s.length;w<o.shape.length;++w)u.push([0,0]);let p=mk.kernelFunc({inputs:{x:o},backend:e,attrs:{paddings:u,constantValue:0}}),l=C.getReshaped(p.shape,s,i,!1),m=C.getPermuted(l.length,s.length,!1),c=C.getReshapedPermuted(p.shape,s,i,!1),h=dr({inputs:{x:p},backend:e,attrs:{shape:l}}),T=ps({inputs:{x:h},backend:e,attrs:{perm:m}}),k=dr({inputs:{x:T},backend:e,attrs:{shape:c}});return e.disposeData(p.dataId),e.disposeData(h.dataId),e.disposeData(T.dataId),k}var sq={kernelName:Is,backendName:"wasm",kernelFunc:bhe};var aq;function yhe(r){aq=r.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function The(r){let{backend:t,inputs:e}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=e,i=n.shape[0],u=n.shape[1],p=t.readSync(s.dataId)[0],l=[i+p,u],m=t.dataIdMap.get(n.dataId).id,c=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(a.dataId).id,f=t.makeOutput(l,n.dtype),h=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(l.slice(0,1),o.dtype),b=t.dataIdMap.get(g.dataId).id,T=t.makeOutput([p],"bool"),x=t.dataIdMap.get(T.dataId).id,I=t.makeOutput([i],n.dtype),k=t.dataIdMap.get(I.dataId).id,w=t.makeOutput([4],"int32"),R=t.dataIdMap.get(w.dataId).id,F=aq(m,c,Xe[o.dtype],i,p,u,d,h,b,x,k,R),P=t.readSync(w.dataId),E;switch(P[0]){case 1:{E=C.getSparseFillEmptyRowsIndicesDenseShapeMismatch(P[1]);break}case 2:{E=C.getSparseFillEmptyRowsNegativeIndexErrorMessage(P[1],P[2]);break}case 3:E=C.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(P[1],P[2],P[3]);break;default:E=""}if(t.disposeData(w.dataId),E)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(T.dataId),t.disposeData(I.dataId),new Error(E);let B=f,G=g;return F!==l[0]&&(B=ra({inputs:{x:f},attrs:{begin:0,size:[F,u]},backend:t}),G=ra({inputs:{x:g},attrs:{begin:0,size:F},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[B,G,T,I]}var iq={kernelName:Ku,backendName:"wasm",setupFunc:yhe,kernelFunc:The};var uq;function xhe(r){uq=r.wasm.cwrap(Qi,null,["number","number","number","number","number","number","number"])}function Ihe(r){let{backend:t,inputs:e}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(s.dataId).id,p=n.shape[0],l=y.sizeFromShape(s.shape),m=t.makeOutput([p,l],n.dtype),c=t.dataIdMap.get(m.dataId).id,d=t.makeOutput([l],s.dtype),f=t.dataIdMap.get(d.dataId).id,h=t.makeOutput([3],"int32"),g=t.dataIdMap.get(h.dataId).id;uq(a,i,u,p,c,f,g);let b=t.readSync(h.dataId),T;switch(b[0]){case 0:{T=C.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(b[1],b[2]);break}case 1:{T=C.getSparseReshapeNegativeOutputDimErrorMessage(b[1],b[2]);break}case 2:T=C.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let x=Array.from(t.readSync(o.dataId)),I=Array.from(t.readSync(d.dataId));T=C.getSparseReshapeInputOutputMultipleErrorMessage(x,I);break}case 4:{let x=Array.from(t.readSync(o.dataId)),I=Array.from(t.readSync(d.dataId));T=C.getSparseReshapeInputOutputMismatchErrorMessage(x,I);break}default:T=""}if(t.disposeData(h.dataId),T)throw t.disposeData(m.dataId),t.disposeData(d.dataId),new Error(T);return[m,d]}var pq={kernelName:Qi,backendName:"wasm",setupFunc:xhe,kernelFunc:Ihe};var lq;function ck(r){lq=r.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function dk(r,t){let{backend:e,inputs:n}=r,{data:o,indices:s,segmentIds:a}=n,i=s.shape[0],u=e.readSync(a.dataId,i-1,i)[0],l=i>0?u+1:0;if(l<0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=o.shape.slice();m[0]=l;let c=e.dataIdMap.get(o.dataId).id,d=e.dataIdMap.get(s.dataId).id,f=e.dataIdMap.get(a.dataId).id,h=e.makeOutput(m,o.dtype),g=e.dataIdMap.get(h.dataId).id,b=e.makeOutput([4],"int32"),T=e.dataIdMap.get(b.dataId).id;lq(c,Xe[o.dtype],o.shape[0],d,f,g,T,t,0);let x=e.readSync(b.dataId),I;switch(x[0]){case 0:{I=C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{I=C.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:I=C.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:I=C.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:I=""}if(e.disposeData(b.dataId),I)throw e.disposeData(h.dataId),new Error(I);return h}function Che(r){return dk(r,!0)}var mq={kernelName:Vu,backendName:"wasm",setupFunc:ck,kernelFunc:Che};function khe(r){return dk(r,!1)}var cq={kernelName:Hu,backendName:"wasm",setupFunc:ck,kernelFunc:khe};function She(r){let{inputs:t,attrs:e,backend:n}=r,{x:o}=t,{numOrSizeSplits:s,axis:a}=e,i=y.parseAxisParam(a,o.shape)[0],u=C.prepareSplitSize(o,s,i),p=new Array(o.shape.length).fill(0),l=o.shape.slice();return u.map(m=>{let c=[...l];c[i]=m;let d=ra({inputs:{x:o},attrs:{begin:p,size:c},backend:n});return p[i]+=m,d})}var dq={kernelName:Cs,backendName:"wasm",kernelFunc:She};var fq=ut(jo);var hq=ut(pi);var vhe=!0,gq=dt(Zo,vhe);var bq;function Ahe(r){bq=r.wasm.cwrap(vs,null,["number","number","number","number"])}function whe(r){let{backend:t,inputs:e,attrs:n}=r,{alpha:o}=n,{x:s}=e,a=t.dataIdMap.get(s.dataId).id,i=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(i.dataId).id;return bq(a,o,Xe[s.dtype],u),i}var yq={kernelName:vs,backendName:"wasm",setupFunc:Ahe,kernelFunc:whe};var Tq;function Nhe(r){Tq=r.wasm.cwrap(Ra,null,["number","array","number","array","array","array","array","array","number","number"])}function Dhe(r){let{backend:t,inputs:e,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:u,endMask:p,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:T,end:x,strides:I}=Tt.sliceInfo(o.shape,s,a,i,u,p,l,m,c),k;if(h)k=dr({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let w=Tt.computeOutShape(T,x,I),R=ra({inputs:{x:o},backend:t,attrs:{begin:T,size:w}});k=dr({inputs:{x:R},backend:t,attrs:{shape:f}}),t.disposeData(R.dataId)}else{let w=t.makeOutput(d,"float32"),R=t.dataIdMap.get(o.dataId).id,F=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),P=new Uint8Array(new Int32Array(T).buffer),E=new Uint8Array(new Int32Array(x).buffer),B=new Uint8Array(new Int32Array(I).buffer),G=new Uint8Array(new Int32Array(d).buffer),U=new Uint8Array(new Int32Array(y.computeStrides(d)).buffer),V=t.dataIdMap.get(w.dataId).id;Tq(R,F,o.shape.length,P,E,B,G,U,d.length,V),k=dr({inputs:{x:w},backend:t,attrs:{shape:f}}),t.disposeData(w.dataId)}return k}var xq={kernelName:Ra,backendName:"wasm",setupFunc:Nhe,kernelFunc:Dhe};function Rhe(r){let{backend:t,inputs:e,attrs:n}=r,{data:o,dataSplits:s}=e,{separator:a,nGramWidths:i,leftPad:u,rightPad:p,padWidth:l,preserveShortSequences:m}=n,c=t.readSync(o.dataId),d=t.readSync(s.dataId),[f,h]=_l(c,d,a,i,u,p,l,m),g=t.makeOutput([f.length],"string"),b=t.dataIdMap.get(g.dataId);b.stringBytes=f;let T=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(T).set(h),[g,T]}var Iq={kernelName:li,backendName:"wasm",kernelFunc:Rhe};function Fhe(r){let{backend:t,inputs:e,attrs:n}=r,{input:o,delimiter:s}=e,{skipEmpty:a}=n,i=t.readSync(o.dataId),u=t.readSync(s.dataId),[p,l,m]=$l(i,u[0],a),c=l.length,d=t.makeOutput([c,2],"int32");t.typedArrayFromHeap(d).set(p);let h=t.makeOutput([c],"string"),g=t.dataIdMap.get(h.dataId);g.stringBytes=l;let b=t.makeOutput([2],"int32");return t.typedArrayFromHeap(b).set(m),[d,h,b]}var Cq={kernelName:ju,backendName:"wasm",kernelFunc:Fhe};function Phe(r){let{backend:t,inputs:e,attrs:n}=r,{input:o}=e,{numBuckets:s}=n,a=t.readSync(o.dataId),i=Bl(a,s),u=t.makeOutput(o.shape,"int32");return t.typedArrayFromHeap(u).set(i),u}var kq={kernelName:Xu,backendName:"wasm",kernelFunc:Phe};var Mhe=!0,Sq=dt(Qo,Mhe);var vq;function Ehe(r){vq=r.wasm.cwrap(Xo,null,["number","number","number","number"])}function Lhe(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,i=t.dataIdMap.get(a.dataId).id,u=i,p=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=Sn(a,o,t),f=m;if(d){let x=t.dataIdMap.get(l.dataId).id;x!==i&&(p=l,u=x,f=C.getInnerMostAxes(f.length,p.shape.length))}C.assertAxesAreInnerMostDims("sum",f,p.shape.length);let[h,g]=C.computeOutAndReduceShapes(p.shape,f),b=y.sizeFromShape(g),T=t.makeOutput(h,p.dtype);if(y.sizeFromShape(p.shape)!==0){let x=t.dataIdMap.get(T.dataId).id;vq(u,b,Xe[T.dtype],x)}if(d&&t.disposeData(l.dataId),s){let x=C.expandShapeToKeepDim(T.shape,c);T.shape=x}return T}var Aq={kernelName:Xo,backendName:"wasm",setupFunc:Ehe,kernelFunc:Lhe};var wq=ut(Fa);var Nq=ut(Jo);var Dq;function _he(r){Dq=r.wasm.cwrap(An,null,["number","array","number","array","number","number"])}function $he(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,s=e.dataIdMap.get(o.dataId).id,{reps:a}=n,i=new Array(o.shape.length);for(let c=0;c<i.length;c++)i[c]=o.shape[c]*a[c];let u=new Uint8Array(new Int32Array(o.shape).buffer),p=new Uint8Array(new Int32Array(i).buffer),l=e.makeOutput(i,o.dtype),m=e.dataIdMap.get(l.dataId).id;return Dq(s,u,o.shape.length,p,i.length,Xe[l.dtype],m),l}var Rq={kernelName:An,backendName:"wasm",setupFunc:_he,kernelFunc:$he};var Fq;function Bhe(r){Fq=r.wasm.cwrap(Pa,null,["number","array","number","number","number","bool","number","number"])}var Ohe=({inputs:r,backend:t,attrs:e})=>{let{x:n}=r,{k:o,sorted:s}=e,a=t.dataIdMap.get(n.dataId).id,i=new Uint8Array(new Int32Array(n.shape).buffer),u=n.shape.slice();u[u.length-1]=o;let p=t.makeOutput(u,n.dtype),l=t.dataIdMap.get(p.dataId).id,m=t.makeOutput(u,"int32"),c=t.dataIdMap.get(m.dataId).id;return Fq(a,i,n.shape.length,Xe[n.dtype],o,s,l,c),[p,m]},Pq={kernelName:Pa,backendName:"wasm",setupFunc:Bhe,kernelFunc:Ohe};var Mq;function zhe(r){Mq=r.wasm.cwrap(Ma,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function Ghe(r){let{backend:t,inputs:e,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:p}=n,[l,m,c,d]=o.shape,[f,h]=p??[m,c],g=[l,f,h,d],b=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),T=new Uint8Array(new Int32Array(y.computeStrides(g)).buffer),x=t.makeOutput(g,o.dtype),I=t.dataIdMap.get(x.dataId).id,w=t.dataIdMap.get(o.dataId).id,F=t.dataIdMap.get(s.dataId).id,P=a==="nearest"?1:2,E;switch(i){case"constant":E=1;break;case"reflect":E=2;break;case"wrap":E=3;break;case"nearest":E=4;break;default:E=1;break}return Mq(w,F,s.shape[0]>1,l,f,h,d,c,m,b,o.shape.length-1,T,g.length-1,P,E,u,I),x}var Eq={kernelName:Ma,backendName:"wasm",setupFunc:zhe,kernelFunc:Ghe};function Uhe(r){let{inputs:t,backend:e,attrs:n}=r,{value:o}=t,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape[s],i=o.shape.length,u=new Array(i-1),p=0;for(let d=0;d<i;d++)d!==s&&(u[p++]=o.shape[d]);let l=new Array(a),m=new Array(i).fill(0),c=o.shape.slice();c[s]=1;for(let d=0;d<l.length;d++)m[s]=d,l[d]=ra({inputs:{x:o},attrs:{begin:m,size:c},backend:e});return l.map(({dataId:d,dtype:f})=>({dataId:d,dtype:f,shape:u}))}var Lq={kernelName:ks,backendName:"wasm",kernelFunc:Uhe};function Whe(r){let{inputs:{x:t},backend:e}=r,n=e.makeOutput(t.shape,t.dtype);return e.typedArrayFromHeap(n).fill(0),n}var _q={kernelName:Ss,backendName:"wasm",kernelFunc:Whe};var Khe=[OV,zV,GV,WV,jV,YV,QV,e4,n4,s4,a4,i4,p4,l4,c4,f4,h4,g4,T4,I4,k4,v4,w4,N4,D4,R4,F4,P4,E4,L4,_4,B4,z4,U4,K4,H4,q4,j4,KV,Y4,Z4,Q4,J4,eH,tH,rH,nH,sH,aH,uH,lH,cH,dH,gH,bH,yH,xH,CH,SH,vH,wH,NH,DH,mk,FH,MH,LH,_H,$H,BH,OH,t4,GH,WH,VH,qH,jH,XH,ZH,JH,tq,rq,o4,oq,sq,iq,pq,mq,cq,dq,fq,hq,gq,yq,xq,Iq,Cq,kq,Sq,Aq,wq,Nq,Rq,Pq,Eq,HV,Lq,_q];for(let r of Khe)Ji(r);var e0=$();e0.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch{return!1}});e0.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(e0.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var c0=dm(Oq());var Xt={},Gq=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";Gq&&(o0=t0(),s0=o0.parentPort,s0.on("message",r=>onmessage({data:r})),u0=Yh(),Object.assign(global,{self:global,require:cm,Module:Xt,location:{href:__filename},Worker:o0.Worker,importScripts:function(r){(0,eval)(u0.readFileSync(r,"utf8"))},postMessage:function(r){s0.postMessage(r)},performance:global.performance||{now:function(){return Date.now()}}}));var o0,s0,u0,a0=!1,i0=[];function Vhe(){var r=Array.prototype.slice.call(arguments).join(" ");if(Gq){u0.writeSync(2,r+`
`);return}console.error(r)}function Hhe(){var r=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:r,threadId:Xt._pthread_self()})}var zq=Vhe;self.alert=Hhe;Xt.instantiateWasm=(r,t)=>{var e=new WebAssembly.Instance(Xt.wasmModule,r);return t(e),Xt.wasmModule=null,e.exports};self.onunhandledrejection=r=>{throw r.reason??r};self.onmessage=r=>{try{if(r.data.cmd==="load"){if(Xt.wasmModule=r.data.wasmModule,Xt.wasmMemory=r.data.wasmMemory,Xt.buffer=Xt.wasmMemory.buffer,Xt.ENVIRONMENT_IS_PTHREAD=!0,typeof r.data.urlOrBlob=="string")importScripts(r.data.urlOrBlob);else{var t=URL.createObjectURL(r.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}WasmBackendModuleThreadedSimd(Xt).then(function(e){Xt=e})}else if(r.data.cmd==="run"){Xt.__performance_now_clock_drift=performance.now()-r.data.time,Xt.__emscripten_thread_init(r.data.pthread_ptr,0,0,1),Xt.establishStackSpace(),Xt.PThread.receiveObjectTransfer(r.data),Xt.PThread.threadInitTLS(),a0||(i0.forEach(e=>{Xt.executeNotifiedProxyingQueue(e)}),i0=[],a0=!0);try{Xt.invokeEntryPoint(r.data.start_routine,r.data.arg)}catch(e){if(e!="unwind")if(e instanceof Xt.ExitStatus)Xt.keepRuntimeAlive()||Xt.__emscripten_thread_exit(e.status);else throw e}}else r.data.cmd==="cancel"?Xt._pthread_self()&&Xt.__emscripten_thread_exit(-1):r.data.target==="setimmediate"||(r.data.cmd==="processProxyingQueue"?a0?Xt.executeNotifiedProxyingQueue(r.data.queue):i0.push(r.data.queue):r.data.cmd&&(zq("worker.js received unknown command "+r.data.cmd),zq(r.data)))}catch(e){throw Xt.__emscripten_thread_crashed&&Xt.__emscripten_thread_crashed(),e}};var d0=dm(Uq());var Wq=c0.default||c0,qhe=d0.default||d0,Fg=class extends ao{constructor(e){super();this.wasm=e;this.dataIdNextNumber=1;this.wasm.tfjs.initWithThreadsCount(qq),m0=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new oa(this,Rn())}write(e,n,o){let s={id:this.dataIdNextNumber++};return this.move(s,e,n,o,1),s}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let n=y.now();return e(),{kernelMs:y.now()-n}}move(e,n,o,s,a){let i=this.dataIdNextNumber++;if(s==="string"){let m=n;this.dataIdMap.set(e,{id:i,stringBytes:m,shape:o,dtype:s,memoryOffset:null,refCount:a});return}let u=y.sizeFromShape(o),p=u*y.bytesPerElement(s),l=this.wasm._malloc(p);this.dataIdMap.set(e,{id:i,memoryOffset:l,shape:o,dtype:s,refCount:a}),this.wasm.tfjs.registerTensor(i,u,l),n!=null&&this.wasm.HEAPU8.set(new Uint8Array(n.buffer,n.byteOffset,p),l)}async read(e){return this.readSync(e)}readSync(e,n,o){let{memoryOffset:s,dtype:a,shape:i,stringBytes:u}=this.dataIdMap.get(e);if(a==="string")return(n==null||n===0)&&(o==null||o>=u.length)?u:u.slice(n,o);n=n||0,o=o||y.sizeFromShape(i);let p=y.bytesPerElement(a),l=this.wasm.HEAPU8.slice(s+n*p,s+o*p);return Xhe(l.buffer,a)}disposeData(e,n=!1){if(this.dataIdMap.has(e)){let o=this.dataIdMap.get(e);if(o.refCount--,!n&&o.refCount>0)return!1;this.wasm._free(o.memoryOffset),this.wasm.tfjs.disposeData(o.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let n=this.dataIdMap.get(e);n!=null&&n.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,n,o){let s;if(o==null)s=this.write(null,e,n);else{let a=this.dataIdNextNumber++;s={id:a},this.dataIdMap.set(s,{id:a,memoryOffset:o,shape:e,dtype:n,refCount:1});let i=y.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,i,o)}return{dataId:s,shape:e,dtype:n}}typedArrayFromHeap({shape:e,dtype:n,dataId:o}){let s=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(o),i=y.sizeFromShape(e);switch(n){case"float32":return new Float32Array(s,a,i);case"int32":return new Int32Array(s,a,i);case"bool":return new Uint8Array(s,a,i);default:throw new Error(`Unknown dtype ${n}`)}}};function jhe(r){return(t,e)=>(y.fetch(r,{credentials:"same-origin"}).then(n=>{n.ok||t.env.a(`failed to load wasm binary file at '${r}'`),n.arrayBuffer().then(o=>{WebAssembly.instantiate(o,t).then(s=>{e(s.instance,s.module)})})}),{})}function Kq(r,t,e){if(gk!=null)return gk;let n="tfjs-backend-wasm.wasm";return r&&t?n="tfjs-backend-wasm-threaded-simd.wasm":r&&(n="tfjs-backend-wasm-simd.wasm"),Dg!=null&&Dg[n]!=null?Dg[n]:e+n}async function Hq(){let[r,t]=await Promise.all([$().getAsync("WASM_HAS_SIMD_SUPPORT"),$().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((e,n)=>{let o={};o.locateFile=(i,u)=>{if(i.endsWith(".worker.js")){let p=(void 0).replace(/\n/g,"\\n"),l=new Blob([p],{type:"application/javascript"});return URL.createObjectURL(l)}return i.endsWith(".wasm")?Kq(r,t,Ng??u):u+i},f0&&(o.instantiateWasm=jhe(Kq(r,t,Ng??"")));let s=!1;o.onAbort=()=>{if(s||Rg)return;Rg=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let a;t&&r&&gk==null?(o.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+Wq.toString()],{type:"text/javascript"}),a=Wq(o)):a=qhe(o),a.then(i=>{s=!0,Rg=!1;let u=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",u,["number"]),dispose:i.cwrap("dispose",u,[])},e({wasm:i})}).catch(n)})}function Xhe(r,t){switch(t){case"float32":return new Float32Array(r);case"int32":return new Int32Array(r);case"bool":return new Uint8Array(r);default:throw new Error(`Unknown dtype ${t}`)}}var Yhe=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],gk=null,Ng=null,Dg={},Rg=!1,f0=!1;function Zhe(r,t=!1){if($v("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Rg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");gk=r,f0=t}function Qhe(r,t=!1){if(Rg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof r=="string")Ng=r;else{Dg=r;let e=Yhe.filter(n=>Dg[n]==null);if(e.length>0)throw new Error(`There were no entries found for the following binaries: ${e.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}f0=t}var qq=-1,m0=-1;function Jhe(r){qq=r}function ege(){if(m0===-1)throw new Error("WASM backend not initialized.");return m0}var tge="0.0.0";var rge=2;rp("wasm",async()=>{let{wasm:r}=await Hq();return new Fg(r)},rge);var _p="3.20.0-20220929",EJr={tfjs:_p,"tfjs-core":_p,"tfjs-data":_p,"tfjs-layers":_p,"tfjs-converter":_p,"tfjs-backend-cpu":_p,"tfjs-backend-webgl":_p,"tfjs-backend-wasm":_p};export{ls as Abs,Ei as Acos,Li as Acosh,gp as AdadeltaOptimizer,bp as AdagradOptimizer,yp as AdamOptimizer,Tp as AdamaxOptimizer,vn as Add,uo as AddN,_i as All,$i as Any,po as ArgMax,ai as ArgMin,Bi as Asin,Oi as Asinh,zi as Atan,ia as Atan2,Gi as Atanh,lo as AvgPool,Eu as AvgPool3D,Tm as AvgPool3DGrad,ym as AvgPoolGrad,Fg as BackendWasm,mo as BatchMatMul,ms as BatchToSpaceND,xm as Bincount,Im as BroadcastArgs,B0 as BroadcastTo,ET as Callback,Hy as CallbackList,zn as Cast,co as Ceil,Gn as ClipByValue,Lu as Complex,_u as ComplexAbs,cs as Concat,fo as Conv2D,Cm as Conv2DBackpropFilter,ho as Conv2DBackpropInput,$u as Conv3D,km as Conv3DBackpropFilterV2,Sm as Conv3DBackpropInputV2,go as Cos,bo as Cosh,pa as CropAndResize,ua as Cumprod,yo as Cumsum,jy as CustomCallback,oa as DataStorage,vm as DenseBincount,la as DepthToSpace,To as DepthwiseConv2dNative,Am as DepthwiseConv2dNativeBackpropFilter,wm as DepthwiseConv2dNativeBackpropInput,Nm as Diag,Bu as Dilation2D,th as Dilation2DBackpropFilter,eh as Dilation2DBackpropInput,sv as ENV,LT as EarlyStopping,Ou as Einsum,Io as Elu,Dm as EluGrad,Qf as Environment,ma as Equal,Ui as Erf,Co as Exp,ds as ExpandDims,ca as Expm1,Rm as FFT,ii as Fill,da as FlipLeftRight,ko as Floor,So as FloorDiv,Gp as FromPixels,vo as FusedBatchNorm,ws as FusedConv2D,Ns as FusedDepthwiseConv2D,Kl as GPGPUContext,fa as GatherNd,fs as GatherV2,Vh as GraphModel,ha as Greater,Ao as GreaterEqual,qy as History,Fm as IFFT,Un as Identity,zu as Imag,At as InputSpec,Wi as IsFinite,Ki as IsInf,ga as IsNan,ao as KernelBackend,Gu as LRN,Mm as LRNGrad,Dh as LayerVariable,jn as LayersModel,wo as LeakyRelu,ba as Less,ya as LessEqual,Pm as LinSpace,No as Log,Vi as Log1p,z0 as LogSoftmax,Ta as LogicalAnd,xa as LogicalNot,Hi as LogicalOr,O0 as LogicalXor,uge as LowerBound,Qd as MathBackendCPU,xf as MathBackendWebGL,Do as Max,Fo as MaxPool,Uu as MaxPool3D,Lm as MaxPool3DGrad,Em as MaxPoolGrad,_m as MaxPoolWithArgmax,Ro as Maximum,Po as Mean,Mo as Min,Eo as Minimum,Lo as MirrorPad,qi as Mod,xp as MomentumOptimizer,$m as Multinomial,_o as Multiply,hs as Neg,Ca as NonMaxSuppressionV3,ji as NonMaxSuppressionV4,ka as NonMaxSuppressionV5,Ia as NotEqual,Cv as OP_SCOPE_SUFFIX,Sa as OneHot,gs as OnesLike,Hr as Optimizer,za as OptimizerConstructors,bs as Pack,$o as PadV2,pge as Pool,Bo as Pow,Oo as Prelu,zo as Prod,Ip as RMSPropOptimizer,ss as RNN,Bm as RaggedGather,Om as RaggedTensorToTensor,ui as Range,l1 as Rank,Wu as Real,xo as RealDiv,va as Reciprocal,Oa as Reduction,Go as Relu,Ko as Relu6,ys as Reshape,Wo as ResizeBilinear,Gm as ResizeBilinearGrad,Uo as ResizeNearestNeighbor,zm as ResizeNearestNeighborGrad,Aa as Reverse,Ea as RotateWithOffset,wa as Round,Vo as Rsqrt,yi as SGDOptimizer,Na as ScatterNd,Um as SearchSorted,Ts as Select,Xi as Selu,Il as Sequential,qo as Sigmoid,Yi as Sign,Ho as Sin,Da as Sinh,xs as Slice,Yo as Softmax,Zi as Softplus,Is as SpaceToBatchND,Ku as SparseFillEmptyRows,Qi as SparseReshape,Vu as SparseSegmentMean,Hu as SparseSegmentSum,qu as SparseToDense,Cs as SplitV,jo as Sqrt,pi as Square,Zo as SquaredDifference,vs as Step,Ra as StridedSlice,li as StringNGrams,ju as StringSplit,Xu as StringToHashBucketFast,Qo as Sub,Xo as Sum,on as SymbolicTensor,Fa as Tan,Jo as Tanh,ze as Tensor,ht as TensorBuffer,An as Tile,Pa as TopK,Ma as Transform,wn as Transpose,Wm as Unique,ks as Unpack,Yu as UnsortedSegmentSum,lge as UpperBound,tu as Variable,Ff as WebGPUBackend,Ss as ZerosLike,As as _FusedMatMul,Ot as abs,d2 as acos,f2 as acosh,Y as add,h2 as addN,Pb as all,gh as any,op as argMax,g2 as argMin,b2 as asin,y2 as asinh,T2 as atan,x2 as atan2,I2 as atanh,rc as avgPool,Eb as avgPool3d,q1 as backend,C as backend_util,S2 as basicLSTMCell,ap as batchNorm,Lb as batchNorm2d,_b as batchNorm3d,$b as batchNorm4d,nc as batchToSpaceND,Bb as bincount,rZ as booleanMaskAsync,A2 as broadcastArgs,ip as broadcastTo,Ar as broadcast_util,wb as browser,Te as buffer,_ee as callbacks,te as cast,w2 as ceil,Ur as clipByValue,dn as clone,Nn as complex,lt as concat,Ob as concat1d,zb as concat2d,Gb as concat3d,Ub as concat4d,oE as constraints,Wb as conv1d,rs as conv2d,Kb as conv2dTranspose,Vb as conv3d,qb as conv3dTranspose,bge as copyRegisteredKernels,sc as cos,jb as cosh,kh as cosineWindow,bh as cumprod,Xb as cumsum,hn as customGrad,$L as data,N2 as denseBincount,$v as deprecationWarn,D2 as depthToSpace,up as depthwiseConv2d,Gee as deregisterOp,Ju as device_util,R2 as diag,F2 as dilation2d,pxe as disableDeprecationWarnings,Ne as dispose,lxe as disposeVariables,me as div,P2 as divNoNan,M2 as dot,rA as dropout,E2 as einsum,pp as elu,uxe as enableDebugMode,ixe as enableProdMode,nA as enclosingPowerOfTwo,Rn as engine,$ as env,Qr as equal,L2 as erf,B2 as euclideanNorm,hr as exp,Lr as expandDims,O2 as expm1,Zp as eye,hc as fft,Ps as fill,gxe as findBackend,bxe as findBackendFactory,lp as floor,Fb as floorDiv,Tz as forceHalfFloat,fp as fused,mp as gather,mZ as gatherND,Nb as gather_util,fxe as getBackend,uv as getGradient,nh as getKernel,ub as getKernelsForBackend,ege as getThreadsCount,iD as gpgpu_util,T8 as grad,x8 as grads,ur as greater,Es as greaterEqual,nl as ifft,np as imag,hp as image,fZ as inTopKAsync,sE as initializers,RA as input,Dn as io,hy as irfft,z2 as isFinite,G2 as isInf,U2 as isNaN,Bt as keep,yr as kernel_impls,_E as layers,ac as leakyRelu,Yb as less,Ls as lessEqual,sA as linalg,W2 as linspace,Ete as loadGraphModel,Lte as loadGraphModelSync,qJ as loadLayersModel,K2 as localResponseNormalization,Wr as log,ic as log1p,V2 as logSigmoid,Jb as logSoftmax,ey as logSumExp,en as logicalAnd,uc as logicalNot,ty as logicalOr,H2 as logicalXor,fQ as losses,q2 as lowerBound,Ge as matMul,X1 as math,fn as max,pc as maxPool,ny as maxPool3d,j2 as maxPoolWithArgmax,ns as maximum,Lt as mean,dh as memory,X2 as meshgrid,$E as metrics,Th as min,cp as minimum,Y2 as mirrorPad,Z2 as mod,VJ as model,BE as models,Qp as moments,oZ as movingAverage,M as mul,Q2 as multiRNNCell,J2 as multinomial,Qe as neg,Sh as nextFrame,Yp as norm,iu as notEqual,tp as oneHot,gr as ones,_r as onesLike,A as op,eR as outerProduct,Hn as pad,tR as pad1d,rR as pad2d,nR as pad3d,oR as pad4d,sR as pool,Vn as pow,mc as prelu,Ib as print,aR as prod,mxe as profile,iR as raggedGather,uR as raggedTensorToTensor,pR as rand,AR as randomGamma,tl as randomNormal,wR as randomStandardNormal,gi as randomUniform,dp as range,dxe as ready,su as real,NR as reciprocal,rp as registerBackend,jJ as registerCallbackConstructor,U0 as registerGradient,Ji as registerKernel,zee as registerOp,OE as regularizers,tn as relu,uy as relu6,hxe as removeBackend,L as reshape,wr as reverse,DR as reverse1d,RR as reverse2d,FR as reverse3d,PR as reverse4d,gc as rfft,py as round,ly as rsqrt,de as scalar,aZ as scatterND,fh as scatter_util,xh as searchSorted,my as selu,cy as separableConv2d,HJ as sequential,Q as serialization,J6 as setBackend,yxe as setPlatform,Jhe as setThreadsCount,Zhe as setWasmPath,Qhe as setWasmPaths,IN as setWebGLContext,MR as setdiff1dAsync,sf as shared,Pn as sigmoid,ER as sign,dQ as signal,dy as sin,fy as sinh,Be as slice,cc as slice1d,Ch as slice2d,dc as slice3d,rl as slice4d,Tt as slice_util,fc as softmax,au as softplus,lc as spaceToBatchND,hQ as sparse,pZ as sparseToDense,cQ as spectral,Nr as split,Et as sqrt,Ke as square,gy as squaredDifference,_s as squeeze,br as stack,bi as step,LR as stridedSlice,gQ as string,le as sub,fe as sum,ru as sumOutType,_R as tan,sp as tanh,vr as tensor,Kt as tensor1d,Ba as tensor2d,Ab as tensor3d,$R as tensor4d,BR as tensor5d,OR as tensor6d,Fs as tensor_util,c2 as test_util,z as tidy,Jr as tile,cxe as time,zR as topk,ul as train,Oe as transpose,bc as truncatedNormal,GR as unique,gge as unregisterGradient,hge as unregisterKernel,by as unsortedSegmentSum,Kr as unstack,Mt as upcastType,UR as upperBound,y as util,I8 as valueAndGrad,C8 as valueAndGrads,yy as variable,Zb as variableGrads,EJr as version,$te as version_converter,D5 as version_core,bre as version_cpu,Bh as version_layers,tge as version_wasm,lae as version_webgl,i8t as webgl,mf as webgl_util,LD as webgpu_util,zt as where,xy as whereAsync,xt as zeros,Ae as zerosLike};
/**
 * @license
 * Copyright 2009 The Closure Library Authors
 * Copyright 2020 Daniel Wirtz / The long.js Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/** @license See the LICENSE file. */
//# sourceMappingURL=tfjs.min.esm.js.map
